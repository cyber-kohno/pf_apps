{"version":3,"sources":["system/base/design/styles.tsx","App.tsx","reportWebVitals.ts","index.tsx","system/contents/dialog/confirmDialog.tsx","system/utils/form/formUtiil.tsx","system/redux/store/store.tsx","system/utils/systemConst.tsx","system/contents/dialog/globalDialog.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/utils/treeUtil.tsx","system/utils/form/validateUtil.tsx","system/utils/canvasUtil.tsx","system/contents/graphic/particle.tsx","system/contents/graphic/drawUtil.tsx","system/contents/graphic/vectorUtil.tsx","system/contents/create/factory/util/paramUtil.tsx","system/contents/create/preview/modulateBuilder.tsx","system/contents/create/preview/previewUtil.tsx","system/contents/create/factory/util/logicElementUtil.tsx","system/contents/create/preview/logicPreviewFrame.tsx","system/contents/create/factory/detail/logic/editorArgumentMng.tsx","system/contents/create/factory/detail/common/modifyOperations.tsx","system/contents/create/factory/detail/logic/editorParamItem.tsx","system/contents/create/factory/detail/logic/editorArgumentItem.tsx","system/contents/create/factory/detail/seed/editorSeedMng.tsx","system/contents/create/factory/detail/logic/editorLogicMng.tsx","system/contents/create/factory/detail/logic/editorLogicItem.tsx","system/contents/create/factory/detail/logic/editorBehiviorMng.tsx","system/contents/create/factory/detail/logic/editorVisualMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnector.tsx","system/contents/create/factory/dialog/sendTemplateDialog.tsx","system/contents/create/factory/detail/logic/editorSendManager.tsx","system/contents/create/factory/detail/logic/editorFieldMng.tsx","system/contents/create/factory/detail/logic/editorExtendMng.tsx","system/contents/create/factory/detail/seed/editorSeedItem.tsx","system/contents/create/factory/detail/seed/editorThumbnailMng.tsx","system/contents/create/factory/detail/seed/editorThumbnailItem.tsx","system/contents/create/factory/detail/seed/editorSampleItem.tsx","system/contents/create/factory/detail/seed/editorSampleMng.tsx","system/contents/create/factory/detail/seed/editorInterfaceManager.tsx","system/contents/create/factory/detail/seed/editorSeedArgMng.tsx","system/contents/create/factory/detail/seed/editorSeedArgItem.tsx","system/contents/create/factory/detail/seed/editorSeedSendMng.tsx","system/contents/create/factory/util/logicUtil.tsx","system/contents/create/factory/logicMainteTab.tsx","system/contents/create/manage/nameDefDialog.tsx","system/contents/create/manage/manageTab.tsx","system/contents/create/launcher/launcherTab.tsx","system/contents/create/createChannel.tsx","system/contents/entry/directView.tsx","system/contents/entry/directLogin.tsx","system/contents/home/publishFrame.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/dialog/accountFrame.tsx","system/contents/dialog/login/loginCreateAccount.tsx","system/contents/dialog/login/loginLogin.tsx","system/contents/dialog/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","system/utils/dataUtil.tsx"],"names":["FONT_SMALL","FONT_MIDIUM","CSS_LABEL","css","Styles","styled","div","App","useEffect","document","oncontextmenu","onkeydown","e","ctrlKey","includes","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","ConfirmDialog","props","useContext","GlobalContext","store","setStore","width","height","buttons","label","callback","system","dialog","_Frame","_Main","_Inner","message","split","map","msg","i","Message","isCenter","ButtonRecord","align","FormUtil","checkables","result","forEach","checkable","errors","length","type","isPassword","validaters","validates","dependency","dep","value","getErrors","validater","checker","push","errorType","setCheckable","_Record","isEnable","isVisible","textAlign","marginTop","marginBottom","undefined","titleLabel","_ItemnLabel","_ItemnInputBak","hasTitle","placeholder","onChange","target","readOnly","isReadOnly","jsx","labelWidth","_FixedLabel","useState","isNaN","setNaN","isNumber","concat","step","_ItemnInput","Number","valueAsNumber","onBlur","toString","marginLeft","headBlank","list","slice","unshift","labelText","_ItemCombobox","item","_Option","disabled","isDisabled","button","_Button","onClick","_Message","isLink","clickAction","_BorderText","title","_BorderPanel","innerJsx","_InfoDiv","color","textRecords","text","isRelation","isUse","_Switch","find","CSS_BUTTON_DISABLE","CSS_LABEL_MIDIUM","input","select","option","CSS_LABEL_SMALL","initialStore","isSplash","user","logicData","cloud","fileHandle","SystemConst","GloballDialog","_Blind","ChannelPane","activeNo","setActiveNo","_LabelList","tabElements","tab","index","name","icon","isActive","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","_Icon","_Label","ChannelContents","_Contents","TabbedPane","tabRecordNum","enable","TabLabel","_TabLabel","TabContents","TreeUtil","data","parent","depth","isOpen","children","node","parentNode","isDisable","focusNode","ref","useRef","buildElementNodeFromData","build","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","jsxList","useMemo","buildJsxRecords","element","spaceList","isCurrent","current","scrollWidth","tempNode","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","clickEvent","onDoubleClick","getLabelJsx","invalidate","_Wrap","str","min","max","checkIncludesChars","ch","charAt","indexOf","num","conditions","ValidateUtil","createURL","draw","canvas","createElement","ctx","getContext","toDataURL","CanvasUtil","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillStyle","fillText","adjust","measureText","save","WIDTH","AUTH_TEXT_WIDTH","SIZE","AUTH_TEXT_HEIGHT","rotate","Math","PI","char","fontRand","random","alphaRand","Particle","owner","pos","prevPos","vec","frame","limit","isLive","drawer","extend","update","x","xy","y","this","param","radiusBase","radius","self","flashAppearFrame","appearFrame","unitFrame","flashHideFrame","shrinkStartRate","start","floor","g","createRadialGradient","grads","rgba","convertRgbaFromColorCode","r","b","a","offset","convertColorCodeFromRgba","grad","addColorStop","globalAlpha","disappearStartRate","beginPath","arc","fill","code","parseInt","substring","rate","DrawUtil","VectorUtil","rad","len","syncFromXY","sqrt","atan2","syncFromRad","cos","sin","VisualParamType","BehaviorParamType","Object","values","SelfParamType","ExtendParamType","EffectParamType","ModulateParamType","ConstantType","ParamUtil","ModulateBuilder","extendList","decayRate","decayLimit","gravity","gravityLimit","SCREEN_WIDTH","SCREEN_HEIGHT","searchElement","origin","rootData","sends","createParticleRec","cur","valueMapList","ConstantValueMap","fieldMng","mngs","fields","field","paramItem","convertFormulaToValue","visualParams","params","behaviorParams","getVisualParam","convertParamsToValue","getBehaviorParam","LIMIT","POS_X","POS_Y","Vector","VEC_X","VEC_Y","VEC_RAD","VEC_LEN","connectMng","inherits","connect","connector","disable","logicItem","method","wrap","logicMng","defs","def","searchDependLogic","depend","addValueMap","FRAME","itrfldValueMap","loopCnt","extendParams","loopCntVal","LOOP_COUNT","convertParamsToBoolean","INVOKE","iterateValueMap","LOOP_ITERATE","sendValueMapList","Instance","DECAY_LIMIT","DECAY_RATE","GRAVITY_VAL","GRAVITY_LIMIT","RADIUS","colorR","COLOR_R","colorG","COLOR_G","colorB","COLOR_B","colorA","COLOR_A","disappearStart","DISAPPEAR_START","shrinkStart","SHRINK_START","FLASH_APPEAR_FRAME","FLASH_HIDE_FRAME","createGradDrawer","warpList","formula","v","valueMap","m","formulaStr","varCnt","formulaItems","convertFormulaToBoolean","RADIAN_ROUND","PreviewUtil","typeList","some","listName","getListParamName","wrapElement","insertChild","listPos","splice","newNode","createNode","swapOrder","size","ownerChildren","ownDataChildren","curNo","it","swapNode","swapData","LogicElementUtil","isHead","isTail","getIdentifyParamName","getNamableProps","syncTreeElementFromWrap","childWrap","createParamWrapList","paramDataList","createVisualParams","createBehaviorParams","seedMng","nameList","curWrap","nameParam","mngWrap","listParam","mng","logic","curLogicOwner","VisualParams","BehaviorParams","SelfParams","ExtendParams","EffectParams","ModulateParams","Constants","argMng","args","arg","prefix","console","log","mngType","getLogicItem","visualMng","behaviorMng","inhMng","inh","inhfld","getInnerWrap","LogicPreviewFrame","formList","setFormList","sceens","setSceens","frameCnt","setFrameCnt","tabIndex","setTabIndex","setCur","isBuild","setBuild","isPlay","setPlay","setTimeout","argMapList","argWrap","argItem","defval","formListJsx","form","FormRecord","TextField","checkRequired","buildLogicProps","seed","entry","getOrigin","par","isInputOK","buildTabJsx","_FormDiv","previewTabJsx","_CanvasDiv","_IMG","src","_ProgressDiv","clickX","pageX","clientRect","getBoundingClientRect","left","window","pageXOffset","_ProgressVal","onKeyDown","_CloseButton","img","EditorArgumentMng","FactoryTreeContext","setFocusNode","BorderPanel","addChild","ModifyOperations","isModify","setModify","removeSelf","isComplete","isCompleteCheck","checkableFields","mappingForm","firstRegist","modifyRegist","Level","EditorArgumentItem","setName","argType","setArgType","reservedList","getParamNameList","valueType","Component","syncArgumentAdd","prevName","syncArgumentName","checkStringLength","LogicUtil","checkFieldName","filter","Combobox","ArgTypes","refers","getArgumentRefers","syncArgumentDel","getSwapButtons","argName","searchVariableReferInFormula","varItem","logicNode","newName","syncFormula","syncParamName","runRec","conn","inhLogic","sendMng","connWrap","syncArgumentCallback","inhMngNode","getInnerNode","sendNode","newArgName","paramWrap","createParamWrap","delArgName","delIndex","EditorSeedMng","itemWrap","EditorLogicMng","EditorLogicItem","el","isConnect","hasArgNode","hasFieldNode","hasConnectNode","existNameList","getExistNameList","toggleElement","hasNode","removeChild","getDefaultLogicMngs","syncLogicName","Record","Switch","argumentNode","hasArgument","fieldNode","hasField","inheritNode","hasInherit","rootNode","logicMngNode","inherit","clone","JSON","parse","stringify","defaultName","getNumberingOnPrefixName","newWrap","getChildrenElementNode","getLocgicRefers","logicName","searchLogicReferInherit","id","EditorParamItem","setFormulaItems","varFormList","setVarFormList","isField","isCondition","inputType","level","FIELD","INITIAL","INHERIT_FIELD","INHERIT_EXTEND","INHERIT_SEND","argumentList","fieldKeys","parentType","getLogicNode","fieldName","Error","inhfldNode","fieldKeyList","paramNameList","addNum","delNum","parenthesisBalance","formJsxList","ParamInputTypes","getValueForm","isLastVar","isFormulaOK","hasFormError","varForm","getFormulaItem","syncFieldName","_Formula","isInvalid","_Var","_Sig","getFormulaJsx","getFieldRefers","mngNode","inheritWrap","span","EditorBehiviorMng","isVector","hasDecayParam","hasGravityParam","exchangeVectorMethod","flag","trueParamElements","falseParamElements","exchangeElements","toggleElements","paramElements","EditorVisualMng","drawMethod","THICKNESS","hasDisappearParam","hasShrinkParam","hasFlashParam","EditorInheritConnMng","EditorInheritConnector","identify","setIdentify","setMethod","setDepend","isCreate","logicList","idList","initConnectorNode","initSendParams","sendParamList","dependItem","getSendParamList","curParamList","isChange","ConnectTypes","dependLogic","COMPONENT_WIDTH","xName","setXName","yName","setYName","checkItems","argNode","behaviorNode","setParamValue","prpName","targetParam","paramList","xParam","yParam","SendTemplateDialog","EditorSendManager","isDepend","ConnectParentPosition","SetParentPosition","EditorFieldMng","EditorExtendMng","hasLoopParam","hasInvokeParam","EditorSeedItem","setEntry","permit","setPermit","logicNameList","items","samples","PermitTypes","EditorThumbnailMng","LogicTreeContext","hasSample","WND_SIZE","EditorThumbnailItem","seedWrap","setFrame","urls","setUrls","sample","getThumbnailURL","getSeedValueMap","sampleNo","argMap","sendParams","send","targetFrame","pictureJsxList","imgJsx","_SampleDiv","_SampleName","EditorSampleItem","paramForms","setParamForms","argInfoList","paramForm","checkNumberRange","EditorSampleMng","EditorInterfaceManager","EditorSeedArgMng","EditorSeedArgItem","setMin","setMax","setStep","setDefval","EditorSeedSendMng","COLOR_METHOD","COLOR_MNG","COLOR_LIST","COLOR_ITEM","COLOR_FIELD","isFocus","_Category","backgroundColor","_EditableValue","detailJsx","_Span","_Field","_Signature","_Detail","nameJsx","_ValueType","wrapNode","get","elementNode","getChildrenDataNode","createContext","LogicMainteTab","setInvalidate","masterNode","openPreviewDialog","n","_TreeDiv","_TreeHead","_TreeBody","Frame","getNodeDisplayJsx","_PropsDiv","_DetailDiv","_DetailHeader","_DetailHeaderLabel","getTypeName","Provider","setRootData","parentWrap","_DetailMainDiv","getDetailComponent","NameDefDialog","targetSeq","projects","p","seq","existNames","findProjectMaxSeq","maxSeq","newProject","source","lastmod","insertProject","targetItem","updateProjectName","registUpdate","DataUtil","sendQueryRequestToAPI","response","json","results","req","ManageTab","fcsListIdx","setFcsListIdx","listItemJsx","exist","_ListItem","_Status","isExist","_Name","hasData","incrRec","root","developCnt","privateCnt","releaseCnt","logicSize","logicCnt","_HeaderDiv","getInitialData","_BodyDiv","_LeftDiv","gZip","updateProjectSource","deleteProject","_ListDiv","unZip","_RighttDiv","loadFile","saveFile","FixedText","getSHA256Hash","LauncherTab","CreateChannel","SCORE_TAB_MARGIN","DirectView","getDecryptionedScoreSeq","hashKey","to","DirectLogin","getDecryptionedUserSeq","findUserInfoFromSeq","resList","PublishFrame","seedList","setSeedList","findAllReleaseProjectList","res","ownerId","setArtsCnt","seedListJsx","_CloudItem","_Owner","_CName","_CDate","_ListFrame","ReleaseNote","setJsx","fetch","record","note","_Header","version","date","HOME_USER_DIV_HEIGHT","HomeChannel","userCount","setUserCount","artsCnt","countUsers","cnt","_Left","_MessageRecord","_Right","MainFrame","basename","process","RouterManage","URLSearchParams","useLocation","search","path","exact","MAIN_FRAME_MARGIN","Splash","isSwitch","setSwitch","timerId","setTimerId","remove","clearTimeout","_Title","_NowLoading","_Copylight","fadeIn","keyframes","AccountFrame","userId","setUserId","oldPass","setOldPass","newPass","setNewPass","newPassConfirm","setNewPassConfirm","email","setEmail","userIdList","setUserIdList","emailList","setEmailList","loginProps","reloadInfo","password","findUserInfoList","info","hash","getHashedFromUserSeq","history","replaceState","userTabJsx","InputTextFormBak","checkAsciiChars","permitRegist","_Body","_Footer","passwordStr","updateUserInfo","LoginCreateAccount","isRegist","setRegist","setPassword","passwordConfirm","setPasswordConfirm","messageList","setMessageList","createAuthText","findUserIdList","authCollation","setAuthCollation","authInput","setAuthInput","authPicture","getAuthTextURL","InfoFrame","_AuthText","getNextUserSeq","nextSeq","MessageLink","LoginLogin","isForget","setForget","findUserInfoLogin","findUserProjectList","resPrjList","findUserInfoFromEmail","url","sendQueryRequestToMailAPI","from","subject","userSeq","LoginFrame","setCreate","logo","getLogoURL","_TypeSwitch","_LogoDiv","TotalHeader","authButtonJsx","_LoginButton","location","_UserName","isEntry","_Logo","_Menu","_Language","_MenuItem","TOTAL_HEADER_WIDTH","SystemEntry","_MainDiv","DB_SERVER_DOMAIN","APP_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","encode","Base64","hashedSeq","hashids","decode","getHashedFromScoreSeq","scoreSeq","hashedKey","mode","headers","Accept","body","createSendMailRequestInit","queryType","sql","databaseName","createQueryRequestInit","showOpenFilePicker","getFile","file","fileContents","plainData","createWritable","writable","write","close","showSaveFilePicker","types","accept","handle","catch","original","sha256","val","content","encodeURIComponent","zlib","gzipSync","buffer","Buffer","unzipSync","decodeURIComponent","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace"],"mappings":"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","file":"static/js/main.b0509e7d.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\n\nnamespace Styles {\n\n    export const FONT_SMALL = 16;\n    export const FONT_MIDIUM = 22;\n    export const FONT_LARGE = 32;\n\n    export const CSS_LABEL = css`\n        display: inline-block;\n        font-weight: 600;\n        text-align: center;\n        color: black;\n        box-sizing: border-box;\n    `;\n\n    export const CSS_LABEL_SMALL = css`\n        ${CSS_LABEL}\n        height: 22px;\n        font-size: ${FONT_SMALL}px;\n        line-height: 18px;\n    `;\n\n    export const CSS_LABEL_MIDIUM = css`\n        ${CSS_LABEL}\n        height: 30px;\n        font-size: ${FONT_MIDIUM}px;\n        line-height: 26px;\n    `;\n\n    export const CSS_BUTTON_DISABLE = css`\n        pointer-events: none;\n        opacity: 0.5;\n    `;\n}\nexport default Styles;\n\nexport const _WrapperFrame = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n`;\n\nexport const _Object = styled.div`\n    display: inline-block;\n`;\n\nexport const _Record = styled.div`\n    display: inline-block;\n    width: 100%;\n`;\n\nexport const _CSS_LABEL_SMALL = css`\n    display: inline-block;\n    height: 22px;\n    font-size: 18px;\n    font-weight: 600;\n    color: black;\n    line-height: 18px;\n`;\n\n\nexport const _CSS_LABEL_MIDIUM = css`\n    display: inline-block;\n    height: 30px;\n    font-size: ${Styles.FONT_MIDIUM}px;\n    font-weight: 600;\n    text-align: center;\n    color: black;\n    line-height: 24px;\n    box-sizing: border-box;\n`;\n\nexport const _CSS_DISABLE = css`\n    opacity: 0.6;\n    pointer-events: none;\n`;\n\n","import React, { useEffect } from 'react';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst REACT_APP_AUTH0_DOMAIN = 'dev-a0p0m4lr.us.auth0.com';\nconst REACT_APP_AUTH0_CLIENT_ID = 'ABaWpYVBZwTr3tkyxhq1kWh2YwT4epew';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import styled from \"styled-components\";\nimport FormUtil from \"../../utils/form/formUtiil\";\nimport { GlobalContext } from \"../entry/systemEntry\";\nimport { useContext } from \"react\";\n\nnamespace ConfirmDialog {\n\n    export const Component = (props: {\n        message: string;\n        width?: number;\n        height?: number;\n        buttons?: FormUtil.ButtonProps[];\n    }) => {\n\n        const {store,  setStore } = useContext(GlobalContext);\n\n        const width = props.width ?? 600;\n        const height = props.height ?? 150;\n        const buttons = props.buttons ?? [\n            {\n                label: 'OK',\n                callback: () => {\n                    store.system.dialog = null;\n                    setStore({...store});\n                }\n            }\n        ];\n\n        return (\n            <_Frame width={width} height={height}>\n                <_Main><_Inner>\n                    {props.message.split('\\n').map((msg, i) => {\n                        return <FormUtil.Message\n                            key={i}\n                            message={msg}\n                            isCenter\n                        />\n                    })}\n                </_Inner></_Main>\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={buttons} />\n            </_Frame>\n        );\n    }\n}\n\nexport default ConfirmDialog;\n\nconst _Frame = styled.div<{\n    width: number;\n    height: number;\n}>`\n    display: inline-block;\n    position: absolute;\n    z-index: 11;\n    top: calc(50% - ${props => props.height / 2}px);\n    left: calc(50% - ${props => props.width / 2}px);\n    width: ${props => props.width}px;\n    height: ${props => props.height}px;\n    background-color: #e7e7e7e2;\n    border: 1px solid #8f8f8f;\n    border-radius: 4px;\n    box-shadow: 10px 15px 15px #0000004b;\n`;\n\nconst _Main = styled.div<{}>`\n    display: inline-block;\n    width: 100%;\n    height: 110px;\n    display: flex;\n    align-items: center;\n\n`;\n\nconst _Inner = styled.div<{}>`\n    /* text-align: center; */\n    display: inline-block;\n    width: 100%;\n    /* background-color: #bb6868e1; */\n`;","import styled, { css } from \"styled-components\";\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\nimport ValidateUtil from \"./validateUtil\";\nimport { useEffect, useState } from \"react\";\n\nnamespace FormUtil {\n\n    export type CheckableValue = {\n        value: string;\n        errors: ValidateUtil.ErrorType[];\n    }\n\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\n        let result = true;\n        checkables.forEach(checkable => {\n            if (checkable.errors.length > 0) {\n                result = false;\n                return 1;\n            }\n        });\n        return result;\n    }\n\n    export const InputTextFormBak = (props: {\n        titleLabel?: string;\n        checkable: CheckableValue;\n        setCheckable: (value: CheckableValue) => void;\n        isEnable?: boolean;\n        placeholder?: string;\n        isCenter?: boolean;\n        width?: number;\n        isPassword?: boolean;\n        validates?: ValidateUtil.Validate[];\n        dependency?: CheckableValue[];\n        marginTop?: number;\n        isReadOnly?: boolean;\n        marginBottom?: number;\n    }) => {\n        const type = props.isPassword ?? false ? 'password' : 'text';\n\n        const validaters = props.validates ?? [];\n        const errors = props.checkable.errors;\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\n\n        const getErrors = (value: string) => {\n            const errors: ValidateUtil.ErrorType[] = [];\n            validaters.forEach(validater => {\n                if (!validater.checker(value)) {\n                    errors.push(validater.errorType);\n                }\n            });\n            return errors;\n        }\n        useEffect(() => {\n            props.checkable.errors = getErrors(props.checkable.value);\n            props.setCheckable({ ...props.checkable });\n        }, dependency);\n        return (\n            <_Record\n                isEnable={props.isEnable ?? true}\n                isVisible={true}\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\n                marginTop={props.marginTop ?? 0}\n                marginBottom={props.marginBottom ?? 0}\n            >\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\n                <_ItemnInputBak\n                    type={type}\n                    value={props.checkable.value}\n                    hasTitle={props.titleLabel != undefined}\n                    width={props.width}\n                    isCenter={props.isCenter ?? false}\n                    placeholder={props.placeholder}\n                    onChange={(e) => {\n                        const value = e.target.value;\n                        props.checkable.value = value;\n                        props.checkable.errors = getErrors(value);\n                        props.setCheckable({ ...props.checkable });\n                    }}\n                    errorType={errors.length === 0 ? undefined : errors[0]}\n                    readOnly={props.isReadOnly}\n                />\n            </_Record>\n        );\n    }\n\n\n    export const Record = (props: {\n        isEnable?: boolean;\n        textAlign?: 'left' | 'center' | 'right';\n        marginTop?: number;\n        marginBottom?: number;\n        jsx: JSX.Element;\n    }) => {\n        return (\n            <_Record\n                isEnable={props.isEnable ?? true}\n                isVisible={true}\n                textAlign={props.textAlign ?? 'left'}\n                marginTop={props.marginTop ?? 0}\n                marginBottom={props.marginBottom ?? 0}\n            >\n                {props.jsx}\n            </_Record>\n        );\n    }\n\n    export const FormRecord = (props: {\n        titleLabel?: string;\n        labelWidth?: number;\n        isEnable?: boolean;\n        isVisible?: boolean;\n        textAlign?: 'left' | 'center' | 'right';\n        marginTop?: number;\n        marginBottom?: number;\n        jsx: JSX.Element;\n    }) => {\n        return (\n            <_Record\n                isEnable={props.isEnable ?? true}\n                isVisible={props.isVisible ?? true}\n                textAlign={props.textAlign ?? 'left'}\n                marginTop={props.marginTop ?? 0}\n                marginBottom={props.marginBottom ?? 0}\n            >\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={props.labelWidth}>{props.titleLabel}</_ItemnLabel>}\n                {props.jsx}\n            </_Record>\n        );\n    }\n\n    export const FixedText = (props: {\n        value: string;\n        isEnable?: boolean;\n        width?: number;\n        marginLeft?: number;\n    }) => {\n\n        return (\n            <_FixedLabel width={props.width}>{props.value}</_FixedLabel>\n        );\n    }\n\n    export const TextField = (props: {\n        checkable: CheckableValue;\n        setCheckable: (value: CheckableValue) => void;\n        isEnable?: boolean;\n        placeholder?: string;\n        width?: number;\n        isPassword?: boolean;\n        validates?: ValidateUtil.Validate[];\n        dependency?: CheckableValue[];\n        isReadOnly?: boolean;\n        isNumber?: boolean;\n        marginLeft?: number;\n        step?: number;\n    }) => {\n        const [isNaN, setNaN] = useState(false);\n\n        useEffect(() => {\n            if (props.checkable.value === ' ') {\n                props.checkable.value = '';\n                props.setCheckable({ ...props.checkable });\n            }\n        }, [props.checkable.value]);\n\n        let type = props.isPassword ?? false ? 'password' : 'text';\n        if (props.isNumber ?? false) {\n            type = 'number';\n        }\n\n        const validaters = props.validates ?? [];\n        const errors = props.checkable.errors;\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\n\n        const getErrors = (value: string) => {\n            const errors: ValidateUtil.ErrorType[] = [];\n            validaters.forEach(validater => {\n                if (!validater.checker(value)) {\n                    errors.push(validater.errorType);\n                }\n            });\n            return errors;\n        }\n        useEffect(() => {\n            props.checkable.errors = getErrors(props.checkable.value);\n            props.setCheckable({ ...props.checkable });\n        }, dependency.concat(props.checkable.value));\n\n        const value = props.checkable.value;\n        const step = props.step ?? 1;\n\n        return (\n            <_ItemnInput\n                type={type}\n                value={value}\n                width={props.width ?? 100}\n                placeholder={props.placeholder}\n                step={step}\n                onChange={(e) => {\n                    // console.log(e.target.valueAsNumber);\n                    props.checkable.value = e.target.value;\n                    props.setCheckable({ ...props.checkable });\n                    if (type === 'number') {\n                        setNaN(Number.isNaN(e.target.valueAsNumber));\n                    }\n                }}\n                onBlur={() => {\n                    if (type === 'number') {\n                        if (isNaN) props.checkable.value = ' ';\n                        else props.checkable.value = Number(value).toString();\n                        // console.log(`[${props.checkable.value}]`);\n                        props.setCheckable({ ...props.checkable });\n                    }\n                }}\n                errorType={errors.length === 0 ? undefined : errors[0]}\n                readOnly={props.isReadOnly}\n                marginLeft={props.marginLeft}\n            />\n        );\n    }\n\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\n\n    export const Combobox = (props: {\n        list: ComboboxItemProps[];\n        headBlank?: boolean;\n        checkable: CheckableValue;\n        setCheckable: (value: CheckableValue) => void;\n        isEnabled?: boolean;\n        placeholder?: string;\n        width?: number;\n        validates?: ValidateUtil.Validate[];\n        dependency?: CheckableValue[];\n        isReadOnly?: boolean;\n        marginLeft?: number;\n    }) => {\n        const validaters = props.validates ?? [];\n        const errors = props.checkable.errors;\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\n        const headBlank = props.headBlank ?? false;\n        const list = props.list.slice();\n        if (headBlank) list.unshift({ value: '', labelText: '' });\n\n        const getErrors = (value: string) => {\n            const errors: ValidateUtil.ErrorType[] = [];\n            validaters.forEach(validater => {\n                if (!validater.checker(value)) {\n                    errors.push(validater.errorType);\n                }\n            });\n            return errors;\n        }\n\n        useEffect(() => {\n            // console.log('value: ' + props.checkable.value);\n            props.checkable.errors = getErrors(props.checkable.value);\n            props.setCheckable({ ...props.checkable });\n        }, dependency.concat(props.checkable.value));\n\n        return (\n            <_ItemCombobox\n                value={props.checkable.value}\n                width={props.width ?? 100}\n                placeholder={props.placeholder}\n                onChange={(e) => {\n                    const value = e.target.value;\n                    props.checkable.value = value;\n                    // props.checkable.errors = getErrors(value);\n                    props.setCheckable({ ...props.checkable });\n\n                }}\n                errorType={errors.length === 0 ? undefined : errors[0]}\n                readOnly={props.isReadOnly}\n                marginLeft={props.marginLeft}\n            >{list.map((item, i) => {\n                return (\n                    <_Option key={i}\n                        value={item.value}\n                        disabled={item.isDisabled ?? false}\n                        isDisabled={item.isDisabled ?? false}\n                    >{item.labelText}</_Option>\n                );\n            })}</_ItemCombobox>\n        );\n    }\n\n    export type ButtonProps = {\n        label: string;\n        isEnable?: boolean;\n        width?: number;\n        callback: () => void;\n    }\n\n    export const ButtonRecord = (props: {\n        buttons: ButtonProps[],\n        align?: 'left' | 'center' | 'right';\n        marginTop?: number;\n        marginBottom?: number;\n    }) => {\n        const align = props.align ?? 'right';\n        return (\n            <_Record\n                isEnable={true}\n                isVisible={true}\n                textAlign={align}\n                marginTop={props.marginTop ?? 0}\n                marginBottom={props.marginBottom ?? 0}\n            >\n                {props.buttons.map((button, i) => {\n                    return (\n                        <_Button\n                            key={i}\n                            isCenter={align === 'center'}\n                            isEnable={button.isEnable ?? true}\n                            width={button.width}\n                            onClick={button.callback}\n                        >{button.label}</_Button>\n                    );\n                })}\n            </_Record>\n        );\n    }\n\n    export const Message = (props: {\n        message: string,\n        isCenter?: boolean;\n        marginTop?: number;\n        marginBottom?: number;\n    }) => {\n        return (\n            <_Record\n                isEnable={true}\n                isVisible={true}\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\n                marginTop={props.marginTop ?? 0}\n                marginBottom={props.marginBottom ?? 0}\n            >\n                <_Message\n                    isCenter={props.isCenter ?? false}\n                >{props.message}</_Message>\n            </_Record>\n        );\n    }\n\n    export const MessageLink = (props: {\n        message: string,\n        isCenter?: boolean;\n        clickAction: () => void;\n        marginTop?: number;\n        marginBottom?: number;\n    }) => {\n        return (\n            <_Record\n                isEnable={true}\n                isVisible={true}\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\n                marginTop={props.marginTop ?? 0}\n                marginBottom={props.marginBottom ?? 0}\n            >\n                <_Message\n                    isLink={true}\n                    onClick={props.clickAction}\n                    isCenter={props.isCenter ?? false}\n                >{props.message}</_Message>\n            </_Record>\n        );\n    }\n\n    export const BorderPanel = (props: {\n        title: string;\n        isEnable?: boolean;\n        innerJsx: JSX.Element;\n    }) => {\n        // const title = props.title ?? 'title pl';\n        return (<>\n            <_BorderText>{props.title}</_BorderText>\n            <_BorderPanel isEnable={props.isEnable ?? true}>{props.innerJsx}</_BorderPanel>\n        </>);\n    }\n\n    export const InfoFrame = (props: {\n        height?: number;\n        textRecords: string[];\n    }) => {\n        const height = props.height ?? 70;\n        const color = '#1a9900';\n        return (<>\n            <_InfoDiv height={height} color={color}>\n                {props.textRecords.map((text, i) => {\n                    return <span key={i}>{text}<br /></span>;\n                })}\n            </_InfoDiv>\n        </>);\n    };\n\n    export const Switch = (props: {\n        label: string;\n        isUse: boolean;\n        isEnable?: boolean;\n        width?: number;\n        isRelation?: boolean;\n        callback: () => void;\n    }) => {\n        const isRelation = props.isRelation ?? false;\n        const callback = isRelation && props.isUse ? () => { } : props.callback;\n        return (\n            <_Switch\n                isRelation={isRelation}\n                isUse={props.isUse}\n                isEnable={props.isEnable ?? true}\n                width={props.width}\n                onClick={callback}\n            >{props.label}</_Switch>\n        );\n    }\n\n    export const checkItems = (list: CheckableValue[]) => {\n        return list.find(item => item.errors.length > 0) == undefined;\n    }\n}\n\nexport default FormUtil;\n\n\nconst _Record = styled.div<{\n    isEnable: boolean;\n    isVisible: boolean;\n    textAlign: 'left' | 'center' | 'right';\n    marginTop: number;\n    marginBottom: number;\n}>`\n    display: inline-block;\n    ${props => props.isVisible ? '' : css`\n        display: none;\n    `}\n    width: 100%;\n    height: 40px;\n    margin-top: ${props => props.marginTop}px;\n    margin-bottom: ${props => props.marginBottom}px;\n    /* background-color: #b3b4c4; */\n    /* border: 1px solid #000; */\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    text-align: ${props => props.textAlign};\n`;\n\nconst _ItemnLabel = styled.div<{\n    labelWidth?: number;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: ${props => props.labelWidth ?? 140}px;\n    ${Styles.CSS_LABEL_MIDIUM}\n    color: #585858;\n    border: solid 1px #7a7a7abf;\n    box-sizing: border-box;\n    /* background-color: #85a2c5; */\n    background: linear-gradient(to bottom, #c3c3c3fc, #d8d8d8, #c3c3c3fc);\n    border-radius: 4px;\n    text-align: center;\n    vertical-align: top;\n    margin: 5px 4px 0 4px;\n`;\n\nconst _FixedLabel = styled.div<{\n    width?: number;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    ${Styles.CSS_LABEL_MIDIUM}\n    color: #0c0e86;\n    box-sizing: border-box;\n    background-color: #85a2c51a;\n    text-align: left;\n    vertical-align: top;\n    margin: 5px 4px 0 4px;\n    overflow-x: hidden;\n    ${props => props.width == undefined ? '' : css`\n        width: ${props.width}px;\n    `}\n`;\n\nconst _ItemnInputBak = styled.input<{\n    readOnly?: boolean;\n    isCenter: boolean;\n    hasTitle: boolean;\n    width?: number;\n    errorType?: ValidateUtil.ErrorType;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    ${props => !props.hasTitle ? css`\n    ` : css`\n        width: calc(100% - 152px);\n    `}\n    ${props => props.width == undefined ? '' : css`\n        width: ${props.width}px;\n    `}\n    margin-top: 2px;\n    font-size: 24px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #3d3d3d;\n    border: solid 1px #959595;\n    border-radius: 4px;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: ${props => {\n        if (props.errorType == undefined) return '#ececec';\n        else {\n            switch (props.errorType) {\n                case 'required': return '#dbd7b3';\n                case 'length': return '#dbb3b3';\n                case 'value': return '#b3b3db';\n                case 'relation': return '#b3dbb3';\n            }\n        }\n    }};\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n    /* ${props => !props.isCenter ? css`\n        margin-left: 4px;\n    ` : css``\n    } */\n    ${props => !props.readOnly ? '' : css`\n        color: #020075;\n        /* border: none; */\n        outline: none;\n        background-color: transparent;\n    `}\n    ::placeholder {\n        color: #00000050;\n        font-style: italic;\n    }\n`;\n\nconst _ItemnInput = styled.input<{\n    readOnly?: boolean;\n    width?: number;\n    errorType?: ValidateUtil.ErrorType;\n    marginLeft?: number;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: ${props => props.width}px;\n    margin-top: 2px;\n    margin-left: ${props => props.marginLeft ?? 0}px;\n    font-size: 24px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #3d3d3d;\n    border: solid 1px #959595;\n    border-radius: 4px;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: ${props => {\n        if (props.errorType == undefined) return '#ececec';\n        else {\n            switch (props.errorType) {\n                case 'required': return '#dbd7b3';\n                case 'length': return '#dbb3b3';\n                case 'value': return '#b3b3db';\n                case 'relation': return '#b3dbb3';\n            }\n        }\n    }};\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n    ${props => !props.readOnly ? '' : css`\n        color: #020075;\n        /* border: none; */\n        outline: none;\n        background-color: transparent;\n    `}\n    ::placeholder {\n        color: #00000050;\n        font-style: italic;\n    }\n`;\n\nconst _ItemCombobox = styled.select<{\n    readOnly?: boolean;\n    width?: number;\n    errorType?: ValidateUtil.ErrorType;\n    marginLeft?: number;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: ${props => props.width}px;\n    margin-top: 2px;\n    margin-left: ${props => props.marginLeft ?? 0}px;\n    font-size: 24px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #3d3d3d;\n    border: solid 1px #959595;\n    border-radius: 4px;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: ${props => {\n        if (props.errorType == undefined) return '#ececec';\n        else {\n            switch (props.errorType) {\n                case 'required': return '#dbd7b3';\n                case 'length': return '#dbb3b3';\n                case 'value': return '#b3b3db';\n                case 'relation': return '#b3dbb3';\n            }\n        }\n    }};\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n    ${props => !props.readOnly ? '' : css`\n        color: #020075;\n        /* border: none; */\n        outline: none;\n        background-color: transparent;\n        pointer-events: none;\n    `}\n    ::placeholder {\n        color: #00000050;\n        font-style: italic;\n    }\n`;\n\nconst _Option = styled.option<{\n    isDisabled: boolean;\n}>`\n    ${props => !props.isDisabled ? '' : css`\n        color: #0000004b;\n    `}\n`;\n\nconst _Message = styled.div<{\n    isLink?: boolean;\n    isCenter: boolean;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    margin-top: 2px;\n    font-size: ${Styles.FONT_MIDIUM}px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #002c52;\n    border-radius: 4px;\n    padding: 0 5px;\n    box-sizing: border-box;\n    /* background-color: #d37878; */\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n    ${props => !props.isCenter ? css`\n        margin-left: 4px;\n    ` : css``\n    }\n    ${props => !props.isLink ? '' : css`\n        color: #0459a3;\n        user-select: none;\n        text-decoration: underline;\n        &:hover {\n            color: #68a4d8;\n        }\n    `}\n`;\n\nconst _ButtonsDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 40px;\n    /* background-color: #888888; */\n    box-sizing: border-box;\n    text-align: left;\n    white-space: nowrap;\n`;\n\nconst _Button = styled.div<{\n    isEnable: boolean;\n    isCenter: boolean;\n    width?: number;\n}>`\n    ${Styles.CSS_LABEL_MIDIUM}\n    ${props => props.width == undefined ? css`\n        padding: 0 40px;\n    ` : css`\n        width: ${props.width}px;\n    `}\n    /* line-height: 25px; */\n    box-sizing: border-box;\n    /* background-color: #a8a8a8; */\n    background: linear-gradient(to bottom, #cdcdcd, #ebebeb, #cdcdcd);\n    border: 1px solid #747474;\n    color: #515151;\n    border-radius: 4px;\n    margin: 5px 0 0 4px;\n    ${props => !props.isCenter ? css`\n        margin-left: 4px;\n    ` : css``\n    }\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    &:hover {\n        /* background-color: #98bfc2; */\n        background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\n    }\n`;\n\nconst _Switch = styled.div<{\n    isUse: boolean;\n    isEnable: boolean;\n    width?: number;\n    isRelation: boolean;\n}>`\n    ${Styles.CSS_LABEL_MIDIUM}\n    ${props => props.width == undefined ? css`\n        padding: 0 40px;\n    ` : css`\n        width: ${props.width}px;\n    `}\n    /* line-height: 25px; */\n    box-sizing: border-box;\n    background-color: #a8a8a8;\n    color: #515151;\n    border: 1px solid #747474;\n    ${props => !props.isRelation ? css<{ isUse: boolean }>`\n        background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\n    ` : css<{ isUse: boolean }>`\n        background-color: ${props => !props.isUse ? '#ddc1d979' : '#d898b3'};\n        color: ${props => !props.isUse ? '#515151' : '#9c2626'};\n    `}\n    border-radius: 4px;\n    margin: 5px 0 0 4px;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    &:hover {\n        ${props => !props.isRelation ? css<{ isUse: boolean }>`\n            background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\n        ` : css<{ isUse: boolean }>`\n            background-color: ${props => !props.isUse ? '#d3a1cb79' : '#d898b3'};\n            color: ${props => !props.isUse ? '#515151' : '#9c2626'};\n        `}\n    }\n`;\n\nconst _BorderText = styled.div<{\n}>`\n    ${Styles.CSS_LABEL_SMALL}\n    color: #990000;\n    /* background-color: #0a0a0a40; */\n    font-style: italic;\n    margin: 4px 0 0 8px;\n`;\nconst _BorderPanel = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    margin: 0 0 0 6px;\n    padding: 4px;\n    width: calc(100% - 12px);\n    background-color: #dcddce;\n    border: 1px solid #000;\n    box-sizing: border-box;\n    border-radius: 4px;\n    text-align: left;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n`;\n\nconst _InfoDiv = styled.div<{\n    height: number;\n    color: string;\n}>`\n    margin: 4px 0 0 0;\n    display: inline-block;\n    background-color: #e7e5e561;\n    border: solid 1px #949494;\n    width: 100%;\n    height: ${props => props.height}px;\n    padding: 2px;\n    box-sizing: border-box;\n    text-align: left;\n    font-size: ${Styles.FONT_SMALL}px;\n    color: ${props => props.color};\n    overflow-y: auto;\n`;","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\nimport StoreCloud from \"./storeCloud\";\nimport StoreSystem from \"./storeSystem\";\n\n/**\n * システムで使用するステート群\n */\nexport type Store = {\n    system: StoreSystem.Param;\n    logicData: LogicUtil.WrapElement | null;\n    cloud: StoreCloud.Props | null;\n    fileHandle: FileSystemFileHandle | null\n}\n\nexport const initialStore: Store = {\n    system: {\n        isSplash: false,\n        user: null,\n        dialog: null,\n    },\n    logicData: null,\n    cloud: null,\n    fileHandle: null,\n}","\nnamespace SystemConst {\n    export const AUTH_TEXT_WIDTH = 350;\n    export const AUTH_TEXT_HEIGHT = 70;\n}\n\nexport default SystemConst;\n\nexport const APP_MIN_WIDTH = 800;\nexport const APP_MIN_HEIGHT = 600;\n\nexport const TOTAL_HEADER_WIDTH = 44;\n\nexport const MAIN_FRAME_MARGIN = 15;\nexport const SCORE_TAB_MARGIN = 8;\n\nexport const BUTTON_SMALL_HEIGHT = 18;\nexport const BUTTON_MIDIUM_HEIGHT = 28;\nexport const BUTTON_LARGE_HEIGHT = 34;\n\n\n// ホームチャンネル\nexport const HOME_USER_DIV_HEIGHT = 400;\n\n// ハーモナイズタブ\n\nexport const FIRST_CHORD_INDEX = 3;\n\nexport const HARMONIZE_RIGHT_WIDTH = 220;\nexport const HARMONIZE_HEAD_WIDTH = 35;\nexport const HARMONIZE_FOOT_WIDTH = 80;\nexport const HARMONIZE_STRUCT_WIDTH = 380;\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\n\nexport const ELEMENT_HEIGHT = 134;\nexport const ELEMENT_HEAD_WIDTH = 15;\nexport const ELEMENT_FOOT_WIDTH = 60;\nexport const ELEMENT_SIDE_PADDING = 8;\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\nexport const ELEMENT_NOTE_PADDING_SID = 30;\nexport const ELEMENT_POS_INFO_WIDTH = 50;\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\n\nexport const TIMELINE_BEAT_WIDTH = 80;\n\n\nexport const TUNE_HEADER_WIDTH = 80;\nexport const TUNE_TIMELINE_WIDTH = 70;\nexport const TUNE_PITCH_WIDTH = 100;\nexport const TUNE_PITCH_HEIGHT = 30;\n\n\n\nexport const PATTERN_OPERATION_HEIGHT = 30;\nexport const PATTERN_HEADER_HEIGHT = 50;\nexport const PATTERN_BODY_HEIGHT = 240;\nexport const PATTERN_FOOTER_HEIGHT = 50;\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\n\n\nexport const NOTES_1BAR_WIDTH = 480;","import { useContext, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { GlobalContext } from \"../entry/systemEntry\";\n\n\nconst GloballDialog = () => {\n\n    const { store, setStore } = useContext(GlobalContext);\n\n    const dialog = store.system.dialog;\n\n    if (dialog == null) return <></>;\n    return (<>\n        <_Blind onClick={() => {\n            store.system.dialog = null;\n            setStore({...store});\n        }} />\n        {dialog}\n    </>);\n}\n\nexport default GloballDialog;\n\nconst _Blind = styled.div<{\n}>`\n    display: block;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-color: #000329a2;\n    z-index: 10;\n    text-align: center;\n`;\n","import { useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../design/styles\";\n\ntype ChannelPaneProps = {\n    activeNo: number;\n    tabElements: ChannelElements[];\n    selectTabIndex?: Function;\n}\n\ntype ChannelElements = {\n    name: string;\n    icon: JSX.Element;\n    isEnable: boolean;\n    cont: JSX.Element;\n}\n\nexport const ChannelPane = (props: ChannelPaneProps) => {\n    const [activeNo, setActiveNo] = useState(props.activeNo);\n\n    // タブ押下時の処理\n    const selectTabIndex = (index: number) => {\n        if (props.selectTabIndex != undefined) {\n            props.selectTabIndex(index);\n        } else {\n            setActiveNo(index);\n        }\n    };\n\n    useEffect(() => {\n        setActiveNo(props.activeNo);\n    }, [props.activeNo]);\n\n    return (\n        <>\n            <_LabelList>\n                {\n                    props.tabElements.map((tab, index) => {\n                        return <ChannelLabel\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\n                            selectTab={() => selectTabIndex(index)}\n                        />\n                    })\n                }\n            </_LabelList>\n            <_ContList>\n                {\n                    props.tabElements.map((tab, index) => {\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\n                    })\n                }\n            </_ContList>\n        </>\n    );\n}\n\nconst ChannelLabel = (props: {\n    name: string;\n    icon: JSX.Element;\n    isEnable: boolean;\n    isActive: boolean;\n    selectTab: Function;\n}) => {\n    return (\n        <_Item\n            isEnable={props.isEnable}\n            isActive={props.isActive}\n            onClick={() => props.selectTab()}\n        >\n            <_Icon>{props.icon}</_Icon>\n            <_Label>{props.name}</_Label>\n        </_Item>\n    );\n}\n\nconst ChannelContents = (props: {\n    isActive: boolean;\n    cont: JSX.Element;\n}) => {\n    return (\n        <_Contents isActive={props.isActive}>\n            {props.cont}\n        </_Contents>\n    );\n}\n\nconst _LabelList = styled.div`\n    display: inline-block;\n    width: 100px;\n    margin-right: 5px;\n    height: 100%;\n    background-color: #b9b9b9;\n    border: 1px solid #707070;\n    box-sizing: border-box;\n    border-radius: 10px 0 0 10px;\n    vertical-align: top;\n    box-shadow: 1px 2px 12px #aaaaaa;\n`;\nconst _ContList = styled.div`\n    display: inline-block;\n    background-color: #b9b9b9;\n    border: 1px solid #707070;\n    box-sizing: border-box;\n    width: calc(100% - 105px);\n    height: 100%;\n    border-radius: 0 6px 6px 0;\n    box-shadow: 1px 2px 12px #aaaaaa;\n`;\n\nconst _Contents = styled.div<{\n    isActive: boolean;\n}>`\n    /* margin: 3px 0 0 3px;\n    width: calc(100% - 6px);\n    height: calc(100% - 6px); */\n    width: 100%;\n    height: 100%;\n    /* background-color: #ece6e6; */\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\n`;\n\nconst _Item = styled.div<{\n    isEnable: boolean;\n    isActive: boolean;\n}>`\n    display: inline-block;\n    width: 90px;\n    height: 90px;\n    margin: 5px 0 0 5px;\n    border-radius: 10px;\n    ${props => {\n        if (props.isActive) {\n            return css`\n                background-color: #e4e3e1;\n                border: 1px solid #949494\n            `;\n        } else {\n            return css`\n                background-color: #d1d1d1;\n                opacity: 0.8;\n            `;\n        }\n    }}\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    transition: background-color 500ms;\n    & *{\n        transition: color 150ms;\n    }\n    // アクティブじゃない時だけhover要素を付加\n    ${props => props.isActive ? '' : css`\n        &:hover {\n            & *{\n                transition: color 150ms;\n                /* background-color: #e2d6d6; */\n                text-shadow: 1px 2px 22px #f7f7f7ea;\n                color: #a7a7a7;\n            }\n        }\n    `}\n`;\n\nconst IconHover = css`\n    text-shadow: 1px 2px 22px #f7f7f7cf;\n    color: #a3a3a3;\n`;\n\nconst _Icon = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 60px;\n    /* background-color: #df828221; */\n    font-size: 50px;\n    color: #757575;\n    text-align: center;\n    padding-top: 5px;\n    box-sizing: border-box;\n`;\n\nconst _Label = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 30px;\n    /* background-color: #8482df20; */\n    font-size: 20px;\n    font-weight: 600;\n    color: #757575;\n    text-align: center;\n`;","import { useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\ntype TabbedPaneProps = {\n    activeNo: number;\n    tabElements: TabElements[];\n    selectTabIndex?: Function;\n    tabRecordNum?: number;\n}\n\ntype TabElements = {\n    name: string;\n    enable: boolean;\n    cont: JSX.Element;\n}\n\nexport const TabbedPane = (props: TabbedPaneProps) => {\n    const [activeNo, setActiveNo] = useState(props.activeNo);\n\n    // タブ押下時の処理\n    const selectTabIndex = (index: number) => {\n        if (props.selectTabIndex != undefined) {\n            props.selectTabIndex(index);\n        } else {\n            setActiveNo(index);\n        }\n    };\n\n    const tabRecordNum = props.tabRecordNum ?? 1;\n\n    useEffect(() => {\n        setActiveNo(props.activeNo);\n    }, [props.activeNo]);\n\n    return (\n        <>\n            <_LabelList tabRecordNum={tabRecordNum}>\n                {/* {tabList} */}\n                {\n                    props.tabElements.map((tab, index) => {\n                        return <TabLabel\n                            key={index} name={tab.name} isActive={index == activeNo} isEnable={tab.enable}\n                            selectTab={() => selectTabIndex(index)}\n                        />\n                    })\n                }\n            </_LabelList>\n            <_ContList tabRecordNum={tabRecordNum}>\n                {/* {contList} */}\n                {\n                    props.tabElements.map((tab, index) => {\n                        return <TabContents key={index} cont={!tab.enable ? <></> : tab.cont} isActive={index === activeNo} />\n                    })\n                }\n            </_ContList>\n        </>\n    );\n}\n\nconst TabLabel = (props: {\n    name: string;\n    isActive: boolean;\n    isEnable: boolean;\n    selectTab: Function;\n}) => {\n    return (\n        <_TabLabel\n            isEnable={props.isEnable}\n            isActive={props.isActive}\n            onClick={() => props.selectTab()}>\n            {props.name}\n        </_TabLabel>\n    );\n}\n\nconst TabContents = (props: {\n    isActive: boolean;\n    cont: JSX.Element;\n}) => {\n    // return props.isActive ?\n    //     <div className=\"tab-cont\">{props.cont}</div>\n    //     :\n    //     <></>\n    //     ;\n    return (\n        <_Contents isActive={props.isActive}>\n            {props.cont}\n        </_Contents>\n    );\n}\n\nconst _LabelList = styled.div<{\n    tabRecordNum: number;\n}>`\n    display: inline-block;\n    height: ${props => 35 * props.tabRecordNum}px;\n    text-align: left;\n    /* background-color: #ac3b3b; */\n    width: 100%;\n`;\nconst _ContList = styled.div<{\n    tabRecordNum: number;\n}>`\n    display: block;\n    background-color: #999999;\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\n    border-radius: 0 6px 6px 6px;\n    box-shadow: 0 2px 0 0 #000b3a48;\n    text-align: left;\n`;\n\nconst _Contents = styled.div<{\n    isActive: boolean;\n}>`\n    margin: 3px 0 0 3px;\n    width: calc(100% - 6px);\n    height: calc(100% - 6px);\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\n`;\n\nconst _TabLabel = styled.div<{\n    isEnable: boolean;\n    isActive: boolean;\n}>`\n    display: inline-block;\n    /* width: 100px; */\n    padding: 0 10px;\n    \n    ${props => {\n        if (props.isActive) {\n            return css`\n                color: #ebebeb;\n                padding: 0 35px;\n                background-color: #999999;\n                height: 35px;\n                font-size: 24px;\n                border-radius: 3px 15px 0 0;\n                text-shadow: 1px 2px 3px #00000065;\n            `;\n        } else {\n            return css`\n                height: 100%;\n                color: #555;\n                /* background-color: #90909b; */\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\n                height: 30px;\n                font-size: 18px;\n                margin-top: 5px;\n                border-radius: 3px 10px 0 0;\n                ${props.isEnable ? '' : css`\n                    pointer-events: none;\n                    opacity: 0.7;\n                `}\n            `;\n        }\n    }}\n    /* opacity: 0.7; */\n    user-select: none;\n    margin-right: 6px;\n    font-weight: 600;\n    box-sizing: border-box;\n    line-height: 30px;\n    vertical-align: bottom;\n    transition: padding 100ms;\n`;","import { useEffect, useMemo, useRef, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nnamespace TreeUtil {\n\n    export type ElementNode = {\n        // jsx: JSX.Element;\n        isOpen: boolean;\n        // index: number;\n        depth: number;\n        data: any;\n        children: ElementNode[];\n        parent: null | ElementNode;\n    }\n\n    export type DataNode = {\n        data: any;\n        children: DataNode[];\n    }\n\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\n        // parent.isOpen = true;\n        return {\n            data, parent, depth: parent.depth + 1,\n            isOpen: false,\n            children: [],\n        };\n    }\n\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\n        const parentNode = node.parent;\n        if (parentNode != null) {\n            for (let i = 0; i < parentNode.children.length; i++) {\n                if (node == parentNode.children[i]) return i;\n            }\n        }\n        return -1;\n    }\n\n    export const Frame = (props: {\n        rootDataNode: DataNode;\n        clickEvent: (node: ElementNode) => void;\n        getLabelJsx: (node: ElementNode) => JSX.Element;\n        invalidate: any;\n        isDisable?: boolean;\n        focusNode?: ElementNode | null;\n    }) => {\n        const isDisable = props.isDisable ?? false;\n        const focusNode = props.focusNode ?? null;\n\n        const ref = useRef({} as HTMLDivElement);\n\n        /**\n         * データを元に再帰的に以下のツリーを構成する。\n         * @returns ツリー\n         */\n        const buildElementNodeFromData = () => {\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\n                const node: ElementNode = {\n                    data: dataNode.data,\n                    depth: depth,\n                    // index: count,\n                    isOpen: false,\n                    children: [],\n                    parent\n                };\n                node.children = (() => {\n                    return dataNode.children.map(child => {\n                        return build(depth + 1, child, node);\n                    });\n                })();\n                return node;\n            }\n            return build(0, props.rootDataNode, null);\n        }\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\n\n        useEffect(() => {\n            setRootElementNode(buildElementNodeFromData());\n        }, [props.rootDataNode]);\n\n        useEffect(() => {\n            if (focusNode != null && focusNode.parent != null) {\n                focusNode.parent.isOpen = true;\n            }\n        }, [focusNode]);\n\n        const jsxList = useMemo(() => {\n            // console.log(rootElementNode);\n            const list: JSX.Element[] = [];\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\n\n                const getSpaces = () => {\n                    return spaceList.map((space, i) => {\n                        const lines: JSX.Element[] = [];\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\n                        return <_Space key={i}>{lines}</_Space>;\n                    });\n                }\n\n                const isRelationNode = () => {\n                    let result = false;\n                    let tempNode = focusNode;\n                    // 親判定\n                    while (tempNode != null) {\n                        if (element.parent == null || element == tempNode) {\n                            result = true;\n                            break;\n                        }\n                        tempNode = tempNode.parent;\n                    }\n                    // 兄弟判定\n                    if (result === false && focusNode != null && focusNode.parent != null) {\n                        result = focusNode.parent.children.find(node => node == element) != undefined;\n                    }\n                    return result;\n                }\n                const isCurrent = element.data == focusNode?.data;\n                list.push(\n                    <_Record\n                        key={list.length}\n                        width={ref.current.scrollWidth}\n                        isActive={isCurrent}\n                        isRelation={!isDisable && isRelationNode()}\n                        isDisable={isCurrent && isDisable}\n                    >\n                        {getSpaces()}\n                        {element.children.length === 0 ? <></> : <_Branch\n                            onClick={() => {\n                                element.isOpen = !element.isOpen;\n                                setRootElementNode({ ...rootElementNode });\n                                // alert(element.isOpen);\n                            }}\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\n                        <_Jsx\n                            onClick={() => {\n                                props.clickEvent(element);\n                                setRootElementNode({ ...rootElementNode });\n                            }}\n                            onDoubleClick={() => {\n                                element.isOpen = !element.isOpen;\n                                setRootElementNode({ ...rootElementNode });\n                            }}\n                        >\n                            {props.getLabelJsx(element)}\n                        </_Jsx>\n                    </_Record>\n                );\n                if (element.isOpen) {\n                    element.children.forEach((child, i) => {\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\n                    });\n                }\n            }\n            buildJsxRecords(rootElementNode, []);\n            // rootJsxNode.forEach((el) => {\n            //     addElement(el, []);\n            // });\n            return list;\n        }, [rootElementNode, props.invalidate, isDisable]);\n\n        return (\n            <_Wrap\n                ref={ref}\n                isDisable={isDisable}>\n                {jsxList}\n            </_Wrap>\n        );\n    }\n}\n\nexport default TreeUtil;\n\nconst _Wrap = styled.div<{\n    isDisable: boolean;\n}>`\n    display: inline-block;\n    position: relative;\n    background-color: #374a54;\n    width: calc(100% - 10px);\n    height: calc(100% - 10px);\n    box-sizing: border-box;\n    border: solid 1px #000;\n    margin: 5px;\n    overflow: auto;\n    ${props => !props.isDisable ? '' : css`\n        pointer-events: none;\n        background-color: #1f3642;\n    `}\n`;\n\nconst _Record = styled.div<{\n    width: number;\n    isActive: boolean;\n    isRelation: boolean;\n    isDisable: boolean;\n}>`\n    display: inline-block;\n    /* position: relative; */\n    ${props => !props.isDisable ? '' : css`\n        background-color: #459cff46;\n    `}\n    opacity: 0.3;\n    ${props => !props.isRelation ? '' : css`\n        background-color: #ffffff28;\n        opacity: 1;\n    `}\n    ${props => !props.isActive ? '' : css`\n        background-color: #b4d9dd83;\n        opacity: 1;\n    `}\n    width: ${props => props.width}px;\n    height: 40px;\n    box-sizing: border-box;\n    white-space: nowrap;\n    /* border: solid 1px #000;\n    margin: 5px; */\n    & *{\n        vertical-align: top;\n    }\n    &:hover {\n        opacity: 1;\n    }\n`;\n\nconst _Space = styled.div`\n    display: inline-block;\n    position: relative;\n    /* background-color: #b6d5be; */\n    width: 40px;\n    height: 100%;\n    box-sizing: border-box;\n    /* border: solid 1px #000; */\n`;\nconst _LineTop = styled.div`\n    display: inline-block;\n    position: relative;\n    background-color: #b60000;\n    width: 4px;\n    height: 22px;\n    box-sizing: border-box;\n    margin: 0 0 0 20px;\n`;\nconst _LineFull = styled.div`\n    display: inline-block;\n    position: relative;\n    background-color: #b60000;\n    width: 4px;\n    height: 100%;\n    box-sizing: border-box;\n    margin: 0 0 0 20px;\n`;\nconst _LineRight = styled.div`\n    display: inline-block;\n    position: relative;\n    background-color: #b60000;\n    width: 16px;\n    height: 4px;\n    box-sizing: border-box;\n    margin: 18px 0 0 0;\n`;\n\nconst _Branch = styled.div`\n    display: inline-block;\n    /* position: relative; */\n    background-color: #d1d1d1;\n    width: 30px;\n    height: calc(100% - 10px);\n    border: solid 1px #000;\n    margin: 5px 0 0 3px;\n    box-sizing: border-box;\n    font-size: 30px;\n    /* font-weight: 600; */\n    color: #6d1717;\n    line-height: 20px;\n    padding-left: 3px;\n`;\nconst _Jsx = styled.div`\n    display: inline-block;\n    position: relative;\n    /* background-color: #ffffff3c; */\n    min-width: 100px;\n    height: 100%;\n    margin: 0 0  0 3px;\n    box-sizing: border-box;\n`;\n","\n/**\n * 入力チェックを行うユーティリティ。\n */\nnamespace ValidateUtil {\n\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\n\n    export type Validate = {\n        checker: (value: string) => boolean;\n        errorType: ErrorType;\n        message?: string;\n    }\n\n    /**\n     * 必須チェック\n     * @param str 検証する文字列\n     * @returns 判定結果\n     */\n    export const checkRequired = (str: string) => {\n        return str.length > 0;\n    }\n\n    /**\n     * 文字列の長さチェック\n     * @param str 検証する文字列\n     * @param min 最小値\n     * @param max 最大値\n     * @returns 判定結果\n     */\n    export const checkStringLength = (str: string, min: number, max: number) => {\n        return str.length === 0 || (str.length >= min && str.length <= max);\n    }\n\n    /**\n     * 半角英数時チェック\n     * @param str 検証する文字列\n     * @returns 判定結果\n     */\n    export const checkAsciiChars = (str: string) => {\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        return checkIncludesChars(str, list);\n    }\n\n    /**\n     * 指定の文字列で構成されているかチェック\n     * @param str 検証する文字列\n     * @param list 入力を許す対象文字列\n     * @returns 判定結果\n     */\n    export const checkIncludesChars = (str: string, list: string) => {\n        for (let i = 0; i < str.length; i++) {\n            const ch = str.charAt(i);\n            if (list.indexOf(ch) === -1) return false;\n        }\n        return true;\n    }\n\n    /**\n     * 指定の文字列が数値に変換できるかチェック\n     * @param str 検証する文字列\n     * @returns 判定結果\n     */\n    export const checkNumber = (str: string) => {\n        return !isNaN(Number(str));\n    }\n\n    /**\n     * 数値の値の範囲をチェック\n     * @param str 検証する文字列\n     * @param min 下限\n     * @param max 上限\n     * @returns 判定結果\n     */\n    export const checkNumberRange = (str: string, min: number, max: number) => {\n        if (!isNaN(Number(str))) {\n            const num = Number(str);\n            return num >= min && num <= max;\n        }\n        return true;\n    }\n\n    /**\n     * \n     * @param conditions \n     * @returns \n     */\n    export const checkAll = (conditions: boolean[]): boolean => {\n        let result = true;\n        for (let i = 0; i < conditions.length; i++) {\n            if (!conditions[i]) {\n                result = false;\n                break;\n            }\n        }\n        return result;\n    }\n}\nexport default ValidateUtil;\n","import SystemConst from \"./systemConst\";\n\nnamespace CanvasUtil {\n\n    /**\n     * Canvasに任意の描画をし、画像のURLを取得する\n     * @param width 幅\n     * @param height 高さ\n     * @param draw 描画\n     * @returns 画像のURL\n     */\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n        canvas.width = width;\n        canvas.height = height;\n        draw(ctx);\n        return canvas.toDataURL();\n    }\n\n    export const getLogoURL = () => {\n        return CanvasUtil.createURL(580, 80, (ctx) => {\n            // ctx.fillStyle = '#ffffff';\n            // ctx.fillRect(0, 0, 350, 80);\n\n            ctx.shadowColor = \"#555\";\n            ctx.shadowOffsetX = 2;\n            ctx.shadowOffsetY = 1;\n            ctx.shadowBlur = 5;\n            ctx.font = 'italic 50pt Arial';\n            ctx.fillStyle = '#ffffff';\n            ctx.fillText('Particle ', 24, 64);\n            const adjust = ctx.measureText('Particle ').width;\n            ctx.fillStyle = '#6ea0c4';\n            ctx.fillText('Simulator', 24 + adjust, 64);\n            ctx.save();\n        });\n    }\n\n    export const getAuthTextURL = (text: string) => {\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\n            ctx.rotate(1 * Math.PI / 180);\n            for (let i = 0; i < text.length; i++) {\n                const char = text.charAt(i);\n\n                const fontRand = Math.random() * 60;\n                const alphaRand = Math.random() * 60;\n                ctx.font = `${20 + fontRand}pt Arial`;\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\n                ctx.fillText(char, i * SIZE, 60);\n            }\n        });\n    }\n}\n\nexport default CanvasUtil;","import VectorUtil from \"./vectorUtil\";\n\nnamespace Particle {\n\n    export type Props = {\n        owner: Instance[];\n        pos: VectorUtil.XY;\n        vec: VectorUtil.Vector;\n        limit: number;\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\n        extend: ((self: Instance) => void)[];\n    }\n\n    export class Instance {\n\n        owner: Instance[];\n        pos: VectorUtil.XY;\n        prevPos: VectorUtil.XY;\n        vec: VectorUtil.Vector;\n        frame: number;\n        limit: number;\n        isLive: boolean;\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\n        extend: ((self: Instance) => void)[];\n\n        constructor(props: Props) {\n            this.owner = props.owner;\n            this.pos = props.pos;\n            this.prevPos = props.pos;\n            this.vec = props.vec;\n\n            this.frame = 0;\n            this.limit = props.limit;\n            this.isLive = true;\n            this.drawer = props.drawer;\n            this.extend = props.extend;\n        }\n\n        update = () => {\n\n            this.pos.x += this.vec.xy.x;\n            this.pos.y += this.vec.xy.y;\n\n            this.extend.forEach(callback => callback(this));\n\n            if (this.frame === this.limit) {\n                this.isLive = false;\n            }\n            this.frame++;\n        }\n\n        draw = (ctx: CanvasRenderingContext2D) => {\n            this.drawer(this, ctx);\n        }\n    }\n}\n\nexport default Particle;","import Particle from \"./particle\";\n\nnamespace DrawUtil {\n\n    export type Rgba = {\n        r: number;\n        g: number;\n        b: number;\n        a: number;\n    }\n\n    export type ColorStop = {\n        offset: number;\n        color: string;\n    }\n\n    export type DrawerParam = {\n        color: string;\n        radius?: number;\n        disappearStartRate?: number;\n        shrinkStartRate?: number;\n        flashAppearFrame?: number;\n        flashHideFrame?: number;\n    }\n\n    export const createGradDrawer = (param: DrawerParam) => {\n\n        /** 基準となる半径 */\n        const radiusBase = param.radius ?? 30;\n        return (self: Particle.Instance, ctx: CanvasRenderingContext2D) => {\n            if(param.flashAppearFrame != undefined) {\n                const appearFrame = param.flashAppearFrame;\n                const hideFrame = (param.flashHideFrame as number);\n                const unitFrame = appearFrame + hideFrame;\n                if((self.frame % unitFrame) >= appearFrame) return;\n            }\n\n            let radius = radiusBase;\n            if (param.shrinkStartRate != undefined) {\n                const start = Math.floor(self.limit * param.shrinkStartRate);\n                if (self.frame > start) {\n                    const limit = self.limit - start;\n                    const frame = self.frame - start;\n                    const rate = (limit - frame) / limit;\n                    radius *= rate;\n                }\n            }\n\n            const x = self.pos.x;\n            const y = self.pos.y;\n            const g = ctx.createRadialGradient(x, y, 1, x, y, radius);\n\n            const grads: ColorStop[] = [];\n            const rgba = convertRgbaFromColorCode(param.color) ?? { r: 255, g: 255, b: 255, a: 255 };\n            grads.push({ offset: 0, color: convertColorCodeFromRgba({ r: 255, g: 255, b: 255, a: Math.floor(rgba.a * 0.9) }) });\n            grads.push({ offset: 0.2, color: convertColorCodeFromRgba({ ...rgba, a: Math.floor(rgba.a * 0.15) }) });\n            grads.push({ offset: 1, color: convertColorCodeFromRgba({ ...rgba, a: 1 }) });\n\n            grads.forEach(grad => {\n                g.addColorStop(grad.offset, grad.color);\n            });\n\n            ctx.globalAlpha = 1;\n            if (param.disappearStartRate != undefined) {\n                const start = Math.floor(self.limit * param.disappearStartRate);\n                if (self.frame > start) {\n                    const limit = self.limit - start;\n                    const frame = self.frame - start;\n                    ctx.globalAlpha = (limit - frame) / limit;\n                }\n            }\n\n            ctx.fillStyle = g;\n            ctx.beginPath();\n            ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\n            ctx.fill();\n        };\n    }\n\n    export const convertRgbaFromColorCode = (code: string): Rgba | null => {\n        const div = code.split('#');\n        if (div.length !== 2 || div[1].length < 6) return null;\n\n        const value = div[1];\n        const r = Number.parseInt(value.substring(0, 2), 16);\n        const g = Number.parseInt(value.substring(2, 4), 16);\n        const b = Number.parseInt(value.substring(4, 6), 16);\n        let a = 1;\n        if (value.length === 8) {\n            a = Number.parseInt(value.substring(6, 8), 16);\n        }\n        return { r, g, b, a };\n    }\n\n    export const convertColorCodeFromRgba = (rgba: Rgba): string => {\n        const r = ('00' + rgba.r.toString(16)).slice(-2);\n        const g = ('00' + rgba.g.toString(16)).slice(-2);\n        const b = ('00' + rgba.b.toString(16)).slice(-2);\n        const a = ('00' + rgba.a.toString(16)).slice(-2);\n        return `#${r}${g}${b}${a}`;\n    }\n\n    export const toWhite = (color: string, rate: number): string => {\n        return color;\n    }\n}\n\nexport default DrawUtil;","namespace VectorUtil {\n\n    export type XY = {\n        x: number, y: number;\n    }\n\n    export class Vector {\n\n        xy: XY;\n        rad: number;\n        len: number;\n\n        constructor(xy: XY) {\n            this.xy = xy;\n            this.rad = 0;\n            this.len = 0;\n            this.syncFromXY();\n        }\n\n        syncFromXY = () => {\n            this.len = Math.sqrt(this.xy.x * this.xy.x + this.xy.y * this.xy.y);\n            this.rad = Math.atan2(this.xy.y, this.xy.x);\n        }\n\n        syncFromRad = () => {\n            this.xy.x = Math.cos(this.rad) * this.len;\n            this.xy.y = Math.sin(this.rad) * this.len;\n        }\n\n    }\n}\n\nexport default VectorUtil;","\nnamespace ParamUtil {\n    export enum VisualParamType {\n        RADIUS = 'radius',\n        COLOR_R = 'color_r',\n        COLOR_G = 'color_g',\n        COLOR_B = 'color_b',\n        COLOR_A = 'color_a',\n        THICKNESS = 'thickness',\n    }\n    export const VisualParams = Object.values(VisualParamType);\n    export type VisualParam = typeof VisualParams[number];\n\n    export enum BehaviorParamType {\n        LIMIT = 'limit',\n        POS_X = 'pos_x',\n        POS_Y = 'pos_y',\n        VEC_X = 'vec_x',\n        VEC_Y = 'vec_y',\n        VEC_RAD = 'vec_radian',\n        VEC_LEN = 'vec_length',\n    }\n    export const BehaviorParams = Object.values(BehaviorParamType);\n    export type BehaviorParam = typeof BehaviorParams[number];\n\n    export enum SelfParamType {\n        FRAME = 'self_frame',\n        LIMIT = 'self_limit',\n        POS_X = 'self_pos_x',\n        POS_Y = 'self_pos_y',\n        VEC_X = 'self_vec_x',\n        VEC_Y = 'self_vec_y',\n        VEC_RAD = 'self_vec_radian',\n        VEC_LEN = 'self_vec_length',\n    }\n    export const SelfParams = Object.values(SelfParamType);\n    export type SelfParam = typeof SelfParams[number];\n\n    export enum ExtendParamType {\n        LOOP_COUNT = 'loop_count',\n        LOOP_ITERATE = 'loop_iterate',\n        INVOKE = 'invoke',\n    }\n    export const ExtendParams = Object.values(ExtendParamType);\n    export type ExtendParam = typeof ExtendParams[number];\n\n    export enum EffectParamType {\n        DISAPPEAR_START = 'disappear_start',\n        SHRINK_START = 'shrink_start',\n        FLASH_APPEAR_FRAME = 'flash_appear_frame',\n        FLASH_HIDE_FRAME = 'flash_hide_frame',\n    }\n    export const EffectParams = Object.values(EffectParamType);\n    export type EffectParam = typeof EffectParams[number];\n\n    export enum ModulateParamType {\n        DECAY_RATE = 'decay_rate',\n        DECAY_LIMIT = 'decay_limit',\n        GRAVITY_VAL = 'gravity_val',\n        GRAVITY_LIMIT = 'gravity_limit',\n    }\n    export const ModulateParams = Object.values(ModulateParamType);\n    export type ModulateParam = typeof ModulateParams[number];\n\n    export enum ConstantType {\n        SCREEN_WIDTH = 'screen_width',\n        SCREEN_HEIGHT = 'screen_height',\n        PI = 'pi',\n        RADIAN_ROUND = 'radian_round',\n    }\n    export const Constants = Object.values(ConstantType);\n    export type Constant = typeof Constants[number];\n\n}\n\nexport default ParamUtil;","import Particle from \"../../graphic/particle\";\n\nnamespace ModulateBuilder {\n\n    type ModulateParam = {\n        decayRate?: number;\n        decayLimit?: number;\n        gravity?: number;\n        gravityLimit?: number;\n    }\n\n    export const build = (extendList: ((self: Particle.Instance) => void)[], param: ModulateParam) => {\n        \n        // 減衰メソッド\n        if (param.decayRate != undefined && param.decayLimit != undefined) {\n            const decayLimit = param.decayLimit;\n            const decayRate = param.decayRate;\n            extendList.push((self: Particle.Instance) => {\n\n                if (self.vec.len > decayLimit) {\n                    self.vec.len = self.vec.len * decayRate;\n                    self.vec.syncFromRad();\n                }\n            });\n        }\n        // 重力メソッド\n        if (param.gravity != undefined && param.gravityLimit != undefined) {\n            const gravityLimit = param.gravityLimit;\n            const gravity = param.gravity;\n            extendList.push((self: Particle.Instance) => {\n\n                if (self.vec.xy.y < gravityLimit) {\n                    self.vec.xy.y += gravity;\n                    self.vec.syncFromXY();\n                }\n            });\n        }\n    }\n}\n\nexport default ModulateBuilder;","import DrawUtil from \"../../graphic/drawUtil\";\nimport Particle from \"../../graphic/particle\";\nimport VectorUtil from \"../../graphic/vectorUtil\";\nimport LogicUtil from \"../factory/util/logicUtil\";\nimport ParamUtil from \"../factory/util/paramUtil\";\nimport ModulateBuilder from \"./modulateBuilder\";\n\nnamespace PreviewUtil {\n\n    export const SCREEN_WIDTH = 550;\n    export const SCREEN_HEIGHT = 550;\n\n    export type ValueMap = {\n        name: string;\n        value: number;\n    }\n\n    export const buildLogicProps = (\n        owner: Particle.Instance[],\n        origin: LogicUtil.NodeLogicItem,\n        rootData: LogicUtil.WrapElement,\n        sends: ValueMap[]\n    ): Particle.Props => {\n\n        /**\n         * ディペンドするロジック要素を識別名から探して返す。\n         * @param name ロジックの識別名\n         * @returns ロジック要素\n         */\n        const searchDependLogic = (name: string): LogicUtil.NodeLogicItem | null => {\n            const mng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\n            const wrap = mng.defs.find(def => (def.data as LogicUtil.NodeLogicItem).name === name);\n            if (wrap == undefined) return null;\n            return wrap.data as LogicUtil.NodeLogicItem;\n        }\n\n        /**\n         * 再帰的にパーティクルを生成する。\n         * @param cur ルートとなるロジック要素\n         * @param sends 親要素から送られてきたフィールド\n         * @returns パーティクルのプロパティ\n         */\n        const createParticleRec = (cur: LogicUtil.NodeLogicItem, sends: ValueMap[]): Particle.Props => {\n            let valueMapList: ValueMap[] = sends.concat(ConstantValueMap);\n\n\n            // フィールドのパラメータを取得\n            const fieldMng = searchElement('field-mng', cur.mngs);\n            if (fieldMng != null) {\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\n                    const paramItem = field.data as LogicUtil.NodeParamItem;\n                    const value = convertFormulaToValue(paramItem, valueMapList);\n                    valueMapList.push({ name: paramItem.name, value });\n                });\n            }\n\n            const visualParams = (searchElement('visual-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\n                params.map(param => param.data as LogicUtil.NodeParamItem);\n            const behaviorParams = (searchElement('behavior-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\n                params.map(param => param.data as LogicUtil.NodeParamItem);\n\n            const getVisualParam = (name: string) => {\n                return convertParamsToValue(name, visualParams, valueMapList);\n            }\n            const getBehaviorParam = (name: string) => {\n                return convertParamsToValue(name, behaviorParams, valueMapList);\n            }\n\n            // Behaviorのパラメータを取得\n            const limit = Math.floor(getBehaviorParam(ParamUtil.BehaviorParamType.LIMIT) as number);\n            const pos = {\n                x: getBehaviorParam(ParamUtil.BehaviorParamType.POS_X) as number,\n                y: getBehaviorParam(ParamUtil.BehaviorParamType.POS_Y) as number\n            };\n            const vec = new VectorUtil.Vector({ x: 0, y: 0 });\n            const isVectorMethod = behaviorParams.find(param => param.name === ParamUtil.BehaviorParamType.VEC_X) != undefined;\n            if (isVectorMethod) {\n                vec.xy.x = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_X) as number;\n                vec.xy.y = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_Y) as number;\n                vec.syncFromXY();\n            } else {\n                vec.rad = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_RAD) as number;\n                vec.len = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_LEN) as number;\n                vec.syncFromRad();\n            }\n\n            /**\n             * 追加動作（子要素、エフェクト、モデュレート）\n             */\n            const extendList: ((self: Particle.Instance) => void)[] = [];\n\n            // 子要素を生成する\n            const connectMng = searchElement('inherit-mng', cur.mngs);\n            if (connectMng != null) {\n\n                // パーティクル情報のフィールド追加\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_X, value: pos.x });\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_Y, value: pos.y });\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.x });\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.y });\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_RAD, value: vec.rad });\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_LEN, value: vec.len });\n\n                const connects = (connectMng.data as LogicUtil.NodeConnectManager).inherits;\n\n                connects.forEach(connect => {\n                    const connector = connect.data as LogicUtil.NodeInheritConnector;\n                    if (connector.disable ?? false) return;\n\n                    const logicItem = connector.method === 'create' ?\n                        searchElement('inherit-logic', connector.mngs)?.data as LogicUtil.NodeLogicItem :\n                        searchDependLogic(connector.depend);\n\n                    if (logicItem != null) {\n\n                        extendList.push((self: Particle.Instance) => {\n\n                            const addValueMap = (item: ValueMap) => {\n                                const map = valueMapList.find(map => map.name === item.name);\n                                if (map != undefined) map.value = item.value;\n                                else valueMapList.push(item);\n                            }\n                            addValueMap({ name: ParamUtil.SelfParamType.FRAME, value: self.frame });\n                            addValueMap({ name: ParamUtil.SelfParamType.LIMIT, value: self.limit });\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_X, value: self.pos.x });\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_Y, value: self.pos.y });\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_X, value: self.vec.xy.x });\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_Y, value: self.vec.xy.y });\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_RAD, value: self.vec.rad });\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_LEN, value: self.vec.len });\n\n                            // Inherit配下のフィールドのパラメータを取得\n                            const itrfldValueMap: ValueMap[] = [];\n                            const fieldMng = searchElement('inhfld-mng', connector.mngs);\n                            if (fieldMng != null) {\n                                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\n                                    const paramItem = field.data as LogicUtil.NodeParamItem;\n                                    const value = convertFormulaToValue(paramItem, valueMapList);\n                                    itrfldValueMap.push({ name: paramItem.name, value });\n                                });\n                            }\n\n                            let loopCnt = 1;\n                            const extendItem = searchElement('extend-mng', connector.mngs) as LogicUtil.WrapElement;\n                            const extendParams = (extendItem.data as LogicUtil.NodeParamManager).params.map(param => param.data as LogicUtil.NodeParamItem);\n                            const loopCntVal = convertParamsToValue(ParamUtil.ExtendParamType.LOOP_COUNT, extendParams, valueMapList.concat(itrfldValueMap));\n\n                            // 派生条件\n                            const isInvoke = convertParamsToBoolean(ParamUtil.ExtendParamType.INVOKE, extendParams, valueMapList) ?? true;\n\n                            // 条件を満たさない場合、以下の処理（パーティクルの生成）を行わない\n                            if (!isInvoke) return;\n\n                            // イテレータを利用している場合\n                            if (loopCntVal != undefined) {\n                                loopCnt = loopCntVal;\n                            }\n\n                            for (let i = 0; i < loopCnt; i++) {\n\n                                // イテレータ関連のパラメータを追加\n                                const iterateValueMap: ValueMap[] = [\n                                    { name: ParamUtil.ExtendParamType.LOOP_COUNT, value: loopCnt },\n                                    { name: ParamUtil.ExtendParamType.LOOP_ITERATE, value: i }\n                                ];\n\n                                const sendItem = searchElement('send-mng', connector.mngs)?.data as LogicUtil.NodeParamManager;\n                                const params = sendItem.params.map(param => param.data as LogicUtil.NodeParamItem);\n                                const sendValueMapList: ValueMap[] = params.map(item => {\n                                    return { name: item.name, value: convertParamsToValue(item.name, params, valueMapList.concat(itrfldValueMap).concat(iterateValueMap)) ?? 0 }\n                                });\n\n                                const props = createParticleRec(\n                                    logicItem,\n                                    sendValueMapList\n                                );\n                                self.owner.push(new Particle.Instance(props));\n                            }\n                        });\n                    }\n                });\n            }\n\n            // モデュレート（動きの変化）を付与\n            ModulateBuilder.build(extendList, {\n                decayLimit: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_LIMIT),\n                decayRate: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_RATE),\n                gravity: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_VAL),\n                gravityLimit: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_LIMIT),\n            });\n\n            // Visualのパラメータを取得\n            const radius = getVisualParam(ParamUtil.VisualParamType.RADIUS);\n            const colorR = getVisualParam(ParamUtil.VisualParamType.COLOR_R);\n            const colorG = getVisualParam(ParamUtil.VisualParamType.COLOR_G);\n            const colorB = getVisualParam(ParamUtil.VisualParamType.COLOR_B);\n            const colorA = getVisualParam(ParamUtil.VisualParamType.COLOR_A);\n\n            // エフェクト付与\n            const disappearStart = getVisualParam(ParamUtil.EffectParamType.DISAPPEAR_START);\n            const shrinkStart = getVisualParam(ParamUtil.EffectParamType.SHRINK_START);\n            const flashAppearFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME);\n            const flashHideFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_HIDE_FRAME);\n\n            let drawer: (self: Particle.Instance, ctx: CanvasRenderingContext2D) => void = () => { };\n            if (radius != undefined) {\n                drawer = DrawUtil.createGradDrawer({\n                    radius: radius,\n                    color: DrawUtil.convertColorCodeFromRgba({\n                        r: colorR as number,\n                        g: colorG as number,\n                        b: colorB as number,\n                        a: colorA as number,\n                    }),\n                    disappearStartRate: disappearStart,\n                    shrinkStartRate: shrinkStart,\n                    flashAppearFrame,\n                    flashHideFrame,\n                });\n            }\n\n            return {\n                owner, pos, vec,\n                limit, drawer,\n                extend: extendList\n            };\n        }\n\n        return createParticleRec(origin, sends);\n    }\n\n    const searchElement = (type: LogicUtil.NodeType, warpList: LogicUtil.WrapElement[]) => {\n        return warpList.find(wrap => wrap.type === type) ?? null;\n    }\n\n    /**\n     * 式を計算して結果の値を返す\n     * @param name プロパティ名\n     * @param params パラメータ要素\n     * @param valueMapList 値変換マップ\n     * @returns 算出された値\n     */\n    export const convertParamsToValue = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): number | undefined => {\n        const formula = params.find(param => param.name === name);\n        if (formula == undefined) return undefined;\n        return convertFormulaToValue(formula, valueMapList);\n    }\n\n    const convertFormulaToValue = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): number => {\n        const values = formula.values.map(v => {\n            if (v.type === 'direct') return Number(v.value);\n            const valueMap = valueMapList.find(m => m.name === v.value);\n            if (valueMap == undefined) return 0;\n            return valueMap.value;\n        });\n\n        let formulaStr = '';\n        let varCnt = 0;\n        formula.formulaItems.forEach((item) => {\n            let str = item;\n            if (item === 'var') {\n                str = values[varCnt].toString();\n                varCnt++;\n            }\n            else if (item === 'rand(') str = 'Math.random()*(';\n            else if (item === 'integer(') str = 'Math.floor(';\n            formulaStr += str;\n        });\n        // console.log(formulaStr);\n        const ret = Function(`return (${formulaStr})`)();\n        // console.log(ret);\n        return ret;\n    }\n\n    export const convertParamsToBoolean = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): boolean | undefined => {\n        const formula = params.find(param => param.name === name);\n        if (formula == undefined) return undefined;\n        return convertFormulaToBoolean(formula, valueMapList);\n    }\n\n    const convertFormulaToBoolean = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): boolean => {\n        const values = formula.values.map(v => {\n            if (v.type === 'direct') return Number(v.value);\n            const valueMap = valueMapList.find(m => m.name === v.value);\n            if (valueMap == undefined) return 0;\n            return valueMap.value;\n        });\n\n        let formulaStr = '';\n        let varCnt = 0;\n        formula.formulaItems.forEach((item, i) => {\n            let str = item;\n            if (item === 'var') {\n                str = values[varCnt].toString();\n                varCnt++;\n            }\n            else if (item === 'rand(') str = 'Math.random()*(';\n            else if (item === 'integer(') str = 'Math.floor(';\n            else if (item === '=') str = '==';\n            formulaStr += str;\n        });\n        // console.log(formulaStr);\n        const ret = Function(`return (${formulaStr})`)();\n        // console.log(formulaStr);\n        return ret;\n    }\n\n    export const ConstantValueMap: ValueMap[] = [\n        { name: ParamUtil.ConstantType.SCREEN_WIDTH, value: SCREEN_WIDTH },\n        { name: ParamUtil.ConstantType.SCREEN_HEIGHT, value: SCREEN_HEIGHT },\n        { name: ParamUtil.ConstantType.PI, value: 3.14159265359 },\n        { name: ParamUtil.ConstantType.RADIAN_ROUND, value: 3.14159265359 * 2 }\n    ];\n}\n\nexport default PreviewUtil;","import { assert } from \"console\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport ParamUtil from \"./paramUtil\";\r\n\r\n\r\nnamespace LogicElementUtil {\r\n\r\n    export const getInnerNode = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode | null => {\r\n\r\n        let cur: TreeUtil.ElementNode | null = node;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const target = cur.children.find(child => (child.data as LogicUtil.WrapElement).type === type);\r\n            if (target == undefined) cur = null;\r\n            else cur = target;\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerWrap = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement | null => {\r\n\r\n        let cur: LogicUtil.WrapElement | null = wrap;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const listName = getListParamName(cur.type);\r\n            if (listName == null) cur = null;\r\n            else {\r\n                const list = cur.data[`${listName}`] as LogicUtil.WrapElement[];\r\n                const target = list.find(child => child.type === type);\r\n                if (target == undefined) cur = null;\r\n                else cur = target;\r\n            }\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const addChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode) => {\r\n        return insertChild(wrapElement, node, node.children.length);\r\n    }\r\n    export const insertChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode, listPos: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, 0, wrapElement);\r\n        const newNode = TreeUtil.createNode(wrapElement, node);\r\n        node.children.splice(listPos, 0, newNode);\r\n        return newNode;\r\n    }\r\n\r\n    export const removeChild = (node: TreeUtil.ElementNode, listPos: number, size: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, size);\r\n        node.children.splice(listPos, size);\r\n    }\r\n\r\n    export const isHead = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[0] == node;\r\n    }\r\n\r\n    export const isTail = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[ownerChildren.length - 1] == node;\r\n    }\r\n\r\n    const swapOrder = (node: TreeUtil.ElementNode, offset: number) => {\r\n        if (node.parent == null) return;\r\n        const ownerChildren = node.parent.children;\r\n        const wrap = node.parent.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        const ownDataChildren = wrap.data[`${listName}`] as LogicUtil.WrapElement[];\r\n\r\n        // 自身の要素番号を取得\r\n        let curNo = -1;\r\n        ownerChildren.some((it, i) => {\r\n            if (it == node) {\r\n                curNo = i;\r\n                return 1;\r\n            }\r\n        });\r\n        if (curNo === -1) return;\r\n\r\n        // ツリーノードの入れ替え\r\n        const swapNode = ownerChildren[curNo];\r\n        ownerChildren[curNo] = ownerChildren[curNo + offset];\r\n        ownerChildren[curNo + offset] = swapNode;\r\n        // データ要素の入れ替え\r\n        const swapData = ownDataChildren[curNo];\r\n        ownDataChildren[curNo] = ownDataChildren[curNo + offset];\r\n        ownDataChildren[curNo + offset] = swapData;\r\n    }\r\n\r\n    export const getSwapButtons = (node: TreeUtil.ElementNode, invalidate: () => void) => {\r\n        return <>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↑',\r\n                        isEnable: !LogicElementUtil.isHead(node),\r\n                        callback: () => {\r\n                            swapOrder(node, -1);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↓',\r\n                        isEnable: !LogicElementUtil.isTail(node),\r\n                        callback: () => {\r\n                            swapOrder(node, 1);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>;\r\n    }\r\n\r\n    export const getListParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return 'defs';\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            // case 'root':\r\n            case 'logic-item': return 'mngs';\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return 'params';\r\n            case 'inherit-mng': return 'inherits';\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return 'args';\r\n            case 'sample-mng': return 'samples';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'fields';\r\n            case 'thumbnail-mng': return 'items';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getIdentifyParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'argument-item':\r\n            case 'field-item':\r\n            case 'seed-item':\r\n            case 'thumbnail-item':\r\n            case 'seedarg-item':\r\n            case 'sample-item':\r\n            case 'logic-item': return 'name';\r\n            case 'connector': return 'id';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getNamableProps = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'connector': return 'id';\r\n            case 'logic-item': return 'name';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    export const syncTreeElementFromWrap = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        if (listName == null) return;\r\n        (wrap.data[listName] as any[]).forEach(childWrap => {\r\n            const newNode = TreeUtil.createNode(childWrap, node);\r\n            node.children.push(newNode);\r\n            syncTreeElementFromWrap(newNode);\r\n        });\r\n    }\r\n\r\n    export const createParamWrap = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem): LogicUtil.WrapElement => {\r\n        return { type: type, data: paramDataList };\r\n    }\r\n    export const createParamWrapList = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem[]): LogicUtil.WrapElement[] => {\r\n        return paramDataList.map(data => {\r\n            return { type: type, data: data };\r\n        });\r\n    }\r\n\r\n    export const createVisualParams = (): LogicUtil.WrapElement[] => {\r\n        const type = ParamUtil.VisualParamType;\r\n        return createParamWrapList('param-item', [\r\n            { name: type.RADIUS, formulaItems: ['var'], values: [{ type: 'direct', value: '20' }] },\r\n            { name: type.COLOR_R, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_G, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_B, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_A, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n        ]);\r\n    }\r\n\r\n    export const createBehaviorParams = (): LogicUtil.WrapElement[] => {\r\n        const list: LogicUtil.NodeParamItem[] = [];\r\n        const type = ParamUtil.BehaviorParamType;\r\n        list.push({\r\n            name: type.LIMIT,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '30' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        return createParamWrapList('param-item', list);\r\n    }\r\n\r\n    export const getDefaultLogicMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'visual-mng',\r\n                data: {\r\n                    params: createVisualParams()\r\n                } as LogicUtil.NodeParamManager\r\n            },\r\n            {\r\n                type: 'behavior-mng',\r\n                data: {\r\n                    params: createBehaviorParams()\r\n                } as LogicUtil.NodeParamManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    export const getInitialData = (): LogicUtil.WrapElement => {\r\n        return {\r\n            type: 'root',\r\n            data: {\r\n                seedMng: {\r\n                    type: 'seed-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeSeedManager\r\n                } as LogicUtil.WrapElement,\r\n                logicMng: {\r\n                    type: 'logic-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeLogicManager\r\n                } as LogicUtil.WrapElement\r\n            } as LogicUtil.NodeRoot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 同階層の名前パラメータを持つ要素より、既存の名前一覧を取得する。\r\n     * @param node 現在のノード\r\n     * @returns 同階層の既存の名前一覧\r\n     */\r\n    export const getExistNameList = (node: TreeUtil.ElementNode) => {\r\n        const nameList: string[] = [];\r\n        const curWrap = node.data as LogicUtil.WrapElement;\r\n        const nameParam = getIdentifyParamName(curWrap.type);\r\n        const mngWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listParam = getListParamName(mngWrap.type);\r\n        if (listParam == null || nameParam == null) return [];\r\n        const list = mngWrap.data[listParam] as LogicUtil.WrapElement[];\r\n        list.forEach(wrap => {\r\n            if (wrap.data != null && curWrap != wrap) {\r\n                nameList.push(wrap.data[nameParam]);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getLogicNameList = (mng: LogicUtil.NodeLogicManager) => {\r\n        const nameList: string[] = [];\r\n        mng.defs.forEach(logic => {\r\n            if (logic.data != null) {\r\n                nameList.push((logic.data as LogicUtil.NodeLogicItem).name);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getParamNameList = (curLogicOwner: LogicUtil.NodeLogicItem) => {\r\n        const nameList: string[] = [];\r\n\r\n        // システム固有のパラメータ名を取得\r\n        ParamUtil.VisualParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.BehaviorParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.SelfParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ExtendParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.EffectParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ModulateParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.Constants.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n\r\n        // 引数のパラメータ名を取得\r\n        const argMng = curLogicOwner.mngs.find(mng => mng.type === 'argument-mng');\r\n        if (argMng != undefined) {\r\n            const args = (argMng.data as LogicUtil.NodeArgumentManager).args;\r\n            args.forEach(arg => {\r\n                if (arg.data != null) {\r\n                    nameList.push((arg.data as LogicUtil.NodeArgumentItem).name);\r\n                }\r\n            });\r\n        }\r\n        // フィールドのパラメータ名を取得\r\n        const fieldMng = curLogicOwner.mngs.find(mng => mng.type === 'field-mng');\r\n        if (fieldMng != undefined) {\r\n            const fields = (fieldMng.data as LogicUtil.NodeFieldManager).fields;\r\n            fields.forEach(field => {\r\n                if (field.data != null) {\r\n                    nameList.push((field.data as LogicUtil.NodeParamItem).name);\r\n                }\r\n            });\r\n        }\r\n        return nameList;\r\n    }\r\n\r\n    /**\r\n     * 子要素の接頭連番をチェックし、重複しない名称を返す。\r\n     * @param prefix 接頭語\r\n     * @param node 基準となるノード\r\n     */\r\n    export const getNumberingOnPrefixName = (prefix: string, node: TreeUtil.ElementNode) => {\r\n        let num = 0;\r\n        // 接頭番号を取得\r\n        while (true) {\r\n            const check = node.children.find(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                if (wrap.data == null) return false;\r\n                console.log(wrap);\r\n                return wrap.data[getNamableProps(wrap.type)] === `${prefix}${num}`;\r\n            });\r\n            if (check != undefined) num++;\r\n            else break;\r\n        }\r\n        return `${prefix}${num}`;\r\n    }\r\n\r\n    /**\r\n     * パラメータの式で参照されている変数を検索し、\r\n     * 任意の処理（callback）を実行する。\r\n     * @param node 現在のノード\r\n     * @param callback 処理\r\n     */\r\n    export const searchVariableReferInFormula = (node: TreeUtil.ElementNode, callback: Function) => {\r\n\r\n        const mngType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const getLogicItem = () => {\r\n            switch (mngType) {\r\n                case 'field-mng':\r\n                case 'argument-mng': return node.parent?.parent?.data as LogicUtil.WrapElement;\r\n                case 'inhfld-mng': return node.parent?.parent?.parent?.parent?.data as LogicUtil.WrapElement;\r\n            }\r\n        }\r\n        const logicItem = getLogicItem()?.data as LogicUtil.NodeLogicItem;\r\n        if (mngType === 'argument-mng') {\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (fieldMng != undefined) {\r\n                callback((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n        }\r\n        if (mngType !== 'inhfld-mng') {\r\n            const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n            if (visualMng != undefined) {\r\n                callback((visualMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n            const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n            if (behaviorMng != undefined) {\r\n                callback((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n        }\r\n        const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                if (mngType !== 'inhfld-mng') {\r\n                    const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                    // Inherit配下のField要素のチェック\r\n                    if (inhfld != null) {\r\n                        callback((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                    }\r\n                }\r\n                // Extend要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default LogicElementUtil;","import styled from \"styled-components\";\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\nimport { GlobalContext } from \"../../entry/systemEntry\";\nimport FormUtil from \"../../../utils/form/formUtiil\";\nimport TreeUtil from \"../../../utils/treeUtil\";\nimport LogicUtil from \"../factory/util/logicUtil\";\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\nimport CanvasUtil from \"../../../utils/canvasUtil\";\nimport Particle from \"../../graphic/particle\";\nimport PreviewUtil from \"./previewUtil\";\nimport Styles from \"../../../base/design/styles\";\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\n\nnamespace LogicPreviewFrame {\n\n    const width = 600;\n    const height = 660;\n\n    export const Component = (props: {\n        node: TreeUtil.ElementNode;\n        rootData: LogicUtil.WrapElement;\n    }) => {\n        const { store, setStore } = useContext(GlobalContext);\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\n\n        const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\n\n        const [sceens, setSceens] = useState<string[]>([]);\n        const [frameCnt, setFrameCnt] = useState<number>(-1);\n        const [tabIndex, setTabIndex] = useState<number>(0);\n        const [cur, setCur] = useState<number>(0);\n        const [isBuild, setBuild] = useState<boolean>(false);\n        const [isPlay, setPlay] = useState<boolean>(false);\n\n        useEffect(() => {\n            if (isPlay) {\n                if (cur < frameCnt) {\n                    setTimeout(() => {\n                        setCur(cur + 1);\n                    }, 1000 / 30);\n                } else {\n                    setPlay(false);\n                    setCur(0);\n                }\n            }\n        }, [isPlay, cur]);\n\n        const argMapList = useMemo((): { key: string, value: string }[] => {\n            const type = (props.node.data as LogicUtil.WrapElement).type;\n            switch (type) {\n                case 'logic-item': {\n                    const argWrap = LogicElementUtil.getInnerWrap(props.node.data, 'argument-mng');\n                    if (argWrap != null) {\n                        return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\n                            const argItem = arg.data as LogicUtil.NodeArgumentItem;\n                            let value: string = '';\n                            return { key: argItem.name, value };\n                        });\n                    }\n                } break;\n                case 'seed-item': {\n                    const argWrap = LogicElementUtil.getInnerWrap(props.node.data, 'interface-mng', 'seedarg-mng');\n                    if (argWrap != null) {\n                        return (argWrap.data as LogicUtil.NodeSeedArgManager).args.map(arg => {\n                            const argItem = arg.data as LogicUtil.NodeSeedArgItem;\n                            let value: string = '';\n                            if (argItem.defval != undefined) value = argItem.defval.toString();\n                            return { key: argItem.name, value };\n                        });\n                    }\n                } break;\n            }\n            return [];\n        }, []);\n\n        useEffect(() => {\n            setFormList(argMapList.map(arg => {\n                return { value: arg.value, errors: [] };\n            }));\n        }, []);\n\n        const formListJsx = useMemo(() => {\n            return formList.map((form, i) => {\n                return (\n                    <FormUtil.FormRecord\n                        key={i}\n                        titleLabel={argMapList.map(arg => arg.key)[i]}\n                        labelWidth={250}\n                        jsx={\n                            <FormUtil.TextField\n                                width={332}\n                                isNumber\n                                checkable={form}\n                                setCheckable={(checkable) => {\n                                    form = { ...checkable };\n                                    setFormList(formList.slice());\n                                }}\n                                validates={[\n                                    {\n                                        checker: (value) => ValidateUtil.checkRequired(value),\n                                        errorType: \"required\"\n                                    }\n                                ]}\n                            />\n                        }\n                    />);\n            });\n        }, [formList]);\n\n        const build = () => {\n\n            setBuild(true);\n\n            const sceens: string[] = [];\n\n            const owner: Particle.Instance[] = [];\n\n            let frameCnt = 0;\n            do {\n                if (frameCnt === 0) {\n                    const getOrigin = () => {\n                        const type = (props.node.data as LogicUtil.WrapElement).type as 'logic-item' | 'seed-item';\n                        switch (type) {\n                            case 'logic-item': return (props.node.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\n                            case 'seed-item': {\n                                const seed = (props.node.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\n                                const root = (props.node.parent?.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeRoot;\n                                const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\n                                return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\n                            }\n                        }\n                    }\n                    owner.push(new Particle.Instance(\n                        PreviewUtil.buildLogicProps(owner, getOrigin(), props.rootData, formList.map((form, i) => {\n                            return { name: argMapList.map(arg => arg.key)[i], value: Number(form.value) }\n                        }))\n                    ));\n                }\n\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\n\n                    // パーティクルの描画\n                    owner.forEach(par => {\n                        par.draw(ctx);\n                    });\n\n                    // 経過フレーム、要素数の表示\n                    ctx.globalAlpha = 1;\n                    ctx.font = '16pt Arial';\n                    ctx.fillStyle = '#ffffff';\n                    ctx.fillText(`${frameCnt}`, 6, 24);\n                    ctx.fillStyle = '#ffec5c';\n                    ctx.fillText(`${owner.length}`, 6, 44);\n\n                    ctx.save();\n                }));\n\n                // パーティクルの更新\n                for (let i = owner.length - 1; i >= 0; i--) {\n                    const particle = owner[i];\n\n                    particle.update();\n                }\n\n                // 死滅したパーティクルの削除\n                for (let i = owner.length - 1; i >= 0; i--) {\n                    const particle = owner[i];\n                    if (!particle.isLive) {\n                        owner.splice(i, 1);\n                    }\n                }\n\n                if (frameCnt > 500 || owner.length > 3000) break;\n                frameCnt++;\n            } while (owner.length > 0);\n            setFrameCnt(frameCnt);\n            setSceens(sceens);\n\n            setBuild(false);\n            setTabIndex(1);\n        }\n\n\n        const isInputOK = () => {\n            return formList.find(form => form.errors.length > 0) == undefined;\n        }\n        const buildTabJsx = (\n            <_Wrap>\n                <_FormDiv>\n                    {formListJsx}\n                </_FormDiv>\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={[\n                        {\n                            label: 'Build',\n                            isEnable: isInputOK() && !isBuild,\n                            callback: () => {\n                                build();\n                            }\n                        }\n                    ]}\n                />\n            </_Wrap>\n        );\n\n        const previewTabJsx = (\n            <_Wrap>\n                <_CanvasDiv>\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\n                </_CanvasDiv>\n                <_ProgressDiv ref={ref} onClick={(e) => {\n                    if (isPlay) return;\n                    const clickX = e.pageX;\n                    // 要素の位置を取得\n                    const clientRect = ref.current.getBoundingClientRect();\n                    const positionX = clientRect.left + window.pageXOffset;\n\n                    // 要素内におけるクリック位置を計算\n                    const x = clickX - positionX;\n                    const rate = x / clientRect.width;\n                    setCur(Math.floor(frameCnt * rate));\n                }}>\n                    <_ProgressVal rate={100 * cur / (frameCnt - 1)} />\n                </_ProgressDiv>\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={[\n                        {\n                            label: '←',\n                            width: 50,\n                            isEnable: !isPlay && cur > 0,\n                            callback: () => {\n                                setCur(cur - 1);\n                            }\n                        },\n                        {\n                            label: '→',\n                            width: 50,\n                            isEnable: !isPlay && cur < sceens.length - 1,\n                            callback: () => {\n                                setCur(cur + 1);\n                            }\n                        },\n                        {\n                            label: !isPlay ? 'start' : 'Stop',\n                            callback: () => {\n                                setPlay(!isPlay);\n                            }\n                        },\n                        {\n                            label: 'reset',\n                            isEnable: !isPlay,\n                            callback: () => {\n                                setCur(0);\n                            }\n                        },\n                    ]}\n                />\n            </_Wrap>\n        );\n\n        return (\n            <_Frame\n                width={width}\n                height={height}\n                tabIndex={0}\n                onKeyDown={(e) => {\n                    if (tabIndex === 0) {\n                        if (isInputOK() && e.key === ' ') build();\n                    } else {\n                        switch (e.key) {\n                            case 'ArrowLeft': {\n                                if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\n                            } break;\n                            case 'ArrowRight': {\n                                if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\n                            } break;\n                            case ' ': {\n                                setPlay(!isPlay);\n                            } break;\n                        }\n                    }\n                    if (!isPlay && e.key === 'Escape') {\n                        store.system.dialog = null;\n                        setStore({ ...store });\n                    }\n                }}\n            >\n                <_Main>\n                    <TabbedPane\n                        tabElements={[\n                            { name: 'Build', enable: true, cont: buildTabJsx },\n                            { name: 'Play', enable: frameCnt !== -1, cont: previewTabJsx }\n                        ]}\n                        activeNo={tabIndex}\n                        selectTabIndex={(index: number) => setTabIndex(index)}\n                    />\n                </_Main>\n                <_CloseButton\n                    isEnable={!isPlay}\n                    onClick={() => {\n                        store.system.dialog = null;\n                        setStore({ ...store });\n                    }}\n                >×</_CloseButton>\n            </_Frame>\n        );\n    }\n}\n\nexport default LogicPreviewFrame;\n\nconst _Frame = styled.div<{\n    width: number;\n    height: number;\n}>`\n    display: inline-block;\n    position: absolute;\n    z-index: 11;\n    top: calc(50% - ${props => props.height / 2}px);\n    left: calc(50% - ${props => props.width / 2}px);\n    width: ${props => props.width}px;\n    height: ${props => props.height}px;\n    background-color: #e7e7e7e2;\n    border: 1px solid #8f8f8f;\n    border-radius: 4px;\n    box-shadow: 10px 15px 15px #0000004b;\n`;\n\nconst _Main = styled.div<{}>`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    background-color: #4d5056df;\n`;\nconst _FormDiv = styled.div<{}>`\n    display: inline-block;\n    width: 100%;\n    height: 580px;\n    background-color: #a2c1d5df;\n`;\nconst _CanvasDiv = styled.div<{}>`\n    display: inline-block;\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\n    margin: 5px 0 0 20px;\n    background-color: #020202df;\n    border: solid 1px #fff;\n    box-sizing: border-box;\n`;\n\nconst _Wrap = styled.div<{}>`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    background-color: #aed5d8e0;\n`;\n\nconst _ProgressDiv = styled.div<{}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: 20px;\n    margin: 5px 0 0 4px;\n    background-color: #000000;\n    border: solid 1px #fff;\n    box-sizing: border-box;\n`;\nconst _ProgressVal = styled.div<{\n    rate: number;\n}>`\n    display: inline-block;\n    position: relative;\n    width: ${props => props.rate}%;\n    height: 100%;\n    /* background-color: #2fccf3; */\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\n`;\n\nconst _IMG = styled.img`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    height: 100%;\n`;\n\nconst _CloseButton = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    position: absolute;\n    top: 2px;\n    right: 4px;\n    width: 30px;\n    height: 30px;\n    z-index: 12;\n    background-color: #d5d5d5;\n    border: 1px solid #3d3d3d;\n    border-radius: 4px;\n    font-size: 18px;\n    padding-left: 8px;\n    font-weight: 600;\n    color: #3d3d3d;\n    box-sizing: border-box;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    &:hover {\n        background-color: #ce9595;\n    }\n`;","import { useContext } from \"react\";\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\nimport TreeUtil from \"../../../../../utils/treeUtil\";\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\nimport LogicElementUtil from \"../../util/logicElementUtil\";\nimport LogicUtil from \"../../util/logicUtil\";\n\nconst EditorArgumentMng = () => {\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\n    const wrap = node.data as LogicUtil.WrapElement;\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"operation\"\n            innerJsx={<FormUtil.ButtonRecord\n                align=\"center\"\n                buttons={[\n                    {\n                        label: 'Add Argument',\n                        callback: () => {\n                            const newWrap: LogicUtil.WrapElement = {\n                                type: 'argument-item',\n                                data: null\n                            };\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\n                            setFocusNode(newNode);\n                        }\n                    }\n                ]}\n            />}\n        />\n    </>);\n}\n\nexport default EditorArgumentMng;","import { useContext, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nnamespace ModifyOperations {\r\n\r\n    export type Props = {\r\n        mappingForm: () => void;\r\n        checkableFields: FormUtil.CheckableValue[];\r\n        isInputOK?: boolean;\r\n        firstRegist: () => void;\r\n        modifyRegist: () => void;\r\n    }\r\n\r\n    export const Component = (props: Props) => {\r\n        const { node, isModify, setModify, removeSelf } = useContext(FactoryTreeContext);\r\n\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n        const isComplete = FormUtil.isCompleteCheck(props.checkableFields);\r\n\r\n        return (<>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: isModify,\r\n                        callback: () => {\r\n                            if (wrap.data == null) {\r\n                                removeSelf();\r\n                            } else {\r\n                                props.mappingForm();\r\n                            }\r\n                            setModify(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !isModify || (props.isInputOK ?? isComplete),\r\n                        callback: () => {\r\n                            if (!isModify) {\r\n                                setModify(true);\r\n                            } else {\r\n                                if (wrap.data == null) {\r\n                                    props.firstRegist();\r\n                                } else {\r\n                                    props.modifyRegist();\r\n                                }\r\n                                setModify(false);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default ModifyOperations;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../../../../base/design/styles\";\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\nimport TreeUtil from \"../../../../../utils/treeUtil\";\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\nimport PreviewUtil from \"../../../preview/previewUtil\";\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\nimport LogicElementUtil from \"../../util/logicElementUtil\";\nimport LogicUtil from \"../../util/logicUtil\";\nimport ParamUtil from \"../../util/paramUtil\";\nimport ModifyOperations from \"../common/modifyOperations\";\n\ntype FormProps = {\n    inputType: FormUtil.CheckableValue;\n    value: FormUtil.CheckableValue;\n};\n\nenum Level {\n    FIELD = 0,\n    INITIAL,\n    INHERIT_FIELD,\n    INHERIT_EXTEND,\n    INHERIT_SEND\n}\n\nconst EditorParamItem = () => {\n    const { store, setStore } = useContext(GlobalContext);\n    const { removeSelf, node, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\n    const wrap = node.data as LogicUtil.WrapElement;\n\n    /** 名前 */\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    /** 式 */\n    const [formulaItems, setFormulaItems] = useState<string[]>([]);\n    /** 変数の入力フォーム */\n    const [varFormList, setVarFormList] = useState<FormProps[]>([]);\n    // const [formJsxList, setFaormJsxList] = useState<JSX.Element[]>([]);\n\n    const isField = wrap.type === 'field-item';\n    const isCondition = wrap.type === 'condition-item';\n\n    const mappingForm = () => {\n        const param = wrap.data as LogicUtil.NodeParamItem;\n        setName({ value: param.name, errors: [] });\n        setFormulaItems(param.formulaItems.slice());\n        setVarFormList(param.values.map(v => {\n            return {\n                inputType: { value: v.type, errors: [] },\n                value: { value: v.value, errors: [] }\n            }\n        }));\n    };\n\n    useEffect(() => {\n        if (wrap.data == null) {\n            setModify(true);\n        } else {\n            mappingForm();\n        }\n    }, [node]);\n\n    const level: Level = useMemo(() => {\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\n        switch (parentType) {\n            case 'field-mng': return Level.FIELD;\n            case 'visual-mng':\n            case 'behavior-mng': return Level.INITIAL;\n            case 'inhfld-mng': return Level.INHERIT_FIELD;\n            case 'extend-mng': return Level.INHERIT_EXTEND;\n            case 'send-mng': return Level.INHERIT_SEND;\n        }\n        return -1;\n    }, [node]);\n\n    /**\n     * 引数とフィールド変数のキーリストを取得する。\n     */\n    const [argumentList, fieldKeyList] = useMemo(() => {\n        let argumentList: string[] = [];\n        const fieldKeys: string[] = [];\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\n        const targetTypes: LogicUtil.NodeType[] = ['field-mng', 'behavior-mng', 'visual-mng', 'inhfld-mng', 'send-mng', 'extend-mng'];\n        if (targetTypes.includes(parentType)) {\n            const getLogicNode = () => {\n                switch (parentType) {\n                    case 'field-mng':\n                    case 'visual-mng':\n                    case 'behavior-mng': return node.parent?.parent;\n                    case 'inhfld-mng':\n                    case 'send-mng':\n                    case 'extend-mng': return node?.parent?.parent?.parent?.parent;\n                }\n            };\n            const logicItem = (getLogicNode()?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\n            // 引数リストを追加\n            const argMng = logicItem.mngs.find(mng => mng.type === 'argument-mng');\n            if (argMng != undefined) {\n                argumentList = (argMng.data as LogicUtil.NodeArgumentManager).\n                    args.map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\n            }\n            // 変数リストを追加\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\n            if (level >= Level.INITIAL && fieldMng != undefined) {\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\n                    const fieldName = (field.data as LogicUtil.NodeParamItem).name;\n                    fieldKeys.push(fieldName);\n                });\n            }\n        } else if (parentType === 'seedsend-mng') {\n            // シード配下のSendは特別に扱う（どのレベルにも属さない）\n            const argMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'seedarg-mng');\n            if (argMng != null) {\n                argumentList = (argMng.data as LogicUtil.NodeSeedArgManager).\n                    args.map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\n            } else throw new Error('argMng is undefined.');\n        }\n        if (level >= Level.INHERIT_FIELD) {\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_X);\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_Y);\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_X);\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_Y);\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_RAD);\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_LEN);\n            // fieldKeys.push(ParamUtil.VisualParamType.RADIUS);\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_R);\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_G);\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_B);\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_A);\n\n            // フィールドキーにInherit配下のFieldパラメータを追加\n            if (level >= Level.INHERIT_EXTEND) {\n                const inhfldNode = LogicElementUtil.getInnerNode(node.parent?.parent as TreeUtil.ElementNode, 'inhfld-mng');\n                if (inhfldNode != null) {\n                    const fieldMng = (inhfldNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeFieldManager;\n                    fieldMng.fields.forEach(field => {\n                        const fieldName = (field.data as LogicUtil.NodeParamItem).name;\n                        fieldKeys.push(fieldName);\n                    });\n                }\n            }\n            // フィールドキーにExtendパラメータを追加\n            if (level === Level.INHERIT_SEND) {\n                const extendWrap = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'extend-mng') as LogicUtil.WrapElement;\n                const extendElement = extendWrap.data as LogicUtil.NodeParamManager;\n                //Extendにloop_countのパラメータがある場合\n                if (extendElement.params.find(\n                    param => (param.data as LogicUtil.NodeParamItem).name === ParamUtil.ExtendParamType.LOOP_COUNT\n                ) != undefined) {\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_COUNT);\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_ITERATE);\n                }\n            }\n        }\n        return [argumentList, fieldKeys];\n    }, [node]);\n\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\n    const paramNameList = useMemo(() => {\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\n        return LogicElementUtil.getParamNameList(owner);\n    }, [node]);\n\n    useEffect(() => {\n        let num = 0;\n        formulaItems.forEach((item) => {\n            if (item === 'var') num++;\n        });\n\n        if (varFormList.length < num) {\n            const addNum = num - varFormList.length;\n            for (let i = 0; i < addNum; i++) varFormList.push({\n                inputType: { value: 'direct', errors: [] },\n                value: { value: '', errors: [] }\n            });\n            setVarFormList(varFormList.slice());\n        } else if (varFormList.length > num) {\n            const delNum = varFormList.length - num;\n            for (let i = 0; i < delNum; i++) varFormList.splice(varFormList.length - delNum, delNum);\n            setVarFormList(varFormList.slice());\n        }\n    }, [formulaItems]);\n\n    /** 「(」の数-「)」の数 */\n    const parenthesisBalance = useMemo(() => {\n        let num = 0;\n        formulaItems.forEach((item) => {\n            if (['(', 'rand(', 'integer('].includes(item)) num++;\n            else if (item === ')') num--;\n        });\n        return num;\n    }, [formulaItems]);\n\n    /** 値の入力フォームのJSX */\n    const formJsxList = useMemo(() => {\n        return varFormList.map((v, i) => {\n\n            const getValueForm = (): JSX.Element => {\n                const type = v.inputType.value as LogicUtil.ParamInputType;\n                if (type === 'direct') {\n                    return (\n                        <FormUtil.TextField\n                            marginLeft={2}\n                            checkable={v.value}\n                            isNumber\n                            isReadOnly={!isModify}\n                            width={178}\n                            setCheckable={(checkable) => {\n                                varFormList[i].value = checkable;\n                                setVarFormList(varFormList.slice());\n                            }}\n                            validates={[\n                                {\n                                    checker: (value) => ValidateUtil.checkRequired(value),\n                                    errorType: \"required\"\n                                }\n                            ]}\n                        />\n                    );\n                } else {\n                    let list: string[] = [];\n                    if (type === 'argument') {\n                        list = argumentList;\n                    } else if (type === 'field') {\n                        list = fieldKeyList;\n                    } else if (type === 'self') {\n                        list = ParamUtil.SelfParams;\n                    } else if (type === 'constant') {\n                        list = PreviewUtil.ConstantValueMap.map(item => item.name);\n                    }\n                    return (\n                        <FormUtil.Combobox\n                            marginLeft={2}\n                            checkable={v.value}\n                            width={178}\n                            isReadOnly={!isModify}\n                            setCheckable={(checkable) => {\n                                varFormList[i].value = checkable;\n                                setVarFormList(varFormList.slice());\n                            }}\n                            list={list.map(item => {\n                                return { value: item, labelText: item };\n                            })}\n                            headBlank\n                            validates={[\n                                {\n                                    checker: (value) => ValidateUtil.checkRequired(value),\n                                    errorType: \"required\"\n                                }\n                            ]}\n                        />\n                    );\n                }\n            }\n            return <FormUtil.FormRecord\n                key={i}\n                titleLabel={`var_${i}`}\n                labelWidth={90}\n                marginTop={i === 0 ? 4 : 0}\n                jsx={<>\n                    <FormUtil.Combobox\n                        checkable={v.inputType}\n                        width={142}\n                        isReadOnly={!isModify}\n                        setCheckable={(checkable) => {\n                            varFormList[i].inputType = checkable;\n                            if (isModify) {\n                                varFormList[i].value.value = checkable.value === 'direct' ? '0' : '';\n                            }\n                            setVarFormList(varFormList.slice());\n                        }}\n                        list={LogicUtil.ParamInputTypes.filter(item => {\n                            switch (item) {\n                                case 'direct':\n                                case 'constant':\n                                case 'argument': return true;\n                                case 'field': return level >= Level.INITIAL;\n                                case 'self': return level >= Level.INHERIT_FIELD;\n                            }\n                        }).map(item => {\n                            return { value: item, labelText: item };\n                        })}\n                    />\n                    {getValueForm()}\n                </>}\n            />;\n        });\n    }, [varFormList, isModify]);\n\n    const getFormulaJsx = () => {\n        let num = 0;\n        const jsxList: JSX.Element[] = [];\n        formulaItems.forEach((item) => {\n            if (jsxList.length > 0) {\n                jsxList.push(<span key={jsxList.length}>&nbsp;</span>);\n            }\n            if (item === 'var') {\n                jsxList.push(<_Var key={jsxList.length}>{`$\\{var_${num}}`}</_Var>);\n                num++;\n            } else {\n                jsxList.push(<_Sig key={jsxList.length}>{item}</_Sig>);\n            }\n        });\n        return jsxList;\n    }\n\n    const isLastVar = () => formulaItems.length > 0 && ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\n    const isFormulaOK = parenthesisBalance === 0 && varFormList.length > 0 &&\n        ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\n    const hasFormError = !isFormulaOK || varFormList.find(varForm => varForm.value.errors.length > 0) != undefined;\n\n\n    const getFormulaItem = (label: string, width: number, isEnable: boolean, value: string) => {\n        return {\n            label, width, isEnable,\n            callback: () => {\n                formulaItems.push(value);\n                setFormulaItems(formulaItems.slice());\n            }\n        };\n    }\n\n    return (<>\n        <ModifyOperations.Component\n            mappingForm={mappingForm}\n            checkableFields={[]}\n            firstRegist={() => {\n                const param: LogicUtil.NodeParamItem = {\n                    name: name.value,\n                    formulaItems: formulaItems.slice(),\n                    values: varFormList.map(varForm => {\n                        return {\n                            type: varForm.inputType.value as LogicUtil.ParamInputType,\n                            value: varForm.value.value\n                        }\n                    })\n                };\n                param.name = name.value;\n                wrap.data = param;\n            }}\n            isInputOK={parenthesisBalance === 0 && !hasFormError && name.errors.length === 0}\n            modifyRegist={() => {\n                const data = wrap.data as LogicUtil.NodeParamItem;\n                data.formulaItems = formulaItems.slice();\n                data.values = varFormList.map(varForm => {\n                    return {\n                        type: varForm.inputType.value as LogicUtil.ParamInputType,\n                        value: varForm.value.value\n                    }\n                });\n                if (isField) {\n                    const prevName = data.name;\n                    data.name = name.value;\n                    if (prevName !== name.value) {\n                        syncFieldName(node.parent as TreeUtil.ElementNode, prevName, name.value);\n                    }\n                }\n            }}\n        />\n        <FormUtil.BorderPanel\n            title=\"param\"\n            innerJsx={<>\n                <FormUtil.FormRecord\n                    titleLabel=\"Name\"\n                    jsx={\n                        <FormUtil.TextField\n                            width={200}\n                            isReadOnly={!isModify || !isField}\n                            checkable={name}\n                            setCheckable={setName}\n                            validates={[\n                                {\n                                    checker: (value) => ValidateUtil.checkRequired(value),\n                                    errorType: \"required\"\n                                },\n                                {\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\n                                    errorType: \"length\"\n                                },\n                                {\n                                    checker: (value) => LogicUtil.checkFieldName(value),\n                                    errorType: \"value\"\n                                },\n                                {\n                                    checker: (value) => {\n                                        const list = paramNameList.filter(name => {\n                                            // 自分自身のパラメータ名を除外\n                                            if (wrap.data != null) {\n                                                return (wrap.data as LogicUtil.NodeParamItem).name !== name;\n                                            }\n                                            return true;\n                                        });\n                                        return !list.includes(value);\n                                    },\n                                    errorType: \"relation\"\n                                }\n                            ]}\n                        />\n                    }\n                />\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={[\n                        getFormulaItem('+', 50, isModify && isLastVar(), '+'),\n                        getFormulaItem('-', 50, isModify && isLastVar(), '-'),\n                        getFormulaItem('*', 50, isModify && isLastVar(), '*'),\n                        getFormulaItem('/', 50, isModify && isLastVar(), '/'),\n                        getFormulaItem('%', 50, isModify && isLastVar(), '%'),\n                        getFormulaItem('(', 35, isModify && !isLastVar(), '('),\n                        getFormulaItem(')', 35, isModify && isLastVar() && parenthesisBalance > 0, ')'),\n                        {\n                            label: 'del',\n                            width: 60,\n                            isEnable: isModify && formulaItems.length > 0,\n                            callback: () => {\n                                formulaItems.splice(formulaItems.length - 1, 1);\n                                setFormulaItems(formulaItems.slice());\n                            }\n                        },\n                    ]}\n                />\n                {!isCondition ? <></> : (\n                    <FormUtil.ButtonRecord\n                    align=\"center\"\n                        buttons={[\n                            getFormulaItem('<', 50, isModify && isLastVar(), '<'),\n                            getFormulaItem('<=', 50, isModify && isLastVar(), '<='),\n                            getFormulaItem('=', 50, isModify && isLastVar(), '='),\n                            getFormulaItem('>=', 50, isModify && isLastVar(), '>='),\n                            getFormulaItem('>', 50, isModify && isLastVar(), '>'),\n                            getFormulaItem('&&', 50, isModify && isLastVar(), '&&'),\n                            getFormulaItem('||', 50, isModify && isLastVar(), '||'),\n                        ]}\n                    />\n                )}\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={[\n                        getFormulaItem('var', 70, isModify && !isLastVar(), 'var'),\n                        getFormulaItem('rand', 80, isModify && !isLastVar(), 'rand('),\n                        getFormulaItem('integer', 80, isModify && !isLastVar(), 'integer('),\n                        {\n                            label: 'clear',\n                            isEnable: isModify && formulaItems.length > 0,\n                            width: 90,\n                            callback: () => {\n                                setFormulaItems([]);\n                            }\n                        },\n                    ]}\n                />\n                <_Formula\n                    isInvalid={!isFormulaOK}\n                >{getFormulaJsx()}</_Formula>\n                {formJsxList}\n            </>}\n        />\n        <FormUtil.BorderPanel\n            title=\"operation\"\n            isEnable={!isModify && isField}\n            innerJsx={<>\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={[\n                        {\n                            label: 'Delete',\n                            isEnable: !isModify,\n                            callback: () => {\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\n                                const refers = getFieldRefers(node, param.name);\n                                if (refers.length === 0) {\n                                    removeSelf();\n                                } else {\n                                    store.system.dialog = <ConfirmDialog.Component\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\n                                    />;\n                                    setStore({ ...store });\n                                }\n                            }\n                        }\n                    ]}\n                />\n                {/* 並び順入れ替えボタン */}\n                {!isField ? <></> : LogicElementUtil.getSwapButtons(node, invalidate)}\n            </>}\n        />\n    </>);\n}\n\nexport default EditorParamItem;\n\n\n/**\n * ノードの変数を参照している箇所のリストを返す。\n * @param node 変数のノード\n * @param argName 変数名\n * @returns 参照パラメータリスト\n */\nexport const getFieldRefers = (node: TreeUtil.ElementNode, argName: string) => {\n\n    const refers: string[] = [];\n\n    const callback = (list: LogicUtil.WrapElement[]) => {\n        list.forEach(wrap => {\n            const param = wrap.data as LogicUtil.NodeParamItem;\n            param.values.forEach(varItem => {\n                if (varItem.type === 'field' && varItem.value === argName) {\n                    refers.push(param.name);\n                }\n            });\n        });\n    }\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\n\n    return refers;\n}\n\n/**\n * フィールド名の変更に伴い、式で参照している変数を同期する\n * @param mngNode ノード\n */\nexport const syncFieldName = (mngNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\n\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\n        list.forEach(wrap => {\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\n            values.forEach(varItem => {\n                if (varItem.type === 'field' && varItem.value === prevName) {\n                    varItem.value = newName;\n                }\n            });\n        });\n    }\n\n    const type = (mngNode.data as LogicUtil.WrapElement).type;\n    if (type === 'field-mng') {\n        const logic = (mngNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\n\n        const visualMng = logic.mngs.find(mng => mng.type === 'visual-mng');\n        if (visualMng != undefined) {\n            syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\n        }\n        const behaviorMng = logic.mngs.find(mng => mng.type === 'behavior-mng');\n        if (behaviorMng != undefined) {\n            syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\n        }\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\n        if (inhMng != undefined) {\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\n                const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\n                // Inherit配下のField要素のチェック\n                if (inhfld != null) {\n                    syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\n                }\n                // Extend要素のチェック\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\n                // Send要素のチェック\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\n            });\n        }\n    } else if (type === 'inhfld-mng') {\n        const inheritWrap = mngNode.parent?.data as LogicUtil.WrapElement;\n\n        // Extend要素のチェック\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\n        // Send要素のチェック\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\n    }\n}\n\nconst _Formula = styled.div<{\n    isInvalid: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 12px);\n    ${Styles.CSS_LABEL_MIDIUM}\n    overflow-wrap: break-word;\n    height: 100px;//calc(100% - 4px);\n    color: #585858;\n    border: solid 1px #7a7a7abf;\n    box-sizing: border-box;\n    background-color: #ffffff8b;\n    ${props => !props.isInvalid ? '' : css`\n        background-color: #ffe8628a;\n    `}\n    border-radius: 4px;\n    text-align: left;\n    padding: 0 0 0 4px;\n    vertical-align: top;\n    margin: 5px 0 0 6px;\n`;\nconst _Var = styled.span`\n    color: #e70013;\n`;\nconst _Sig = styled.span`\n    color: #3333339d;\n`;","import { type } from \"os\";\nimport { useContext, useEffect, useMemo, useState } from \"react\";\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\nimport TreeUtil from \"../../../../../utils/treeUtil\";\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\nimport GloballDialog from \"../../../../dialog/globalDialog\";\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\nimport LogicElementUtil from \"../../util/logicElementUtil\";\nimport LogicUtil from \"../../util/logicUtil\";\nimport ModifyOperations from \"../common/modifyOperations\";\n\nconst EditorArgumentItem = () => {\n    const { store, setStore } = useContext(GlobalContext);\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\n    const wrap = node.data as LogicUtil.WrapElement;\n\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\n\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\n    const reservedList = useMemo(() => {\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\n        return LogicElementUtil.getParamNameList(owner);\n    }, [node]);\n\n    const mappingForm = () => {\n        const param = wrap.data as LogicUtil.NodeArgumentItem;\n        setName({ ...name, value: param.name });\n        setArgType({ ...argType, value: param.valueType });\n    };\n\n    useEffect(() => {\n        if (wrap.data == null) {\n            setModify(true);\n        } else {\n            mappingForm();\n        }\n    }, [node]);\n\n    return (<>\n        <ModifyOperations.Component\n            mappingForm={mappingForm}\n            checkableFields={[name, argType]}\n            firstRegist={() => {\n                const param: LogicUtil.NodeArgumentItem = {\n                    name: name.value,\n                    valueType: argType.value as LogicUtil.ArgumentType\n                };\n                param.name = name.value;\n                wrap.data = param;\n                syncArgumentAdd(node.parent?.parent as TreeUtil.ElementNode, name.value);\n            }}\n            modifyRegist={() => {\n                const param = wrap.data as LogicUtil.NodeArgumentItem;\n                const prevName = param.name;\n                param.name = name.value;\n                param.valueType = argType.value as LogicUtil.ArgumentType;\n                wrap.data = param;\n\n                if (prevName !== name.value) {\n                    syncArgumentName(node.parent?.parent as TreeUtil.ElementNode, prevName, name.value);\n                }\n            }}\n        />\n        <FormUtil.BorderPanel\n            title=\"param\"\n            innerJsx={<>\n                <FormUtil.FormRecord\n                    titleLabel=\"Name\"\n                    jsx={\n                        <FormUtil.TextField\n                            width={200}\n                            isReadOnly={!isModify}\n                            checkable={name}\n                            setCheckable={setName}\n                            validates={[\n                                {\n                                    checker: (value) => ValidateUtil.checkRequired(value),\n                                    errorType: \"required\"\n                                },\n                                {\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\n                                    errorType: \"length\"\n                                },\n                                {\n                                    checker: (value) => LogicUtil.checkFieldName(value),\n                                    errorType: \"value\"\n                                },\n                                {\n                                    checker: (value) => {\n                                        const list = reservedList.filter(name => {\n                                            // 自分自身のパラメータ名を除外\n                                            if (wrap.data != null) {\n                                                return (wrap.data as LogicUtil.NodeArgumentItem).name !== name;\n                                            }\n                                            return true;\n                                        });\n                                        return !list.includes(value);\n                                    },\n                                    errorType: \"relation\"\n                                }\n                            ]}\n                        />\n                    }\n                />\n                <FormUtil.FormRecord\n                    titleLabel=\"Type\"\n                    jsx={\n                        <FormUtil.Combobox\n                            checkable={argType}\n                            setCheckable={setArgType}\n                            list={LogicUtil.ArgTypes.map(type => {\n                                return { value: type, labelText: type, isDisabled: type === 'color' }\n                            })}\n                            headBlank\n                            width={200}\n                            isReadOnly={!isModify}\n                            validates={\n                                [\n                                    {\n                                        checker: (value) => ValidateUtil.checkRequired(value),\n                                        errorType: \"required\"\n                                    }\n                                ]\n                            }\n                        />\n                    }\n                />\n            </>}\n        />\n        <FormUtil.BorderPanel\n            title=\"operation\"\n            isEnable={!isModify}\n            innerJsx={<>\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={[\n                        {\n                            label: 'Delete',\n                            isEnable: !isModify,\n                            callback: () => {\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\n                                const refers = getArgumentRefers(node, param.name);\n                                if (refers.length === 0) {\n                                    // DependしているInheritのSendパラメータを同期する\n                                    syncArgumentDel(node.parent?.parent as TreeUtil.ElementNode, name.value);\n                                    removeSelf();\n                                } else {\n                                    store.system.dialog = <ConfirmDialog.Component\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\n                                    />;\n                                    setStore({ ...store });\n                                }\n                            }\n                        }\n                    ]}\n                />\n                {/* 並び順入れ替えボタン */}\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\n            </>}\n        />\n    </>);\n}\n\nexport default EditorArgumentItem;\n\n/**\n * ノードの引数を参照している箇所のリストを返す。\n * @param node 引数のノード\n * @param argName 引数名\n * @returns 参照パラメータリスト\n */\nexport const getArgumentRefers = (node: TreeUtil.ElementNode, argName: string) => {\n\n    const refers: string[] = [];\n\n    const callback = (list: LogicUtil.WrapElement[]) => {\n        list.forEach(wrap => {\n            const param = wrap.data as LogicUtil.NodeParamItem;\n            param.values.forEach(varItem => {\n                if (varItem.type === 'argument' && varItem.value === argName) {\n                    refers.push(param.name);\n                }\n            });\n        });\n    }\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\n\n    return refers;\n}\n\n/**\n* 引数名の変更に伴い、式で参照している変数を同期する\n* @param logicNode ロジックノード\n*/\nexport const syncArgumentName = (logicNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\n\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\n        list.forEach(wrap => {\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\n            values.forEach(varItem => {\n                if (varItem.type === 'argument' && varItem.value === prevName) {\n                    varItem.value = newName;\n                }\n            });\n        });\n    }\n\n    const wrap = logicNode.data as LogicUtil.WrapElement;\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\n    const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\n    if (fieldMng != undefined) {\n        syncFormula((fieldMng.data as LogicUtil.NodeFieldManager).fields);\n    }\n    const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\n    if (visualMng != undefined) {\n        syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\n    }\n    const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\n    if (behaviorMng != undefined) {\n        syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\n    }\n    const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\n    if (inhMng != undefined) {\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\n            const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\n            // Inherit配下のField要素のチェック\n            if (inhfld != null) {\n                syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\n            }\n            // Extend要素のチェック\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\n            // Send要素のチェック\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\n        });\n    }\n\n    const syncParamName = (params: LogicUtil.WrapElement[]) => {\n        params.forEach(wrap => {\n            const item = wrap.data as LogicUtil.NodeParamItem;\n            if (item.name === prevName) {\n                item.name = newName;\n            }\n        });\n    }\n    if (wrap.type === 'logic-item') {\n\n        // dependしている箇所を全て反映するために再帰で洗う\n        const runRec = (logic: LogicUtil.NodeLogicItem) => {\n            const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\n            if (inhMng == undefined) return;\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\n                const conn = inh.data as LogicUtil.NodeInheritConnector;\n                if (conn.method === 'create') {\n                    const inhLogic = (LogicElementUtil.getInnerWrap(inh, 'inherit-logic') as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\n                    runRec(inhLogic);\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\n                    const sendMng = (LogicElementUtil.getInnerWrap(inh, 'send-mng') as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\n                    syncParamName(sendMng.params);\n                }\n            });\n        }\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\n        logicMngNode.children.forEach(logic => {\n            runRec((logic.data as LogicUtil.WrapElement).data);\n        });\n    } else if (wrap.type === 'inherit-logic') {\n        const connWrap = logicNode.parent?.data as LogicUtil.WrapElement;\n        const sendMng = (LogicElementUtil.getInnerWrap(connWrap, 'send-mng') as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\n        syncParamName(sendMng.params);\n    }\n}\n\n/**\n * 引数の更新に伴い、参照先のSend管理に処理（callback）を行う\n * @param logicNode ロジックノード\n * @param callback 処理\n */\nconst syncArgumentCallback = (\n    logicNode: TreeUtil.ElementNode,\n    callback: (sendNode: TreeUtil.ElementNode) => void\n) => {\n\n    const wrap = logicNode.data as LogicUtil.WrapElement;\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\n\n    if (wrap.type === 'logic-item') {\n        const runRec = (logicNode: TreeUtil.ElementNode) => {\n            const inhMngNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'inherit-mng');\n            if (inhMngNode == undefined) return;\n            inhMngNode.children.forEach(child => {\n                const conn = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\n                if (conn.method === 'create') {\n                    runRec(LogicElementUtil.getInnerNode(child, 'inherit-logic') as TreeUtil.ElementNode);\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\n                    callback(LogicElementUtil.getInnerNode(child, 'extend-mng') as TreeUtil.ElementNode);\n                }\n            });\n        }\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\n        logicMngNode.children.forEach(child => {\n            runRec(child);\n        });\n    } else if (wrap.type === 'inherit-logic') {\n        const sendNode = LogicElementUtil.getInnerNode(logicNode.parent as TreeUtil.ElementNode, 'send-mng') as TreeUtil.ElementNode;\n        callback(sendNode);\n    }\n}\n\n/**\n * 引数の追加に伴い、Send管理を同期する\n * @param logicNode ロジックノード\n */\nconst syncArgumentAdd = (logicNode: TreeUtil.ElementNode, newArgName: string) => {\n    const addNewParam = (sendNode: TreeUtil.ElementNode) => {\n        const paramWrap = LogicElementUtil.createParamWrap('send-item',\n            { name: newArgName, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\n        );\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\n        sendMng.params.push(paramWrap);\n        sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\n    }\n    syncArgumentCallback(logicNode, addNewParam);\n}\n\n/**\n * 引数の削除に伴い、Send管理を同期する\n * @param logicNode ロジックノード\n */\nconst syncArgumentDel = (logicNode: TreeUtil.ElementNode, delArgName: string) => {\n    const delArgParam = (sendNode: TreeUtil.ElementNode) => {\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\n        let delIndex = -1;\n        sendMng.params.some((param, i) => {\n            if ((param.data as LogicUtil.NodeParamItem).name == delArgName) {\n                delIndex = i;\n                return 1;\n            }\n        });\n        sendMng.params.splice(delIndex, 1);\n        sendNode.children.splice(delIndex, 1);\n    }\n    syncArgumentCallback(logicNode, delArgParam);\n}","import { useContext } from \"react\";\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\nimport TreeUtil from \"../../../../../utils/treeUtil\";\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\nimport LogicUtil from \"../../util/logicUtil\";\n\nconst EditorSeedMng = () => {\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\n    const wrap = node.data as LogicUtil.WrapElement;\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"operation\"\n            innerJsx={<FormUtil.ButtonRecord\n                align=\"center\"\n                buttons={[\n                    {\n                        label: 'Add Seed',\n                        callback: () => {\n                            const itemWrap: LogicUtil.WrapElement = {\n                                type: 'seed-item',\n                                data: null\n                            };\n                            (wrap.data as LogicUtil.NodeSeedManager).defs.push(itemWrap);\n                            const newNode = TreeUtil.createNode(itemWrap, node);\n                            node.children.push(newNode);\n                            setFocusNode(newNode);\n                        }\n                    }\n                ]}\n            />}\n        />\n    </>);\n}\n\nexport default EditorSeedMng;","import { useContext } from \"react\";\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\nimport TreeUtil from \"../../../../../utils/treeUtil\";\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\nimport LogicElementUtil from \"../../util/logicElementUtil\";\nimport LogicUtil from \"../../util/logicUtil\";\n\nconst EditorLogicMng = () => {\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\n    const wrap = node.data as LogicUtil.WrapElement;\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"operation\"\n            innerJsx={<FormUtil.ButtonRecord\n                align=\"center\"\n                buttons={[\n                    {\n                        label: 'Add Logic',\n                        callback: () => {\n                            const newWrap: LogicUtil.WrapElement = {\n                                type: 'logic-item',\n                                data: null\n                            };\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\n                            setFocusNode(newNode);\n                        }\n                    }\n                ]}\n            />}\n        />\n    </>);\n}\n\nexport default EditorLogicMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\nimport TreeUtil from \"../../../../../utils/treeUtil\";\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\nimport LogicUtil from \"../../util/logicUtil\";\nimport ModifyOperations from \"../common/modifyOperations\";\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\nimport LogicElementUtil from \"../../util/logicElementUtil\";\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\n\nconst EditorLogicItem = () => {\n    const { store, setStore } = useContext(GlobalContext);\n    const { removeSelf, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\n    const wrap = node.data as LogicUtil.WrapElement;\n\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n\n    const [isConnect, hasArgNode, hasFieldNode, hasConnectNode] = useMemo(() => {\n        const list = node.children.map(el => {\n            return (el.data as LogicUtil.WrapElement).type;\n        });\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\n        return [\n            parentType === 'connector',\n            list.includes('argument-mng'),\n            list.includes('field-mng'),\n            list.includes('inherit-mng'),\n        ];\n    }, [node]);\n\n    const mappingForm = () => {\n        if (!isConnect) {\n            const param = wrap.data as LogicUtil.NodeLogicItem;\n            setName({ ...name, value: param.name });\n        }\n    };\n\n    /** 既存のロジック名を取得（重複チェックに使用） */\n    const existNameList = useMemo(() => {\n        // インヘリットの場合、名前を持たないため取得しない\n        if (wrap.type === 'inherit-logic') return [];\n        return LogicElementUtil.getExistNameList(node);\n    }, [node]);\n\n    useEffect(() => {\n        if (wrap.data == null) {\n            setModify(true);\n        } else {\n            mappingForm();\n        }\n    }, [node, isConnect]);\n\n    /**\n     * 追加要素の表示非表示を切り替える\n     */\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\n        if (hasNode) {\n            LogicElementUtil.removeChild(node, listPos, 1);\n            setFocusNode({ ...node });\n            invalidate();\n        } else {\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\n            setFocusNode({ ...node });\n            invalidate();\n        }\n    };\n\n    /**\n     * 引数要素の有無を判定\n     */\n    const hasArgument = () => {\n        const argumentNode = LogicElementUtil.getInnerNode(node, 'argument-mng');\n        if (argumentNode == null) return false;\n        return argumentNode.children.length > 0;\n    }\n    /**\n     * 変数要素の有無を判定\n     */\n    const hasField = () => {\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'field-mng');\n        if (fieldNode == null) return false;\n        return fieldNode.children.length > 0;\n    }\n    /**\n     * 派生要素の有無を判定\n     */\n    const hasInherit = () => {\n        const inheritNode = LogicElementUtil.getInnerNode(node, 'inherit-mng');\n        if (inheritNode == null) return false;\n        return inheritNode.children.length > 0;\n    }\n\n    return (<>\n        {isConnect ? <></> : (<>\n            <ModifyOperations.Component\n                mappingForm={mappingForm}\n                checkableFields={[name]}\n                firstRegist={() => {\n                    const element: LogicUtil.NodeLogicItem = {\n                        name: name.value,\n                        mngs: LogicElementUtil.getDefaultLogicMngs()\n                    };\n                    element.name = name.value;\n                    wrap.data = element;\n\n                    element.mngs.forEach(mng => {\n                        const newNode = TreeUtil.createNode(mng, node);\n                        const data = (newNode.data as LogicUtil.WrapElement).data;\n                        (data as LogicUtil.NodeParamManager).params.forEach(param => {\n                            newNode.children.push(TreeUtil.createNode(param, newNode));\n                        });\n                        node.children.push(newNode);\n                    });\n                    invalidate();\n                    setStore({ ...store });\n                }}\n                modifyRegist={() => {\n                    const param = wrap.data as LogicUtil.NodeLogicItem;\n                    const prevName = param.name;\n                    param.name = name.value;\n                    wrap.data = param;\n                    // 名前が変わった場合、参照箇所も修正する\n                    if (prevName !== param.name) {\n                        syncLogicName(node, prevName, param.name);\n                    }\n                }}\n            />\n            <FormUtil.BorderPanel\n                title=\"param\"\n                innerJsx={<>\n                    <FormUtil.FormRecord\n                        titleLabel=\"Name\"\n                        jsx={\n                            <FormUtil.TextField\n                                width={200}\n                                isReadOnly={!isModify}\n                                checkable={name}\n                                setCheckable={setName}\n                                validates={[\n                                    {\n                                        checker: (value) => ValidateUtil.checkRequired(value),\n                                        errorType: \"required\"\n                                    },\n                                    {\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\n                                        errorType: \"length\"\n                                    },\n                                    {\n                                        checker: (value) => LogicUtil.checkFieldName(value),\n                                        errorType: \"value\"\n                                    },\n                                    {\n                                        checker: (value) => !existNameList.includes(value),\n                                        errorType: \"relation\"\n                                    }\n                                ]}\n                            />\n                        }\n                    />\n                </>}\n            />\n        </>)}\n        <FormUtil.BorderPanel\n            title=\"element\"\n            isEnable={!isModify}\n            innerJsx={<>\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={<FormUtil.Switch\n                        label={'Argument'}\n                        width={300}\n                        isUse={hasArgNode}\n                        isEnable={!hasArgument()}\n                        callback={() => {\n                            let listPos = 0;\n                            toggleElement(\n                                hasArgNode,\n                                listPos,\n                                {\n                                    type: 'argument-mng',\n                                    data: {\n                                        args: []\n                                    } as LogicUtil.NodeArgumentManager\n                                }\n                            );\n                        }}\n                    />}\n                />\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    isEnable={true}\n                    jsx={<FormUtil.Switch\n                        label={'Field'}\n                        width={300}\n                        isUse={hasFieldNode}\n                        isEnable={!hasField()}\n                        callback={() => {\n                            let listPos = 0;\n                            if (hasArgNode) listPos++;\n                            toggleElement(\n                                hasFieldNode,\n                                listPos,\n                                {\n                                    type: 'field-mng',\n                                    data: {\n                                        fields: []\n                                    } as LogicUtil.NodeFieldManager\n                                }\n                            );\n                        }}\n                    />}\n                />\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Inherit'}\n                            width={300}\n                            isUse={hasConnectNode}\n                            isEnable={!hasInherit()}\n                            callback={() => {\n                                let listPos = 2;\n                                if (hasArgNode) listPos++;\n                                if (hasFieldNode) listPos++;\n                                toggleElement(\n                                    hasConnectNode,\n                                    listPos,\n                                    {\n                                        type: 'inherit-mng',\n                                        data: {\n                                            inherits: []\n                                        } as LogicUtil.NodeConnectManager\n                                    }\n                                );\n                            }}\n                        />\n                    }\n                />\n            </>}\n        />\n        {isConnect ? <></> : (\n            <FormUtil.BorderPanel\n                title=\"operation\"\n                isEnable={!isModify}\n                innerJsx={<>\n                    <FormUtil.ButtonRecord\n                    align=\"center\"\n                        buttons={[\n                            {\n                                label: 'Clone',\n                                // isEnable: !isModify,\n                                isEnable: false,\n                                callback: () => {\n                                    store.system.dialog = <ConfirmDialog.Component\n                                        message=\"Clone this logic.\"\n                                        buttons={[\n                                            {\n                                                label: 'Cancel',\n                                                callback: () => {\n                                                    store.system.dialog = null;\n                                                    setStore({ ...store });\n                                                }\n                                            },\n                                            {\n                                                label: 'Enter',\n                                                callback: () => {\n                                                    let rootNode = node;\n                                                    while (rootNode.parent != null) rootNode = rootNode.parent;\n                                                    const inheritNode = node.children.find(el => (el.data as LogicUtil.WrapElement).type === 'inherit-logic');\n                                                    const logicMngNode = rootNode.children.find(el => (el.data as LogicUtil.WrapElement).type === 'logic-mng');\n                                                    if (logicMngNode == undefined || inheritNode == undefined) return;\n                                                    const inherit = (inheritNode.data as LogicUtil.WrapElement).data;\n                                                    const clone = JSON.parse(JSON.stringify((inherit))) as LogicUtil.NodeInheritItem;\n                                                    // ロジック名（自動命名）を取得\n                                                    const defaultName = LogicElementUtil.getNumberingOnPrefixName('clone_inherit_', logicMngNode);\n                                                    const logicItem: LogicUtil.NodeLogicItem = {\n                                                        ...clone,\n                                                        name: defaultName\n                                                    };\n                                                    const newWrap: LogicUtil.WrapElement = {\n                                                        type: 'logic-item',\n                                                        data: logicItem\n                                                    };\n\n                                                    // ロジックマネージャに追加\n                                                    const newNode = LogicElementUtil.addChild(newWrap, logicMngNode);\n                                                    // 子要素の展開\n                                                    newNode.children = LogicUtil.getChildrenElementNode(newNode);\n\n                                                    // 自身（コネクタ）からインヘリット要素を削除\n                                                    LogicElementUtil.removeChild(node, 2, 1);\n\n                                                    const param = wrap.data as LogicUtil.NodeInheritConnector;\n                                                    param.method = 'depend';\n                                                    param.depend = logicItem.name;\n                                                    mappingForm();\n\n                                                    store.system.dialog = null;\n                                                    setStore({ ...store });\n                                                    invalidate();\n                                                }\n                                            }\n                                        ]}\n                                    />;\n                                    setStore({ ...store });\n                                }\n                            }\n                        ]}\n                    />\n                    <FormUtil.ButtonRecord\n                    align=\"center\"\n                        buttons={[\n                            {\n                                label: 'Delete',\n                                callback: () => {\n                                    const param = wrap.data as LogicUtil.NodeArgumentItem;\n                                    const refers = getLocgicRefers(node, param.name);\n                                    if (refers.length === 0) {\n                                        removeSelf();\n                                    } else {\n                                        store.system.dialog = <ConfirmDialog.Component\n                                            message={`[${param.name}] is referenced in the Inherit.\\n${refers}`}\n                                        />;\n                                        setStore({ ...store });\n                                    }\n                                }\n                            }\n                        ]}\n                    />\n                    {/* 並び順入れ替えボタン */}\n                    {LogicElementUtil.getSwapButtons(node, invalidate)}\n                </>}\n            />\n        )}\n    </>);\n}\n\nexport default EditorLogicItem;\n\n/**\n * ロジックを参照しているInheritのリストを返す。\n * @param node 現在のノード\n * @param logicName ロジック名\n * @returns 参照Inheritリスト\n */\nexport const getLocgicRefers = (node: TreeUtil.ElementNode, logicName: string) => {\n\n    const refers: string[] = [];\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\n        refers.push(conn.id);\n    }\n    searchLogicReferInherit(node, logicName, callback);\n    return refers;\n}\n\n/**\n * ロジック名の変更に伴い、参照しているインヘリットを同期する\n * @param node ロジックノード\n */\nconst syncLogicName = (node: TreeUtil.ElementNode, prevName: string, newName: string) => {\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\n        conn.depend = newName;\n    }\n    searchLogicReferInherit(node, prevName, callback);\n}\n\nconst searchLogicReferInherit = (\n    node: TreeUtil.ElementNode,\n    logicName: string,\n    callback: (conn: LogicUtil.NodeInheritConnector) => void\n) => {\n    const logicMngNode = node.parent as TreeUtil.ElementNode\n    const runRec = (logic: LogicUtil.NodeLogicItem) => {\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\n        if (inhMng == undefined) return;\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\n            const conn = inh.data as LogicUtil.NodeInheritConnector;\n            if (conn.method === 'create') {\n                const inhLogic = LogicElementUtil.getInnerWrap(inh, 'inherit-logic');\n                runRec(inhLogic?.data);\n            } else {\n                if (conn.depend === logicName) {\n                    callback(conn);\n                }\n            }\n        });\n    }\n    logicMngNode.children.forEach(logic => {\n        runRec((logic.data as LogicUtil.WrapElement).data);\n    });\n}","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\nimport TreeUtil from \"../../../../../utils/treeUtil\";\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\nimport LogicElementUtil from \"../../util/logicElementUtil\";\nimport LogicUtil from \"../../util/logicUtil\";\nimport ParamUtil from \"../../util/paramUtil\";\n\nconst EditorBehiviorMng = () => {\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\n\n    const [isVector, hasDecayParam, hasGravityParam] = useMemo(() => {\n        const list = node.children.map(el => {\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\n        });\n        return [\n            list.includes(ParamUtil.BehaviorParamType.VEC_X),\n            list.includes(ParamUtil.ModulateParamType.DECAY_RATE),\n            list.includes(ParamUtil.ModulateParamType.GRAVITY_VAL)\n        ]\n    }, [node]);\n\n    const exchangeElements = (flag: boolean, listPos: number,\n        trueParamElements: LogicUtil.NodeParamItem[],\n        falseParamElements: LogicUtil.NodeParamItem[]\n    ) => {\n        const size = (flag ? trueParamElements : falseParamElements).length;\n        LogicElementUtil.removeChild(node, listPos, size);\n\n        (flag ? trueParamElements : falseParamElements).forEach((data, i) => {\n            const wrap: LogicUtil.WrapElement = {\n                type: 'param-item',\n                data\n            };\n            LogicElementUtil.insertChild(wrap, node, listPos + i);\n        });\n        setFocusNode({ ...node });\n        invalidate();\n    };\n\n    const exchangeVectorMethod = () => {\n        exchangeElements(!isVector, 3,\n            [\n                { name: ParamUtil.BehaviorParamType.VEC_X, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\n                { name: ParamUtil.BehaviorParamType.VEC_Y, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\n            ],\n            [\n                { name: ParamUtil.BehaviorParamType.VEC_RAD, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\n                { name: ParamUtil.BehaviorParamType.VEC_LEN, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\n            ]\n        )\n    }\n\n    /**\n     * 追加要素の表示非表示を切り替える\n     */\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\n        const size = paramElements.length;\n        if (hasNode) {\n            mng.params.splice(listPos, size);\n            node.children.splice(listPos, size);\n            setFocusNode({ ...node });\n            invalidate();\n        } else {\n            paramElements.forEach((data, i) => {\n                const wrap: LogicUtil.WrapElement = {\n                    type: 'param-item',\n                    data\n                };\n                mng.params.splice(listPos + i, 0, wrap);\n                const newNode = TreeUtil.createNode(wrap, node);\n                node.children.splice(listPos + i, 0, newNode);\n            });\n            setFocusNode({ ...node });\n            invalidate();\n        }\n    };\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"method\"\n            isEnable={!isModify}\n            innerJsx={<>\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Vector method'}\n                            width={300}\n                            isRelation\n                            isUse={isVector}\n                            callback={exchangeVectorMethod}\n                        />\n                    }\n                />\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Direction method'}\n                            width={300}\n                            isRelation\n                            isUse={!isVector}\n                            callback={exchangeVectorMethod}\n                        />\n                    }\n                />\n            </>}\n        />\n        <FormUtil.BorderPanel\n            title=\"modulate\"\n            isEnable={!isModify}\n            innerJsx={<>\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Decay'}\n                            width={300}\n                            isUse={hasDecayParam}\n                            callback={() => {\n                                toggleElements(hasDecayParam, 5, [\n                                    {\n                                        name: ParamUtil.ModulateParamType.DECAY_RATE,\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.9' }]\n                                    },\n                                    {\n                                        name: ParamUtil.ModulateParamType.DECAY_LIMIT,\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\n                                    },\n                                ]);\n                            }}\n                        />\n                    }\n                />\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Gravity'}\n                            width={300}\n                            isUse={hasGravityParam}\n                            callback={() => {\n                                toggleElements(hasGravityParam, !hasDecayParam ? 5 : 7, [\n                                    {\n                                        name: ParamUtil.ModulateParamType.GRAVITY_VAL,\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.2' }]\n                                    },\n                                    {\n                                        name: ParamUtil.ModulateParamType.GRAVITY_LIMIT,\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\n                                    },\n                                ]);\n                            }}\n                        />\n                    }\n                />\n            </>}\n        />\n    </>);\n}\n\nexport default EditorBehiviorMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\nimport LogicElementUtil from \"../../util/logicElementUtil\";\nimport LogicUtil from \"../../util/logicUtil\";\nimport ParamUtil from \"../../util/paramUtil\";\nimport ModifyOperations from \"../common/modifyOperations\";\n\ntype Medhod = 'blank' | 'particle' | 'snake'\n\nconst EditorVisualMng = () => {\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\n\n    const [drawMethod, hasDisappearParam, hasShrinkParam, hasFlashParam] = useMemo(() => {\n        const list = node.children.map(el => {\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\n        });\n        let drawMethod: Medhod = 'blank';\n        if(list.length > 0) {\n            drawMethod = list.includes(ParamUtil.VisualParamType.THICKNESS) ? 'snake' : 'particle';\n        }\n        return [\n            drawMethod,\n            list.includes(ParamUtil.EffectParamType.DISAPPEAR_START),\n            list.includes(ParamUtil.EffectParamType.SHRINK_START),\n            list.includes(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME)\n        ]\n    }, [node]);\n\n    /**\n     * 追加要素の表示非表示を切り替える\n     */\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\n        const size = paramElements.length;\n        if (hasNode) {\n            LogicElementUtil.removeChild(node, listPos, size);\n            setFocusNode({ ...node });\n            invalidate();\n        } else {\n            paramElements.forEach((data, i) => {\n                const wrap: LogicUtil.WrapElement = {\n                    type: 'param-item',\n                    data\n                };\n                LogicElementUtil.insertChild(wrap, node, listPos + i);\n            });\n            setFocusNode({ ...node });\n            invalidate();\n        }\n    };\n\n    const addElements = (paramElements: LogicUtil.NodeParamItem[]) => {\n        const size = paramElements.length;\n        paramElements.forEach((data, i) => {\n            const wrap: LogicUtil.WrapElement = {\n                type: 'param-item',\n                data\n            };\n            LogicElementUtil.insertChild(wrap, node, i);\n        });\n        setFocusNode({ ...node });\n        invalidate();\n    };\n    const removeElements = (elementNameList: string[]) => {\n        const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\n        elementNameList.forEach((name) => {\n            mng.params.forEach((param, i) => {\n                if((param.data as LogicUtil.NodeParamItem).name === name) {\n                    LogicElementUtil.removeChild(node, i, 1);\n                }\n            });\n        });\n        setFocusNode({ ...node });\n        invalidate();\n    };\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"method\"\n            isEnable={!isModify}\n            innerJsx={<>\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    isEnable={!(hasShrinkParam || hasDisappearParam || hasFlashParam)}\n                    jsx={\n                        <FormUtil.Switch\n                            label={'None'}\n                            width={300}\n                            isRelation\n                            isUse={drawMethod === 'blank'}\n                            callback={() => {\n                                mng.params.length = 0;\n                                node.children.length = 0;\n                                setFocusNode({ ...node });\n                                invalidate();\n                            }}\n                        />\n                    }\n                />\n                {/* <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Snake Method'}\n                            width={300}\n                            isRelation\n                            isUse={drawMethod === 'snake'}\n                            callback={() => {\n                                removeElements([\n                                    ParamUtil.VisualParamType.RADIUS\n                                ]);\n                                addElements([\n                                    {\n                                        name: ParamUtil.VisualParamType.THICKNESS,\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\n                                    },\n                                    {\n                                        name: ParamUtil.VisualParamType.COLOR_R,\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\n                                    },\n                                    {\n                                        name: ParamUtil.VisualParamType.COLOR_G,\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\n                                    },\n                                    {\n                                        name: ParamUtil.VisualParamType.COLOR_B,\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\n                                    },\n                                    {\n                                        name: ParamUtil.VisualParamType.COLOR_A,\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\n                                    },\n                                ]);\n                            }}\n                        />\n                    }\n                /> */}\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Particle Method'}\n                            width={300}\n                            isRelation\n                            isUse={drawMethod === 'particle'}\n                            callback={() => {\n                                addElements([\n                                    {\n                                        name: ParamUtil.VisualParamType.RADIUS,\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '20' }]\n                                    },\n                                    {\n                                        name: ParamUtil.VisualParamType.COLOR_R,\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\n                                    },\n                                    {\n                                        name: ParamUtil.VisualParamType.COLOR_G,\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\n                                    },\n                                    {\n                                        name: ParamUtil.VisualParamType.COLOR_B,\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\n                                    },\n                                    {\n                                        name: ParamUtil.VisualParamType.COLOR_A,\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\n                                    },\n                                ]);\n                            }}\n                        />\n                    }\n                />\n            </>}\n        />\n        <FormUtil.BorderPanel\n            title=\"effect\"\n            isEnable={!isModify && drawMethod !== 'blank'}\n            innerJsx={<>\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    isEnable={!hasFlashParam}\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Disappear'}\n                            width={300}\n                            isUse={hasDisappearParam}\n                            callback={() => {\n                                toggleElements(hasDisappearParam, 5, [\n                                    {\n                                        name: ParamUtil.EffectParamType.DISAPPEAR_START,\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\n                                    },\n                                ]);\n                            }}\n                        />\n                    }\n                />\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    isEnable={!hasFlashParam}\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Shrink'}\n                            width={300}\n                            isUse={hasShrinkParam}\n                            callback={() => {\n                                toggleElements(hasShrinkParam, !hasDisappearParam ? 5 : 6, [\n                                    {\n                                        name: ParamUtil.EffectParamType.SHRINK_START,\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\n                                    },\n                                ]);\n                            }}\n                        />\n                    }\n                />\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    isEnable={!(hasShrinkParam || hasDisappearParam)}\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Flash'}\n                            width={300}\n                            isUse={hasFlashParam}\n                            callback={() => {\n                                toggleElements(hasFlashParam, 5, [\n                                    {\n                                        name: ParamUtil.EffectParamType.FLASH_APPEAR_FRAME,\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\n                                    },\n                                    {\n                                        name: ParamUtil.EffectParamType.FLASH_HIDE_FRAME,\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\n                                    },\n                                ]);\n                            }}\n                        />\n                    }\n                />\n            </>}\n        />\n    </>);\n}\n\nexport default EditorVisualMng;","import { useContext } from \"react\";\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\nimport TreeUtil from \"../../../../../utils/treeUtil\";\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\nimport LogicUtil from \"../../util/logicUtil\";\n\nconst EditorInheritConnMng = () => {\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeConnectManager;\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"operation\"\n            innerJsx={<FormUtil.ButtonRecord\n                align=\"center\"\n                buttons={[\n                    {\n                        label: 'Add Inherit',\n                        callback: () => {\n                            const wrap: LogicUtil.WrapElement = {\n                                type: 'connector',\n                                data: null\n                            }\n                            mng.inherits.push(wrap);\n                            const newNode = TreeUtil.createNode(wrap, node);\n                            node.children.push(newNode);\n                            setFocusNode(newNode);\n                            invalidate();\n                        }\n                    }\n                ]}\n            />}\n        />\n    </>);\n}\n\nexport default EditorInheritConnMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\nimport TreeUtil from \"../../../../../utils/treeUtil\";\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\nimport LogicElementUtil from \"../../util/logicElementUtil\";\nimport LogicUtil from \"../../util/logicUtil\";\nimport ModifyOperations from \"../common/modifyOperations\";\n\nconst EditorInheritConnector = () => {\n    const { store, setStore } = useContext(GlobalContext);\n    const { rootData, node, invalidate, setModify, isModify, removeSelf, setFocusNode } = useContext(FactoryTreeContext);\n    const wrap = node.data as LogicUtil.WrapElement;\n\n    // const [condition, setCondition] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [identify, setIdentify] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [method, setMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [depend, setDepend] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n\n    const mappingForm = () => {\n        const param = wrap.data as LogicUtil.NodeInheritConnector;\n        setMethod({ ...method, value: param.method });\n        setDepend({ ...depend, value: param.depend });\n        setIdentify({ ...identify, value: param.id });\n    };\n\n    useEffect(() => {\n        if (wrap.data == null) {\n            setModify(true);\n            // 派生識別名（自動命名）の初期値を取得\n            const defaultName = LogicElementUtil.getNumberingOnPrefixName('id_', node.parent as TreeUtil.ElementNode);\n            setIdentify({ ...identify, value: defaultName });\n        } else {\n            mappingForm();\n        }\n    }, [node]);\n\n    const isCreate = method.value === 'create';\n\n    const hasFieldNode = useMemo(() => {\n        return LogicElementUtil.getInnerNode(node, 'inhfld-mng') != null;\n    }, [node]);\n\n    /** 引用するロジックリスト */\n    const logicList = useMemo((): string[] => {\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\n        return inheritMng.defs.map(wrap => {\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\n        });\n    }, [node]);\n\n    /** 同階層の既存のインヘリットIDを取得（重複チェックに使用） */\n    const idList = useMemo(() => {\n        return LogicElementUtil.getExistNameList(node);\n    }, [node]);\n\n    const initConnectorNode = (param: LogicUtil.NodeInheritConnector) => {\n        param.mngs = [];\n        node.children = [];\n        param.mngs.push({\n            type: 'extend-mng',\n            data: {\n                params: []\n            } as LogicUtil.NodeParamManager\n        });\n        param.mngs.push({\n            type: 'send-mng',\n            data: {\n                params: []\n            } as LogicUtil.NodeParamManager\n        });\n        if (isCreate) {\n            param.mngs.push({\n                type: 'inherit-logic',\n                data: {\n                    mngs: LogicElementUtil.getDefaultLogicMngs()\n                } as LogicUtil.NodeInheritItem\n            });\n        }\n        wrap.data = param;\n\n        param.mngs.forEach(mng => {\n            const newNode = TreeUtil.createNode(mng, node);\n            const data = (newNode.data as LogicUtil.WrapElement);\n            switch (data.type) {\n                case 'inherit-logic': {\n                    LogicElementUtil.syncTreeElementFromWrap(newNode);\n                } break;\n                case 'send-mng': {\n                    const connector = (newNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\n                    if (connector.method === 'depend') {\n                        console.log('initSendParams');\n                        initSendParams(newNode, rootData);\n                    }\n                } break;\n            }\n            node.children.push(newNode);\n        });\n    }\n\n    const getSendParamList = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement): string[] => {\n        const connector = (sendNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\n        const dependItem = inheritMng.defs.find(wrap => {\n            return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\n        });\n        if (dependItem != undefined) {\n            const logicWrap = dependItem;\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\n            if (argWrap.type === 'argument-mng') {\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\n                });\n            }\n        }\n        return [];\n    }\n\n    const initSendParams = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement) => {\n        const sendParamList = getSendParamList(sendNode, rootData);\n        // console.log(sendParamList);\n        const wrap = sendNode.data as LogicUtil.WrapElement;\n        const params = (wrap.data as LogicUtil.NodeParamManager).params;\n        // 必要な存在しないパラメータを追加\n        const curParamList = params.map(param => {\n            return (param.data as LogicUtil.NodeParamItem).name;\n        });\n        sendParamList.forEach(param => {\n            if (!curParamList.includes(param)) {\n                const paramWrap = LogicElementUtil.createParamWrap('send-item',\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\n                );\n                params.push(paramWrap);\n                sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\n            }\n        });\n    }\n    \n    /**\n     * 追加要素の表示非表示を切り替える\n     */\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\n        if (hasNode) {\n            LogicElementUtil.removeChild(node, listPos, 1);\n            setFocusNode({ ...node });\n            invalidate();\n        } else {\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\n            setFocusNode({ ...node });\n            invalidate();\n        }\n    };\n\n    /**\n     * 変数要素の有無を判定\n     */\n    const hasField = () => {\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'inhfld-mng');\n        if(fieldNode == null) return false;\n        return fieldNode.children.length > 0;\n    }\n\n    const isDisable = wrap.data == null ? false : (wrap.data as LogicUtil.NodeInheritConnector).disable ?? false;\n\n    return (<>\n        <ModifyOperations.Component\n            mappingForm={mappingForm}\n            checkableFields={[identify, method, depend]}\n            firstRegist={() => {\n                const param: LogicUtil.NodeInheritConnector = {\n                    method: method.value as LogicUtil.InheritMethod,\n                    depend: depend.value,\n                    id: identify.value,\n                    mngs: []\n                };\n                initConnectorNode(param);\n                invalidate();\n            }}\n            modifyRegist={() => {\n                const param = wrap.data as LogicUtil.NodeInheritConnector;\n                const isChange = param.method !== method.value || param.depend !== depend.value;\n                param.method = method.value as LogicUtil.InheritMethod;\n                param.depend = depend.value;\n                param.id = identify.value;\n                wrap.data = param;\n\n                if (isChange) {\n                    initConnectorNode(param);\n                }\n                invalidate();\n            }}\n        />\n        <FormUtil.BorderPanel\n            title=\"param\"\n            innerJsx={<>\n                <FormUtil.FormRecord\n                    titleLabel=\"Method\"\n                    jsx={\n                        <FormUtil.Combobox\n                            marginLeft={2}\n                            checkable={method}\n                            width={178}\n                            isReadOnly={!isModify}\n                            setCheckable={(checkable) => {\n                                // createが選択されたらdependを空にする\n                                if (checkable.value === 'create') {\n                                    setDepend({ ...depend, value: '' });\n                                }\n                                setMethod(checkable);\n                            }}\n                            list={LogicUtil.ConnectTypes.map(item => {\n                                return { value: item, labelText: item };\n                            })}\n                            headBlank\n                            validates={[\n                                {\n                                    checker: (value) => ValidateUtil.checkRequired(value),\n                                    errorType: \"required\"\n                                }\n                            ]}\n                        />\n                    }\n                />\n                <FormUtil.FormRecord\n                    titleLabel=\"Depend\"\n                    isEnable={method.value === 'depend'}\n                    jsx={\n                        <FormUtil.Combobox\n                            marginLeft={2}\n                            checkable={depend}\n                            width={270}\n                            isReadOnly={!isModify}\n                            setCheckable={setDepend}\n                            list={logicList.map(item => {\n                                return { value: item, labelText: item };\n                            })}\n                            headBlank\n                            dependency={[method]}\n                            validates={[\n                                {\n                                    checker: (value) => {\n                                        return method.value !== 'depend' || ValidateUtil.checkRequired(value);\n                                    },\n                                    errorType: \"required\"\n                                }\n                            ]}\n                        />\n                    }\n                />\n                <FormUtil.FormRecord\n                    titleLabel=\"Identify\"\n                    jsx={\n                        <FormUtil.TextField\n                            marginLeft={2}\n                            checkable={identify}\n                            width={270}\n                            isReadOnly={!isModify}\n                            setCheckable={setIdentify}\n                            validates={[\n                                {\n                                    checker: (value) => LogicUtil.checkFieldName(value),\n                                    errorType: \"value\"\n                                },\n                                {\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\n                                    errorType: \"length\"\n                                },\n                                {\n                                    checker: (value) => !idList.includes(value),\n                                    errorType: \"relation\"\n                                }\n                            ]}\n                        />\n                    }\n                />\n            </>}\n        />\n        <FormUtil.BorderPanel\n            title=\"element\"\n            isEnable={!isModify}\n            innerJsx={<>\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    isEnable={true}\n                    jsx={<FormUtil.Switch\n                        label={'Field'}\n                        width={300}\n                        isUse={hasFieldNode}\n                        isEnable={!hasField()}\n                        callback={() => {\n                            toggleElement(\n                                hasFieldNode,\n                                0,\n                                {\n                                    type: 'inhfld-mng',\n                                    data: {\n                                        fields: []\n                                    } as LogicUtil.NodeFieldManager\n                                }\n                            );\n                        }}\n                    />}\n                />\n            </>}\n        />\n        <FormUtil.BorderPanel\n            title=\"operation\"\n            innerJsx={<>\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={<FormUtil.Switch\n                        label={'Disable'}\n                        width={300}\n                        isUse={isDisable}\n                        isEnable={!isModify}\n                        callback={() => {\n                            const data = (wrap.data as LogicUtil.NodeInheritConnector);\n                            if (isDisable) {\n                                data.disable = undefined;\n                            } else {\n                                data.disable = true;\n                            }\n                            invalidate();\n                        }}\n                    />}\n                />\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={[\n                        {\n                            label: 'Edit local',\n                            isEnable: !isModify && !isCreate,\n                            callback: () => {\n                                store.system.dialog = <ConfirmDialog.Component\n                                    message=\"Create a clone from the depended inherit logic.\"\n                                    buttons={[\n                                        {\n                                            label: 'Cancel',\n                                            callback: () => {\n                                                store.system.dialog = null;\n                                                setStore({ ...store });\n                                            }\n                                        },\n                                        {\n                                            label: 'Conversion',\n                                            callback: () => {\n                                                const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\n                                                const logicList = logicMng.defs.map(def => def.data as LogicUtil.NodeLogicItem);\n                                                // ディペンドしているロジックを取得\n                                                const dependLogic = logicList.find(inherit => inherit.name === depend.value);\n                                                if (dependLogic != undefined) {\n                                                    const cloneLogic = JSON.parse(JSON.stringify(dependLogic)) as LogicUtil.NodeLogicItem;\n                                                    const connectItem: LogicUtil.NodeInheritItem = {\n                                                        mngs: cloneLogic.mngs\n                                                    };\n                                                    const newWrap: LogicUtil.WrapElement = {\n                                                        type: 'inherit-logic',\n                                                        data: connectItem\n                                                    };\n                                                    const newNode = LogicElementUtil.addChild(newWrap, node);\n                                                    // 子要素の展開\n                                                    newNode.children = LogicUtil.getChildrenElementNode(newNode);\n\n                                                    const param = wrap.data as LogicUtil.NodeInheritConnector;\n                                                    param.method = 'create';\n                                                    param.depend = '';\n                                                    mappingForm();\n                                                }\n                                                store.system.dialog = null;\n                                                setStore({ ...store });\n                                                invalidate();\n                                            }\n                                        }\n                                    ]}\n                                />;\n                                setStore({ ...store });\n                            }\n                        }\n                    ]}\n                />\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={[\n                        {\n                            label: 'Detach global',\n                            isEnable: !isModify && isCreate,\n                            callback: () => {\n                                store.system.dialog = <ConfirmDialog.Component\n                                    message=\"Detach a clone from the this inherit logic.\"\n                                    buttons={[\n                                        {\n                                            label: 'Cancel',\n                                            callback: () => {\n                                                store.system.dialog = null;\n                                                setStore({ ...store });\n                                            }\n                                        },\n                                        {\n                                            label: 'Conversion',\n                                            callback: () => {\n                                                let rootNode = node;\n                                                while (rootNode.parent != null) rootNode = rootNode.parent;\n                                                const inheritNode = node.children.find(el => (el.data as LogicUtil.WrapElement).type === 'inherit-logic');\n                                                const logicMngNode = rootNode.children.find(el => (el.data as LogicUtil.WrapElement).type === 'logic-mng');\n                                                if (logicMngNode == undefined || inheritNode == undefined) return;\n                                                const inherit = (inheritNode.data as LogicUtil.WrapElement).data;\n                                                const clone = JSON.parse(JSON.stringify((inherit))) as LogicUtil.NodeInheritItem;\n                                                // ロジック名（自動命名）を取得\n                                                const defaultName = LogicElementUtil.getNumberingOnPrefixName('clone_inherit_', logicMngNode);\n                                                const logicItem: LogicUtil.NodeLogicItem = {\n                                                    ...clone,\n                                                    name: defaultName\n                                                };\n                                                const newWrap: LogicUtil.WrapElement = {\n                                                    type: 'logic-item',\n                                                    data: logicItem\n                                                };\n\n                                                // ロジックマネージャに追加\n                                                const newNode = LogicElementUtil.addChild(newWrap, logicMngNode);\n                                                // 子要素の展開\n                                                newNode.children = LogicUtil.getChildrenElementNode(newNode);\n\n                                                // 自身（コネクタ）からインヘリット要素を削除\n                                                LogicElementUtil.removeChild(node, 2, 1);\n\n                                                const param = wrap.data as LogicUtil.NodeInheritConnector;\n                                                param.method = 'depend';\n                                                param.depend = logicItem.name;\n                                                mappingForm();\n\n                                                store.system.dialog = null;\n                                                setStore({ ...store });\n                                                invalidate();\n                                            }\n                                        }\n                                    ]}\n                                />;\n                                setStore({ ...store });\n                            }\n                        }\n                    ]}\n                />\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={[\n                        {\n                            label: 'Delete',\n                            isEnable: !isModify,\n                            callback: () => {\n                                removeSelf();\n                            }\n                        }\n                    ]}\n                />\n                {/* 並び順入れ替えボタン */}\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\n            </>}\n        />\n    </>);\n}\n\nexport default EditorInheritConnector;","import styled from \"styled-components\";\nimport { useContext, useEffect, useMemo, useState } from \"react\";\nimport { GlobalContext } from \"../../../entry/systemEntry\";\nimport FormUtil from \"../../../../utils/form/formUtiil\";\nimport LogicUtil from \"../util/logicUtil\";\nimport ParamUtil from \"../util/paramUtil\";\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\nimport TreeUtil from \"../../../../utils/treeUtil\";\nimport LogicElementUtil from \"../util/logicElementUtil\";\n\nnamespace SendTemplateDialog {\n\n    const FRAME_WIDTH = 450;\n    const FRAME_HEIGHT = 160;\n    const COMPONENT_WIDTH = 296;\n\n    export const ConnectParentPosition = (props: {\n        node: TreeUtil.ElementNode;\n        invalidate: () => void;\n    }) => {\n\n        const { store, setStore } = useContext(GlobalContext);\n\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n\n        const message = 'Please, input property name!';\n\n        /** 既存のパラメータ名を取得（重複チェックに使用） */\n        const paramNameList = useMemo(() => {\n            const owner = (LogicElementUtil.getInnerWrap(props.node.parent?.data as LogicUtil.WrapElement, 'inherit-logic') as LogicUtil.WrapElement).data;\n            return LogicElementUtil.getParamNameList(owner);\n        }, [props.node]);\n\n        const buttons: FormUtil.ButtonProps[] = [\n            {\n                label: 'Cancel',\n                callback: () => {\n                    store.system.dialog = null;\n                    setStore({ ...store });\n                }\n            },\n            {\n                label: 'Execute',\n                isEnable: FormUtil.checkItems([xName, yName]),\n                callback: () => {\n                    // Sendにパラメータを追加\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\n                        { name: xName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }] }\n                    ), props.node);\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\n                        { name: yName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }] }\n                    ), props.node);\n\n                    // 派生ロジックに引数を追加\n                    const logicNode = LogicElementUtil.getInnerNode(props.node.parent as TreeUtil.ElementNode, 'inherit-logic') as TreeUtil.ElementNode;\n                    const hasArgNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') != undefined;\n                    if (!hasArgNode) {\n                        LogicElementUtil.insertChild({\n                            type: 'argument-mng',\n                            data: {\n                                args: []\n                            } as LogicUtil.NodeArgumentManager\n                        }, logicNode, 0);\n                    }\n                    const argNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') as TreeUtil.ElementNode;\n\n                    LogicElementUtil.addChild({\n                        type: 'argument-item',\n                        data: {\n                            name: xName.value,\n                            valueType: 'number'\n                        } as LogicUtil.NodeArgumentItem\n                    }, argNode);\n                    LogicElementUtil.addChild({\n                        type: 'argument-item',\n                        data: {\n                            name: yName.value,\n                            valueType: 'number'\n                        } as LogicUtil.NodeArgumentItem\n                    }, argNode);\n\n                    // 派生ロジックの座標に引数を設定\n                    const behaviorNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'behavior-mng') as TreeUtil.ElementNode;\n                    const setParamValue = (prpName: string, argName: string) => {\n                        const params = behaviorNode.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\n                        const targetParam = params.find(param => param.name === prpName) as LogicUtil.NodeParamItem;\n                        targetParam.formulaItems = ['var'];\n                        targetParam.values = [{ type: 'argument', value: argName }];\n                    }\n                    setParamValue(ParamUtil.BehaviorParamType.POS_X, xName.value);\n                    setParamValue(ParamUtil.BehaviorParamType.POS_Y, yName.value);\n\n                    store.system.dialog = null;\n                    setStore({ ...store });\n                    props.invalidate();\n                }\n            }\n        ]\n\n        return (\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\n                <_Inner>\n                    <FormUtil.Message\n                        message={message}\n                        isCenter\n                    />\n                    <FormUtil.FormRecord\n                        titleLabel=\"self_pos_x\"\n                        jsx={\n                            <FormUtil.TextField\n                                marginLeft={2}\n                                checkable={xName}\n                                width={COMPONENT_WIDTH}\n                                setCheckable={setXName}\n                                validates={[\n                                    {\n                                        checker: (value) => ValidateUtil.checkRequired(value),\n                                        errorType: \"required\"\n                                    },\n                                    {\n                                        checker: (value) => LogicUtil.checkFieldName(value),\n                                        errorType: \"value\"\n                                    },\n                                    {\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\n                                        errorType: \"length\"\n                                    },\n                                    {\n                                        checker: (value) => {\n                                            const list = paramNameList.slice();\n                                            if (yName.value !== '') list.push(yName.value);\n                                            return !list.includes(value);\n                                        },\n                                        errorType: \"relation\"\n                                    }\n                                ]}\n                                dependency={[yName]}\n                            />\n                        }\n                    />\n                    <FormUtil.FormRecord\n                        titleLabel=\"self_pos_y\"\n                        jsx={\n                            <FormUtil.TextField\n                                marginLeft={2}\n                                checkable={yName}\n                                width={COMPONENT_WIDTH}\n                                setCheckable={setYName}\n                                validates={[\n                                    {\n                                        checker: (value) => ValidateUtil.checkRequired(value),\n                                        errorType: \"required\"\n                                    },\n                                    {\n                                        checker: (value) => LogicUtil.checkFieldName(value),\n                                        errorType: \"value\"\n                                    },\n                                    {\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\n                                        errorType: \"length\"\n                                    },\n                                    {\n                                        checker: (value) => {\n                                            const list = paramNameList.slice();\n                                            if (xName.value !== '') list.push(xName.value);\n                                            return !list.includes(value);\n                                        },\n                                        errorType: \"relation\"\n                                    }\n                                ]}\n                                dependency={[xName]}\n                            />\n                        }\n                    />\n                </_Inner>\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={buttons}\n                />\n            </_Frame>\n        );\n    }\n\n    export const SetParentPosition = (props: {\n        node: TreeUtil.ElementNode;\n        invalidate: () => void;\n    }) => {\n\n        const { store, setStore } = useContext(GlobalContext);\n\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n\n        const message = 'Please, select property name!';\n\n        const list = useMemo(() => {\n            return props.node.children.map(child => {\n                const wrap = child.data as LogicUtil.WrapElement;\n                return (wrap.data as LogicUtil.NodeParamItem).name;\n            });\n        }, []);\n\n        const buttons: FormUtil.ButtonProps[] = [\n            {\n                label: 'Cancel',\n                callback: () => {\n                    store.system.dialog = null;\n                    setStore({ ...store });\n                }\n            },\n            {\n                label: 'Execute',\n                isEnable: FormUtil.checkItems([xName, yName]),\n                callback: () => {\n                    const paramList = props.node.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\n                    const xParam = paramList.find(param => param.name === xName.value) as LogicUtil.NodeParamItem;\n                    const yParam = paramList.find(param => param.name === yName.value) as LogicUtil.NodeParamItem;\n                    xParam.formulaItems = ['var'];\n                    xParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }];\n                    yParam.formulaItems = ['var'];\n                    yParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }];\n\n                    store.system.dialog = null;\n                    setStore({ ...store });\n                    props.invalidate();\n                }\n            }\n        ]\n\n        return (\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\n                <_Inner>\n                    <FormUtil.Message\n                        message={message}\n                        isCenter\n                    />\n                    <FormUtil.FormRecord\n                        titleLabel=\"self_pos_x\"\n                        jsx={\n                            <FormUtil.Combobox\n                                marginLeft={2}\n                                checkable={xName}\n                                width={COMPONENT_WIDTH}\n                                setCheckable={setXName}\n                                validates={[\n                                    {\n                                        checker: (value) => ValidateUtil.checkRequired(value),\n                                        errorType: \"required\"\n                                    }\n                                ]}\n                                headBlank\n                                list={list.filter(item => item !== yName.value).map(item => ({\n                                    value: item, labelText: item\n                                }))}\n                            />\n                        }\n                    />\n                    <FormUtil.FormRecord\n                        titleLabel=\"self_pos_y\"\n                        jsx={\n                            <FormUtil.Combobox\n                                marginLeft={2}\n                                checkable={yName}\n                                width={COMPONENT_WIDTH}\n                                setCheckable={setYName}\n                                validates={[\n                                    {\n                                        checker: (value) => ValidateUtil.checkRequired(value),\n                                        errorType: \"required\"\n                                    }\n                                ]}\n                                headBlank\n                                list={list.filter(item => item !== xName.value).map(item => ({\n                                    value: item, labelText: item\n                                }))}\n                            />\n                        }\n                    />\n                </_Inner>\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={buttons}\n                />\n            </_Frame>\n        );\n    }\n}\n\nexport default SendTemplateDialog;\n\nconst _Frame = styled.div<{\n    width: number;\n    height: number;\n}>`\n    display: inline-block;\n    position: absolute;\n    z-index: 11;\n    top: calc(50% - ${props => props.height / 2}px);\n    left: calc(50% - ${props => props.width / 2}px);\n    width: ${props => props.width}px;\n    height: ${props => props.height}px;\n    background-color: #e7e7e7e2;\n    border: 1px solid #8f8f8f;\n    border-radius: 4px;\n    box-shadow: 10px 15px 15px #0000004b;\n`;\n\nconst _Inner = styled.div<{}>`\n    /* text-align: center; */\n    display: inline-block;\n    width: 100%;\n    background-color: #d0e7e718;\n`;","import { useContext, useMemo } from \"react\";\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\nimport TreeUtil from \"../../../../../utils/treeUtil\";\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\nimport LogicElementUtil from \"../../util/logicElementUtil\";\nimport LogicUtil from \"../../util/logicUtil\";\n\nconst EditorSendManager = () => {\n    const { store, setStore } = useContext(GlobalContext);\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\n    const wrap = node.data as LogicUtil.WrapElement;\n\n    const isDepend = () => {\n        const conn = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\n        return conn.method === 'depend';\n    };\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"template\"\n            innerJsx={<>\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={[\n                        {\n                            label: 'Connect Position',\n                            isEnable: !isDepend(),\n                            callback: () => {\n                                store.system.dialog = <SendTemplateDialog.ConnectParentPosition\n                                    node={node}\n                                    invalidate={invalidate}\n                                />;\n                                setStore({ ...store });\n                            }\n                        }\n                    ]}\n                />\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={[\n                        {\n                            label: 'Set Position',\n                            callback: () => {\n                                store.system.dialog = <SendTemplateDialog.SetParentPosition\n                                    node={node}\n                                    invalidate={invalidate}\n                                />;\n                                setStore({ ...store });\n                            }\n                        }\n                    ]}\n                />\n            </>}\n        />\n    </>);\n}\n\nexport default EditorSendManager;","import { useContext } from \"react\";\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\nimport TreeUtil from \"../../../../../utils/treeUtil\";\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\nimport LogicElementUtil from \"../../util/logicElementUtil\";\nimport LogicUtil from \"../../util/logicUtil\";\n\nconst EditorFieldMng = () => {\n    const { invalidate, node, setFocusNode } = useContext(FactoryTreeContext);\n    const wrap = node.data as LogicUtil.WrapElement;\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"operation\"\n            innerJsx={<FormUtil.ButtonRecord\n                align=\"center\"\n                buttons={[\n                    {\n                        label: 'Add Field',\n                        callback: () => {\n                            // const newWrap: FactoryUtil.WrapNode = FactoryUtil.createParamWrap('field-item',\n                            //     { name: '', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\n                            // );\n                            const newWrap: LogicUtil.WrapElement = {\n                                type: 'field-item',\n                                data: null\n                            };\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\n                            setFocusNode(newNode);\n                            invalidate();\n                        }\n                    }\n                ]}\n            />}\n        />\n    </>);\n}\n\nexport default EditorFieldMng;","import { useContext, useEffect, useMemo } from \"react\";\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\nimport LogicElementUtil from \"../../util/logicElementUtil\";\nimport LogicUtil from \"../../util/logicUtil\";\nimport ParamUtil from \"../../util/paramUtil\";\n\nconst EditorExtendMng = () => {\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\n    const wrap = node.data as LogicUtil.WrapElement;\n\n    const [hasLoopParam, hasInvokeParam] = useMemo(() => {\n        const list = node.children.map(el => {\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name as ParamUtil.ExtendParam;\n        });\n        return [\n            list.includes(ParamUtil.ExtendParamType.LOOP_COUNT),\n            list.includes(ParamUtil.ExtendParamType.INVOKE)\n        ]\n    }, [node]);\n\n    useEffect(() => {\n    }, [node]);\n\n    /**\n     * 追加要素の表示非表示を切り替える\n     */\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\n        if (hasNode) {\n            LogicElementUtil.removeChild(node, listPos, 1);\n            setFocusNode({ ...node });\n            invalidate();\n        } else {\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\n            setFocusNode({ ...node });\n            invalidate();\n        }\n    };\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"element\"\n            innerJsx={<>\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Loop'}\n                            width={300}\n                            isUse={hasLoopParam}\n                            callback={() => {\n                                toggleElement(hasLoopParam, 0, {\n                                    type: 'param-item',\n                                    data: {\n                                        name: ParamUtil.ExtendParamType.LOOP_COUNT,\n                                        formulaItems: ['var'],\n                                        values: [{ type: 'direct', value: '1' }]\n                                    } as LogicUtil.NodeParamItem\n                                });\n                            }}\n                        />\n                    }\n                />\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Invoke'}\n                            width={300}\n                            isUse={hasInvokeParam}\n                            callback={() => {\n                                toggleElement(hasInvokeParam, hasLoopParam ? 1 : 0, {\n                                    type: 'condition-item',\n                                    data: {\n                                        name: ParamUtil.ExtendParamType.INVOKE,\n                                        formulaItems: ['var', '=', 'var'],\n                                        values: [{ type: 'direct', value: '0' }, { type: 'direct', value: '0' }]\n                                    } as LogicUtil.NodeParamItem\n                                });\n                            }}\n                        />\n                    }\n                />\n            </>}\n        />\n    </>);\n}\n\nexport default EditorExtendMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\nimport TreeUtil from \"../../../../../utils/treeUtil\";\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\nimport LogicUtil from \"../../util/logicUtil\";\nimport ModifyOperations from \"../common/modifyOperations\";\nimport LogicElementUtil from \"../../util/logicElementUtil\";\n\nconst EditorSeedItem = () => {\n    const { store, setStore } = useContext(GlobalContext);\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\n    const wrap = node.data as LogicUtil.WrapElement;\n\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [entry, setEntry] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [permit, setPermit] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n\n    const mappingForm = () => {\n        const param = wrap.data as LogicUtil.NodeSeedItem;\n        setName({ ...name, value: param.name });\n        setEntry({ ...entry, value: param.entry });\n        setPermit({ ...permit, value: param.permit })\n    };\n\n    /** 既存のシード名を取得（重複チェックに使用） */\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\n\n    useEffect(() => {\n        if (wrap.data == null) {\n            setModify(true);\n        } else {\n            mappingForm();\n        }\n    }, [node]);\n\n    // 引用するロジックリスト\n    const logicNameList = useMemo((): string[] => {\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\n        const logicMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\n        return logicMng.defs.map(wrap => {\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\n        });\n    }, [node]);\n\n    const getSendParamList = (): string[] => {\n        const seed = wrap.data as LogicUtil.NodeSeedItem;\n        const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\n        const dependItem = logicMng.defs.find(wrap => {\n            return (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry;\n        });\n        if (dependItem != undefined) {\n            const logicWrap = dependItem;\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\n            if (argWrap.type === 'argument-mng') {\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\n                });\n            }\n        }\n        return [];\n    }\n\n    const initSendParams = () => {\n        const sendParamList = getSendParamList();\n        const sendNode = LogicElementUtil.getInnerNode(node, 'interface-mng', 'seedsend-mng') as TreeUtil.ElementNode;\n        const params = ((sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager).params;\n        // 必要な存在しないパラメータを追加\n        const curParamList = params.map(param => {\n            return (param.data as LogicUtil.NodeParamItem).name;\n        });\n        sendParamList.forEach(param => {\n            if (!curParamList.includes(param)) {\n                const paramWrap = LogicElementUtil.createParamWrap('seedsend-item',\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\n                );\n                params.push(paramWrap);\n            }\n        });\n        LogicElementUtil.syncTreeElementFromWrap(sendNode);\n    }\n\n    const getDefaultSeedMngs = (): LogicUtil.WrapElement[] => {\n        return [\n            {\n                type: 'interface-mng',\n                data: {\n                    mngs: [\n                        {\n                            type: 'seedarg-mng',\n                            data: {\n                                args: []\n                            } as LogicUtil.NodeSeedArgManager\n                        },\n                        {\n                            type: 'seedsend-mng',\n                            data: {\n                                params: []\n                            } as LogicUtil.NodeSeedSendManager\n                        },\n                    ]\n                } as LogicUtil.NodeInterfaceMng\n            },\n            {\n                type: 'thumbnail-mng',\n                data: {\n                    items: []\n                } as LogicUtil.NodeThumnailManager\n            },\n            {\n                type: 'sample-mng',\n                data: {\n                    samples: []\n                } as LogicUtil.NodeSampleManager\n            }\n        ];\n    }\n\n    return (<>\n        <ModifyOperations.Component\n            mappingForm={mappingForm}\n            checkableFields={[name, entry, permit]}\n            firstRegist={() => {\n                const element: LogicUtil.NodeSeedItem = {\n                    name: name.value,\n                    entry: entry.value,\n                    permit: permit.value as LogicUtil.PermitType,\n                    mngs: getDefaultSeedMngs()\n                };\n                wrap.data = element;\n\n                LogicElementUtil.syncTreeElementFromWrap(node);\n                // 参照しているロジックの引数をSendに設定\n                initSendParams();\n                invalidate();\n                setStore({ ...store });\n            }}\n            modifyRegist={() => {\n                const param = wrap.data as LogicUtil.NodeSeedItem;\n                param.name = name.value;\n                param.permit = permit.value as LogicUtil.PermitType;\n                wrap.data = param;\n            }}\n        />\n        <FormUtil.BorderPanel\n            title=\"param\"\n            innerJsx={<>\n                <FormUtil.FormRecord\n                    titleLabel=\"Name\"\n                    jsx={\n                        <FormUtil.TextField\n                            width={200}\n                            isReadOnly={!isModify}\n                            checkable={name}\n                            setCheckable={setName}\n                            validates={[\n                                {\n                                    checker: (value) => ValidateUtil.checkRequired(value),\n                                    errorType: \"required\"\n                                },\n                                {\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\n                                    errorType: \"length\"\n                                },\n                                {\n                                    checker: (value) => LogicUtil.checkFieldName(value),\n                                    errorType: \"value\"\n                                },\n                                {\n                                    checker: (value) => !existNameList.includes(value),\n                                    errorType: \"relation\"\n                                }\n                            ]}\n                        />\n                    }\n                />\n                <FormUtil.FormRecord\n                    titleLabel=\"Entry\"\n                    jsx={\n                        <FormUtil.Combobox\n                            marginLeft={2}\n                            checkable={entry}\n                            width={270}\n                            isReadOnly={!isModify}\n                            setCheckable={setEntry}\n                            list={logicNameList.map(item => {\n                                return { value: item, labelText: item };\n                            })}\n                            headBlank\n                            validates={[\n                                {\n                                    checker: (value) => ValidateUtil.checkRequired(value),\n                                    errorType: \"required\"\n                                }\n                            ]}\n                        />\n                    }\n                />\n                <FormUtil.FormRecord\n                    titleLabel=\"Permit\"\n                    jsx={\n                        <FormUtil.Combobox\n                            marginLeft={2}\n                            checkable={permit}\n                            width={178}\n                            isReadOnly={!isModify}\n                            setCheckable={setPermit}\n                            list={LogicUtil.PermitTypes.map(item => {\n                                return { value: item, labelText: item };\n                            })}\n                            headBlank\n                            validates={[\n                                {\n                                    checker: (value) => ValidateUtil.checkRequired(value),\n                                    errorType: \"required\"\n                                }\n                            ]}\n                        />\n                    }\n                />\n            </>}\n        />\n        <FormUtil.BorderPanel\n            title=\"operation\"\n            isEnable={!isModify}\n            innerJsx={<>\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={[\n                        {\n                            label: 'Delete',\n                            callback: () => {\n                                removeSelf();\n                            }\n                        }\n                    ]}\n                />\n                {/* 並び順入れ替えボタン */}\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\n            </>}\n        />\n    </>);\n}\n\nexport default EditorSeedItem;","import { useContext, useMemo } from \"react\";\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\nimport TreeUtil from \"../../../../../utils/treeUtil\";\nimport { FactoryTreeContext as LogicTreeContext } from \"../../logicMainteTab\";\nimport LogicElementUtil from \"../../util/logicElementUtil\";\nimport LogicUtil from \"../../util/logicUtil\";\n\nconst EditorThumbnailMng = () => {\n    const { node, setFocusNode, invalidate } = useContext(LogicTreeContext);\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeThumnailManager;\n\n    const hasSample = useMemo(() => {\n        const sampleMngNode = LogicElementUtil.getInnerNode(node.parent as TreeUtil.ElementNode, 'sample-mng') as TreeUtil.ElementNode;\n        return sampleMngNode.children.length as number > 0;\n    }, []);\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"operation\"\n            isEnable={hasSample}\n            innerJsx={<FormUtil.ButtonRecord\n                align=\"center\"\n                buttons={[\n                    {\n                        label: 'Add Thumbnail',\n                        callback: () => {\n                            const newWrap: LogicUtil.WrapElement = {\n                                type: 'thumbnail-item',\n                                data: null\n                            }\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\n                            setFocusNode(newNode);\n                        }\n                    }\n                ]}\n            />}\n        />\n    </>);\n}\n\nexport default EditorThumbnailMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\nimport CanvasUtil from \"../../../../../utils/canvasUtil\";\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\nimport TreeUtil from \"../../../../../utils/treeUtil\";\nimport Particle from \"../../../../graphic/particle\";\nimport PreviewUtil from \"../../../preview/previewUtil\";\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\nimport LogicElementUtil from \"../../util/logicElementUtil\";\nimport LogicUtil from \"../../util/logicUtil\";\nimport ModifyOperations from \"../common/modifyOperations\";\n\nconst WND_SIZE = 100;\n\nconst EditorThumbnailItem = () => {\n    const { rootData, node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\n    const wrap = node.data as LogicUtil.WrapElement;\n    const data = wrap.data as LogicUtil.NodeThumbnailItem;\n\n\n    const seedWrap = node.parent?.parent?.data as LogicUtil.WrapElement;\n    const sampleMng = LogicElementUtil.getInnerWrap(seedWrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\n    const samples = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\n\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [urls, setUrls] = useState<string[]>([]);\n\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\n    const reservedList = useMemo(() => {\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\n        return LogicElementUtil.getParamNameList(owner);\n    }, [node]);\n\n    const mappingForm = () => {\n        const param = wrap.data as LogicUtil.NodeThumbnailItem;\n        setName({ ...name, value: param.name });\n        setFrame({ ...frame, value: param.frame.toString() });\n    };\n    \n    /** 既存のサムネイル名を取得（重複チェックに使用） */\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\n\n    useEffect(() => {\n        if (wrap.data == null) {\n            setModify(true);\n        } else {\n            mappingForm();\n            setTimeout(() => {\n                const urls: string[] = [];\n                samples.forEach((sample, i) => {\n                    urls.push(getThumbnailURL(data.frame, i));\n                });\n                setUrls(urls);\n            }, 1);\n        }\n    }, [node]);\n\n    const getSeedValueMap = (sampleNo: number): PreviewUtil.ValueMap[] => {\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\n\n        const argMap: PreviewUtil.ValueMap[] = argMng.args.map((arg, i) => {\n            const name = (arg.data as LogicUtil.NodeSeedArgItem).name;\n            const value = samples[sampleNo].values[i];\n            return { name, value }\n        });\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\n        return sendParams.map(item => {\n            return { name: item.name, value: PreviewUtil.convertParamsToValue(item.name, sendParams, argMap) ?? 0 }\n        });\n    }\n\n    const getThumbnailURL = (targetFrame: number, sampleNo: number) => {\n        console.log('create start!');\n        const owner: Particle.Instance[] = [];\n\n        let frameCnt = 0;\n        do {\n            if (frameCnt === 0) {\n                const seed = (node.parent?.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\n                const logicManager = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\n                const logic = logicManager.defs.find(logic => (logic.data as LogicUtil.NodeLogicItem).name === seed.entry);\n                if (logic == undefined) break;\n\n                const sendValueMapList = getSeedValueMap(sampleNo);\n                owner.push(new Particle.Instance(\n                    PreviewUtil.buildLogicProps(owner, logic.data, rootData, sendValueMapList))\n                );\n            }\n\n            if (frameCnt === targetFrame) {\n                return CanvasUtil.createURL(550, 550, (ctx) => {\n\n                    // パーティクルの描画\n                    owner.forEach(par => {\n                        par.draw(ctx);\n                    });\n                    ctx.save();\n                });\n            }\n\n            // パーティクルの更新\n            for (let i = owner.length - 1; i >= 0; i--) {\n                const particle = owner[i];\n\n                particle.update();\n            }\n\n            // 死滅したパーティクルの削除\n            for (let i = owner.length - 1; i >= 0; i--) {\n                const particle = owner[i];\n                if (!particle.isLive) {\n                    owner.splice(i, 1);\n                }\n            }\n\n            if (frameCnt > 500 || owner.length > 3000) break;\n            frameCnt++;\n        } while (owner.length > 0);\n        return '';\n    }\n\n    const pictureJsxList = useMemo(() => {\n        const sampleMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\n        return sampleMng.samples.map((wrap, i) => {\n            const sample = wrap.data as LogicUtil.NodeSampleItem;\n\n            const url = urls[i];\n            const imgJsx = url == undefined ? <></> : <_IMG src={urls[i]} />;\n            return (\n                <_SampleDiv key={i}>-\n                    <_SampleName>{sample.name}</_SampleName>\n                    <_CanvasDiv>\n                        {imgJsx}\n                    </_CanvasDiv>\n                </_SampleDiv>\n            );\n        });\n    }, [node, urls]);\n\n    return (<>\n        <ModifyOperations.Component\n            mappingForm={mappingForm}\n            checkableFields={[name, frame]}\n            firstRegist={() => {\n                const param: LogicUtil.NodeThumbnailItem = {\n                    name: name.value,\n                    frame: Number(frame.value),\n                };\n                wrap.data = param;\n            }}\n            modifyRegist={() => {\n                const param = wrap.data as LogicUtil.NodeThumbnailItem;\n                param.name = name.value;\n                param.frame = Number(frame.value);\n                wrap.data = param;\n            }}\n        />\n        <FormUtil.BorderPanel\n            title=\"param\"\n            innerJsx={<>\n                <FormUtil.FormRecord\n                    titleLabel=\"Name\"\n                    jsx={\n                        <FormUtil.TextField\n                            width={200}\n                            isReadOnly={!isModify}\n                            checkable={name}\n                            setCheckable={setName}\n                            validates={[\n                                {\n                                    checker: (value) => ValidateUtil.checkRequired(value),\n                                    errorType: \"required\"\n                                },\n                                {\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\n                                    errorType: \"length\"\n                                },\n                                {\n                                    checker: (value) => LogicUtil.checkFieldName(value),\n                                    errorType: \"value\"\n                                },\n                                {\n                                    checker: (value) => !existNameList.includes(value),\n                                    errorType: \"relation\"\n                                }\n                            ]}\n                        />\n                    }\n                />\n                <FormUtil.FormRecord\n                    titleLabel=\"Frame\"\n                    jsx={\n                        <FormUtil.TextField\n                            width={100}\n                            isReadOnly={!isModify}\n                            isNumber\n                            checkable={frame}\n                            setCheckable={setFrame}\n                            validates={[\n                                {\n                                    checker: (value) => ValidateUtil.checkRequired(value),\n                                    errorType: \"required\"\n                                }\n                            ]}\n                        />\n                    }\n                />\n            </>}\n        />\n        <FormUtil.BorderPanel\n            title=\"preview\"\n            isEnable={!isModify}\n            innerJsx={<>\n                {pictureJsxList}\n            </>}\n        />\n        <FormUtil.BorderPanel\n            title=\"operation\"\n            isEnable={!isModify}\n            innerJsx={<>\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={[\n                        {\n                            label: 'Delete',\n                            isEnable: !isModify,\n                            callback: () => {\n                                removeSelf();\n                            }\n                        }\n                    ]}\n                />\n                {/* 並び順入れ替えボタン */}\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\n            </>}\n        />\n    </>);\n}\n\nexport default EditorThumbnailItem;\n\nconst _SampleDiv = styled.div<{}>`\n    display: inline-block;\n    /* width: ${WND_SIZE}px;\n    height: ${WND_SIZE}px; */\n    margin: 0 0 0 5px;\n`;\nconst _SampleName = styled.div<{}>`\n    display: block;\n    color: #09056c;\n    font-size: 14px;\n    font-weight: 600;\n    font-style: italic;\n    background-color: #ffffff5e;\n`;\nconst _CanvasDiv = styled.div<{}>`\n    display: inline-block;\n    width: ${WND_SIZE}px;\n    height: ${WND_SIZE}px;\n    background-color: #020202df;\n    border: solid 2px #ca0000;\n    box-sizing: border-box;\n`;\n\nconst _IMG = styled.img`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    height: 100%;\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\n\r\nconst EditorSampleItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [paramForms, setParamForms] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSampleItem;\r\n        setName({ ...name, value: param.name });\r\n        setParamForms(param.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のサンプル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const argInfoList: LogicUtil.NodeSeedArgItem[] = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'seedarg-mng');\r\n        if (argMng != null) {\r\n            return (argMng.data as LogicUtil.NodeSeedArgManager).\r\n                args.map(arg => {\r\n                    return arg.data as LogicUtil.NodeSeedArgItem;\r\n                });\r\n        } else throw new Error('argMng is undefined.');\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setParamForms(argInfoList.map(arg => {\r\n                let defval = ' ';\r\n                if (arg.defval != undefined) defval = arg.defval.toString();\r\n                return { value: defval, errors: [] };\r\n            }));\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const formList = useMemo(() => {\r\n        return paramForms.map((paramForm, i) => {\r\n            const arg = argInfoList[i];\r\n            return <FormUtil.FormRecord key={i}\r\n                titleLabel={arg.name}\r\n                jsx={\r\n                    <FormUtil.TextField\r\n                        width={150}\r\n                        isReadOnly={!isModify}\r\n                        checkable={paramForm}\r\n                        setCheckable={(checkable) => {\r\n                            paramForms[i] = checkable;\r\n                            setParamForms(paramForms.slice());\r\n                        }}\r\n                        isNumber\r\n                        step={arg.step}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkNumberRange(value, arg.min, arg.max),\r\n                                errorType: \"value\"\r\n                            },\r\n                        ]}\r\n                    />\r\n                }\r\n            />\r\n        });\r\n    }, [paramForms, isModify]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name].concat(paramForms)}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSampleItem = {\r\n                    name: name.value,\r\n                    values: []\r\n                };\r\n                paramForms.forEach((form, i) => {\r\n                    element.values[i] = Number(form.value);\r\n                });\r\n                wrap.data = element;\r\n\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSampleItem;\r\n                param.name = name.value;\r\n                paramForms.forEach((form, i) => {\r\n                    param.values[i] = Number(form.value);\r\n                });\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {formList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSampleMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Sample',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'sample-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSampleManager).samples.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleMng;","import { useContext, useMemo } from \"react\";\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\nimport TreeUtil from \"../../../../../utils/treeUtil\";\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\nimport LogicElementUtil from \"../../util/logicElementUtil\";\nimport LogicUtil from \"../../util/logicUtil\";\n\nconst EditorInterfaceManager = () => {\n    const { store, setStore } = useContext(GlobalContext);\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\n    const wrap = node.data as LogicUtil.WrapElement;\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"operation\"\n            innerJsx={<FormUtil.ButtonRecord\n                align=\"center\"\n                buttons={[\n                    {\n                        label: 'Initialize Params',\n                        callback: () => {\n                            invalidate();\n                        }\n                    }\n                ]}\n            />}\n        />\n    </>);\n}\n\nexport default EditorInterfaceManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedArgMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seedarg-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedArgManager).args.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedArgMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\nimport TreeUtil from \"../../../../../utils/treeUtil\";\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\nimport LogicElementUtil from \"../../util/logicElementUtil\";\nimport LogicUtil from \"../../util/logicUtil\";\nimport ModifyOperations from \"../common/modifyOperations\";\n\nconst EditorSeedArgItem = () => {\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\n    const wrap = node.data as LogicUtil.WrapElement;\n\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [min, setMin] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [max, setMax] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [step, setStep] = useState<FormUtil.CheckableValue>({ value: '1', errors: [] });\n    const [defval, setDefval] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    // const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\n\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\n    const reservedList = useMemo(() => {\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\n        return LogicElementUtil.getParamNameList(owner);\n    }, [node]);\n\n    const mappingForm = () => {\n        const param = wrap.data as LogicUtil.NodeSeedArgItem;\n        setName({ ...name, value: param.name });\n        setMin({ ...min, value: param.min.toString() });\n        setMax({ ...max, value: param.max.toString() });\n        setStep({ ...step, value: param.step.toString() });\n        setDefval({ ...defval, value: param.defval == undefined ? '' : param.defval.toString() });\n        // setArgType({ ...argType, value: param.valueType });\n    };\n\n    /** 既存のシード引数名を取得（重複チェックに使用） */\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\n\n    useEffect(() => {\n        if (wrap.data == null) {\n            setModify(true);\n        } else {\n            mappingForm();\n        }\n    }, [node]);\n\n    return (<>\n        <ModifyOperations.Component\n            mappingForm={mappingForm}\n            checkableFields={[name, min, max, step, defval]}\n            firstRegist={() => {\n                const param: LogicUtil.NodeSeedArgItem = {\n                    name: name.value,\n                    min: Number(min.value),\n                    max: Number(max.value),\n                    step: Number(step.value),\n                    defval: Number(defval.value === '' ? undefined : defval.value),\n                    // valueType: argType.value as LogicUtil.ArgumentType\n                };\n                wrap.data = param;\n                // LogicElementUtil.syncArgumentAdd(node.parent?.parent as TreeUtil.ElementNode, name.value);\n            }}\n            modifyRegist={() => {\n                const param = wrap.data as LogicUtil.NodeSeedArgItem;\n                const prevName = param.name;\n                param.name = name.value;\n                param.min = Number(min.value);\n                param.max = Number(max.value);\n                param.step = Number(step.value);\n                param.defval = Number(defval.value === '' ? undefined : defval.value);\n                // param.valueType = argType.value as LogicUtil.ArgumentType;\n                wrap.data = param;\n\n                if (prevName !== name.value) {\n                    // LogicElementUtil.syncArgumentName(node.parent?.parent as TreeUtil.ElementNode, prevName, name.value);\n                }\n            }}\n        />\n        <FormUtil.BorderPanel\n            title=\"param\"\n            innerJsx={<>\n                <FormUtil.FormRecord\n                    titleLabel=\"Name\"\n                    jsx={\n                        <FormUtil.TextField\n                            width={200}\n                            isReadOnly={!isModify}\n                            checkable={name}\n                            setCheckable={setName}\n                            validates={[\n                                {\n                                    checker: (value) => ValidateUtil.checkRequired(value),\n                                    errorType: \"required\"\n                                },\n                                {\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\n                                    errorType: \"length\"\n                                },\n                                {\n                                    checker: (value) => LogicUtil.checkFieldName(value),\n                                    errorType: \"value\"\n                                },\n                                {\n                                    checker: (value) => !existNameList.includes(value),\n                                    errorType: \"relation\"\n                                }\n                            ]}\n                        />\n                    }\n                />\n                <FormUtil.FormRecord\n                    titleLabel=\"Min\"\n                    jsx={\n                        <FormUtil.TextField\n                            width={100}\n                            isReadOnly={!isModify}\n                            checkable={min}\n                            setCheckable={setMin}\n                            isNumber\n                            dependency={[max]}\n                            validates={[\n                                {\n                                    checker: (value) => ValidateUtil.checkRequired(value),\n                                    errorType: \"required\"\n                                },\n                                {\n                                    checker: (value) => Number(value) < Number(max.value),\n                                    errorType: \"relation\"\n                                }\n                            ]}\n                        />\n                    }\n                />\n                <FormUtil.FormRecord\n                    titleLabel=\"Max\"\n                    jsx={\n                        <FormUtil.TextField\n                            width={100}\n                            isReadOnly={!isModify}\n                            checkable={max}\n                            setCheckable={setMax}\n                            isNumber\n                            dependency={[min]}\n                            validates={[\n                                {\n                                    checker: (value) => ValidateUtil.checkRequired(value),\n                                    errorType: \"required\"\n                                },\n                                {\n                                    checker: (value) => Number(value) > Number(min.value),\n                                    errorType: \"relation\"\n                                }\n                            ]}\n                        />\n                    }\n                />\n                <FormUtil.FormRecord\n                    titleLabel=\"Step\"\n                    jsx={\n                        <FormUtil.TextField\n                            width={100}\n                            isReadOnly={!isModify}\n                            checkable={step}\n                            setCheckable={setStep}\n                            isNumber\n                            validates={[\n                                {\n                                    checker: (value) => ValidateUtil.checkRequired(value),\n                                    errorType: \"required\"\n                                }\n                            ]}\n                        />\n                    }\n                />\n                <FormUtil.FormRecord\n                    titleLabel=\"Default\"\n                    jsx={\n                        <FormUtil.TextField\n                            width={100}\n                            isReadOnly={!isModify}\n                            checkable={defval}\n                            setCheckable={setDefval}\n                            isNumber\n                        />\n                    }\n                />\n                {/* <FormUtil.FormRecord\n                    titleLabel=\"Type\"\n                    jsx={\n                        <FormUtil.Combobox\n                            checkable={argType}\n                            setCheckable={setArgType}\n                            list={LogicUtil.ArgTypes.map(type => {\n                                return { value: type, labelText: type, isDisabled: type === 'color' }\n                            })}\n                            headBlank\n                            width={200}\n                            isReadOnly={!isModify}\n                            validates={\n                                [\n                                    {\n                                        checker: (value) => ValidateUtil.checkRequired(value),\n                                        errorType: \"required\"\n                                    }\n                                ]\n                            }\n                        />\n                    }\n                /> */}\n            </>}\n        />\n        <FormUtil.BorderPanel\n            title=\"operation\"\n            isEnable={!isModify}\n            innerJsx={<>\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={[\n                        {\n                            label: 'Delete',\n                            isEnable: !isModify,\n                            callback: () => {\n                                // LogicElementUtil.syncArgumentDel(node.parent?.parent as TreeUtil.ElementNode, name.value);\n                                removeSelf();\n                            }\n                        }\n                    ]}\n                />\n                {/* 並び順入れ替えボタン */}\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\n            </>}\n        />\n    </>);\n}\n\nexport default EditorSeedArgItem;","import { useContext, useMemo } from \"react\";\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\nimport TreeUtil from \"../../../../../utils/treeUtil\";\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\nimport LogicElementUtil from \"../../util/logicElementUtil\";\nimport LogicUtil from \"../../util/logicUtil\";\n\nconst EditorSeedSendMng = () => {\n    const { store, setStore } = useContext(GlobalContext);\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\n    const wrap = node.data as LogicUtil.WrapElement;\n\n    // const getSendParamList = (): string[] => {\n    //     const connector = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\n    //     const isCreate = connector.method === 'create';\n    //     let targetWrap: LogicUtil.WrapElement | null = null;\n    //     if (!isCreate) {\n    //         const rootNode = rootData.data as LogicUtil.NodeRoot;\n    //         const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\n    //         const dependItem = inheritMng.defs.find(wrap => {\n    //             return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\n    //         });\n    //         if (dependItem != undefined) targetWrap = dependItem;\n    //     } else {\n    //         targetWrap = (node.parent?.children[node.parent?.children.length - 1].data as LogicUtil.WrapElement)\n    //     }\n    //     if (targetWrap != null) {\n    //         const argWrap = (targetWrap.data as LogicUtil.NodeLogicItem).mngs[0];\n    //         if (argWrap.type === 'argument-mng') {\n    //             return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\n    //                 return (arg.data as LogicUtil.NodeArgumentItem).name;\n    //             });\n    //         }\n    //     }\n    //     return [];\n    // }\n\n    // const update = () => {\n    //     const sendParamList = getSendParamList();\n    //     const curSize = node.children.length;\n    //     const params = (wrap.data as LogicUtil.NodeParamManager).params;\n    //     // 不要なパラメータを削除\n    //     for (let i = curSize - 1; i >= 0; i--) {\n    //         const name = (params[i].data as LogicUtil.NodeParamItem).name;\n    //         if (!sendParamList.includes(name)) {\n    //             node.children.splice(i, 1);\n    //             params.splice(i, 1);\n    //         }\n    //     }\n    //     // 必要な存在しないパラメータを追加\n    //     const curParamList = params.map(param => {\n    //         return (param.data as LogicUtil.NodeParamItem).name;\n    //     });\n    //     sendParamList.forEach(param => {\n    //         if (!curParamList.includes(param)) {\n    //             const paramWrap = LogicElementUtil.createParamWrap('send-item',\n    //                 { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\n    //             );\n    //             params.push(paramWrap);\n    //             node.children.push(TreeUtil.createNode(paramWrap, node));\n    //         }\n    //     });\n    // }\n\n    return (<>\n    </>);\n}\n\nexport default EditorSeedSendMng;","import styled, { css } from \"styled-components\";\nimport Styles from \"../../../../base/design/styles\";\nimport TreeUtil from \"../../../../utils/treeUtil\";\nimport FactDetArgumentMng from \"../detail/logic/editorArgumentMng\";\nimport EditorArgumentItem from \"../detail/logic/editorArgumentItem\";\nimport FactDetSeedMng from \"../detail/seed/editorSeedMng\";\nimport EditorLogicMng from \"../detail/logic/editorLogicMng\";\nimport EditorLogicItem from \"../detail/logic/editorLogicItem\";\nimport EditorParamItem from \"../detail/logic/editorParamItem\";\nimport FactDetBehiviorMng from \"../detail/logic/editorBehiviorMng\";\nimport EditorVisualMng from \"../detail/logic/editorVisualMng\";\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\nimport EditorInheritConnMng from \"../detail/logic/editorInheritConnMng\";\nimport EditorInheritConnector from \"../detail/logic/editorInheritConnector\";\nimport EditorSendManager from \"../detail/logic/editorSendManager\";\nimport EditorFieldMng from \"../detail/logic/editorFieldMng\";\nimport EditorExtendMng from \"../detail/logic/editorExtendMng\";\nimport EditorSeedItem from \"../detail/seed/editorSeedItem\";\nimport FormUtil from \"../../../../utils/form/formUtiil\";\nimport LogicElementUtil from \"./logicElementUtil\";\nimport EditorThumbnailMng from \"../detail/seed/editorThumbnailMng\";\nimport EditorThumbnailItem from \"../detail/seed/editorThumbnailItem\";\nimport EditorSampleItem from \"../detail/seed/editorSampleItem\";\nimport EditorSampleMng from \"../detail/seed/editorSampleMng\";\nimport EditorInterfaceManager from \"../detail/seed/editorInterfaceManager\";\nimport EditorSeedArgMng from \"../detail/seed/editorSeedArgMng\";\nimport EditorSeedArgItem from \"../detail/seed/editorSeedArgItem\";\nimport EditorSeedSendMng from \"../detail/seed/editorSeedSendMng\";\n\nnamespace LogicUtil {\n\n    export type DetailArgs = {\n        rootData: LogicUtil.WrapElement;\n        node: TreeUtil.ElementNode;\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\n        invalidate: () => void;\n        isModify: boolean;\n        setModify: (isModify: boolean) => void;\n        // setRootData: React.Dispatch<React.SetStateAction<WrapElement>>;\n        setRootData: (rootData: WrapElement) => void;\n        removeSelf: () => void;\n    }\n\n    /**\n     * 変数名チェック\n     * @param str 検証する文字列\n     * @returns 判定結果\n     */\n    export const checkFieldName = (str: string) => {\n        // 1文字目が数値でないこと\n        const isNoHeadNumber = !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].\n            includes(str.substring(0, 1));\n        const list = '0123456789abcdefghijklmnopqrstuvwxyz_';\n        return isNoHeadNumber && ValidateUtil.checkIncludesChars(str, list);\n    }\n\n    export type NodeType =\n        'root' |\n        'seed-mng' |\n        'logic-mng' |\n        'seed-item' |\n        'logic-item' |\n        'argument-mng' |\n        'argument-item' |\n        'field-mng' |\n        'field-item' |\n        'visual-mng' |\n        'behavior-mng' |\n        'inhfld-mng' |\n        'extend-mng' |\n        'inherit-mng' |\n        'connector' |\n        'inherit-logic' |\n        'send-mng' |\n        'send-item' |\n        'param-item' |\n        'condition-item' |\n        'interface-mng' |\n        'sample-mng' |\n        'sample-item' |\n        'thumbnail-mng' |\n        'thumbnail-mng' |\n        'thumbnail-item' |\n        'seedarg-mng' |\n        'seedsend-mng' |\n        'seedarg-item' |\n        'seedsend-item'\n        ;\n\n    export const ArgTypes = ['number', 'color'] as const;\n    export type ArgumentType = typeof ArgTypes[number];\n\n    export const ParamInputTypes = ['direct', 'constant', 'argument', 'self', 'field'] as const;\n    export type ParamInputType = typeof ParamInputTypes[number];\n\n    export const ConnectTypes = ['create', 'depend'] as const;\n    export type InheritMethod = typeof ConnectTypes[number];\n\n    export const PermitTypes = ['develop', 'private', 'release'] as const;\n    export type PermitType = typeof PermitTypes[number];\n\n    export type ParamProps = {\n        type: ParamInputType;\n        value: string;\n    }\n\n    export type WrapElement = {\n        type: NodeType;\n        data: any;\n    }\n\n    export type NodeRoot = {\n        seedMng: WrapElement;\n        logicMng: WrapElement;\n    }\n    export type NodeSeedManager = {\n        defs: WrapElement[];\n    }\n    export type NodeLogicManager = {\n        defs: WrapElement[];\n    }\n    export type NodeLogicItem = {\n        name: string;\n        mngs: WrapElement[];\n    }\n    export type NodeInterfaceMng = {\n        mngs: WrapElement[];\n    }\n    export type NodeInheritItem = {\n        mngs: WrapElement[];\n    }\n    export type NodeParamManager = {\n        params: WrapElement[];\n    }\n    export type NodeParamItem = {\n        name: string;\n        formulaItems: string[];\n        values: ParamProps[];\n    }\n\n    export type NodeArgumentItem = {\n        name: string;\n        valueType: ArgumentType;\n    }\n    export type NodeThumbnailItem = {\n        name: string;\n        frame: number;\n    }\n    export type NodeArgumentManager = {\n        args: WrapElement[];\n    }\n    export type NodeFieldManager = {\n        fields: WrapElement[];\n    }\n    export type NodeSampleManager = {\n        samples: WrapElement[];\n    }\n    export type NodeSampleItem = {\n        name: string;\n        values: number[];\n    }\n\n    // export type NodeExtendManager = {\n    //     mngs: WrapElement[];\n    // }\n    export type NodeConnectManager = {\n        inherits: WrapElement[];\n    }\n    export type NodeInheritConnector = {\n        method: InheritMethod;\n        depend: string;\n        id: string;\n        disable?: boolean;\n        mngs: WrapElement[];\n    }\n\n    export type NodeSeedItem = {\n        name: string;\n        entry: string;\n        permit: PermitType;\n        mngs: WrapElement[];\n    }\n    export type NodeThumnailManager = {\n        items: WrapElement[];\n    }\n    export type NodeSeedArgManager = {\n        args: WrapElement[];\n    }\n    export type NodeSeedSendManager = {\n        params: WrapElement[];\n    }\n    export type NodeSeedArgItem = {\n        name: string;\n        min: number;\n        max: number;\n        step: number;\n        defval: number | undefined;\n    }\n\n    const COLOR_ROOT = '#a1a1a1';\n    const COLOR_METHOD = '#cca67b';\n    const COLOR_MNG = '#37a2bd';\n    const COLOR_LIST = '#b85f5f';\n    const COLOR_ITEM = '#ae628c';\n    const COLOR_DISABLE = '#685b79';\n    const COLOR_PARAM = '#8dae62';\n    const COLOR_FIELD = '#cec256';\n    const COLOR_THUMBNAIL = '#8283be';\n    const COLOR_CONDITION = '#56ce7e';\n\n    export const getNodeDisplayJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\n        const wrap = node.data as WrapElement;\n        switch (wrap.type) {\n            case 'root': {\n                return <_Category backgroundColor={COLOR_ROOT}>Library</_Category>;\n            }\n            case 'seed-mng': {\n                return <_Category backgroundColor={COLOR_METHOD}>Seed Manager</_Category>;\n            }\n            case 'logic-mng': {\n                return <_Category backgroundColor={COLOR_METHOD}>Logic Manager</_Category>;\n            }\n            case 'visual-mng': {\n                return <_Category backgroundColor={COLOR_MNG}>Visual</_Category>;\n            }\n            case 'extend-mng': {\n                return <_Category backgroundColor={COLOR_MNG}>Extend</_Category>;\n            }\n            case 'seed-item': {\n                let name = '...';\n                if (wrap.data != null) {\n                    const data = wrap.data as NodeLogicItem;\n                    name = data.name;\n                }\n                return <>\n                    <_Category backgroundColor={COLOR_ITEM}>Seed</_Category>\n                    <_EditableValue>{name}</_EditableValue>\n                </>;\n            }\n            case 'logic-item': {\n                let name = '...';\n                if (wrap.data != null) {\n                    const data = wrap.data as NodeLogicItem;\n                    name = data.name;\n                }\n                return <>\n                    <_Category backgroundColor={COLOR_ITEM}>Logic</_Category>\n                    <_EditableValue>{name}</_EditableValue>\n                </>;\n            }\n            case 'inherit-logic': {\n                return <_Category backgroundColor={COLOR_MNG}>Logic</_Category>;\n            }\n            case 'argument-mng': {\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\n            }\n            case 'inhfld-mng':\n            case 'field-mng': {\n                return <_Category backgroundColor={COLOR_LIST}>Field Manager</_Category>;\n            }\n            case 'behavior-mng': {\n                return <_Category backgroundColor={COLOR_MNG}>Behavior</_Category>;\n            }\n            case 'inherit-mng': {\n                return <_Category backgroundColor={COLOR_LIST}>Inherit Manager</_Category>;\n            }\n            case 'connector': {\n                let detailJsx = <span>...</span>;\n                let color = COLOR_ITEM;\n                let isDisable = false;\n                if (wrap.data != null) {\n                    const data = wrap.data as NodeInheritConnector;\n                    detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}</_Span></span>;\n                    if (data.method === 'depend') {\n                        detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}:&nbsp;</_Span><_Field>{data.depend}</_Field></span>;\n                    }\n                    if (data.disable ?? false) {\n                        color = COLOR_DISABLE;\n                        isDisable = true;\n                    }\n                }\n                return (<>\n                    <_Category backgroundColor={color} isDisable={isDisable}>Inherit</_Category>\n                    {detailJsx == undefined ? <></> : <_EditableValue>{detailJsx}</_EditableValue>}\n                </>);\n            }\n            // パラメータ要素\n            case 'param-item':\n            case 'seedsend-item':\n            case 'send-item': {\n                const data = wrap.data as NodeParamItem;\n                let result: JSX.Element[] = [];\n                let varCnt = 0;\n                data.formulaItems.forEach((formula, i) => {\n                    let str = <_Signature key={i}>{formula}</_Signature>;\n                    if (formula === 'var') {\n                        const v = data.values[varCnt];\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\n                        else str = <span key={i}>{v.value}</span>;\n                        varCnt++;\n                    }\n                    result.push(str);\n                });\n                return <>\n                    <_Category backgroundColor={COLOR_PARAM}>Param<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\n                    <_EditableValue>{result}</_EditableValue>\n                </>;\n            }\n            // 条件要素\n            case 'condition-item': {\n                const data = wrap.data as NodeParamItem;\n                let result: JSX.Element[] = [];\n                let varCnt = 0;\n                data.formulaItems.forEach((formula, i) => {\n                    let str = <_Signature key={i}>{formula}</_Signature>;\n                    if (formula === 'var') {\n                        const v = data.values[varCnt];\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\n                        else str = <span key={i}>{v.value}</span>;\n                        varCnt++;\n                    }\n                    result.push(str);\n                });\n                return <>\n                    <_Category backgroundColor={COLOR_CONDITION}>Condition<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\n                    <_EditableValue>{result}</_EditableValue>\n                </>;\n            }\n            // 変数要素\n            case 'field-item': {\n                let nameJsx = <span>...</span>;\n                let detailJsx = <span>...</span>;\n                if (wrap.data != null) {\n                    const data = wrap.data as NodeParamItem;\n                    nameJsx = <_Detail>&nbsp;[{data.name}]</_Detail>;\n                    let result: JSX.Element[] = [];\n                    let varCnt = 0;\n                    data.formulaItems.forEach((formula, i) => {\n                        let str = <_Signature key={i}>{formula}</_Signature>;\n                        if (formula === 'var') {\n                            const v = data.values[varCnt];\n                            if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\n                            else str = <span key={i}>{v.value}</span>;\n                            varCnt++;\n                        }\n                        result.push(str);\n                    });\n                    detailJsx = <>{result}</>;\n                }\n                return <>\n                    <_Category backgroundColor={COLOR_FIELD}>Field{nameJsx}</_Category>\n                    <_EditableValue>{detailJsx}</_EditableValue>\n                </>;\n            }\n            case 'argument-item': {\n                let detailJsx = <span>...</span>;\n                if (wrap.data != null) {\n                    const data = wrap.data as NodeArgumentItem;\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.valueType})</_ValueType></span>\n                }\n                return <>\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\n                    <_EditableValue>{detailJsx}</_EditableValue>\n                </>;\n            }\n            case 'send-mng': {\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\n            }\n            case 'thumbnail-mng': {\n                return <_Category backgroundColor={COLOR_LIST}>Thumnail Manager</_Category>;\n            }\n            case 'thumbnail-item': {\n                let detailJsx = <span>...</span>;\n                if (wrap.data != null) {\n                    const data = wrap.data as NodeThumbnailItem;\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.frame})</_ValueType></span>\n                }\n                return <>\n                    <_Category backgroundColor={COLOR_THUMBNAIL}>Thumbnail</_Category>\n                    <_EditableValue>{detailJsx}</_EditableValue>\n                </>;\n            }\n            case 'sample-mng': {\n                return <_Category backgroundColor={COLOR_LIST}>Sample Manager</_Category>;\n            }\n            case 'sample-item': {\n                let name = '...';\n                if (wrap.data != null) {\n                    const data = wrap.data as NodeSampleItem;\n                    name = data.name;\n                }\n                return <>\n                    <_Category backgroundColor={COLOR_ITEM}>Sample</_Category>\n                    <_EditableValue>{name}</_EditableValue>\n                </>;\n            }\n            case 'interface-mng': {\n                return <_Category backgroundColor={COLOR_MNG}>Interface</_Category>;\n            }\n            case 'seedarg-mng': {\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\n            }\n            case 'seedarg-item': {\n                let detailJsx = <span>...</span>;\n                if (wrap.data != null) {\n                    const data = wrap.data as NodeSeedArgItem;\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.min}～{data.max})</_ValueType></span>\n                }\n                return <>\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\n                    <_EditableValue>{detailJsx}</_EditableValue>\n                </>;\n            }\n            case 'seedsend-mng': {\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\n            }\n        }\n        return <_Category backgroundColor={'#ffffff'}>XXXXX</_Category>;\n    }\n\n    export const getTypeName = (node: TreeUtil.ElementNode | null) => {\n        if (node == null) return '';\n        const type = (node.data as WrapElement).type;\n        switch (type) {\n            case 'root': return 'Root';\n            case 'seed-mng': return 'Seed Manager';\n            case 'logic-mng': return 'Logic Manager';\n            case 'seed-item': return 'Seed Item';\n            case 'logic-item': return 'Logic Item';\n            case 'argument-mng': return 'Argument Manager';\n            case 'inhfld-mng':\n            case 'field-mng': return 'Field Manager';\n            case 'field-item': return 'Field Item';\n            case 'visual-mng': return 'Visual Manager';\n            case 'argument-item': return 'Argument Item';\n            case 'extend-mng': return 'Extend Manager';\n            case 'behavior-mng': return 'Behavior Manager';\n            case 'inherit-mng': return 'Inherit Manager';\n            case 'connector': return 'Inherit Connector';\n            case 'inherit-logic': return 'Inherit Logic';\n            case 'send-mng': return 'Send Manager';\n            case 'send-item': return 'Send Item';\n            case 'param-item': return 'Param Item';\n            case 'condition-item': return 'Condition Item';\n            case 'interface-mng': return 'Interface Manager';\n            case 'thumbnail-mng': return 'Thumbnail Manager';\n            case 'thumbnail-item': return 'Thumbnail Item';\n            case 'sample-mng': return 'Sample Manager';\n            case 'sample-item': return 'Sample Item';\n            case 'seedarg-mng': return 'Argument Manager';\n            case 'seedsend-mng': return 'Send';\n        }\n    }\n\n    export const getDetailComponent = (node: TreeUtil.ElementNode | null) => {\n        if (node == null) return <></>;\n        const type = (node.data as WrapElement).type;\n        switch (type) {\n            case 'root': return <></>;\n            case 'seed-mng': return <FactDetSeedMng />;\n            case 'logic-mng': return <EditorLogicMng />;\n            case 'seed-item': return <EditorSeedItem />;\n            case 'logic-item': return <EditorLogicItem />;\n            case 'argument-mng': return <FactDetArgumentMng />;\n            case 'argument-item': return <EditorArgumentItem />;\n            case 'inhfld-mng':\n            case 'field-mng': return <EditorFieldMng />;\n            case 'visual-mng': return <EditorVisualMng />;\n            case 'extend-mng': return <EditorExtendMng />;\n            case 'behavior-mng': return <FactDetBehiviorMng />;\n            case 'inherit-mng': return <EditorInheritConnMng />;\n            case 'connector': return <EditorInheritConnector />;\n            case 'inherit-logic': return <EditorLogicItem />;\n            case 'send-mng': return <EditorSendManager />;\n            case 'field-item':\n            case 'param-item':\n            case 'condition-item':\n            case 'seedsend-item':\n            case 'send-item': return <EditorParamItem />;\n            case 'interface-mng': return <EditorInterfaceManager />;\n            case 'sample-mng': return <EditorSampleMng />;\n            case 'sample-item': return <EditorSampleItem />;\n            case 'thumbnail-mng': return <EditorThumbnailMng />;\n            case 'thumbnail-item': return <EditorThumbnailItem />;\n            case 'seedarg-mng': return <EditorSeedArgMng />;\n            case 'seedarg-item': return <EditorSeedArgItem />;\n            case 'seedsend-mng': return <EditorSeedSendMng />;\n        }\n    }\n\n    export const getChildrenElementNode = (node: TreeUtil.ElementNode): TreeUtil.ElementNode[] => {\n        const wrapNode = node.data as WrapElement;\n        const get = (listName: string) => {\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\n                const elementNode = TreeUtil.createNode(wrap, node);\n                elementNode.children = getChildrenElementNode(elementNode);\n                return elementNode;\n            });\n        }\n        switch (wrapNode.type) {\n            case 'seed-mng':\n            case 'logic-mng': return get('defs');\n            case 'seed-item':\n            case 'connector':\n            case 'inherit-logic':\n            case 'interface-mng':\n            case 'logic-item': return get('mngs');\n            case 'send-mng':\n            case 'behavior-mng':\n            case 'visual-mng':\n            case 'extend-mng':\n            case 'seedsend-mng':\n            case 'visual-mng': return get('params');\n            case 'inherit-mng': return get('inherits');\n            case 'seedarg-mng':\n            case 'argument-mng': return get('args');\n            case 'sample-mng': return get('samples');\n            case 'inhfld-mng':\n            case 'field-mng': return get('fields');\n            case 'thumbnail-mng': return get('items');\n        }\n        return [];\n    };\n\n    export const getChildrenDataNode = (wrapNode: LogicUtil.WrapElement): TreeUtil.DataNode[] => {\n        const get = (listName: string) => {\n\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\n                const treeNode: TreeUtil.DataNode = {\n                    data: wrap,\n                    children: getChildrenDataNode(wrap)\n                };\n                return treeNode;\n            });\n        }\n        switch (wrapNode.type) {\n            case 'root': {\n                const node = wrapNode.data as LogicUtil.NodeRoot;\n                return [\n                    { data: node.seedMng, children: getChildrenDataNode(node.seedMng) },\n                    { data: node.logicMng, children: getChildrenDataNode(node.logicMng) }\n                ];\n            }\n            case 'seed-mng':\n            case 'logic-mng': return get('defs');\n            case 'seed-item':\n            case 'connector':\n            case 'inherit-logic':\n            case 'interface-mng':\n            case 'logic-item': return get('mngs');\n            case 'send-mng':\n            case 'behavior-mng':\n            case 'visual-mng':\n            case 'extend-mng':\n            case 'seedsend-mng':\n            case 'visual-mng': return get('params');\n            case 'inherit-mng': return get('inherits');\n            case 'seedarg-mng':\n            case 'argument-mng': return get('args');\n            case 'sample-mng': return get('samples');\n            case 'inhfld-mng':\n            case 'field-mng': return get('fields');\n            case 'thumbnail-mng': return get('items');\n        }\n        return [];\n    };\n}\n\nexport default LogicUtil;\n\nconst _Category = styled.div<{\n    backgroundColor: string;\n    isDisable?: boolean;\n}>`\n    ${Styles.CSS_LABEL_MIDIUM}\n    display: inline-block;\n    position: relative;\n    background-color: ${props => props.backgroundColor};\n    /* width: 100%; */\n    ${props => !(props.isDisable ?? false) ? '' : css`\n        text-decoration: line-through;\n        color: #00054dac;\n    `}\n    border-radius: 4px 0 0 4px;\n    margin: 5px 0 0 0;\n    padding: 0 10px;\n    border: solid 1px #000000d2;\n`;\nconst _Detail = styled.span`\n    color: #000b69bd;\n`;\n\nconst _EditableValue = styled.div`\n    ${Styles.CSS_LABEL_MIDIUM}\n    display: inline-block;\n    position: relative;\n    background-color: #0c0c0c;\n    color: #ebebeb;\n    border-radius: 0 4px 4px 0;\n    /* width: 100%; */\n    margin: 5px 0 0 0;\n    padding: 0 10px;\n`;\nconst _Span = styled.span<{\n    color: string;\n}>`\n    color: ${props => props.color};\n`;\nconst _ValueType = styled.span`\n    color: #fff9d6b9;\n`;\nconst _Signature = styled.span`\n    color: #ffffff78;\n`;\nconst _Field = styled.span`\n    color: #ff2d2d;\n`;","import { type } from \"os\";\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../../base/design/styles\";\nimport DataUtil from \"../../../utils/dataUtil\";\nimport FormUtil from \"../../../utils/form/formUtiil\";\nimport TreeUtil from \"../../../utils/treeUtil\";\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\nimport { GlobalContext } from \"../../entry/systemEntry\";\nimport Common from \"../common\";\nimport LogicPreviewFrame from \"../preview/logicPreviewFrame\";\nimport LogicElementUtil from \"./util/logicElementUtil\";\nimport LogicUtil from \"./util/logicUtil\";\n\nexport const FactoryTreeContext = createContext({} as LogicUtil.DetailArgs);\n\nconst LogicMainteTab = () => {\n    const { store, setStore } = useContext(GlobalContext);\n\n    // const [rootData, setRootData] = useState(LogicElementUtil.getInitialData());\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\n    // const [treeDisable, setTreeDisable] = useState(false);\n    const [isModify, setModify] = useState<boolean>(false);\n    const [invalidate, setInvalidate] = useState<any>(null);\n\n    const rootData = store.logicData as LogicUtil.WrapElement;\n\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\n        return {\n            data: rootData,\n            children: LogicUtil.getChildrenDataNode(rootData)\n        }\n    }, [rootData]);\n\n    // useEffect(()=> {\n    //     store.logicData = rootData;\n    //     setStore({...store});\n    // }, [rootData]);\n\n    const setRootData = (rootData: LogicUtil.WrapElement) => {\n        store.logicData = rootData;\n        setStore({ ...store });\n    }\n\n    const masterNode = useMemo(() => {\n        let cur: TreeUtil.ElementNode | null = focusNode;\n        while (cur != null) {\n            const type = (cur.data as LogicUtil.WrapElement).type;\n            if (['logic-item', 'seed-item'].includes(type)) return cur;\n            cur = cur.parent;\n        };\n        return null;\n    }, [focusNode]);\n\n    /**\n     * プレビューダイアログを表示する\n     */\n    const openPreviewDialog = () => {\n        if (masterNode == null) return;\n        store.system.dialog = (\n            <LogicPreviewFrame.Component\n                node={masterNode}\n                rootData={rootData}\n            />\n        );\n        setStore({ ...store });\n    }\n\n    return (\n        <_Wrap\n            tabIndex={0}\n            onKeyDown={(e) => {\n                // console.log(e.key);\n                if (isModify || focusNode == null) return;\n                switch (e.key) {\n                    case 'ArrowRight': {\n                        if (focusNode.children.length > 0) {\n                            if (!focusNode.isOpen) focusNode.isOpen = true;\n                            else setFocusNode(focusNode.children[0]);\n                            setInvalidate({});\n                        }\n                    } break;\n                    case 'ArrowLeft': {\n                        if (focusNode.isOpen) focusNode.isOpen = false;\n                        else {\n                            if (focusNode.parent != null) setFocusNode(focusNode.parent);\n                        }\n                        setInvalidate({});\n                    } break;\n                    case 'ArrowUp': {\n                        if (focusNode.parent != null) {\n                            const list = focusNode.parent.children;\n                            list.forEach((n, i) => {\n                                if (focusNode == n) {\n                                    if (i === 0) {\n                                        setFocusNode(focusNode.parent);\n                                        setInvalidate({});\n                                    } else {\n                                        setFocusNode(list[i - 1]);\n                                        setInvalidate({});\n                                    }\n                                    return 1;\n                                }\n                            });\n                        }\n                    } break;\n                    case 'ArrowDown': {\n                        if (focusNode.parent != null) {\n                            const list = focusNode.parent.children;\n                            list.forEach((n, i) => {\n                                if (focusNode == n && i < list.length - 1) {\n                                    setFocusNode(list[i + 1]);\n                                    setInvalidate({});\n                                    return 1;\n                                }\n                            });\n                        }\n                    } break;\n                    case ' ': {\n                        if (masterNode != null) openPreviewDialog();\n                    } break;\n                }\n            }}\n        >\n            <_TreeDiv>\n                <_TreeHead>\n                    <FormUtil.ButtonRecord\n                        align=\"left\"\n                        buttons={[\n                            {\n                                label: 'Preview',\n                                isEnable: masterNode != null,\n                                callback: openPreviewDialog\n                            }\n                        ]}\n                    />\n                </_TreeHead>\n                <_TreeBody>\n                    <TreeUtil.Frame\n                        rootDataNode={rootDataNode}\n                        clickEvent={(node: TreeUtil.ElementNode) => {\n                            setFocusNode(node);\n                        }}\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\n                            // console.log(focusNode);\n                            // console.log(node);\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\n                            return LogicUtil.getNodeDisplayJsx(node, focusNode?.data == node.data)\n                        }}\n                        invalidate={invalidate}\n                        focusNode={focusNode}\n                        isDisable={isModify}\n                    />\n                </_TreeBody>\n            </_TreeDiv>\n            <_PropsDiv>\n                <_DetailDiv>\n                    <_DetailHeader>\n                        <_DetailHeaderLabel>{LogicUtil.getTypeName(focusNode)}</_DetailHeaderLabel>\n                    </_DetailHeader>\n                    <FactoryTreeContext.Provider value={{\n                        rootData,\n                        node: focusNode as TreeUtil.ElementNode,\n                        setFocusNode: setFocusNode,\n                        invalidate: () => { setInvalidate({}) },\n                        isModify,\n                        setModify,\n                        // treeDisable,\n                        setRootData,\n                        removeSelf: () => {\n                            const node = focusNode as TreeUtil.ElementNode;\n                            let index = -1;\n                            node.parent?.children.forEach((n, i) => {\n                                if (n == node) index = i;\n                            });\n                            node.parent?.children.splice(index, 1);\n                            const parentWrap = node.parent?.data as LogicUtil.WrapElement;\n                            const listName = LogicElementUtil.getListParamName(parentWrap.type);\n                            if (listName == null) return;\n                            const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\n                            list.splice(index, 1);\n                            setFocusNode(node.parent as TreeUtil.ElementNode);\n                            setInvalidate({});\n                        }\n                    }}>\n                        <_DetailMainDiv>{LogicUtil.getDetailComponent(focusNode)}</_DetailMainDiv>\n                    </FactoryTreeContext.Provider>\n                </_DetailDiv>\n            </_PropsDiv>\n        </_Wrap >\n    );\n}\n\nexport default LogicMainteTab;\n\nconst PROPS_DIV_WIDTH = 460;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    background-color: #6c8186;\n    width: 100%;\n    height: 100%;\n`;\n\nconst _TreeDiv = styled.div`\n    display: inline-block;\n    position: relative;\n    background-color: #d5d4d87b;\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\n    height: 100%;\n    vertical-align: top;\n`;\n\nconst _TreeHead = styled.div`\n    display: inline-block;\n    position: relative;\n    /* background-color: #d5d4d8; */\n    width: 100%;\n    height: 40px;\n`;\nconst _TreeHeadHalf = styled.div`\n    display: inline-block;\n    width: 50%;\n`;\n\nconst _TreeBody = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    background-color: #7fbdb47a;\n    height: calc(100% - 40px);\n`;\n\nconst _PropsDiv = styled.div`\n    display: inline-block;\n    /* position: relative; */\n    background-color: #9fa9b6;\n    width: ${PROPS_DIV_WIDTH}px;\n    height: 100%;\n    vertical-align: top;\n    box-sizing: border-box;\n`;\n\nconst _DetailDiv = styled.div`\n    display: inline-block;\n    /* position: relative; */\n    background-color: #c0c9c4;\n    width: calc(100% - 4px);\n    height: calc(100% - 4px);\n    margin: 2px 0 0 2px;\n`;\nconst _DetailHeader = styled.div`\n    display: inline-block;\n    /* position: relative; */\n    /* background-color: #b4b29e; */\n    width: 100%;\n    height: 40px;\n`;\nconst _DetailHeaderLabel = styled.div`\n    ${Styles.CSS_LABEL_MIDIUM}\n    color: #a10000;\n    /* background-color: #bbd0d3; */\n    border: solid 1px #a10000;\n    box-sizing: border-box;\n    width: calc(100% - 20px);\n    margin: 5px 0 0 10px;\n    border-radius: 4px;\n`;\n\nconst _DetailMainDiv = styled.div`\n    width: calc(100% - 8px);\n    height: calc(100% - 44px);\n    margin: 0 0 0 4px;\n    background-color: #cfd3cc;\n    border: solid 1px #0026a1;\n    box-sizing: border-box;\n    border-radius: 4px;\n`;\n\nconst _Blind = styled.div<{\n    isVisible: boolean;\n}>`\n    display: inline-block;\n    ${props => props.isVisible ? '' : css`\n        display: none;\n    `}\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 10;\n    background-color: #0012616c;\n    width: 100%;\n    height: 100%;\n`;","import styled from \"styled-components\";\nimport { useContext, useEffect, useMemo, useState } from \"react\";\nimport FormUtil from \"../../../utils/form/formUtiil\";\nimport { GlobalContext } from \"../../entry/systemEntry\";\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\nimport LogicUtil from \"../factory/util/logicUtil\";\nimport StoreCloud from \"../../../redux/store/storeCloud\";\nimport DataUtil from \"../../../utils/dataUtil\";\n\nnamespace NameDefDialog {\n\n    export const Component = (props: {\n        targetSeq: number\n    }) => {\n        const { store, setStore } = useContext(GlobalContext);\n        const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n\n        const width = 500;\n        const height = 150;\n\n        const isCreate = props.targetSeq === -1;\n        const projects = store.cloud?.projects as StoreCloud.Project[];\n\n        const getDefaultName = () => {\n            return props.targetSeq === -1 ? '' : (projects.find(p => p.seq === props.targetSeq) as StoreCloud.Project).name;\n        }\n\n        useEffect(() => {\n            name.value = getDefaultName();\n            setName({ ...name });\n        }, []);\n\n        const [existNames] = useMemo(() => {\n            return [\n                projects.map(item => item.name)\n            ];\n        }, []);\n\n        const registCreate = () => {\n            const result = findProjectMaxSeq();\n            result.then((maxSeq) => {\n                const newProject = {\n                    seq: maxSeq + 1,\n                    name: name.value,\n                    source: '',\n                    lastmod: ''\n                };\n                projects.push(newProject);\n                insertProject(store.system.user?.seq as number, newProject).then(() => {\n                    store.system.dialog = null;\n                    setStore({ ...store });\n                });\n            });\n        }\n\n        const registUpdate = () => {\n            const targetItem = projects.find(item => item.seq === props.targetSeq);\n            if (targetItem != undefined) {\n                updateProjectName(props.targetSeq, name.value).then(() => {\n                    targetItem.name = name.value;\n                    store.system.dialog = null;\n                    setStore({ ...store });\n                });\n            }\n        }\n\n        const buttons: FormUtil.ButtonProps[] = [\n            {\n                label: 'Cancel',\n                callback: () => {\n                    store.system.dialog = null;\n                    setStore({ ...store });\n                }\n            },\n            {\n                label: isCreate ? 'Create' : 'Update',\n                isEnable: name.errors.length === 0,\n                callback: () => {\n                    if (isCreate) registCreate();\n                    else registUpdate();\n                }\n            }\n        ]\n\n        return (\n            <_Frame width={width} height={height}>\n                <FormUtil.Message\n                    message={'Please, input new name!'}\n                    isCenter\n                    marginTop={10}\n                    marginBottom={10}\n                />\n                <FormUtil.FormRecord\n                    titleLabel=\"Name\"\n                    jsx={\n                        <FormUtil.TextField\n                            width={250}\n                            checkable={name}\n                            setCheckable={setName}\n                            validates={[\n                                {\n                                    checker: (value) => ValidateUtil.checkRequired(value),\n                                    errorType: \"required\"\n                                },\n                                {\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\n                                    errorType: \"length\"\n                                },\n                                // {\n                                //     checker: (value) => LogicUtil.checkFieldName(value),\n                                //     errorType: \"value\"\n                                // },\n                                {\n                                    checker: (value) => !existNames.includes(value),\n                                    errorType: \"relation\"\n                                }\n                            ]}\n                        />\n                    }\n                />\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={buttons}\n                />\n            </_Frame>\n        );\n    }\n}\n\nexport default NameDefDialog;\n\nconst findProjectMaxSeq = async () => {\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT max(seq) m FROM prjcttbl`);\n    const results = await response.json();\n    return results[0].m;\n};\n\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\n}\n\nconst updateProjectName = async (seq: number, newName: string) => {\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\n}\n\nconst _Frame = styled.div<{\n    width: number;\n    height: number;\n}>`\n    display: inline-block;\n    position: absolute;\n    z-index: 11;\n    top: calc(50% - ${props => props.height / 2}px);\n    left: calc(50% - ${props => props.width / 2}px);\n    width: ${props => props.width}px;\n    height: ${props => props.height}px;\n    background-color: #e7e7e7e2;\n    border: 1px solid #8f8f8f;\n    border-radius: 4px;\n    box-shadow: 10px 15px 15px #0000004b;\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../../base/design/styles\";\nimport StoreCloud from \"../../../redux/store/storeCloud\";\nimport DataUtil from \"../../../utils/dataUtil\";\nimport FormUtil from \"../../../utils/form/formUtiil\";\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\nimport { GlobalContext } from \"../../entry/systemEntry\";\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\nimport LogicUtil from \"../factory/util/logicUtil\";\nimport NameDefDialog from \"./nameDefDialog\";\n\nconst ManageTab = () => {\n\n    const { store, setStore } = useContext(GlobalContext);\n\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\n\n    const listItemJsx = store.cloud == null ? [] : store.cloud.projects.map((item, i) => {\n        const exist = item.source !== '';\n        return (\n            <_ListItem key={i}\n                isFocus={i === fcsListIdx}\n                onClick={() => {\n                    setFcsListIdx(i);\n                }}\n            >\n                <_Status isExist={exist}>[{!exist ? 'Blank' : 'Logic'}] </_Status>\n                <_Name>{item.name}</_Name>\n                {/* <_Date> -{item.lastmod}</_Date> */}\n            </_ListItem>\n        );\n    });\n\n    const hasData = store.logicData != null;\n    const projects = store.cloud?.projects as StoreCloud.Project[];\n\n    useEffect(()=>{\n        if(store.cloud == null) {\n            setFcsListIdx(-1);\n        }\n    }, [store.cloud]);\n\n    const [logicSize, developCnt, privateCnt, releaseCnt, logicCnt] = useMemo(() => {\n        if (store.logicData == null) return [0, 0, 0, 0, 0];\n        let size = 0;\n        const incrRec = (wrap: LogicUtil.WrapElement) => {\n            size++;\n            const listName = LogicElementUtil.getListParamName(wrap.type);\n            if (listName != null) {\n                const list = wrap.data[listName] as LogicUtil.WrapElement[];\n                list.forEach(wrap => incrRec(wrap));\n            }\n        }\n        const root = store.logicData.data as LogicUtil.NodeRoot;\n        incrRec(root.logicMng);\n        incrRec(root.seedMng);\n\n        let developCnt = 0;\n        let privateCnt = 0;\n        let releaseCnt = 0;\n        const seedMng = root.seedMng.data as LogicUtil.NodeSeedManager;\n        seedMng.defs.forEach(wrap => {\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\n            switch (seed.permit) {\n                case 'develop': developCnt++; break;\n                case 'private': privateCnt++; break;\n                case 'release': releaseCnt++; break;\n            }\n        });\n\n        const logicMng = root.logicMng.data as LogicUtil.NodeLogicManager;\n        return [size, developCnt, privateCnt, releaseCnt, logicMng.defs.length];\n    }, [store.logicData]);\n\n    return (<_Wrap>\n        <_HeaderDiv>\n            <FormUtil.ButtonRecord\n                align=\"left\"\n                buttons={[\n                    {\n                        label: 'New Project',\n                        isEnable: !hasData,\n                        callback: () => {\n                            store.logicData = LogicElementUtil.getInitialData();\n                            setStore({ ...store });\n                        }\n                    },\n                ]}\n            />\n        </_HeaderDiv>\n        <_BodyDiv>\n            <_LeftDiv isEnable={store.cloud != null}>\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={[\n                        {\n                            label: 'Create',\n                            width: 110,\n                            isEnable: true,\n                            callback: () => {\n                                store.system.dialog = <NameDefDialog.Component\n                                    targetSeq={-1}\n                                />;\n                                setStore({ ...store });\n                            }\n                        },\n                        {\n                            label: 'Upload',\n                            width: 110,\n                            isEnable: fcsListIdx != -1,\n                            callback: () => {\n                                const source = DataUtil.gZip(JSON.stringify(store.logicData));\n                                updateProjectSource(projects[fcsListIdx].seq, source).then(() => {\n                                    const project = projects[fcsListIdx];\n                                    project.source = source;\n                                    store.system.dialog = <ConfirmDialog.Component\n                                        message=\"Update project succesful!\"\n                                    />;\n                                    setStore({ ...store });\n                                });\n                            }\n                        },\n                        {\n                            label: 'Delete',\n                            width: 110,\n                            isEnable: fcsListIdx != -1,\n                            callback: () => {\n                                deleteProject(projects[fcsListIdx].seq).then(() => {\n                                    store.system.dialog = <ConfirmDialog.Component\n                                        message=\"Delete project succesful!\"\n                                    />;\n                                    projects.splice(fcsListIdx, 1);\n                                    setFcsListIdx(fcsListIdx - 1);\n                                    setStore({ ...store });\n                                });\n                            }\n                        },\n                        {\n                            label: 'Rename',\n                            width: 110,\n                            isEnable: fcsListIdx != -1,\n                            callback: () => {\n                                store.system.dialog = <NameDefDialog.Component\n                                    targetSeq={projects[fcsListIdx].seq}\n                                />;\n                                setStore({ ...store });\n                            }\n                        },\n                    ]}\n                />\n                <_ListDiv>\n                    {listItemJsx}\n                </_ListDiv>\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={[\n                        {\n                            label: 'Clone',\n                            isEnable: !hasData && fcsListIdx !== -1 && projects[fcsListIdx].source !== '',\n                            callback: () => {\n                                const source = DataUtil.unZip(projects[fcsListIdx].source);\n                                store.logicData = JSON.parse(source);\n                                store.system.dialog = <ConfirmDialog.Component\n                                    message=\"Clone project succesful!\"\n                                />;\n                                setStore({ ...store });\n                            }\n                        },\n                    ]}\n                />\n            </_LeftDiv>\n            <_RighttDiv>\n                <FormUtil.ButtonRecord\n                    align=\"center\"\n                    buttons={[\n                        {\n                            label: 'Load',\n                            width: 100,\n                            isEnable: !hasData,\n                            callback: () => { DataUtil.loadFile(store, setStore) }\n                        },\n                        {\n                            label: store.fileHandle == null ? 'Save' : 'Overwrite',\n                            width: 140,\n                            isEnable: hasData,\n                            callback: () => { DataUtil.saveFile(store, setStore) }\n                        },\n                        {\n                            label: 'Disconnect',\n                            width: 160,\n                            isEnable: store.fileHandle != null,\n                            callback: () => {\n                                store.fileHandle = null;\n                                setStore({ ...store });\n                            }\n                        },\n                        {\n                            label: 'Clear',\n                            width: 100,\n                            isEnable: hasData,\n                            callback: () => {\n                                store.logicData = null;\n                                setStore({ ...store });\n                            }\n                        },\n                    ]}\n                />\n                <FormUtil.BorderPanel\n                    title=\"Project\"\n                    isEnable={hasData}\n                    innerJsx={<>\n                        <FormUtil.FormRecord\n                            titleLabel=\"Develop\"\n                            jsx={\n                                <FormUtil.FixedText\n                                    value={!hasData ? '-' : developCnt.toString()}\n                                />\n                            }\n                        />\n                        <FormUtil.FormRecord\n                            titleLabel=\"Private\"\n                            jsx={\n                                <FormUtil.FixedText\n                                    value={!hasData ? '-' : privateCnt.toString()}\n                                />\n                            }\n                        />\n                        <FormUtil.FormRecord\n                            titleLabel=\"Release\"\n                            jsx={\n                                <FormUtil.FixedText\n                                    value={!hasData ? '-' : releaseCnt.toString()}\n                                />\n                            }\n                        />\n                        <FormUtil.FormRecord\n                            titleLabel=\"Logic\"\n                            jsx={\n                                <FormUtil.FixedText\n                                    value={!hasData ? '-' : logicCnt.toString()}\n                                />\n                            }\n                        />\n                        <FormUtil.FormRecord\n                            titleLabel=\"Launcher\"\n                            jsx={\n                                <FormUtil.FixedText\n                                    value={!hasData ? '-' : logicCnt.toString()}\n                                />\n                            }\n                        />\n                        <FormUtil.FormRecord\n                            titleLabel=\"Size\"\n                            jsx={\n                                <FormUtil.FixedText\n                                    value={!hasData ? '-' : logicSize.toString()}\n                                />\n                            }\n                        />\n                        <FormUtil.FormRecord\n                            titleLabel=\"Hash\"\n                            jsx={\n                                <FormUtil.FixedText\n                                    width={340}\n                                    value={!hasData ? '-' : DataUtil.getSHA256Hash(JSON.stringify(store.logicData))}\n                                />\n                            }\n                        />\n                    </>}\n                />\n            </_RighttDiv>\n        </_BodyDiv>\n\n    </_Wrap >);\n}\n\nexport default ManageTab;\n\nconst updateProjectSource = async (seq: number, source: string) => {\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\n}\n\nconst deleteProject = async (seq: number) => {\n    await DataUtil.sendQueryRequestToAPI('update', `delete from prjcttbl where seq = ${seq};`)\n}\n\nconst HEADER_WIDTH = 40;\n\nconst _Wrap = styled.div<{\n}>`\n    display: inline-block;\n    position: relative;\n    margin: 3px 0 0 3px;\n    width: calc(100% - 6px);\n    height: calc(100% - 6px);\n    background-color: #ebebeb30;\n`;\n\nconst _HeaderDiv = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: ${HEADER_WIDTH}px;\n    background-color: #d1f5f32f;\n`;\n\nconst _BodyDiv = styled.div<{\n}>`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    height: calc(100% - ${HEADER_WIDTH}px);\n    background-color: #221a212c;\n`;\n\nconst _LeftDiv = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: 50%;\n    height: 100%;\n    background-color: #ffe3fb53;\n    vertical-align: top;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n`;\nconst _ListDiv = styled.div<{\n}>`\n    display: inline-block;\n    position: relative;\n    margin: 3px 0 0 3px;\n    width: calc(100% - 6px);\n    height: calc(100% - 86px);\n    box-sizing: border-box;\n    background-color: #f0ecd43d;\n    border: 1px solid #002c8a;\n    border-radius: 4px;\n`;\nconst _ListItem = styled.div<{\n    isFocus: boolean;\n}>`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    height: 40px;\n    box-sizing: border-box;\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\n    ${props => !props.isFocus ? '' : css`\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\n    `}\n    border-bottom: 1px solid #002c8a;\n    box-sizing: border-box;\n    font-size: 28px;\n    font-weight: 600;\n    padding-left: 4px;\n    &:hover {\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\n        ${props => !props.isFocus ? '' : css`\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\n        `}\n    }\n`;\nconst _Name = styled.span<{\n}>`\n    color: #005e08;\n`;\nconst _Status = styled.span<{\n    isExist: boolean;\n}>`\n    ${props => !props.isExist ? css`color: #0000006d;` : `color: #b90000be;`}\n`;\nconst _Date = styled.span<{\n}>`\n    color: #0067977f;\n`;\nconst _RighttDiv = styled.div<{\n}>`\n    display: inline-block;\n    width: 50%;\n    height: 100%;\n    background-color: #cbf7cd2d;\n    vertical-align: top;\n`;","import { type } from \"os\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport TreeUtil from \"../../../utils/treeUtil\";\nimport Common from \"../common\";\nimport TimelineUtil from \"./timelineUtil\";\n\nconst LauncherTab = () => {\n\n    return (\n        <_Wrap\n            tabIndex={0}\n        >\n            <_TreeDiv>\n                <_TreeHead>\n                    {/* <HierarchyNavi cur={focusNode}/> */}\n                </_TreeHead>\n                <_TreeBody>\n                </_TreeBody>\n            </_TreeDiv>\n            <_PropsDiv>\n            </_PropsDiv>\n            {/* <_Blind isVisible={isBackingWnd}>\n                    <_Contents>{!isBackingWnd ? <></> : <BackingEditorFrame />}</_Contents>\n                </_Blind> */}\n        </_Wrap >\n    );\n}\n\nexport default LauncherTab;\n\n\nconst PROPS_DIV_WIDTH = 460;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    background-color: #c3d8dd;\n    width: 100%;\n    height: 100%;\n`;\n\nconst _TreeDiv = styled.div`\n    display: inline-block;\n    position: relative;\n    /* background-color: #d5d4d8; */\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\n    height: 100%;\n    vertical-align: top;\n`;\n\nconst _TreeHead = styled.div`\n    display: inline-block;\n    position: relative;\n    /* background-color: #d5d4d8; */\n    width: 100%;\n    height: 40px;\n`;\n\nconst _TreeBody = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    height: calc(100% - 40px);\n`;\n\nconst _PropsDiv = styled.div`\n    display: inline-block;\n    /* position: relative; */\n    /* background-color: #532fc0; */\n    width: ${PROPS_DIV_WIDTH}px;\n    height: 100%;\n    vertical-align: top;\n    box-sizing: border-box;\n    padding: 6px 6px 6px 0;\n`;\n\nconst _TabContWrap = styled.div`\n    display: inline-block;\n    /* position: relative; */\n    background-color: #c0c9c4;\n    width: calc(100% - 4px);\n    height: calc(100% - 4px);\n    margin: 2px 0 0 2px;\n`;\n\nconst _Blind = styled.div<{\n    isVisible: boolean;\n}>`\n    display: inline-block;\n    ${props => props.isVisible ? '' : css`\n        display: none;\n    `}\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 10;\n    background-color: #0012616c;\n    width: 100%;\n    height: 100%;\n`;\n\nconst _Contents = styled.div<{\n}>`\n    display: inline-block;\n    width: 630px;\n    /* height: 400px; */\n    background-color: #a3a3a3;\n    /* opacity: 0.9; */\n    overflow: hidden;\n`;","import { useContext, useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\nimport { GlobalContext } from \"../entry/systemEntry\";\nimport LogicMainteTab from \"./factory/logicMainteTab\";\nimport ManageTab from \"./manage/manageTab\";\nimport PreviewTab from \"./manage/manageTab\";\nimport LauncherTab from \"./launcher/launcherTab\";\nimport Timeline from \"./launcher/launcherTab\";\n\n\nconst CreateChannel = () => {\n\n    const { store, setStore } = useContext(GlobalContext);\n\n    const hasData = store.logicData != null;\n    return (\n        <_Wrap>\n            <TabbedPane\n                tabElements={[\n                    { name: 'Manage', enable: true, cont: <ManageTab /> },\n                    { name: 'Launcher', enable: hasData, cont: <LauncherTab /> },\n                    { name: 'Library', enable: hasData, cont: <LogicMainteTab /> }\n                ]}\n                activeNo={0}\n            // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\n            />\n        </_Wrap>\n    );\n}\nexport default CreateChannel;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\n    background-color: transparent;\n    /* background-color: #c3d8dd6f; */\n    /* border: solid 1px black;\n    border-radius: 5px; */\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\n`;\n\n","import { Redirect } from \"react-router-dom\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport { useContext, useEffect } from \"react\";\nimport { GlobalContext } from \"./systemEntry\";\n\nconst DirectView = (props: {\n    hashKey: string;\n}) => {\n\n    const { store, setStore } = useContext(GlobalContext);\n    const conteseq = DataUtil.getDecryptionedScoreSeq(props.hashKey);\n\n    // const setScoreData = (owner: string, dispnam: string, data: ScoreData) => {\n    //     store.scoreState.focusIndex = 2;\n    //     store.scoreState.distIndex = store.scoreState.focusIndex;\n    //     dispatcher.score.setScoreState({ ...store.scoreState });\n    //     // dispatcher.score.setScoreTabIndex(1);\n    //     dispatcher.score.setScoreData(data);\n    //     // キャッシュの更新\n    //     store.scoreData = data;\n    //     CacheUtil.updateHarmonizeCache(store, dispatcher);\n    //     store.systemState.mainChannelIndex = 5;\n    //     store.systemState.scoreTabIndex = 0;\n    //     store.systemState.directScore = {\n    //         owner, name: dispnam\n    //     };\n    //     dispatcher.system.setState(store.systemState);\n    // };\n\n    useEffect(() => {\n        // DataUtil.findScore(conteseq).then(resList => {\n        //     if (resList.length > 0) {\n        //         const source = resList[0]['data'];\n        //         const owner = resList[0]['owner'];\n        //         const dispnam = resList[0]['dispnam'];\n        //         const text = DataUtil.unZip(source);\n        //         setScoreData(owner, dispnam, JSON.parse(text));\n        //     }\n        // });\n    }, []);\n    // if (store.systemState.directScore == null) {\n    //     return <></>;\n    // } else {\n    //     return <Redirect to=\"/\" />;\n    //     // return <MainFrame />;\n    // }\n    return <Redirect to=\"/\" />;\n}\n\nexport default DirectView;","import { Redirect } from \"react-router-dom\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport { useContext, useEffect } from \"react\";\nimport { GlobalContext } from \"./systemEntry\";\n\nconst DirectLogin = (props: {\n    hashKey: string;\n}) => {\n\n    const { store, setStore } = useContext(GlobalContext);\n\n    useEffect(() => {\n        const seq = DataUtil.getDecryptionedUserSeq(props.hashKey);\n        console.log(seq);\n        DataUtil.findUserInfoFromSeq(seq).then(resList => {\n            console.log(resList);\n            if (resList.length > 0) {\n                const loginProps = resList[0];\n                // store.userEnv.login = loginProps;\n                // dispatcher.system.setUserEnv(store.userEnv);\n            }\n        });\n    }, []);\n    // if (store.userEnv.login == null) {\n    //     return <></>;\n    // } else {\n    //     return <Redirect to=\"/\" />;\n    //     // return <MainFrame />;\n    // }\n    return <Redirect to=\"/\" />;\n}\n\nexport default DirectLogin;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\ntype SeedProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst PublishFrame = (props: {\r\n    setArtsCnt: (artsCnt: number) => void;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [seedList, setSeedList] = useState<SeedProps[]>([]);\r\n\r\n    useEffect(() => {\r\n        findAllReleaseProjectList().then((resList) => {\r\n            const seedList: SeedProps[] = [];\r\n            resList.forEach(res => {\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                seedList.push({\r\n                    name, ownerId, lastmod\r\n                });\r\n            });\r\n            setSeedList(seedList);\r\n            props.setArtsCnt(seedList.length);\r\n        });\r\n    }, []);\r\n\r\n    const seedListJsx = seedList.map((seed, i) => {\r\n        return (<>\r\n            <_CloudItem key={i} onClick={() => {\r\n                // window.open(DataUtil.getPreviewURL(score.seq), '_blank');\r\n            }}>\r\n                <_Owner>{`${seed.ownerId}`}</_Owner>\r\n                <_CName>{`${seed.name}`}</_CName><_CDate>{seed.lastmod}</_CDate>\r\n            </_CloudItem>\r\n        </>);\r\n    });\r\n\r\n    return (\r\n        <_ListFrame>{seedListJsx}</_ListFrame>\r\n    );\r\n}\r\n\r\nexport default PublishFrame;\r\n\r\nexport const findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\nconst _CloudItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    /* height: 60px; */\r\n    border-bottom: 1px solid #888888;\r\n    /* background-color: white; */\r\n    background: linear-gradient(to bottom, transparent, #b6b6b684);\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    }\r\n`;\r\n\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;","\nimport { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Styles from \"../../base/design/styles\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\nimport { GlobalContext } from \"../entry/systemEntry\";\n\n\ntype NotePorp = {\n    version: string;\n    date: string;\n    note: string;\n}\n\nconst ReleaseNote = () => {\n    const { store } = useContext(GlobalContext);\n\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\n    useEffect(() => {\n        fetch('assets/release_note.json')\n            .then(response => response.json()) // (2) レスポンスデータを取得\n            .then(json => { // (3)レスポンスデータを処理\n                const list = json as NotePorp[];\n\n                setJsx(list.map((item, i) => {\n                    const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\n                    return (\n                        <_Item key={i}>\n                            <_Header>v{item.version} ({item.date})</_Header>\n                            <_Detail>{record}</_Detail>\n                        </_Item>\n                    );\n                }));\n            });\n    }, []);\n\n    return (<_ListFrame>{jsx}</_ListFrame>);\n}\n\nexport default ReleaseNote;\n\nconst _ListFrame = styled.div<{\n}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    /* height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px); */\n    height: calc(100% - 48px);\n    margin: 4px 0 0 4px;\n    background-color: #d3d3c5;\n    border: 1px solid #e60000;\n    border-radius: 4px;\n    box-sizing: border-box;\n    overflow-y: auto;\n`;\n\nconst _Item = styled.div`\n    display: inline-block;\n    width: calc(100% - 8px);\n    margin: 4px 0 0 4px;\n    background-color: #bfcace;\n    border: 1px solid #9b9b9b;\n    border-radius: 6px;\n`;\n\nconst _Header = styled.div`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: 20px;\n    font-size: ${Styles.FONT_SMALL}px;\n    margin: 2px 0 0 4px;\n    font-weight: 600;\n    /* background-color: #8bdbf8; */\n    color: #494975;\n`;\n\nconst _Detail = styled.div`\n    display: inline-block;\n    width: calc(100% - 8px);\n    font-size: ${Styles.FONT_SMALL}px;\n    margin: 2px 0 0 4px;\n    /* background-color: #dafce4; */\n    color: #754949;\n`;","import { useContext, useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\nimport { GlobalContext } from \"../entry/systemEntry\";\nimport PublishFrame from \"./publishFrame\";\nimport ReleaseNote from \"./releaseNote\";\n\ntype scoreProps = {\n    dispnam: string;\n    seq: number;\n    owner: string;\n    lastmod: string;\n}\n\nconst HomeChannel = () => {\n\n    const { store, setStore } = useContext(GlobalContext);\n\n    const [userCount, setUserCount] = useState(0);\n    const [artsCnt, setArtsCnt] = useState(0);\n\n    useEffect(() => {\n        countUsers().then(cnt => {\n            setUserCount(cnt);\n        });\n    }, []);\n\n\n    return (<_Wrap>\n        <_Left>\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\n            <ReleaseNote />\n        </_Left>\n        <_Right>\n            <_MessageRecord>{artsCnt} arts have been published.</_MessageRecord>\n            <PublishFrame setArtsCnt={setArtsCnt}/>\n        </_Right>\n    </_Wrap>);\n}\n\nexport default HomeChannel;\n\nexport const countUsers = async () => {\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\n    const results = await response.json();\n    return (results as any[])[0]['cnt'] as number;\n};\n\nexport const findAllReleaseProjectList = async () => {\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\n        SELECT seq, (select id from user_tbl where seq = prj.seq) as owner, source, lastmod\n        FROM prjcttbl prj\n        ORDER BY lastmod desc\n    `);\n    const results = await response.json();\n    return results as any[];\n};\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: calc(100% - 8px);\n    margin: 4px 0 0 4px;\n    background-color: #ccc;\n`;\n\nconst _Left = styled.div`\n    display: inline-block;\n    width: 50%;\n    height: 100%;\n    background-color: #bbcac7;\n`;\n\n\nconst _MessageRecord = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 40px;\n    font-size: 22px;\n    font-weight: 600;\n    color: #cd0202;\n    background-color: #ffffff3d;\n    padding: 0 0 0 10px;\n    box-sizing: border-box;\n`;\n\n\nconst _Right = styled.div`\n    display: inline-block;\n    width: 50%;\n    height: 100%;\n    background-color: #bbbfca;\n    vertical-align: top;\n`;","import { useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\nimport { GlobalContext } from \"./systemEntry\";\nimport { AiFillHome } from 'react-icons/ai';\nimport { CgOptions, CgPiano } from 'react-icons/cg';\nimport { VscGitPullRequestCreate } from 'react-icons/vsc';\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport CreateChannel from \"../create/createChannel\";\nimport DirectView from \"./directView\";\nimport DirectLogin from \"./directLogin\";\nimport HomeChannel from \"../home/homeChannel\";\n\nconst MainFrame = () => {\n\n    const { store, setStore } = useContext(GlobalContext);\n\n    return (\n        <HashRouter basename={process.env.PUBLIC_URL}>\n            <RouterManage />\n        </HashRouter>\n    );\n}\n\nexport default MainFrame;\n\nconst RouterManage = () => {\n\n    const { store, setStore } = useContext(GlobalContext);\n\n    const query = new URLSearchParams(useLocation().search);\n    const str = query.get('v') as string;\n\n    return (\n        <Switch>\n            <Route path=\"/\" exact>\n                <_Wrap>\n                    <ChannelPane\n                        tabElements={[\n                            { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <HomeChannel /> },\n                            { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <CreateChannel/> },\n                        ]}\n                        activeNo={0}\n                    // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\n                    />\n                </_Wrap>\n            </Route>\n            <Route path=\"/test\" exact >\n                <_Wrap>\n                </_Wrap>\n            </Route>\n            <Route path=\"/preview\" exact >\n                <DirectView hashKey={str} />\n            </Route>\n            <Route path=\"/user\" exact >\n                <DirectLogin hashKey={str} />\n            </Route>\n        </Switch>\n    );\n}\n\n\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\n    background-color: transparent;\n    /* background-color: #c3d8dd6f; */\n    /* border: solid 1px black;\n    border-radius: 5px; */\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\n`;","\nimport { useEffect, useState } from 'react';\nimport styled, { css, keyframes } from 'styled-components';\n\nconst Splash = (props: {\n    remove: () => void\n}) => {\n    const [isSwitch, setSwitch] = useState<boolean>(false);\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\n\n    useEffect(() => {\n        setTimerId(setTimeout(() => {\n            setSwitch(true);\n        }, 3000));\n    }, []);\n    useEffect(() => {\n        if (isSwitch) {\n            setTimeout(() => {\n                props.remove();\n            }, 500);\n        }\n    }, [isSwitch]);\n\n    return (\n\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\n            clearTimeout(timerId as NodeJS.Timeout);\n            setSwitch(true);\n        }}>\n            <_Frame>\n                <_Title>\n                    <span>L</span>iCreSia\n                </_Title>\n                <_NowLoading>Now Loading...</_NowLoading>\n                <_Copylight>Copyright © 2022 Licresia All Rights Reserved.</_Copylight>\n            </_Frame>\n        </_Blind>\n    );\n}\n\nexport default Splash;\n\nconst _Blind = styled.div<{\n    isSwitch: boolean;\n}>`\n    display: inline-block;\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 10;\n    width: 100%;\n    height: 100%;\n    background-color: #000f3a86;\n    opacity: ${props => props.isSwitch ? '0' : '1'};\n    transition: opacity 500ms;\n`;\nconst _Frame = styled.div<{\n}>`\n    display: inline-block;\n    position: relative;\n    left: calc(50% - 450px);\n    top: calc(50% - 300px);\n    z-index: 11;\n    width: 900px;\n    height: 600px;\n    background: radial-gradient(#868686, #ffffff);\n    border-radius: 8px;\n    border: solid 2px #cfcfcf;\n    box-sizing: border-box;\n    transition: opacity 500ms;\n`;\n\n\nconst fadeIn = keyframes`\n  0%, 100% {\n    opacity: 0.4;\n  }\n  50% {\n    opacity: 1;\n  }\n`;\n\nconst _Title = styled.div`\n    display: inline-block;\n    position: relative;\n    margin-top: 10%;\n    width: 100%;\n    /* height: 400px; */\n    /* background-color: #0003b69e; */\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\n    color: white;\n    font-size: 130px;\n    font-weight: 600;\n    text-align: center;\n    text-shadow: 1px 2px 22px #0000003d;\n    /* line-height: 350px; */\n    animation: ${fadeIn} 3s linear infinite;\n    /* -webkit-box-reflect:below 1px; */\n    -webkit-box-reflect: below 1px -webkit-gradient(\n      linear,left top,left bottom,\n      from(transparent),\n      color-stop(0.6, transparent),\n      to(#f80000));\n    & span {\n        color: red;\n        font-size: 160px;\n    }\n`;\n\nconst _NowLoading = styled.div`\n    display: inline-block;\n    position: absolute;\n    bottom: 80px;\n    width: 100%;\n    left: 20px;\n    color: #ffffff;\n    font-size: 42px;\n    font-weight: 600;\n    text-align: center;\n`;\n\nconst _Copylight = styled.div`\n    display: inline-block;\n    position: absolute;\n    bottom: 5px;\n    left: 20px;\n    color: #636363;\n    font-size: 22px;\n    font-weight: 600;\n    text-align: left;\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport { GiTurret } from \"react-icons/gi\";\nimport styled, { css } from \"styled-components\";\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\nimport Styles from \"../../base/design/styles\";\nimport StoreSystem from \"../../redux/store/storeSystem\";\nimport CanvasUtil from \"../../utils/canvasUtil\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport FormUtil from \"../../utils/form/formUtiil\";\nimport ValidateUtil from \"../../utils/form/validateUtil\";\nimport ConfirmDialog from \"../dialog/confirmDialog\";\nimport { GlobalContext } from \"../entry/systemEntry\";\n\nconst WIDTH = 750;\nconst HEIGHT = 600;\n/**\n * アカウントフレームのコンポーネント\n * @returns \n */\nconst AccountFrame = () => {\n    const { store, setStore } = useContext(GlobalContext);\n\n    const [tabIndex, setTabIndex] = useState(0);\n\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [oldPass, setOldPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [newPass, setNewPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [newPassConfirm, setNewPassConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n\n\n    const [userIdList, setUserIdList] = useState<string[]>([]);\n    const [emailList, setEmailList] = useState<string[]>([]);\n\n    const [isModify, setModify] = useState(false);\n    const loginProps = store.system.user as StoreSystem.User;\n\n    const reloadInfo = () => {\n        setUserId({ ...userId, value: loginProps.id });\n        setNewPass({ ...newPass, value: '' });\n        setNewPassConfirm({ ...newPassConfirm, value: '' });\n        setEmail({ ...email, value: loginProps.email });\n        setOldPass({ ...oldPass, value: loginProps.password });\n    }\n\n    useEffect(() => {\n        DataUtil.findUserInfoList().then(list => {\n\n            const userIdList: string[] = [];\n            const emailList: string[] = [];\n            list.forEach(info => {\n                if (info.id !== loginProps.id) userIdList.push(info.id);\n                if (info.email !== '') emailList.push(info.email);\n            });\n            setUserIdList(userIdList);\n            setEmailList(emailList);\n        });\n\n        const hash = DataUtil.getHashedFromUserSeq(loginProps.seq);\n\n        // ユーザページのURLに変更する。\n        window.history.replaceState('', '', `/#/user?v=${hash}`);\n\n        reloadInfo();\n\n        // 閉じる際にURLを元に戻す\n        return () => {\n            // alert('destroy');\n            window.history.replaceState('', '', `/#/`);\n        }\n    }, []);\n\n    const userTabJsx: JSX.Element = (\n        <_Wrap>\n            <FormUtil.InputTextFormBak\n                titleLabel={'user id'}\n                checkable={userId}\n                setCheckable={setUserId}\n                validates={[\n                    {\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\n                        errorType: \"length\"\n                    },\n                    {\n                        checker: (value) => ValidateUtil.checkAsciiChars(value),\n                        errorType: \"value\"\n                    },\n                    {\n                        checker: (value) => !userIdList.includes(value),\n                        errorType: \"relation\"\n                    },\n                ]}\n                width={300}\n                marginTop={5}\n                isReadOnly={!isModify}\n            />\n            <FormUtil.InputTextFormBak\n                titleLabel={'new pass'}\n                isPassword\n                checkable={newPass}\n                setCheckable={setNewPass}\n                validates={[\n                    {\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\n                        errorType: \"length\"\n                    },\n                    {\n                        checker: (value) => value === newPassConfirm.value,\n                        errorType: \"relation\"\n                    }\n                ]}\n                dependency={[newPassConfirm]}\n                width={300}\n                marginTop={5}\n                isReadOnly={!isModify}\n            />\n            <FormUtil.InputTextFormBak\n                titleLabel={'new pass*'}\n                isPassword\n                checkable={newPassConfirm}\n                setCheckable={setNewPassConfirm}\n                validates={[\n                    {\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\n                        errorType: \"length\"\n                    },\n                    {\n                        checker: (value) => value === newPass.value,\n                        errorType: \"relation\"\n                    }\n                ]}\n                dependency={[newPass]}\n                width={300}\n                marginTop={5}\n                isReadOnly={!isModify}\n            />\n            <FormUtil.InputTextFormBak\n                titleLabel={'email'}\n                checkable={email}\n                setCheckable={setEmail}\n                validates={[\n                    {\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\n                        errorType: \"length\"\n                    },\n                    {\n                        checker: (value) => {\n                            return value.length === 0 || value.split('@').length === 2;\n                        },\n                        errorType: \"value\"\n                    },\n                    {\n                        checker: (value) => !emailList.includes(value),\n                        errorType: \"relation\"\n                    },\n                ]}\n                // width={500}\n                marginTop={5}\n                isReadOnly={!isModify}\n            />\n            <FormUtil.InputTextFormBak\n                titleLabel={'old pass'}\n                isPassword\n                checkable={oldPass}\n                setCheckable={setOldPass}\n                validates={[\n                    {\n                        checker: (value) => value === loginProps.password,\n                        errorType: \"relation\"\n                    }\n                ]}\n                // dependency={[passwordConfirm]}\n                width={300}\n                marginTop={55}\n                isReadOnly={!isModify}\n            />\n        </_Wrap>\n    );\n\n    // 登録ボタンの活性状態\n    const permitRegist = (\n        userId.errors.length === 0\n        && newPass.errors.length === 0\n        && newPassConfirm.errors.length === 0\n        && email.errors.length === 0\n        && oldPass.errors.length === 0\n    );\n\n    const updateUserInfo = () => {\n        const passwordStr = newPass.value.length === 0 ? '' : `,password = '${newPass.value}'`;\n        DataUtil.sendQueryRequestToAPI('update',\n            `UPDATE user_tbl SET id = '${userId.value}', email = '${email.value}'${passwordStr}\n            WHERE seq = ${loginProps?.seq}`\n        ).then(() => {\n            loginProps.id = userId.value;\n            if (newPass.value.length > 0) {\n                loginProps.password = newPass.value;\n            }\n            loginProps.email = email.value;\n            store.system.dialog = <ConfirmDialog.Component message=\"Modify successful!\" />;\n            setStore({...store});\n        });\n    }\n\n    return (\n        <_Frame\n            width={WIDTH} height={HEIGHT}\n        >\n            <_Header>\n                <FormUtil.Message\n                    message=\"If you bookmark this page, you can easily login by URL.\"\n                />\n            </_Header>\n            <_Body>\n                <TabbedPane\n                    tabElements={[\n                        { name: 'User', enable: true, cont: userTabJsx },\n                        { name: 'Security', enable: false, cont: <></> },\n                    ]}\n                    activeNo={tabIndex}\n                    selectTabIndex={(index: number) => setTabIndex(index)}\n                />\n            </_Body>\n            <_Footer>\n                <FormUtil.ButtonRecord\n                    buttons={[\n                        {\n                            label: 'Close',\n                            callback: () => {\n                                // dispatcher.system.closeDialog();\n                            }\n                        },\n                        {\n                            label: 'Cancel',\n                            isEnable: isModify,\n                            callback: () => {\n                                setModify(false);\n                                reloadInfo();\n                            }\n                        },\n                        {\n                            label: !isModify ? 'Modify' : 'Regist',\n                            isEnable: !isModify || permitRegist,\n                            callback: () => {\n                                if (!isModify) {\n                                    setModify(true);\n                                    setOldPass({ ...oldPass, value: '' });\n                                }\n                                else {\n                                    updateUserInfo();\n                                }\n                            }\n                        }\n                    ]}\n                />\n            </_Footer>\n        </_Frame>\n    );\n}\n\n\nexport default AccountFrame;\n\nconst _Frame = styled.div<{\n    width: number;\n    height: number;\n}>`\n    display: inline-block;\n    position: absolute;\n    z-index: 11;\n    top: calc(50% - ${props => props.height / 2}px);\n    left: calc(50% - ${props => props.width / 2}px);\n    width: ${props => props.width}px;\n    height: ${props => props.height}px;\n    background-color: #e7e7e7eb;\n    border: 1px solid #9e9e9e;\n    border-radius: 4px;\n`;\n\nconst _LogoDiv = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 80px;\n    background-color: #eeeaea;\n    text-align: center;\n`;\nconst _Header = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 50px;\n    /* background-color: #d1d1d1; */\n    /* text-align: center; */\n`;\nconst _Body = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: calc(100% - 100px);\n    padding: 4px;\n    box-sizing: border-box;\n    /* background-color: #d1d1d1; */\n    text-align: center;\n`;\n\n\nconst _Footer = styled.div<{\n}>`\n    display: inline-block;\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    padding: 6px 4px 0 0;\n    box-sizing: border-box;\n    width: 100%;\n    height: 50px;\n    background-color: #d1d1d1;\n    text-align: right;\n`;\n\n\nconst _Wrap = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    background-color: #cecece;\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\nimport CanvasUtil from \"../../../utils/canvasUtil\";\nimport DataUtil from \"../../../utils/dataUtil\";\nimport FormUtil from \"../../../utils/form/formUtiil\";\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\nimport { GlobalContext } from \"../../entry/systemEntry\";\nimport AccountFrame from \"../accountFrame\";\nimport ConfirmDialog from \"../confirmDialog\";\n\nconst LoginCreateAccount = () => {\n    const { store, setStore } = useContext(GlobalContext);\n\n    const [isRegist, setRegist] = useState(false);\n\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [passwordConfirm, setPasswordConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [messageList, setMessageList] = useState<string[]>([]);\n\n    const [userIdList, setUserIdList] = useState<string[]>([]);\n\n    const createAuthText = () => {\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyz';\n        const list = '0123456789';\n        let text = '';\n        for (let i = 0; i < 6; i++) {\n            text += list.charAt(Math.random() * list.length);\n        }\n        return text;\n    };\n\n    /** 既存のユーザIDリストを格納 */\n    useEffect(() => {\n        DataUtil.findUserIdList().then(list => {\n            setUserIdList(list);\n        });\n\n        // fetch('https://api.ipify.org/?format=json').then(res => {\n        //     res.json().then(data => {\n        //         alert(data['ip']);\n        //     });\n        // });\n    }, []);\n\n    const [authCollation, setAuthCollation] = useState<string>(createAuthText());\n    const [authInput, setAuthInput] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n\n    /** キャッシュした認証画像 */\n    const authPicture = useMemo(() => {\n        return CanvasUtil.getAuthTextURL(authCollation);\n\n    }, [authCollation]);\n\n    useEffect(() => {\n        const list: string[] = [];\n        if (userId.errors.length > 0) {\n            switch (userId.errors[0]) {\n                case 'required': list.push('[user id] is required.'); break;\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\n                case 'relation': list.push('[user id] already in use.'); break;\n            }\n        }\n        if (password.errors.length > 0) {\n            switch (password.errors[0]) {\n                case 'required': list.push('[password] is required.'); break;\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\n                case 'relation': list.push('[password] does not match confirm.'); break;\n            }\n        }\n        if (passwordConfirm.errors.length > 0) {\n            switch (passwordConfirm.errors[0]) {\n                case 'length': list.push('[password *] set a value between 4 and 20.'); break;\n            }\n        }\n        setMessageList(list);\n    }, [userId, password]);\n\n    const registAction = () => {\n\n        (async () => {\n            let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\n            let results = await response.json();\n            console.log(JSON.stringify(results[0].cnt));\n            const isExist = results[0].cnt > 0;\n            if (isExist) {\n                setMessageList(['That user id has already been recorded.']);\n            } else {\n                const nextSeq = await DataUtil.getNextUserSeq();\n                console.log(nextSeq);\n                await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(seq, id, password) VALUES(${nextSeq}, '${userId.value}', '${password.value}')`);\n                store.system.user = {\n                    seq: nextSeq,\n                    id: userId.value,\n                    password: password.value,\n                    email: '',\n                };\n                store.cloud = {\n                    projects: []\n                };\n                store.system.dialog = (<ConfirmDialog.Component\n                    message='You have successfully created an account!'\n                    buttons={[\n                        {\n                            label: 'OK',\n                            callback: () => {\n                                store.system.dialog = (<AccountFrame />);\n                                setStore({...store});\n                            }\n                        }\n                    ]}\n                />);\n                setStore({...store});\n            }\n        })();\n    }\n\n    const isLoginInfoOK = () => {\n        return userId.errors.length === 0 && password.errors.length === 0 && passwordConfirm.errors.length === 0;\n    }\n    const isAuthOK = () => {\n        return authInput.errors.length === 0 && authCollation === authInput.value;\n    }\n\n    return (<>\n\n        <_Frame isVisible={!isRegist}>\n            <FormUtil.BorderPanel\n                title=\"Login information\"\n                innerJsx={<>\n                    <FormUtil.Message\n                        message={'Please, enter User ID/Pass (Confirm).'}\n                    />\n                    <FormUtil.InputTextFormBak\n                        placeholder={'user id'}\n                        checkable={userId}\n                        setCheckable={setUserId}\n                        validates={[\n                            {\n                                checker: (value) => ValidateUtil.checkRequired(value),\n                                errorType: \"required\"\n                            },\n                            {\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\n                                errorType: \"length\"\n                            },\n                            {\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\n                                errorType: \"value\"\n                            },\n                            {\n                                checker: (value) => !userIdList.includes(value),\n                                errorType: \"relation\"\n                            },\n                        ]}\n                        width={300}\n                        isCenter\n                    />\n                    <FormUtil.InputTextFormBak\n                        placeholder={'password'}\n                        isPassword\n                        checkable={password}\n                        setCheckable={setPassword}\n                        validates={[\n                            {\n                                checker: (value) => ValidateUtil.checkRequired(value),\n                                errorType: \"required\"\n                            },\n                            {\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\n                                errorType: \"length\"\n                            },\n                            {\n                                checker: (value) => value === passwordConfirm.value,\n                                errorType: \"relation\"\n                            }\n                        ]}\n                        dependency={[passwordConfirm]}\n                        width={300}\n                        isCenter\n                    />\n                    <FormUtil.InputTextFormBak\n                        placeholder={'password*'}\n                        isPassword\n                        checkable={passwordConfirm}\n                        setCheckable={setPasswordConfirm}\n                        validates={[\n                            {\n                                checker: (value) => ValidateUtil.checkRequired(value),\n                                errorType: \"required\"\n                            },\n                            {\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\n                                errorType: \"length\"\n                            },\n                            {\n                                checker: (value) => value === password.value,\n                                errorType: \"relation\"\n                            }\n                        ]}\n                        dependency={[password]}\n                        width={300}\n                        isCenter\n                    />\n                    <FormUtil.InfoFrame textRecords={messageList} />\n                    <FormUtil.ButtonRecord\n                        buttons={[\n                            {\n                                label: 'Enter', isEnable: isLoginInfoOK(), callback: () => {\n                                    setRegist(true);\n                                }\n                            },\n                        ]}\n                    />\n                </>}\n            />\n        </_Frame>\n        <_Frame isVisible={isRegist}>\n            <FormUtil.BorderPanel\n                title=\"Proof not a robot\"\n                innerJsx={<>\n                    <FormUtil.Message\n                        message={'Please, input the same 6 number as the picture.'}\n                    />\n                    <_AuthText src={authPicture} />\n                    <FormUtil.ButtonRecord\n                        buttons={[\n                            {\n                                label: 'Change', callback: () => {\n                                    setAuthCollation(createAuthText());\n                                    setAuthInput({ value: '', errors: [] });\n                                }\n                            },\n                        ]}\n                    />\n                    {/* 照合する文字列 */}\n                    <FormUtil.InputTextFormBak\n                        placeholder={'6 numbers'}\n                        checkable={authInput}\n                        setCheckable={setAuthInput}\n                        width={300}\n                        isCenter\n                    />\n                    <FormUtil.ButtonRecord\n                        buttons={[\n                            { label: 'Regist', isEnable: isAuthOK(), callback: registAction },\n                        ]}\n                    />\n                </>}\n            />\n            <FormUtil.MessageLink\n                message=\"Return to login information.\"\n                clickAction={() => {\n                    setRegist(false);\n                }}\n            />\n        </_Frame>\n    </>);\n};\n\nexport default LoginCreateAccount;\n\nconst _Frame = styled.div<{\n    isVisible: boolean;\n}>`\n    display: ${props => props.isVisible ? 'block' : 'none'};\n`;\n\nconst _AuthText = styled.img<{\n}>`\n    display: block;\n    text-align: center;\n    margin: 4px auto;\n    background-color: #f7f0f0;\n    border: 1px solid #888888;\n    box-sizing: border-box;\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../../base/design/styles\";\nimport DataUtil from \"../../../utils/dataUtil\";\nimport FormUtil from \"../../../utils/form/formUtiil\";\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\nimport { GlobalContext } from \"../../entry/systemEntry\";\nimport ConfirmDialog from \"../confirmDialog\";\n\nconst LoginLogin = () => {\n    const { store, setStore } = useContext(GlobalContext);\n\n    const [isForget, setForget] = useState(false);\n\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [messageList, setMessageList] = useState<string[]>([]);\n\n    useEffect(() => {\n        const list: string[] = [];\n        if (userId.errors.length > 0) {\n            switch (userId.errors[0]) {\n                case 'required': list.push('[user id] is required.'); break;\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\n                case 'relation': list.push('[user id] already in use.'); break;\n            }\n        }\n        if (password.errors.length > 0) {\n            switch (password.errors[0]) {\n                case 'required': list.push('[password] is required.'); break;\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\n            }\n        }\n        setMessageList(list);\n    }, [userId, password]);\n\n    /**\n     * Enterボタン押下時の処理\n     */\n    const enterAction = () => {\n        // alert(`Confirmation passwords don't match.`);\n        (async () => {\n            const results = await DataUtil.findUserInfoLogin(userId.value, password.value);\n            console.log(JSON.stringify(results));\n            if (results.length > 0) {\n                store.system.user = {\n                    seq: results[0].seq,\n                    id: results[0].id,\n                    password: results[0].password,\n                    email: results[0].email,\n                };\n                const resPrjList = await findUserProjectList(results[0].seq);\n                console.log(JSON.stringify(resPrjList));\n                store.cloud = {\n                    projects: resPrjList.map(res => ({\n                        source: res.source,\n                        name: res.name,\n                        seq: res.seq,\n                        lastmod: res.lastmod\n                    }))\n                };\n                store.system.dialog = <ConfirmDialog.Component\n                    message=\"Login successful!\"\n                />;\n                setStore({ ...store });\n            } else {\n                setMessageList(['Incorrect user id or password.']);\n                // setPassword({ ...password, value: '' });\n            }\n        })();\n    }\n\n    const isLoginInfoOK = () => {\n        return userId.errors.length === 0 && password.errors.length === 0;\n    }\n\n    return (<>\n        <_Frame isVisible={!isForget}>\n            <FormUtil.BorderPanel\n                title=\"Login information\"\n                innerJsx={<>\n                    <FormUtil.Message\n                        message={'Please, enter User ID/Pass.'}\n                    />\n                    <FormUtil.InputTextFormBak\n                        placeholder={'user id'}\n                        checkable={userId}\n                        setCheckable={setUserId}\n                        validates={[\n                            {\n                                checker: (value) => ValidateUtil.checkRequired(value),\n                                errorType: \"required\"\n                            },\n                            {\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\n                                errorType: \"length\"\n                            },\n                            {\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\n                                errorType: \"value\"\n                            }\n                        ]}\n                        width={300}\n                        isCenter\n                    />\n                    <FormUtil.InputTextFormBak\n                        placeholder={'password'}\n                        isPassword\n                        checkable={password}\n                        setCheckable={setPassword}\n                        validates={[\n                            {\n                                checker: (value) => ValidateUtil.checkRequired(value),\n                                errorType: \"required\"\n                            },\n                            {\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\n                                errorType: \"length\"\n                            }\n                        ]}\n                        width={300}\n                        isCenter\n                    />\n                    <FormUtil.InfoFrame textRecords={messageList} />\n                    <FormUtil.ButtonRecord\n                        buttons={[\n                            { label: 'Enter', isEnable: isLoginInfoOK(), callback: enterAction },\n                        ]}\n                    />\n                </>}\n            />\n            <FormUtil.MessageLink\n                message=\"Forgot your login information?\"\n                clickAction={() => {\n                    setForget(true);\n                }}\n            />\n        </_Frame>\n        <_Frame isVisible={isForget}>\n            <FormUtil.BorderPanel\n                title=\"Email\"\n                innerJsx={<>\n                    <FormUtil.Message\n                        message={'Submit login information to account address.'}\n                    />\n                    <FormUtil.InputTextFormBak\n                        placeholder={'email'}\n                        checkable={email}\n                        setCheckable={setEmail}\n                        validates={[\n                            {\n                                checker: (value) => ValidateUtil.checkRequired(value),\n                                errorType: \"required\"\n                            },\n                            {\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\n                                errorType: \"length\"\n                            },\n                            {\n                                checker: (value) => {\n                                    return value.length === 0 || value.split('@').length === 2;\n                                },\n                                errorType: \"value\"\n                            }\n                        ]}\n                        width={500}\n                        isCenter\n                    />\n                    <FormUtil.ButtonRecord\n                        buttons={[\n                            {\n                                label: 'Send', isEnable: email.errors.length === 0, callback: () => {\n                                    DataUtil.findUserInfoFromEmail(email.value).then((list) => {\n                                        if (list.length > 0) {\n                                            const info = list[0];\n                                            const hash = DataUtil.getHashedFromUserSeq(info.seq);\n                                            const url = `https://demo-app.licresia.com/#/user?v=${hash}`;\n                                            DataUtil.sendQueryRequestToMailAPI({\n                                                from: 'info@licresia.com',\n                                                to: email.value,\n                                                subject: '【LiCreSia】support',\n                                                text: `Your login information is as follows.\\n\\nURL: ${url}\\nUSR ID: ${info.id}`\n                                            });\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"Your login information has been sent!\" />);\n                                        } else {\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"This email address is not registered.\" />);\n                                        }\n                                    });\n                                }\n                            }\n                        ]}\n                    />\n                </>}\n            />\n            <FormUtil.MessageLink\n                message=\"Return to login information.\"\n                clickAction={() => {\n                    setForget(false);\n                }}\n            />\n        </_Frame>\n    </>);\n};\n\nexport default LoginLogin;\n\n\nexport const findUserProjectList = async (userSeq: number) => {\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT owner, seq, name, source, lastmod FROM prjcttbl WHERE owner = ${userSeq} order by seq`);\n    const results = await response.json();\n    return results as any[];\n};\n\nconst _Frame = styled.div<{\n    isVisible: boolean;\n}>`\n    display: ${props => props.isVisible ? 'block' : 'none'};\n`;\n","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../../base/design/styles\";\nimport CanvasUtil from \"../../../utils/canvasUtil\";\nimport FormUtil from \"../../../utils/form/formUtiil\";\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\nimport { GlobalContext } from \"../../entry/systemEntry\";\nimport LoginCreateAccount from \"./loginCreateAccount\";\nimport LoginLogin from \"./loginLogin\";\n\nconst WIDTH = 600;\nconst HEIGHT = 500;\n\n/**\n * ログインフレームのコンポーネント\n * @returns \n */\nconst LoginFrame = () => {\n    const { store, setStore } = useContext(GlobalContext);\n\n    const [isCreate, setCreate] = useState(false);\n\n    const logo = useMemo(() => {\n        return CanvasUtil.getLogoURL();\n    }, []);\n\n    return (\n        <_Frame\n            width={WIDTH} height={HEIGHT}\n        >\n            <_LogoDiv>\n                <img src={logo} />\n            </_LogoDiv>\n            <_Header>\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\n                    setCreate(false);\n                }}>Login</_TypeSwitch>\n                <_TypeSwitch isActive={isCreate} onClick={() => {\n                    setCreate(true);\n                }}>Create Account</_TypeSwitch>\n            </_Header>\n            {!isCreate ? <LoginLogin /> : <LoginCreateAccount />}\n            {/* <_Footer>\n                <FormUtil.ButtonRecord\n                    buttons={[\n                        { name: 'Close', callback: closeAction },\n                        { name: 'Enter', callback: enterAction },\n                    ]}\n                />\n            </_Footer> */}\n        </_Frame>\n    );\n}\n\nexport default LoginFrame;\n\nconst _Frame = styled.div<{\n    width: number;\n    height: number;\n}>`\n    display: inline-block;\n    position: absolute;\n    z-index: 11;\n    top: calc(50% - ${props => props.height / 2}px);\n    left: calc(50% - ${props => props.width / 2}px);\n    width: ${props => props.width}px;\n    height: ${props => props.height}px;\n    background-color: #e7e7e7e2;\n    border: 1px solid #9e9e9e;\n    border-radius: 4px;\n`;\n\nconst _LogoDiv = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 80px;\n    background-color: #eeeaea;\n    text-align: center;\n`;\nconst _Header = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 50px;\n    /* background-color: #d1d1d1; */\n    text-align: center;\n`;\n\nconst _TypeSwitch = styled.div<{\n    isActive: boolean;\n}>`\n    ${Styles.CSS_LABEL_MIDIUM};\n    background-color: #bf808075;\n    ${props => !props.isActive ? '' : css`\n        background-color: #c7a73e;\n    `}\n    color: white;\n    width: 250px;\n    margin: 10px 10px;\n    text-align: center;\n    &:hover {\n    background-color: #bf8080a2;\n        ${props => !props.isActive ? '' : css`\n            background-color: #c7a73e;\n        `}\n    }\n`;\nconst _Record = styled.div<{\n}>`\n    display: inline-block;\n    margin: 2px 0 0 0;\n    width: 100%;\n    height: 50px;\n    /* background-color: #e6e3c1; */\n    text-align: left;\n`;\n\nconst _Label = styled.div<{\n}>`\n    ${Styles.CSS_LABEL_MIDIUM};\n    /* background-color: #80e45832; */\n    color: #bd2d2d;\n    width: 150px;\n    margin: 10px 0 0 5px;\n    text-align: center;\n`;\n\nconst _TextField = styled.input<{\n}>`\n    ${Styles.CSS_LABEL_MIDIUM};\n    background-color: #f7f09787;\n    width: 300px;\n    margin: 10px 0 0 15px;\n    text-align: center;\n    border: solid 1px #5e5e5e;\n    text-align: left;\n    box-sizing: border-box;\n    border-radius: 4px;\n`;\n\nconst _Footer = styled.div<{\n}>`\n    display: inline-block;\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    padding: 6px 4px 0 0;\n    box-sizing: border-box;\n    width: 100%;\n    height: 50px;\n    background-color: #d1d1d1;\n    text-align: right;\n`;\n\nconst _ExecutableButton = styled.div<{\n    isEnable: boolean;\n}>`\n    ${Styles.CSS_LABEL_MIDIUM};\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\n    background-color: #5c9253;\n    width: 150px;\n    margin: 10px 5px 0 0;\n    text-align: center;\n    &:hover {\n        background-color: #7eaf75;\n    }\n`;","import styled, { css } from \"styled-components\";\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\nimport { ImUser } from 'react-icons/im'\nimport { MdOutlineLanguage } from 'react-icons/md'\nimport { useContext, useEffect, useMemo, useState } from \"react\";\nimport { GlobalContext } from \"./systemEntry\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport ConfirmDialog from \"../dialog/confirmDialog\";\nimport LoginFrame from \"../dialog/login/loginFrame\";\nimport AccountFrame from \"../dialog/accountFrame\";\nimport CanvasUtil from \"../../utils/canvasUtil\";\n\nconst TotalHeader = () => {\n\n    const { store, setStore } = useContext(GlobalContext);\n\n    const user = store.system.user;\n\n    const [userId, setUserId] = useState('');\n\n    const logo = useMemo(() => {\n        return CanvasUtil.getLogoURL();\n    }, []);\n    useEffect(() => {\n        if (user != null) {\n            setUserId('@' + user.id);\n        }\n    }, [user]);\n\n    const authButtonJsx = user == null ? (\n        <_LoginButton onClick={() => {\n            store.system.dialog = <LoginFrame />;\n            setStore({ ...store });\n            console.log(window.location.origin);\n        }}>\n            <div><ImUser /></div>\n            Login / Sign up\n        </_LoginButton>\n    ) : (<>\n        <_UserName\n            isEntry={user != null}\n            onClick={() => {\n                store.system.dialog = <AccountFrame />;\n                setStore({ ...store });\n            }}\n        >{userId}</_UserName>\n        <_LoginButton onClick={() => {\n            store.system.user = null;\n            store.cloud = null;\n            store.system.dialog = <ConfirmDialog.Component\n                message={'Logout.\\nSee you next time!'}\n            />;\n            setStore({ ...store });\n        }}>\n            <div><ImUser /></div>\n            Logout\n        </_LoginButton>\n    </>);\n    return (\n        <_Wrap>\n            <_Label>\n                {/* <_ACCENT>Partice</_ACCENT>&nbsp;<_NORMAL>Simulator</_NORMAL> */}\n                <_Logo src={logo} />\n            </_Label>\n            <_Menu>\n                {authButtonJsx}\n                <_Language>\n                    <div><MdOutlineLanguage /></div>\n                </_Language>\n            </_Menu>\n        </_Wrap>\n    );\n}\n\nexport default TotalHeader;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    height: ${TOTAL_HEADER_WIDTH}px;\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\n    /* background-color: #c2c2c2; */\n    box-shadow: 0 0 8px 0 #000b3a48;\n`;\n\nconst _Label = styled.div`\n    display: inline-block;\n    margin: 2px 0 0 10px;\n    width: 200px;\n    height: calc(100% - 4px);\n    /* background-color: #00000013; */\n    font-size: 34px;\n    font-weight: 600;\n    line-height: 36px;\n    font-style: italic;\n    text-shadow: 1px 2px 3px #dbdbdb6a;\n`;\n\nconst _NORMAL = styled.span`\n    color: #9fc2d1;\n`;\nconst _ACCENT = styled.span`\n    font-size: 34px;\n    color: #ececec;\n`;\n\n\n\nconst _Menu = styled.div`\n    display: inline-block;\n    /* width: 300px; */\n    height: 100%;\n    position: absolute;\n    right: 30px;\n    /* background-color: #ff00002b; */\n`\n\nconst _MenuItem = styled.div`\n    background-color: #c9c7c7;\n    &:hover {\n        background-color: #cf9bae;\n    }\n    transition: background-color 800ms;\n`\n\nconst _LoginButton = styled(_MenuItem)`\n    display: inline-block;\n    /* width: 240px; */\n    padding: 0 30px;\n    margin: 5px 10px 0 0;\n    height: calc(100% - 10px);\n    border-radius: 20px;\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\n    /* background-color: #adadad; */\n    /* border: 1px solid #7e7e7e; */\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\n    /* text-shadow: 1px 2px 3px #808080ba; */\n    text-align: center;\n    font-size: 22px;\n    font-weight: 600;\n    line-height: 28px;\n    color: #ffffff;\n    vertical-align: top;\n\n    & div {\n        display: inline-block;\n        /* background-color: #0000007d; */\n        margin: 2px 5px 0 0;\n        vertical-align: top;\n    }\n`;\n\nconst _UserName = styled.div<{\n    isEntry: boolean;\n}>`\n    display: inline-block;\n    /* width: 240px; */\n    margin: 5px 20px 0 0;\n    height: calc(100% - 10px);\n    text-align: center;\n    font-size: 22px;\n    font-weight: 600;\n    line-height: 28px;\n    color: #9afff292;\n    ${props => props.isEntry ? '' : css`\n        color: #ff393983;\n    `}\n    vertical-align: top;\n`;\n\nconst _Language = styled(_MenuItem)`\n    display: inline-block;\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\n    margin: 3px 0 0 0;\n    border-radius: 50%;\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\n    /* background-color: #48aa9d; */\n    /* border: 1px solid #7e7e7e; */\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\n    /* text-shadow: 1px 2px 3px #808080ba; */\n    /* text-align: center; */\n    font-size: 28px;\n    font-weight: 600;\n    color: #ffffff;\n    & div {\n        display: inline-block;\n        margin: 2px 0 0 5px;\n        /* background-color: #0000007d; */\n        vertical-align: top;\n    }\n`;\n\nconst _Logo = styled.img`\n    display: inline-block;\n    position: relative;\n    width: 180px;\n    height: 100%;\n    padding: 3px 0;\n    box-sizing: border-box;\n    /* background-color: #bc28289f; */\n`;","import { createContext, useCallback, useEffect, useReducer, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { initialStore, Store } from '../../redux/store/store';\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\nimport GloballDialog from '../dialog/globalDialog';\nimport MainFrame from './mainFrame';\nimport Splash from './splash';\nimport TotalHeader from './totalHeader';\n\n\ntype GlobalContextType = {\n    store: Store;\n    setStore: React.Dispatch<React.SetStateAction<Store>>;\n}\n\nexport const GlobalContext = createContext({} as GlobalContextType);\n\nconst SystemEntry = () => {\n\n    const [store, setStore] = useState(initialStore);\n    return (\n        <GlobalContext.Provider value={{ store, setStore }}>\n            <>\n                {!store.system.isSplash ? <></> :\n                    <Splash\n                        remove={() => {\n                            setStore({...store, system: {\n                                ...store.system, isSplash: false\n                            }});\n                        }}\n                    />}\n                <_Wrap>\n                    <GloballDialog />\n                    <TotalHeader />\n                    <_MainDiv>\n                        <MainFrame />\n                    </_MainDiv>\n                </_Wrap>\n            </>\n        </GlobalContext.Provider>\n    );\n}\n\nexport default SystemEntry;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    height: 100%;\n    background-color: #364887;\n`;\n\nconst _MainDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\n    /* background-color: #c2c2c2; */\n`;","import zlib from \"zlib\";\n// import { createClient } from \"@supabase/supabase-js\";\nimport { Base64 } from \"js-base64\";\nimport { sha256 } from 'js-sha256';\nimport Hashids from 'hashids';\nimport { Store } from \"../redux/store/store\";\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\nimport ConfirmDialog from \"../contents/dialog/confirmDialog\";\n\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\n\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\n\nnamespace DataUtil {\n\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5001';\n    // export const DB_SERVER_DOMAIN = 'https://hkdev-db.glitch.me';\n    export const DB_SERVER_DOMAIN = 'https://crud-server001.glitch.me';\n\n    export const APP_SERVER_DOMAIN = 'http://localhost:4333';\n    // export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/licresia_demo_app';\n    // export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\n\n    const getUserHashBuilder = () => {\n        return new Hashids('pa-user', 8);\n    }\n\n    export const getHashedFromUserSeq = (seq: number) => {\n        const hashids = getUserHashBuilder();\n        const hash = hashids.encode(seq);\n        const hashedKey = Base64.encode(hash, true);\n        return hashedKey;\n    }\n\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\n        const hashids = getUserHashBuilder();\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\n        return decryptioned;\n    }\n\n    const getScoreHashBuilder = () => {\n        return new Hashids('pa', 8);\n    }\n\n    export const getHashedFromScoreSeq = (seq: number) => {\n        const hashids = getScoreHashBuilder();\n        const hash = hashids.encode(seq);\n        const hashedKey = Base64.encode(hash, true);\n        return hashedKey;\n    }\n\n    export const getDecryptionedScoreSeq = (hashedSeq: string) => {\n        const hashids = getScoreHashBuilder();\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\n        return decryptioned;\n    }\n\n    export const getPreviewURL = (scoreSeq: number) => {\n        const hashedKey = getHashedFromScoreSeq(scoreSeq);\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\n        return url;\n    }\n\n    /**\n     * クエリリクエストを生成する\n     * @param sql \n     * @returns \n     */\n    const createQueryRequestInit = (sql: string): RequestInit => {\n        return {\n            mode: 'cors',\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ sql, databaseName: 'pa' })\n        }\n    }\n\n    export type SendMailParam = {\n        from: string,\n        to: string,\n        subject: string,\n        text: string\n    }\n\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\n        return {\n            mode: 'cors',\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(json)\n        }\n    }\n\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\n        return fetch(DB_SERVER_DOMAIN + '/mail',\n            createSendMailRequestInit(json)\n        );\n    }\n\n    /**\n     * select/updateを指定してSQLを実行する。<br>\n     * selectの場合、結果をjsonで返す。\n     * @param queryType\n     * @param sql \n     * @returns \n     */\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\n            createQueryRequestInit(sql)\n        );\n    }\n\n    export const findUserInfoList = async () => {\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\n        const results = await response.json();\n        return results as { id: string, email: string }[];\n    };\n\n    export const findUserIdList = async () => {\n        const results = await findUserInfoList();\n        return (results as { id: string }[]).map(res => res.id);\n    };\n\n    export const findUserInfoFromEmail = async (email: string) => {\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\n        const results = await response.json();\n        return results as { seq: number, id: string }[];\n    };\n\n    export const findUserInfoFromSeq = async (seq: number) => {\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\n        const results = await response.json();\n        return results as { seq: number, id: string, password: string, email: string }[];\n    };\n\n    export const findUserInfoLogin = async (id: string, password: string) => {\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\n        const results = await response.json();\n        return results as { seq: number, id: string, password: string, email: string }[];\n    };\n\n    export const getNextUserSeq = async () => {\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\n        const results = await response.json();\n        const nextSeq = (results[0]['seq'] as number) + 1;\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\n\n        return nextSeq;\n    };\n\n    export const findUserScoreList = async (userSeq: number) => {\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\n        const results = await response.json();\n        return results as any[];\n    };\n\n    export const findScore = async (scoreSeq: number) => {\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT (select id from user_tbl where seq = score.user_seq) as owner, dispnam, data FROM scoretbl score WHERE seq = ${scoreSeq}`);\n        const results = await response.json();\n        return results as any[];\n    };\n\n\n    export const loadFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\n        (async () => {\n            const [fileHandle] = await window.showOpenFilePicker();\n            const file = await fileHandle.getFile();\n            const fileContents = await file.text();\n            store.fileHandle =fileHandle;\n            const text = DataUtil.unZip(fileContents);\n            console.log(text);\n            store.logicData = JSON.parse(text);\n            store.system.dialog = <ConfirmDialog.Component message=\"Successfully file loaded!\" />;\n            setStore({ ...store });\n        })();\n    }\n\n    export const saveFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\n        const rootData = store.logicData as LogicUtil.WrapElement;\n        let fileHandle = store.fileHandle;\n\n        const options = {\n            types: [\n                {\n                    accept: {\n                        'text/plain': ['.plgc'],\n                    },\n                },\n            ],\n        };\n\n        const plainData = JSON.stringify(rootData);\n        if (fileHandle != null) {\n            (async () => {\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\n                const writable = await fileHandle.createWritable();\n                //テキストデータの書き込み\n                const text = DataUtil.gZip(plainData);\n                await writable.write(text);\n                //ファイルを閉じる\n                await writable.close();\n                // setFileHandle(fileHandle);\n                // const file = await fileHandle.getFile();\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\n                setStore({ ...store });\n            })();\n        } else {\n            window.showSaveFilePicker(options).then((handle) => {\n                (async () => {\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\n                    const writable = await handle.createWritable();\n                    //テキストデータの書き込み\n                    const text = DataUtil.gZip(plainData);\n                    await writable.write(text);\n                    //ファイルを閉じる\n                    await writable.close();\n                    store.fileHandle = handle;\n                    // setFileHandle(handle);\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\n                    setStore({ ...store });\n                })();\n            }).catch(() => {\n                console.log('キャンセルされました');\n            });\n        }\n    }\n\n    export const getSHA256Hash = (original: string) => {\n        return sha256(original);\n    }\n\n    /**\n     * 文字列を圧縮する\n     * @param val 圧縮前の文字列\n     * @returns 圧縮後の文字列\n     */\n    export const gZip = (val: string) => {\n        // エンコード\n        const content = encodeURIComponent(val);\n        // 圧縮\n        const result = zlib.gzipSync(content);\n        // Buffer => base64変換\n        const value = result.toString('base64');\n        return value;\n    }\n\n    /**\n     * 圧縮された文字列を複号する\n     * @param val 圧縮された文字列\n     * @returns 複号後の文字列\n     */\n    export const unZip = (val: string) => {\n        // base64 => Bufferに変換\n        const buffer = Buffer.from(val, 'base64')\n        // 復号化\n        const result = zlib.unzipSync(buffer)\n        // デコード\n        const str = decodeURIComponent(result.toString())\n        return str;\n    }\n\n    /**\n     * Date型の日時を文字列に変換する\n     * @param date Date型の日時\n     * @returns 文字列の日時\n     */\n    export const getStringFromDate = (date: Date) => {\n\n        const year_str = date.getFullYear().toString();\n        //月だけ+1すること\n        const month_str = (1 + date.getMonth()).toString();\n        const day_str = date.getDate().toString();\n        const hour_str = date.getHours().toString();\n        const minute_str = date.getMinutes().toString();\n        const second_str = date.getSeconds().toString();\n\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\n        format_str = format_str.replace(/YYYY/g, year_str);\n        format_str = format_str.replace(/MM/g, month_str);\n        format_str = format_str.replace(/DD/g, day_str);\n        format_str = format_str.replace(/hh/g, hour_str);\n        format_str = format_str.replace(/mm/g, minute_str);\n        format_str = format_str.replace(/ss/g, second_str);\n\n        return format_str;\n    };\n}\n\nexport default DataUtil;"],"sourceRoot":""}