{"version":3,"sources":["system/utils/dataUtil.tsx","App.tsx","reportWebVitals.ts","index.tsx","system/contents/dialog/confirmDialog.tsx","system/utils/form/formUtiil.tsx","system/redux/store/store.tsx","system/utils/systemConst.tsx","system/contents/dialog/globalDialog.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/utils/treeUtil.tsx","system/utils/form/validateUtil.tsx","system/utils/canvasUtil.tsx","system/contents/graphic/particle.tsx","system/contents/graphic/drawUtil.tsx","system/contents/graphic/vectorUtil.tsx","system/contents/create/factory/util/paramUtil.tsx","system/contents/create/preview/modulateBuilder.tsx","system/contents/create/preview/previewUtil.tsx","system/contents/create/factory/util/logicElementUtil.tsx","system/contents/create/preview/logicPreviewFrame.tsx","system/contents/create/factory/detail/logic/editorArgumentMng.tsx","system/contents/create/factory/detail/common/modifyOperations.tsx","system/contents/create/factory/detail/logic/editorParamItem.tsx","system/contents/create/factory/detail/logic/editorArgumentItem.tsx","system/contents/create/factory/detail/seed/editorSeedMng.tsx","system/contents/create/factory/detail/logic/editorLogicMng.tsx","system/contents/create/factory/detail/logic/editorLogicItem.tsx","system/contents/create/factory/detail/logic/editorBehiviorMng.tsx","system/contents/create/factory/detail/logic/editorVisualMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnector.tsx","system/contents/create/factory/dialog/sendTemplateDialog.tsx","system/contents/create/factory/detail/logic/editorSendManager.tsx","system/contents/create/factory/detail/logic/editorFieldMng.tsx","system/contents/create/factory/detail/logic/editorExtendMng.tsx","system/contents/create/factory/detail/seed/editorSeedItem.tsx","system/contents/create/factory/detail/seed/editorThumbnailMng.tsx","system/contents/create/factory/detail/seed/editorThumbnailItem.tsx","system/contents/create/factory/detail/seed/editorSampleItem.tsx","system/contents/create/factory/detail/seed/editorSampleMng.tsx","system/contents/create/factory/detail/seed/editorInterfaceManager.tsx","system/contents/create/factory/detail/seed/editorSeedArgMng.tsx","system/contents/create/factory/detail/seed/editorSeedArgItem.tsx","system/contents/create/factory/detail/seed/editorSeedSendMng.tsx","system/contents/create/factory/util/logicUtil.tsx","system/contents/create/factory/logicMainteTab.tsx","system/contents/create/manage/nameDefDialog.tsx","system/contents/create/manage/manageTab.tsx","system/contents/create/launcher/launcherTab.tsx","system/contents/create/createChannel.tsx","system/contents/entry/directView.tsx","system/contents/entry/directLogin.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/dialog/accountFrame.tsx","system/contents/dialog/login/loginCreateAccount.tsx","system/contents/dialog/login/loginLogin.tsx","system/contents/dialog/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","system/base/design/styles.tsx"],"names":["DB_SERVER_DOMAIN","APP_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","seq","hash","encode","Base64","hashedSeq","hashids","Number","decode","getHashedFromScoreSeq","sendQueryRequestToAPI","scoreSeq","hashedKey","json","fetch","mode","method","headers","Accept","body","JSON","stringify","createSendMailRequestInit","queryType","sql","databaseName","createQueryRequestInit","findUserInfoList","a","response","results","map","res","id","email","password","nextSeq","DataUtil","userSeq","store","setStore","window","showOpenFilePicker","fileHandle","getFile","file","text","fileContents","unZip","console","log","logicData","parse","system","dialog","Component","message","rootData","plainData","createWritable","writable","gZip","write","close","showSaveFilePicker","types","accept","then","handle","catch","original","sha256","val","content","encodeURIComponent","zlib","gzipSync","toString","buffer","Buffer","from","result","unzipSync","decodeURIComponent","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","App","useEffect","document","oncontextmenu","onkeydown","e","ctrlKey","includes","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","ConfirmDialog","props","useContext","GlobalContext","width","height","buttons","label","callback","_Frame","_Main","_Inner","split","msg","i","Message","isCenter","ButtonRecord","align","styled","div","FormUtil","checkables","forEach","checkable","errors","length","type","isPassword","validaters","validates","dependency","dep","value","getErrors","validater","checker","push","errorType","setCheckable","_Record","isEnable","isVisible","textAlign","marginTop","marginBottom","undefined","titleLabel","_ItemnLabel","_ItemnInputBak","hasTitle","placeholder","onChange","target","readOnly","isReadOnly","jsx","labelWidth","_FixedLabel","useState","isNaN","setNaN","isNumber","concat","step","_ItemnInput","valueAsNumber","onBlur","marginLeft","headBlank","list","slice","unshift","labelText","_ItemCombobox","item","_Option","disabled","isDisabled","button","_Button","onClick","_Message","isLink","clickAction","_BorderText","title","_BorderPanel","innerJsx","_InfoDiv","color","textRecords","isRelation","isUse","_Switch","find","css","Styles","CSS_BUTTON_DISABLE","CSS_LABEL_MIDIUM","input","select","option","FONT_MIDIUM","CSS_LABEL_SMALL","FONT_SMALL","initialStore","isSplash","user","cloud","SystemConst","GloballDialog","_Blind","ChannelPane","activeNo","setActiveNo","_LabelList","tabElements","tab","index","name","icon","isActive","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","_Icon","_Label","ChannelContents","_Contents","TabbedPane","tabRecordNum","enable","TabLabel","_TabLabel","TabContents","TreeUtil","data","parent","depth","isOpen","children","node","parentNode","isDisable","focusNode","ref","useRef","buildElementNodeFromData","build","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","jsxList","useMemo","buildJsxRecords","element","spaceList","isCurrent","current","scrollWidth","tempNode","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","clickEvent","onDoubleClick","getLabelJsx","invalidate","_Wrap","str","min","max","checkIncludesChars","ch","charAt","indexOf","num","conditions","ValidateUtil","createURL","draw","canvas","createElement","ctx","getContext","toDataURL","CanvasUtil","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillStyle","fillText","adjust","measureText","save","WIDTH","AUTH_TEXT_WIDTH","SIZE","AUTH_TEXT_HEIGHT","rotate","Math","PI","char","fontRand","random","alphaRand","Particle","owner","pos","prevPos","vec","frame","limit","isLive","drawer","extend","update","x","xy","y","this","param","radiusBase","radius","self","flashAppearFrame","appearFrame","unitFrame","flashHideFrame","shrinkStartRate","start","floor","g","createRadialGradient","grads","rgba","convertRgbaFromColorCode","r","b","offset","convertColorCodeFromRgba","grad","addColorStop","globalAlpha","disappearStartRate","beginPath","arc","fill","code","parseInt","substring","rate","DrawUtil","VectorUtil","rad","len","syncFromXY","sqrt","atan2","syncFromRad","cos","sin","VisualParamType","BehaviorParamType","Object","values","SelfParamType","ExtendParamType","EffectParamType","ModulateParamType","ConstantType","ParamUtil","ModulateBuilder","extendList","decayRate","decayLimit","gravity","gravityLimit","SCREEN_WIDTH","SCREEN_HEIGHT","searchElement","origin","sends","createParticleRec","cur","valueMapList","ConstantValueMap","fieldMng","mngs","fields","field","paramItem","convertFormulaToValue","visualParams","params","behaviorParams","getVisualParam","convertParamsToValue","getBehaviorParam","LIMIT","POS_X","POS_Y","Vector","VEC_X","VEC_Y","VEC_RAD","VEC_LEN","connectMng","inherits","connect","connector","disable","logicItem","wrap","logicMng","defs","def","searchDependLogic","depend","addValueMap","FRAME","itrfldValueMap","loopCnt","extendParams","loopCntVal","LOOP_COUNT","convertParamsToBoolean","INVOKE","iterateValueMap","LOOP_ITERATE","sendValueMapList","Instance","DECAY_LIMIT","DECAY_RATE","GRAVITY_VAL","GRAVITY_LIMIT","RADIUS","colorR","COLOR_R","colorG","COLOR_G","colorB","COLOR_B","colorA","COLOR_A","disappearStart","DISAPPEAR_START","shrinkStart","SHRINK_START","FLASH_APPEAR_FRAME","FLASH_HIDE_FRAME","createGradDrawer","warpList","formula","v","valueMap","m","formulaStr","varCnt","formulaItems","convertFormulaToBoolean","RADIAN_ROUND","PreviewUtil","typeList","some","listName","getListParamName","wrapElement","insertChild","listPos","splice","newNode","createNode","swapOrder","size","ownerChildren","ownDataChildren","curNo","it","swapNode","swapData","LogicElementUtil","isHead","isTail","getIdentifyParamName","getNamableProps","syncTreeElementFromWrap","childWrap","createParamWrapList","paramDataList","createVisualParams","createBehaviorParams","seedMng","nameList","curWrap","nameParam","mngWrap","listParam","mng","logic","curLogicOwner","VisualParams","BehaviorParams","SelfParams","ExtendParams","EffectParams","ModulateParams","Constants","argMng","args","arg","prefix","mngType","getLogicItem","visualMng","behaviorMng","inhMng","inh","inhfld","getInnerWrap","LogicPreviewFrame","formList","setFormList","sceens","setSceens","frameCnt","setFrameCnt","tabIndex","setTabIndex","setCur","isBuild","setBuild","isPlay","setPlay","setTimeout","argMapList","argWrap","argItem","defval","formListJsx","form","FormRecord","TextField","checkRequired","buildLogicProps","seed","entry","getOrigin","par","isInputOK","buildTabJsx","_FormDiv","previewTabJsx","_CanvasDiv","_IMG","src","_ProgressDiv","clickX","pageX","clientRect","getBoundingClientRect","left","pageXOffset","_ProgressVal","onKeyDown","_CloseButton","img","EditorArgumentMng","FactoryTreeContext","setFocusNode","BorderPanel","addChild","ModifyOperations","isModify","setModify","removeSelf","isComplete","isCompleteCheck","checkableFields","mappingForm","firstRegist","modifyRegist","Level","EditorArgumentItem","setName","argType","setArgType","reservedList","getParamNameList","valueType","syncArgumentAdd","prevName","syncArgumentName","checkStringLength","LogicUtil","checkFieldName","filter","Combobox","ArgTypes","refers","getArgumentRefers","syncArgumentDel","getSwapButtons","argName","searchVariableReferInFormula","varItem","logicNode","newName","syncFormula","syncParamName","runRec","conn","inhLogic","sendMng","connWrap","syncArgumentCallback","inhMngNode","getInnerNode","sendNode","newArgName","paramWrap","createParamWrap","delArgName","delIndex","EditorSeedMng","itemWrap","EditorLogicMng","EditorLogicItem","el","isConnect","hasArgNode","hasFieldNode","hasConnectNode","existNameList","getExistNameList","toggleElement","hasNode","removeChild","getDefaultLogicMngs","syncLogicName","Record","Switch","argumentNode","hasArgument","fieldNode","hasField","inheritNode","hasInherit","rootNode","logicMngNode","inherit","clone","defaultName","getNumberingOnPrefixName","newWrap","getChildrenElementNode","getLocgicRefers","logicName","searchLogicReferInherit","EditorParamItem","setFormulaItems","varFormList","setVarFormList","isField","isCondition","inputType","level","FIELD","INITIAL","INHERIT_FIELD","INHERIT_EXTEND","INHERIT_SEND","argumentList","fieldKeys","parentType","getLogicNode","fieldName","Error","inhfldNode","fieldKeyList","paramNameList","addNum","delNum","parenthesisBalance","formJsxList","ParamInputTypes","getValueForm","isLastVar","isFormulaOK","hasFormError","varForm","getFormulaItem","syncFieldName","_Formula","isInvalid","_Var","_Sig","getFormulaJsx","getFieldRefers","mngNode","inheritWrap","span","EditorBehiviorMng","isVector","hasDecayParam","hasGravityParam","exchangeVectorMethod","flag","trueParamElements","falseParamElements","exchangeElements","toggleElements","paramElements","EditorVisualMng","drawMethod","THICKNESS","hasDisappearParam","hasShrinkParam","hasFlashParam","EditorInheritConnMng","EditorInheritConnector","identify","setIdentify","setMethod","setDepend","isCreate","logicList","idList","initConnectorNode","initSendParams","sendParamList","dependItem","getSendParamList","curParamList","isChange","ConnectTypes","dependLogic","COMPONENT_WIDTH","xName","setXName","yName","setYName","checkItems","argNode","behaviorNode","setParamValue","prpName","targetParam","paramList","xParam","yParam","SendTemplateDialog","EditorSendManager","isDepend","ConnectParentPosition","SetParentPosition","EditorFieldMng","EditorExtendMng","hasLoopParam","hasInvokeParam","EditorSeedItem","setEntry","permit","setPermit","logicNameList","items","samples","PermitTypes","EditorThumbnailMng","LogicTreeContext","hasSample","WND_SIZE","EditorThumbnailItem","seedWrap","setFrame","urls","setUrls","sample","getThumbnailURL","getSeedValueMap","sampleNo","argMap","sendParams","send","targetFrame","pictureJsxList","imgJsx","_SampleDiv","_SampleName","EditorSampleItem","paramForms","setParamForms","argInfoList","paramForm","checkNumberRange","EditorSampleMng","EditorInterfaceManager","EditorSeedArgMng","EditorSeedArgItem","setMin","setMax","setStep","setDefval","EditorSeedSendMng","COLOR_METHOD","COLOR_MNG","COLOR_LIST","COLOR_ITEM","COLOR_FIELD","isFocus","_Category","backgroundColor","_EditableValue","detailJsx","_Span","_Field","_Signature","_Detail","nameJsx","_ValueType","wrapNode","get","elementNode","getChildrenDataNode","createContext","LogicMainteTab","setInvalidate","masterNode","openPreviewDialog","n","_TreeDiv","_TreeHead","_TreeBody","Frame","getNodeDisplayJsx","_PropsDiv","_DetailDiv","_DetailHeader","_DetailHeaderLabel","getTypeName","Provider","setRootData","parentWrap","_DetailMainDiv","getDetailComponent","NameDefDialog","targetSeq","projects","p","existNames","findProjectMaxSeq","maxSeq","newProject","source","lastmod","insertProject","targetItem","updateProjectName","registUpdate","req","ManageTab","fcsListIdx","setFcsListIdx","listItemJsx","exist","_ListItem","_Status","isExist","_Name","hasData","incrRec","root","developCnt","privateCnt","releaseCnt","logicSize","logicCnt","_HeaderDiv","getInitialData","_BodyDiv","_LeftDiv","updateProjectSource","deleteProject","_ListDiv","_RighttDiv","loadFile","saveFile","FixedText","getSHA256Hash","LauncherTab","CreateChannel","SCORE_TAB_MARGIN","DirectView","getDecryptionedScoreSeq","hashKey","to","DirectLogin","getDecryptionedUserSeq","findUserInfoFromSeq","resList","ReleaseNote","setJsx","record","note","_Header","version","_ListFrame","HOME_USER_DIV_HEIGHT","HomeChannel","userCount","setUserCount","countUsers","cnt","_Left","_MessageRecord","_Right","_CSS_LABEL_MIDIUM","MainFrame","basename","process","RouterManage","URLSearchParams","useLocation","search","path","exact","MAIN_FRAME_MARGIN","Splash","isSwitch","setSwitch","timerId","setTimerId","remove","clearTimeout","_Title","_NowLoading","_Copylight","fadeIn","keyframes","AccountFrame","userId","setUserId","oldPass","setOldPass","newPass","setNewPass","newPassConfirm","setNewPassConfirm","setEmail","userIdList","setUserIdList","emailList","setEmailList","loginProps","reloadInfo","info","getHashedFromUserSeq","history","replaceState","userTabJsx","InputTextFormBak","checkAsciiChars","permitRegist","_Body","_Footer","passwordStr","updateUserInfo","LoginCreateAccount","isRegist","setRegist","setPassword","passwordConfirm","setPasswordConfirm","messageList","setMessageList","createAuthText","findUserIdList","authCollation","setAuthCollation","authInput","setAuthInput","authPicture","getAuthTextURL","InfoFrame","_AuthText","getNextUserSeq","MessageLink","LoginLogin","isForget","setForget","findUserInfoLogin","findUserProjectList","resPrjList","findUserInfoFromEmail","url","sendQueryRequestToMailAPI","subject","LoginFrame","setCreate","logo","getLogoURL","_TypeSwitch","_LogoDiv","TotalHeader","authButtonJsx","_LoginButton","location","_UserName","isEntry","_ACCENT","_NORMAL","_Menu","_Language","_MenuItem","TOTAL_HEADER_WIDTH","SystemEntry","_MainDiv","CSS_LABEL"],"mappings":"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","file":"static/js/main.bef3ef90.chunk.js","sourcesContent":["import zlib from \"zlib\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport { sha256 } from 'js-sha256';\r\nimport Hashids from 'hashids';\r\nimport { Store } from \"../redux/store/store\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport ConfirmDialog from \"../contents/dialog/confirmDialog\";\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5001';\r\n    export const DB_SERVER_DOMAIN = 'https://hkdev-db.glitch.me';\r\n    // export const DB_SERVER_DOMAIN = 'https://licresia-server.glitch.me';\r\n\r\n    export const APP_SERVER_DOMAIN = 'http://localhost:4333';\r\n    // export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/licresia_demo_app';\r\n    // export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    const getUserHashBuilder = () => {\r\n        return new Hashids('pa-user', 8);\r\n    }\r\n\r\n    export const getHashedFromUserSeq = (seq: number) => {\r\n        const hashids = getUserHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\r\n        const hashids = getUserHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    const getScoreHashBuilder = () => {\r\n        return new Hashids('pa', 8);\r\n    }\r\n\r\n    export const getHashedFromScoreSeq = (seq: number) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedScoreSeq = (hashedSeq: string) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    export const getPreviewURL = (scoreSeq: number) => {\r\n        const hashedKey = getHashedFromScoreSeq(scoreSeq);\r\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql, databaseName: 'pa_v1.3.0' })\r\n        }\r\n    }\r\n\r\n    export type SendMailParam = {\r\n        from: string,\r\n        to: string,\r\n        subject: string,\r\n        text: string\r\n    }\r\n\r\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(json)\r\n        }\r\n    }\r\n\r\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/mail',\r\n            createSendMailRequestInit(json)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserInfoList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\r\n        const results = await response.json();\r\n        return results as { id: string, email: string }[];\r\n    };\r\n\r\n    export const findUserIdList = async () => {\r\n        const results = await findUserInfoList();\r\n        return (results as { id: string }[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfoFromEmail = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserInfoFromSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoLogin = async (id: string, password: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const getNextUserSeq = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\r\n        const results = await response.json();\r\n        const nextSeq = (results[0]['seq'] as number) + 1;\r\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\r\n\r\n        return nextSeq;\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findScore = async (scoreSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT (select id from user_tbl where seq = score.user_seq) as owner, dispnam, data FROM scoretbl score WHERE seq = ${scoreSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n\r\n    export const loadFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            store.fileHandle =fileHandle;\r\n            const text = DataUtil.unZip(fileContents);\r\n            console.log(text);\r\n            store.logicData = JSON.parse(text);\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Successfully file loaded!\" />;\r\n            setStore({ ...store });\r\n        })();\r\n    }\r\n\r\n    export const saveFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.logicData as LogicUtil.WrapElement;\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        const plainData = JSON.stringify(rootData);\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const getSHA256Hash = (original: string) => {\r\n        return sha256(original);\r\n    }\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n}\r\n\r\nexport default DataUtil;","import React, { useEffect } from 'react';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst REACT_APP_AUTH0_DOMAIN = 'dev-a0p0m4lr.us.auth0.com';\nconst REACT_APP_AUTH0_CLIENT_ID = 'ABaWpYVBZwTr3tkyxhq1kWh2YwT4epew';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport { useContext } from \"react\";\r\n\r\nnamespace ConfirmDialog {\r\n\r\n    export const Component = (props: {\r\n        message: string;\r\n        width?: number;\r\n        height?: number;\r\n        buttons?: FormUtil.ButtonProps[];\r\n    }) => {\r\n\r\n        const {store,  setStore } = useContext(GlobalContext);\r\n\r\n        const width = props.width ?? 600;\r\n        const height = props.height ?? 150;\r\n        const buttons = props.buttons ?? [\r\n            {\r\n                label: 'OK',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({...store});\r\n                }\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main><_Inner>\r\n                    {props.message.split('\\n').map((msg, i) => {\r\n                        return <FormUtil.Message\r\n                            key={i}\r\n                            message={msg}\r\n                            isCenter\r\n                        />\r\n                    })}\r\n                </_Inner></_Main>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons} />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 110px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* background-color: #bb6868e1; */\r\n`;","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport ValidateUtil from \"./validateUtil\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nnamespace FormUtil {\r\n\r\n    export type CheckableValue = {\r\n        value: string;\r\n        errors: ValidateUtil.ErrorType[];\r\n    }\r\n\r\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\r\n        let result = true;\r\n        checkables.forEach(checkable => {\r\n            if (checkable.errors.length > 0) {\r\n                result = false;\r\n                return 1;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    export const InputTextFormBak = (props: {\r\n        titleLabel?: string;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        isCenter?: boolean;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        marginTop?: number;\r\n        isReadOnly?: boolean;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const type = props.isPassword ?? false ? 'password' : 'text';\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency);\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\r\n                <_ItemnInputBak\r\n                    type={type}\r\n                    value={props.checkable.value}\r\n                    hasTitle={props.titleLabel != undefined}\r\n                    width={props.width}\r\n                    isCenter={props.isCenter ?? false}\r\n                    placeholder={props.placeholder}\r\n                    onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        props.checkable.value = value;\r\n                        props.checkable.errors = getErrors(value);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }}\r\n                    errorType={errors.length === 0 ? undefined : errors[0]}\r\n                    readOnly={props.isReadOnly}\r\n                />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n\r\n    export const Record = (props: {\r\n        isEnable?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FormRecord = (props: {\r\n        titleLabel?: string;\r\n        labelWidth?: number;\r\n        isEnable?: boolean;\r\n        isVisible?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={props.isVisible ?? true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={props.labelWidth}>{props.titleLabel}</_ItemnLabel>}\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FixedText = (props: {\r\n        value: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        marginLeft?: number;\r\n    }) => {\r\n\r\n        return (\r\n            <_FixedLabel width={props.width}>{props.value}</_FixedLabel>\r\n        );\r\n    }\r\n\r\n    export const TextField = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        isNumber?: boolean;\r\n        marginLeft?: number;\r\n        step?: number;\r\n    }) => {\r\n        const [isNaN, setNaN] = useState(false);\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        let type = props.isPassword ?? false ? 'password' : 'text';\r\n        if (props.isNumber ?? false) {\r\n            type = 'number';\r\n        }\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n        const step = props.step ?? 1;\r\n\r\n        return (\r\n            <_ItemnInput\r\n                type={type}\r\n                value={value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                step={step}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                    if (type === 'number') {\r\n                        setNaN(Number.isNaN(e.target.valueAsNumber));\r\n                    }\r\n                }}\r\n                onBlur={() => {\r\n                    if (type === 'number') {\r\n                        if (isNaN) props.checkable.value = ' ';\r\n                        else props.checkable.value = Number(value).toString();\r\n                        // console.log(`[${props.checkable.value}]`);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }\r\n                }}\r\n                errorType={errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\r\n\r\n    export const Combobox = (props: {\r\n        list: ComboboxItemProps[];\r\n        headBlank?: boolean;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n        const headBlank = props.headBlank ?? false;\r\n        const list = props.list.slice();\r\n        if (headBlank) list.unshift({ value: '', labelText: '' });\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n\r\n        useEffect(() => {\r\n            // console.log('value: ' + props.checkable.value);\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        return (\r\n            <_ItemCombobox\r\n                value={props.checkable.value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    props.checkable.value = value;\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n\r\n                }}\r\n                errorType={errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            >{list.map((item, i) => {\r\n                return (\r\n                    <_Option key={i}\r\n                        value={item.value}\r\n                        disabled={item.isDisabled ?? false}\r\n                        isDisabled={item.isDisabled ?? false}\r\n                    >{item.labelText}</_Option>\r\n                );\r\n            })}</_ItemCombobox>\r\n        );\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        label: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ButtonRecord = (props: {\r\n        buttons: ButtonProps[],\r\n        align?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const align = props.align ?? 'right';\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={align}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.buttons.map((button, i) => {\r\n                    return (\r\n                        <_Button\r\n                            key={i}\r\n                            isCenter={align === 'center'}\r\n                            isEnable={button.isEnable ?? true}\r\n                            width={button.width}\r\n                            onClick={button.callback}\r\n                        >{button.label}</_Button>\r\n                    );\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const Message = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const MessageLink = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        clickAction: () => void;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isLink={true}\r\n                    onClick={props.clickAction}\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        // const title = props.title ?? 'title pl';\r\n        return (<>\r\n            <_BorderText>{props.title}</_BorderText>\r\n            <_BorderPanel isEnable={props.isEnable ?? true}>{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export const InfoFrame = (props: {\r\n        height?: number;\r\n        textRecords: string[];\r\n    }) => {\r\n        const height = props.height ?? 70;\r\n        const color = '#1a9900';\r\n        return (<>\r\n            <_InfoDiv height={height} color={color}>\r\n                {props.textRecords.map((text, i) => {\r\n                    return <span key={i}>{text}<br /></span>;\r\n                })}\r\n            </_InfoDiv>\r\n        </>);\r\n    };\r\n\r\n    export const Switch = (props: {\r\n        label: string;\r\n        isUse: boolean;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        isRelation?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isRelation = props.isRelation ?? false;\r\n        const callback = isRelation && props.isUse ? () => { } : props.callback;\r\n        return (\r\n            <_Switch\r\n                isRelation={isRelation}\r\n                isUse={props.isUse}\r\n                isEnable={props.isEnable ?? true}\r\n                width={props.width}\r\n                onClick={callback}\r\n            >{props.label}</_Switch>\r\n        );\r\n    }\r\n\r\n    export const checkItems = (list: CheckableValue[]) => {\r\n        return list.find(item => item.errors.length > 0) == undefined;\r\n    }\r\n}\r\n\r\nexport default FormUtil;\r\n\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n    textAlign: 'left' | 'center' | 'right';\r\n    marginTop: number;\r\n    marginBottom: number;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    width: 100%;\r\n    height: 40px;\r\n    margin-top: ${props => props.marginTop}px;\r\n    margin-bottom: ${props => props.marginBottom}px;\r\n    /* background-color: #b3b4c4; */\r\n    /* border: 1px solid #000; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    text-align: ${props => props.textAlign};\r\n`;\r\n\r\nconst _ItemnLabel = styled.div<{\r\n    labelWidth?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.labelWidth ?? 140}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #c3c3c3fc, #d8d8d8, #c3c3c3fc);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n`;\r\n\r\nconst _FixedLabel = styled.div<{\r\n    width?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #0c0e86;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c51a;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n    overflow-x: hidden;\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n`;\r\n\r\nconst _ItemnInputBak = styled.input<{\r\n    readOnly?: boolean;\r\n    isCenter: boolean;\r\n    hasTitle: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${props => !props.hasTitle ? css`\r\n    ` : css`\r\n        width: calc(100% - 152px);\r\n    `}\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    margin-top: 2px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    /* ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    } */\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemCombobox = styled.select<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n        pointer-events: none;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _Option = styled.option<{\r\n    isDisabled: boolean;\r\n}>`\r\n    ${props => !props.isDisabled ? '' : css`\r\n        color: #0000004b;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n    isLink?: boolean;\r\n    isCenter: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #002c52;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => !props.isLink ? '' : css`\r\n        color: #0459a3;\r\n        user-select: none;\r\n        text-decoration: underline;\r\n        &:hover {\r\n            color: #68a4d8;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #cdcdcd, #ebebeb, #cdcdcd);\r\n    border: 1px solid #747474;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isUse: boolean;\r\n    isEnable: boolean;\r\n    width?: number;\r\n    isRelation: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    color: #515151;\r\n    border: 1px solid #747474;\r\n    ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\r\n    ` : css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#ddc1d979' : '#d898b3'};\r\n        color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n    `}\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\r\n        ` : css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#d3a1cb79' : '#d898b3'};\r\n            color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _BorderText = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: #990000;\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    background-color: #dcddce;\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    margin: 4px 0 0 0;\r\n    display: inline-block;\r\n    background-color: #e7e5e561;\r\n    border: solid 1px #949494;\r\n    width: 100%;\r\n    height: ${props => props.height}px;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: ${props => props.color};\r\n    overflow-y: auto;\r\n`;","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport StoreCloud from \"./storeCloud\";\r\nimport StoreSystem from \"./storeSystem\";\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    system: StoreSystem.Param;\r\n    logicData: LogicUtil.WrapElement | null;\r\n    cloud: StoreCloud.Props | null;\r\n    fileHandle: FileSystemFileHandle | null\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    system: {\r\n        isSplash: false,\r\n        user: null,\r\n        dialog: null,\r\n    },\r\n    logicData: null,\r\n    cloud: null,\r\n    fileHandle: null,\r\n}","\r\nnamespace SystemConst {\r\n    export const AUTH_TEXT_WIDTH = 350;\r\n    export const AUTH_TEXT_HEIGHT = 70;\r\n}\r\n\r\nexport default SystemConst;\r\n\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n\r\n// ホームチャンネル\r\nexport const HOME_USER_DIV_HEIGHT = 400;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const dialog = store.system.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            store.system.dialog = null;\r\n            setStore({...store});\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n    tabRecordNum?: number;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    enable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabRecordNum = props.tabRecordNum ?? 1;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList tabRecordNum={tabRecordNum}>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isEnable={tab.enable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList tabRecordNum={tabRecordNum}>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={!tab.enable ? <></> : tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isEnable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: inline-block;\r\n    height: ${props => 35 * props.tabRecordNum}px;\r\n    text-align: left;\r\n    /* background-color: #ac3b3b; */\r\n    width: 100%;\r\n`;\r\nconst _ContList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    \r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                margin-top: 5px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${props.isEnable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        // parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        const ref = useRef({} as HTMLDivElement);\r\n\r\n        /**\r\n         * データを元に再帰的に以下のツリーを構成する。\r\n         * @returns ツリー\r\n         */\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        useEffect(() => {\r\n            if (focusNode != null && focusNode.parent != null) {\r\n                focusNode.parent.isOpen = true;\r\n            }\r\n        }, [focusNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            // console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    // 親判定\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    // 兄弟判定\r\n                    if (result === false && focusNode != null && focusNode.parent != null) {\r\n                        result = focusNode.parent.children.find(node => node == element) != undefined;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        width={ref.current.scrollWidth}\r\n                        isActive={isCurrent}\r\n                        isRelation={!isDisable && isRelationNode()}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap\r\n                ref={ref}\r\n                isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #374a54;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #1f3642;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n    isRelation: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #459cff46;\r\n    `}\r\n    opacity: 0.3;\r\n    ${props => !props.isRelation ? '' : css`\r\n        background-color: #ffffff28;\r\n        opacity: 1;\r\n    `}\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #b4d9dd83;\r\n        opacity: 1;\r\n    `}\r\n    width: ${props => props.width}px;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\r\n\r\n    export type Validate = {\r\n        checker: (value: string) => boolean;\r\n        errorType: ErrorType;\r\n        message?: string;\r\n    }\r\n\r\n    /**\r\n     * 必須チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkRequired = (str: string) => {\r\n        return str.length > 0;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length === 0 || (str.length >= min && str.length <= max);\r\n    }\r\n\r\n    /**\r\n     * 半角英数時チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        return checkIncludesChars(str, list);\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列で構成されているかチェック\r\n     * @param str 検証する文字列\r\n     * @param list 入力を許す対象文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkIncludesChars = (str: string, list: string) => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            const ch = str.charAt(i);\r\n            if (list.indexOf(ch) === -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列が数値に変換できるかチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumber = (str: string) => {\r\n        return !isNaN(Number(str));\r\n    }\r\n\r\n    /**\r\n     * 数値の値の範囲をチェック\r\n     * @param str 検証する文字列\r\n     * @param min 下限\r\n     * @param max 上限\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumberRange = (str: string, min: number, max: number) => {\r\n        if (!isNaN(Number(str))) {\r\n            const num = Number(str);\r\n            return num >= min && num <= max;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default ValidateUtil;\r\n","import SystemConst from \"./systemConst\";\r\n\r\nnamespace CanvasUtil {\r\n\r\n    /**\r\n     * Canvasに任意の描画をし、画像のURLを取得する\r\n     * @param width 幅\r\n     * @param height 高さ\r\n     * @param draw 描画\r\n     * @returns 画像のURL\r\n     */\r\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        draw(ctx);\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    export const getLogoURL = () => {\r\n        return CanvasUtil.createURL(580, 80, (ctx) => {\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.fillRect(0, 0, 350, 80);\r\n\r\n            ctx.shadowColor = \"#555\";\r\n            ctx.shadowOffsetX = 2;\r\n            ctx.shadowOffsetY = 1;\r\n            ctx.shadowBlur = 5;\r\n            ctx.font = 'italic 50pt Arial';\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.fillText('Particle ', 24, 64);\r\n            const adjust = ctx.measureText('Particle ').width;\r\n            ctx.fillStyle = '#6ea0c4';\r\n            ctx.fillText('Simulator', 24 + adjust, 64);\r\n            ctx.save();\r\n        });\r\n    }\r\n\r\n    export const getAuthTextURL = (text: string) => {\r\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\r\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\r\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\r\n            ctx.rotate(1 * Math.PI / 180);\r\n            for (let i = 0; i < text.length; i++) {\r\n                const char = text.charAt(i);\r\n\r\n                const fontRand = Math.random() * 60;\r\n                const alphaRand = Math.random() * 60;\r\n                ctx.font = `${20 + fontRand}pt Arial`;\r\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\r\n                ctx.fillText(char, i * SIZE, 60);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CanvasUtil;","import VectorUtil from \"./vectorUtil\";\r\n\r\nnamespace Particle {\r\n\r\n    export type Props = {\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        limit: number;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n    }\r\n\r\n    export class Instance {\r\n\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        prevPos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        frame: number;\r\n        limit: number;\r\n        isLive: boolean;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n\r\n        constructor(props: Props) {\r\n            this.owner = props.owner;\r\n            this.pos = props.pos;\r\n            this.prevPos = props.pos;\r\n            this.vec = props.vec;\r\n\r\n            this.frame = 0;\r\n            this.limit = props.limit;\r\n            this.isLive = true;\r\n            this.drawer = props.drawer;\r\n            this.extend = props.extend;\r\n        }\r\n\r\n        update = () => {\r\n\r\n            this.pos.x += this.vec.xy.x;\r\n            this.pos.y += this.vec.xy.y;\r\n\r\n            this.extend.forEach(callback => callback(this));\r\n\r\n            if (this.frame === this.limit) {\r\n                this.isLive = false;\r\n            }\r\n            this.frame++;\r\n        }\r\n\r\n        draw = (ctx: CanvasRenderingContext2D) => {\r\n            this.drawer(this, ctx);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Particle;","import Particle from \"./particle\";\r\n\r\nnamespace DrawUtil {\r\n\r\n    export type Rgba = {\r\n        r: number;\r\n        g: number;\r\n        b: number;\r\n        a: number;\r\n    }\r\n\r\n    export type ColorStop = {\r\n        offset: number;\r\n        color: string;\r\n    }\r\n\r\n    export type DrawerParam = {\r\n        color: string;\r\n        radius?: number;\r\n        disappearStartRate?: number;\r\n        shrinkStartRate?: number;\r\n        flashAppearFrame?: number;\r\n        flashHideFrame?: number;\r\n    }\r\n\r\n    export const createGradDrawer = (param: DrawerParam) => {\r\n\r\n        /** 基準となる半径 */\r\n        const radiusBase = param.radius ?? 30;\r\n        return (self: Particle.Instance, ctx: CanvasRenderingContext2D) => {\r\n            if(param.flashAppearFrame != undefined) {\r\n                const appearFrame = param.flashAppearFrame;\r\n                const hideFrame = (param.flashHideFrame as number);\r\n                const unitFrame = appearFrame + hideFrame;\r\n                if((self.frame % unitFrame) >= appearFrame) return;\r\n            }\r\n\r\n            let radius = radiusBase;\r\n            if (param.shrinkStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.shrinkStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    const rate = (limit - frame) / limit;\r\n                    radius *= rate;\r\n                }\r\n            }\r\n\r\n            const x = self.pos.x;\r\n            const y = self.pos.y;\r\n            const g = ctx.createRadialGradient(x, y, 1, x, y, radius);\r\n\r\n            const grads: ColorStop[] = [];\r\n            const rgba = convertRgbaFromColorCode(param.color) ?? { r: 255, g: 255, b: 255, a: 255 };\r\n            grads.push({ offset: 0, color: convertColorCodeFromRgba({ r: 255, g: 255, b: 255, a: Math.floor(rgba.a * 0.9) }) });\r\n            grads.push({ offset: 0.2, color: convertColorCodeFromRgba({ ...rgba, a: Math.floor(rgba.a * 0.15) }) });\r\n            grads.push({ offset: 1, color: convertColorCodeFromRgba({ ...rgba, a: 1 }) });\r\n\r\n            grads.forEach(grad => {\r\n                g.addColorStop(grad.offset, grad.color);\r\n            });\r\n\r\n            ctx.globalAlpha = 1;\r\n            if (param.disappearStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.disappearStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    ctx.globalAlpha = (limit - frame) / limit;\r\n                }\r\n            }\r\n\r\n            ctx.fillStyle = g;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n        };\r\n    }\r\n\r\n    export const convertRgbaFromColorCode = (code: string): Rgba | null => {\r\n        const div = code.split('#');\r\n        if (div.length !== 2 || div[1].length < 6) return null;\r\n\r\n        const value = div[1];\r\n        const r = Number.parseInt(value.substring(0, 2), 16);\r\n        const g = Number.parseInt(value.substring(2, 4), 16);\r\n        const b = Number.parseInt(value.substring(4, 6), 16);\r\n        let a = 1;\r\n        if (value.length === 8) {\r\n            a = Number.parseInt(value.substring(6, 8), 16);\r\n        }\r\n        return { r, g, b, a };\r\n    }\r\n\r\n    export const convertColorCodeFromRgba = (rgba: Rgba): string => {\r\n        const r = ('00' + rgba.r.toString(16)).slice(-2);\r\n        const g = ('00' + rgba.g.toString(16)).slice(-2);\r\n        const b = ('00' + rgba.b.toString(16)).slice(-2);\r\n        const a = ('00' + rgba.a.toString(16)).slice(-2);\r\n        return `#${r}${g}${b}${a}`;\r\n    }\r\n\r\n    export const toWhite = (color: string, rate: number): string => {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport default DrawUtil;","namespace VectorUtil {\r\n\r\n    export type XY = {\r\n        x: number, y: number;\r\n    }\r\n\r\n    export class Vector {\r\n\r\n        xy: XY;\r\n        rad: number;\r\n        len: number;\r\n\r\n        constructor(xy: XY) {\r\n            this.xy = xy;\r\n            this.rad = 0;\r\n            this.len = 0;\r\n            this.syncFromXY();\r\n        }\r\n\r\n        syncFromXY = () => {\r\n            this.len = Math.sqrt(this.xy.x * this.xy.x + this.xy.y * this.xy.y);\r\n            this.rad = Math.atan2(this.xy.y, this.xy.x);\r\n        }\r\n\r\n        syncFromRad = () => {\r\n            this.xy.x = Math.cos(this.rad) * this.len;\r\n            this.xy.y = Math.sin(this.rad) * this.len;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default VectorUtil;","\r\nnamespace ParamUtil {\r\n    export enum VisualParamType {\r\n        RADIUS = 'radius',\r\n        COLOR_R = 'color_r',\r\n        COLOR_G = 'color_g',\r\n        COLOR_B = 'color_b',\r\n        COLOR_A = 'color_a',\r\n        THICKNESS = 'thickness',\r\n    }\r\n    export const VisualParams = Object.values(VisualParamType);\r\n    export type VisualParam = typeof VisualParams[number];\r\n\r\n    export enum BehaviorParamType {\r\n        LIMIT = 'limit',\r\n        POS_X = 'pos_x',\r\n        POS_Y = 'pos_y',\r\n        VEC_X = 'vec_x',\r\n        VEC_Y = 'vec_y',\r\n        VEC_RAD = 'vec_radian',\r\n        VEC_LEN = 'vec_length',\r\n    }\r\n    export const BehaviorParams = Object.values(BehaviorParamType);\r\n    export type BehaviorParam = typeof BehaviorParams[number];\r\n\r\n    export enum SelfParamType {\r\n        FRAME = 'self_frame',\r\n        LIMIT = 'self_limit',\r\n        POS_X = 'self_pos_x',\r\n        POS_Y = 'self_pos_y',\r\n        VEC_X = 'self_vec_x',\r\n        VEC_Y = 'self_vec_y',\r\n        VEC_RAD = 'self_vec_radian',\r\n        VEC_LEN = 'self_vec_length',\r\n    }\r\n    export const SelfParams = Object.values(SelfParamType);\r\n    export type SelfParam = typeof SelfParams[number];\r\n\r\n    export enum ExtendParamType {\r\n        LOOP_COUNT = 'loop_count',\r\n        LOOP_ITERATE = 'loop_iterate',\r\n        INVOKE = 'invoke',\r\n    }\r\n    export const ExtendParams = Object.values(ExtendParamType);\r\n    export type ExtendParam = typeof ExtendParams[number];\r\n\r\n    export enum EffectParamType {\r\n        DISAPPEAR_START = 'disappear_start',\r\n        SHRINK_START = 'shrink_start',\r\n        FLASH_APPEAR_FRAME = 'flash_appear_frame',\r\n        FLASH_HIDE_FRAME = 'flash_hide_frame',\r\n    }\r\n    export const EffectParams = Object.values(EffectParamType);\r\n    export type EffectParam = typeof EffectParams[number];\r\n\r\n    export enum ModulateParamType {\r\n        DECAY_RATE = 'decay_rate',\r\n        DECAY_LIMIT = 'decay_limit',\r\n        GRAVITY_VAL = 'gravity_val',\r\n        GRAVITY_LIMIT = 'gravity_limit',\r\n    }\r\n    export const ModulateParams = Object.values(ModulateParamType);\r\n    export type ModulateParam = typeof ModulateParams[number];\r\n\r\n    export enum ConstantType {\r\n        SCREEN_WIDTH = 'screen_width',\r\n        SCREEN_HEIGHT = 'screen_height',\r\n        PI = 'pi',\r\n        RADIAN_ROUND = 'radian_round',\r\n    }\r\n    export const Constants = Object.values(ConstantType);\r\n    export type Constant = typeof Constants[number];\r\n\r\n}\r\n\r\nexport default ParamUtil;","import Particle from \"../../graphic/particle\";\r\n\r\nnamespace ModulateBuilder {\r\n\r\n    type ModulateParam = {\r\n        decayRate?: number;\r\n        decayLimit?: number;\r\n        gravity?: number;\r\n        gravityLimit?: number;\r\n    }\r\n\r\n    export const build = (extendList: ((self: Particle.Instance) => void)[], param: ModulateParam) => {\r\n        \r\n        // 減衰メソッド\r\n        if (param.decayRate != undefined && param.decayLimit != undefined) {\r\n            const decayLimit = param.decayLimit;\r\n            const decayRate = param.decayRate;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.len > decayLimit) {\r\n                    self.vec.len = self.vec.len * decayRate;\r\n                    self.vec.syncFromRad();\r\n                }\r\n            });\r\n        }\r\n        // 重力メソッド\r\n        if (param.gravity != undefined && param.gravityLimit != undefined) {\r\n            const gravityLimit = param.gravityLimit;\r\n            const gravity = param.gravity;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.xy.y < gravityLimit) {\r\n                    self.vec.xy.y += gravity;\r\n                    self.vec.syncFromXY();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModulateBuilder;","import DrawUtil from \"../../graphic/drawUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport ParamUtil from \"../factory/util/paramUtil\";\r\nimport ModulateBuilder from \"./modulateBuilder\";\r\n\r\nnamespace PreviewUtil {\r\n\r\n    export const SCREEN_WIDTH = 550;\r\n    export const SCREEN_HEIGHT = 550;\r\n\r\n    export type ValueMap = {\r\n        name: string;\r\n        value: number;\r\n    }\r\n\r\n    export const buildLogicProps = (\r\n        owner: Particle.Instance[],\r\n        origin: LogicUtil.NodeLogicItem,\r\n        rootData: LogicUtil.WrapElement,\r\n        sends: ValueMap[]\r\n    ): Particle.Props => {\r\n\r\n        /**\r\n         * ディペンドするロジック要素を識別名から探して返す。\r\n         * @param name ロジックの識別名\r\n         * @returns ロジック要素\r\n         */\r\n        const searchDependLogic = (name: string): LogicUtil.NodeLogicItem | null => {\r\n            const mng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n            const wrap = mng.defs.find(def => (def.data as LogicUtil.NodeLogicItem).name === name);\r\n            if (wrap == undefined) return null;\r\n            return wrap.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        /**\r\n         * 再帰的にパーティクルを生成する。\r\n         * @param cur ルートとなるロジック要素\r\n         * @param sends 親要素から送られてきたフィールド\r\n         * @returns パーティクルのプロパティ\r\n         */\r\n        const createParticleRec = (cur: LogicUtil.NodeLogicItem, sends: ValueMap[]): Particle.Props => {\r\n            let valueMapList: ValueMap[] = sends.concat(ConstantValueMap);\r\n\r\n\r\n            // フィールドのパラメータを取得\r\n            const fieldMng = searchElement('field-mng', cur.mngs);\r\n            if (fieldMng != null) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                    valueMapList.push({ name: paramItem.name, value });\r\n                });\r\n            }\r\n\r\n            const visualParams = (searchElement('visual-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n            const behaviorParams = (searchElement('behavior-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n\r\n            const getVisualParam = (name: string) => {\r\n                return convertParamsToValue(name, visualParams, valueMapList);\r\n            }\r\n            const getBehaviorParam = (name: string) => {\r\n                return convertParamsToValue(name, behaviorParams, valueMapList);\r\n            }\r\n\r\n            // Behaviorのパラメータを取得\r\n            const limit = Math.floor(getBehaviorParam(ParamUtil.BehaviorParamType.LIMIT) as number);\r\n            const pos = {\r\n                x: getBehaviorParam(ParamUtil.BehaviorParamType.POS_X) as number,\r\n                y: getBehaviorParam(ParamUtil.BehaviorParamType.POS_Y) as number\r\n            };\r\n            const vec = new VectorUtil.Vector({ x: 0, y: 0 });\r\n            const isVectorMethod = behaviorParams.find(param => param.name === ParamUtil.BehaviorParamType.VEC_X) != undefined;\r\n            if (isVectorMethod) {\r\n                vec.xy.x = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_X) as number;\r\n                vec.xy.y = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_Y) as number;\r\n                vec.syncFromXY();\r\n            } else {\r\n                vec.rad = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_RAD) as number;\r\n                vec.len = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_LEN) as number;\r\n                vec.syncFromRad();\r\n            }\r\n\r\n            /**\r\n             * 追加動作（子要素、エフェクト、モデュレート）\r\n             */\r\n            const extendList: ((self: Particle.Instance) => void)[] = [];\r\n\r\n            // 子要素を生成する\r\n            const connectMng = searchElement('inherit-mng', cur.mngs);\r\n            if (connectMng != null) {\r\n\r\n                // パーティクル情報のフィールド追加\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_X, value: pos.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_Y, value: pos.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_RAD, value: vec.rad });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_LEN, value: vec.len });\r\n\r\n                const connects = (connectMng.data as LogicUtil.NodeConnectManager).inherits;\r\n\r\n                connects.forEach(connect => {\r\n                    const connector = connect.data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.disable ?? false) return;\r\n\r\n                    const logicItem = connector.method === 'create' ?\r\n                        searchElement('inherit-logic', connector.mngs)?.data as LogicUtil.NodeLogicItem :\r\n                        searchDependLogic(connector.depend);\r\n\r\n                    if (logicItem != null) {\r\n\r\n                        extendList.push((self: Particle.Instance) => {\r\n\r\n                            const addValueMap = (item: ValueMap) => {\r\n                                const map = valueMapList.find(map => map.name === item.name);\r\n                                if (map != undefined) map.value = item.value;\r\n                                else valueMapList.push(item);\r\n                            }\r\n                            addValueMap({ name: ParamUtil.SelfParamType.FRAME, value: self.frame });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.LIMIT, value: self.limit });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_X, value: self.pos.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_Y, value: self.pos.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_X, value: self.vec.xy.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_Y, value: self.vec.xy.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_RAD, value: self.vec.rad });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_LEN, value: self.vec.len });\r\n\r\n                            // Inherit配下のフィールドのパラメータを取得\r\n                            const itrfldValueMap: ValueMap[] = [];\r\n                            const fieldMng = searchElement('inhfld-mng', connector.mngs);\r\n                            if (fieldMng != null) {\r\n                                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                                    itrfldValueMap.push({ name: paramItem.name, value });\r\n                                });\r\n                            }\r\n\r\n                            let loopCnt = 1;\r\n                            const extendItem = searchElement('extend-mng', connector.mngs) as LogicUtil.WrapElement;\r\n                            const extendParams = (extendItem.data as LogicUtil.NodeParamManager).params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                            const loopCntVal = convertParamsToValue(ParamUtil.ExtendParamType.LOOP_COUNT, extendParams, valueMapList.concat(itrfldValueMap));\r\n\r\n                            // 派生条件\r\n                            const isInvoke = convertParamsToBoolean(ParamUtil.ExtendParamType.INVOKE, extendParams, valueMapList) ?? true;\r\n\r\n                            // 条件を満たさない場合、以下の処理（パーティクルの生成）を行わない\r\n                            if (!isInvoke) return;\r\n\r\n                            // イテレータを利用している場合\r\n                            if (loopCntVal != undefined) {\r\n                                loopCnt = loopCntVal;\r\n                            }\r\n\r\n                            for (let i = 0; i < loopCnt; i++) {\r\n\r\n                                // イテレータ関連のパラメータを追加\r\n                                const iterateValueMap: ValueMap[] = [\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_COUNT, value: loopCnt },\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_ITERATE, value: i }\r\n                                ];\r\n\r\n                                const sendItem = searchElement('send-mng', connector.mngs)?.data as LogicUtil.NodeParamManager;\r\n                                const params = sendItem.params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                                const sendValueMapList: ValueMap[] = params.map(item => {\r\n                                    return { name: item.name, value: convertParamsToValue(item.name, params, valueMapList.concat(itrfldValueMap).concat(iterateValueMap)) ?? 0 }\r\n                                });\r\n\r\n                                const props = createParticleRec(\r\n                                    logicItem,\r\n                                    sendValueMapList\r\n                                );\r\n                                self.owner.push(new Particle.Instance(props));\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            // モデュレート（動きの変化）を付与\r\n            ModulateBuilder.build(extendList, {\r\n                decayLimit: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_LIMIT),\r\n                decayRate: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_RATE),\r\n                gravity: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_VAL),\r\n                gravityLimit: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_LIMIT),\r\n            });\r\n\r\n            // Visualのパラメータを取得\r\n            const radius = getVisualParam(ParamUtil.VisualParamType.RADIUS);\r\n            const colorR = getVisualParam(ParamUtil.VisualParamType.COLOR_R);\r\n            const colorG = getVisualParam(ParamUtil.VisualParamType.COLOR_G);\r\n            const colorB = getVisualParam(ParamUtil.VisualParamType.COLOR_B);\r\n            const colorA = getVisualParam(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // エフェクト付与\r\n            const disappearStart = getVisualParam(ParamUtil.EffectParamType.DISAPPEAR_START);\r\n            const shrinkStart = getVisualParam(ParamUtil.EffectParamType.SHRINK_START);\r\n            const flashAppearFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME);\r\n            const flashHideFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_HIDE_FRAME);\r\n\r\n            let drawer: (self: Particle.Instance, ctx: CanvasRenderingContext2D) => void = () => { };\r\n            if (radius != undefined) {\r\n                drawer = DrawUtil.createGradDrawer({\r\n                    radius: radius,\r\n                    color: DrawUtil.convertColorCodeFromRgba({\r\n                        r: colorR as number,\r\n                        g: colorG as number,\r\n                        b: colorB as number,\r\n                        a: colorA as number,\r\n                    }),\r\n                    disappearStartRate: disappearStart,\r\n                    shrinkStartRate: shrinkStart,\r\n                    flashAppearFrame,\r\n                    flashHideFrame,\r\n                });\r\n            }\r\n\r\n            return {\r\n                owner, pos, vec,\r\n                limit, drawer,\r\n                extend: extendList\r\n            };\r\n        }\r\n\r\n        return createParticleRec(origin, sends);\r\n    }\r\n\r\n    const searchElement = (type: LogicUtil.NodeType, warpList: LogicUtil.WrapElement[]) => {\r\n        return warpList.find(wrap => wrap.type === type) ?? null;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param valueMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToValue = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): number | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToValue(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToValue = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): number => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(ret);\r\n        return ret;\r\n    }\r\n\r\n    export const convertParamsToBoolean = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): boolean | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToBoolean(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToBoolean = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): boolean => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item, i) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            else if (item === '=') str = '==';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(formulaStr);\r\n        return ret;\r\n    }\r\n\r\n    export const ConstantValueMap: ValueMap[] = [\r\n        { name: ParamUtil.ConstantType.SCREEN_WIDTH, value: SCREEN_WIDTH },\r\n        { name: ParamUtil.ConstantType.SCREEN_HEIGHT, value: SCREEN_HEIGHT },\r\n        { name: ParamUtil.ConstantType.PI, value: 3.14159265359 },\r\n        { name: ParamUtil.ConstantType.RADIAN_ROUND, value: 3.14159265359 * 2 }\r\n    ];\r\n}\r\n\r\nexport default PreviewUtil;","import { assert } from \"console\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport ParamUtil from \"./paramUtil\";\r\n\r\n\r\nnamespace LogicElementUtil {\r\n\r\n    export const getInnerNode = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode | null => {\r\n\r\n        let cur: TreeUtil.ElementNode | null = node;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const target = cur.children.find(child => (child.data as LogicUtil.WrapElement).type === type);\r\n            if (target == undefined) cur = null;\r\n            else cur = target;\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerWrap = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement | null => {\r\n\r\n        let cur: LogicUtil.WrapElement | null = wrap;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const listName = getListParamName(cur.type);\r\n            if (listName == null) cur = null;\r\n            else {\r\n                const list = cur.data[`${listName}`] as LogicUtil.WrapElement[];\r\n                const target = list.find(child => child.type === type);\r\n                if (target == undefined) cur = null;\r\n                else cur = target;\r\n            }\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const addChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode) => {\r\n        return insertChild(wrapElement, node, node.children.length);\r\n    }\r\n    export const insertChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode, listPos: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, 0, wrapElement);\r\n        const newNode = TreeUtil.createNode(wrapElement, node);\r\n        node.children.splice(listPos, 0, newNode);\r\n        return newNode;\r\n    }\r\n\r\n    export const removeChild = (node: TreeUtil.ElementNode, listPos: number, size: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, size);\r\n        node.children.splice(listPos, size);\r\n    }\r\n\r\n    export const isHead = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[0] == node;\r\n    }\r\n\r\n    export const isTail = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[ownerChildren.length - 1] == node;\r\n    }\r\n\r\n    const swapOrder = (node: TreeUtil.ElementNode, offset: number) => {\r\n        if (node.parent == null) return;\r\n        const ownerChildren = node.parent.children;\r\n        const wrap = node.parent.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        const ownDataChildren = wrap.data[`${listName}`] as LogicUtil.WrapElement[];\r\n\r\n        // 自身の要素番号を取得\r\n        let curNo = -1;\r\n        ownerChildren.some((it, i) => {\r\n            if (it == node) {\r\n                curNo = i;\r\n                return 1;\r\n            }\r\n        });\r\n        if (curNo === -1) return;\r\n\r\n        // ツリーノードの入れ替え\r\n        const swapNode = ownerChildren[curNo];\r\n        ownerChildren[curNo] = ownerChildren[curNo + offset];\r\n        ownerChildren[curNo + offset] = swapNode;\r\n        // データ要素の入れ替え\r\n        const swapData = ownDataChildren[curNo];\r\n        ownDataChildren[curNo] = ownDataChildren[curNo + offset];\r\n        ownDataChildren[curNo + offset] = swapData;\r\n    }\r\n\r\n    export const getSwapButtons = (node: TreeUtil.ElementNode, invalidate: () => void) => {\r\n        return <>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↑',\r\n                        isEnable: !LogicElementUtil.isHead(node),\r\n                        callback: () => {\r\n                            swapOrder(node, -1);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↓',\r\n                        isEnable: !LogicElementUtil.isTail(node),\r\n                        callback: () => {\r\n                            swapOrder(node, 1);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>;\r\n    }\r\n\r\n    export const getListParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return 'defs';\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            // case 'root':\r\n            case 'logic-item': return 'mngs';\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return 'params';\r\n            case 'inherit-mng': return 'inherits';\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return 'args';\r\n            case 'sample-mng': return 'samples';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'fields';\r\n            case 'thumbnail-mng': return 'items';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getIdentifyParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'argument-item':\r\n            case 'field-item':\r\n            case 'seed-item':\r\n            case 'thumbnail-item':\r\n            case 'seedarg-item':\r\n            case 'sample-item':\r\n            case 'logic-item': return 'name';\r\n            case 'connector': return 'id';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getNamableProps = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'connector': return 'id';\r\n            case 'logic-item': return 'name';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    export const syncTreeElementFromWrap = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        if (listName == null) return;\r\n        (wrap.data[listName] as any[]).forEach(childWrap => {\r\n            const newNode = TreeUtil.createNode(childWrap, node);\r\n            node.children.push(newNode);\r\n            syncTreeElementFromWrap(newNode);\r\n        });\r\n    }\r\n\r\n    export const createParamWrap = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem): LogicUtil.WrapElement => {\r\n        return { type: type, data: paramDataList };\r\n    }\r\n    export const createParamWrapList = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem[]): LogicUtil.WrapElement[] => {\r\n        return paramDataList.map(data => {\r\n            return { type: type, data: data };\r\n        });\r\n    }\r\n\r\n    export const createVisualParams = (): LogicUtil.WrapElement[] => {\r\n        const type = ParamUtil.VisualParamType;\r\n        return createParamWrapList('param-item', [\r\n            { name: type.RADIUS, formulaItems: ['var'], values: [{ type: 'direct', value: '20' }] },\r\n            { name: type.COLOR_R, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_G, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_B, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_A, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n        ]);\r\n    }\r\n\r\n    export const createBehaviorParams = (): LogicUtil.WrapElement[] => {\r\n        const list: LogicUtil.NodeParamItem[] = [];\r\n        const type = ParamUtil.BehaviorParamType;\r\n        list.push({\r\n            name: type.LIMIT,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '30' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        return createParamWrapList('param-item', list);\r\n    }\r\n\r\n    export const getDefaultLogicMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'visual-mng',\r\n                data: {\r\n                    params: createVisualParams()\r\n                } as LogicUtil.NodeParamManager\r\n            },\r\n            {\r\n                type: 'behavior-mng',\r\n                data: {\r\n                    params: createBehaviorParams()\r\n                } as LogicUtil.NodeParamManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    export const getInitialData = (): LogicUtil.WrapElement => {\r\n        return {\r\n            type: 'root',\r\n            data: {\r\n                seedMng: {\r\n                    type: 'seed-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeSeedManager\r\n                } as LogicUtil.WrapElement,\r\n                logicMng: {\r\n                    type: 'logic-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeLogicManager\r\n                } as LogicUtil.WrapElement\r\n            } as LogicUtil.NodeRoot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 同階層の名前パラメータを持つ要素より、既存の名前一覧を取得する。\r\n     * @param node 現在のノード\r\n     * @returns 同階層の既存の名前一覧\r\n     */\r\n    export const getExistNameList = (node: TreeUtil.ElementNode) => {\r\n        const nameList: string[] = [];\r\n        const curWrap = node.data as LogicUtil.WrapElement;\r\n        const nameParam = getIdentifyParamName(curWrap.type);\r\n        const mngWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listParam = getListParamName(mngWrap.type);\r\n        if (listParam == null || nameParam == null) return [];\r\n        const list = mngWrap.data[listParam] as LogicUtil.WrapElement[];\r\n        list.forEach(wrap => {\r\n            if (wrap.data != null && curWrap != wrap) {\r\n                nameList.push(wrap.data[nameParam]);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getLogicNameList = (mng: LogicUtil.NodeLogicManager) => {\r\n        const nameList: string[] = [];\r\n        mng.defs.forEach(logic => {\r\n            if (logic.data != null) {\r\n                nameList.push((logic.data as LogicUtil.NodeLogicItem).name);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getParamNameList = (curLogicOwner: LogicUtil.NodeLogicItem) => {\r\n        const nameList: string[] = [];\r\n\r\n        // システム固有のパラメータ名を取得\r\n        ParamUtil.VisualParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.BehaviorParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.SelfParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ExtendParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.EffectParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ModulateParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.Constants.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n\r\n        // 引数のパラメータ名を取得\r\n        const argMng = curLogicOwner.mngs.find(mng => mng.type === 'argument-mng');\r\n        if (argMng != undefined) {\r\n            const args = (argMng.data as LogicUtil.NodeArgumentManager).args;\r\n            args.forEach(arg => {\r\n                if (arg.data != null) {\r\n                    nameList.push((arg.data as LogicUtil.NodeArgumentItem).name);\r\n                }\r\n            });\r\n        }\r\n        // フィールドのパラメータ名を取得\r\n        const fieldMng = curLogicOwner.mngs.find(mng => mng.type === 'field-mng');\r\n        if (fieldMng != undefined) {\r\n            const fields = (fieldMng.data as LogicUtil.NodeFieldManager).fields;\r\n            fields.forEach(field => {\r\n                if (field.data != null) {\r\n                    nameList.push((field.data as LogicUtil.NodeParamItem).name);\r\n                }\r\n            });\r\n        }\r\n        return nameList;\r\n    }\r\n\r\n    /**\r\n     * 子要素の接頭連番をチェックし、重複しない名称を返す。\r\n     * @param prefix 接頭語\r\n     * @param node 基準となるノード\r\n     */\r\n    export const getNumberingOnPrefixName = (prefix: string, node: TreeUtil.ElementNode) => {\r\n        let num = 0;\r\n        // 接頭番号を取得\r\n        while (true) {\r\n            const check = node.children.find(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                if (wrap.data == null) return false;\r\n                console.log(wrap);\r\n                return wrap.data[getNamableProps(wrap.type)] === `${prefix}${num}`;\r\n            });\r\n            if (check != undefined) num++;\r\n            else break;\r\n        }\r\n        return `${prefix}${num}`;\r\n    }\r\n\r\n    /**\r\n     * パラメータの式で参照されている変数を検索し、\r\n     * 任意の処理（callback）を実行する。\r\n     * @param node 現在のノード\r\n     * @param callback 処理\r\n     */\r\n    export const searchVariableReferInFormula = (node: TreeUtil.ElementNode, callback: Function) => {\r\n\r\n        const mngType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const getLogicItem = () => {\r\n            switch (mngType) {\r\n                case 'field-mng':\r\n                case 'argument-mng': return node.parent?.parent?.data as LogicUtil.WrapElement;\r\n                case 'inhfld-mng': return node.parent?.parent?.parent?.parent?.data as LogicUtil.WrapElement;\r\n            }\r\n        }\r\n        const logicItem = getLogicItem()?.data as LogicUtil.NodeLogicItem;\r\n        if (mngType === 'argument-mng') {\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (fieldMng != undefined) {\r\n                callback((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n        }\r\n        if (mngType !== 'inhfld-mng') {\r\n            const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n            if (visualMng != undefined) {\r\n                callback((visualMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n            const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n            if (behaviorMng != undefined) {\r\n                callback((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n        }\r\n        const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                if (mngType !== 'inhfld-mng') {\r\n                    const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                    // Inherit配下のField要素のチェック\r\n                    if (inhfld != null) {\r\n                        callback((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                    }\r\n                }\r\n                // Extend要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default LogicElementUtil;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\n\r\nnamespace LogicPreviewFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        rootData: LogicUtil.WrapElement;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n\r\n        const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n        const [sceens, setSceens] = useState<string[]>([]);\r\n        const [frameCnt, setFrameCnt] = useState<number>(-1);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isBuild, setBuild] = useState<boolean>(false);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n        const argMapList = useMemo((): { key: string, value: string }[] => {\r\n            const type = (props.node.data as LogicUtil.WrapElement).type;\r\n            switch (type) {\r\n                case 'logic-item': {\r\n                    const argWrap = LogicElementUtil.getInnerWrap(props.node.data, 'argument-mng');\r\n                    if (argWrap != null) {\r\n                        return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                            const argItem = arg.data as LogicUtil.NodeArgumentItem;\r\n                            let value: string = '';\r\n                            return { key: argItem.name, value };\r\n                        });\r\n                    }\r\n                } break;\r\n                case 'seed-item': {\r\n                    const argWrap = LogicElementUtil.getInnerWrap(props.node.data, 'interface-mng', 'seedarg-mng');\r\n                    if (argWrap != null) {\r\n                        return (argWrap.data as LogicUtil.NodeSeedArgManager).args.map(arg => {\r\n                            const argItem = arg.data as LogicUtil.NodeSeedArgItem;\r\n                            let value: string = '';\r\n                            if (argItem.defval != undefined) value = argItem.defval.toString();\r\n                            return { key: argItem.name, value };\r\n                        });\r\n                    }\r\n                } break;\r\n            }\r\n            return [];\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n            setFormList(argMapList.map(arg => {\r\n                return { value: arg.value, errors: [] };\r\n            }));\r\n        }, []);\r\n\r\n        const formListJsx = useMemo(() => {\r\n            return formList.map((form, i) => {\r\n                return (\r\n                    <FormUtil.FormRecord\r\n                        key={i}\r\n                        titleLabel={argMapList.map(arg => arg.key)[i]}\r\n                        labelWidth={250}\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={332}\r\n                                isNumber\r\n                                checkable={form}\r\n                                setCheckable={(checkable) => {\r\n                                    form = { ...checkable };\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />);\r\n            });\r\n        }, [formList]);\r\n\r\n        const build = () => {\r\n\r\n            setBuild(true);\r\n\r\n            const sceens: string[] = [];\r\n\r\n            const owner: Particle.Instance[] = [];\r\n\r\n            let frameCnt = 0;\r\n            do {\r\n                if (frameCnt === 0) {\r\n                    const getOrigin = () => {\r\n                        const type = (props.node.data as LogicUtil.WrapElement).type as 'logic-item' | 'seed-item';\r\n                        switch (type) {\r\n                            case 'logic-item': return (props.node.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n                            case 'seed-item': {\r\n                                const seed = (props.node.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n                                const root = (props.node.parent?.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeRoot;\r\n                                const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                                return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                            }\r\n                        }\r\n                    }\r\n                    owner.push(new Particle.Instance(\r\n                        PreviewUtil.buildLogicProps(owner, getOrigin(), props.rootData, formList.map((form, i) => {\r\n                            return { name: argMapList.map(arg => arg.key)[i], value: Number(form.value) }\r\n                        }))\r\n                    ));\r\n                }\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n\r\n                    // 経過フレーム、要素数の表示\r\n                    ctx.globalAlpha = 1;\r\n                    ctx.font = '16pt Arial';\r\n                    ctx.fillStyle = '#ffffff';\r\n                    ctx.fillText(`${frameCnt}`, 6, 24);\r\n                    ctx.fillStyle = '#ffec5c';\r\n                    ctx.fillText(`${owner.length}`, 6, 44);\r\n\r\n                    ctx.save();\r\n                }));\r\n\r\n                // パーティクルの更新\r\n                for (let i = owner.length - 1; i >= 0; i--) {\r\n                    const particle = owner[i];\r\n\r\n                    particle.update();\r\n                }\r\n\r\n                // 死滅したパーティクルの削除\r\n                for (let i = owner.length - 1; i >= 0; i--) {\r\n                    const particle = owner[i];\r\n                    if (!particle.isLive) {\r\n                        owner.splice(i, 1);\r\n                    }\r\n                }\r\n\r\n                if (frameCnt > 500 || owner.length > 3000) break;\r\n                frameCnt++;\r\n            } while (owner.length > 0);\r\n            setFrameCnt(frameCnt);\r\n            setSceens(sceens);\r\n\r\n            setBuild(false);\r\n            setTabIndex(1);\r\n        }\r\n\r\n\r\n        const isInputOK = () => {\r\n            return formList.find(form => form.errors.length > 0) == undefined;\r\n        }\r\n        const buildTabJsx = (\r\n            <_Wrap>\r\n                <_FormDiv>\r\n                    {formListJsx}\r\n                </_FormDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Build',\r\n                            isEnable: isInputOK() && !isBuild,\r\n                            callback: () => {\r\n                                build();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / (frameCnt - 1)} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    if (tabIndex === 0) {\r\n                        if (isInputOK() && e.key === ' ') build();\r\n                    } else {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                            } break;\r\n                            case 'ArrowRight': {\r\n                                if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                            } break;\r\n                            case ' ': {\r\n                                setPlay(!isPlay);\r\n                            } break;\r\n                        }\r\n                    }\r\n                    if (!isPlay && e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }}\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Build', enable: true, cont: buildTabJsx },\r\n                            { name: 'Play', enable: frameCnt !== -1, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogicPreviewFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _FormDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 580px;\r\n    background-color: #a2c1d5df;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #aed5d8e0;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorArgumentMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'argument-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentMng;","import { useContext, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nnamespace ModifyOperations {\r\n\r\n    export type Props = {\r\n        mappingForm: () => void;\r\n        checkableFields: FormUtil.CheckableValue[];\r\n        isInputOK?: boolean;\r\n        firstRegist: () => void;\r\n        modifyRegist: () => void;\r\n    }\r\n\r\n    export const Component = (props: Props) => {\r\n        const { node, isModify, setModify, removeSelf } = useContext(FactoryTreeContext);\r\n\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n        const isComplete = FormUtil.isCompleteCheck(props.checkableFields);\r\n\r\n        return (<>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: isModify,\r\n                        callback: () => {\r\n                            if (wrap.data == null) {\r\n                                removeSelf();\r\n                            } else {\r\n                                props.mappingForm();\r\n                            }\r\n                            setModify(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !isModify || (props.isInputOK ?? isComplete),\r\n                        callback: () => {\r\n                            if (!isModify) {\r\n                                setModify(true);\r\n                            } else {\r\n                                if (wrap.data == null) {\r\n                                    props.firstRegist();\r\n                                } else {\r\n                                    props.modifyRegist();\r\n                                }\r\n                                setModify(false);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default ModifyOperations;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype FormProps = {\r\n    inputType: FormUtil.CheckableValue;\r\n    value: FormUtil.CheckableValue;\r\n};\r\n\r\nenum Level {\r\n    FIELD = 0,\r\n    INITIAL,\r\n    INHERIT_FIELD,\r\n    INHERIT_EXTEND,\r\n    INHERIT_SEND\r\n}\r\n\r\nconst EditorParamItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    /** 名前 */\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    /** 式 */\r\n    const [formulaItems, setFormulaItems] = useState<string[]>([]);\r\n    /** 変数の入力フォーム */\r\n    const [varFormList, setVarFormList] = useState<FormProps[]>([]);\r\n    // const [formJsxList, setFaormJsxList] = useState<JSX.Element[]>([]);\r\n\r\n    const isField = wrap.type === 'field-item';\r\n    const isCondition = wrap.type === 'condition-item';\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        setName({ value: param.name, errors: [] });\r\n        setFormulaItems(param.formulaItems.slice());\r\n        setVarFormList(param.values.map(v => {\r\n            return {\r\n                inputType: { value: v.type, errors: [] },\r\n                value: { value: v.value, errors: [] }\r\n            }\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const level: Level = useMemo(() => {\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        switch (parentType) {\r\n            case 'field-mng': return Level.FIELD;\r\n            case 'visual-mng':\r\n            case 'behavior-mng': return Level.INITIAL;\r\n            case 'inhfld-mng': return Level.INHERIT_FIELD;\r\n            case 'extend-mng': return Level.INHERIT_EXTEND;\r\n            case 'send-mng': return Level.INHERIT_SEND;\r\n        }\r\n        return -1;\r\n    }, [node]);\r\n\r\n    /**\r\n     * 引数とフィールド変数のキーリストを取得する。\r\n     */\r\n    const [argumentList, fieldKeyList] = useMemo(() => {\r\n        let argumentList: string[] = [];\r\n        const fieldKeys: string[] = [];\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const targetTypes: LogicUtil.NodeType[] = ['field-mng', 'behavior-mng', 'visual-mng', 'inhfld-mng', 'send-mng', 'extend-mng'];\r\n        if (targetTypes.includes(parentType)) {\r\n            const getLogicNode = () => {\r\n                switch (parentType) {\r\n                    case 'field-mng':\r\n                    case 'visual-mng':\r\n                    case 'behavior-mng': return node.parent?.parent;\r\n                    case 'inhfld-mng':\r\n                    case 'send-mng':\r\n                    case 'extend-mng': return node?.parent?.parent?.parent?.parent;\r\n                }\r\n            };\r\n            const logicItem = (getLogicNode()?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n            // 引数リストを追加\r\n            const argMng = logicItem.mngs.find(mng => mng.type === 'argument-mng');\r\n            if (argMng != undefined) {\r\n                argumentList = (argMng.data as LogicUtil.NodeArgumentManager).\r\n                    args.map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n            }\r\n            // 変数リストを追加\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (level >= Level.INITIAL && fieldMng != undefined) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                    fieldKeys.push(fieldName);\r\n                });\r\n            }\r\n        } else if (parentType === 'seedsend-mng') {\r\n            // シード配下のSendは特別に扱う（どのレベルにも属さない）\r\n            const argMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'seedarg-mng');\r\n            if (argMng != null) {\r\n                argumentList = (argMng.data as LogicUtil.NodeSeedArgManager).\r\n                    args.map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n            } else throw new Error('argMng is undefined.');\r\n        }\r\n        if (level >= Level.INHERIT_FIELD) {\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_RAD);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_LEN);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.RADIUS);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_R);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_G);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_B);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // フィールドキーにInherit配下のFieldパラメータを追加\r\n            if (level >= Level.INHERIT_EXTEND) {\r\n                const inhfldNode = LogicElementUtil.getInnerNode(node.parent?.parent as TreeUtil.ElementNode, 'inhfld-mng');\r\n                if (inhfldNode != null) {\r\n                    const fieldMng = (inhfldNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeFieldManager;\r\n                    fieldMng.fields.forEach(field => {\r\n                        const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                        fieldKeys.push(fieldName);\r\n                    });\r\n                }\r\n            }\r\n            // フィールドキーにExtendパラメータを追加\r\n            if (level === Level.INHERIT_SEND) {\r\n                const extendWrap = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'extend-mng') as LogicUtil.WrapElement;\r\n                const extendElement = extendWrap.data as LogicUtil.NodeParamManager;\r\n                //Extendにloop_countのパラメータがある場合\r\n                if (extendElement.params.find(\r\n                    param => (param.data as LogicUtil.NodeParamItem).name === ParamUtil.ExtendParamType.LOOP_COUNT\r\n                ) != undefined) {\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_COUNT);\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_ITERATE);\r\n                }\r\n            }\r\n        }\r\n        return [argumentList, fieldKeys];\r\n    }, [node]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const paramNameList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (item === 'var') num++;\r\n        });\r\n\r\n        if (varFormList.length < num) {\r\n            const addNum = num - varFormList.length;\r\n            for (let i = 0; i < addNum; i++) varFormList.push({\r\n                inputType: { value: 'direct', errors: [] },\r\n                value: { value: '', errors: [] }\r\n            });\r\n            setVarFormList(varFormList.slice());\r\n        } else if (varFormList.length > num) {\r\n            const delNum = varFormList.length - num;\r\n            for (let i = 0; i < delNum; i++) varFormList.splice(varFormList.length - delNum, delNum);\r\n            setVarFormList(varFormList.slice());\r\n        }\r\n    }, [formulaItems]);\r\n\r\n    /** 「(」の数-「)」の数 */\r\n    const parenthesisBalance = useMemo(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (['(', 'rand(', 'integer('].includes(item)) num++;\r\n            else if (item === ')') num--;\r\n        });\r\n        return num;\r\n    }, [formulaItems]);\r\n\r\n    /** 値の入力フォームのJSX */\r\n    const formJsxList = useMemo(() => {\r\n        return varFormList.map((v, i) => {\r\n\r\n            const getValueForm = (): JSX.Element => {\r\n                const type = v.inputType.value as LogicUtil.ParamInputType;\r\n                if (type === 'direct') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isNumber\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else {\r\n                    let list: string[] = [];\r\n                    if (type === 'argument') {\r\n                        list = argumentList;\r\n                    } else if (type === 'field') {\r\n                        list = fieldKeyList;\r\n                    } else if (type === 'self') {\r\n                        list = ParamUtil.SelfParams;\r\n                    } else if (type === 'constant') {\r\n                        list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                    }\r\n                    return (\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            list={list.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n            return <FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={`var_${i}`}\r\n                labelWidth={90}\r\n                marginTop={i === 0 ? 4 : 0}\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        checkable={v.inputType}\r\n                        width={142}\r\n                        isReadOnly={!isModify}\r\n                        setCheckable={(checkable) => {\r\n                            varFormList[i].inputType = checkable;\r\n                            if (isModify) {\r\n                                varFormList[i].value.value = checkable.value === 'direct' ? '0' : '';\r\n                            }\r\n                            setVarFormList(varFormList.slice());\r\n                        }}\r\n                        list={LogicUtil.ParamInputTypes.filter(item => {\r\n                            switch (item) {\r\n                                case 'direct':\r\n                                case 'constant':\r\n                                case 'argument': return true;\r\n                                case 'field': return level >= Level.INITIAL;\r\n                                case 'self': return level >= Level.INHERIT_FIELD;\r\n                            }\r\n                        }).map(item => {\r\n                            return { value: item, labelText: item };\r\n                        })}\r\n                    />\r\n                    {getValueForm()}\r\n                </>}\r\n            />;\r\n        });\r\n    }, [varFormList, isModify]);\r\n\r\n    const getFormulaJsx = () => {\r\n        let num = 0;\r\n        const jsxList: JSX.Element[] = [];\r\n        formulaItems.forEach((item) => {\r\n            if (jsxList.length > 0) {\r\n                jsxList.push(<span key={jsxList.length}>&nbsp;</span>);\r\n            }\r\n            if (item === 'var') {\r\n                jsxList.push(<_Var key={jsxList.length}>{`$\\{var_${num}}`}</_Var>);\r\n                num++;\r\n            } else {\r\n                jsxList.push(<_Sig key={jsxList.length}>{item}</_Sig>);\r\n            }\r\n        });\r\n        return jsxList;\r\n    }\r\n\r\n    const isLastVar = () => formulaItems.length > 0 && ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const isFormulaOK = parenthesisBalance === 0 && varFormList.length > 0 &&\r\n        ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const hasFormError = !isFormulaOK || varFormList.find(varForm => varForm.value.errors.length > 0) != undefined;\r\n\r\n\r\n    const getFormulaItem = (label: string, width: number, isEnable: boolean, value: string) => {\r\n        return {\r\n            label, width, isEnable,\r\n            callback: () => {\r\n                formulaItems.push(value);\r\n                setFormulaItems(formulaItems.slice());\r\n            }\r\n        };\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeParamItem = {\r\n                    name: name.value,\r\n                    formulaItems: formulaItems.slice(),\r\n                    values: varFormList.map(varForm => {\r\n                        return {\r\n                            type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                            value: varForm.value.value\r\n                        }\r\n                    })\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n            }}\r\n            isInputOK={parenthesisBalance === 0 && !hasFormError && name.errors.length === 0}\r\n            modifyRegist={() => {\r\n                const data = wrap.data as LogicUtil.NodeParamItem;\r\n                data.formulaItems = formulaItems.slice();\r\n                data.values = varFormList.map(varForm => {\r\n                    return {\r\n                        type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                        value: varForm.value.value\r\n                    }\r\n                });\r\n                if (isField) {\r\n                    const prevName = data.name;\r\n                    data.name = name.value;\r\n                    if (prevName !== name.value) {\r\n                        syncFieldName(node.parent as TreeUtil.ElementNode, prevName, name.value);\r\n                    }\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify || !isField}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = paramNameList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeParamItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('+', 50, isModify && isLastVar(), '+'),\r\n                        getFormulaItem('-', 50, isModify && isLastVar(), '-'),\r\n                        getFormulaItem('*', 50, isModify && isLastVar(), '*'),\r\n                        getFormulaItem('/', 50, isModify && isLastVar(), '/'),\r\n                        getFormulaItem('%', 50, isModify && isLastVar(), '%'),\r\n                        getFormulaItem('(', 35, isModify && !isLastVar(), '('),\r\n                        getFormulaItem(')', 35, isModify && isLastVar() && parenthesisBalance > 0, ')'),\r\n                        {\r\n                            label: 'del',\r\n                            width: 60,\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            callback: () => {\r\n                                formulaItems.splice(formulaItems.length - 1, 1);\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {!isCondition ? <></> : (\r\n                    <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            getFormulaItem('<', 50, isModify && isLastVar(), '<'),\r\n                            getFormulaItem('<=', 50, isModify && isLastVar(), '<='),\r\n                            getFormulaItem('=', 50, isModify && isLastVar(), '='),\r\n                            getFormulaItem('>=', 50, isModify && isLastVar(), '>='),\r\n                            getFormulaItem('>', 50, isModify && isLastVar(), '>'),\r\n                            getFormulaItem('&&', 50, isModify && isLastVar(), '&&'),\r\n                            getFormulaItem('||', 50, isModify && isLastVar(), '||'),\r\n                        ]}\r\n                    />\r\n                )}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('var', 70, isModify && !isLastVar(), 'var'),\r\n                        getFormulaItem('rand', 80, isModify && !isLastVar(), 'rand('),\r\n                        getFormulaItem('integer', 80, isModify && !isLastVar(), 'integer('),\r\n                        {\r\n                            label: 'clear',\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            width: 90,\r\n                            callback: () => {\r\n                                setFormulaItems([]);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_Formula\r\n                    isInvalid={!isFormulaOK}\r\n                >{getFormulaJsx()}</_Formula>\r\n                {formJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify && isField}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getFieldRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {!isField ? <></> : LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorParamItem;\r\n\r\n\r\n/**\r\n * ノードの変数を参照している箇所のリストを返す。\r\n * @param node 変数のノード\r\n * @param argName 変数名\r\n * @returns 参照パラメータリスト\r\n */\r\nexport const getFieldRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n * フィールド名の変更に伴い、式で参照している変数を同期する\r\n * @param mngNode ノード\r\n */\r\nexport const syncFieldName = (mngNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const type = (mngNode.data as LogicUtil.WrapElement).type;\r\n    if (type === 'field-mng') {\r\n        const logic = (mngNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n\r\n        const visualMng = logic.mngs.find(mng => mng.type === 'visual-mng');\r\n        if (visualMng != undefined) {\r\n            syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const behaviorMng = logic.mngs.find(mng => mng.type === 'behavior-mng');\r\n        if (behaviorMng != undefined) {\r\n            syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                // Inherit配下のField要素のチェック\r\n                if (inhfld != null) {\r\n                    syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                }\r\n                // Extend要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    } else if (type === 'inhfld-mng') {\r\n        const inheritWrap = mngNode.parent?.data as LogicUtil.WrapElement;\r\n\r\n        // Extend要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        // Send要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n}\r\n\r\nconst _Formula = styled.div<{\r\n    isInvalid: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 12px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    overflow-wrap: break-word;\r\n    height: 100px;//calc(100% - 4px);\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    background-color: #ffffff8b;\r\n    ${props => !props.isInvalid ? '' : css`\r\n        background-color: #ffe8628a;\r\n    `}\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    padding: 0 0 0 4px;\r\n    vertical-align: top;\r\n    margin: 5px 0 0 6px;\r\n`;\r\nconst _Var = styled.span`\r\n    color: #e70013;\r\n`;\r\nconst _Sig = styled.span`\r\n    color: #3333339d;\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport GloballDialog from \"../../../../dialog/globalDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorArgumentItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n        setName({ ...name, value: param.name });\r\n        setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, argType]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeArgumentItem = {\r\n                    name: name.value,\r\n                    valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n                syncArgumentAdd(node.parent?.parent as TreeUtil.ElementNode, name.value);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(node.parent?.parent as TreeUtil.ElementNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = reservedList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeArgumentItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'color' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getArgumentRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    // DependしているInheritのSendパラメータを同期する\r\n                                    syncArgumentDel(node.parent?.parent as TreeUtil.ElementNode, name.value);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentItem;\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param node 引数のノード\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nexport const getArgumentRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param logicNode ロジックノード\r\n*/\r\nexport const syncArgumentName = (logicNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n    const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n    if (fieldMng != undefined) {\r\n        syncFormula((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n    }\r\n    const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n    if (visualMng != undefined) {\r\n        syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n    if (behaviorMng != undefined) {\r\n        syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n    if (inhMng != undefined) {\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n            // Inherit配下のField要素のチェック\r\n            if (inhfld != null) {\r\n                syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n            // Extend要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            // Send要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        });\r\n    }\r\n\r\n    const syncParamName = (params: LogicUtil.WrapElement[]) => {\r\n        params.forEach(wrap => {\r\n            const item = wrap.data as LogicUtil.NodeParamItem;\r\n            if (item.name === prevName) {\r\n                item.name = newName;\r\n            }\r\n        });\r\n    }\r\n    if (wrap.type === 'logic-item') {\r\n\r\n        // dependしている箇所を全て反映するために再帰で洗う\r\n        const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n            const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n            if (inhMng == undefined) return;\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    const inhLogic = (LogicElementUtil.getInnerWrap(inh, 'inherit-logic') as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n                    runRec(inhLogic);\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    const sendMng = (LogicElementUtil.getInnerWrap(inh, 'send-mng') as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n                    syncParamName(sendMng.params);\r\n                }\r\n            });\r\n        }\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(logic => {\r\n            runRec((logic.data as LogicUtil.WrapElement).data);\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const connWrap = logicNode.parent?.data as LogicUtil.WrapElement;\r\n        const sendMng = (LogicElementUtil.getInnerWrap(connWrap, 'send-mng') as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        syncParamName(sendMng.params);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の更新に伴い、参照先のSend管理に処理（callback）を行う\r\n * @param logicNode ロジックノード\r\n * @param callback 処理\r\n */\r\nconst syncArgumentCallback = (\r\n    logicNode: TreeUtil.ElementNode,\r\n    callback: (sendNode: TreeUtil.ElementNode) => void\r\n) => {\r\n\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n\r\n    if (wrap.type === 'logic-item') {\r\n        const runRec = (logicNode: TreeUtil.ElementNode) => {\r\n            const inhMngNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'inherit-mng');\r\n            if (inhMngNode == undefined) return;\r\n            inhMngNode.children.forEach(child => {\r\n                const conn = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    runRec(LogicElementUtil.getInnerNode(child, 'inherit-logic') as TreeUtil.ElementNode);\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    callback(LogicElementUtil.getInnerNode(child, 'extend-mng') as TreeUtil.ElementNode);\r\n                }\r\n            });\r\n        }\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(child => {\r\n            runRec(child);\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const sendNode = LogicElementUtil.getInnerNode(logicNode.parent as TreeUtil.ElementNode, 'send-mng') as TreeUtil.ElementNode;\r\n        callback(sendNode);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentAdd = (logicNode: TreeUtil.ElementNode, newArgName: string) => {\r\n    const addNewParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n            { name: newArgName, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n        );\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        sendMng.params.push(paramWrap);\r\n        sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n    }\r\n    syncArgumentCallback(logicNode, addNewParam);\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentDel = (logicNode: TreeUtil.ElementNode, delArgName: string) => {\r\n    const delArgParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        let delIndex = -1;\r\n        sendMng.params.some((param, i) => {\r\n            if ((param.data as LogicUtil.NodeParamItem).name == delArgName) {\r\n                delIndex = i;\r\n                return 1;\r\n            }\r\n        });\r\n        sendMng.params.splice(delIndex, 1);\r\n        sendNode.children.splice(delIndex, 1);\r\n    }\r\n    syncArgumentCallback(logicNode, delArgParam);\r\n}","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Seed',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seed-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedManager).defs.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorLogicMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Logic',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'logic-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\n\r\nconst EditorLogicItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [isConnect, hasArgNode, hasFieldNode, hasConnectNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        return [\r\n            parentType === 'connector',\r\n            list.includes('argument-mng'),\r\n            list.includes('field-mng'),\r\n            list.includes('inherit-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        if (!isConnect) {\r\n            const param = wrap.data as LogicUtil.NodeLogicItem;\r\n            setName({ ...name, value: param.name });\r\n        }\r\n    };\r\n\r\n    /** 既存のロジック名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => {\r\n        // インヘリットの場合、名前を持たないため取得しない\r\n        if (wrap.type === 'inherit-logic') return [];\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node, isConnect]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 引数要素の有無を判定\r\n     */\r\n    const hasArgument = () => {\r\n        const argumentNode = LogicElementUtil.getInnerNode(node, 'argument-mng');\r\n        if (argumentNode == null) return false;\r\n        return argumentNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'field-mng');\r\n        if (fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 派生要素の有無を判定\r\n     */\r\n    const hasInherit = () => {\r\n        const inheritNode = LogicElementUtil.getInnerNode(node, 'inherit-mng');\r\n        if (inheritNode == null) return false;\r\n        return inheritNode.children.length > 0;\r\n    }\r\n\r\n    return (<>\r\n        {isConnect ? <></> : (<>\r\n            <ModifyOperations.Component\r\n                mappingForm={mappingForm}\r\n                checkableFields={[name]}\r\n                firstRegist={() => {\r\n                    const element: LogicUtil.NodeLogicItem = {\r\n                        name: name.value,\r\n                        mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                    };\r\n                    element.name = name.value;\r\n                    wrap.data = element;\r\n\r\n                    element.mngs.forEach(mng => {\r\n                        const newNode = TreeUtil.createNode(mng, node);\r\n                        const data = (newNode.data as LogicUtil.WrapElement).data;\r\n                        (data as LogicUtil.NodeParamManager).params.forEach(param => {\r\n                            newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                        });\r\n                        node.children.push(newNode);\r\n                    });\r\n                    invalidate();\r\n                    setStore({ ...store });\r\n                }}\r\n                modifyRegist={() => {\r\n                    const param = wrap.data as LogicUtil.NodeLogicItem;\r\n                    const prevName = param.name;\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n                    // 名前が変わった場合、参照箇所も修正する\r\n                    if (prevName !== param.name) {\r\n                        syncLogicName(node, prevName, param.name);\r\n                    }\r\n                }}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"param\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Name\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={200}\r\n                                isReadOnly={!isModify}\r\n                                checkable={name}\r\n                                setCheckable={setName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => !existNameList.includes(value),\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n        </>)}\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Argument'}\r\n                        width={300}\r\n                        isUse={hasArgNode}\r\n                        isEnable={!hasArgument()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasArgNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'argument-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as LogicUtil.NodeArgumentManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            if (hasArgNode) listPos++;\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'field-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Inherit'}\r\n                            width={300}\r\n                            isUse={hasConnectNode}\r\n                            isEnable={!hasInherit()}\r\n                            callback={() => {\r\n                                let listPos = 2;\r\n                                if (hasArgNode) listPos++;\r\n                                if (hasFieldNode) listPos++;\r\n                                toggleElement(\r\n                                    hasConnectNode,\r\n                                    listPos,\r\n                                    {\r\n                                        type: 'inherit-mng',\r\n                                        data: {\r\n                                            inherits: []\r\n                                        } as LogicUtil.NodeConnectManager\r\n                                    }\r\n                                );\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        {isConnect ? <></> : (\r\n            <FormUtil.BorderPanel\r\n                title=\"operation\"\r\n                isEnable={!isModify}\r\n                innerJsx={<>\r\n                    <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Clone',\r\n                                // isEnable: !isModify,\r\n                                isEnable: false,\r\n                                callback: () => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Clone this logic.\"\r\n                                        buttons={[\r\n                                            {\r\n                                                label: 'Cancel',\r\n                                                callback: () => {\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                label: 'Enter',\r\n                                                callback: () => {\r\n                                                    let rootNode = node;\r\n                                                    while (rootNode.parent != null) rootNode = rootNode.parent;\r\n                                                    const inheritNode = node.children.find(el => (el.data as LogicUtil.WrapElement).type === 'inherit-logic');\r\n                                                    const logicMngNode = rootNode.children.find(el => (el.data as LogicUtil.WrapElement).type === 'logic-mng');\r\n                                                    if (logicMngNode == undefined || inheritNode == undefined) return;\r\n                                                    const inherit = (inheritNode.data as LogicUtil.WrapElement).data;\r\n                                                    const clone = JSON.parse(JSON.stringify((inherit))) as LogicUtil.NodeInheritItem;\r\n                                                    // ロジック名（自動命名）を取得\r\n                                                    const defaultName = LogicElementUtil.getNumberingOnPrefixName('clone_inherit_', logicMngNode);\r\n                                                    const logicItem: LogicUtil.NodeLogicItem = {\r\n                                                        ...clone,\r\n                                                        name: defaultName\r\n                                                    };\r\n                                                    const newWrap: LogicUtil.WrapElement = {\r\n                                                        type: 'logic-item',\r\n                                                        data: logicItem\r\n                                                    };\r\n\r\n                                                    // ロジックマネージャに追加\r\n                                                    const newNode = LogicElementUtil.addChild(newWrap, logicMngNode);\r\n                                                    // 子要素の展開\r\n                                                    newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                    // 自身（コネクタ）からインヘリット要素を削除\r\n                                                    LogicElementUtil.removeChild(node, 2, 1);\r\n\r\n                                                    const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                    param.method = 'depend';\r\n                                                    param.depend = logicItem.name;\r\n                                                    mappingForm();\r\n\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                    invalidate();\r\n                                                }\r\n                                            }\r\n                                        ]}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Delete',\r\n                                callback: () => {\r\n                                    const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                    const refers = getLocgicRefers(node, param.name);\r\n                                    if (refers.length === 0) {\r\n                                        removeSelf();\r\n                                    } else {\r\n                                        store.system.dialog = <ConfirmDialog.Component\r\n                                            message={`[${param.name}] is referenced in the Inherit.\\n${refers}`}\r\n                                        />;\r\n                                        setStore({ ...store });\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                    {/* 並び順入れ替えボタン */}\r\n                    {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n                </>}\r\n            />\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicItem;\r\n\r\n/**\r\n * ロジックを参照しているInheritのリストを返す。\r\n * @param node 現在のノード\r\n * @param logicName ロジック名\r\n * @returns 参照Inheritリスト\r\n */\r\nexport const getLocgicRefers = (node: TreeUtil.ElementNode, logicName: string) => {\r\n\r\n    const refers: string[] = [];\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        refers.push(conn.id);\r\n    }\r\n    searchLogicReferInherit(node, logicName, callback);\r\n    return refers;\r\n}\r\n\r\n/**\r\n * ロジック名の変更に伴い、参照しているインヘリットを同期する\r\n * @param node ロジックノード\r\n */\r\nconst syncLogicName = (node: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        conn.depend = newName;\r\n    }\r\n    searchLogicReferInherit(node, prevName, callback);\r\n}\r\n\r\nconst searchLogicReferInherit = (\r\n    node: TreeUtil.ElementNode,\r\n    logicName: string,\r\n    callback: (conn: LogicUtil.NodeInheritConnector) => void\r\n) => {\r\n    const logicMngNode = node.parent as TreeUtil.ElementNode\r\n    const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng == undefined) return;\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n            if (conn.method === 'create') {\r\n                const inhLogic = LogicElementUtil.getInnerWrap(inh, 'inherit-logic');\r\n                runRec(inhLogic?.data);\r\n            } else {\r\n                if (conn.depend === logicName) {\r\n                    callback(conn);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    logicMngNode.children.forEach(logic => {\r\n        runRec((logic.data as LogicUtil.WrapElement).data);\r\n    });\r\n}","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorBehiviorMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [isVector, hasDecayParam, hasGravityParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.BehaviorParamType.VEC_X),\r\n            list.includes(ParamUtil.ModulateParamType.DECAY_RATE),\r\n            list.includes(ParamUtil.ModulateParamType.GRAVITY_VAL)\r\n        ]\r\n    }, [node]);\r\n\r\n    const exchangeElements = (flag: boolean, listPos: number,\r\n        trueParamElements: LogicUtil.NodeParamItem[],\r\n        falseParamElements: LogicUtil.NodeParamItem[]\r\n    ) => {\r\n        const size = (flag ? trueParamElements : falseParamElements).length;\r\n        LogicElementUtil.removeChild(node, listPos, size);\r\n\r\n        (flag ? trueParamElements : falseParamElements).forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    const exchangeVectorMethod = () => {\r\n        exchangeElements(!isVector, 3,\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_X, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_Y, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ],\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_RAD, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_LEN, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ]\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            mng.params.splice(listPos, size);\r\n            node.children.splice(listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                mng.params.splice(listPos + i, 0, wrap);\r\n                const newNode = TreeUtil.createNode(wrap, node);\r\n                node.children.splice(listPos + i, 0, newNode);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Vector method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Direction method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={!isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"modulate\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Decay'}\r\n                            width={300}\r\n                            isUse={hasDecayParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDecayParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_RATE,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.9' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Gravity'}\r\n                            width={300}\r\n                            isUse={hasGravityParam}\r\n                            callback={() => {\r\n                                toggleElements(hasGravityParam, !hasDecayParam ? 5 : 7, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_VAL,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.2' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorBehiviorMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype Medhod = 'blank' | 'particle' | 'snake'\r\n\r\nconst EditorVisualMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [drawMethod, hasDisappearParam, hasShrinkParam, hasFlashParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        let drawMethod: Medhod = 'blank';\r\n        if(list.length > 0) {\r\n            drawMethod = list.includes(ParamUtil.VisualParamType.THICKNESS) ? 'snake' : 'particle';\r\n        }\r\n        return [\r\n            drawMethod,\r\n            list.includes(ParamUtil.EffectParamType.DISAPPEAR_START),\r\n            list.includes(ParamUtil.EffectParamType.SHRINK_START),\r\n            list.includes(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME)\r\n        ]\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    const addElements = (paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        paramElements.forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n    const removeElements = (elementNameList: string[]) => {\r\n        const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        elementNameList.forEach((name) => {\r\n            mng.params.forEach((param, i) => {\r\n                if((param.data as LogicUtil.NodeParamItem).name === name) {\r\n                    LogicElementUtil.removeChild(node, i, 1);\r\n                }\r\n            });\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam || hasFlashParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'None'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'blank'}\r\n                            callback={() => {\r\n                                mng.params.length = 0;\r\n                                node.children.length = 0;\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Snake Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'snake'}\r\n                            callback={() => {\r\n                                removeElements([\r\n                                    ParamUtil.VisualParamType.RADIUS\r\n                                ]);\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.THICKNESS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Particle Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'particle'}\r\n                            callback={() => {\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.RADIUS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '20' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"effect\"\r\n            isEnable={!isModify && drawMethod !== 'blank'}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Disappear'}\r\n                            width={300}\r\n                            isUse={hasDisappearParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDisappearParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.DISAPPEAR_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Shrink'}\r\n                            width={300}\r\n                            isUse={hasShrinkParam}\r\n                            callback={() => {\r\n                                toggleElements(hasShrinkParam, !hasDisappearParam ? 5 : 6, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.SHRINK_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Flash'}\r\n                            width={300}\r\n                            isUse={hasFlashParam}\r\n                            callback={() => {\r\n                                toggleElements(hasFlashParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_APPEAR_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_HIDE_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorVisualMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInheritConnMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeConnectManager;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Inherit',\r\n                        callback: () => {\r\n                            const wrap: LogicUtil.WrapElement = {\r\n                                type: 'connector',\r\n                                data: null\r\n                            }\r\n                            mng.inherits.push(wrap);\r\n                            const newNode = TreeUtil.createNode(wrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorInheritConnector = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, invalidate, setModify, isModify, removeSelf, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const [condition, setCondition] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [identify, setIdentify] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [method, setMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [depend, setDepend] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n        setMethod({ ...method, value: param.method });\r\n        setDepend({ ...depend, value: param.depend });\r\n        setIdentify({ ...identify, value: param.id });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n            // 派生識別名（自動命名）の初期値を取得\r\n            const defaultName = LogicElementUtil.getNumberingOnPrefixName('id_', node.parent as TreeUtil.ElementNode);\r\n            setIdentify({ ...identify, value: defaultName });\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const isCreate = method.value === 'create';\r\n\r\n    const hasFieldNode = useMemo(() => {\r\n        return LogicElementUtil.getInnerNode(node, 'inhfld-mng') != null;\r\n    }, [node]);\r\n\r\n    /** 引用するロジックリスト */\r\n    const logicList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return inheritMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    /** 同階層の既存のインヘリットIDを取得（重複チェックに使用） */\r\n    const idList = useMemo(() => {\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    const initConnectorNode = (param: LogicUtil.NodeInheritConnector) => {\r\n        param.mngs = [];\r\n        node.children = [];\r\n        param.mngs.push({\r\n            type: 'extend-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        param.mngs.push({\r\n            type: 'send-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        if (isCreate) {\r\n            param.mngs.push({\r\n                type: 'inherit-logic',\r\n                data: {\r\n                    mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                } as LogicUtil.NodeInheritItem\r\n            });\r\n        }\r\n        wrap.data = param;\r\n\r\n        param.mngs.forEach(mng => {\r\n            const newNode = TreeUtil.createNode(mng, node);\r\n            const data = (newNode.data as LogicUtil.WrapElement);\r\n            switch (data.type) {\r\n                case 'inherit-logic': {\r\n                    LogicElementUtil.syncTreeElementFromWrap(newNode);\r\n                } break;\r\n                case 'send-mng': {\r\n                    const connector = (newNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.method === 'depend') {\r\n                        console.log('initSendParams');\r\n                        initSendParams(newNode, rootData);\r\n                    }\r\n                } break;\r\n            }\r\n            node.children.push(newNode);\r\n        });\r\n    }\r\n\r\n    const getSendParamList = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement): string[] => {\r\n        const connector = (sendNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = inheritMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement) => {\r\n        const sendParamList = getSendParamList(sendNode, rootData);\r\n        // console.log(sendParamList);\r\n        const wrap = sendNode.data as LogicUtil.WrapElement;\r\n        const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n                sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'inhfld-mng');\r\n        if(fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n\r\n    const isDisable = wrap.data == null ? false : (wrap.data as LogicUtil.NodeInheritConnector).disable ?? false;\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[identify, method, depend]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeInheritConnector = {\r\n                    method: method.value as LogicUtil.InheritMethod,\r\n                    depend: depend.value,\r\n                    id: identify.value,\r\n                    mngs: []\r\n                };\r\n                initConnectorNode(param);\r\n                invalidate();\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                const isChange = param.method !== method.value || param.depend !== depend.value;\r\n                param.method = method.value as LogicUtil.InheritMethod;\r\n                param.depend = depend.value;\r\n                param.id = identify.value;\r\n                wrap.data = param;\r\n\r\n                if (isChange) {\r\n                    initConnectorNode(param);\r\n                }\r\n                invalidate();\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={method}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                // createが選択されたらdependを空にする\r\n                                if (checkable.value === 'create') {\r\n                                    setDepend({ ...depend, value: '' });\r\n                                }\r\n                                setMethod(checkable);\r\n                            }}\r\n                            list={LogicUtil.ConnectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Depend\"\r\n                    isEnable={method.value === 'depend'}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={depend}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setDepend}\r\n                            list={logicList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            dependency={[method]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => {\r\n                                        return method.value !== 'depend' || ValidateUtil.checkRequired(value);\r\n                                    },\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Identify\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={identify}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setIdentify}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !idList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                0,\r\n                                {\r\n                                    type: 'inhfld-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Disable'}\r\n                        width={300}\r\n                        isUse={isDisable}\r\n                        isEnable={!isModify}\r\n                        callback={() => {\r\n                            const data = (wrap.data as LogicUtil.NodeInheritConnector);\r\n                            if (isDisable) {\r\n                                data.disable = undefined;\r\n                            } else {\r\n                                data.disable = true;\r\n                            }\r\n                            invalidate();\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Edit local',\r\n                            isEnable: !isModify && !isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Create a clone from the depended inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                                                const logicList = logicMng.defs.map(def => def.data as LogicUtil.NodeLogicItem);\r\n                                                // ディペンドしているロジックを取得\r\n                                                const dependLogic = logicList.find(inherit => inherit.name === depend.value);\r\n                                                if (dependLogic != undefined) {\r\n                                                    const cloneLogic = JSON.parse(JSON.stringify(dependLogic)) as LogicUtil.NodeLogicItem;\r\n                                                    const connectItem: LogicUtil.NodeInheritItem = {\r\n                                                        mngs: cloneLogic.mngs\r\n                                                    };\r\n                                                    const newWrap: LogicUtil.WrapElement = {\r\n                                                        type: 'inherit-logic',\r\n                                                        data: connectItem\r\n                                                    };\r\n                                                    const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                                                    // 子要素の展開\r\n                                                    newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                    const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                    param.method = 'create';\r\n                                                    param.depend = '';\r\n                                                    mappingForm();\r\n                                                }\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Detach global',\r\n                            isEnable: !isModify && isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Detach a clone from the this inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                let rootNode = node;\r\n                                                while (rootNode.parent != null) rootNode = rootNode.parent;\r\n                                                const inheritNode = node.children.find(el => (el.data as LogicUtil.WrapElement).type === 'inherit-logic');\r\n                                                const logicMngNode = rootNode.children.find(el => (el.data as LogicUtil.WrapElement).type === 'logic-mng');\r\n                                                if (logicMngNode == undefined || inheritNode == undefined) return;\r\n                                                const inherit = (inheritNode.data as LogicUtil.WrapElement).data;\r\n                                                const clone = JSON.parse(JSON.stringify((inherit))) as LogicUtil.NodeInheritItem;\r\n                                                // ロジック名（自動命名）を取得\r\n                                                const defaultName = LogicElementUtil.getNumberingOnPrefixName('clone_inherit_', logicMngNode);\r\n                                                const logicItem: LogicUtil.NodeLogicItem = {\r\n                                                    ...clone,\r\n                                                    name: defaultName\r\n                                                };\r\n                                                const newWrap: LogicUtil.WrapElement = {\r\n                                                    type: 'logic-item',\r\n                                                    data: logicItem\r\n                                                };\r\n\r\n                                                // ロジックマネージャに追加\r\n                                                const newNode = LogicElementUtil.addChild(newWrap, logicMngNode);\r\n                                                // 子要素の展開\r\n                                                newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                // 自身（コネクタ）からインヘリット要素を削除\r\n                                                LogicElementUtil.removeChild(node, 2, 1);\r\n\r\n                                                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                param.method = 'depend';\r\n                                                param.depend = logicItem.name;\r\n                                                mappingForm();\r\n\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnector;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ParamUtil from \"../util/paramUtil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\n\r\nnamespace SendTemplateDialog {\r\n\r\n    const FRAME_WIDTH = 450;\r\n    const FRAME_HEIGHT = 160;\r\n    const COMPONENT_WIDTH = 296;\r\n\r\n    export const ConnectParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, input property name!';\r\n\r\n        /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n        const paramNameList = useMemo(() => {\r\n            const owner = (LogicElementUtil.getInnerWrap(props.node.parent?.data as LogicUtil.WrapElement, 'inherit-logic') as LogicUtil.WrapElement).data;\r\n            return LogicElementUtil.getParamNameList(owner);\r\n        }, [props.node]);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    // Sendにパラメータを追加\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: xName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }] }\r\n                    ), props.node);\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: yName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }] }\r\n                    ), props.node);\r\n\r\n                    // 派生ロジックに引数を追加\r\n                    const logicNode = LogicElementUtil.getInnerNode(props.node.parent as TreeUtil.ElementNode, 'inherit-logic') as TreeUtil.ElementNode;\r\n                    const hasArgNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') != undefined;\r\n                    if (!hasArgNode) {\r\n                        LogicElementUtil.insertChild({\r\n                            type: 'argument-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeArgumentManager\r\n                        }, logicNode, 0);\r\n                    }\r\n                    const argNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') as TreeUtil.ElementNode;\r\n\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: xName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: yName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n\r\n                    // 派生ロジックの座標に引数を設定\r\n                    const behaviorNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'behavior-mng') as TreeUtil.ElementNode;\r\n                    const setParamValue = (prpName: string, argName: string) => {\r\n                        const params = behaviorNode.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                        const targetParam = params.find(param => param.name === prpName) as LogicUtil.NodeParamItem;\r\n                        targetParam.formulaItems = ['var'];\r\n                        targetParam.values = [{ type: 'argument', value: argName }];\r\n                    }\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_X, xName.value);\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_Y, yName.value);\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (yName.value !== '') list.push(yName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[yName]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (xName.value !== '') list.push(xName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[xName]}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n\r\n    export const SetParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, select property name!';\r\n\r\n        const list = useMemo(() => {\r\n            return props.node.children.map(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                return (wrap.data as LogicUtil.NodeParamItem).name;\r\n            });\r\n        }, []);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    const paramList = props.node.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                    const xParam = paramList.find(param => param.name === xName.value) as LogicUtil.NodeParamItem;\r\n                    const yParam = paramList.find(param => param.name === yName.value) as LogicUtil.NodeParamItem;\r\n                    xParam.formulaItems = ['var'];\r\n                    xParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }];\r\n                    yParam.formulaItems = ['var'];\r\n                    yParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }];\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== yName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== xName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SendTemplateDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #d0e7e718;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSendManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const isDepend = () => {\r\n        const conn = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        return conn.method === 'depend';\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"template\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Connect Position',\r\n                            isEnable: !isDepend(),\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.ConnectParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Set Position',\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.SetParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSendManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFieldMng = () => {\r\n    const { invalidate, node, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Field',\r\n                        callback: () => {\r\n                            // const newWrap: FactoryUtil.WrapNode = FactoryUtil.createParamWrap('field-item',\r\n                            //     { name: '', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                            // );\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'field-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFieldMng;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorExtendMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [hasLoopParam, hasInvokeParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name as ParamUtil.ExtendParam;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.ExtendParamType.LOOP_COUNT),\r\n            list.includes(ParamUtil.ExtendParamType.INVOKE)\r\n        ]\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Loop'}\r\n                            width={300}\r\n                            isUse={hasLoopParam}\r\n                            callback={() => {\r\n                                toggleElement(hasLoopParam, 0, {\r\n                                    type: 'param-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.LOOP_COUNT,\r\n                                        formulaItems: ['var'],\r\n                                        values: [{ type: 'direct', value: '1' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Invoke'}\r\n                            width={300}\r\n                            isUse={hasInvokeParam}\r\n                            callback={() => {\r\n                                toggleElement(hasInvokeParam, hasLoopParam ? 1 : 0, {\r\n                                    type: 'condition-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.INVOKE,\r\n                                        formulaItems: ['var', '=', 'var'],\r\n                                        values: [{ type: 'direct', value: '0' }, { type: 'direct', value: '0' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorExtendMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\n\r\nconst EditorSeedItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [entry, setEntry] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [permit, setPermit] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedItem;\r\n        setName({ ...name, value: param.name });\r\n        setEntry({ ...entry, value: param.entry });\r\n        setPermit({ ...permit, value: param.permit })\r\n    };\r\n\r\n    /** 既存のシード名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    // 引用するロジックリスト\r\n    const logicNameList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const logicMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return logicMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    const getSendParamList = (): string[] => {\r\n        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n        const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = logicMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = () => {\r\n        const sendParamList = getSendParamList();\r\n        const sendNode = LogicElementUtil.getInnerNode(node, 'interface-mng', 'seedsend-mng') as TreeUtil.ElementNode;\r\n        const params = ((sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('seedsend-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n            }\r\n        });\r\n        LogicElementUtil.syncTreeElementFromWrap(sendNode);\r\n    }\r\n\r\n    const getDefaultSeedMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'interface-mng',\r\n                data: {\r\n                    mngs: [\r\n                        {\r\n                            type: 'seedarg-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeSeedArgManager\r\n                        },\r\n                        {\r\n                            type: 'seedsend-mng',\r\n                            data: {\r\n                                params: []\r\n                            } as LogicUtil.NodeSeedSendManager\r\n                        },\r\n                    ]\r\n                } as LogicUtil.NodeInterfaceMng\r\n            },\r\n            {\r\n                type: 'thumbnail-mng',\r\n                data: {\r\n                    items: []\r\n                } as LogicUtil.NodeThumnailManager\r\n            },\r\n            {\r\n                type: 'sample-mng',\r\n                data: {\r\n                    samples: []\r\n                } as LogicUtil.NodeSampleManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, entry, permit]}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSeedItem = {\r\n                    name: name.value,\r\n                    entry: entry.value,\r\n                    permit: permit.value as LogicUtil.PermitType,\r\n                    mngs: getDefaultSeedMngs()\r\n                };\r\n                wrap.data = element;\r\n\r\n                LogicElementUtil.syncTreeElementFromWrap(node);\r\n                // 参照しているロジックの引数をSendに設定\r\n                initSendParams();\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedItem;\r\n                param.name = name.value;\r\n                param.permit = permit.value as LogicUtil.PermitType;\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Entry\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={entry}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setEntry}\r\n                            list={logicNameList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Permit\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={permit}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setPermit}\r\n                            list={LogicUtil.PermitTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedItem;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext as LogicTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorThumbnailMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(LogicTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeThumnailManager;\r\n\r\n    const hasSample = useMemo(() => {\r\n        const sampleMngNode = LogicElementUtil.getInnerNode(node.parent as TreeUtil.ElementNode, 'sample-mng') as TreeUtil.ElementNode;\r\n        return sampleMngNode.children.length as number > 0;\r\n    }, []);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={hasSample}\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Thumbnail',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'thumbnail-item',\r\n                                data: null\r\n                            }\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport Particle from \"../../../../graphic/particle\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst WND_SIZE = 100;\r\n\r\nconst EditorThumbnailItem = () => {\r\n    const { rootData, node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n    const data = wrap.data as LogicUtil.NodeThumbnailItem;\r\n\r\n\r\n    const seedWrap = node.parent?.parent?.data as LogicUtil.WrapElement;\r\n    const sampleMng = LogicElementUtil.getInnerWrap(seedWrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n    const samples = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [urls, setUrls] = useState<string[]>([]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n        setName({ ...name, value: param.name });\r\n        setFrame({ ...frame, value: param.frame.toString() });\r\n    };\r\n    \r\n    /** 既存のサムネイル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n            setTimeout(() => {\r\n                const urls: string[] = [];\r\n                samples.forEach((sample, i) => {\r\n                    urls.push(getThumbnailURL(data.frame, i));\r\n                });\r\n                setUrls(urls);\r\n            }, 1);\r\n        }\r\n    }, [node]);\r\n\r\n    const getSeedValueMap = (sampleNo: number): PreviewUtil.ValueMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ValueMap[] = argMng.args.map((arg, i) => {\r\n            const name = (arg.data as LogicUtil.NodeSeedArgItem).name;\r\n            const value = samples[sampleNo].values[i];\r\n            return { name, value }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams.map(item => {\r\n            return { name: item.name, value: PreviewUtil.convertParamsToValue(item.name, sendParams, argMap) ?? 0 }\r\n        });\r\n    }\r\n\r\n    const getThumbnailURL = (targetFrame: number, sampleNo: number) => {\r\n        console.log('create start!');\r\n        const owner: Particle.Instance[] = [];\r\n\r\n        let frameCnt = 0;\r\n        do {\r\n            if (frameCnt === 0) {\r\n                const seed = (node.parent?.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n                const logicManager = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                const logic = logicManager.defs.find(logic => (logic.data as LogicUtil.NodeLogicItem).name === seed.entry);\r\n                if (logic == undefined) break;\r\n\r\n                const sendValueMapList = getSeedValueMap(sampleNo);\r\n                owner.push(new Particle.Instance(\r\n                    PreviewUtil.buildLogicProps(owner, logic.data, rootData, sendValueMapList))\r\n                );\r\n            }\r\n\r\n            if (frameCnt === targetFrame) {\r\n                return CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                });\r\n            }\r\n\r\n            // パーティクルの更新\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                particle.update();\r\n            }\r\n\r\n            // 死滅したパーティクルの削除\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frameCnt > 500 || owner.length > 3000) break;\r\n            frameCnt++;\r\n        } while (owner.length > 0);\r\n        return '';\r\n    }\r\n\r\n    const pictureJsxList = useMemo(() => {\r\n        const sampleMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n        return sampleMng.samples.map((wrap, i) => {\r\n            const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n\r\n            const url = urls[i];\r\n            const imgJsx = url == undefined ? <></> : <_IMG src={urls[i]} />;\r\n            return (\r\n                <_SampleDiv key={i}>-\r\n                    <_SampleName>{sample.name}</_SampleName>\r\n                    <_CanvasDiv>\r\n                        {imgJsx}\r\n                    </_CanvasDiv>\r\n                </_SampleDiv>\r\n            );\r\n        });\r\n    }, [node, urls]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, frame]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeThumbnailItem = {\r\n                    name: name.value,\r\n                    frame: Number(frame.value),\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n                param.name = name.value;\r\n                param.frame = Number(frame.value);\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"preview\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {pictureJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailItem;\r\n\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\n\r\nconst EditorSampleItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [paramForms, setParamForms] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSampleItem;\r\n        setName({ ...name, value: param.name });\r\n        setParamForms(param.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のサンプル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const argInfoList: LogicUtil.NodeSeedArgItem[] = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'seedarg-mng');\r\n        if (argMng != null) {\r\n            return (argMng.data as LogicUtil.NodeSeedArgManager).\r\n                args.map(arg => {\r\n                    return arg.data as LogicUtil.NodeSeedArgItem;\r\n                });\r\n        } else throw new Error('argMng is undefined.');\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setParamForms(argInfoList.map(arg => {\r\n                let defval = ' ';\r\n                if (arg.defval != undefined) defval = arg.defval.toString();\r\n                return { value: defval, errors: [] };\r\n            }));\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const formList = useMemo(() => {\r\n        return paramForms.map((paramForm, i) => {\r\n            const arg = argInfoList[i];\r\n            return <FormUtil.FormRecord key={i}\r\n                titleLabel={arg.name}\r\n                jsx={\r\n                    <FormUtil.TextField\r\n                        width={150}\r\n                        isReadOnly={!isModify}\r\n                        checkable={paramForm}\r\n                        setCheckable={(checkable) => {\r\n                            paramForms[i] = checkable;\r\n                            setParamForms(paramForms.slice());\r\n                        }}\r\n                        isNumber\r\n                        step={arg.step}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkNumberRange(value, arg.min, arg.max),\r\n                                errorType: \"value\"\r\n                            },\r\n                        ]}\r\n                    />\r\n                }\r\n            />\r\n        });\r\n    }, [paramForms, isModify]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name].concat(paramForms)}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSampleItem = {\r\n                    name: name.value,\r\n                    values: []\r\n                };\r\n                paramForms.forEach((form, i) => {\r\n                    element.values[i] = Number(form.value);\r\n                });\r\n                wrap.data = element;\r\n\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSampleItem;\r\n                param.name = name.value;\r\n                paramForms.forEach((form, i) => {\r\n                    param.values[i] = Number(form.value);\r\n                });\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {formList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSampleMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Sample',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'sample-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSampleManager).samples.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleMng;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInterfaceManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Initialize Params',\r\n                        callback: () => {\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInterfaceManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedArgMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seedarg-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedArgManager).args.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedArgMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorSeedArgItem = () => {\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [min, setMin] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [max, setMax] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [step, setStep] = useState<FormUtil.CheckableValue>({ value: '1', errors: [] });\r\n    const [defval, setDefval] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n        setName({ ...name, value: param.name });\r\n        setMin({ ...min, value: param.min.toString() });\r\n        setMax({ ...max, value: param.max.toString() });\r\n        setStep({ ...step, value: param.step.toString() });\r\n        setDefval({ ...defval, value: param.defval == undefined ? '' : param.defval.toString() });\r\n        // setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, min, max, step, defval]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeSeedArgItem = {\r\n                    name: name.value,\r\n                    min: Number(min.value),\r\n                    max: Number(max.value),\r\n                    step: Number(step.value),\r\n                    defval: Number(defval.value === '' ? undefined : defval.value),\r\n                    // valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                wrap.data = param;\r\n                // LogicElementUtil.syncArgumentAdd(node.parent?.parent as TreeUtil.ElementNode, name.value);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.min = Number(min.value);\r\n                param.max = Number(max.value);\r\n                param.step = Number(step.value);\r\n                param.defval = Number(defval.value === '' ? undefined : defval.value);\r\n                // param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    // LogicElementUtil.syncArgumentName(node.parent?.parent as TreeUtil.ElementNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Min\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={min}\r\n                            setCheckable={setMin}\r\n                            isNumber\r\n                            dependency={[max]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) < Number(max.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Max\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={max}\r\n                            setCheckable={setMax}\r\n                            isNumber\r\n                            dependency={[min]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) > Number(min.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Step\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={step}\r\n                            setCheckable={setStep}\r\n                            isNumber\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Default\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={defval}\r\n                            setCheckable={setDefval}\r\n                            isNumber\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'color' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                /> */}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                // LogicElementUtil.syncArgumentDel(node.parent?.parent as TreeUtil.ElementNode, name.value);\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedArgItem;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedSendMng = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const getSendParamList = (): string[] => {\r\n    //     const connector = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n    //     const isCreate = connector.method === 'create';\r\n    //     let targetWrap: LogicUtil.WrapElement | null = null;\r\n    //     if (!isCreate) {\r\n    //         const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n    //         const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n    //         const dependItem = inheritMng.defs.find(wrap => {\r\n    //             return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n    //         });\r\n    //         if (dependItem != undefined) targetWrap = dependItem;\r\n    //     } else {\r\n    //         targetWrap = (node.parent?.children[node.parent?.children.length - 1].data as LogicUtil.WrapElement)\r\n    //     }\r\n    //     if (targetWrap != null) {\r\n    //         const argWrap = (targetWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n    //         if (argWrap.type === 'argument-mng') {\r\n    //             return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n    //                 return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n    //             });\r\n    //         }\r\n    //     }\r\n    //     return [];\r\n    // }\r\n\r\n    // const update = () => {\r\n    //     const sendParamList = getSendParamList();\r\n    //     const curSize = node.children.length;\r\n    //     const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n    //     // 不要なパラメータを削除\r\n    //     for (let i = curSize - 1; i >= 0; i--) {\r\n    //         const name = (params[i].data as LogicUtil.NodeParamItem).name;\r\n    //         if (!sendParamList.includes(name)) {\r\n    //             node.children.splice(i, 1);\r\n    //             params.splice(i, 1);\r\n    //         }\r\n    //     }\r\n    //     // 必要な存在しないパラメータを追加\r\n    //     const curParamList = params.map(param => {\r\n    //         return (param.data as LogicUtil.NodeParamItem).name;\r\n    //     });\r\n    //     sendParamList.forEach(param => {\r\n    //         if (!curParamList.includes(param)) {\r\n    //             const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n    //                 { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n    //             );\r\n    //             params.push(paramWrap);\r\n    //             node.children.push(TreeUtil.createNode(paramWrap, node));\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    return (<>\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedSendMng;","import styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactDetArgumentMng from \"../detail/logic/editorArgumentMng\";\r\nimport EditorArgumentItem from \"../detail/logic/editorArgumentItem\";\r\nimport FactDetSeedMng from \"../detail/seed/editorSeedMng\";\r\nimport EditorLogicMng from \"../detail/logic/editorLogicMng\";\r\nimport EditorLogicItem from \"../detail/logic/editorLogicItem\";\r\nimport EditorParamItem from \"../detail/logic/editorParamItem\";\r\nimport FactDetBehiviorMng from \"../detail/logic/editorBehiviorMng\";\r\nimport EditorVisualMng from \"../detail/logic/editorVisualMng\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport EditorInheritConnMng from \"../detail/logic/editorInheritConnMng\";\r\nimport EditorInheritConnector from \"../detail/logic/editorInheritConnector\";\r\nimport EditorSendManager from \"../detail/logic/editorSendManager\";\r\nimport EditorFieldMng from \"../detail/logic/editorFieldMng\";\r\nimport EditorExtendMng from \"../detail/logic/editorExtendMng\";\r\nimport EditorSeedItem from \"../detail/seed/editorSeedItem\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"./logicElementUtil\";\r\nimport EditorThumbnailMng from \"../detail/seed/editorThumbnailMng\";\r\nimport EditorThumbnailItem from \"../detail/seed/editorThumbnailItem\";\r\nimport EditorSampleItem from \"../detail/seed/editorSampleItem\";\r\nimport EditorSampleMng from \"../detail/seed/editorSampleMng\";\r\nimport EditorInterfaceManager from \"../detail/seed/editorInterfaceManager\";\r\nimport EditorSeedArgMng from \"../detail/seed/editorSeedArgMng\";\r\nimport EditorSeedArgItem from \"../detail/seed/editorSeedArgItem\";\r\nimport EditorSeedSendMng from \"../detail/seed/editorSeedSendMng\";\r\n\r\nnamespace LogicUtil {\r\n\r\n    export type DetailArgs = {\r\n        rootData: LogicUtil.WrapElement;\r\n        node: TreeUtil.ElementNode;\r\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\r\n        invalidate: () => void;\r\n        isModify: boolean;\r\n        setModify: (isModify: boolean) => void;\r\n        // setRootData: React.Dispatch<React.SetStateAction<WrapElement>>;\r\n        setRootData: (rootData: WrapElement) => void;\r\n        removeSelf: () => void;\r\n    }\r\n\r\n    /**\r\n     * 変数名チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkFieldName = (str: string) => {\r\n        // 1文字目が数値でないこと\r\n        const isNoHeadNumber = !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].\r\n            includes(str.substring(0, 1));\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyz_';\r\n        return isNoHeadNumber && ValidateUtil.checkIncludesChars(str, list);\r\n    }\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'seed-mng' |\r\n        'logic-mng' |\r\n        'seed-item' |\r\n        'logic-item' |\r\n        'argument-mng' |\r\n        'argument-item' |\r\n        'field-mng' |\r\n        'field-item' |\r\n        'visual-mng' |\r\n        'behavior-mng' |\r\n        'inhfld-mng' |\r\n        'extend-mng' |\r\n        'inherit-mng' |\r\n        'connector' |\r\n        'inherit-logic' |\r\n        'send-mng' |\r\n        'send-item' |\r\n        'param-item' |\r\n        'condition-item' |\r\n        'interface-mng' |\r\n        'sample-mng' |\r\n        'sample-item' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-item' |\r\n        'seedarg-mng' |\r\n        'seedsend-mng' |\r\n        'seedarg-item' |\r\n        'seedsend-item'\r\n        ;\r\n\r\n    export const ArgTypes = ['number', 'color'] as const;\r\n    export type ArgumentType = typeof ArgTypes[number];\r\n\r\n    export const ParamInputTypes = ['direct', 'constant', 'argument', 'self', 'field'] as const;\r\n    export type ParamInputType = typeof ParamInputTypes[number];\r\n\r\n    export const ConnectTypes = ['create', 'depend'] as const;\r\n    export type InheritMethod = typeof ConnectTypes[number];\r\n\r\n    export const PermitTypes = ['develop', 'private', 'release'] as const;\r\n    export type PermitType = typeof PermitTypes[number];\r\n\r\n    export type ParamProps = {\r\n        type: ParamInputType;\r\n        value: string;\r\n    }\r\n\r\n    export type WrapElement = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        seedMng: WrapElement;\r\n        logicMng: WrapElement;\r\n    }\r\n    export type NodeSeedManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicItem = {\r\n        name: string;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInterfaceMng = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInheritItem = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeParamManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeParamItem = {\r\n        name: string;\r\n        formulaItems: string[];\r\n        values: ParamProps[];\r\n    }\r\n\r\n    export type NodeArgumentItem = {\r\n        name: string;\r\n        valueType: ArgumentType;\r\n    }\r\n    export type NodeThumbnailItem = {\r\n        name: string;\r\n        frame: number;\r\n    }\r\n    export type NodeArgumentManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeFieldManager = {\r\n        fields: WrapElement[];\r\n    }\r\n    export type NodeSampleManager = {\r\n        samples: WrapElement[];\r\n    }\r\n    export type NodeSampleItem = {\r\n        name: string;\r\n        values: number[];\r\n    }\r\n\r\n    // export type NodeExtendManager = {\r\n    //     mngs: WrapElement[];\r\n    // }\r\n    export type NodeConnectManager = {\r\n        inherits: WrapElement[];\r\n    }\r\n    export type NodeInheritConnector = {\r\n        method: InheritMethod;\r\n        depend: string;\r\n        id: string;\r\n        disable?: boolean;\r\n        mngs: WrapElement[];\r\n    }\r\n\r\n    export type NodeSeedItem = {\r\n        name: string;\r\n        entry: string;\r\n        permit: PermitType;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeThumnailManager = {\r\n        items: WrapElement[];\r\n    }\r\n    export type NodeSeedArgManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeSeedSendManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeSeedArgItem = {\r\n        name: string;\r\n        min: number;\r\n        max: number;\r\n        step: number;\r\n        defval: number | undefined;\r\n    }\r\n\r\n    const COLOR_ROOT = '#a1a1a1';\r\n    const COLOR_METHOD = '#cca67b';\r\n    const COLOR_MNG = '#37a2bd';\r\n    const COLOR_LIST = '#b85f5f';\r\n    const COLOR_ITEM = '#ae628c';\r\n    const COLOR_DISABLE = '#685b79';\r\n    const COLOR_PARAM = '#8dae62';\r\n    const COLOR_FIELD = '#cec256';\r\n    const COLOR_THUMBNAIL = '#8283be';\r\n    const COLOR_CONDITION = '#56ce7e';\r\n\r\n    export const getNodeDisplayJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapElement;\r\n        switch (wrap.type) {\r\n            case 'root': {\r\n                return <_Category backgroundColor={COLOR_ROOT}>Library</_Category>;\r\n            }\r\n            case 'seed-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Seed Manager</_Category>;\r\n            }\r\n            case 'logic-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Logic Manager</_Category>;\r\n            }\r\n            case 'visual-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Visual</_Category>;\r\n            }\r\n            case 'extend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Extend</_Category>;\r\n            }\r\n            case 'seed-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Seed</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'logic-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Logic</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-logic': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Logic</_Category>;\r\n            }\r\n            case 'argument-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'inhfld-mng':\r\n            case 'field-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Field Manager</_Category>;\r\n            }\r\n            case 'behavior-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Behavior</_Category>;\r\n            }\r\n            case 'inherit-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Inherit Manager</_Category>;\r\n            }\r\n            case 'connector': {\r\n                let detailJsx = <span>...</span>;\r\n                let color = COLOR_ITEM;\r\n                let isDisable = false;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeInheritConnector;\r\n                    detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}</_Span></span>;\r\n                    if (data.method === 'depend') {\r\n                        detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}:&nbsp;</_Span><_Field>{data.depend}</_Field></span>;\r\n                    }\r\n                    if (data.disable ?? false) {\r\n                        color = COLOR_DISABLE;\r\n                        isDisable = true;\r\n                    }\r\n                }\r\n                return (<>\r\n                    <_Category backgroundColor={color} isDisable={isDisable}>Inherit</_Category>\r\n                    {detailJsx == undefined ? <></> : <_EditableValue>{detailJsx}</_EditableValue>}\r\n                </>);\r\n            }\r\n            // パラメータ要素\r\n            case 'param-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_PARAM}>Param<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 条件要素\r\n            case 'condition-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_CONDITION}>Condition<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 変数要素\r\n            case 'field-item': {\r\n                let nameJsx = <span>...</span>;\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeParamItem;\r\n                    nameJsx = <_Detail>&nbsp;[{data.name}]</_Detail>;\r\n                    let result: JSX.Element[] = [];\r\n                    let varCnt = 0;\r\n                    data.formulaItems.forEach((formula, i) => {\r\n                        let str = <_Signature key={i}>{formula}</_Signature>;\r\n                        if (formula === 'var') {\r\n                            const v = data.values[varCnt];\r\n                            if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                            else str = <span key={i}>{v.value}</span>;\r\n                            varCnt++;\r\n                        }\r\n                        result.push(str);\r\n                    });\r\n                    detailJsx = <>{result}</>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Field{nameJsx}</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'argument-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeArgumentItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.valueType})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'send-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'thumbnail-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Thumnail Manager</_Category>;\r\n            }\r\n            case 'thumbnail-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeThumbnailItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.frame})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_THUMBNAIL}>Thumbnail</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'sample-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Sample Manager</_Category>;\r\n            }\r\n            case 'sample-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSampleItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Sample</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'interface-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Interface</_Category>;\r\n            }\r\n            case 'seedarg-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'seedarg-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedArgItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.min}～{data.max})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'seedsend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n        }\r\n        return <_Category backgroundColor={'#ffffff'}>XXXXX</_Category>;\r\n    }\r\n\r\n    export const getTypeName = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return '';\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return 'Root';\r\n            case 'seed-mng': return 'Seed Manager';\r\n            case 'logic-mng': return 'Logic Manager';\r\n            case 'seed-item': return 'Seed Item';\r\n            case 'logic-item': return 'Logic Item';\r\n            case 'argument-mng': return 'Argument Manager';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'Field Manager';\r\n            case 'field-item': return 'Field Item';\r\n            case 'visual-mng': return 'Visual Manager';\r\n            case 'argument-item': return 'Argument Item';\r\n            case 'extend-mng': return 'Extend Manager';\r\n            case 'behavior-mng': return 'Behavior Manager';\r\n            case 'inherit-mng': return 'Inherit Manager';\r\n            case 'connector': return 'Inherit Connector';\r\n            case 'inherit-logic': return 'Inherit Logic';\r\n            case 'send-mng': return 'Send Manager';\r\n            case 'send-item': return 'Send Item';\r\n            case 'param-item': return 'Param Item';\r\n            case 'condition-item': return 'Condition Item';\r\n            case 'interface-mng': return 'Interface Manager';\r\n            case 'thumbnail-mng': return 'Thumbnail Manager';\r\n            case 'thumbnail-item': return 'Thumbnail Item';\r\n            case 'sample-mng': return 'Sample Manager';\r\n            case 'sample-item': return 'Sample Item';\r\n            case 'seedarg-mng': return 'Argument Manager';\r\n            case 'seedsend-mng': return 'Send';\r\n        }\r\n    }\r\n\r\n    export const getDetailComponent = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return <></>;\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return <></>;\r\n            case 'seed-mng': return <FactDetSeedMng />;\r\n            case 'logic-mng': return <EditorLogicMng />;\r\n            case 'seed-item': return <EditorSeedItem />;\r\n            case 'logic-item': return <EditorLogicItem />;\r\n            case 'argument-mng': return <FactDetArgumentMng />;\r\n            case 'argument-item': return <EditorArgumentItem />;\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return <EditorFieldMng />;\r\n            case 'visual-mng': return <EditorVisualMng />;\r\n            case 'extend-mng': return <EditorExtendMng />;\r\n            case 'behavior-mng': return <FactDetBehiviorMng />;\r\n            case 'inherit-mng': return <EditorInheritConnMng />;\r\n            case 'connector': return <EditorInheritConnector />;\r\n            case 'inherit-logic': return <EditorLogicItem />;\r\n            case 'send-mng': return <EditorSendManager />;\r\n            case 'field-item':\r\n            case 'param-item':\r\n            case 'condition-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': return <EditorParamItem />;\r\n            case 'interface-mng': return <EditorInterfaceManager />;\r\n            case 'sample-mng': return <EditorSampleMng />;\r\n            case 'sample-item': return <EditorSampleItem />;\r\n            case 'thumbnail-mng': return <EditorThumbnailMng />;\r\n            case 'thumbnail-item': return <EditorThumbnailItem />;\r\n            case 'seedarg-mng': return <EditorSeedArgMng />;\r\n            case 'seedarg-item': return <EditorSeedArgItem />;\r\n            case 'seedsend-mng': return <EditorSeedSendMng />;\r\n        }\r\n    }\r\n\r\n    export const getChildrenElementNode = (node: TreeUtil.ElementNode): TreeUtil.ElementNode[] => {\r\n        const wrapNode = node.data as WrapElement;\r\n        const get = (listName: string) => {\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const elementNode = TreeUtil.createNode(wrap, node);\r\n                elementNode.children = getChildrenElementNode(elementNode);\r\n                return elementNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n        }\r\n        return [];\r\n    };\r\n\r\n    export const getChildrenDataNode = (wrapNode: LogicUtil.WrapElement): TreeUtil.DataNode[] => {\r\n        const get = (listName: string) => {\r\n\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const treeNode: TreeUtil.DataNode = {\r\n                    data: wrap,\r\n                    children: getChildrenDataNode(wrap)\r\n                };\r\n                return treeNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as LogicUtil.NodeRoot;\r\n                return [\r\n                    { data: node.seedMng, children: getChildrenDataNode(node.seedMng) },\r\n                    { data: node.logicMng, children: getChildrenDataNode(node.logicMng) }\r\n                ];\r\n            }\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n        }\r\n        return [];\r\n    };\r\n}\r\n\r\nexport default LogicUtil;\r\n\r\nconst _Category = styled.div<{\r\n    backgroundColor: string;\r\n    isDisable?: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: ${props => props.backgroundColor};\r\n    /* width: 100%; */\r\n    ${props => !(props.isDisable ?? false) ? '' : css`\r\n        text-decoration: line-through;\r\n        color: #00054dac;\r\n    `}\r\n    border-radius: 4px 0 0 4px;\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n    border: solid 1px #000000d2;\r\n`;\r\nconst _Detail = styled.span`\r\n    color: #000b69bd;\r\n`;\r\n\r\nconst _EditableValue = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #0c0c0c;\r\n    color: #ebebeb;\r\n    border-radius: 0 4px 4px 0;\r\n    /* width: 100%; */\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n`;\r\nconst _Span = styled.span<{\r\n    color: string;\r\n}>`\r\n    color: ${props => props.color};\r\n`;\r\nconst _ValueType = styled.span`\r\n    color: #fff9d6b9;\r\n`;\r\nconst _Signature = styled.span`\r\n    color: #ffffff78;\r\n`;\r\nconst _Field = styled.span`\r\n    color: #ff2d2d;\r\n`;","import { type } from \"os\";\r\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport Common from \"../common\";\r\nimport LogicPreviewFrame from \"../preview/logicPreviewFrame\";\r\nimport LogicElementUtil from \"./util/logicElementUtil\";\r\nimport LogicUtil from \"./util/logicUtil\";\r\n\r\nexport const FactoryTreeContext = createContext({} as LogicUtil.DetailArgs);\r\n\r\nconst LogicMainteTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    // const [rootData, setRootData] = useState(LogicElementUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    // const [treeDisable, setTreeDisable] = useState(false);\r\n    const [isModify, setModify] = useState<boolean>(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    const rootData = store.logicData as LogicUtil.WrapElement;\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: LogicUtil.getChildrenDataNode(rootData)\r\n        }\r\n    }, [rootData]);\r\n\r\n    // useEffect(()=> {\r\n    //     store.logicData = rootData;\r\n    //     setStore({...store});\r\n    // }, [rootData]);\r\n\r\n    const setRootData = (rootData: LogicUtil.WrapElement) => {\r\n        store.logicData = rootData;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const masterNode = useMemo(() => {\r\n        let cur: TreeUtil.ElementNode | null = focusNode;\r\n        while (cur != null) {\r\n            const type = (cur.data as LogicUtil.WrapElement).type;\r\n            if (['logic-item', 'seed-item'].includes(type)) return cur;\r\n            cur = cur.parent;\r\n        };\r\n        return null;\r\n    }, [focusNode]);\r\n\r\n    /**\r\n     * プレビューダイアログを表示する\r\n     */\r\n    const openPreviewDialog = () => {\r\n        if (masterNode == null) return;\r\n        store.system.dialog = (\r\n            <LogicPreviewFrame.Component\r\n                node={masterNode}\r\n                rootData={rootData}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n            onKeyDown={(e) => {\r\n                // console.log(e.key);\r\n                if (isModify || focusNode == null) return;\r\n                switch (e.key) {\r\n                    case 'ArrowRight': {\r\n                        if (focusNode.children.length > 0) {\r\n                            if (!focusNode.isOpen) focusNode.isOpen = true;\r\n                            else setFocusNode(focusNode.children[0]);\r\n                            setInvalidate({});\r\n                        }\r\n                    } break;\r\n                    case 'ArrowLeft': {\r\n                        if (focusNode.isOpen) focusNode.isOpen = false;\r\n                        else {\r\n                            if (focusNode.parent != null) setFocusNode(focusNode.parent);\r\n                        }\r\n                        setInvalidate({});\r\n                    } break;\r\n                    case 'ArrowUp': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n) {\r\n                                    if (i === 0) {\r\n                                        setFocusNode(focusNode.parent);\r\n                                        setInvalidate({});\r\n                                    } else {\r\n                                        setFocusNode(list[i - 1]);\r\n                                        setInvalidate({});\r\n                                    }\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case 'ArrowDown': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n && i < list.length - 1) {\r\n                                    setFocusNode(list[i + 1]);\r\n                                    setInvalidate({});\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case ' ': {\r\n                        if (masterNode != null) openPreviewDialog();\r\n                    } break;\r\n                }\r\n            }}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview',\r\n                                isEnable: masterNode != null,\r\n                                callback: openPreviewDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return LogicUtil.getNodeDisplayJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={isModify}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <_DetailDiv>\r\n                    <_DetailHeader>\r\n                        <_DetailHeaderLabel>{LogicUtil.getTypeName(focusNode)}</_DetailHeaderLabel>\r\n                    </_DetailHeader>\r\n                    <FactoryTreeContext.Provider value={{\r\n                        rootData,\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        isModify,\r\n                        setModify,\r\n                        // treeDisable,\r\n                        setRootData,\r\n                        removeSelf: () => {\r\n                            const node = focusNode as TreeUtil.ElementNode;\r\n                            let index = -1;\r\n                            node.parent?.children.forEach((n, i) => {\r\n                                if (n == node) index = i;\r\n                            });\r\n                            node.parent?.children.splice(index, 1);\r\n                            const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n                            const listName = LogicElementUtil.getListParamName(parentWrap.type);\r\n                            if (listName == null) return;\r\n                            const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n                            list.splice(index, 1);\r\n                            setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                            setInvalidate({});\r\n                        }\r\n                    }}>\r\n                        <_DetailMainDiv>{LogicUtil.getDetailComponent(focusNode)}</_DetailMainDiv>\r\n                    </FactoryTreeContext.Provider>\r\n                </_DetailDiv>\r\n            </_PropsDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default LogicMainteTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #6c8186;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d87b;\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _TreeHeadHalf = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    background-color: #7fbdb47a;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #9fa9b6;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _DetailDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\nconst _DetailHeader = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #b4b29e; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _DetailHeaderLabel = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #a10000;\r\n    /* background-color: #bbd0d3; */\r\n    border: solid 1px #a10000;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 20px);\r\n    margin: 5px 0 0 10px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DetailMainDiv = styled.div`\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 44px);\r\n    margin: 0 0 0 4px;\r\n    background-color: #cfd3cc;\r\n    border: solid 1px #0026a1;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\n\r\nnamespace NameDefDialog {\r\n\r\n    export const Component = (props: {\r\n        targetSeq: number\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const width = 500;\r\n        const height = 150;\r\n\r\n        const isCreate = props.targetSeq === -1;\r\n        const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n        const getDefaultName = () => {\r\n            return props.targetSeq === -1 ? '' : (projects.find(p => p.seq === props.targetSeq) as StoreCloud.Project).name;\r\n        }\r\n\r\n        useEffect(() => {\r\n            name.value = getDefaultName();\r\n            setName({ ...name });\r\n        }, []);\r\n\r\n        const [existNames] = useMemo(() => {\r\n            return [\r\n                projects.map(item => item.name)\r\n            ];\r\n        }, []);\r\n\r\n        const registCreate = () => {\r\n            const result = findProjectMaxSeq();\r\n            result.then((maxSeq) => {\r\n                const newProject = {\r\n                    seq: maxSeq + 1,\r\n                    name: name.value,\r\n                    source: '',\r\n                    lastmod: ''\r\n                };\r\n                projects.push(newProject);\r\n                insertProject(store.system.user?.seq as number, newProject).then(() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            });\r\n        }\r\n\r\n        const registUpdate = () => {\r\n            const targetItem = projects.find(item => item.seq === props.targetSeq);\r\n            if (targetItem != undefined) {\r\n                updateProjectName(props.targetSeq, name.value).then(() => {\r\n                    targetItem.name = name.value;\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            }\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: isCreate ? 'Create' : 'Update',\r\n                isEnable: name.errors.length === 0,\r\n                callback: () => {\r\n                    if (isCreate) registCreate();\r\n                    else registUpdate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, input new name!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => LogicUtil.checkFieldName(value),\r\n                                //     errorType: \"value\"\r\n                                // },\r\n                                {\r\n                                    checker: (value) => !existNames.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NameDefDialog;\r\n\r\nconst findProjectMaxSeq = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT max(seq) m FROM prjcttbl`);\r\n    const results = await response.json();\r\n    return results[0].m;\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport NameDefDialog from \"./nameDefDialog\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n    const listItemJsx = store.cloud == null ? [] : store.cloud.projects.map((item, i) => {\r\n        const exist = item.source !== '';\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    setFcsListIdx(i);\r\n                }}\r\n            >\r\n                <_Status isExist={exist}>[{!exist ? 'Blank' : 'Logic'}] </_Status>\r\n                <_Name>{item.name}</_Name>\r\n                {/* <_Date> -{item.lastmod}</_Date> */}\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    const hasData = store.logicData != null;\r\n    const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n    useEffect(()=>{\r\n        if(store.cloud == null) {\r\n            setFcsListIdx(-1);\r\n        }\r\n    }, [store.cloud]);\r\n\r\n    const [logicSize, developCnt, privateCnt, releaseCnt, logicCnt] = useMemo(() => {\r\n        if (store.logicData == null) return [0, 0, 0, 0, 0];\r\n        let size = 0;\r\n        const incrRec = (wrap: LogicUtil.WrapElement) => {\r\n            size++;\r\n            const listName = LogicElementUtil.getListParamName(wrap.type);\r\n            if (listName != null) {\r\n                const list = wrap.data[listName] as LogicUtil.WrapElement[];\r\n                list.forEach(wrap => incrRec(wrap));\r\n            }\r\n        }\r\n        const root = store.logicData.data as LogicUtil.NodeRoot;\r\n        incrRec(root.logicMng);\r\n        incrRec(root.seedMng);\r\n\r\n        let developCnt = 0;\r\n        let privateCnt = 0;\r\n        let releaseCnt = 0;\r\n        const seedMng = root.seedMng.data as LogicUtil.NodeSeedManager;\r\n        seedMng.defs.forEach(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n            switch (seed.permit) {\r\n                case 'develop': developCnt++; break;\r\n                case 'private': privateCnt++; break;\r\n                case 'release': releaseCnt++; break;\r\n            }\r\n        });\r\n\r\n        const logicMng = root.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return [size, developCnt, privateCnt, releaseCnt, logicMng.defs.length];\r\n    }, [store.logicData]);\r\n\r\n    return (<_Wrap>\r\n        <_HeaderDiv>\r\n            <FormUtil.ButtonRecord\r\n                align=\"left\"\r\n                buttons={[\r\n                    {\r\n                        label: 'New Project',\r\n                        isEnable: !hasData,\r\n                        callback: () => {\r\n                            store.logicData = LogicElementUtil.getInitialData();\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                ]}\r\n            />\r\n        </_HeaderDiv>\r\n        <_BodyDiv>\r\n            <_LeftDiv isEnable={store.cloud != null}>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Create',\r\n                            width: 110,\r\n                            isEnable: true,\r\n                            callback: () => {\r\n                                store.system.dialog = <NameDefDialog.Component\r\n                                    targetSeq={-1}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Upload',\r\n                            width: 110,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                const source = DataUtil.gZip(JSON.stringify(store.logicData));\r\n                                updateProjectSource(projects[fcsListIdx].seq, source).then(() => {\r\n                                    const project = projects[fcsListIdx];\r\n                                    project.source = source;\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Update project succesful!\"\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Delete',\r\n                            width: 110,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                deleteProject(projects[fcsListIdx].seq).then(() => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Delete project succesful!\"\r\n                                    />;\r\n                                    projects.splice(fcsListIdx, 1);\r\n                                    setFcsListIdx(fcsListIdx - 1);\r\n                                    setStore({ ...store });\r\n                                });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Rename',\r\n                            width: 110,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                store.system.dialog = <NameDefDialog.Component\r\n                                    targetSeq={projects[fcsListIdx].seq}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_ListDiv>\r\n                    {listItemJsx}\r\n                </_ListDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Clone',\r\n                            isEnable: !hasData && fcsListIdx !== -1 && projects[fcsListIdx].source !== '',\r\n                            callback: () => {\r\n                                const source = DataUtil.unZip(projects[fcsListIdx].source);\r\n                                store.logicData = JSON.parse(source);\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Clone project succesful!\"\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_LeftDiv>\r\n            <_RighttDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Load',\r\n                            width: 100,\r\n                            isEnable: !hasData,\r\n                            callback: () => { DataUtil.loadFile(store, setStore) }\r\n                        },\r\n                        {\r\n                            label: store.fileHandle == null ? 'Save' : 'Overwrite',\r\n                            width: 140,\r\n                            isEnable: hasData,\r\n                            callback: () => { DataUtil.saveFile(store, setStore) }\r\n                        },\r\n                        {\r\n                            label: 'Disconnect',\r\n                            width: 160,\r\n                            isEnable: store.fileHandle != null,\r\n                            callback: () => {\r\n                                store.fileHandle = null;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Clear',\r\n                            width: 100,\r\n                            isEnable: hasData,\r\n                            callback: () => {\r\n                                store.logicData = null;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <FormUtil.BorderPanel\r\n                    title=\"Project\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Private\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : privateCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Release\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : releaseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Logic\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Launcher\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Size\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicSize.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Hash\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    width={340}\r\n                                    value={!hasData ? '-' : DataUtil.getSHA256Hash(JSON.stringify(store.logicData))}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n            </_RighttDiv>\r\n        </_BodyDiv>\r\n\r\n    </_Wrap >);\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst updateProjectSource = async (seq: number, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set source = '${source}', lastmod = datetime ('now') where seq = ${seq}`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from prjcttbl where seq = ${seq}`)\r\n}\r\n\r\nconst HEADER_WIDTH = 40;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    background-color: #ebebeb30;\r\n`;\r\n\r\nconst _HeaderDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_WIDTH}px;\r\n    background-color: #d1f5f32f;\r\n`;\r\n\r\nconst _BodyDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_WIDTH}px);\r\n    background-color: #221a212c;\r\n`;\r\n\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #ffe3fb53;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 86px);\r\n    box-sizing: border-box;\r\n    background-color: #f0ecd43d;\r\n    border: 1px solid #002c8a;\r\n    border-radius: 4px;\r\n`;\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    isExist: boolean;\r\n}>`\r\n    ${props => !props.isExist ? css`color: #0000006d;` : `color: #b90000be;`}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\nconst _RighttDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #cbf7cd2d;\r\n    vertical-align: top;\r\n`;","import { type } from \"os\";\r\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport Common from \"../common\";\r\nimport TimelineUtil from \"./timelineUtil\";\r\n\r\nconst LauncherTab = () => {\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    {/* <HierarchyNavi cur={focusNode}/> */}\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n            </_PropsDiv>\r\n            {/* <_Blind isVisible={isBackingWnd}>\r\n                    <_Contents>{!isBackingWnd ? <></> : <BackingEditorFrame />}</_Contents>\r\n                </_Blind> */}\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default LauncherTab;\r\n\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c3d8dd;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #532fc0; */\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n    padding: 6px 6px 6px 0;\r\n`;\r\n\r\nconst _TabContWrap = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 630px;\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    /* opacity: 0.9; */\r\n    overflow: hidden;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport LogicMainteTab from \"./factory/logicMainteTab\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport PreviewTab from \"./manage/manageTab\";\r\nimport LauncherTab from \"./launcher/launcherTab\";\r\nimport Timeline from \"./launcher/launcherTab\";\r\n\r\n\r\nconst CreateChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const hasData = store.logicData != null;\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', enable: true, cont: <ManageTab /> },\r\n                    { name: 'Launcher', enable: hasData, cont: <LauncherTab /> },\r\n                    { name: 'Library', enable: hasData, cont: <LogicMainteTab /> }\r\n                ]}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CreateChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { Redirect } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst DirectView = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const conteseq = DataUtil.getDecryptionedScoreSeq(props.hashKey);\r\n\r\n    // const setScoreData = (owner: string, dispnam: string, data: ScoreData) => {\r\n    //     store.scoreState.focusIndex = 2;\r\n    //     store.scoreState.distIndex = store.scoreState.focusIndex;\r\n    //     dispatcher.score.setScoreState({ ...store.scoreState });\r\n    //     // dispatcher.score.setScoreTabIndex(1);\r\n    //     dispatcher.score.setScoreData(data);\r\n    //     // キャッシュの更新\r\n    //     store.scoreData = data;\r\n    //     CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    //     store.systemState.mainChannelIndex = 5;\r\n    //     store.systemState.scoreTabIndex = 0;\r\n    //     store.systemState.directScore = {\r\n    //         owner, name: dispnam\r\n    //     };\r\n    //     dispatcher.system.setState(store.systemState);\r\n    // };\r\n\r\n    useEffect(() => {\r\n        // DataUtil.findScore(conteseq).then(resList => {\r\n        //     if (resList.length > 0) {\r\n        //         const source = resList[0]['data'];\r\n        //         const owner = resList[0]['owner'];\r\n        //         const dispnam = resList[0]['dispnam'];\r\n        //         const text = DataUtil.unZip(source);\r\n        //         setScoreData(owner, dispnam, JSON.parse(text));\r\n        //     }\r\n        // });\r\n    }, []);\r\n    // if (store.systemState.directScore == null) {\r\n    //     return <></>;\r\n    // } else {\r\n    //     return <Redirect to=\"/\" />;\r\n    //     // return <MainFrame />;\r\n    // }\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nexport default DirectView;","import { Redirect } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst DirectLogin = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        const seq = DataUtil.getDecryptionedUserSeq(props.hashKey);\r\n        console.log(seq);\r\n        DataUtil.findUserInfoFromSeq(seq).then(resList => {\r\n            console.log(resList);\r\n            if (resList.length > 0) {\r\n                const loginProps = resList[0];\r\n                // store.userEnv.login = loginProps;\r\n                // dispatcher.system.setUserEnv(store.userEnv);\r\n            }\r\n        });\r\n    }, []);\r\n    // if (store.userEnv.login == null) {\r\n    //     return <></>;\r\n    // } else {\r\n    //     return <Redirect to=\"/\" />;\r\n    //     // return <MainFrame />;\r\n    // }\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nexport default DirectLogin;","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\ntype NotePorp = {\r\n    version: string;\r\n    date: string;\r\n    note: string;\r\n}\r\n\r\nconst ReleaseNote = () => {\r\n    const { store } = useContext(GlobalContext);\r\n\r\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\r\n    useEffect(() => {\r\n        fetch('assets/release_note.json')\r\n            .then(response => response.json()) // (2) レスポンスデータを取得\r\n            .then(json => { // (3)レスポンスデータを処理\r\n                const list = json as NotePorp[];\r\n\r\n                setJsx(list.map((item, i) => {\r\n                    const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n                    return (\r\n                        <_Item key={i}>\r\n                            <_Header>v{item.version} ({item.date})</_Header>\r\n                            <_Detail>{record}</_Detail>\r\n                        </_Item>\r\n                    );\r\n                }));\r\n            });\r\n    }, []);\r\n\r\n    return (<_ListFrame>{jsx}</_ListFrame>);\r\n}\r\n\r\nexport default ReleaseNote;\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    /* height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px); */\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #bfcace;\r\n    border: 1px solid #9b9b9b;\r\n    border-radius: 6px;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    font-weight: 600;\r\n    /* background-color: #8bdbf8; */\r\n    color: #494975;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    /* background-color: #dafce4; */\r\n    color: #754949;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ReleaseNote from \"./releaseNote\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [userCount, setUserCount] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        countUsers().then(cnt => {\r\n            setUserCount(cnt);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <ReleaseNote />\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{0} arts have been published.</_MessageRecord>\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeChannel;\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nexport const findAllScore = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT seq, (select id from user_tbl where seq = score.user_seq) as owner, dispnam, lastmod\r\n        FROM scoretbl score\r\n        WHERE share <> 'url'\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ListInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${HOME_USER_DIV_HEIGHT}px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #1c2c95;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\n\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 30px;\r\n    user-select: text;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ItemnForm = styled.input`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #1a1a1a;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #e9e9e9;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\r\n    border: 1px solid #1a2b3f;\r\n    color: #1a2b3f;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 42px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\nconst _CloudItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    /* height: 60px; */\r\n    border-bottom: 1px solid #888888;\r\n    /* background-color: white; */\r\n    background: linear-gradient(to bottom, transparent, #b6b6b684);\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    }\r\n`;\r\n\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { CgOptions, CgPiano } from 'react-icons/cg';\r\nimport { VscGitPullRequestCreate } from 'react-icons/vsc';\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport CreateChannel from \"../create/createChannel\";\r\nimport DirectView from \"./directView\";\r\nimport DirectLogin from \"./directLogin\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <_Wrap>\r\n                    <ChannelPane\r\n                        tabElements={[\r\n                            { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <HomeChannel /> },\r\n                            { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <CreateChannel/> },\r\n                        ]}\r\n                        activeNo={0}\r\n                    // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n                    />\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/test\" exact >\r\n                <_Wrap>\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/preview\" exact >\r\n                <DirectView hashKey={str} />\r\n            </Route>\r\n            <Route path=\"/user\" exact >\r\n                <DirectLogin hashKey={str} />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <span>L</span>iCreSia\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2022 Licresia All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#868686, #ffffff);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #636363;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport StoreSystem from \"../../redux/store/storeSystem\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../utils/form/validateUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst WIDTH = 750;\r\nconst HEIGHT = 600;\r\n/**\r\n * アカウントフレームのコンポーネント\r\n * @returns \r\n */\r\nconst AccountFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [oldPass, setOldPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPass, setNewPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPassConfirm, setNewPassConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n    const [emailList, setEmailList] = useState<string[]>([]);\r\n\r\n    const [isModify, setModify] = useState(false);\r\n    const loginProps = store.system.user as StoreSystem.User;\r\n\r\n    const reloadInfo = () => {\r\n        setUserId({ ...userId, value: loginProps.id });\r\n        setNewPass({ ...newPass, value: '' });\r\n        setNewPassConfirm({ ...newPassConfirm, value: '' });\r\n        setEmail({ ...email, value: loginProps.email });\r\n        setOldPass({ ...oldPass, value: loginProps.password });\r\n    }\r\n\r\n    useEffect(() => {\r\n        DataUtil.findUserInfoList().then(list => {\r\n\r\n            const userIdList: string[] = [];\r\n            const emailList: string[] = [];\r\n            list.forEach(info => {\r\n                if (info.id !== loginProps.id) userIdList.push(info.id);\r\n                if (info.email !== '') emailList.push(info.email);\r\n            });\r\n            setUserIdList(userIdList);\r\n            setEmailList(emailList);\r\n        });\r\n\r\n        const hash = DataUtil.getHashedFromUserSeq(loginProps.seq);\r\n\r\n        // ユーザページのURLに変更する。\r\n        window.history.replaceState('', '', `/#/user?v=${hash}`);\r\n\r\n        reloadInfo();\r\n\r\n        // 閉じる際にURLを元に戻す\r\n        return () => {\r\n            // alert('destroy');\r\n            window.history.replaceState('', '', `/#/`);\r\n        }\r\n    }, []);\r\n\r\n    const userTabJsx: JSX.Element = (\r\n        <_Wrap>\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'user id'}\r\n                checkable={userId}\r\n                setCheckable={setUserId}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !userIdList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass'}\r\n                isPassword\r\n                checkable={newPass}\r\n                setCheckable={setNewPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPassConfirm.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPassConfirm]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass*'}\r\n                isPassword\r\n                checkable={newPassConfirm}\r\n                setCheckable={setNewPassConfirm}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPass.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPass]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'email'}\r\n                checkable={email}\r\n                setCheckable={setEmail}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => {\r\n                            return value.length === 0 || value.split('@').length === 2;\r\n                        },\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !emailList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                // width={500}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'old pass'}\r\n                isPassword\r\n                checkable={oldPass}\r\n                setCheckable={setOldPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => value === loginProps.password,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                // dependency={[passwordConfirm]}\r\n                width={300}\r\n                marginTop={55}\r\n                isReadOnly={!isModify}\r\n            />\r\n        </_Wrap>\r\n    );\r\n\r\n    // 登録ボタンの活性状態\r\n    const permitRegist = (\r\n        userId.errors.length === 0\r\n        && newPass.errors.length === 0\r\n        && newPassConfirm.errors.length === 0\r\n        && email.errors.length === 0\r\n        && oldPass.errors.length === 0\r\n    );\r\n\r\n    const updateUserInfo = () => {\r\n        const passwordStr = newPass.value.length === 0 ? '' : `,password = '${newPass.value}'`;\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `UPDATE user_tbl SET id = '${userId.value}', email = '${email.value}'${passwordStr}\r\n            WHERE seq = ${loginProps?.seq}`\r\n        ).then(() => {\r\n            loginProps.id = userId.value;\r\n            if (newPass.value.length > 0) {\r\n                loginProps.password = newPass.value;\r\n            }\r\n            loginProps.email = email.value;\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Modify successful!\" />;\r\n            setStore({...store});\r\n        });\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <FormUtil.Message\r\n                    message=\"If you bookmark this page, you can easily login by URL.\"\r\n                />\r\n            </_Header>\r\n            <_Body>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'User', enable: true, cont: userTabJsx },\r\n                        { name: 'Security', enable: false, cont: <></> },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_Body>\r\n            <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        {\r\n                            label: 'Close',\r\n                            callback: () => {\r\n                                // dispatcher.system.closeDialog();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Cancel',\r\n                            isEnable: isModify,\r\n                            callback: () => {\r\n                                setModify(false);\r\n                                reloadInfo();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isModify ? 'Modify' : 'Regist',\r\n                            isEnable: !isModify || permitRegist,\r\n                            callback: () => {\r\n                                if (!isModify) {\r\n                                    setModify(true);\r\n                                    setOldPass({ ...oldPass, value: '' });\r\n                                }\r\n                                else {\r\n                                    updateUserInfo();\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\n\r\nexport default AccountFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7eb;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    /* text-align: center; */\r\n`;\r\nconst _Body = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 100px);\r\n    padding: 4px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport AccountFrame from \"../accountFrame\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginCreateAccount = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isRegist, setRegist] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [passwordConfirm, setPasswordConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n\r\n    const createAuthText = () => {\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n        const list = '0123456789';\r\n        let text = '';\r\n        for (let i = 0; i < 6; i++) {\r\n            text += list.charAt(Math.random() * list.length);\r\n        }\r\n        return text;\r\n    };\r\n\r\n    /** 既存のユーザIDリストを格納 */\r\n    useEffect(() => {\r\n        DataUtil.findUserIdList().then(list => {\r\n            setUserIdList(list);\r\n        });\r\n\r\n        // fetch('https://api.ipify.org/?format=json').then(res => {\r\n        //     res.json().then(data => {\r\n        //         alert(data['ip']);\r\n        //     });\r\n        // });\r\n    }, []);\r\n\r\n    const [authCollation, setAuthCollation] = useState<string>(createAuthText());\r\n    const [authInput, setAuthInput] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    /** キャッシュした認証画像 */\r\n    const authPicture = useMemo(() => {\r\n        return CanvasUtil.getAuthTextURL(authCollation);\r\n\r\n    }, [authCollation]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n                case 'relation': list.push('[password] does not match confirm.'); break;\r\n            }\r\n        }\r\n        if (passwordConfirm.errors.length > 0) {\r\n            switch (passwordConfirm.errors[0]) {\r\n                case 'length': list.push('[password *] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    const registAction = () => {\r\n\r\n        (async () => {\r\n            let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n            let results = await response.json();\r\n            console.log(JSON.stringify(results[0].cnt));\r\n            const isExist = results[0].cnt > 0;\r\n            if (isExist) {\r\n                setMessageList(['That user id has already been recorded.']);\r\n            } else {\r\n                const nextSeq = await DataUtil.getNextUserSeq();\r\n                console.log(nextSeq);\r\n                await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(seq, id, password) VALUES(${nextSeq}, '${userId.value}', '${password.value}')`);\r\n                store.system.user = {\r\n                    seq: nextSeq,\r\n                    id: userId.value,\r\n                    password: password.value,\r\n                    email: '',\r\n                };\r\n                store.cloud = {\r\n                    projects: []\r\n                };\r\n                store.system.dialog = (<ConfirmDialog.Component\r\n                    message='You have successfully created an account!'\r\n                    buttons={[\r\n                        {\r\n                            label: 'OK',\r\n                            callback: () => {\r\n                                store.system.dialog = (<AccountFrame />);\r\n                                setStore({...store});\r\n                            }\r\n                        }\r\n                    ]}\r\n                />);\r\n                setStore({...store});\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0 && passwordConfirm.errors.length === 0;\r\n    }\r\n    const isAuthOK = () => {\r\n        return authInput.errors.length === 0 && authCollation === authInput.value;\r\n    }\r\n\r\n    return (<>\r\n\r\n        <_Frame isVisible={!isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass (Confirm).'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            },\r\n                            {\r\n                                checker: (value) => !userIdList.includes(value),\r\n                                errorType: \"relation\"\r\n                            },\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === passwordConfirm.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[passwordConfirm]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password*'}\r\n                        isPassword\r\n                        checkable={passwordConfirm}\r\n                        setCheckable={setPasswordConfirm}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === password.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[password]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Enter', isEnable: isLoginInfoOK(), callback: () => {\r\n                                    setRegist(true);\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Proof not a robot\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, input the same 6 number as the picture.'}\r\n                    />\r\n                    <_AuthText src={authPicture} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Change', callback: () => {\r\n                                    setAuthCollation(createAuthText());\r\n                                    setAuthInput({ value: '', errors: [] });\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                    {/* 照合する文字列 */}\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'6 numbers'}\r\n                        checkable={authInput}\r\n                        setCheckable={setAuthInput}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Regist', isEnable: isAuthOK(), callback: registAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setRegist(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginCreateAccount;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n\r\nconst _AuthText = styled.img<{\r\n}>`\r\n    display: block;\r\n    text-align: center;\r\n    margin: 4px auto;\r\n    background-color: #f7f0f0;\r\n    border: 1px solid #888888;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginLogin = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isForget, setForget] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        // alert(`Confirmation passwords don't match.`);\r\n        (async () => {\r\n            const results = await DataUtil.findUserInfoLogin(userId.value, password.value);\r\n            console.log(JSON.stringify(results));\r\n            if (results.length > 0) {\r\n                store.system.user = {\r\n                    seq: results[0].seq,\r\n                    id: results[0].id,\r\n                    password: results[0].password,\r\n                    email: results[0].email,\r\n                };\r\n                const resPrjList = await findUserProjectList(results[0].seq);\r\n                console.log(JSON.stringify(resPrjList));\r\n                store.cloud = {\r\n                    projects: resPrjList.map(res => ({\r\n                        source: res.source,\r\n                        name: res.name,\r\n                        seq: res.seq,\r\n                        lastmod: res.lastmod\r\n                    }))\r\n                };\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                    message=\"Login successful!\"\r\n                />;\r\n                setStore({ ...store });\r\n            } else {\r\n                setMessageList(['Incorrect user id or password.']);\r\n                // setPassword({ ...password, value: '' });\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0;\r\n    }\r\n\r\n    return (<>\r\n        <_Frame isVisible={!isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Enter', isEnable: isLoginInfoOK(), callback: enterAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Forgot your login information?\"\r\n                clickAction={() => {\r\n                    setForget(true);\r\n                }}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Email\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Submit login information to account address.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'email'}\r\n                        checkable={email}\r\n                        setCheckable={setEmail}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => {\r\n                                    return value.length === 0 || value.split('@').length === 2;\r\n                                },\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={500}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Send', isEnable: email.errors.length === 0, callback: () => {\r\n                                    DataUtil.findUserInfoFromEmail(email.value).then((list) => {\r\n                                        if (list.length > 0) {\r\n                                            const info = list[0];\r\n                                            const hash = DataUtil.getHashedFromUserSeq(info.seq);\r\n                                            const url = `https://demo-app.licresia.com/#/user?v=${hash}`;\r\n                                            DataUtil.sendQueryRequestToMailAPI({\r\n                                                from: 'info@licresia.com',\r\n                                                to: email.value,\r\n                                                subject: '【LiCreSia】support',\r\n                                                text: `Your login information is as follows.\\n\\nURL: ${url}\\nUSR ID: ${info.id}`\r\n                                            });\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"Your login information has been sent!\" />);\r\n                                        } else {\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"This email address is not registered.\" />);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setForget(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginLogin;\r\n\r\n\r\nexport const findUserProjectList = async (userSeq: number) => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT owner, seq, name, source, lastmod FROM prjcttbl WHERE owner = ${userSeq} order by seq`);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LoginCreateAccount from \"./loginCreateAccount\";\r\nimport LoginLogin from \"./loginLogin\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 500;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_LogoDiv>\r\n                <img src={logo} />\r\n            </_LogoDiv>\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {!isCreate ? <LoginLogin /> : <LoginCreateAccount />}\r\n            {/* <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        { name: 'Close', callback: closeAction },\r\n                        { name: 'Enter', callback: enterAction },\r\n                    ]}\r\n                />\r\n            </_Footer> */}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #bf808075;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n    background-color: #bf8080a2;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #c7a73e;\r\n        `}\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport LoginFrame from \"../dialog/login/loginFrame\";\r\nimport AccountFrame from \"../dialog/accountFrame\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const user = store.system.user;\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (user != null) {\r\n            setUserId('@' + user.id);\r\n        }\r\n    }, [user]);\r\n\r\n    const authButtonJsx = user == null ? (\r\n        <_LoginButton onClick={() => {\r\n            store.system.dialog = <LoginFrame />;\r\n            setStore({ ...store });\r\n            console.log(window.location.origin);\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Login / Sign up\r\n        </_LoginButton>\r\n    ) : (<>\r\n        <_UserName\r\n            isEntry={user != null}\r\n            onClick={() => {\r\n                store.system.dialog = <AccountFrame />;\r\n                setStore({ ...store });\r\n            }}\r\n        >{userId}</_UserName>\r\n        <_LoginButton onClick={() => {\r\n            store.system.user = null;\r\n            store.cloud = null;\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message={'Logout.\\nSee you next time!'}\r\n            />;\r\n            setStore({ ...store });\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Logout\r\n        </_LoginButton>\r\n    </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>Partice</_ACCENT>&nbsp;<_NORMAL>Simulator</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                {authButtonJsx}\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    font-style: italic;\r\n    text-shadow: 1px 2px 3px #dbdbdb6a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #9fc2d1;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #ececec;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #9afff292;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #ff393983;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    setStore: React.Dispatch<React.SetStateAction<Store>>;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, setStore] = useState(initialStore);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, setStore }}>\r\n            <>\r\n                {!store.system.isSplash ? <></> :\r\n                    <Splash\r\n                        remove={() => {\r\n                            setStore({...store, system: {\r\n                                ...store.system, isSplash: false\r\n                            }});\r\n                        }}\r\n                    />}\r\n                <_Wrap>\r\n                    <GloballDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #364887;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 18px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 22px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n"],"sourceRoot":""}