{"version":3,"sources":["system/base/design/styles.tsx","App.tsx","reportWebVitals.ts","index.tsx","system/contents/dialog/confirmDialog.tsx","system/utils/form/formUtiil.tsx","system/redux/store/store.tsx","system/utils/systemConst.tsx","system/contents/dialog/globalDialog.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/utils/treeUtil.tsx","system/utils/canvasUtil.tsx","system/contents/graphic/particle.tsx","system/contents/graphic/drawUtil.tsx","system/contents/graphic/vectorUtil.tsx","system/contents/create/factory/util/paramUtil.tsx","system/contents/create/preview/modulateBuilder.tsx","system/contents/create/preview/previewUtil.tsx","system/utils/form/validateUtil.tsx","system/contents/create/factory/util/logicElementUtil.tsx","system/contents/create/preview/inputForm/previewLogicInputForm.tsx","system/contents/create/preview/inputForm/previewSeedInputForm.tsx","system/contents/create/preview/logicPreviewFrame.tsx","system/contents/create/factory/detail/logic/editorArgumentMng.tsx","system/contents/create/factory/detail/common/modifyOperations.tsx","system/contents/create/factory/detail/logic/editorParamItem.tsx","system/contents/create/factory/detail/logic/editorArgumentItem.tsx","system/contents/create/factory/detail/seed/editorSeedMng.tsx","system/contents/create/factory/detail/logic/editorLogicMng.tsx","system/contents/create/factory/detail/logic/editorLogicItem.tsx","system/contents/create/factory/detail/logic/editorBehiviorMng.tsx","system/contents/create/factory/detail/logic/editorVisualMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnector.tsx","system/contents/create/factory/dialog/sendTemplateDialog.tsx","system/contents/create/factory/detail/logic/editorSendManager.tsx","system/contents/create/factory/detail/logic/editorFieldMng.tsx","system/contents/create/factory/detail/logic/editorExtendMng.tsx","system/contents/create/factory/detail/seed/editorSeedItem.tsx","system/contents/create/factory/detail/seed/editorThumbnailMng.tsx","system/contents/create/factory/detail/seed/editorThumbnailItem.tsx","system/contents/create/factory/detail/seed/editorSampleItem.tsx","system/contents/create/factory/detail/seed/editorSampleMng.tsx","system/contents/create/factory/detail/seed/editorInterfaceManager.tsx","system/contents/create/factory/detail/seed/editorSeedArgMng.tsx","system/contents/create/factory/detail/seed/editorSeedArgItem.tsx","system/contents/create/factory/detail/seed/editorSeedSendMng.tsx","system/contents/create/factory/detail/seed/editorFormgrpItem.tsx","system/contents/create/factory/detail/seed/editorFormgrpMng.tsx","system/contents/create/factory/util/logicUtil.tsx","system/contents/create/factory/logicMainteTab.tsx","system/contents/create/manage/nameDefDialog.tsx","system/contents/create/manage/manageTab.tsx","system/contents/create/launcher/launcherTab.tsx","system/contents/create/createChannel.tsx","system/contents/entry/directView.tsx","system/contents/entry/directLogin.tsx","system/contents/home/publishFrame.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/dialog/accountFrame.tsx","system/contents/dialog/login/loginCreateAccount.tsx","system/contents/dialog/login/loginLogin.tsx","system/contents/dialog/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","system/utils/dataUtil.tsx"],"names":["FONT_SMALL","FONT_MIDIUM","CSS_LABEL","css","Styles","styled","div","App","useEffect","document","oncontextmenu","onkeydown","e","ctrlKey","includes","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","ConfirmDialog","props","useContext","GlobalContext","store","setStore","width","height","buttons","label","callback","system","dialog","_Frame","_Main","_Inner","message","split","map","msg","i","Message","isCenter","ButtonRecord","align","FormUtil","checkables","result","forEach","checkable","errors","length","type","isPassword","validaters","validates","dependency","dep","value","getErrors","validater","checker","push","errorType","setCheckable","_Record","isEnable","isVisible","textAlign","marginTop","marginBottom","undefined","titleLabel","_ItemnLabel","_ItemnInputBak","hasTitle","placeholder","onChange","target","readOnly","isReadOnly","jsx","labelWidth","_FixedLabel","useState","isNaN","setNaN","isNumber","concat","step","_ItemnInput","Number","valueAsNumber","onBlur","toString","marginLeft","headBlank","list","slice","unshift","labelText","_ItemCombobox","item","_Option","disabled","isDisabled","button","_Button","onClick","_Message","isLink","clickAction","_BorderText","title","_BorderPanel","innerJsx","_InfoDiv","color","textRecords","text","isRelation","isUse","_Switch","find","CSS_BUTTON_DISABLE","CSS_LABEL_MIDIUM","input","select","option","CSS_LABEL_SMALL","initialStore","isSplash","user","logicData","cloud","fileHandle","SystemConst","GloballDialog","_Blind","ChannelPane","activeNo","setActiveNo","_LabelList","tabElements","tab","index","name","icon","isActive","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","_Icon","_Label","ChannelContents","_Contents","TabbedPane","tabRecordNum","enable","TabLabel","_TabLabel","TabContents","TreeUtil","data","parent","depth","isOpen","children","node","parentNode","isDisable","focusNode","ref","useRef","buildElementNodeFromData","build","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","jsxList","useMemo","buildJsxRecords","element","spaceList","isCurrent","current","scrollWidth","tempNode","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","clickEvent","onDoubleClick","getLabelJsx","invalidate","_Wrap","createURL","draw","canvas","createElement","ctx","getContext","toDataURL","CanvasUtil","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillStyle","fillText","adjust","measureText","save","WIDTH","AUTH_TEXT_WIDTH","SIZE","AUTH_TEXT_HEIGHT","rotate","Math","PI","char","charAt","fontRand","random","alphaRand","Particle","owner","pos","prevPos","vec","frame","limit","isLive","drawer","extend","update","x","xy","y","this","param","radiusBase","radius","self","flashAppearFrame","appearFrame","unitFrame","flashHideFrame","shrinkStartRate","start","floor","g","createRadialGradient","grads","rgba","convertRgbaFromColorCode","r","b","a","offset","convertColorCodeFromRgba","grad","addColorStop","globalAlpha","disappearStartRate","beginPath","arc","fill","code","parseInt","substring","rate","DrawUtil","VectorUtil","rad","len","syncFromXY","sqrt","atan2","syncFromRad","cos","sin","VisualParamType","BehaviorParamType","Object","values","SelfParamType","ExtendParamType","EffectParamType","ModulateParamType","ConstantType","ParamUtil","ModulateBuilder","extendList","decayRate","decayLimit","gravity","gravityLimit","SCREEN_WIDTH","SCREEN_HEIGHT","searchElement","origin","rootData","sends","createParticleRec","cur","valueMapList","ConstantValueMap","fieldMng","mngs","fields","field","paramItem","convertFormulaToValue","visualParams","params","behaviorParams","getVisualParam","convertParamsToValue","getBehaviorParam","LIMIT","POS_X","POS_Y","Vector","VEC_X","VEC_Y","VEC_RAD","VEC_LEN","connectMng","inherits","connect","connector","disable","logicItem","method","wrap","logicMng","defs","def","searchDependLogic","depend","addValueMap","FRAME","itrfldValueMap","loopCnt","extendParams","loopCntVal","LOOP_COUNT","convertParamsToBoolean","INVOKE","iterateValueMap","LOOP_ITERATE","sendValueMapList","Instance","DECAY_LIMIT","DECAY_RATE","GRAVITY_VAL","GRAVITY_LIMIT","RADIUS","colorR","COLOR_R","colorG","COLOR_G","colorB","COLOR_B","colorA","COLOR_A","disappearStart","DISAPPEAR_START","shrinkStart","SHRINK_START","FLASH_APPEAR_FRAME","FLASH_HIDE_FRAME","createGradDrawer","warpList","formula","v","valueMap","m","formulaStr","varCnt","formulaItems","str","convertFormulaToBoolean","RADIAN_ROUND","PreviewUtil","min","max","checkIncludesChars","ch","indexOf","num","conditions","ValidateUtil","getInnerNode","typeList","some","getInnerWrap","innerNode","Error","listName","getListParamName","insertChild","innerWrap","wrapElement","listPos","splice","newNode","createNode","getCurrentIndex","size","ownerChildren","parentWrap","findIndex","swapOrder","ownDataChildren","curNo","swapNode","swapData","getSwapButtonsCallback","dependencyMngNodes","curIndex","isUpper","depNode","LogicElementUtil","isHead","isTail","getIdentifyParamName","getNamableProps","syncTreeElementFromWrap","childWrap","createParamWrapList","paramDataList","createVisualParams","createBehaviorParams","seedMng","nameList","curWrap","nameParam","mngWrap","listParam","mng","logic","curLogicOwner","VisualParams","BehaviorParams","SelfParams","ExtendParams","EffectParams","ModulateParams","Constants","argMng","args","arg","prefix","console","log","mngType","getLogicItem","visualMng","behaviorMng","inhMng","inh","inhfld","PreviewLogicInputForm","formList","setFormList","argumentList","argWrap","logicWrap","form","setSendingValueMap","argument","FormRecord","TextField","checkRequired","PreviewSeedInputForm","template","setTemplate","formgrpWrap","seedWrap","formgrpList","defines","getInnerWrapFixed","samples","presetList","defval","sendParams","send","BorderPanel","Record","Combobox","sample","ButtonItem","selectedIndex","usedGrps","formgrp","grp","targetForms","j","colorCode","_Type","_Range","formIndex","checkNumberRange","_Color","_Tsumami","buildForms","span","LogicPreviewFrame","sceens","setSceens","frameCnt","setFrameCnt","tabIndex","setTabIndex","setCur","isBuild","setBuild","isPlay","setPlay","sendingValueMap","isSeed","master","setTimeout","buildLogicProps","seed","entry","getOrigin","par","isInputOK","buildTabJsx","_FormDiv","previewTabJsx","_CanvasDiv","_IMG","src","_ProgressDiv","clickX","pageX","clientRect","getBoundingClientRect","left","window","pageXOffset","_ProgressVal","onKeyDown","_CloseButton","img","EditorArgumentMng","FactoryTreeContext","setFocusNode","addChild","ModifyOperations","isModify","setModify","removeSelf","isComplete","isCompleteCheck","checkableFields","mappingForm","firstRegist","modifyRegist","Level","EditorArgumentItem","logicNode","setName","argType","setArgType","reservedList","getParamNameList","valueType","Component","syncArgumentAdd","prevName","syncArgumentName","checkStringLength","LogicUtil","checkFieldName","filter","ArgTypes","refers","getArgumentRefers","syncArgumentDel","getSwapButtons","argName","searchVariableReferInFormula","varItem","newName","syncFormula","syncParamName","runRec","conn","inhLogic","sendMng","connWrap","syncArgumentCallback","inhMngNode","getInnerNodeFixed","sendNode","newArgName","paramWrap","createParamWrap","delArgName","delIndex","EditorSeedMng","itemWrap","EditorLogicMng","EditorLogicItem","el","isConnect","hasArgNode","hasFieldNode","hasConnectNode","existNameList","getExistNameList","toggleElement","hasNode","removeChild","getDefaultLogicMngs","syncLogicName","Switch","argumentNode","hasArgument","fieldNode","hasField","inheritNode","hasInherit","rootNode","logicMngNode","inherit","clone","JSON","parse","stringify","defaultName","getNumberingOnPrefixName","newWrap","getChildrenElementNode","getLocgicRefers","logicName","searchLogicReferInherit","id","EditorParamItem","setFormulaItems","varFormList","setVarFormList","isField","isCondition","inputType","level","FIELD","INITIAL","INHERIT_FIELD","INHERIT_EXTEND","INHERIT_SEND","fieldKeys","parentType","getLogicNode","fieldName","inhfldNode","fieldKeyList","paramNameList","addNum","delNum","parenthesisBalance","formJsxList","ParamInputTypes","getValueForm","isLastVar","isFormulaOK","hasFormError","varForm","getFormulaItem","syncFieldName","_Formula","isInvalid","_Var","_Sig","getFormulaJsx","getFieldRefers","mngNode","inheritWrap","EditorBehiviorMng","isVector","hasDecayParam","hasGravityParam","exchangeVectorMethod","flag","trueParamElements","falseParamElements","exchangeElements","toggleElements","paramElements","EditorVisualMng","drawMethod","THICKNESS","hasDisappearParam","hasShrinkParam","hasFlashParam","EditorInheritConnMng","EditorInheritConnector","identify","setIdentify","setMethod","setDepend","isCreate","logicList","idList","initConnectorNode","initSendParams","sendParamList","dependItem","getSendParamList","curParamList","isChange","ConnectTypes","dependLogic","COMPONENT_WIDTH","xName","setXName","yName","setYName","checkItems","argNode","behaviorNode","setParamValue","prpName","targetParam","paramList","xParam","yParam","SendTemplateDialog","EditorSendManager","isDepend","ConnectParentPosition","SetParentPosition","EditorFieldMng","EditorExtendMng","hasLoopParam","hasInvokeParam","EditorSeedItem","setEntry","permit","setPermit","logicNameList","items","PermitTypes","EditorThumbnailMng","LogicTreeContext","hasSample","WND_SIZE","EditorThumbnailItem","setFrame","urls","setUrls","getThumbnailURL","getSeedValueMap","sampleNo","argMap","targetFrame","pictureJsxList","imgJsx","_SampleDiv","_SampleName","EditorSampleItem","paramForms","setParamForms","argInfoList","paramForm","EditorSampleMng","EditorInterfaceManager","argMngNode","sendMngNode","sampleMngNode","hasGroupNode","execute","removeChildAll","newArgWrap","groupMngNode","hasGroup","EditorSeedArgMng","seedNode","EditorSeedArgItem","setMin","setMax","setStep","setDefval","sampleMng","sendMngWrap","EditorSeedSendMng","EditorFormgrpItem","groupMethod","setGroupMethod","targetList","setTargetList","seedargs","Array","FromGrpMedhods","formName","EditorFormgrpMng","COLOR_METHOD","COLOR_MNG","COLOR_LIST","COLOR_ITEM","COLOR_FIELD","isFocus","_Category","backgroundColor","_EditableValue","detailJsx","_Span","_Field","_Signature","_Detail","nameJsx","_ValueType","wrapNode","get","elementNode","getChildrenDataNode","createContext","LogicMainteTab","setInvalidate","masterNode","openPreviewDialog","n","_TreeDiv","_TreeHead","_TreeBody","Frame","getNodeDisplayJsx","_PropsDiv","_DetailDiv","_DetailHeader","_DetailHeaderLabel","getTypeName","Provider","setRootData","_DetailMainDiv","getDetailComponent","NameDefDialog","targetSeq","projects","p","seq","existNames","findProjectMaxSeq","maxSeq","newProject","source","lastmod","insertProject","targetItem","updateProjectName","registUpdate","DataUtil","sendQueryRequestToAPI","response","json","results","req","ManageTab","fcsListIdx","setFcsListIdx","listItemJsx","exist","_ListItem","_Status","isExist","_Name","hasData","incrRec","root","developCnt","privateCnt","releaseCnt","logicSize","logicCnt","_HeaderDiv","getInitialData","_BodyDiv","_LeftDiv","gZip","updateProjectSource","deleteProject","_ListDiv","unZip","_RighttDiv","loadFile","saveFile","FixedText","getSHA256Hash","LauncherTab","CreateChannel","SCORE_TAB_MARGIN","DirectView","getDecryptionedScoreSeq","hashKey","to","DirectLogin","getDecryptionedUserSeq","findUserInfoFromSeq","resList","PublishFrame","libList","setLibList","findAllReleaseProjectList","res","ownerId","seedList","argCount","setLibCnt","libListJsx","lib","dispCnt","count","_Header","_Owner","_CName","_CDate","_DetailMain","_SeedItemFrame","_SeedItemInner","_SeedName","_SeedArgCnt","_DetailOpen","_CSummary","_ListFrame","ReleaseNote","setJsx","fetch","record","note","version","date","HOME_USER_DIV_HEIGHT","HomeChannel","userCount","setUserCount","artsCnt","setArtsCnt","countUsers","cnt","_Left","_MessageRecord","_Right","MainFrame","basename","process","RouterManage","URLSearchParams","useLocation","search","path","exact","MAIN_FRAME_MARGIN","Splash","isSwitch","setSwitch","timerId","setTimerId","remove","clearTimeout","_Title","_NowLoading","_Copylight","fadeIn","keyframes","AccountFrame","userId","setUserId","oldPass","setOldPass","newPass","setNewPass","newPassConfirm","setNewPassConfirm","email","setEmail","userIdList","setUserIdList","emailList","setEmailList","loginProps","reloadInfo","password","findUserInfoList","info","hash","getHashedFromUserSeq","history","replaceState","userTabJsx","InputTextFormBak","checkAsciiChars","permitRegist","_Body","_Footer","passwordStr","updateUserInfo","LoginCreateAccount","isRegist","setRegist","setPassword","passwordConfirm","setPasswordConfirm","messageList","setMessageList","createAuthText","findUserIdList","authCollation","setAuthCollation","authInput","setAuthInput","authPicture","getAuthTextURL","InfoFrame","_AuthText","getNextUserSeq","nextSeq","MessageLink","LoginLogin","isForget","setForget","findUserInfoLogin","findUserProjectList","resPrjList","findUserInfoFromEmail","url","sendQueryRequestToMailAPI","from","subject","userSeq","LoginFrame","setCreate","logo","getLogoURL","_TypeSwitch","_LogoDiv","TotalHeader","authButtonJsx","_LoginButton","location","_UserName","isEntry","_Logo","_Menu","_Language","_MenuItem","TOTAL_HEADER_WIDTH","SystemEntry","_MainDiv","DB_SERVER_DOMAIN","APP_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","encode","Base64","hashedSeq","hashids","decode","getHashedFromScoreSeq","scoreSeq","hashedKey","mode","headers","Accept","body","createSendMailRequestInit","queryType","sql","databaseName","createQueryRequestInit","showOpenFilePicker","getFile","file","fileContents","plainData","createWritable","writable","write","close","showSaveFilePicker","types","accept","handle","catch","original","sha256","val","content","encodeURIComponent","zlib","gzipSync","buffer","Buffer","unzipSync","decodeURIComponent","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace"],"mappings":"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","file":"static/js/main.82d74076.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 18px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 22px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import React, { useEffect } from 'react';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst REACT_APP_AUTH0_DOMAIN = 'dev-a0p0m4lr.us.auth0.com';\nconst REACT_APP_AUTH0_CLIENT_ID = 'ABaWpYVBZwTr3tkyxhq1kWh2YwT4epew';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport { useContext } from \"react\";\r\n\r\nnamespace ConfirmDialog {\r\n\r\n    export const Component = (props: {\r\n        message: string;\r\n        width?: number;\r\n        height?: number;\r\n        buttons?: FormUtil.ButtonProps[];\r\n    }) => {\r\n\r\n        const {store,  setStore } = useContext(GlobalContext);\r\n\r\n        const width = props.width ?? 600;\r\n        const height = props.height ?? 150;\r\n        const buttons = props.buttons ?? [\r\n            {\r\n                label: 'OK',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({...store});\r\n                }\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main><_Inner>\r\n                    {props.message.split('\\n').map((msg, i) => {\r\n                        return <FormUtil.Message\r\n                            key={i}\r\n                            message={msg}\r\n                            isCenter\r\n                        />\r\n                    })}\r\n                </_Inner></_Main>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons} />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 110px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* background-color: #bb6868e1; */\r\n`;","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport ValidateUtil from \"./validateUtil\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nnamespace FormUtil {\r\n\r\n    export type CheckableValue = {\r\n        value: string;\r\n        errors: ValidateUtil.ErrorType[];\r\n    }\r\n\r\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\r\n        let result = true;\r\n        checkables.forEach(checkable => {\r\n            if (checkable.errors.length > 0) {\r\n                result = false;\r\n                return 1;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    export const InputTextFormBak = (props: {\r\n        titleLabel?: string;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        isCenter?: boolean;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        marginTop?: number;\r\n        isReadOnly?: boolean;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const type = props.isPassword ?? false ? 'password' : 'text';\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency);\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\r\n                <_ItemnInputBak\r\n                    type={type}\r\n                    value={props.checkable.value}\r\n                    hasTitle={props.titleLabel != undefined}\r\n                    width={props.width}\r\n                    isCenter={props.isCenter ?? false}\r\n                    placeholder={props.placeholder}\r\n                    onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        props.checkable.value = value;\r\n                        props.checkable.errors = getErrors(value);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }}\r\n                    errorType={errors.length === 0 ? undefined : errors[0]}\r\n                    readOnly={props.isReadOnly}\r\n                />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n\r\n    export const Record = (props: {\r\n        isEnable?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FormRecord = (props: {\r\n        titleLabel?: string;\r\n        labelWidth?: number;\r\n        isEnable?: boolean;\r\n        isVisible?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={props.isVisible ?? true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={props.labelWidth}>{props.titleLabel}</_ItemnLabel>}\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FixedText = (props: {\r\n        value: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        marginLeft?: number;\r\n    }) => {\r\n\r\n        return (\r\n            <_FixedLabel width={props.width}>{props.value}</_FixedLabel>\r\n        );\r\n    }\r\n\r\n    export const TextField = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        isNumber?: boolean;\r\n        marginLeft?: number;\r\n        step?: number;\r\n    }) => {\r\n        const [isNaN, setNaN] = useState(false);\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        let type = props.isPassword ?? false ? 'password' : 'text';\r\n        if (props.isNumber ?? false) {\r\n            type = 'number';\r\n        }\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n        const step = props.step ?? 1;\r\n\r\n        return (\r\n            <_ItemnInput\r\n                type={type}\r\n                value={value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                step={step}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                    if (type === 'number') {\r\n                        setNaN(Number.isNaN(e.target.valueAsNumber));\r\n                    }\r\n                }}\r\n                onBlur={() => {\r\n                    if (type === 'number') {\r\n                        if (isNaN) props.checkable.value = ' ';\r\n                        else props.checkable.value = Number(value).toString();\r\n                        // console.log(`[${props.checkable.value}]`);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }\r\n                }}\r\n                errorType={errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\r\n\r\n    export const Combobox = (props: {\r\n        list: ComboboxItemProps[];\r\n        headBlank?: boolean;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n        const headBlank = props.headBlank ?? false;\r\n        const list = props.list.slice();\r\n        if (headBlank) list.unshift({ value: '', labelText: '' });\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n\r\n        useEffect(() => {\r\n            // console.log('value: ' + props.checkable.value);\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        return (\r\n            <_ItemCombobox\r\n                value={props.checkable.value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    props.checkable.value = value;\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n\r\n                }}\r\n                errorType={errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            >{list.map((item, i) => {\r\n                return (\r\n                    <_Option key={i}\r\n                        value={item.value}\r\n                        disabled={item.isDisabled ?? false}\r\n                        isDisabled={item.isDisabled ?? false}\r\n                    >{item.labelText}</_Option>\r\n                );\r\n            })}</_ItemCombobox>\r\n        );\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        label: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ButtonRecord = (props: {\r\n        buttons: ButtonProps[],\r\n        align?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const align = props.align ?? 'right';\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={align}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.buttons.map((button, i) => {\r\n                    return (\r\n                        <_Button\r\n                            key={i}\r\n                            isCenter={align === 'center'}\r\n                            isEnable={button.isEnable ?? true}\r\n                            width={button.width}\r\n                            onClick={button.callback}\r\n                        >{button.label}</_Button>\r\n                    );\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const ButtonItem = (props: {\r\n        button: ButtonProps\r\n    }) => {\r\n        return (\r\n            <_Button\r\n                isCenter={false}\r\n                isEnable={props.button.isEnable ?? true}\r\n                width={props.button.width}\r\n                onClick={props.button.callback}\r\n            >{props.button.label}</_Button>\r\n        );\r\n    }\r\n\r\n    export const Message = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const MessageLink = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        clickAction: () => void;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isLink={true}\r\n                    onClick={props.clickAction}\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        // const title = props.title ?? 'title pl';\r\n        return (<>\r\n            <_BorderText>{props.title}</_BorderText>\r\n            <_BorderPanel isEnable={props.isEnable ?? true}>{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export const InfoFrame = (props: {\r\n        height?: number;\r\n        textRecords: string[];\r\n    }) => {\r\n        const height = props.height ?? 70;\r\n        const color = '#1a9900';\r\n        return (<>\r\n            <_InfoDiv height={height} color={color}>\r\n                {props.textRecords.map((text, i) => {\r\n                    return <span key={i}>{text}<br /></span>;\r\n                })}\r\n            </_InfoDiv>\r\n        </>);\r\n    };\r\n\r\n    export const Switch = (props: {\r\n        label: string;\r\n        isUse: boolean;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        isRelation?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isRelation = props.isRelation ?? false;\r\n        const callback = isRelation && props.isUse ? () => { } : props.callback;\r\n        return (\r\n            <_Switch\r\n                isRelation={isRelation}\r\n                isUse={props.isUse}\r\n                isEnable={props.isEnable ?? true}\r\n                width={props.width}\r\n                onClick={callback}\r\n            >{props.label}</_Switch>\r\n        );\r\n    }\r\n\r\n    export const checkItems = (list: CheckableValue[]) => {\r\n        return list.find(item => item.errors.length > 0) == undefined;\r\n    }\r\n}\r\n\r\nexport default FormUtil;\r\n\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n    textAlign: 'left' | 'center' | 'right';\r\n    marginTop: number;\r\n    marginBottom: number;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    width: 100%;\r\n    height: 40px;\r\n    margin-top: ${props => props.marginTop}px;\r\n    margin-bottom: ${props => props.marginBottom}px;\r\n    /* background-color: #b3b4c4; */\r\n    /* border: 1px solid #000; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    text-align: ${props => props.textAlign};\r\n`;\r\n\r\nconst _ItemnLabel = styled.div<{\r\n    labelWidth?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.labelWidth ?? 140}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #c3c3c3fc, #d8d8d8, #c3c3c3fc);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n`;\r\n\r\nconst _FixedLabel = styled.div<{\r\n    width?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #0c0e86;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c51a;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n    overflow-x: hidden;\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n`;\r\n\r\nconst _ItemnInputBak = styled.input<{\r\n    readOnly?: boolean;\r\n    isCenter: boolean;\r\n    hasTitle: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${props => !props.hasTitle ? css`\r\n    ` : css`\r\n        width: calc(100% - 152px);\r\n    `}\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    margin-top: 2px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    /* ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    } */\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemCombobox = styled.select<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n        pointer-events: none;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _Option = styled.option<{\r\n    isDisabled: boolean;\r\n}>`\r\n    ${props => !props.isDisabled ? '' : css`\r\n        color: #0000004b;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n    isLink?: boolean;\r\n    isCenter: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #002c52;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => !props.isLink ? '' : css`\r\n        color: #0459a3;\r\n        user-select: none;\r\n        text-decoration: underline;\r\n        &:hover {\r\n            color: #68a4d8;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #cdcdcd, #ebebeb, #cdcdcd);\r\n    border: 1px solid #747474;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isUse: boolean;\r\n    isEnable: boolean;\r\n    width?: number;\r\n    isRelation: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    color: #515151;\r\n    border: 1px solid #747474;\r\n    ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\r\n    ` : css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#ddc1d979' : '#d898b3'};\r\n        color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n    `}\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\r\n        ` : css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#d3a1cb79' : '#d898b3'};\r\n            color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _BorderText = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: #990000;\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    background-color: #dcddce;\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    margin: 4px 0 0 0;\r\n    display: inline-block;\r\n    background-color: #e7e5e561;\r\n    border: solid 1px #949494;\r\n    width: 100%;\r\n    height: ${props => props.height}px;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: ${props => props.color};\r\n    overflow-y: auto;\r\n`;","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport StoreCloud from \"./storeCloud\";\r\nimport StoreSystem from \"./storeSystem\";\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    system: StoreSystem.Param;\r\n    logicData: LogicUtil.WrapElement | null;\r\n    cloud: StoreCloud.Props | null;\r\n    fileHandle: FileSystemFileHandle | null\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    system: {\r\n        isSplash: false,\r\n        user: null,\r\n        dialog: null,\r\n    },\r\n    logicData: null,\r\n    cloud: null,\r\n    fileHandle: null,\r\n}","\r\nnamespace SystemConst {\r\n    export const AUTH_TEXT_WIDTH = 350;\r\n    export const AUTH_TEXT_HEIGHT = 70;\r\n}\r\n\r\nexport default SystemConst;\r\n\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n\r\n// ホームチャンネル\r\nexport const HOME_USER_DIV_HEIGHT = 400;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const dialog = store.system.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            store.system.dialog = null;\r\n            setStore({...store});\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n    tabRecordNum?: number;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    enable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabRecordNum = props.tabRecordNum ?? 1;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList tabRecordNum={tabRecordNum}>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isEnable={tab.enable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList tabRecordNum={tabRecordNum}>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={!tab.enable ? <></> : tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isEnable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: inline-block;\r\n    height: ${props => 35 * props.tabRecordNum}px;\r\n    text-align: left;\r\n    /* background-color: #ac3b3b; */\r\n    width: 100%;\r\n`;\r\nconst _ContList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    \r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                margin-top: 5px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${props.isEnable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        // parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        const ref = useRef({} as HTMLDivElement);\r\n\r\n        /**\r\n         * データを元に再帰的に以下のツリーを構成する。\r\n         * @returns ツリー\r\n         */\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        useEffect(() => {\r\n            if (focusNode != null && focusNode.parent != null) {\r\n                focusNode.parent.isOpen = true;\r\n            }\r\n        }, [focusNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            // console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    // 親判定\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    // 兄弟判定\r\n                    if (result === false && focusNode != null && focusNode.parent != null) {\r\n                        result = focusNode.parent.children.find(node => node == element) != undefined;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        width={ref.current.scrollWidth}\r\n                        isActive={isCurrent}\r\n                        isRelation={!isDisable && isRelationNode()}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap\r\n                ref={ref}\r\n                isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #374a54;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #1f3642;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n    isRelation: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #459cff46;\r\n    `}\r\n    opacity: 0.3;\r\n    ${props => !props.isRelation ? '' : css`\r\n        background-color: #ffffff28;\r\n        opacity: 1;\r\n    `}\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #b4d9dd83;\r\n        opacity: 1;\r\n    `}\r\n    width: ${props => props.width}px;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import SystemConst from \"./systemConst\";\r\n\r\nnamespace CanvasUtil {\r\n\r\n    /**\r\n     * Canvasに任意の描画をし、画像のURLを取得する\r\n     * @param width 幅\r\n     * @param height 高さ\r\n     * @param draw 描画\r\n     * @returns 画像のURL\r\n     */\r\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        draw(ctx);\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    export const getLogoURL = () => {\r\n        return CanvasUtil.createURL(580, 80, (ctx) => {\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.fillRect(0, 0, 350, 80);\r\n\r\n            ctx.shadowColor = \"#555\";\r\n            ctx.shadowOffsetX = 2;\r\n            ctx.shadowOffsetY = 1;\r\n            ctx.shadowBlur = 5;\r\n            ctx.font = 'italic 50pt Arial';\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.fillText('Particle ', 24, 64);\r\n            const adjust = ctx.measureText('Particle ').width;\r\n            ctx.fillStyle = '#6ea0c4';\r\n            ctx.fillText('Simulator', 24 + adjust, 64);\r\n            ctx.save();\r\n        });\r\n    }\r\n\r\n    export const getAuthTextURL = (text: string) => {\r\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\r\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\r\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\r\n            ctx.rotate(1 * Math.PI / 180);\r\n            for (let i = 0; i < text.length; i++) {\r\n                const char = text.charAt(i);\r\n\r\n                const fontRand = Math.random() * 60;\r\n                const alphaRand = Math.random() * 60;\r\n                ctx.font = `${20 + fontRand}pt Arial`;\r\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\r\n                ctx.fillText(char, i * SIZE, 60);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CanvasUtil;","import VectorUtil from \"./vectorUtil\";\r\n\r\nnamespace Particle {\r\n\r\n    export type Props = {\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        limit: number;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n    }\r\n\r\n    export class Instance {\r\n\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        prevPos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        frame: number;\r\n        limit: number;\r\n        isLive: boolean;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n\r\n        constructor(props: Props) {\r\n            this.owner = props.owner;\r\n            this.pos = props.pos;\r\n            this.prevPos = props.pos;\r\n            this.vec = props.vec;\r\n\r\n            this.frame = 0;\r\n            this.limit = props.limit;\r\n            this.isLive = true;\r\n            this.drawer = props.drawer;\r\n            this.extend = props.extend;\r\n        }\r\n\r\n        update = () => {\r\n\r\n            this.pos.x += this.vec.xy.x;\r\n            this.pos.y += this.vec.xy.y;\r\n\r\n            this.extend.forEach(callback => callback(this));\r\n\r\n            if (this.frame === this.limit) {\r\n                this.isLive = false;\r\n            }\r\n            this.frame++;\r\n        }\r\n\r\n        draw = (ctx: CanvasRenderingContext2D) => {\r\n            this.drawer(this, ctx);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Particle;","import Particle from \"./particle\";\r\n\r\nnamespace DrawUtil {\r\n\r\n    export type Rgba = {\r\n        r: number;\r\n        g: number;\r\n        b: number;\r\n        a: number;\r\n    }\r\n\r\n    export type ColorStop = {\r\n        offset: number;\r\n        color: string;\r\n    }\r\n\r\n    export type DrawerParam = {\r\n        color: string;\r\n        radius?: number;\r\n        disappearStartRate?: number;\r\n        shrinkStartRate?: number;\r\n        flashAppearFrame?: number;\r\n        flashHideFrame?: number;\r\n    }\r\n\r\n    export const createGradDrawer = (param: DrawerParam) => {\r\n\r\n        /** 基準となる半径 */\r\n        const radiusBase = param.radius ?? 30;\r\n        return (self: Particle.Instance, ctx: CanvasRenderingContext2D) => {\r\n            if(param.flashAppearFrame != undefined) {\r\n                const appearFrame = param.flashAppearFrame;\r\n                const hideFrame = (param.flashHideFrame as number);\r\n                const unitFrame = appearFrame + hideFrame;\r\n                if((self.frame % unitFrame) >= appearFrame) return;\r\n            }\r\n\r\n            let radius = radiusBase;\r\n            if (param.shrinkStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.shrinkStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    const rate = (limit - frame) / limit;\r\n                    radius *= rate;\r\n                }\r\n            }\r\n\r\n            const x = self.pos.x;\r\n            const y = self.pos.y;\r\n            const g = ctx.createRadialGradient(x, y, 1, x, y, radius);\r\n\r\n            const grads: ColorStop[] = [];\r\n            const rgba = convertRgbaFromColorCode(param.color) ?? { r: 255, g: 255, b: 255, a: 255 };\r\n            grads.push({ offset: 0, color: convertColorCodeFromRgba({ r: 255, g: 255, b: 255, a: Math.floor(rgba.a * 0.9) }) });\r\n            grads.push({ offset: 0.2, color: convertColorCodeFromRgba({ ...rgba, a: Math.floor(rgba.a * 0.15) }) });\r\n            grads.push({ offset: 1, color: convertColorCodeFromRgba({ ...rgba, a: 1 }) });\r\n\r\n            grads.forEach(grad => {\r\n                g.addColorStop(grad.offset, grad.color);\r\n            });\r\n\r\n            ctx.globalAlpha = 1;\r\n            if (param.disappearStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.disappearStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    ctx.globalAlpha = (limit - frame) / limit;\r\n                }\r\n            }\r\n\r\n            ctx.fillStyle = g;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n        };\r\n    }\r\n\r\n    export const convertRgbaFromColorCode = (code: string): Rgba | null => {\r\n        const div = code.split('#');\r\n        if (div.length !== 2 || div[1].length < 6) return null;\r\n\r\n        const value = div[1];\r\n        const r = Number.parseInt(value.substring(0, 2), 16);\r\n        const g = Number.parseInt(value.substring(2, 4), 16);\r\n        const b = Number.parseInt(value.substring(4, 6), 16);\r\n        let a = 1;\r\n        if (value.length === 8) {\r\n            a = Number.parseInt(value.substring(6, 8), 16);\r\n        }\r\n        return { r, g, b, a };\r\n    }\r\n\r\n    export const convertColorCodeFromRgba = (rgba: Rgba): string => {\r\n        const r = ('00' + rgba.r.toString(16)).slice(-2);\r\n        const g = ('00' + rgba.g.toString(16)).slice(-2);\r\n        const b = ('00' + rgba.b.toString(16)).slice(-2);\r\n        const a = ('00' + rgba.a.toString(16)).slice(-2);\r\n        return `#${r}${g}${b}${a}`;\r\n    }\r\n\r\n    export const toWhite = (color: string, rate: number): string => {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport default DrawUtil;","namespace VectorUtil {\r\n\r\n    export type XY = {\r\n        x: number, y: number;\r\n    }\r\n\r\n    export class Vector {\r\n\r\n        xy: XY;\r\n        rad: number;\r\n        len: number;\r\n\r\n        constructor(xy: XY) {\r\n            this.xy = xy;\r\n            this.rad = 0;\r\n            this.len = 0;\r\n            this.syncFromXY();\r\n        }\r\n\r\n        syncFromXY = () => {\r\n            this.len = Math.sqrt(this.xy.x * this.xy.x + this.xy.y * this.xy.y);\r\n            this.rad = Math.atan2(this.xy.y, this.xy.x);\r\n        }\r\n\r\n        syncFromRad = () => {\r\n            this.xy.x = Math.cos(this.rad) * this.len;\r\n            this.xy.y = Math.sin(this.rad) * this.len;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default VectorUtil;","\r\nnamespace ParamUtil {\r\n    export enum VisualParamType {\r\n        RADIUS = 'radius',\r\n        COLOR_R = 'color_r',\r\n        COLOR_G = 'color_g',\r\n        COLOR_B = 'color_b',\r\n        COLOR_A = 'color_a',\r\n        THICKNESS = 'thickness',\r\n    }\r\n    export const VisualParams = Object.values(VisualParamType);\r\n    export type VisualParam = typeof VisualParams[number];\r\n\r\n    export enum BehaviorParamType {\r\n        LIMIT = 'limit',\r\n        POS_X = 'pos_x',\r\n        POS_Y = 'pos_y',\r\n        VEC_X = 'vec_x',\r\n        VEC_Y = 'vec_y',\r\n        VEC_RAD = 'vec_radian',\r\n        VEC_LEN = 'vec_length',\r\n    }\r\n    export const BehaviorParams = Object.values(BehaviorParamType);\r\n    export type BehaviorParam = typeof BehaviorParams[number];\r\n\r\n    export enum SelfParamType {\r\n        FRAME = 'self_frame',\r\n        LIMIT = 'self_limit',\r\n        POS_X = 'self_pos_x',\r\n        POS_Y = 'self_pos_y',\r\n        VEC_X = 'self_vec_x',\r\n        VEC_Y = 'self_vec_y',\r\n        VEC_RAD = 'self_vec_radian',\r\n        VEC_LEN = 'self_vec_length',\r\n    }\r\n    export const SelfParams = Object.values(SelfParamType);\r\n    export type SelfParam = typeof SelfParams[number];\r\n\r\n    export enum ExtendParamType {\r\n        LOOP_COUNT = 'loop_count',\r\n        LOOP_ITERATE = 'loop_iterate',\r\n        INVOKE = 'invoke',\r\n    }\r\n    export const ExtendParams = Object.values(ExtendParamType);\r\n    export type ExtendParam = typeof ExtendParams[number];\r\n\r\n    export enum EffectParamType {\r\n        DISAPPEAR_START = 'disappear_start',\r\n        SHRINK_START = 'shrink_start',\r\n        FLASH_APPEAR_FRAME = 'flash_appear_frame',\r\n        FLASH_HIDE_FRAME = 'flash_hide_frame',\r\n    }\r\n    export const EffectParams = Object.values(EffectParamType);\r\n    export type EffectParam = typeof EffectParams[number];\r\n\r\n    export enum ModulateParamType {\r\n        DECAY_RATE = 'decay_rate',\r\n        DECAY_LIMIT = 'decay_limit',\r\n        GRAVITY_VAL = 'gravity_val',\r\n        GRAVITY_LIMIT = 'gravity_limit',\r\n    }\r\n    export const ModulateParams = Object.values(ModulateParamType);\r\n    export type ModulateParam = typeof ModulateParams[number];\r\n\r\n    export enum ConstantType {\r\n        SCREEN_WIDTH = 'screen_width',\r\n        SCREEN_HEIGHT = 'screen_height',\r\n        PI = 'pi',\r\n        RADIAN_ROUND = 'radian_round',\r\n    }\r\n    export const Constants = Object.values(ConstantType);\r\n    export type Constant = typeof Constants[number];\r\n\r\n}\r\n\r\nexport default ParamUtil;","import Particle from \"../../graphic/particle\";\r\n\r\nnamespace ModulateBuilder {\r\n\r\n    type ModulateParam = {\r\n        decayRate?: number;\r\n        decayLimit?: number;\r\n        gravity?: number;\r\n        gravityLimit?: number;\r\n    }\r\n\r\n    export const build = (extendList: ((self: Particle.Instance) => void)[], param: ModulateParam) => {\r\n        \r\n        // 減衰メソッド\r\n        if (param.decayRate != undefined && param.decayLimit != undefined) {\r\n            const decayLimit = param.decayLimit;\r\n            const decayRate = param.decayRate;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.len > decayLimit) {\r\n                    self.vec.len = self.vec.len * decayRate;\r\n                    self.vec.syncFromRad();\r\n                }\r\n            });\r\n        }\r\n        // 重力メソッド\r\n        if (param.gravity != undefined && param.gravityLimit != undefined) {\r\n            const gravityLimit = param.gravityLimit;\r\n            const gravity = param.gravity;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.xy.y < gravityLimit) {\r\n                    self.vec.xy.y += gravity;\r\n                    self.vec.syncFromXY();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModulateBuilder;","import DrawUtil from \"../../graphic/drawUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport ParamUtil from \"../factory/util/paramUtil\";\r\nimport ModulateBuilder from \"./modulateBuilder\";\r\n\r\nnamespace PreviewUtil {\r\n\r\n    export const SCREEN_WIDTH = 550;\r\n    export const SCREEN_HEIGHT = 550;\r\n\r\n    export type ValueMap = {\r\n        name: string;\r\n        value: number;\r\n    }\r\n\r\n    export const buildLogicProps = (\r\n        owner: Particle.Instance[],\r\n        origin: LogicUtil.NodeLogicItem,\r\n        rootData: LogicUtil.WrapElement,\r\n        sends: ValueMap[]\r\n    ): Particle.Props => {\r\n\r\n        /**\r\n         * ディペンドするロジック要素を識別名から探して返す。\r\n         * @param name ロジックの識別名\r\n         * @returns ロジック要素\r\n         */\r\n        const searchDependLogic = (name: string): LogicUtil.NodeLogicItem | null => {\r\n            const mng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n            const wrap = mng.defs.find(def => (def.data as LogicUtil.NodeLogicItem).name === name);\r\n            if (wrap == undefined) return null;\r\n            return wrap.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        /**\r\n         * 再帰的にパーティクルを生成する。\r\n         * @param cur ルートとなるロジック要素\r\n         * @param sends 親要素から送られてきたフィールド\r\n         * @returns パーティクルのプロパティ\r\n         */\r\n        const createParticleRec = (cur: LogicUtil.NodeLogicItem, sends: ValueMap[]): Particle.Props => {\r\n            let valueMapList: ValueMap[] = sends.concat(ConstantValueMap);\r\n\r\n\r\n            // フィールドのパラメータを取得\r\n            const fieldMng = searchElement('field-mng', cur.mngs);\r\n            if (fieldMng != null) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                    valueMapList.push({ name: paramItem.name, value });\r\n                });\r\n            }\r\n\r\n            const visualParams = (searchElement('visual-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n            const behaviorParams = (searchElement('behavior-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n\r\n            const getVisualParam = (name: string) => {\r\n                return convertParamsToValue(name, visualParams, valueMapList);\r\n            }\r\n            const getBehaviorParam = (name: string) => {\r\n                return convertParamsToValue(name, behaviorParams, valueMapList);\r\n            }\r\n\r\n            // Behaviorのパラメータを取得\r\n            const limit = Math.floor(getBehaviorParam(ParamUtil.BehaviorParamType.LIMIT) as number);\r\n            const pos = {\r\n                x: getBehaviorParam(ParamUtil.BehaviorParamType.POS_X) as number,\r\n                y: getBehaviorParam(ParamUtil.BehaviorParamType.POS_Y) as number\r\n            };\r\n            const vec = new VectorUtil.Vector({ x: 0, y: 0 });\r\n            const isVectorMethod = behaviorParams.find(param => param.name === ParamUtil.BehaviorParamType.VEC_X) != undefined;\r\n            if (isVectorMethod) {\r\n                vec.xy.x = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_X) as number;\r\n                vec.xy.y = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_Y) as number;\r\n                vec.syncFromXY();\r\n            } else {\r\n                vec.rad = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_RAD) as number;\r\n                vec.len = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_LEN) as number;\r\n                vec.syncFromRad();\r\n            }\r\n\r\n            /**\r\n             * 追加動作（子要素、エフェクト、モデュレート）\r\n             */\r\n            const extendList: ((self: Particle.Instance) => void)[] = [];\r\n\r\n            // 子要素を生成する\r\n            const connectMng = searchElement('inherit-mng', cur.mngs);\r\n            if (connectMng != null) {\r\n\r\n                // パーティクル情報のフィールド追加\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_X, value: pos.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_Y, value: pos.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_RAD, value: vec.rad });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_LEN, value: vec.len });\r\n\r\n                const connects = (connectMng.data as LogicUtil.NodeConnectManager).inherits;\r\n\r\n                connects.forEach(connect => {\r\n                    const connector = connect.data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.disable ?? false) return;\r\n\r\n                    const logicItem = connector.method === 'create' ?\r\n                        searchElement('inherit-logic', connector.mngs)?.data as LogicUtil.NodeLogicItem :\r\n                        searchDependLogic(connector.depend);\r\n\r\n                    if (logicItem != null) {\r\n\r\n                        extendList.push((self: Particle.Instance) => {\r\n\r\n                            const addValueMap = (item: ValueMap) => {\r\n                                const map = valueMapList.find(map => map.name === item.name);\r\n                                if (map != undefined) map.value = item.value;\r\n                                else valueMapList.push(item);\r\n                            }\r\n                            addValueMap({ name: ParamUtil.SelfParamType.FRAME, value: self.frame });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.LIMIT, value: self.limit });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_X, value: self.pos.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_Y, value: self.pos.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_X, value: self.vec.xy.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_Y, value: self.vec.xy.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_RAD, value: self.vec.rad });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_LEN, value: self.vec.len });\r\n\r\n                            // Inherit配下のフィールドのパラメータを取得\r\n                            const itrfldValueMap: ValueMap[] = [];\r\n                            const fieldMng = searchElement('inhfld-mng', connector.mngs);\r\n                            if (fieldMng != null) {\r\n                                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                                    itrfldValueMap.push({ name: paramItem.name, value });\r\n                                });\r\n                            }\r\n\r\n                            let loopCnt = 1;\r\n                            const extendItem = searchElement('extend-mng', connector.mngs) as LogicUtil.WrapElement;\r\n                            const extendParams = (extendItem.data as LogicUtil.NodeParamManager).params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                            const loopCntVal = convertParamsToValue(ParamUtil.ExtendParamType.LOOP_COUNT, extendParams, valueMapList.concat(itrfldValueMap));\r\n\r\n                            // 派生条件\r\n                            const isInvoke = convertParamsToBoolean(ParamUtil.ExtendParamType.INVOKE, extendParams, valueMapList) ?? true;\r\n\r\n                            // 条件を満たさない場合、以下の処理（パーティクルの生成）を行わない\r\n                            if (!isInvoke) return;\r\n\r\n                            // イテレータを利用している場合\r\n                            if (loopCntVal != undefined) {\r\n                                loopCnt = loopCntVal;\r\n                            }\r\n\r\n                            for (let i = 0; i < loopCnt; i++) {\r\n\r\n                                // イテレータ関連のパラメータを追加\r\n                                const iterateValueMap: ValueMap[] = [\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_COUNT, value: loopCnt },\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_ITERATE, value: i }\r\n                                ];\r\n\r\n                                const sendItem = searchElement('send-mng', connector.mngs)?.data as LogicUtil.NodeParamManager;\r\n                                const params = sendItem.params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                                const sendValueMapList: ValueMap[] = params.map(item => {\r\n                                    return { name: item.name, value: convertParamsToValue(item.name, params, valueMapList.concat(itrfldValueMap).concat(iterateValueMap)) ?? 0 }\r\n                                });\r\n\r\n                                const props = createParticleRec(\r\n                                    logicItem,\r\n                                    sendValueMapList\r\n                                );\r\n                                self.owner.push(new Particle.Instance(props));\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            // モデュレート（動きの変化）を付与\r\n            ModulateBuilder.build(extendList, {\r\n                decayLimit: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_LIMIT),\r\n                decayRate: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_RATE),\r\n                gravity: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_VAL),\r\n                gravityLimit: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_LIMIT),\r\n            });\r\n\r\n            // Visualのパラメータを取得\r\n            const radius = getVisualParam(ParamUtil.VisualParamType.RADIUS);\r\n            const colorR = getVisualParam(ParamUtil.VisualParamType.COLOR_R);\r\n            const colorG = getVisualParam(ParamUtil.VisualParamType.COLOR_G);\r\n            const colorB = getVisualParam(ParamUtil.VisualParamType.COLOR_B);\r\n            const colorA = getVisualParam(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // エフェクト付与\r\n            const disappearStart = getVisualParam(ParamUtil.EffectParamType.DISAPPEAR_START);\r\n            const shrinkStart = getVisualParam(ParamUtil.EffectParamType.SHRINK_START);\r\n            const flashAppearFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME);\r\n            const flashHideFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_HIDE_FRAME);\r\n\r\n            let drawer: (self: Particle.Instance, ctx: CanvasRenderingContext2D) => void = () => { };\r\n            if (radius != undefined) {\r\n                drawer = DrawUtil.createGradDrawer({\r\n                    radius: radius,\r\n                    color: DrawUtil.convertColorCodeFromRgba({\r\n                        r: colorR as number,\r\n                        g: colorG as number,\r\n                        b: colorB as number,\r\n                        a: colorA as number,\r\n                    }),\r\n                    disappearStartRate: disappearStart,\r\n                    shrinkStartRate: shrinkStart,\r\n                    flashAppearFrame,\r\n                    flashHideFrame,\r\n                });\r\n            }\r\n\r\n            return {\r\n                owner, pos, vec,\r\n                limit, drawer,\r\n                extend: extendList\r\n            };\r\n        }\r\n\r\n        return createParticleRec(origin, sends);\r\n    }\r\n\r\n    const searchElement = (type: LogicUtil.NodeType, warpList: LogicUtil.WrapElement[]) => {\r\n        return warpList.find(wrap => wrap.type === type) ?? null;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param valueMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToValue = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): number | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToValue(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToValue = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): number => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(ret);\r\n        return ret;\r\n    }\r\n\r\n    export const convertParamsToBoolean = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): boolean | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToBoolean(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToBoolean = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): boolean => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item, i) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            else if (item === '=') str = '==';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(formulaStr);\r\n        return ret;\r\n    }\r\n\r\n    export const ConstantValueMap: ValueMap[] = [\r\n        { name: ParamUtil.ConstantType.SCREEN_WIDTH, value: SCREEN_WIDTH },\r\n        { name: ParamUtil.ConstantType.SCREEN_HEIGHT, value: SCREEN_HEIGHT },\r\n        { name: ParamUtil.ConstantType.PI, value: 3.14159265359 },\r\n        { name: ParamUtil.ConstantType.RADIAN_ROUND, value: 3.14159265359 * 2 }\r\n    ];\r\n}\r\n\r\nexport default PreviewUtil;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\r\n\r\n    export type Validate = {\r\n        checker: (value: string) => boolean;\r\n        errorType: ErrorType;\r\n        message?: string;\r\n    }\r\n\r\n    /**\r\n     * 必須チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkRequired = (str: string) => {\r\n        return str.length > 0;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length === 0 || (str.length >= min && str.length <= max);\r\n    }\r\n\r\n    /**\r\n     * 半角英数時チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        return checkIncludesChars(str, list);\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列で構成されているかチェック\r\n     * @param str 検証する文字列\r\n     * @param list 入力を許す対象文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkIncludesChars = (str: string, list: string) => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            const ch = str.charAt(i);\r\n            if (list.indexOf(ch) === -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列が数値に変換できるかチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumber = (str: string) => {\r\n        return !isNaN(Number(str));\r\n    }\r\n\r\n    /**\r\n     * 数値の値の範囲をチェック\r\n     * @param str 検証する文字列\r\n     * @param min 下限\r\n     * @param max 上限\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumberRange = (str: string, min: number, max: number) => {\r\n        if (!isNaN(Number(str))) {\r\n            const num = Number(str);\r\n            return num >= min && num <= max;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default ValidateUtil;\r\n","import { assert } from \"console\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport ParamUtil from \"./paramUtil\";\r\n\r\n\r\nnamespace LogicElementUtil {\r\n\r\n    export const getInnerNode = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode | null => {\r\n\r\n        let cur: TreeUtil.ElementNode | null = node;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const target = cur.children.find(child => (child.data as LogicUtil.WrapElement).type === type);\r\n            if (target == undefined) cur = null;\r\n            else cur = target;\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerNodeFixed = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode => {\r\n        const innerNode = getInnerNode(node, ...typeList);\r\n        if (innerNode == null) throw new Error('[innerNode] is null.');\r\n        return innerNode as TreeUtil.ElementNode;\r\n    }\r\n\r\n    export const getInnerWrap = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement | null => {\r\n\r\n        let cur: LogicUtil.WrapElement | null = wrap;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const listName = getListParamName(cur.type);\r\n            if (listName == null) cur = null;\r\n            else {\r\n                const list = cur.data[`${listName}`] as LogicUtil.WrapElement[];\r\n                const target = list.find(child => child.type === type);\r\n                if (target == undefined) cur = null;\r\n                else cur = target;\r\n            }\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerWrapFixed = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement => {\r\n        const innerWrap = getInnerWrap(wrap, ...typeList);\r\n        if (innerWrap == null) throw new Error('[innerWrap] is null.');\r\n        return innerWrap as LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const addChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode) => {\r\n        return insertChild(wrapElement, node, node.children.length);\r\n    }\r\n\r\n    export const insertChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode, listPos: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, 0, wrapElement);\r\n        const newNode = TreeUtil.createNode(wrapElement, node);\r\n        node.children.splice(listPos, 0, newNode);\r\n        return newNode;\r\n    }\r\n\r\n    export const removeChild = (node: TreeUtil.ElementNode, listPos: number, size: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, size);\r\n        node.children.splice(listPos, size);\r\n    }\r\n\r\n    export const removeChildAll = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].length = 0;\r\n        node.children.length = 0;\r\n    }\r\n\r\n    export const isHead = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[0] == node;\r\n    }\r\n\r\n    export const isTail = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[ownerChildren.length - 1] == node;\r\n    }\r\n\r\n    export const getCurrentIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(parentWrap.type);\r\n        if (listName == null || parentWrap.data == null) return -1;\r\n        const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n        const curIndex = list.findIndex(wrap => wrap == node.data);\r\n        return curIndex;\r\n    }\r\n\r\n    const swapOrder = (node: TreeUtil.ElementNode, offset: number) => {\r\n        if (node.parent == null) return;\r\n        const ownerChildren = node.parent.children;\r\n        const wrap = node.parent.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        const ownDataChildren = wrap.data[`${listName}`] as LogicUtil.WrapElement[];\r\n\r\n        let curNo = getCurrentIndex(node);\r\n        if (curNo === -1) return;\r\n\r\n        // ツリーノードの入れ替え\r\n        const swapNode = ownerChildren[curNo];\r\n        ownerChildren[curNo] = ownerChildren[curNo + offset];\r\n        ownerChildren[curNo + offset] = swapNode;\r\n        // データ要素の入れ替え\r\n        const swapData = ownDataChildren[curNo];\r\n        ownDataChildren[curNo] = ownDataChildren[curNo + offset];\r\n        ownDataChildren[curNo + offset] = swapData;\r\n    }\r\n\r\n    export const getSwapButtons = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        ...dependencyMngNodes: TreeUtil.ElementNode[]\r\n    ) => {\r\n        return getSwapButtonsCallback(node, invalidate, (curIndex, isUpper) => {\r\n            if (dependencyMngNodes.length > 0) {\r\n                dependencyMngNodes.forEach(depNode => {\r\n                    swapOrder(depNode.children[curIndex], isUpper ? -1 : 1);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    export const getSwapButtonsCallback = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        callback: (curIndex: number, isUpper: boolean) => void\r\n    ) => {\r\n        const curIndex = getCurrentIndex(node);\r\n        return <>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↑',\r\n                        isEnable: !LogicElementUtil.isHead(node),\r\n                        callback: () => {\r\n                            swapOrder(node, -1);\r\n                            callback(curIndex, true);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↓',\r\n                        isEnable: !LogicElementUtil.isTail(node),\r\n                        callback: () => {\r\n                            swapOrder(node, 1);\r\n                            callback(curIndex, false);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>;\r\n    }\r\n\r\n    export const getListParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return 'defs';\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            // case 'root':\r\n            case 'logic-item': return 'mngs';\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return 'params';\r\n            case 'inherit-mng': return 'inherits';\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return 'args';\r\n            case 'sample-mng': return 'samples';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'fields';\r\n            case 'thumbnail-mng': return 'items';\r\n            case 'formgrp-mng': return 'defines';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getIdentifyParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'argument-item':\r\n            case 'field-item':\r\n            case 'seed-item':\r\n            case 'thumbnail-item':\r\n            case 'seedarg-item':\r\n            case 'sample-item':\r\n            case 'formgrp-item':\r\n            case 'logic-item': return 'name';\r\n            case 'connector': return 'id';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getNamableProps = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'connector': return 'id';\r\n            case 'logic-item': return 'name';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    export const syncTreeElementFromWrap = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        if (listName == null) return;\r\n        (wrap.data[listName] as any[]).forEach(childWrap => {\r\n            const newNode = TreeUtil.createNode(childWrap, node);\r\n            node.children.push(newNode);\r\n            syncTreeElementFromWrap(newNode);\r\n        });\r\n    }\r\n\r\n    export const createParamWrap = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem): LogicUtil.WrapElement => {\r\n        return { type: type, data: paramDataList };\r\n    }\r\n    export const createParamWrapList = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem[]): LogicUtil.WrapElement[] => {\r\n        return paramDataList.map(data => {\r\n            return { type: type, data: data };\r\n        });\r\n    }\r\n\r\n    export const createVisualParams = (): LogicUtil.WrapElement[] => {\r\n        const type = ParamUtil.VisualParamType;\r\n        return createParamWrapList('param-item', [\r\n            { name: type.RADIUS, formulaItems: ['var'], values: [{ type: 'direct', value: '20' }] },\r\n            { name: type.COLOR_R, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_G, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_B, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_A, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n        ]);\r\n    }\r\n\r\n    export const createBehaviorParams = (): LogicUtil.WrapElement[] => {\r\n        const list: LogicUtil.NodeParamItem[] = [];\r\n        const type = ParamUtil.BehaviorParamType;\r\n        list.push({\r\n            name: type.LIMIT,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '30' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        return createParamWrapList('param-item', list);\r\n    }\r\n\r\n    export const getDefaultLogicMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'visual-mng',\r\n                data: {\r\n                    params: createVisualParams()\r\n                } as LogicUtil.NodeParamManager\r\n            },\r\n            {\r\n                type: 'behavior-mng',\r\n                data: {\r\n                    params: createBehaviorParams()\r\n                } as LogicUtil.NodeParamManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    export const getInitialData = (): LogicUtil.WrapElement => {\r\n        return {\r\n            type: 'root',\r\n            data: {\r\n                seedMng: {\r\n                    type: 'seed-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeSeedManager\r\n                } as LogicUtil.WrapElement,\r\n                logicMng: {\r\n                    type: 'logic-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeLogicManager\r\n                } as LogicUtil.WrapElement\r\n            } as LogicUtil.NodeRoot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 同階層の名前パラメータを持つ要素より、既存の名前一覧を取得する。\r\n     * @param node 現在のノード\r\n     * @returns 同階層の既存の名前一覧\r\n     */\r\n    export const getExistNameList = (node: TreeUtil.ElementNode) => {\r\n        const nameList: string[] = [];\r\n        const curWrap = node.data as LogicUtil.WrapElement;\r\n        const nameParam = getIdentifyParamName(curWrap.type);\r\n        const mngWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listParam = getListParamName(mngWrap.type);\r\n        if (listParam == null || nameParam == null) throw Error('List param or identifiy param not found.');\r\n        const list = mngWrap.data[listParam] as LogicUtil.WrapElement[];\r\n        list.forEach(wrap => {\r\n            if (wrap.data != null && curWrap != wrap) {\r\n                nameList.push(wrap.data[nameParam]);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getLogicNameList = (mng: LogicUtil.NodeLogicManager) => {\r\n        const nameList: string[] = [];\r\n        mng.defs.forEach(logic => {\r\n            if (logic.data != null) {\r\n                nameList.push((logic.data as LogicUtil.NodeLogicItem).name);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getParamNameList = (curLogicOwner: LogicUtil.NodeLogicItem) => {\r\n        const nameList: string[] = [];\r\n\r\n        // システム固有のパラメータ名を取得\r\n        ParamUtil.VisualParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.BehaviorParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.SelfParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ExtendParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.EffectParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ModulateParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.Constants.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n\r\n        // 引数のパラメータ名を取得\r\n        const argMng = curLogicOwner.mngs.find(mng => mng.type === 'argument-mng');\r\n        if (argMng != undefined) {\r\n            const args = (argMng.data as LogicUtil.NodeArgumentManager).args;\r\n            args.forEach(arg => {\r\n                if (arg.data != null) {\r\n                    nameList.push((arg.data as LogicUtil.NodeArgumentItem).name);\r\n                }\r\n            });\r\n        }\r\n        // フィールドのパラメータ名を取得\r\n        const fieldMng = curLogicOwner.mngs.find(mng => mng.type === 'field-mng');\r\n        if (fieldMng != undefined) {\r\n            const fields = (fieldMng.data as LogicUtil.NodeFieldManager).fields;\r\n            fields.forEach(field => {\r\n                if (field.data != null) {\r\n                    nameList.push((field.data as LogicUtil.NodeParamItem).name);\r\n                }\r\n            });\r\n        }\r\n        return nameList;\r\n    }\r\n\r\n    /**\r\n     * 子要素の接頭連番をチェックし、重複しない名称を返す。\r\n     * @param prefix 接頭語\r\n     * @param node 基準となるノード\r\n     */\r\n    export const getNumberingOnPrefixName = (prefix: string, node: TreeUtil.ElementNode) => {\r\n        let num = 0;\r\n        // 接頭番号を取得\r\n        while (true) {\r\n            const check = node.children.find(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                if (wrap.data == null) return false;\r\n                console.log(wrap);\r\n                return wrap.data[getNamableProps(wrap.type)] === `${prefix}${num}`;\r\n            });\r\n            if (check != undefined) num++;\r\n            else break;\r\n        }\r\n        return `${prefix}${num}`;\r\n    }\r\n\r\n    /**\r\n     * パラメータの式で参照されている変数を検索し、\r\n     * 任意の処理（callback）を実行する。\r\n     * @param node 現在のノード\r\n     * @param callback 処理\r\n     */\r\n    export const searchVariableReferInFormula = (node: TreeUtil.ElementNode, callback: Function) => {\r\n\r\n        const mngType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const getLogicItem = () => {\r\n            switch (mngType) {\r\n                case 'field-mng':\r\n                case 'argument-mng': return node.parent?.parent?.data as LogicUtil.WrapElement;\r\n                case 'inhfld-mng': return node.parent?.parent?.parent?.parent?.data as LogicUtil.WrapElement;\r\n            }\r\n        }\r\n        const logicItem = getLogicItem()?.data as LogicUtil.NodeLogicItem;\r\n        if (mngType === 'argument-mng') {\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (fieldMng != undefined) {\r\n                callback((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n        }\r\n        if (mngType !== 'inhfld-mng') {\r\n            const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n            if (visualMng != undefined) {\r\n                callback((visualMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n            const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n            if (behaviorMng != undefined) {\r\n                callback((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n        }\r\n        const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                if (mngType !== 'inhfld-mng') {\r\n                    const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                    // Inherit配下のField要素のチェック\r\n                    if (inhfld != null) {\r\n                        callback((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                    }\r\n                }\r\n                // Extend要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default LogicElementUtil;","import { useState, useMemo, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewLogicInputForm = (props: {\r\n    logicWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const argumentList: string[] = useMemo(() => {\r\n        let list: string[] = [];\r\n        const argWrap = LogicElementUtil.getInnerWrap(props.logicWrap, 'argument-mng');\r\n        if (argWrap != null) {\r\n            list = (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                const argItem = arg.data as LogicUtil.NodeArgumentItem;\r\n                return argItem.name;\r\n            });\r\n        }\r\n        return list;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFormList(argumentList.map(arg => {\r\n            return { value: arg, errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        if (formList.find(form => form.errors.length > 0) == undefined) {\r\n            props.setSendingValueMap(() => {\r\n                return formList.map((form, i) => {\r\n                    return { name: argumentList.map(arg => arg)[i], value: Number(form.value) }\r\n                });\r\n            })\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return <>{\r\n        formList.map((form, i) => {\r\n            const argument = argumentList[i];\r\n            return (<FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={argument}\r\n                labelWidth={250}\r\n                jsx={\r\n                    <FormUtil.TextField\r\n                        width={332}\r\n                        isNumber\r\n                        checkable={form}\r\n                        setCheckable={() => {\r\n                            setFormList(formList.slice());\r\n                        }}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            }\r\n                        ]}\r\n                    />\r\n                }\r\n            />);\r\n        })\r\n    }</>\r\n}\r\n\r\nexport default PreviewLogicInputForm;","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport DrawUtil from \"../../../graphic/drawUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewSeedInputForm = (props: {\r\n    seedWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [formgrpList, argumentList, presetList]: [LogicUtil.NodeFromGrpItem[], LogicUtil.NodeSeedArgItem[], LogicUtil.NodeSampleItem[]] = useMemo(() => {\r\n        const formgrpWrap = LogicElementUtil.getInnerWrap(props.seedWrap, 'interface-mng', 'formgrp-mng');\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        if (formgrpWrap != null) {\r\n            formgrpList = (formgrpWrap.data as LogicUtil.NodeFromgrpManager).defines.map(def => def.data as LogicUtil.NodeFromGrpItem);\r\n        }\r\n\r\n        const argWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedarg-mng');\r\n        const argumentList = (argWrap.data as LogicUtil.NodeSeedArgManager).args.map(arg => arg.data as LogicUtil.NodeSeedArgItem);\r\n\r\n        const sampleWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'sample-mng');\r\n        const sampleList = (sampleWrap.data as LogicUtil.NodeSampleManager).samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n        return [formgrpList, argumentList, sampleList];\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        setFormList(argumentList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (formList.find(form => form.errors.length > 0) == undefined) {\r\n            props.setSendingValueMap(() => {\r\n                const valueMap = formList.map((form, i) => {\r\n                    return { name: argumentList.map(arg => arg.name)[i], value: Number(form.value) }\r\n                });\r\n\r\n                // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                const sendMng = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                return sendParams.map(item => {\r\n                    const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                    if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                    return { name: item.name, value }\r\n                });\r\n            });\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    const buildForms = (): JSX.Element[] => {\r\n        const list: JSX.Element[] = [];\r\n        const usedGrps: string[] = [];\r\n        formList.forEach((form, i) => {\r\n            const argument = argumentList[i];\r\n            const formgrp = formgrpList.find(grp => grp.args.includes(argument.name));\r\n            if (formgrp != undefined) {\r\n                // 設定済みであれば追加しない\r\n                if (usedGrps.includes(formgrp.name)) return 1;\r\n                // 利用済みリストに追加\r\n                usedGrps.push(formgrp.name);\r\n                const targetForms: number[] = [];\r\n                argumentList.forEach((arg, j) => {\r\n                    if (formgrp.args.includes(arg.name)) {\r\n                        targetForms.push(j);\r\n                    }\r\n                });\r\n                const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                    r: Number(formList[targetForms[0]].value),\r\n                    g: Number(formList[targetForms[1]].value),\r\n                    b: Number(formList[targetForms[2]].value),\r\n                    a: 255\r\n                }).substring(0, 7);\r\n                // console.log(colorCode);\r\n                list.push(<div key={i}>\r\n                    <FormUtil.Record\r\n                        jsx={\r\n                            <_Message>{formgrp.name}: <_Type>color </_Type><_Range>({0} ～ {255} respectively)</_Range></_Message>\r\n                        }\r\n                    />\r\n                    <FormUtil.Record\r\n                        jsx={<>\r\n                            {targetForms.map((formIndex, j) => {\r\n                                return (\r\n                                    <FormUtil.TextField\r\n                                        key={formIndex}\r\n                                        width={92}\r\n                                        marginLeft={j === 0 ? 10 : 4}\r\n                                        isNumber\r\n                                        checkable={formList[formIndex]}\r\n                                        setCheckable={() => {\r\n                                            setFormList(formList.slice());\r\n                                        }}\r\n                                        validates={[\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            },\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkNumberRange(value, argument.min, argument.max),\r\n                                                errorType: 'value'\r\n                                            }\r\n                                        ]}\r\n                                    />\r\n                                );\r\n                            })}\r\n                            <_Color type=\"color\" value={colorCode}\r\n                                onChange={(value) => {\r\n                                    const rgba = DrawUtil.convertRgbaFromColorCode(value.target.value + 'ff');\r\n                                    if(rgba != null) {\r\n                                        formList[targetForms[0]].value = rgba.r.toString();\r\n                                        formList[targetForms[1]].value = rgba.g.toString();\r\n                                        formList[targetForms[2]].value = rgba.b.toString();\r\n                                    }\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                            />\r\n                        </>}\r\n                    />\r\n                </div>);\r\n            } else {\r\n                list.push(<div key={i}>\r\n                    <FormUtil.Record\r\n                        jsx={\r\n                            <_Message>{argument.name}: <_Type>number </_Type><_Range>({argument.min} ～ {argument.max})</_Range></_Message>\r\n                        }\r\n                    />\r\n                    <FormUtil.Record\r\n                        jsx={<>\r\n                            <FormUtil.TextField\r\n                                width={152}\r\n                                marginLeft={10}\r\n                                isNumber\r\n                                checkable={form}\r\n                                setCheckable={() => {\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, argument.min, argument.max),\r\n                                        errorType: 'value'\r\n                                    }\r\n                                ]}\r\n                            />\r\n                            <_Tsumami type=\"range\" value={Number(form.value)} min={argument.min} max={argument.max}\r\n                                onChange={(value) => {\r\n                                    formList[i] = { ...form, value: value.target.value };\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                            />\r\n                        </>}\r\n                    />\r\n                </div>);\r\n            }\r\n        });\r\n        return list;\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"Preset\"\r\n            innerJsx={<FormUtil.Record\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        width={402}\r\n                        checkable={template}\r\n                        setCheckable={setTemplate}\r\n                        headBlank\r\n                        list={presetList.map((sample, i) => {\r\n                            return {\r\n                                labelText: sample.name,\r\n                                value: i.toString()\r\n                            }\r\n                        })}\r\n                    />\r\n                    <FormUtil.ButtonItem\r\n                        button={{\r\n                            label: 'Apply',\r\n                            isEnable: template.value !== '',\r\n                            callback: () => {\r\n                                const selectedIndex = Number(template.value);\r\n                                const values = presetList[selectedIndex].values;\r\n                                values.forEach((value, i) => {\r\n                                    formList[i].value = value.toString();\r\n                                });\r\n                                setFormList(formList.slice());\r\n                            }\r\n                        }}\r\n                    />\r\n                </>}\r\n            />}\r\n        />\r\n        {buildForms()}\r\n    </>);\r\n}\r\n\r\nexport default PreviewSeedInputForm;\r\n\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n`;\r\n\r\nconst _Type = styled.span`\r\n    color: #c10000;\r\n    font-weight: 600;\r\n`;\r\nconst _Range = styled.span`\r\n    color: #423e84fb;\r\n`;\r\n\r\nconst _Tsumami = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 11px 0 0 10px;\r\n    width: 400px;\r\n`;\r\n\r\nconst _Color = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 3px 0 0 10px;\r\n    width: 100px;\r\n    height: 34px;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport PreviewLogicInputForm from \"./inputForm/previewLogicInputForm\";\r\nimport PreviewSeedInputForm from \"./inputForm/previewSeedInputForm\";\r\n\r\nnamespace LogicPreviewFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        master: LogicUtil.WrapElement;\r\n        rootData: LogicUtil.WrapElement;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n\r\n        const [sceens, setSceens] = useState<string[]>([]);\r\n        const [frameCnt, setFrameCnt] = useState<number>(-1);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isBuild, setBuild] = useState<boolean>(false);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n        \r\n        const [sendingValueMap, setSendingValueMap] = useState<((()=> PreviewUtil.ValueMap[]) | null)>(null);\r\n\r\n        const isSeed = props.master.type === 'seed-item';\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n        const build = () => {\r\n            if(sendingValueMap == null) return;\r\n            setBuild(true);\r\n            setCur(0);\r\n            const sceens: string[] = [];\r\n            const owner: Particle.Instance[] = [];\r\n            let frameCnt = 0;\r\n            do {\r\n                if (frameCnt === 0) {\r\n                    const getOrigin = () => {\r\n                        if (!isSeed) return props.master.data as LogicUtil.NodeLogicItem;\r\n                        else {\r\n                            const seed = props.master.data as LogicUtil.NodeSeedItem;\r\n                            const root = props.rootData.data as LogicUtil.NodeRoot;\r\n                            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                        }\r\n                    }\r\n                    owner.push(new Particle.Instance(\r\n                        PreviewUtil.buildLogicProps(owner, getOrigin(), props.rootData, sendingValueMap as any)\r\n                    ));\r\n                }\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n\r\n                    // 経過フレーム、要素数の表示\r\n                    ctx.globalAlpha = 1;\r\n                    ctx.font = '16pt Arial';\r\n                    ctx.fillStyle = '#ffffff';\r\n                    ctx.fillText(`${frameCnt}`, 6, 24);\r\n                    ctx.fillStyle = '#ffec5c';\r\n                    ctx.fillText(`${owner.length}`, 6, 44);\r\n\r\n                    ctx.save();\r\n                }));\r\n\r\n                // パーティクルの更新\r\n                for (let i = owner.length - 1; i >= 0; i--) {\r\n                    const particle = owner[i];\r\n\r\n                    particle.update();\r\n                }\r\n\r\n                // 死滅したパーティクルの削除\r\n                for (let i = owner.length - 1; i >= 0; i--) {\r\n                    const particle = owner[i];\r\n                    if (!particle.isLive) {\r\n                        owner.splice(i, 1);\r\n                    }\r\n                }\r\n\r\n                if (frameCnt > 500 || owner.length > 3000) break;\r\n                frameCnt++;\r\n            } while (owner.length > 0);\r\n            setFrameCnt(frameCnt);\r\n            setSceens(sceens);\r\n\r\n            setBuild(false);\r\n            setTabIndex(1);\r\n        }\r\n\r\n        const isInputOK = sendingValueMap != null;\r\n\r\n        const buildTabJsx = (\r\n            <_Wrap>\r\n                <_FormDiv\r\n                    isSeed={props.master.type === 'seed-item'}\r\n                >\r\n                    {!isSeed ? (\r\n                        <PreviewLogicInputForm\r\n                            logicWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                        />\r\n                    ) : (\r\n                        <PreviewSeedInputForm\r\n                            seedWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                        />\r\n                    )}\r\n                </_FormDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Build',\r\n                            isEnable: isInputOK && !isBuild,\r\n                            callback: () => {\r\n                                build();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / (frameCnt - 1)} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    if (tabIndex === 0) {\r\n                        if (isInputOK && e.key === ' ') build();\r\n                    } else {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                            } break;\r\n                            case 'ArrowRight': {\r\n                                if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                            } break;\r\n                            case ' ': {\r\n                                setPlay(!isPlay);\r\n                            } break;\r\n                        }\r\n                    }\r\n                    if (!isPlay && e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }\r\n                }\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Build', enable: true, cont: buildTabJsx },\r\n                            { name: 'Play', enable: frameCnt !== -1, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame >\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogicPreviewFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _FormDiv = styled.div<{\r\n    isSeed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 580px;\r\n    background-color: #c5cfd6df;\r\n    ${props => !props.isSeed ? '' : css`\r\n        background-color: #c6d6c5df;\r\n    `}\r\n    overflow-y: auto;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #c5c5c5df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorArgumentMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'argument-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentMng;","import { useContext, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nnamespace ModifyOperations {\r\n\r\n    export type Props = {\r\n        mappingForm: () => void;\r\n        checkableFields: FormUtil.CheckableValue[];\r\n        isInputOK?: boolean;\r\n        firstRegist: () => void;\r\n        modifyRegist: () => void;\r\n    }\r\n\r\n    export const Component = (props: Props) => {\r\n        const { node, isModify, setModify, removeSelf } = useContext(FactoryTreeContext);\r\n\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n        const isComplete = FormUtil.isCompleteCheck(props.checkableFields);\r\n\r\n        return (<>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: isModify,\r\n                        callback: () => {\r\n                            if (wrap.data == null) {\r\n                                removeSelf();\r\n                            } else {\r\n                                props.mappingForm();\r\n                            }\r\n                            setModify(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !isModify || (props.isInputOK ?? isComplete),\r\n                        callback: () => {\r\n                            if (!isModify) {\r\n                                setModify(true);\r\n                            } else {\r\n                                if (wrap.data == null) {\r\n                                    props.firstRegist();\r\n                                } else {\r\n                                    props.modifyRegist();\r\n                                }\r\n                                setModify(false);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default ModifyOperations;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype FormProps = {\r\n    inputType: FormUtil.CheckableValue;\r\n    value: FormUtil.CheckableValue;\r\n};\r\n\r\nenum Level {\r\n    FIELD = 0,\r\n    INITIAL,\r\n    INHERIT_FIELD,\r\n    INHERIT_EXTEND,\r\n    INHERIT_SEND\r\n}\r\n\r\nconst EditorParamItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    /** 名前 */\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    /** 式 */\r\n    const [formulaItems, setFormulaItems] = useState<string[]>([]);\r\n    /** 変数の入力フォーム */\r\n    const [varFormList, setVarFormList] = useState<FormProps[]>([]);\r\n    // const [formJsxList, setFaormJsxList] = useState<JSX.Element[]>([]);\r\n\r\n    const isField = wrap.type === 'field-item';\r\n    const isCondition = wrap.type === 'condition-item';\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        setName({ value: param.name, errors: [] });\r\n        setFormulaItems(param.formulaItems.slice());\r\n        setVarFormList(param.values.map(v => {\r\n            return {\r\n                inputType: { value: v.type, errors: [] },\r\n                value: { value: v.value, errors: [] }\r\n            }\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const level: Level = useMemo(() => {\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        switch (parentType) {\r\n            case 'field-mng': return Level.FIELD;\r\n            case 'visual-mng':\r\n            case 'behavior-mng': return Level.INITIAL;\r\n            case 'inhfld-mng': return Level.INHERIT_FIELD;\r\n            case 'extend-mng': return Level.INHERIT_EXTEND;\r\n            case 'send-mng': return Level.INHERIT_SEND;\r\n        }\r\n        return -1;\r\n    }, [node]);\r\n\r\n    /**\r\n     * 引数とフィールド変数のキーリストを取得する。\r\n     */\r\n    const [argumentList, fieldKeyList] = useMemo(() => {\r\n        let argumentList: string[] = [];\r\n        const fieldKeys: string[] = [];\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const targetTypes: LogicUtil.NodeType[] = ['field-mng', 'behavior-mng', 'visual-mng', 'inhfld-mng', 'send-mng', 'extend-mng'];\r\n        if (targetTypes.includes(parentType)) {\r\n            const getLogicNode = () => {\r\n                switch (parentType) {\r\n                    case 'field-mng':\r\n                    case 'visual-mng':\r\n                    case 'behavior-mng': return node.parent?.parent;\r\n                    case 'inhfld-mng':\r\n                    case 'send-mng':\r\n                    case 'extend-mng': return node?.parent?.parent?.parent?.parent;\r\n                }\r\n            };\r\n            const logicItem = (getLogicNode()?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n            // 引数リストを追加\r\n            const argMng = logicItem.mngs.find(mng => mng.type === 'argument-mng');\r\n            if (argMng != undefined) {\r\n                argumentList = (argMng.data as LogicUtil.NodeArgumentManager).\r\n                    args.map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n            }\r\n            // 変数リストを追加\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (level >= Level.INITIAL && fieldMng != undefined) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                    fieldKeys.push(fieldName);\r\n                });\r\n            }\r\n        } else if (parentType === 'seedsend-mng') {\r\n            // シード配下のSendは特別に扱う（どのレベルにも属さない）\r\n            const argMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'seedarg-mng');\r\n            if (argMng != null) {\r\n                argumentList = (argMng.data as LogicUtil.NodeSeedArgManager).\r\n                    args.map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n            } else throw new Error('argMng is undefined.');\r\n        }\r\n        if (level >= Level.INHERIT_FIELD) {\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_RAD);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_LEN);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.RADIUS);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_R);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_G);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_B);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // フィールドキーにInherit配下のFieldパラメータを追加\r\n            if (level >= Level.INHERIT_EXTEND) {\r\n                const inhfldNode = LogicElementUtil.getInnerNode(node.parent?.parent as TreeUtil.ElementNode, 'inhfld-mng');\r\n                if (inhfldNode != null) {\r\n                    const fieldMng = (inhfldNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeFieldManager;\r\n                    fieldMng.fields.forEach(field => {\r\n                        const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                        fieldKeys.push(fieldName);\r\n                    });\r\n                }\r\n            }\r\n            // フィールドキーにExtendパラメータを追加\r\n            if (level === Level.INHERIT_SEND) {\r\n                const extendWrap = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'extend-mng') as LogicUtil.WrapElement;\r\n                const extendElement = extendWrap.data as LogicUtil.NodeParamManager;\r\n                //Extendにloop_countのパラメータがある場合\r\n                if (extendElement.params.find(\r\n                    param => (param.data as LogicUtil.NodeParamItem).name === ParamUtil.ExtendParamType.LOOP_COUNT\r\n                ) != undefined) {\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_COUNT);\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_ITERATE);\r\n                }\r\n            }\r\n        }\r\n        return [argumentList, fieldKeys];\r\n    }, [node]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const paramNameList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (item === 'var') num++;\r\n        });\r\n\r\n        if (varFormList.length < num) {\r\n            const addNum = num - varFormList.length;\r\n            for (let i = 0; i < addNum; i++) varFormList.push({\r\n                inputType: { value: 'direct', errors: [] },\r\n                value: { value: '', errors: [] }\r\n            });\r\n            setVarFormList(varFormList.slice());\r\n        } else if (varFormList.length > num) {\r\n            const delNum = varFormList.length - num;\r\n            for (let i = 0; i < delNum; i++) varFormList.splice(varFormList.length - delNum, delNum);\r\n            setVarFormList(varFormList.slice());\r\n        }\r\n    }, [formulaItems]);\r\n\r\n    /** 「(」の数-「)」の数 */\r\n    const parenthesisBalance = useMemo(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (['(', 'rand(', 'integer('].includes(item)) num++;\r\n            else if (item === ')') num--;\r\n        });\r\n        return num;\r\n    }, [formulaItems]);\r\n\r\n    /** 値の入力フォームのJSX */\r\n    const formJsxList = useMemo(() => {\r\n        return varFormList.map((v, i) => {\r\n\r\n            const getValueForm = (): JSX.Element => {\r\n                const type = v.inputType.value as LogicUtil.ParamInputType;\r\n                if (type === 'direct') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isNumber\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else {\r\n                    let list: string[] = [];\r\n                    if (type === 'argument') {\r\n                        list = argumentList;\r\n                    } else if (type === 'field') {\r\n                        list = fieldKeyList;\r\n                    } else if (type === 'self') {\r\n                        list = ParamUtil.SelfParams;\r\n                    } else if (type === 'constant') {\r\n                        list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                    }\r\n                    return (\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            list={list.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n            return <FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={`var_${i}`}\r\n                labelWidth={90}\r\n                marginTop={i === 0 ? 4 : 0}\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        checkable={v.inputType}\r\n                        width={142}\r\n                        isReadOnly={!isModify}\r\n                        setCheckable={(checkable) => {\r\n                            varFormList[i].inputType = checkable;\r\n                            if (isModify) {\r\n                                varFormList[i].value.value = checkable.value === 'direct' ? '0' : '';\r\n                            }\r\n                            setVarFormList(varFormList.slice());\r\n                        }}\r\n                        list={LogicUtil.ParamInputTypes.filter(item => {\r\n                            switch (item) {\r\n                                case 'direct':\r\n                                case 'constant':\r\n                                case 'argument': return true;\r\n                                case 'field': return level >= Level.INITIAL;\r\n                                case 'self': return level >= Level.INHERIT_FIELD;\r\n                            }\r\n                        }).map(item => {\r\n                            return { value: item, labelText: item };\r\n                        })}\r\n                    />\r\n                    {getValueForm()}\r\n                </>}\r\n            />;\r\n        });\r\n    }, [varFormList, isModify]);\r\n\r\n    const getFormulaJsx = () => {\r\n        let num = 0;\r\n        const jsxList: JSX.Element[] = [];\r\n        formulaItems.forEach((item) => {\r\n            if (jsxList.length > 0) {\r\n                jsxList.push(<span key={jsxList.length}>&nbsp;</span>);\r\n            }\r\n            if (item === 'var') {\r\n                jsxList.push(<_Var key={jsxList.length}>{`$\\{var_${num}}`}</_Var>);\r\n                num++;\r\n            } else {\r\n                jsxList.push(<_Sig key={jsxList.length}>{item}</_Sig>);\r\n            }\r\n        });\r\n        return jsxList;\r\n    }\r\n\r\n    const isLastVar = () => formulaItems.length > 0 && ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const isFormulaOK = parenthesisBalance === 0 && varFormList.length > 0 &&\r\n        ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const hasFormError = !isFormulaOK || varFormList.find(varForm => varForm.value.errors.length > 0) != undefined;\r\n\r\n\r\n    const getFormulaItem = (label: string, width: number, isEnable: boolean, value: string) => {\r\n        return {\r\n            label, width, isEnable,\r\n            callback: () => {\r\n                formulaItems.push(value);\r\n                setFormulaItems(formulaItems.slice());\r\n            }\r\n        };\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeParamItem = {\r\n                    name: name.value,\r\n                    formulaItems: formulaItems.slice(),\r\n                    values: varFormList.map(varForm => {\r\n                        return {\r\n                            type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                            value: varForm.value.value\r\n                        }\r\n                    })\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n            }}\r\n            isInputOK={parenthesisBalance === 0 && !hasFormError && name.errors.length === 0}\r\n            modifyRegist={() => {\r\n                const data = wrap.data as LogicUtil.NodeParamItem;\r\n                data.formulaItems = formulaItems.slice();\r\n                data.values = varFormList.map(varForm => {\r\n                    return {\r\n                        type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                        value: varForm.value.value\r\n                    }\r\n                });\r\n                if (isField) {\r\n                    const prevName = data.name;\r\n                    data.name = name.value;\r\n                    if (prevName !== name.value) {\r\n                        syncFieldName(node.parent as TreeUtil.ElementNode, prevName, name.value);\r\n                    }\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify || !isField}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = paramNameList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeParamItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('+', 50, isModify && isLastVar(), '+'),\r\n                        getFormulaItem('-', 50, isModify && isLastVar(), '-'),\r\n                        getFormulaItem('*', 50, isModify && isLastVar(), '*'),\r\n                        getFormulaItem('/', 50, isModify && isLastVar(), '/'),\r\n                        getFormulaItem('%', 50, isModify && isLastVar(), '%'),\r\n                        getFormulaItem('(', 35, isModify && !isLastVar(), '('),\r\n                        getFormulaItem(')', 35, isModify && isLastVar() && parenthesisBalance > 0, ')'),\r\n                        {\r\n                            label: 'del',\r\n                            width: 60,\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            callback: () => {\r\n                                formulaItems.splice(formulaItems.length - 1, 1);\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {!isCondition ? <></> : (\r\n                    <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            getFormulaItem('<', 50, isModify && isLastVar(), '<'),\r\n                            getFormulaItem('<=', 50, isModify && isLastVar(), '<='),\r\n                            getFormulaItem('=', 50, isModify && isLastVar(), '='),\r\n                            getFormulaItem('>=', 50, isModify && isLastVar(), '>='),\r\n                            getFormulaItem('>', 50, isModify && isLastVar(), '>'),\r\n                            getFormulaItem('&&', 50, isModify && isLastVar(), '&&'),\r\n                            getFormulaItem('||', 50, isModify && isLastVar(), '||'),\r\n                        ]}\r\n                    />\r\n                )}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('var', 70, isModify && !isLastVar(), 'var'),\r\n                        getFormulaItem('rand', 80, isModify && !isLastVar(), 'rand('),\r\n                        getFormulaItem('integer', 80, isModify && !isLastVar(), 'integer('),\r\n                        {\r\n                            label: 'clear',\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            width: 90,\r\n                            callback: () => {\r\n                                setFormulaItems([]);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_Formula\r\n                    isInvalid={!isFormulaOK}\r\n                >{getFormulaJsx()}</_Formula>\r\n                {formJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify && isField}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getFieldRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {!isField ? <></> : LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorParamItem;\r\n\r\n/**\r\n * ノードの変数を参照している箇所のリストを返す。\r\n * @param node 変数のノード\r\n * @param argName 変数名\r\n * @returns 参照パラメータリスト\r\n */\r\nexport const getFieldRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n * フィールド名の変更に伴い、式で参照している変数を同期する\r\n * @param mngNode ノード\r\n */\r\nexport const syncFieldName = (mngNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const type = (mngNode.data as LogicUtil.WrapElement).type;\r\n    if (type === 'field-mng') {\r\n        const logic = (mngNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n\r\n        const visualMng = logic.mngs.find(mng => mng.type === 'visual-mng');\r\n        if (visualMng != undefined) {\r\n            syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const behaviorMng = logic.mngs.find(mng => mng.type === 'behavior-mng');\r\n        if (behaviorMng != undefined) {\r\n            syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                // Inherit配下のField要素のチェック\r\n                if (inhfld != null) {\r\n                    syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                }\r\n                // Extend要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    } else if (type === 'inhfld-mng') {\r\n        const inheritWrap = mngNode.parent?.data as LogicUtil.WrapElement;\r\n\r\n        // Extend要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        // Send要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n}\r\n\r\nconst _Formula = styled.div<{\r\n    isInvalid: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 12px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    overflow-wrap: break-word;\r\n    height: 100px;//calc(100% - 4px);\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    background-color: #ffffff8b;\r\n    ${props => !props.isInvalid ? '' : css`\r\n        background-color: #ffe8628a;\r\n    `}\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    padding: 0 0 0 4px;\r\n    vertical-align: top;\r\n    margin: 5px 0 0 6px;\r\n`;\r\nconst _Var = styled.span`\r\n    color: #e70013;\r\n`;\r\nconst _Sig = styled.span`\r\n    color: #3333339d;\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport GloballDialog from \"../../../../dialog/globalDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorArgumentItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n    \r\n    const logicNode = node.parent?.parent as TreeUtil.ElementNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n        setName({ ...name, value: param.name });\r\n        setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, argType]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeArgumentItem = {\r\n                    name: name.value,\r\n                    valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n                syncArgumentAdd(logicNode, name.value);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(logicNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = reservedList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeArgumentItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'color' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getArgumentRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    // DependしているInheritのSendパラメータを同期する\r\n                                    syncArgumentDel(logicNode, name.value);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentItem;\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param node 引数のノード\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param logicNode ロジックノード\r\n*/\r\nconst syncArgumentName = (logicNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n    const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n    if (fieldMng != undefined) {\r\n        syncFormula((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n    }\r\n    const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n    if (visualMng != undefined) {\r\n        syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n    if (behaviorMng != undefined) {\r\n        syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n    if (inhMng != undefined) {\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n            // Inherit配下のField要素のチェック\r\n            if (inhfld != null) {\r\n                syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n            // Extend要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            // Send要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        });\r\n    }\r\n\r\n    const syncParamName = (params: LogicUtil.WrapElement[]) => {\r\n        params.forEach(wrap => {\r\n            const item = wrap.data as LogicUtil.NodeParamItem;\r\n            if (item.name === prevName) {\r\n                item.name = newName;\r\n            }\r\n        });\r\n    }\r\n    if (wrap.type === 'logic-item') {\r\n\r\n        // dependしている箇所を全て反映するために再帰で洗う\r\n        const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n            const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n            if (inhMng == undefined) return;\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    const inhLogic = LogicElementUtil.getInnerWrapFixed(inh, 'inherit-logic').data as LogicUtil.NodeLogicItem;\r\n                    runRec(inhLogic);\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    const sendMng = LogicElementUtil.getInnerWrapFixed(inh, 'send-mng').data as LogicUtil.NodeParamManager;\r\n                    syncParamName(sendMng.params);\r\n                }\r\n            });\r\n        }\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(logic => {\r\n            runRec((logic.data as LogicUtil.WrapElement).data);\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const connWrap = logicNode.parent?.data as LogicUtil.WrapElement;\r\n        const sendMng = LogicElementUtil.getInnerWrapFixed(connWrap, 'send-mng').data as LogicUtil.NodeParamManager;\r\n        syncParamName(sendMng.params);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の更新に伴い、参照先のSend管理に処理（callback）を行う\r\n * @param logicNode ロジックノード\r\n * @param callback 処理\r\n */\r\nconst syncArgumentCallback = (\r\n    logicNode: TreeUtil.ElementNode,\r\n    callback: (sendNode: TreeUtil.ElementNode) => void\r\n) => {\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n\r\n    if (wrap.type === 'logic-item') {\r\n        const runRec = (logicNode: TreeUtil.ElementNode) => {\r\n            const inhMngNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'inherit-mng');\r\n            if (inhMngNode == undefined) return;\r\n            inhMngNode.children.forEach(child => {\r\n                const conn = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    runRec(LogicElementUtil.getInnerNodeFixed(child, 'inherit-logic'));\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    callback(LogicElementUtil.getInnerNodeFixed(child, 'send-mng'));\r\n                }\r\n            });\r\n        }\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(child => {\r\n            runRec(child);\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const sendNode = LogicElementUtil.getInnerNodeFixed(logicNode.parent as TreeUtil.ElementNode, 'send-mng');\r\n        callback(sendNode);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentAdd = (logicNode: TreeUtil.ElementNode, newArgName: string) => {\r\n    const addNewParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n            { name: newArgName, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n        );\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        sendMng.params.push(paramWrap);\r\n        sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n    }\r\n    syncArgumentCallback(logicNode, addNewParam);\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentDel = (logicNode: TreeUtil.ElementNode, delArgName: string) => {\r\n    const delArgParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        let delIndex = -1;\r\n        sendMng.params.some((param, i) => {\r\n            if ((param.data as LogicUtil.NodeParamItem).name == delArgName) {\r\n                delIndex = i;\r\n                return 1;\r\n            }\r\n        });\r\n        sendMng.params.splice(delIndex, 1);\r\n        sendNode.children.splice(delIndex, 1);\r\n    }\r\n    syncArgumentCallback(logicNode, delArgParam);\r\n}","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Seed',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seed-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedManager).defs.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorLogicMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Logic',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'logic-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\n\r\nconst EditorLogicItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [isConnect, hasArgNode, hasFieldNode, hasConnectNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        return [\r\n            parentType === 'connector',\r\n            list.includes('argument-mng'),\r\n            list.includes('field-mng'),\r\n            list.includes('inherit-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        if (!isConnect) {\r\n            const param = wrap.data as LogicUtil.NodeLogicItem;\r\n            setName({ ...name, value: param.name });\r\n        }\r\n    };\r\n\r\n    /** 既存のロジック名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => {\r\n        // インヘリットの場合、名前を持たないため取得しない\r\n        if (wrap.type === 'inherit-logic') return [];\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node, isConnect]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 引数要素の有無を判定\r\n     */\r\n    const hasArgument = () => {\r\n        const argumentNode = LogicElementUtil.getInnerNode(node, 'argument-mng');\r\n        if (argumentNode == null) return false;\r\n        return argumentNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'field-mng');\r\n        if (fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 派生要素の有無を判定\r\n     */\r\n    const hasInherit = () => {\r\n        const inheritNode = LogicElementUtil.getInnerNode(node, 'inherit-mng');\r\n        if (inheritNode == null) return false;\r\n        return inheritNode.children.length > 0;\r\n    }\r\n\r\n    return (<>\r\n        {isConnect ? <></> : (<>\r\n            <ModifyOperations.Component\r\n                mappingForm={mappingForm}\r\n                checkableFields={[name]}\r\n                firstRegist={() => {\r\n                    const element: LogicUtil.NodeLogicItem = {\r\n                        name: name.value,\r\n                        mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                    };\r\n                    element.name = name.value;\r\n                    wrap.data = element;\r\n\r\n                    element.mngs.forEach(mng => {\r\n                        const newNode = TreeUtil.createNode(mng, node);\r\n                        const data = (newNode.data as LogicUtil.WrapElement).data;\r\n                        (data as LogicUtil.NodeParamManager).params.forEach(param => {\r\n                            newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                        });\r\n                        node.children.push(newNode);\r\n                    });\r\n                    invalidate();\r\n                    setStore({ ...store });\r\n                }}\r\n                modifyRegist={() => {\r\n                    const param = wrap.data as LogicUtil.NodeLogicItem;\r\n                    const prevName = param.name;\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n                    // 名前が変わった場合、参照箇所も修正する\r\n                    if (prevName !== param.name) {\r\n                        syncLogicName(node, prevName, param.name);\r\n                    }\r\n                }}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"param\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Name\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={200}\r\n                                isReadOnly={!isModify}\r\n                                checkable={name}\r\n                                setCheckable={setName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => !existNameList.includes(value),\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n        </>)}\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Argument'}\r\n                        width={300}\r\n                        isUse={hasArgNode}\r\n                        isEnable={!hasArgument()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasArgNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'argument-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as LogicUtil.NodeArgumentManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            if (hasArgNode) listPos++;\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'field-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Inherit'}\r\n                            width={300}\r\n                            isUse={hasConnectNode}\r\n                            isEnable={!hasInherit()}\r\n                            callback={() => {\r\n                                let listPos = 2;\r\n                                if (hasArgNode) listPos++;\r\n                                if (hasFieldNode) listPos++;\r\n                                toggleElement(\r\n                                    hasConnectNode,\r\n                                    listPos,\r\n                                    {\r\n                                        type: 'inherit-mng',\r\n                                        data: {\r\n                                            inherits: []\r\n                                        } as LogicUtil.NodeConnectManager\r\n                                    }\r\n                                );\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        {isConnect ? <></> : (\r\n            <FormUtil.BorderPanel\r\n                title=\"operation\"\r\n                isEnable={!isModify}\r\n                innerJsx={<>\r\n                    <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Clone',\r\n                                // isEnable: !isModify,\r\n                                isEnable: false,\r\n                                callback: () => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Clone this logic.\"\r\n                                        buttons={[\r\n                                            {\r\n                                                label: 'Cancel',\r\n                                                callback: () => {\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                label: 'Enter',\r\n                                                callback: () => {\r\n                                                    let rootNode = node;\r\n                                                    while (rootNode.parent != null) rootNode = rootNode.parent;\r\n                                                    const inheritNode = node.children.find(el => (el.data as LogicUtil.WrapElement).type === 'inherit-logic');\r\n                                                    const logicMngNode = rootNode.children.find(el => (el.data as LogicUtil.WrapElement).type === 'logic-mng');\r\n                                                    if (logicMngNode == undefined || inheritNode == undefined) return;\r\n                                                    const inherit = (inheritNode.data as LogicUtil.WrapElement).data;\r\n                                                    const clone = JSON.parse(JSON.stringify((inherit))) as LogicUtil.NodeInheritItem;\r\n                                                    // ロジック名（自動命名）を取得\r\n                                                    const defaultName = LogicElementUtil.getNumberingOnPrefixName('clone_inherit_', logicMngNode);\r\n                                                    const logicItem: LogicUtil.NodeLogicItem = {\r\n                                                        ...clone,\r\n                                                        name: defaultName\r\n                                                    };\r\n                                                    const newWrap: LogicUtil.WrapElement = {\r\n                                                        type: 'logic-item',\r\n                                                        data: logicItem\r\n                                                    };\r\n\r\n                                                    // ロジックマネージャに追加\r\n                                                    const newNode = LogicElementUtil.addChild(newWrap, logicMngNode);\r\n                                                    // 子要素の展開\r\n                                                    newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                    // 自身（コネクタ）からインヘリット要素を削除\r\n                                                    LogicElementUtil.removeChild(node, 2, 1);\r\n\r\n                                                    const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                    param.method = 'depend';\r\n                                                    param.depend = logicItem.name;\r\n                                                    mappingForm();\r\n\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                    invalidate();\r\n                                                }\r\n                                            }\r\n                                        ]}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Delete',\r\n                                callback: () => {\r\n                                    const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                    const refers = getLocgicRefers(node, param.name);\r\n                                    if (refers.length === 0) {\r\n                                        removeSelf();\r\n                                    } else {\r\n                                        store.system.dialog = <ConfirmDialog.Component\r\n                                            message={`[${param.name}] is referenced in the Inherit.\\n${refers}`}\r\n                                        />;\r\n                                        setStore({ ...store });\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                    {/* 並び順入れ替えボタン */}\r\n                    {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n                </>}\r\n            />\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicItem;\r\n\r\n/**\r\n * ロジックを参照しているInheritのリストを返す。\r\n * @param node 現在のノード\r\n * @param logicName ロジック名\r\n * @returns 参照Inheritリスト\r\n */\r\nexport const getLocgicRefers = (node: TreeUtil.ElementNode, logicName: string) => {\r\n\r\n    const refers: string[] = [];\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        refers.push(conn.id);\r\n    }\r\n    searchLogicReferInherit(node, logicName, callback);\r\n    return refers;\r\n}\r\n\r\n/**\r\n * ロジック名の変更に伴い、参照しているインヘリットを同期する\r\n * @param node ロジックノード\r\n */\r\nconst syncLogicName = (node: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        conn.depend = newName;\r\n    }\r\n    searchLogicReferInherit(node, prevName, callback);\r\n}\r\n\r\nconst searchLogicReferInherit = (\r\n    node: TreeUtil.ElementNode,\r\n    logicName: string,\r\n    callback: (conn: LogicUtil.NodeInheritConnector) => void\r\n) => {\r\n    const logicMngNode = node.parent as TreeUtil.ElementNode\r\n    const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng == undefined) return;\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n            if (conn.method === 'create') {\r\n                const inhLogic = LogicElementUtil.getInnerWrap(inh, 'inherit-logic');\r\n                runRec(inhLogic?.data);\r\n            } else {\r\n                if (conn.depend === logicName) {\r\n                    callback(conn);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    logicMngNode.children.forEach(logic => {\r\n        runRec((logic.data as LogicUtil.WrapElement).data);\r\n    });\r\n}","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorBehiviorMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [isVector, hasDecayParam, hasGravityParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.BehaviorParamType.VEC_X),\r\n            list.includes(ParamUtil.ModulateParamType.DECAY_RATE),\r\n            list.includes(ParamUtil.ModulateParamType.GRAVITY_VAL)\r\n        ]\r\n    }, [node]);\r\n\r\n    const exchangeElements = (flag: boolean, listPos: number,\r\n        trueParamElements: LogicUtil.NodeParamItem[],\r\n        falseParamElements: LogicUtil.NodeParamItem[]\r\n    ) => {\r\n        const size = (flag ? trueParamElements : falseParamElements).length;\r\n        LogicElementUtil.removeChild(node, listPos, size);\r\n\r\n        (flag ? trueParamElements : falseParamElements).forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    const exchangeVectorMethod = () => {\r\n        exchangeElements(!isVector, 3,\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_X, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_Y, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ],\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_RAD, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_LEN, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ]\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            mng.params.splice(listPos, size);\r\n            node.children.splice(listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                mng.params.splice(listPos + i, 0, wrap);\r\n                const newNode = TreeUtil.createNode(wrap, node);\r\n                node.children.splice(listPos + i, 0, newNode);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Vector method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Direction method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={!isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"modulate\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Decay'}\r\n                            width={300}\r\n                            isUse={hasDecayParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDecayParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_RATE,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.9' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Gravity'}\r\n                            width={300}\r\n                            isUse={hasGravityParam}\r\n                            callback={() => {\r\n                                toggleElements(hasGravityParam, !hasDecayParam ? 5 : 7, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_VAL,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.2' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorBehiviorMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype Medhod = 'blank' | 'particle' | 'snake'\r\n\r\nconst EditorVisualMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [drawMethod, hasDisappearParam, hasShrinkParam, hasFlashParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        let drawMethod: Medhod = 'blank';\r\n        if(list.length > 0) {\r\n            drawMethod = list.includes(ParamUtil.VisualParamType.THICKNESS) ? 'snake' : 'particle';\r\n        }\r\n        return [\r\n            drawMethod,\r\n            list.includes(ParamUtil.EffectParamType.DISAPPEAR_START),\r\n            list.includes(ParamUtil.EffectParamType.SHRINK_START),\r\n            list.includes(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME)\r\n        ]\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    const addElements = (paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        paramElements.forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n    const removeElements = (elementNameList: string[]) => {\r\n        const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        elementNameList.forEach((name) => {\r\n            mng.params.forEach((param, i) => {\r\n                if((param.data as LogicUtil.NodeParamItem).name === name) {\r\n                    LogicElementUtil.removeChild(node, i, 1);\r\n                }\r\n            });\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam || hasFlashParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'None'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'blank'}\r\n                            callback={() => {\r\n                                mng.params.length = 0;\r\n                                node.children.length = 0;\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Snake Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'snake'}\r\n                            callback={() => {\r\n                                removeElements([\r\n                                    ParamUtil.VisualParamType.RADIUS\r\n                                ]);\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.THICKNESS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Particle Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'particle'}\r\n                            callback={() => {\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.RADIUS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '20' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"effect\"\r\n            isEnable={!isModify && drawMethod !== 'blank'}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Disappear'}\r\n                            width={300}\r\n                            isUse={hasDisappearParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDisappearParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.DISAPPEAR_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Shrink'}\r\n                            width={300}\r\n                            isUse={hasShrinkParam}\r\n                            callback={() => {\r\n                                toggleElements(hasShrinkParam, !hasDisappearParam ? 5 : 6, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.SHRINK_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Flash'}\r\n                            width={300}\r\n                            isUse={hasFlashParam}\r\n                            callback={() => {\r\n                                toggleElements(hasFlashParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_APPEAR_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_HIDE_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorVisualMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInheritConnMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeConnectManager;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Inherit',\r\n                        callback: () => {\r\n                            const wrap: LogicUtil.WrapElement = {\r\n                                type: 'connector',\r\n                                data: null\r\n                            }\r\n                            mng.inherits.push(wrap);\r\n                            const newNode = TreeUtil.createNode(wrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorInheritConnector = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, invalidate, setModify, isModify, removeSelf, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const [condition, setCondition] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [identify, setIdentify] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [method, setMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [depend, setDepend] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n        setMethod({ ...method, value: param.method });\r\n        setDepend({ ...depend, value: param.depend });\r\n        setIdentify({ ...identify, value: param.id });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n            // 派生識別名（自動命名）の初期値を取得\r\n            const defaultName = LogicElementUtil.getNumberingOnPrefixName('id_', node.parent as TreeUtil.ElementNode);\r\n            setIdentify({ ...identify, value: defaultName });\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const isCreate = method.value === 'create';\r\n\r\n    const hasFieldNode = useMemo(() => {\r\n        return LogicElementUtil.getInnerNode(node, 'inhfld-mng') != null;\r\n    }, [node]);\r\n\r\n    /** 引用するロジックリスト */\r\n    const logicList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return inheritMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    /** 同階層の既存のインヘリットIDを取得（重複チェックに使用） */\r\n    const idList = useMemo(() => {\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    const initConnectorNode = (param: LogicUtil.NodeInheritConnector) => {\r\n        param.mngs = [];\r\n        node.children = [];\r\n        param.mngs.push({\r\n            type: 'extend-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        param.mngs.push({\r\n            type: 'send-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        if (isCreate) {\r\n            param.mngs.push({\r\n                type: 'inherit-logic',\r\n                data: {\r\n                    mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                } as LogicUtil.NodeInheritItem\r\n            });\r\n        }\r\n        wrap.data = param;\r\n\r\n        param.mngs.forEach(mng => {\r\n            const newNode = TreeUtil.createNode(mng, node);\r\n            const data = (newNode.data as LogicUtil.WrapElement);\r\n            switch (data.type) {\r\n                case 'inherit-logic': {\r\n                    LogicElementUtil.syncTreeElementFromWrap(newNode);\r\n                } break;\r\n                case 'send-mng': {\r\n                    const connector = (newNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.method === 'depend') {\r\n                        console.log('initSendParams');\r\n                        initSendParams(newNode, rootData);\r\n                    }\r\n                } break;\r\n            }\r\n            node.children.push(newNode);\r\n        });\r\n    }\r\n\r\n    const getSendParamList = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement): string[] => {\r\n        const connector = (sendNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = inheritMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement) => {\r\n        const sendParamList = getSendParamList(sendNode, rootData);\r\n        // console.log(sendParamList);\r\n        const wrap = sendNode.data as LogicUtil.WrapElement;\r\n        const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n                sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'inhfld-mng');\r\n        if(fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n\r\n    const isDisable = wrap.data == null ? false : (wrap.data as LogicUtil.NodeInheritConnector).disable ?? false;\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[identify, method, depend]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeInheritConnector = {\r\n                    method: method.value as LogicUtil.InheritMethod,\r\n                    depend: depend.value,\r\n                    id: identify.value,\r\n                    mngs: []\r\n                };\r\n                initConnectorNode(param);\r\n                invalidate();\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                const isChange = param.method !== method.value || param.depend !== depend.value;\r\n                param.method = method.value as LogicUtil.InheritMethod;\r\n                param.depend = depend.value;\r\n                param.id = identify.value;\r\n                wrap.data = param;\r\n\r\n                if (isChange) {\r\n                    initConnectorNode(param);\r\n                }\r\n                invalidate();\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={method}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                // createが選択されたらdependを空にする\r\n                                if (checkable.value === 'create') {\r\n                                    setDepend({ ...depend, value: '' });\r\n                                }\r\n                                setMethod(checkable);\r\n                            }}\r\n                            list={LogicUtil.ConnectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Depend\"\r\n                    isEnable={method.value === 'depend'}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={depend}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setDepend}\r\n                            list={logicList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            dependency={[method]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => {\r\n                                        return method.value !== 'depend' || ValidateUtil.checkRequired(value);\r\n                                    },\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Identify\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={identify}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setIdentify}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !idList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                0,\r\n                                {\r\n                                    type: 'inhfld-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Disable'}\r\n                        width={300}\r\n                        isUse={isDisable}\r\n                        isEnable={!isModify}\r\n                        callback={() => {\r\n                            const data = (wrap.data as LogicUtil.NodeInheritConnector);\r\n                            if (isDisable) {\r\n                                data.disable = undefined;\r\n                            } else {\r\n                                data.disable = true;\r\n                            }\r\n                            invalidate();\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Edit local',\r\n                            isEnable: !isModify && !isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Create a clone from the depended inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                                                const logicList = logicMng.defs.map(def => def.data as LogicUtil.NodeLogicItem);\r\n                                                // ディペンドしているロジックを取得\r\n                                                const dependLogic = logicList.find(inherit => inherit.name === depend.value);\r\n                                                if (dependLogic != undefined) {\r\n                                                    const cloneLogic = JSON.parse(JSON.stringify(dependLogic)) as LogicUtil.NodeLogicItem;\r\n                                                    const connectItem: LogicUtil.NodeInheritItem = {\r\n                                                        mngs: cloneLogic.mngs\r\n                                                    };\r\n                                                    const newWrap: LogicUtil.WrapElement = {\r\n                                                        type: 'inherit-logic',\r\n                                                        data: connectItem\r\n                                                    };\r\n                                                    const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                                                    // 子要素の展開\r\n                                                    newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                    const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                    param.method = 'create';\r\n                                                    param.depend = '';\r\n                                                    mappingForm();\r\n                                                }\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Detach global',\r\n                            isEnable: !isModify && isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Detach a clone from the this inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                let rootNode = node;\r\n                                                while (rootNode.parent != null) rootNode = rootNode.parent;\r\n                                                const inheritNode = node.children.find(el => (el.data as LogicUtil.WrapElement).type === 'inherit-logic');\r\n                                                const logicMngNode = rootNode.children.find(el => (el.data as LogicUtil.WrapElement).type === 'logic-mng');\r\n                                                if (logicMngNode == undefined || inheritNode == undefined) return;\r\n                                                const inherit = (inheritNode.data as LogicUtil.WrapElement).data;\r\n                                                const clone = JSON.parse(JSON.stringify((inherit))) as LogicUtil.NodeInheritItem;\r\n                                                // ロジック名（自動命名）を取得\r\n                                                const defaultName = LogicElementUtil.getNumberingOnPrefixName('clone_inherit_', logicMngNode);\r\n                                                const logicItem: LogicUtil.NodeLogicItem = {\r\n                                                    ...clone,\r\n                                                    name: defaultName\r\n                                                };\r\n                                                const newWrap: LogicUtil.WrapElement = {\r\n                                                    type: 'logic-item',\r\n                                                    data: logicItem\r\n                                                };\r\n\r\n                                                // ロジックマネージャに追加\r\n                                                const newNode = LogicElementUtil.addChild(newWrap, logicMngNode);\r\n                                                // 子要素の展開\r\n                                                newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                // 自身（コネクタ）からインヘリット要素を削除\r\n                                                LogicElementUtil.removeChild(node, 2, 1);\r\n\r\n                                                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                param.method = 'depend';\r\n                                                param.depend = logicItem.name;\r\n                                                mappingForm();\r\n\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnector;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ParamUtil from \"../util/paramUtil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\n\r\nnamespace SendTemplateDialog {\r\n\r\n    const FRAME_WIDTH = 450;\r\n    const FRAME_HEIGHT = 160;\r\n    const COMPONENT_WIDTH = 296;\r\n\r\n    export const ConnectParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, input property name!';\r\n\r\n        /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n        const paramNameList = useMemo(() => {\r\n            const owner = (LogicElementUtil.getInnerWrap(props.node.parent?.data as LogicUtil.WrapElement, 'inherit-logic') as LogicUtil.WrapElement).data;\r\n            return LogicElementUtil.getParamNameList(owner);\r\n        }, [props.node]);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    // Sendにパラメータを追加\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: xName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }] }\r\n                    ), props.node);\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: yName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }] }\r\n                    ), props.node);\r\n\r\n                    // 派生ロジックに引数を追加\r\n                    const logicNode = LogicElementUtil.getInnerNode(props.node.parent as TreeUtil.ElementNode, 'inherit-logic') as TreeUtil.ElementNode;\r\n                    const hasArgNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') != undefined;\r\n                    if (!hasArgNode) {\r\n                        LogicElementUtil.insertChild({\r\n                            type: 'argument-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeArgumentManager\r\n                        }, logicNode, 0);\r\n                    }\r\n                    const argNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') as TreeUtil.ElementNode;\r\n\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: xName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: yName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n\r\n                    // 派生ロジックの座標に引数を設定\r\n                    const behaviorNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'behavior-mng') as TreeUtil.ElementNode;\r\n                    const setParamValue = (prpName: string, argName: string) => {\r\n                        const params = behaviorNode.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                        const targetParam = params.find(param => param.name === prpName) as LogicUtil.NodeParamItem;\r\n                        targetParam.formulaItems = ['var'];\r\n                        targetParam.values = [{ type: 'argument', value: argName }];\r\n                    }\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_X, xName.value);\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_Y, yName.value);\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (yName.value !== '') list.push(yName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[yName]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (xName.value !== '') list.push(xName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[xName]}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n\r\n    export const SetParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, select property name!';\r\n\r\n        const list = useMemo(() => {\r\n            return props.node.children.map(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                return (wrap.data as LogicUtil.NodeParamItem).name;\r\n            });\r\n        }, []);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    const paramList = props.node.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                    const xParam = paramList.find(param => param.name === xName.value) as LogicUtil.NodeParamItem;\r\n                    const yParam = paramList.find(param => param.name === yName.value) as LogicUtil.NodeParamItem;\r\n                    xParam.formulaItems = ['var'];\r\n                    xParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }];\r\n                    yParam.formulaItems = ['var'];\r\n                    yParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }];\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== yName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== xName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SendTemplateDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #d0e7e718;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSendManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const isDepend = () => {\r\n        const conn = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        return conn.method === 'depend';\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"template\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Connect Position',\r\n                            isEnable: !isDepend(),\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.ConnectParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Set Position',\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.SetParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSendManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFieldMng = () => {\r\n    const { invalidate, node, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Field',\r\n                        callback: () => {\r\n                            // const newWrap: FactoryUtil.WrapNode = FactoryUtil.createParamWrap('field-item',\r\n                            //     { name: '', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                            // );\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'field-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFieldMng;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorExtendMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [hasLoopParam, hasInvokeParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name as ParamUtil.ExtendParam;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.ExtendParamType.LOOP_COUNT),\r\n            list.includes(ParamUtil.ExtendParamType.INVOKE)\r\n        ]\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Loop'}\r\n                            width={300}\r\n                            isUse={hasLoopParam}\r\n                            callback={() => {\r\n                                toggleElement(hasLoopParam, 0, {\r\n                                    type: 'param-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.LOOP_COUNT,\r\n                                        formulaItems: ['var'],\r\n                                        values: [{ type: 'direct', value: '1' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Invoke'}\r\n                            width={300}\r\n                            isUse={hasInvokeParam}\r\n                            callback={() => {\r\n                                toggleElement(hasInvokeParam, hasLoopParam ? 1 : 0, {\r\n                                    type: 'condition-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.INVOKE,\r\n                                        formulaItems: ['var', '=', 'var'],\r\n                                        values: [{ type: 'direct', value: '0' }, { type: 'direct', value: '0' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorExtendMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\n\r\nconst EditorSeedItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [entry, setEntry] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [permit, setPermit] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedItem;\r\n        setName({ ...name, value: param.name });\r\n        setEntry({ ...entry, value: param.entry });\r\n        setPermit({ ...permit, value: param.permit })\r\n    };\r\n\r\n    /** 既存のシード名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    // 引用するロジックリスト\r\n    const logicNameList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const logicMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return logicMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    const getSendParamList = (): string[] => {\r\n        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n        const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = logicMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = () => {\r\n        const sendParamList = getSendParamList();\r\n        const sendNode = LogicElementUtil.getInnerNode(node, 'interface-mng', 'seedsend-mng') as TreeUtil.ElementNode;\r\n        const params = ((sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('seedsend-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n            }\r\n        });\r\n        LogicElementUtil.syncTreeElementFromWrap(sendNode);\r\n    }\r\n\r\n    const getDefaultSeedMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'interface-mng',\r\n                data: {\r\n                    mngs: [\r\n                        {\r\n                            type: 'seedarg-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeSeedArgManager\r\n                        },\r\n                        {\r\n                            type: 'seedsend-mng',\r\n                            data: {\r\n                                params: []\r\n                            } as LogicUtil.NodeSeedSendManager\r\n                        },\r\n                    ]\r\n                } as LogicUtil.NodeInterfaceMng\r\n            },\r\n            {\r\n                type: 'thumbnail-mng',\r\n                data: {\r\n                    items: []\r\n                } as LogicUtil.NodeThumnailManager\r\n            },\r\n            {\r\n                type: 'sample-mng',\r\n                data: {\r\n                    samples: []\r\n                } as LogicUtil.NodeSampleManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, entry, permit]}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSeedItem = {\r\n                    name: name.value,\r\n                    entry: entry.value,\r\n                    permit: permit.value as LogicUtil.PermitType,\r\n                    mngs: getDefaultSeedMngs()\r\n                };\r\n                wrap.data = element;\r\n\r\n                LogicElementUtil.syncTreeElementFromWrap(node);\r\n                // 参照しているロジックの引数をSendに設定\r\n                initSendParams();\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedItem;\r\n                param.name = name.value;\r\n                param.permit = permit.value as LogicUtil.PermitType;\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Entry\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={entry}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setEntry}\r\n                            list={logicNameList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Permit\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={permit}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setPermit}\r\n                            list={LogicUtil.PermitTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedItem;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext as LogicTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorThumbnailMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(LogicTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeThumnailManager;\r\n\r\n    const hasSample = useMemo(() => {\r\n        const sampleMngNode = LogicElementUtil.getInnerNode(node.parent as TreeUtil.ElementNode, 'sample-mng') as TreeUtil.ElementNode;\r\n        return sampleMngNode.children.length as number > 0;\r\n    }, []);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={hasSample}\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Thumbnail',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'thumbnail-item',\r\n                                data: null\r\n                            }\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport Particle from \"../../../../graphic/particle\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst WND_SIZE = 100;\r\n\r\nconst EditorThumbnailItem = () => {\r\n    const { rootData, node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n    const data = wrap.data as LogicUtil.NodeThumbnailItem;\r\n\r\n\r\n    const seedWrap = node.parent?.parent?.data as LogicUtil.WrapElement;\r\n    const sampleMng = LogicElementUtil.getInnerWrap(seedWrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n    const samples = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [urls, setUrls] = useState<string[]>([]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n        setName({ ...name, value: param.name });\r\n        setFrame({ ...frame, value: param.frame.toString() });\r\n    };\r\n    \r\n    /** 既存のサムネイル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n            setTimeout(() => {\r\n                const urls: string[] = [];\r\n                samples.forEach((sample, i) => {\r\n                    urls.push(getThumbnailURL(data.frame, i));\r\n                });\r\n                setUrls(urls);\r\n            }, 1);\r\n        }\r\n    }, [node]);\r\n\r\n    const getSeedValueMap = (sampleNo: number): PreviewUtil.ValueMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ValueMap[] = argMng.args.map((arg, i) => {\r\n            const name = (arg.data as LogicUtil.NodeSeedArgItem).name;\r\n            const value = samples[sampleNo].values[i];\r\n            return { name, value }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams.map(item => {\r\n            return { name: item.name, value: PreviewUtil.convertParamsToValue(item.name, sendParams, argMap) ?? 0 }\r\n        });\r\n    }\r\n\r\n    const getThumbnailURL = (targetFrame: number, sampleNo: number) => {\r\n        console.log('create start!');\r\n        const owner: Particle.Instance[] = [];\r\n\r\n        let frameCnt = 0;\r\n        do {\r\n            if (frameCnt === 0) {\r\n                const seed = (node.parent?.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n                const logicManager = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                const logic = logicManager.defs.find(logic => (logic.data as LogicUtil.NodeLogicItem).name === seed.entry);\r\n                if (logic == undefined) break;\r\n\r\n                const sendValueMapList = getSeedValueMap(sampleNo);\r\n                owner.push(new Particle.Instance(\r\n                    PreviewUtil.buildLogicProps(owner, logic.data, rootData, sendValueMapList))\r\n                );\r\n            }\r\n\r\n            if (frameCnt === targetFrame) {\r\n                return CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                });\r\n            }\r\n\r\n            // パーティクルの更新\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                particle.update();\r\n            }\r\n\r\n            // 死滅したパーティクルの削除\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frameCnt > 500 || owner.length > 3000) break;\r\n            frameCnt++;\r\n        } while (owner.length > 0);\r\n        return '';\r\n    }\r\n\r\n    const pictureJsxList = useMemo(() => {\r\n        const sampleMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n        return sampleMng.samples.map((wrap, i) => {\r\n            const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n\r\n            const url = urls[i];\r\n            const imgJsx = url == undefined ? <></> : <_IMG src={urls[i]} />;\r\n            return (\r\n                <_SampleDiv key={i}>-\r\n                    <_SampleName>{sample.name}</_SampleName>\r\n                    <_CanvasDiv>\r\n                        {imgJsx}\r\n                    </_CanvasDiv>\r\n                </_SampleDiv>\r\n            );\r\n        });\r\n    }, [node, urls]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, frame]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeThumbnailItem = {\r\n                    name: name.value,\r\n                    frame: Number(frame.value),\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n                param.name = name.value;\r\n                param.frame = Number(frame.value);\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"preview\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {pictureJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailItem;\r\n\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\n\r\nconst EditorSampleItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [paramForms, setParamForms] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSampleItem;\r\n        setName({ ...name, value: param.name });\r\n        setParamForms(param.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のサンプル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const argInfoList: LogicUtil.NodeSeedArgItem[] = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'seedarg-mng');\r\n        if (argMng != null) {\r\n            return (argMng.data as LogicUtil.NodeSeedArgManager).\r\n                args.map(arg => {\r\n                    return arg.data as LogicUtil.NodeSeedArgItem;\r\n                });\r\n        } else throw new Error('argMng is undefined.');\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setParamForms(argInfoList.map(arg => {\r\n                let defval = ' ';\r\n                if (arg.defval != undefined) defval = arg.defval.toString();\r\n                return { value: defval, errors: [] };\r\n            }));\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const formList = useMemo(() => {\r\n        return paramForms.map((paramForm, i) => {\r\n            const arg = argInfoList[i];\r\n            return <FormUtil.FormRecord key={i}\r\n                titleLabel={arg.name}\r\n                jsx={\r\n                    <FormUtil.TextField\r\n                        width={150}\r\n                        isReadOnly={!isModify}\r\n                        checkable={paramForm}\r\n                        setCheckable={(checkable) => {\r\n                            paramForms[i] = checkable;\r\n                            setParamForms(paramForms.slice());\r\n                        }}\r\n                        isNumber\r\n                        step={arg.step}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkNumberRange(value, arg.min, arg.max),\r\n                                errorType: \"value\"\r\n                            },\r\n                        ]}\r\n                    />\r\n                }\r\n            />\r\n        });\r\n    }, [paramForms, isModify]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name].concat(paramForms)}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSampleItem = {\r\n                    name: name.value,\r\n                    values: []\r\n                };\r\n                paramForms.forEach((form, i) => {\r\n                    element.values[i] = Number(form.value);\r\n                });\r\n                wrap.data = element;\r\n\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSampleItem;\r\n                param.name = name.value;\r\n                paramForms.forEach((form, i) => {\r\n                    param.values[i] = Number(form.value);\r\n                });\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {formList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSampleMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Preset',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'sample-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSampleManager).samples.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleMng;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInterfaceManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const argMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedarg-mng');\r\n    const sendMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedsend-mng');\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(node.parent as TreeUtil.ElementNode, 'sample-mng');\r\n\r\n    const [hasGroupNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        return [\r\n            list.includes('formgrp-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const hasArgument = (): boolean => {\r\n        return argMngNode.children.length > 0;\r\n    }\r\n\r\n    /**\r\n     * グループ要素の有無を判定\r\n     */\r\n    const hasGroup = () => {\r\n        const groupMngNode = LogicElementUtil.getInnerNode(node, 'formgrp-mng');\r\n        if (groupMngNode == null) return false;\r\n        return groupMngNode.children.length > 0;\r\n    }\r\n\r\n    const execute = () => {\r\n        // const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n        // 既存の引数を削除\r\n        if (hasArgument()) {\r\n\r\n            LogicElementUtil.removeChildAll(argMngNode);\r\n            LogicElementUtil.removeChildAll(sampleMngNode);\r\n        }\r\n\r\n        sendMngNode.children.forEach(child => {\r\n            const send = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem;\r\n            send.formulaItems = ['var'];\r\n            send.values = [{ type: 'argument', value: send.name }];\r\n\r\n            const newArgData: LogicUtil.NodeSeedArgItem = {\r\n                name: send.name,\r\n                step: 1,\r\n                min: -9999,\r\n                max: 9999,\r\n                defval: 0\r\n            }\r\n            const newArgWrap: LogicUtil.WrapElement = {\r\n                type: 'seedarg-item',\r\n                data: newArgData\r\n            };\r\n            const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n            argMng.args.push(newArgWrap);\r\n            argMngNode.children.push(TreeUtil.createNode(newArgWrap, argMngNode));\r\n            invalidate();\r\n        });\r\n    }\r\n\r\n    const initDefaultSetting = () => {\r\n        if (!hasArgument()) {\r\n            execute();\r\n        } else {\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Are you sure you want to delete the existing element?\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        callback: () => {\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Execute',\r\n                        callback: () => {\r\n                            execute();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            setStore({ ...store });\r\n        }\r\n        invalidate();\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Group'}\r\n                        width={300}\r\n                        isUse={hasGroupNode}\r\n                        isEnable={!hasGroup()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasGroupNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'formgrp-mng',\r\n                                    data: {\r\n                                        defines: []\r\n                                    } as LogicUtil.NodeFromgrpManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Initialize Params',\r\n                        callback: initDefaultSetting\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInterfaceManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedArgMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seedarg-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedArgManager).args.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedArgMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorSeedArgItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [min, setMin] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [max, setMax] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [step, setStep] = useState<FormUtil.CheckableValue>({ value: '1', errors: [] });\r\n    const [defval, setDefval] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    const seedNode = node.parent?.parent?.parent as TreeUtil.ElementNode;\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n        setName({ ...name, value: param.name });\r\n        setMin({ ...min, value: param.min.toString() });\r\n        setMax({ ...max, value: param.max.toString() });\r\n        setStep({ ...step, value: param.step.toString() });\r\n        setDefval({ ...defval, value: param.defval == undefined ? '' : param.defval.toString() });\r\n        // setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, min, max, step, defval]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeSeedArgItem = {\r\n                    name: name.value,\r\n                    min: Number(min.value),\r\n                    max: Number(max.value),\r\n                    step: Number(step.value),\r\n                    defval: defval.value === '' ? undefined : Number(defval.value),\r\n                    // valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                wrap.data = param;\r\n                syncArgumentAdd(seedNode as TreeUtil.ElementNode, param);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.min = Number(min.value);\r\n                param.max = Number(max.value);\r\n                param.step = Number(step.value);\r\n                param.defval = defval.value === '' ? undefined : Number(defval.value);\r\n                // param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(seedNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Min\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={min}\r\n                            setCheckable={setMin}\r\n                            isNumber\r\n                            dependency={[max]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) < Number(max.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Max\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={max}\r\n                            setCheckable={setMax}\r\n                            isNumber\r\n                            dependency={[min]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) > Number(min.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Step\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={step}\r\n                            setCheckable={setStep}\r\n                            isNumber\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Default\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={defval}\r\n                            setCheckable={setDefval}\r\n                            isNumber\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'color' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                /> */}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                                const refers = getArgumentRefers(seedNode, param.name);\r\n                                if (refers.length === 0) {\r\n                                    const curIndex = LogicElementUtil.getCurrentIndex(node);\r\n                                    if (curIndex === -1) throw new Error('[curIndex] is -1.');\r\n                                    syncArgumentDel(seedNode, curIndex);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtonsCallback(node, invalidate, (index, isUpper) => {\r\n                    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n                    const offset = isUpper ? -1 : 1;\r\n                    sampleMng.samples.forEach(wrap => {\r\n                        const values = (wrap.data as LogicUtil.NodeSampleItem).values;\r\n                        const swapNode = values[index];\r\n                        values[index] = values[index + offset];\r\n                        values[index + offset] = swapNode;\r\n                    });\r\n                })}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (seedNode: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    const sendMng = sendMngWrap.data as LogicUtil.NodeSeedSendManager;\r\n    sendMng.params.forEach(wrap => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        param.values.forEach(varItem => {\r\n            if (varItem.type === 'argument' && varItem.value === argName) {\r\n                refers.push(param.name);\r\n            }\r\n        });\r\n    });\r\n    return refers;\r\n}\r\n\r\nexport default EditorSeedArgItem;\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param seedNode Seedノード\r\n*/\r\nconst syncArgumentName = (seedNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    syncFormula((sendMngWrap.data as LogicUtil.NodeParamManager).params);\r\n\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Sample管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentAdd = (seedNode: TreeUtil.ElementNode, arg: LogicUtil.NodeSeedArgItem) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.push(arg.defval ?? arg.min);\r\n    });\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentDel = (seedNode: TreeUtil.ElementNode, delIndex: number) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.splice(delIndex, 1);\r\n    });\r\n}","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedSendMng = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const getSendParamList = (): string[] => {\r\n    //     const connector = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n    //     const isCreate = connector.method === 'create';\r\n    //     let targetWrap: LogicUtil.WrapElement | null = null;\r\n    //     if (!isCreate) {\r\n    //         const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n    //         const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n    //         const dependItem = inheritMng.defs.find(wrap => {\r\n    //             return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n    //         });\r\n    //         if (dependItem != undefined) targetWrap = dependItem;\r\n    //     } else {\r\n    //         targetWrap = (node.parent?.children[node.parent?.children.length - 1].data as LogicUtil.WrapElement)\r\n    //     }\r\n    //     if (targetWrap != null) {\r\n    //         const argWrap = (targetWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n    //         if (argWrap.type === 'argument-mng') {\r\n    //             return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n    //                 return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n    //             });\r\n    //         }\r\n    //     }\r\n    //     return [];\r\n    // }\r\n\r\n    // const update = () => {\r\n    //     const sendParamList = getSendParamList();\r\n    //     const curSize = node.children.length;\r\n    //     const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n    //     // 不要なパラメータを削除\r\n    //     for (let i = curSize - 1; i >= 0; i--) {\r\n    //         const name = (params[i].data as LogicUtil.NodeParamItem).name;\r\n    //         if (!sendParamList.includes(name)) {\r\n    //             node.children.splice(i, 1);\r\n    //             params.splice(i, 1);\r\n    //         }\r\n    //     }\r\n    //     // 必要な存在しないパラメータを追加\r\n    //     const curParamList = params.map(param => {\r\n    //         return (param.data as LogicUtil.NodeParamItem).name;\r\n    //     });\r\n    //     sendParamList.forEach(param => {\r\n    //         if (!curParamList.includes(param)) {\r\n    //             const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n    //                 { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n    //             );\r\n    //             params.push(paramWrap);\r\n    //             node.children.push(TreeUtil.createNode(paramWrap, node));\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    return (<>\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedSendMng;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorFormgrpItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [groupMethod, setGroupMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [targetList, setTargetList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n        setName({ ...name, value: param.name });\r\n        setGroupMethod({ ...groupMethod, value: param.method });\r\n        setTargetList(param.args.map(arg => {\r\n            return { value: arg, errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const seedargs = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed(node.parent?.parent?.data as LogicUtil.WrapElement, 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        return argMng.args.map(wrap => (wrap.data as LogicUtil.NodeSeedArgItem).name);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, groupMethod].concat(targetList)}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeFromGrpItem = {\r\n                    name: name.value,\r\n                    method: groupMethod.value as LogicUtil.FromGrpMethod,\r\n                    args: targetList.map(form => form.value)\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n                param.name = name.value;\r\n                param.method = groupMethod.value as LogicUtil.FromGrpMethod;\r\n                param.args = targetList.map(form => form.value);\r\n                wrap.data = param;\r\n\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={groupMethod}\r\n                            setCheckable={(checkable) => {\r\n                                const type = checkable.value as LogicUtil.FromGrpMethod;\r\n                                if (type === 'color') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(3).fill({ value: '', errors: [] }));\r\n                                } else {\r\n                                    setTargetList([]);\r\n                                }\r\n                                setGroupMethod({...checkable});\r\n                            }}\r\n                            list={LogicUtil.FromGrpMedhods.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'list' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n                {targetList.map((target, i) => {\r\n                    let formName = 'Target_';\r\n                    if (groupMethod.value === 'color') {\r\n                        switch (i) {\r\n                            case 0: formName += 'R'; break;\r\n                            case 1: formName += 'G'; break;\r\n                            case 2: formName += 'B'; break;\r\n                        }\r\n                    } else {\r\n                        formName += `_${i}`;\r\n                    }\r\n                    return (\r\n                        <FormUtil.FormRecord\r\n                            key={i}\r\n                            titleLabel={formName}\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={target}\r\n                                    setCheckable={(checkable) => {\r\n                                        targetList[i] = checkable;\r\n                                        setTargetList(targetList.slice());\r\n                                    }}\r\n                                    list={seedargs.map(item => {\r\n                                        return { value: item, labelText: item }\r\n                                    })}\r\n                                    headBlank\r\n                                    width={250}\r\n                                    isReadOnly={!isModify}\r\n                                    validates={\r\n                                        [\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            },\r\n                                            {\r\n                                                checker: (value) => targetList.find((target, j) => i !== j && target.value === value) == undefined,\r\n                                                errorType: \"relation\"\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                    dependency={targetList}\r\n                                />\r\n                            }\r\n                        />\r\n                    );\r\n                })}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: removeSelf\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFormgrpMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Group',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'formgrp-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeFromgrpManager).defines.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpMng;","import styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactDetArgumentMng from \"../detail/logic/editorArgumentMng\";\r\nimport EditorArgumentItem from \"../detail/logic/editorArgumentItem\";\r\nimport FactDetSeedMng from \"../detail/seed/editorSeedMng\";\r\nimport EditorLogicMng from \"../detail/logic/editorLogicMng\";\r\nimport EditorLogicItem from \"../detail/logic/editorLogicItem\";\r\nimport EditorParamItem from \"../detail/logic/editorParamItem\";\r\nimport FactDetBehiviorMng from \"../detail/logic/editorBehiviorMng\";\r\nimport EditorVisualMng from \"../detail/logic/editorVisualMng\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport EditorInheritConnMng from \"../detail/logic/editorInheritConnMng\";\r\nimport EditorInheritConnector from \"../detail/logic/editorInheritConnector\";\r\nimport EditorSendManager from \"../detail/logic/editorSendManager\";\r\nimport EditorFieldMng from \"../detail/logic/editorFieldMng\";\r\nimport EditorExtendMng from \"../detail/logic/editorExtendMng\";\r\nimport EditorSeedItem from \"../detail/seed/editorSeedItem\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"./logicElementUtil\";\r\nimport EditorThumbnailMng from \"../detail/seed/editorThumbnailMng\";\r\nimport EditorThumbnailItem from \"../detail/seed/editorThumbnailItem\";\r\nimport EditorSampleItem from \"../detail/seed/editorSampleItem\";\r\nimport EditorSampleMng from \"../detail/seed/editorSampleMng\";\r\nimport EditorInterfaceManager from \"../detail/seed/editorInterfaceManager\";\r\nimport EditorSeedArgMng from \"../detail/seed/editorSeedArgMng\";\r\nimport EditorSeedArgItem from \"../detail/seed/editorSeedArgItem\";\r\nimport EditorSeedSendMng from \"../detail/seed/editorSeedSendMng\";\r\nimport EditorFormgrpItem from \"../detail/seed/editorFormgrpItem\";\r\nimport EditorFormgrpMng from \"../detail/seed/editorFormgrpMng\";\r\n\r\nnamespace LogicUtil {\r\n\r\n    export type DetailArgs = {\r\n        rootData: LogicUtil.WrapElement;\r\n        node: TreeUtil.ElementNode;\r\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\r\n        invalidate: () => void;\r\n        isModify: boolean;\r\n        setModify: (isModify: boolean) => void;\r\n        // setRootData: React.Dispatch<React.SetStateAction<WrapElement>>;\r\n        setRootData: (rootData: WrapElement) => void;\r\n        removeSelf: () => void;\r\n    }\r\n\r\n    /**\r\n     * 変数名チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkFieldName = (str: string) => {\r\n        // 1文字目が数値でないこと\r\n        const isNoHeadNumber = !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].\r\n            includes(str.substring(0, 1));\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyz_';\r\n        return isNoHeadNumber && ValidateUtil.checkIncludesChars(str, list);\r\n    }\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'seed-mng' |\r\n        'logic-mng' |\r\n        'seed-item' |\r\n        'logic-item' |\r\n        'argument-mng' |\r\n        'argument-item' |\r\n        'field-mng' |\r\n        'field-item' |\r\n        'visual-mng' |\r\n        'behavior-mng' |\r\n        'inhfld-mng' |\r\n        'extend-mng' |\r\n        'inherit-mng' |\r\n        'connector' |\r\n        'inherit-logic' |\r\n        'send-mng' |\r\n        'send-item' |\r\n        'param-item' |\r\n        'condition-item' |\r\n        'interface-mng' |\r\n        'sample-mng' |\r\n        'sample-item' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-item' |\r\n        'seedarg-mng' |\r\n        'seedsend-mng' |\r\n        'seedarg-item' |\r\n        'seedsend-item' |\r\n        'formgrp-mng' |\r\n        'formgrp-item'\r\n        ;\r\n\r\n    export const ArgTypes = ['number', 'color'] as const;\r\n    export type ArgumentType = typeof ArgTypes[number];\r\n\r\n    export const ParamInputTypes = ['direct', 'constant', 'argument', 'self', 'field'] as const;\r\n    export type ParamInputType = typeof ParamInputTypes[number];\r\n\r\n    export const ConnectTypes = ['create', 'depend'] as const;\r\n    export type InheritMethod = typeof ConnectTypes[number];\r\n\r\n    export const PermitTypes = ['develop', 'private', 'release'] as const;\r\n    export type PermitType = typeof PermitTypes[number];\r\n\r\n    export const FromGrpMedhods = ['color', 'list'] as const;\r\n    export type FromGrpMethod = typeof FromGrpMedhods[number];\r\n\r\n    export type ParamProps = {\r\n        type: ParamInputType;\r\n        value: string;\r\n    }\r\n\r\n    export type WrapElement = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        seedMng: WrapElement;\r\n        logicMng: WrapElement;\r\n    }\r\n    export type NodeSeedManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicItem = {\r\n        name: string;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInterfaceMng = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInheritItem = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeParamManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeParamItem = {\r\n        name: string;\r\n        formulaItems: string[];\r\n        values: ParamProps[];\r\n    }\r\n\r\n    export type NodeArgumentItem = {\r\n        name: string;\r\n        valueType: ArgumentType;\r\n    }\r\n    export type NodeThumbnailItem = {\r\n        name: string;\r\n        frame: number;\r\n    }\r\n    export type NodeArgumentManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeFieldManager = {\r\n        fields: WrapElement[];\r\n    }\r\n    export type NodeSampleManager = {\r\n        samples: WrapElement[];\r\n    }\r\n    export type NodeSampleItem = {\r\n        name: string;\r\n        values: number[];\r\n    }\r\n\r\n    // export type NodeExtendManager = {\r\n    //     mngs: WrapElement[];\r\n    // }\r\n    export type NodeConnectManager = {\r\n        inherits: WrapElement[];\r\n    }\r\n    export type NodeInheritConnector = {\r\n        method: InheritMethod;\r\n        depend: string;\r\n        id: string;\r\n        disable?: boolean;\r\n        mngs: WrapElement[];\r\n    }\r\n\r\n    export type NodeSeedItem = {\r\n        name: string;\r\n        entry: string;\r\n        permit: PermitType;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeThumnailManager = {\r\n        items: WrapElement[];\r\n    }\r\n    export type NodeSeedArgManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeSeedSendManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeSeedArgItem = {\r\n        name: string;\r\n        min: number;\r\n        max: number;\r\n        step: number;\r\n        defval: number | undefined;\r\n    }\r\n    export type NodeFromgrpManager = {\r\n        defines: WrapElement[];\r\n    }\r\n    export type NodeFromGrpItem = {\r\n        name: string;\r\n        method: FromGrpMethod;\r\n        args: string[];\r\n    }\r\n\r\n    const COLOR_ROOT = '#a1a1a1';\r\n    const COLOR_METHOD = '#cca67b';\r\n    const COLOR_MNG = '#37a2bd';\r\n    const COLOR_LIST = '#b85f5f';\r\n    const COLOR_ITEM = '#ae628c';\r\n    const COLOR_DISABLE = '#685b79';\r\n    const COLOR_PARAM = '#8dae62';\r\n    const COLOR_FIELD = '#cec256';\r\n    const COLOR_THUMBNAIL = '#8283be';\r\n    const COLOR_CONDITION = '#56ce7e';\r\n\r\n    export const getNodeDisplayJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapElement;\r\n        switch (wrap.type) {\r\n            case 'root': {\r\n                return <_Category backgroundColor={COLOR_ROOT}>Library</_Category>;\r\n            }\r\n            case 'seed-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Seed Manager</_Category>;\r\n            }\r\n            case 'logic-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Logic Manager</_Category>;\r\n            }\r\n            case 'visual-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Visual</_Category>;\r\n            }\r\n            case 'extend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Extend</_Category>;\r\n            }\r\n            case 'seed-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Seed</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'logic-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Logic</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-logic': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Logic</_Category>;\r\n            }\r\n            case 'argument-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'inhfld-mng':\r\n            case 'field-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Field Manager</_Category>;\r\n            }\r\n            case 'behavior-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Behavior</_Category>;\r\n            }\r\n            case 'inherit-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Inherit Manager</_Category>;\r\n            }\r\n            case 'connector': {\r\n                let detailJsx = <span>...</span>;\r\n                let color = COLOR_ITEM;\r\n                let isDisable = false;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeInheritConnector;\r\n                    detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}</_Span></span>;\r\n                    if (data.method === 'depend') {\r\n                        detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}:&nbsp;</_Span><_Field>{data.depend}</_Field></span>;\r\n                    }\r\n                    if (data.disable ?? false) {\r\n                        color = COLOR_DISABLE;\r\n                        isDisable = true;\r\n                    }\r\n                }\r\n                return (<>\r\n                    <_Category backgroundColor={color} isDisable={isDisable}>Inherit</_Category>\r\n                    {detailJsx == undefined ? <></> : <_EditableValue>{detailJsx}</_EditableValue>}\r\n                </>);\r\n            }\r\n            // パラメータ要素\r\n            case 'param-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_PARAM}>Param<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 条件要素\r\n            case 'condition-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_CONDITION}>Condition<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 変数要素\r\n            case 'field-item': {\r\n                let nameJsx = <span>...</span>;\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeParamItem;\r\n                    nameJsx = <_Detail>&nbsp;[{data.name}]</_Detail>;\r\n                    let result: JSX.Element[] = [];\r\n                    let varCnt = 0;\r\n                    data.formulaItems.forEach((formula, i) => {\r\n                        let str = <_Signature key={i}>{formula}</_Signature>;\r\n                        if (formula === 'var') {\r\n                            const v = data.values[varCnt];\r\n                            if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                            else str = <span key={i}>{v.value}</span>;\r\n                            varCnt++;\r\n                        }\r\n                        result.push(str);\r\n                    });\r\n                    detailJsx = <>{result}</>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Field{nameJsx}</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'argument-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeArgumentItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.valueType})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'send-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'thumbnail-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Thumnail Manager</_Category>;\r\n            }\r\n            case 'thumbnail-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeThumbnailItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.frame})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_THUMBNAIL}>Thumbnail</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'sample-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Preset Manager</_Category>;\r\n            }\r\n            case 'sample-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSampleItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Preset</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'interface-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Interface</_Category>;\r\n            }\r\n            case 'seedarg-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'seedarg-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedArgItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.min}～{data.max})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'seedsend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'formgrp-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Group Manager</_Category>;\r\n            }\r\n            case 'formgrp-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeFromGrpItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.method})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Group<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n        }\r\n        return <_Category backgroundColor={'#ffffff'}>XXXXX</_Category>;\r\n    }\r\n\r\n    export const getTypeName = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return '';\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return 'Root';\r\n            case 'seed-mng': return 'Seed Manager';\r\n            case 'logic-mng': return 'Logic Manager';\r\n            case 'seed-item': return 'Seed Item';\r\n            case 'logic-item': return 'Logic Item';\r\n            case 'argument-mng': return 'Argument Manager';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'Field Manager';\r\n            case 'field-item': return 'Field Item';\r\n            case 'visual-mng': return 'Visual Manager';\r\n            case 'seedarg-item':\r\n            case 'argument-item': return 'Argument Item';\r\n            case 'extend-mng': return 'Extend Manager';\r\n            case 'behavior-mng': return 'Behavior Manager';\r\n            case 'inherit-mng': return 'Inherit Manager';\r\n            case 'connector': return 'Inherit Connector';\r\n            case 'inherit-logic': return 'Inherit Logic';\r\n            case 'send-mng': return 'Send Manager';\r\n            case 'send-item': return 'Send Item';\r\n            case 'param-item': return 'Param Item';\r\n            case 'condition-item': return 'Condition Item';\r\n            case 'interface-mng': return 'Interface Manager';\r\n            case 'thumbnail-mng': return 'Thumbnail Manager';\r\n            case 'thumbnail-item': return 'Thumbnail Item';\r\n            case 'sample-mng': return 'Preset Manager';\r\n            case 'sample-item': return 'Preset Item';\r\n            case 'seedarg-mng': return 'Argument Manager';\r\n            case 'seedsend-mng': return 'Send';\r\n            case 'formgrp-mng': return 'Group Manager';\r\n            case 'formgrp-item': return 'Group Item';\r\n        }\r\n    }\r\n\r\n    export const getDetailComponent = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return <></>;\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return <></>;\r\n            case 'seed-mng': return <FactDetSeedMng />;\r\n            case 'logic-mng': return <EditorLogicMng />;\r\n            case 'seed-item': return <EditorSeedItem />;\r\n            case 'logic-item': return <EditorLogicItem />;\r\n            case 'argument-mng': return <FactDetArgumentMng />;\r\n            case 'argument-item': return <EditorArgumentItem />;\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return <EditorFieldMng />;\r\n            case 'visual-mng': return <EditorVisualMng />;\r\n            case 'extend-mng': return <EditorExtendMng />;\r\n            case 'behavior-mng': return <FactDetBehiviorMng />;\r\n            case 'inherit-mng': return <EditorInheritConnMng />;\r\n            case 'connector': return <EditorInheritConnector />;\r\n            case 'inherit-logic': return <EditorLogicItem />;\r\n            case 'send-mng': return <EditorSendManager />;\r\n            case 'field-item':\r\n            case 'param-item':\r\n            case 'condition-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': return <EditorParamItem />;\r\n            case 'interface-mng': return <EditorInterfaceManager />;\r\n            case 'sample-mng': return <EditorSampleMng />;\r\n            case 'sample-item': return <EditorSampleItem />;\r\n            case 'thumbnail-mng': return <EditorThumbnailMng />;\r\n            case 'thumbnail-item': return <EditorThumbnailItem />;\r\n            case 'seedarg-mng': return <EditorSeedArgMng />;\r\n            case 'seedarg-item': return <EditorSeedArgItem />;\r\n            case 'seedsend-mng': return <EditorSeedSendMng />;\r\n            case 'formgrp-item': return <EditorFormgrpItem />;\r\n            case 'formgrp-mng': return <EditorFormgrpMng />;\r\n        }\r\n    }\r\n\r\n    export const getChildrenElementNode = (node: TreeUtil.ElementNode): TreeUtil.ElementNode[] => {\r\n        const wrapNode = node.data as WrapElement;\r\n        const get = (listName: string) => {\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const elementNode = TreeUtil.createNode(wrap, node);\r\n                elementNode.children = getChildrenElementNode(elementNode);\r\n                return elementNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n\r\n    export const getChildrenDataNode = (wrapNode: LogicUtil.WrapElement): TreeUtil.DataNode[] => {\r\n        const get = (listName: string) => {\r\n\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const treeNode: TreeUtil.DataNode = {\r\n                    data: wrap,\r\n                    children: getChildrenDataNode(wrap)\r\n                };\r\n                return treeNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as LogicUtil.NodeRoot;\r\n                return [\r\n                    { data: node.seedMng, children: getChildrenDataNode(node.seedMng) },\r\n                    { data: node.logicMng, children: getChildrenDataNode(node.logicMng) }\r\n                ];\r\n            }\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n}\r\n\r\nexport default LogicUtil;\r\n\r\nconst _Category = styled.div<{\r\n    backgroundColor: string;\r\n    isDisable?: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: ${props => props.backgroundColor};\r\n    /* width: 100%; */\r\n    ${props => !(props.isDisable ?? false) ? '' : css`\r\n        text-decoration: line-through;\r\n        color: #00054dac;\r\n    `}\r\n    border-radius: 4px 0 0 4px;\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n    border: solid 1px #000000d2;\r\n`;\r\nconst _Detail = styled.span`\r\n    color: #000b69bd;\r\n`;\r\n\r\nconst _EditableValue = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #0c0c0c;\r\n    color: #ebebeb;\r\n    border-radius: 0 4px 4px 0;\r\n    /* width: 100%; */\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n`;\r\nconst _Span = styled.span<{\r\n    color: string;\r\n}>`\r\n    color: ${props => props.color};\r\n`;\r\nconst _ValueType = styled.span`\r\n    color: #fff9d6b9;\r\n`;\r\nconst _Signature = styled.span`\r\n    color: #ffffff78;\r\n`;\r\nconst _Field = styled.span`\r\n    color: #ff2d2d;\r\n`;","import { type } from \"os\";\r\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport Common from \"../common\";\r\nimport LogicPreviewFrame from \"../preview/logicPreviewFrame\";\r\nimport LogicElementUtil from \"./util/logicElementUtil\";\r\nimport LogicUtil from \"./util/logicUtil\";\r\n\r\nexport const FactoryTreeContext = createContext({} as LogicUtil.DetailArgs);\r\n\r\nconst LogicMainteTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    // const [rootData, setRootData] = useState(LogicElementUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    // const [treeDisable, setTreeDisable] = useState(false);\r\n    const [isModify, setModify] = useState<boolean>(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    const rootData = store.logicData as LogicUtil.WrapElement;\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: LogicUtil.getChildrenDataNode(rootData)\r\n        }\r\n    }, [rootData]);\r\n\r\n    // useEffect(()=> {\r\n    //     store.logicData = rootData;\r\n    //     setStore({...store});\r\n    // }, [rootData]);\r\n\r\n    const setRootData = (rootData: LogicUtil.WrapElement) => {\r\n        store.logicData = rootData;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const masterNode = useMemo(() => {\r\n        let cur: TreeUtil.ElementNode | null = focusNode;\r\n        while (cur != null) {\r\n            const type = (cur.data as LogicUtil.WrapElement).type;\r\n            if (['logic-item', 'seed-item'].includes(type)) return cur;\r\n            cur = cur.parent;\r\n        };\r\n        return null;\r\n    }, [focusNode]);\r\n\r\n    /**\r\n     * プレビューダイアログを表示する\r\n     */\r\n    const openPreviewDialog = () => {\r\n        if (masterNode == null) return;\r\n        store.system.dialog = (\r\n            <LogicPreviewFrame.Component\r\n                master={masterNode.data as LogicUtil.WrapElement}\r\n                rootData={rootData}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n            onKeyDown={(e) => {\r\n                // console.log(e.key);\r\n                if (isModify || focusNode == null) return;\r\n                switch (e.key) {\r\n                    case 'ArrowRight': {\r\n                        if (focusNode.children.length > 0) {\r\n                            if (!focusNode.isOpen) focusNode.isOpen = true;\r\n                            else setFocusNode(focusNode.children[0]);\r\n                            setInvalidate({});\r\n                        }\r\n                    } break;\r\n                    case 'ArrowLeft': {\r\n                        if (focusNode.isOpen) focusNode.isOpen = false;\r\n                        else {\r\n                            if (focusNode.parent != null) setFocusNode(focusNode.parent);\r\n                        }\r\n                        setInvalidate({});\r\n                    } break;\r\n                    case 'ArrowUp': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n) {\r\n                                    if (i === 0) {\r\n                                        setFocusNode(focusNode.parent);\r\n                                        setInvalidate({});\r\n                                    } else {\r\n                                        setFocusNode(list[i - 1]);\r\n                                        setInvalidate({});\r\n                                    }\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case 'ArrowDown': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n && i < list.length - 1) {\r\n                                    setFocusNode(list[i + 1]);\r\n                                    setInvalidate({});\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case ' ': {\r\n                        if (masterNode != null) openPreviewDialog();\r\n                    } break;\r\n                }\r\n            }}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview',\r\n                                isEnable: masterNode != null,\r\n                                callback: openPreviewDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return LogicUtil.getNodeDisplayJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={isModify}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <_DetailDiv>\r\n                    <_DetailHeader>\r\n                        <_DetailHeaderLabel>{LogicUtil.getTypeName(focusNode)}</_DetailHeaderLabel>\r\n                    </_DetailHeader>\r\n                    <FactoryTreeContext.Provider value={{\r\n                        rootData,\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        isModify,\r\n                        setModify,\r\n                        // treeDisable,\r\n                        setRootData,\r\n                        removeSelf: () => {\r\n                            const node = focusNode as TreeUtil.ElementNode;\r\n                            let index = -1;\r\n                            node.parent?.children.forEach((n, i) => {\r\n                                if (n == node) index = i;\r\n                            });\r\n                            node.parent?.children.splice(index, 1);\r\n                            const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n                            const listName = LogicElementUtil.getListParamName(parentWrap.type);\r\n                            if (listName == null) return;\r\n                            const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n                            list.splice(index, 1);\r\n                            setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                            setInvalidate({});\r\n                        }\r\n                    }}>\r\n                        <_DetailMainDiv>{LogicUtil.getDetailComponent(focusNode)}</_DetailMainDiv>\r\n                    </FactoryTreeContext.Provider>\r\n                </_DetailDiv>\r\n            </_PropsDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default LogicMainteTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #6c8186;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d87b;\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _TreeHeadHalf = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    background-color: #7fbdb47a;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #9fa9b6;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _DetailDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\nconst _DetailHeader = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #b4b29e; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _DetailHeaderLabel = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #a10000;\r\n    /* background-color: #bbd0d3; */\r\n    border: solid 1px #a10000;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 20px);\r\n    margin: 5px 0 0 10px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DetailMainDiv = styled.div`\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 44px);\r\n    margin: 0 0 0 4px;\r\n    background-color: #cfd3cc;\r\n    border: solid 1px #0026a1;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\n\r\nnamespace NameDefDialog {\r\n\r\n    export const Component = (props: {\r\n        targetSeq: number\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const width = 500;\r\n        const height = 150;\r\n\r\n        const isCreate = props.targetSeq === -1;\r\n        const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n        const getDefaultName = () => {\r\n            return props.targetSeq === -1 ? '' : (projects.find(p => p.seq === props.targetSeq) as StoreCloud.Project).name;\r\n        }\r\n\r\n        useEffect(() => {\r\n            name.value = getDefaultName();\r\n            setName({ ...name });\r\n        }, []);\r\n\r\n        const [existNames] = useMemo(() => {\r\n            return [\r\n                projects.map(item => item.name)\r\n            ];\r\n        }, []);\r\n\r\n        const registCreate = () => {\r\n            const result = findProjectMaxSeq();\r\n            result.then((maxSeq) => {\r\n                const newProject = {\r\n                    seq: maxSeq + 1,\r\n                    name: name.value,\r\n                    source: '',\r\n                    lastmod: ''\r\n                };\r\n                projects.push(newProject);\r\n                insertProject(store.system.user?.seq as number, newProject).then(() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            });\r\n        }\r\n\r\n        const registUpdate = () => {\r\n            const targetItem = projects.find(item => item.seq === props.targetSeq);\r\n            if (targetItem != undefined) {\r\n                updateProjectName(props.targetSeq, name.value).then(() => {\r\n                    targetItem.name = name.value;\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            }\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: isCreate ? 'Create' : 'Update',\r\n                isEnable: name.errors.length === 0,\r\n                callback: () => {\r\n                    if (isCreate) registCreate();\r\n                    else registUpdate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, input new name!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => LogicUtil.checkFieldName(value),\r\n                                //     errorType: \"value\"\r\n                                // },\r\n                                {\r\n                                    checker: (value) => !existNames.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NameDefDialog;\r\n\r\nconst findProjectMaxSeq = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT max(seq) m FROM prjcttbl`);\r\n    const results = await response.json();\r\n    return results[0].m;\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport NameDefDialog from \"./nameDefDialog\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n    const listItemJsx = store.cloud == null ? [] : store.cloud.projects.map((item, i) => {\r\n        const exist = item.source !== '';\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    setFcsListIdx(i);\r\n                }}\r\n            >\r\n                <_Status isExist={exist}>[{!exist ? 'Blank' : 'Logic'}] </_Status>\r\n                <_Name>{item.name}</_Name>\r\n                {/* <_Date> -{item.lastmod}</_Date> */}\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    const hasData = store.logicData != null;\r\n    const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n    useEffect(()=>{\r\n        if(store.cloud == null) {\r\n            setFcsListIdx(-1);\r\n        }\r\n    }, [store.cloud]);\r\n\r\n    const [logicSize, developCnt, privateCnt, releaseCnt, logicCnt] = useMemo(() => {\r\n        if (store.logicData == null) return [0, 0, 0, 0, 0];\r\n        let size = 0;\r\n        const incrRec = (wrap: LogicUtil.WrapElement) => {\r\n            size++;\r\n            const listName = LogicElementUtil.getListParamName(wrap.type);\r\n            if (listName != null) {\r\n                const list = wrap.data[listName] as LogicUtil.WrapElement[];\r\n                list.forEach(wrap => incrRec(wrap));\r\n            }\r\n        }\r\n        const root = store.logicData.data as LogicUtil.NodeRoot;\r\n        incrRec(root.logicMng);\r\n        incrRec(root.seedMng);\r\n\r\n        let developCnt = 0;\r\n        let privateCnt = 0;\r\n        let releaseCnt = 0;\r\n        const seedMng = root.seedMng.data as LogicUtil.NodeSeedManager;\r\n        seedMng.defs.forEach(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n            switch (seed.permit) {\r\n                case 'develop': developCnt++; break;\r\n                case 'private': privateCnt++; break;\r\n                case 'release': releaseCnt++; break;\r\n            }\r\n        });\r\n\r\n        const logicMng = root.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return [size, developCnt, privateCnt, releaseCnt, logicMng.defs.length];\r\n    }, [store.logicData]);\r\n\r\n    return (<_Wrap>\r\n        <_HeaderDiv>\r\n            <FormUtil.ButtonRecord\r\n                align=\"left\"\r\n                buttons={[\r\n                    {\r\n                        label: 'New Project',\r\n                        isEnable: !hasData,\r\n                        callback: () => {\r\n                            store.logicData = LogicElementUtil.getInitialData();\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                ]}\r\n            />\r\n        </_HeaderDiv>\r\n        <_BodyDiv>\r\n            <_LeftDiv isEnable={store.cloud != null}>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Create',\r\n                            width: 110,\r\n                            isEnable: true,\r\n                            callback: () => {\r\n                                store.system.dialog = <NameDefDialog.Component\r\n                                    targetSeq={-1}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Upload',\r\n                            width: 110,\r\n                            isEnable: fcsListIdx != -1 && hasData,\r\n                            callback: () => {\r\n                                const source = DataUtil.gZip(JSON.stringify(store.logicData));\r\n                                updateProjectSource(projects[fcsListIdx].seq, source).then(() => {\r\n                                    const project = projects[fcsListIdx];\r\n                                    project.source = source;\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Update project succesful!\"\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Delete',\r\n                            width: 110,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                deleteProject(projects[fcsListIdx].seq).then(() => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Delete project succesful!\"\r\n                                    />;\r\n                                    projects.splice(fcsListIdx, 1);\r\n                                    setFcsListIdx(fcsListIdx - 1);\r\n                                    setStore({ ...store });\r\n                                });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Rename',\r\n                            width: 110,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                store.system.dialog = <NameDefDialog.Component\r\n                                    targetSeq={projects[fcsListIdx].seq}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_ListDiv>\r\n                    {listItemJsx}\r\n                </_ListDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Clone',\r\n                            isEnable: !hasData && fcsListIdx !== -1 && projects[fcsListIdx].source !== '',\r\n                            callback: () => {\r\n                                const source = DataUtil.unZip(projects[fcsListIdx].source);\r\n                                store.logicData = JSON.parse(source);\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Clone project succesful!\"\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_LeftDiv>\r\n            <_RighttDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Load',\r\n                            width: 100,\r\n                            isEnable: !hasData,\r\n                            callback: () => { DataUtil.loadFile(store, setStore) }\r\n                        },\r\n                        {\r\n                            label: store.fileHandle == null ? 'Save' : 'Overwrite',\r\n                            width: 140,\r\n                            isEnable: hasData,\r\n                            callback: () => { DataUtil.saveFile(store, setStore) }\r\n                        },\r\n                        {\r\n                            label: 'Disconnect',\r\n                            width: 160,\r\n                            isEnable: store.fileHandle != null,\r\n                            callback: () => {\r\n                                store.fileHandle = null;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Clear',\r\n                            width: 100,\r\n                            isEnable: hasData,\r\n                            callback: () => {\r\n                                store.logicData = null;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <FormUtil.BorderPanel\r\n                    title=\"Project\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Private\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : privateCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Release\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : releaseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Logic\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Launcher\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Size\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicSize.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Hash\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    width={340}\r\n                                    value={!hasData ? '-' : DataUtil.getSHA256Hash(JSON.stringify(store.logicData))}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n            </_RighttDiv>\r\n        </_BodyDiv>\r\n\r\n    </_Wrap >);\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst updateProjectSource = async (seq: number, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from prjcttbl where seq = ${seq};`)\r\n}\r\n\r\nconst HEADER_WIDTH = 40;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    background-color: #ebebeb30;\r\n`;\r\n\r\nconst _HeaderDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_WIDTH}px;\r\n    background-color: #d1f5f32f;\r\n`;\r\n\r\nconst _BodyDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_WIDTH}px);\r\n    background-color: #221a212c;\r\n`;\r\n\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #ffe3fb53;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 86px);\r\n    box-sizing: border-box;\r\n    background-color: #f0ecd43d;\r\n    border: 1px solid #002c8a;\r\n    border-radius: 4px;\r\n`;\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    isExist: boolean;\r\n}>`\r\n    ${props => !props.isExist ? css`color: #0000006d;` : `color: #b90000be;`}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\nconst _RighttDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #cbf7cd2d;\r\n    vertical-align: top;\r\n`;","import { type } from \"os\";\r\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport Common from \"../common\";\r\nimport TimelineUtil from \"./timelineUtil\";\r\n\r\nconst LauncherTab = () => {\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    {/* <HierarchyNavi cur={focusNode}/> */}\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n            </_PropsDiv>\r\n            {/* <_Blind isVisible={isBackingWnd}>\r\n                    <_Contents>{!isBackingWnd ? <></> : <BackingEditorFrame />}</_Contents>\r\n                </_Blind> */}\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default LauncherTab;\r\n\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c3d8dd;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #532fc0; */\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n    padding: 6px 6px 6px 0;\r\n`;\r\n\r\nconst _TabContWrap = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 630px;\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    /* opacity: 0.9; */\r\n    overflow: hidden;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport LogicMainteTab from \"./factory/logicMainteTab\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport PreviewTab from \"./manage/manageTab\";\r\nimport LauncherTab from \"./launcher/launcherTab\";\r\nimport Timeline from \"./launcher/launcherTab\";\r\n\r\n\r\nconst CreateChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const hasData = store.logicData != null;\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', enable: true, cont: <ManageTab /> },\r\n                    { name: 'Launcher', enable: false, cont: <LauncherTab /> },\r\n                    { name: 'Library', enable: hasData, cont: <LogicMainteTab /> }\r\n                ]}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CreateChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { Redirect } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst DirectView = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const conteseq = DataUtil.getDecryptionedScoreSeq(props.hashKey);\r\n\r\n    // const setScoreData = (owner: string, dispnam: string, data: ScoreData) => {\r\n    //     store.scoreState.focusIndex = 2;\r\n    //     store.scoreState.distIndex = store.scoreState.focusIndex;\r\n    //     dispatcher.score.setScoreState({ ...store.scoreState });\r\n    //     // dispatcher.score.setScoreTabIndex(1);\r\n    //     dispatcher.score.setScoreData(data);\r\n    //     // キャッシュの更新\r\n    //     store.scoreData = data;\r\n    //     CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    //     store.systemState.mainChannelIndex = 5;\r\n    //     store.systemState.scoreTabIndex = 0;\r\n    //     store.systemState.directScore = {\r\n    //         owner, name: dispnam\r\n    //     };\r\n    //     dispatcher.system.setState(store.systemState);\r\n    // };\r\n\r\n    useEffect(() => {\r\n        // DataUtil.findScore(conteseq).then(resList => {\r\n        //     if (resList.length > 0) {\r\n        //         const source = resList[0]['data'];\r\n        //         const owner = resList[0]['owner'];\r\n        //         const dispnam = resList[0]['dispnam'];\r\n        //         const text = DataUtil.unZip(source);\r\n        //         setScoreData(owner, dispnam, JSON.parse(text));\r\n        //     }\r\n        // });\r\n    }, []);\r\n    // if (store.systemState.directScore == null) {\r\n    //     return <></>;\r\n    // } else {\r\n    //     return <Redirect to=\"/\" />;\r\n    //     // return <MainFrame />;\r\n    // }\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nexport default DirectView;","import { Redirect } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst DirectLogin = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        const seq = DataUtil.getDecryptionedUserSeq(props.hashKey);\r\n        console.log(seq);\r\n        DataUtil.findUserInfoFromSeq(seq).then(resList => {\r\n            console.log(resList);\r\n            if (resList.length > 0) {\r\n                const loginProps = resList[0];\r\n                // store.userEnv.login = loginProps;\r\n                // dispatcher.system.setUserEnv(store.userEnv);\r\n            }\r\n        });\r\n    }, []);\r\n    // if (store.userEnv.login == null) {\r\n    //     return <></>;\r\n    // } else {\r\n    //     return <Redirect to=\"/\" />;\r\n    //     // return <MainFrame />;\r\n    // }\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nexport default DirectLogin;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport TreeUtil from \"../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../create/factory/util/logicUtil\";\r\nimport LogicPreviewFrame from \"../create/preview/logicPreviewFrame\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    isOpen: boolean;\r\n    seedList: SeedProps[];\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\n\r\nconst PublishFrame = (props: {\r\n    setLibCnt: (artsCnt: number) => void;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [libList, setLibList] = useState<LibProps[]>([]);\r\n\r\n    useEffect(() => {\r\n        findAllReleaseProjectList().then((resList) => {\r\n            const libList: LibProps[] = [];\r\n            resList.forEach(res => {\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const rootData = JSON.parse(DataUtil.unZip(res.source)) as LogicUtil.WrapElement;\r\n                const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                const seedList: SeedProps[] = seedMng.defs\r\n                    .filter(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        return seed.permit === 'release';\r\n                    })\r\n                    .map(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                        const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                        return { name: seed.name, argCount, master: wrap };\r\n                    });\r\n                libList.push({\r\n                    name, ownerId, lastmod, rootData, seedList, isOpen: false\r\n                });\r\n            });\r\n            setLibList(libList);\r\n            props.setLibCnt(libList.length);\r\n        });\r\n    }, []);\r\n\r\n    const libListJsx = libList\r\n        .filter(lib => lib.seedList.length > 0).map((lib, i) => {\r\n            const dispCnt = !lib.isOpen ? 0 : lib.seedList.length;\r\n            return (<_Item key={i} count={dispCnt}>\r\n                <_Header onClick={() => {\r\n                    // window.open(DataUtil.getPreviewURL(score.seq), '_blank');\r\n                }}>\r\n                    <_Owner>{`${lib.ownerId}`}</_Owner>\r\n                    <_CName>{`${lib.name}`}</_CName><_CDate>{lib.lastmod}</_CDate>\r\n                </_Header>\r\n                <_DetailMain count={dispCnt}>\r\n                    {lib.seedList.map((seed, j) => {\r\n                        return (\r\n                            <_SeedItemFrame key={j} onClick={() => {\r\n                                store.system.dialog = (\r\n                                    <LogicPreviewFrame.Component\r\n                                        master={seed.master}\r\n                                        rootData={lib.rootData}\r\n                                    />\r\n                                );\r\n                                setStore({ ...store });\r\n                            }}>\r\n                                <_SeedItemInner>\r\n                                    <_SeedName>{seed.name}</_SeedName>\r\n                                    <_SeedArgCnt>{` [${seed.argCount} arguments]`}</_SeedArgCnt>\r\n                                </_SeedItemInner>\r\n                            </_SeedItemFrame>\r\n                        );\r\n                    })}\r\n                </_DetailMain>\r\n                <_DetailOpen onClick={() => {\r\n                    libList[i].isOpen = !libList[i].isOpen;\r\n                    setLibList(libList.slice());\r\n                }}>\r\n                    <_CSummary>{` ${lib.seedList.length} seeds ▼`}</_CSummary>\r\n                </_DetailOpen>\r\n            </_Item>);\r\n        });\r\n\r\n    return (\r\n        <_ListFrame>{libListJsx}</_ListFrame>\r\n    );\r\n}\r\n\r\nexport default PublishFrame;\r\n\r\nexport const findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #929292;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst SEED_HEIGTH = 40;\r\nconst _Item = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${props => (props.count > 0 ? 8 : 0) + 89 + props.count * SEED_HEIGTH}px;\r\n    /* border-bottom: 1px solid #262626; */\r\n    /* background-color: #2e2e2e; */\r\n    /* background: linear-gradient(to bottom, transparent, #4f4f4f); */\r\n    margin: 2px 0 0 0;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    } */\r\n    transition: height 200ms;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100%);\r\n    height: 60px;\r\n    /* background-color: #c9e3df; */\r\n    background: linear-gradient(to bottom, #c2d5d2, #d9ebe9, #c2d5d2);\r\n    /* margin: 4px 0 0 4px; */\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff);\r\n    } */\r\n`;\r\nconst _DetailMain = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 40px);\r\n    height: ${props => (props.count > 0 ? 8 : 0) + props.count * SEED_HEIGTH}px;\r\n    background-color: #9cc0b1;\r\n    border-radius: 0 0 2px 2px;\r\n    margin: 0 0 0 20px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    transition: height 200ms;\r\n    overflow-y: hidden;\r\n`;\r\nconst _DetailOpen = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 240px);\r\n    height: 25px;\r\n    margin: 0 0 0 120px;\r\n    background-color: #9cc0b1;\r\n    border-radius: 0 0 2px 2px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    &:hover {\r\n        background-color: #c6d1a1;\r\n    }\r\n`;\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CSummary = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 25px;\r\n    font-size: 22px;\r\n    line-height: 22px;\r\n    font-weight: 600;\r\n    color: #fffffad6;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _SeedItemFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${SEED_HEIGTH}px;\r\n    /* background-color: #a3b9c0; */\r\n    margin: 2px 0 0 0;\r\n    /* padding-left: 4px; */\r\n    text-align: left;\r\n`;\r\nconst _SeedItemInner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 2px;\r\n    border: 1px solid #0000002e;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    line-height: 29px;\r\n    font-weight: 600;\r\n    padding: 0 0 0 5px;\r\n    &:hover {\r\n        background-color: #bbd4dc;\r\n    }\r\n`;\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #000f74;\r\n`;\r\nconst _SeedArgCnt = styled.span<{\r\n}>`\r\n    color: #c7020265;\r\n`;","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\ntype NotePorp = {\r\n    version: string;\r\n    date: string;\r\n    note: string;\r\n}\r\n\r\nconst ReleaseNote = () => {\r\n    const { store } = useContext(GlobalContext);\r\n\r\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\r\n    useEffect(() => {\r\n        fetch('assets/release_note.json')\r\n            .then(response => response.json()) // (2) レスポンスデータを取得\r\n            .then(json => { // (3)レスポンスデータを処理\r\n                const list = json as NotePorp[];\r\n                setJsx(list.map((item, i) => {\r\n                    const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n                    return (\r\n                        <_Item key={i}>\r\n                            <_Header>v{item.version} ({item.date})</_Header>\r\n                            <_Detail>{record}</_Detail>\r\n                        </_Item>\r\n                    );\r\n                }));\r\n            });\r\n    }, []);\r\n    return (<_ListFrame>{jsx}</_ListFrame>);\r\n}\r\n\r\nexport default ReleaseNote;\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    /* height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px); */\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #bfcace;\r\n    border: 1px solid #9b9b9b;\r\n    border-radius: 6px;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    font-weight: 600;\r\n    /* background-color: #8bdbf8; */\r\n    color: #494975;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    /* background-color: #dafce4; */\r\n    color: #754949;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PublishFrame from \"./publishFrame\";\r\nimport ReleaseNote from \"./releaseNote\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [userCount, setUserCount] = useState(0);\r\n    const [artsCnt, setArtsCnt] = useState(0);\r\n\r\n    useEffect(() => {\r\n        countUsers().then(cnt => {\r\n            setUserCount(cnt);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <ReleaseNote />\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{artsCnt} projects have been published.</_MessageRecord>\r\n            <PublishFrame setLibCnt={setArtsCnt}/>\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeChannel;\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nexport const findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT seq, (select id from user_tbl where seq = prj.seq) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { CgOptions, CgPiano } from 'react-icons/cg';\r\nimport { VscGitPullRequestCreate } from 'react-icons/vsc';\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport CreateChannel from \"../create/createChannel\";\r\nimport DirectView from \"./directView\";\r\nimport DirectLogin from \"./directLogin\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <_Wrap>\r\n                    <ChannelPane\r\n                        tabElements={[\r\n                            { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <HomeChannel /> },\r\n                            { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <CreateChannel/> },\r\n                        ]}\r\n                        activeNo={0}\r\n                    // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n                    />\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/test\" exact >\r\n                <_Wrap>\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/preview\" exact >\r\n                <DirectView hashKey={str} />\r\n            </Route>\r\n            <Route path=\"/user\" exact >\r\n                <DirectLogin hashKey={str} />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <span>L</span>iCreSia\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2022 Licresia All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#868686, #ffffff);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #636363;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport StoreSystem from \"../../redux/store/storeSystem\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../utils/form/validateUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst WIDTH = 750;\r\nconst HEIGHT = 600;\r\n/**\r\n * アカウントフレームのコンポーネント\r\n * @returns \r\n */\r\nconst AccountFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [oldPass, setOldPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPass, setNewPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPassConfirm, setNewPassConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n    const [emailList, setEmailList] = useState<string[]>([]);\r\n\r\n    const [isModify, setModify] = useState(false);\r\n    const loginProps = store.system.user as StoreSystem.User;\r\n\r\n    const reloadInfo = () => {\r\n        setUserId({ ...userId, value: loginProps.id });\r\n        setNewPass({ ...newPass, value: '' });\r\n        setNewPassConfirm({ ...newPassConfirm, value: '' });\r\n        setEmail({ ...email, value: loginProps.email });\r\n        setOldPass({ ...oldPass, value: loginProps.password });\r\n    }\r\n\r\n    useEffect(() => {\r\n        DataUtil.findUserInfoList().then(list => {\r\n\r\n            const userIdList: string[] = [];\r\n            const emailList: string[] = [];\r\n            list.forEach(info => {\r\n                if (info.id !== loginProps.id) userIdList.push(info.id);\r\n                if (info.email !== '') emailList.push(info.email);\r\n            });\r\n            setUserIdList(userIdList);\r\n            setEmailList(emailList);\r\n        });\r\n\r\n        const hash = DataUtil.getHashedFromUserSeq(loginProps.seq);\r\n\r\n        // ユーザページのURLに変更する。\r\n        window.history.replaceState('', '', `/#/user?v=${hash}`);\r\n\r\n        reloadInfo();\r\n\r\n        // 閉じる際にURLを元に戻す\r\n        return () => {\r\n            // alert('destroy');\r\n            window.history.replaceState('', '', `/#/`);\r\n        }\r\n    }, []);\r\n\r\n    const userTabJsx: JSX.Element = (\r\n        <_Wrap>\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'user id'}\r\n                checkable={userId}\r\n                setCheckable={setUserId}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !userIdList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass'}\r\n                isPassword\r\n                checkable={newPass}\r\n                setCheckable={setNewPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPassConfirm.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPassConfirm]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass*'}\r\n                isPassword\r\n                checkable={newPassConfirm}\r\n                setCheckable={setNewPassConfirm}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPass.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPass]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'email'}\r\n                checkable={email}\r\n                setCheckable={setEmail}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => {\r\n                            return value.length === 0 || value.split('@').length === 2;\r\n                        },\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !emailList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                // width={500}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'old pass'}\r\n                isPassword\r\n                checkable={oldPass}\r\n                setCheckable={setOldPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => value === loginProps.password,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                // dependency={[passwordConfirm]}\r\n                width={300}\r\n                marginTop={55}\r\n                isReadOnly={!isModify}\r\n            />\r\n        </_Wrap>\r\n    );\r\n\r\n    // 登録ボタンの活性状態\r\n    const permitRegist = (\r\n        userId.errors.length === 0\r\n        && newPass.errors.length === 0\r\n        && newPassConfirm.errors.length === 0\r\n        && email.errors.length === 0\r\n        && oldPass.errors.length === 0\r\n    );\r\n\r\n    const updateUserInfo = () => {\r\n        const passwordStr = newPass.value.length === 0 ? '' : `,password = '${newPass.value}'`;\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `UPDATE user_tbl SET id = '${userId.value}', email = '${email.value}'${passwordStr}\r\n            WHERE seq = ${loginProps?.seq}`\r\n        ).then(() => {\r\n            loginProps.id = userId.value;\r\n            if (newPass.value.length > 0) {\r\n                loginProps.password = newPass.value;\r\n            }\r\n            loginProps.email = email.value;\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Modify successful!\" />;\r\n            setStore({...store});\r\n        });\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <FormUtil.Message\r\n                    message=\"If you bookmark this page, you can easily login by URL.\"\r\n                />\r\n            </_Header>\r\n            <_Body>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'User', enable: true, cont: userTabJsx },\r\n                        { name: 'Security', enable: false, cont: <></> },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_Body>\r\n            <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        {\r\n                            label: 'Close',\r\n                            callback: () => {\r\n                                // dispatcher.system.closeDialog();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Cancel',\r\n                            isEnable: isModify,\r\n                            callback: () => {\r\n                                setModify(false);\r\n                                reloadInfo();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isModify ? 'Modify' : 'Regist',\r\n                            isEnable: !isModify || permitRegist,\r\n                            callback: () => {\r\n                                if (!isModify) {\r\n                                    setModify(true);\r\n                                    setOldPass({ ...oldPass, value: '' });\r\n                                }\r\n                                else {\r\n                                    updateUserInfo();\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\n\r\nexport default AccountFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7eb;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    /* text-align: center; */\r\n`;\r\nconst _Body = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 100px);\r\n    padding: 4px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport AccountFrame from \"../accountFrame\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginCreateAccount = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isRegist, setRegist] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [passwordConfirm, setPasswordConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n\r\n    const createAuthText = () => {\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n        const list = '0123456789';\r\n        let text = '';\r\n        for (let i = 0; i < 6; i++) {\r\n            text += list.charAt(Math.random() * list.length);\r\n        }\r\n        return text;\r\n    };\r\n\r\n    /** 既存のユーザIDリストを格納 */\r\n    useEffect(() => {\r\n        DataUtil.findUserIdList().then(list => {\r\n            setUserIdList(list);\r\n        });\r\n\r\n        // fetch('https://api.ipify.org/?format=json').then(res => {\r\n        //     res.json().then(data => {\r\n        //         alert(data['ip']);\r\n        //     });\r\n        // });\r\n    }, []);\r\n\r\n    const [authCollation, setAuthCollation] = useState<string>(createAuthText());\r\n    const [authInput, setAuthInput] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    /** キャッシュした認証画像 */\r\n    const authPicture = useMemo(() => {\r\n        return CanvasUtil.getAuthTextURL(authCollation);\r\n\r\n    }, [authCollation]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n                case 'relation': list.push('[password] does not match confirm.'); break;\r\n            }\r\n        }\r\n        if (passwordConfirm.errors.length > 0) {\r\n            switch (passwordConfirm.errors[0]) {\r\n                case 'length': list.push('[password *] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    const registAction = () => {\r\n\r\n        (async () => {\r\n            let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n            let results = await response.json();\r\n            console.log(JSON.stringify(results[0].cnt));\r\n            const isExist = results[0].cnt > 0;\r\n            if (isExist) {\r\n                setMessageList(['That user id has already been recorded.']);\r\n            } else {\r\n                const nextSeq = await DataUtil.getNextUserSeq();\r\n                console.log(nextSeq);\r\n                await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(seq, id, password) VALUES(${nextSeq}, '${userId.value}', '${password.value}')`);\r\n                store.system.user = {\r\n                    seq: nextSeq,\r\n                    id: userId.value,\r\n                    password: password.value,\r\n                    email: '',\r\n                };\r\n                store.cloud = {\r\n                    projects: []\r\n                };\r\n                store.system.dialog = (<ConfirmDialog.Component\r\n                    message='You have successfully created an account!'\r\n                    buttons={[\r\n                        {\r\n                            label: 'OK',\r\n                            callback: () => {\r\n                                store.system.dialog = (<AccountFrame />);\r\n                                setStore({...store});\r\n                            }\r\n                        }\r\n                    ]}\r\n                />);\r\n                setStore({...store});\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0 && passwordConfirm.errors.length === 0;\r\n    }\r\n    const isAuthOK = () => {\r\n        return authInput.errors.length === 0 && authCollation === authInput.value;\r\n    }\r\n\r\n    return (<>\r\n\r\n        <_Frame isVisible={!isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass (Confirm).'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            },\r\n                            {\r\n                                checker: (value) => !userIdList.includes(value),\r\n                                errorType: \"relation\"\r\n                            },\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === passwordConfirm.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[passwordConfirm]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password*'}\r\n                        isPassword\r\n                        checkable={passwordConfirm}\r\n                        setCheckable={setPasswordConfirm}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === password.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[password]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Enter', isEnable: isLoginInfoOK(), callback: () => {\r\n                                    setRegist(true);\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Proof not a robot\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, input the same 6 number as the picture.'}\r\n                    />\r\n                    <_AuthText src={authPicture} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Change', callback: () => {\r\n                                    setAuthCollation(createAuthText());\r\n                                    setAuthInput({ value: '', errors: [] });\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                    {/* 照合する文字列 */}\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'6 numbers'}\r\n                        checkable={authInput}\r\n                        setCheckable={setAuthInput}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Regist', isEnable: isAuthOK(), callback: registAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setRegist(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginCreateAccount;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n\r\nconst _AuthText = styled.img<{\r\n}>`\r\n    display: block;\r\n    text-align: center;\r\n    margin: 4px auto;\r\n    background-color: #f7f0f0;\r\n    border: 1px solid #888888;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginLogin = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isForget, setForget] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        // alert(`Confirmation passwords don't match.`);\r\n        (async () => {\r\n            const results = await DataUtil.findUserInfoLogin(userId.value, password.value);\r\n            console.log(JSON.stringify(results));\r\n            if (results.length > 0) {\r\n                store.system.user = {\r\n                    seq: results[0].seq,\r\n                    id: results[0].id,\r\n                    password: results[0].password,\r\n                    email: results[0].email,\r\n                };\r\n                const resPrjList = await findUserProjectList(results[0].seq);\r\n                console.log(JSON.stringify(resPrjList));\r\n                store.cloud = {\r\n                    projects: resPrjList.map(res => ({\r\n                        source: res.source,\r\n                        name: res.name,\r\n                        seq: res.seq,\r\n                        lastmod: res.lastmod\r\n                    }))\r\n                };\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                    message=\"Login successful!\"\r\n                />;\r\n                setStore({ ...store });\r\n            } else {\r\n                setMessageList(['Incorrect user id or password.']);\r\n                // setPassword({ ...password, value: '' });\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0;\r\n    }\r\n\r\n    return (<>\r\n        <_Frame isVisible={!isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Enter', isEnable: isLoginInfoOK(), callback: enterAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Forgot your login information?\"\r\n                clickAction={() => {\r\n                    setForget(true);\r\n                }}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Email\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Submit login information to account address.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'email'}\r\n                        checkable={email}\r\n                        setCheckable={setEmail}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => {\r\n                                    return value.length === 0 || value.split('@').length === 2;\r\n                                },\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={500}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Send', isEnable: email.errors.length === 0, callback: () => {\r\n                                    DataUtil.findUserInfoFromEmail(email.value).then((list) => {\r\n                                        if (list.length > 0) {\r\n                                            const info = list[0];\r\n                                            const hash = DataUtil.getHashedFromUserSeq(info.seq);\r\n                                            const url = `https://demo-app.licresia.com/#/user?v=${hash}`;\r\n                                            DataUtil.sendQueryRequestToMailAPI({\r\n                                                from: 'info@licresia.com',\r\n                                                to: email.value,\r\n                                                subject: '【LiCreSia】support',\r\n                                                text: `Your login information is as follows.\\n\\nURL: ${url}\\nUSR ID: ${info.id}`\r\n                                            });\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"Your login information has been sent!\" />);\r\n                                        } else {\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"This email address is not registered.\" />);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setForget(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginLogin;\r\n\r\n\r\nexport const findUserProjectList = async (userSeq: number) => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT owner, seq, name, source, lastmod FROM prjcttbl WHERE owner = ${userSeq} order by seq`);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LoginCreateAccount from \"./loginCreateAccount\";\r\nimport LoginLogin from \"./loginLogin\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 500;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_LogoDiv>\r\n                <img src={logo} />\r\n            </_LogoDiv>\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {!isCreate ? <LoginLogin /> : <LoginCreateAccount />}\r\n            {/* <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        { name: 'Close', callback: closeAction },\r\n                        { name: 'Enter', callback: enterAction },\r\n                    ]}\r\n                />\r\n            </_Footer> */}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #bf808075;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n    background-color: #bf8080a2;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #c7a73e;\r\n        `}\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport LoginFrame from \"../dialog/login/loginFrame\";\r\nimport AccountFrame from \"../dialog/accountFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const user = store.system.user;\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (user != null) {\r\n            setUserId('@' + user.id);\r\n        }\r\n    }, [user]);\r\n\r\n    const authButtonJsx = user == null ? (\r\n        <_LoginButton onClick={() => {\r\n            store.system.dialog = <LoginFrame />;\r\n            setStore({ ...store });\r\n            console.log(window.location.origin);\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Login / Sign up\r\n        </_LoginButton>\r\n    ) : (<>\r\n        <_UserName\r\n            isEntry={user != null}\r\n            onClick={() => {\r\n                store.system.dialog = <AccountFrame />;\r\n                setStore({ ...store });\r\n            }}\r\n        >{userId}</_UserName>\r\n        <_LoginButton onClick={() => {\r\n            store.system.user = null;\r\n            store.cloud = null;\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message={'Logout.\\nSee you next time!'}\r\n            />;\r\n            setStore({ ...store });\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Logout\r\n        </_LoginButton>\r\n    </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                {/* <_ACCENT>Partice</_ACCENT>&nbsp;<_NORMAL>Simulator</_NORMAL> */}\r\n                <_Logo src={logo} />\r\n            </_Label>\r\n            <_Menu>\r\n                {authButtonJsx}\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    font-style: italic;\r\n    text-shadow: 1px 2px 3px #dbdbdb6a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #9fc2d1;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #ececec;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #9afff292;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #ff393983;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 260px;\r\n    height: 100%;\r\n    padding: 3px 0;\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { createContext, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    setStore: React.Dispatch<React.SetStateAction<Store>>;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, setStore] = useState(initialStore);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, setStore }}>\r\n            <>\r\n                {!store.system.isSplash ? <></> :\r\n                    <Splash\r\n                        remove={() => {\r\n                            setStore({...store, system: {\r\n                                ...store.system, isSplash: false\r\n                            }});\r\n                        }}\r\n                    />}\r\n                <_Wrap>\r\n                    <GloballDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #364887;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import zlib from \"zlib\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport { sha256 } from 'js-sha256';\r\nimport Hashids from 'hashids';\r\nimport { Store } from \"../redux/store/store\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport ConfirmDialog from \"../contents/dialog/confirmDialog\";\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5001';\r\n    // export const DB_SERVER_DOMAIN = 'https://hkdev-db.glitch.me';\r\n    export const DB_SERVER_DOMAIN = 'https://crud-server001.glitch.me';\r\n\r\n    export const APP_SERVER_DOMAIN = 'http://localhost:4333';\r\n    // export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/pa_app/v1.3.x';\r\n    // export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    const getUserHashBuilder = () => {\r\n        return new Hashids('pa-user', 8);\r\n    }\r\n\r\n    export const getHashedFromUserSeq = (seq: number) => {\r\n        const hashids = getUserHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\r\n        const hashids = getUserHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    const getScoreHashBuilder = () => {\r\n        return new Hashids('pa', 8);\r\n    }\r\n\r\n    export const getHashedFromScoreSeq = (seq: number) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedScoreSeq = (hashedSeq: string) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    export const getPreviewURL = (scoreSeq: number) => {\r\n        const hashedKey = getHashedFromScoreSeq(scoreSeq);\r\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql, databaseName: 'pa' })\r\n        }\r\n    }\r\n\r\n    export type SendMailParam = {\r\n        from: string,\r\n        to: string,\r\n        subject: string,\r\n        text: string\r\n    }\r\n\r\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(json)\r\n        }\r\n    }\r\n\r\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/mail',\r\n            createSendMailRequestInit(json)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserInfoList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\r\n        const results = await response.json();\r\n        return results as { id: string, email: string }[];\r\n    };\r\n\r\n    export const findUserIdList = async () => {\r\n        const results = await findUserInfoList();\r\n        return (results as { id: string }[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfoFromEmail = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserInfoFromSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoLogin = async (id: string, password: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const getNextUserSeq = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\r\n        const results = await response.json();\r\n        const nextSeq = (results[0]['seq'] as number) + 1;\r\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\r\n\r\n        return nextSeq;\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findScore = async (scoreSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT (select id from user_tbl where seq = score.user_seq) as owner, dispnam, data FROM scoretbl score WHERE seq = ${scoreSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n\r\n    export const loadFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            store.fileHandle =fileHandle;\r\n            const text = DataUtil.unZip(fileContents);\r\n            console.log(text);\r\n            store.logicData = JSON.parse(text);\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Successfully file loaded!\" />;\r\n            setStore({ ...store });\r\n        })();\r\n    }\r\n\r\n    export const saveFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.logicData as LogicUtil.WrapElement;\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        const plainData = JSON.stringify(rootData);\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const getSHA256Hash = (original: string) => {\r\n        return sha256(original);\r\n    }\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n}\r\n\r\nexport default DataUtil;"],"sourceRoot":""}