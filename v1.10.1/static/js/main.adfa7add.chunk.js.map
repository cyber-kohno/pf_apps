{"version":3,"sources":["system/base/design/styles.tsx","system/contents/dialog/confirmDialog.tsx","App.tsx","reportWebVitals.ts","index.tsx","system/utils/systemConst.tsx","system/utils/form/formUtiil.tsx","system/utils/canvasUtil.tsx","system/redux/store/store.tsx","system/contents/dialog/globalDialog.tsx","system/utils/form/validateUtil.tsx","system/utils/localStorageUtil.tsx","system/base/components/tab/tabbedPane.tsx","system/contents/dialog/accountFrame.tsx","system/contents/dialog/login/loginCreateAccount.tsx","system/utils/treeUtil.tsx","system/contents/dialog/login/loginLogin.tsx","system/contents/dialog/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/base/components/tab/channelPane.tsx","system/contents/graphic/particle.tsx","system/contents/graphic/drawUtil.tsx","system/contents/graphic/vectorUtil.tsx","system/contents/create/factory/util/paramUtil.tsx","system/contents/create/preview/modulateBuilder.tsx","system/contents/create/preview/previewUtil.tsx","system/contents/create/factory/detail/common/modifyOperations.tsx","system/contents/create/factory/detail/logic/editorArgumentMng.tsx","system/contents/create/factory/dialog/sendTemplateDialog.tsx","system/contents/create/factory/detail/logic/editorArgumentItem.tsx","system/contents/create/factory/detail/seed/editorSeedMng.tsx","system/contents/create/factory/detail/logic/editorLogicMng.tsx","system/contents/create/factory/detail/logic/editorLogicItem.tsx","system/contents/create/factory/detail/logic/editorParamItem.tsx","system/contents/create/factory/detail/logic/editorBehiviorMng.tsx","system/contents/create/factory/detail/logic/editorVisualMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnector.tsx","system/contents/create/factory/util/drawableVectorChooser.tsx","system/contents/create/factory/detail/logic/editorSendManager.tsx","system/contents/create/factory/detail/logic/editorFieldMng.tsx","system/contents/create/factory/detail/logic/editorExtendMng.tsx","system/contents/create/factory/detail/seed/editorSeedItem.tsx","system/contents/create/factory/detail/seed/editorThumbnailMng.tsx","system/contents/create/factory/detail/seed/editorThumbnailItem.tsx","system/contents/create/factory/util/logicFormUtil.tsx","system/contents/create/factory/util/logicUtil.tsx","system/contents/create/factory/detail/seed/editorSampleItem.tsx","system/contents/create/factory/detail/seed/editorSampleMng.tsx","system/contents/create/factory/detail/seed/editorInterfaceManager.tsx","system/contents/create/factory/detail/seed/editorSeedArgMng.tsx","system/contents/create/factory/detail/seed/editorSeedArgItem.tsx","system/contents/create/factory/detail/seed/editorSeedSendMng.tsx","system/contents/create/factory/detail/seed/editorFormgrpItem.tsx","system/contents/create/factory/detail/seed/editorFormgrpMng.tsx","system/contents/create/factory/util/logicElementUtil.tsx","system/sp/spUtil.tsx","system/contents/create/preview/inputForm/previewLogicInputForm.tsx","system/contents/create/preview/inputForm/previewSeedInputForm.tsx","system/contents/create/preview/previewLauncherFrameSp.tsx","system/contents/create/preview/buildUtil.tsx","system/contents/create/preview/previewLogicFrame.tsx","system/contents/create/manage/nameDefDialog.tsx","system/contents/create/factory/logicMainteTab.tsx","system/sp/contents/create/etc/cloudUtil.tsx","system/contents/create/manage/manageTab.tsx","system/contents/create/createChannel.tsx","system/contents/home/publishFrame.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/pCRoot.tsx","system/sp/directLinkManager.tsx","system/sp/contents/sPLibraryChannel.tsx","system/sp/contents/create/etc/shareDialog.tsx","system/sp/contents/create/etc/libraryLoader.tsx","system/sp/contents/create/etc/newScenarioDialog.tsx","system/sp/contents/create/etc/nameDefDialogLocal.tsx","system/contents/create/preview/previewLauncherFrame.tsx","system/sp/contents/create/sPManageFrame.tsx","system/sp/contents/create/edit/fuseMainteDialog.tsx","system/sp/contents/create/edit/fuseList.tsx","system/sp/contents/create/edit/frameLine.tsx","system/sp/contents/create/edit/sPEditStoryFrame.tsx","system/sp/contents/create/sPCreateChannel.tsx","system/sp/contents/sPPropertyChannel.tsx","system/sp/contents/sPInfoChannel.tsx","system/sp/sPRoot.tsx","system/redux/dispatcher/dispatcher.tsx","system/contents/entry/systemEntry.tsx","system/utils/dataUtil.tsx"],"names":["Styles","_Styles","FONT_SMALL","FONT_MIDIUM","FONT_LARGE","CSS_LABEL","css","_templateObject7","_taggedTemplateLiteral","CSS_LABEL_SMALL","_templateObject8","CSS_LABEL_MIDIUM","_templateObject9","CSS_LABEL_LARGE","_templateObject10","CSS_BUTTON_DISABLE","_templateObject11","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","ConfirmDialog","Component","props","_props$width","_props$height","_props$buttons","_useContext","useContext","GlobalContext","store","setStore","width","height","buttons","label","callback","system","dialog","_objectSpread","_jsxs","_Frame","children","_jsx","_Main","_Inner","message","split","map","msg","i","FormUtil","Message","isCenter","ButtonRecord","align","App","useEffect","document","oncontextmenu","onkeydown","e","ctrlKey","includes","key","SystemEntry","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","window","addEventListener","navigator","serviceWorker","register","concat","SystemConst","APP_VERSION","registration","console","log","catch","error","warn","documentElement","touches","length","preventDefault","passive","t","now","Date","getTime","ReactDOM","render","React","StrictMode","getElementById","_SystemConst","AUTH_TEXT_WIDTH","AUTH_TEXT_HEIGHT","IS_SP","APP_PRODUCT_SERVER_DOMAIN","APP_TEST_SERVER_DOMAIN","APP_SERVER_DOMAIN","EDGE_PREFIX","TOTAL_HEADER_WIDTH","MAIN_FRAME_MARGIN","SCORE_TAB_MARGIN","HOME_USER_DIV_HEIGHT","_FormUtil","isCompleteCheck","checkables","result","forEach","checkable","errors","InputTextFormBak","_props$isPassword","_props$validates","_props$dependency","_props$isEnable","_props$isCenter","_props$marginTop","_props$marginBottom","_props$isCenter2","type","isPassword","validaters","validates","dependency","dep","value","getErrors","validater","checker","push","errorType","setCheckable","_Record","isEnable","isVisible","textAlign","marginTop","marginBottom","undefined","titleLabel","_Fragment","_ItemnLabel","_ItemnInputBak","hasTitle","placeholder","onChange","target","readOnly","isReadOnly","Record","_props$isEnable2","_props$textAlign","_props$marginTop2","_props$marginBottom2","jsx","FormRecord","_props$labelWidth","_props$isEnabled","_props$isVisible","_props$textAlign2","_props$marginTop3","_props$marginBottom3","lablelWidth","labelWidth","isEnabled","FixedText","isRecordItem","DEFAULT_LABEL_WIDTH","_FixedLabel","TextField","_props$isPassword2","_props$isNumber","_props$isEnabled2","_props$validates2","_props$dependency2","_props$step","_useState","useState","_useState2","_slicedToArray","isNaN","setNaN","isNumber","step","_ItemnInput","Number","valueAsNumber","onBlur","toString","marginLeft","Combobox","_props$validates3","_props$dependency3","_props$headBlank","_props$isEnabled3","_props$width2","headBlank","list","slice","unshift","labelText","_ItemCombobox","item","_item$isDisabled","_item$isDisabled2","_Option","disabled","isDisabled","TextArea","_props$validates4","_props$dependency4","_ItemnTextArea","_props$align","_props$interval","_props$marginTop4","_props$marginBottom4","interval","isIconButton","button","_button$isEnable","_button$isEnable2","icon","_Button","onClick","_IconButton","ButtonItem","_button$interval","_button$isEnable3","_button$isEnable4","_props$isCenter3","_props$marginTop5","_props$marginBottom5","_props$isCenter4","_Message","MessageLink","_props$isCenter5","_props$marginTop6","_props$marginBottom6","_props$isCenter6","isLink","clickAction","BorderPanel","_props$isVisible2","_props$isEnable3","_props$backgroundColo","backgroundColor","_BorderText","title","_BorderPanel","innerJsx","InfoFrame","_props$height2","_InfoDiv","color","textRecords","text","Switch","_props$isRelation","_props$isEnable4","isRelation","isUse","_Switch","SwitchTwoFace","_props$isEnable5","_props$isEditable","_props$isLarge","_props$isLarge2","_props$isLarge3","isEditable","_SwitchTwoFace","isLarge","_SwitchItem","rate","rate1","isLeft","label1","rate2","label2","checkItems","find","input","_templateObject12","_templateObject13","_props$marginLeft","_templateObject14","select","_templateObject15","_props$marginLeft2","_templateObject16","option","_templateObject17","_templateObject18","_templateObject19","_templateObject21","_templateObject20","_templateObject22","_templateObject23","_templateObject24","_templateObject25","_templateObject26","_templateObject28","_templateObject27","_templateObject29","_templateObject30","_templateObject31","_templateObject33","_templateObject32","_templateObject34","_templateObject35","_templateObject36","_templateObject38","_templateObject37","_templateObject40","_templateObject39","_templateObject41","_templateObject43","_templateObject42","_templateObject44","_templateObject45","_templateObject46","_templateObject47","_templateObject49","_templateObject48","_templateObject50","_templateObject51","_templateObject53","_templateObject52","_templateObject55","_templateObject54","_templateObject56","_templateObject57","_templateObject59","_templateObject58","_templateObject60","_templateObject61","_templateObject62","_templateObject63","_templateObject64","textarea","_templateObject65","CanvasUtil","initialStore","isSplash","user","canDialogClose","isSPMode","logoutActions","channelIndex","cloud","env","screenRate","scrollLock","libraryData","storyData","fuseCacheList","local","maxSeq","projects","putInterval","isDispPreset","editing","localSeq","libName","fileHandle","GloballDialog","_Blind","_CanvasUtil","createURL","draw","canvas","createElement","ctx","getContext","toDataURL","getLogoURL","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillStyle","fillText","adjust","measureText","save","getAuthTextURL","WIDTH","SIZE","rotate","Math","PI","char","charAt","fontRand","random","alphaRand","ValidateUtil","_ValidateUtil","checkRequired","str","checkStringLength","min","max","checkAsciiChars","checkIncludesChars","ch","indexOf","checkNumber","checkNumberRange","num","checkAll","conditions","checkArrayNumber","v","LocalStorageUtil","TabbedPane","_props$tabRecordNum","activeNo","setActiveNo","tabRecordNum","_LabelList","tabElements","tab","index","TabLabel","name","isActive","enable","selectTab","selectTabIndex","_ContList","TabContents","cont","_TabLabel","_Contents","AccountFrame","tabIndex","setTabIndex","_useState3","_useState4","userId","setUserId","_useState5","_useState6","oldPass","setOldPass","_useState7","_useState8","newPass","setNewPass","_useState9","_useState10","newPassConfirm","setNewPassConfirm","_useState11","_useState12","email","setEmail","_useState13","_useState14","userIdList","setUserIdList","_useState15","_useState16","emailList","setEmailList","_useState17","_useState18","isModify","setModify","loginProps","reloadInfo","id","password","DataUtil","findUserInfoList","info","hash","getHashedFromUserSeq","seq","history","replaceState","userTabJsx","_Wrap","permitRegist","_Header","_Body","_Footer","passwordStr","sendQueryRequestToAPI","updateUserInfo","LoginCreateAccount","isRegist","setRegist","setPassword","passwordConfirm","setPasswordConfirm","messageList","setMessageList","createAuthText","findUserIdList","authCollation","setAuthCollation","authInput","setAuthInput","authPicture","useMemo","_AuthText","src","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","results","nextSeq","wrap","_context","prev","next","sent","json","JSON","stringify","cnt","getNextUserSeq","stop","img","_LocalStorageUtil","DEFAULT_FILE_NAME_PREFIX","KEY_LOGIN_HASH","KEY_SCENARIO_SEQ","KEY_SCENARIO_PREFIX","KEY_DISP_PRESET","KEY_PROP_PUT_INTERVAL","load","update","userHash","localStorage","getItem","userSeq","getDecryptionedUserSeq","resPrjList","findUserInfoSeq","findUserLibdvList","res","source","lastmod","removeItem","scenarioSeq","setItem","parse","TreeUtil","_TreeUtil","LoginLogin","isForget","setForget","findUserInfoLogin","findUserInfoFromEmail","url","sendQueryRequestToMailAPI","from","to","subject","LoginFrame","isCreate","setCreate","logo","_LogoDiv","_TypeSwitch","TotalHeader","authButtonJsx","_LoginButton","location","origin","ImUser","_UserName","isEntry","func","_Logo","replace","_Menu","_MenuItem","ChannelPane","_props$isLandscape","isLandscape","ChannelLabel","ChannelContents","_Item","_Icon","_Label","createNode","data","parent","depth","isOpen","getChildIndex","node","parentNode","Frame","_props$isDisable","_props$focusNode","isDisable","focusNode","ref","useRef","buildElementNodeFromData","build","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","jsxList","buildJsxRecords","element","spaceList","isCurrent","current","scrollWidth","tempNode","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","clickEvent","onDoubleClick","getLabelJsx","invalidate","Instance","_createClass","_this","_classCallCheck","owner","pos","prevPos","vec","frame","limit","isLive","drawer","extend","x","xy","y","this","_Particle","Particle","_DrawUtil","createGradDrawer","param","_param$radius","radiusBase","radius","self","_convertRgbaFromColor","flashAppearFrame","appearFrame","unitFrame","flashHideFrame","shrinkStartRate","start","floor","g","createRadialGradient","grads","rgba","convertRgbaFromColorCode","r","b","a","offset","convertColorCodeFromRgba","grad","addColorStop","globalAlpha","disappearStartRate","beginPath","arc","fill","code","parseInt","substring","r1","g1","b1","a1","toWhite","DrawUtil","Vector","rad","len","syncFromXY","sqrt","atan2","syncFromRad","cos","sin","_VectorUtil","VectorUtil","VisualParamType","_ParamUtil","VisualParams","Object","values","BehaviorParamType","BehaviorParams","SelfParamType","SelfParams","ExtendParamType","ExtendParams","EffectParamType","EffectParams","ModulateParamType","ModulateParams","ConstantType","Constants","ParamUtil","ModulateBuilder","extendList","decayRate","decayLimit","gravity","gravityLimit","PreviewUtil","_PreviewUtil","SCREEN_WIDTH","SCREEN_HEIGHT","searchElement","buildLogicProps","rootData","initialValueMapList","initailArrayMapList","createParticleRec","cur","parentValueMapList","parentArrayMapList","_searchElement","_searchElement2","valueMapList","ConstantValueMap","arr","array","fieldMng","mngs","fields","field","paramItem","convertFormulaToValue","visualParams","params","behaviorParams","getVisualParam","convertParamsToValue","getBehaviorParam","LIMIT","POS_X","POS_Y","VEC_X","VEC_Y","VEC_RAD","VEC_LEN","connectMng","inherits","connect","_connector$disable","_searchElement3","connector","disable","logicItem","method","logicMng","defs","def","searchDependLogic","depend","_convertParamsToBoole","addValueMap","FRAME","itrfldValueMap","loopCnt","extendParams","loopCntVal","LOOP_COUNT","convertParamsToBoolean","INVOKE","_loop","_searchElement4","iterateValueMap","LOOP_ITERATE","iterateArrayMap","_arr$array$i","sendValueMapList","filter","isArray","_convertParamsToValue","sendArrayMapList","_convertParamsToArray","convertParamsToArray","DECAY_LIMIT","DECAY_RATE","GRAVITY_VAL","GRAVITY_LIMIT","RADIUS","colorR","COLOR_R","colorG","COLOR_G","colorB","COLOR_B","colorA","COLOR_A","disappearStart","DISAPPEAR_START","shrinkStart","SHRINK_START","FLASH_APPEAR_FRAME","FLASH_HIDE_FRAME","warpList","_warpList$find","formula","valueMap","m","formulaStr","varCnt","formulaItems","convertFormulaToBoolean","arrayMapList","RADIAN_ROUND","ModifyOperations","EditorArgumentMng","FactoryTreeContext","setFocusNode","newNode","LogicElementUtil","addChild","_props$isInputOK","removeSelf","isComplete","checkableFields","mappingForm","isInputOK","firstRegist","modifyRegist","SendTemplateDialog","EditorArgumentItem","_node$parent","_useContext2","logicNode","setName","argType","setArgType","reservedList","_node$parent2","_node$parent2$parent","getParamNameList","valueType","syncArgumentAdd","prevName","syncArgumentName","LogicUtil","checkFieldName","ArgTypes","refers","getArgumentRefers","syncArgumentDel","getSwapButtons","argName","searchVariableReferInFormula","varItem","newName","syncFormula","mng","visualMng","behaviorMng","inhMng","inh","_LogicElementUtil$get","_LogicElementUtil$get2","inhfld","getInnerWrap","syncParamName","_logicNode$parent","runRec","logic","conn","inhLogic","getInnerWrapFixed","sendMng","seedMng","interfaceWrap","_logicNode$parent2","connWrap","syncArgumentCallback","_logicNode$parent3","inhMngNode","getInnerNodeFixed","seedNode","interfaceNode","sendNode","entry","newArgName","paramWrap","createParamWrap","delArgName","delIndex","some","splice","EditorSeedMng","itemWrap","EditorLogicMng","EditorLogicItem","_useMemo","el","_useMemo2","isConnect","hasArgNode","hasFieldNode","hasConnectNode","existNameList","getExistNameList","toggleElement","hasNode","listPos","wrapElement","removeChild","insertChild","getDefaultLogicMngs","syncLogicName","argumentNode","getInnerNode","hasArgument","args","fieldNode","hasField","inheritNode","hasInherit","getReplicateButton","getLocgicRefers","logicName","searchLogicReferInherit","logicMngNode","Level","EditorParamItem","setFormulaItems","varFormList","setVarFormList","isField","isCondition","inputType","level","FIELD","INITIAL","INHERIT_FIELD","INHERIT_EXTEND","INHERIT_SEND","SEED","argumentList","arrayArgList","fieldKeys","parentType","_getLogicNode","_node$parent3","_node$parent4","_node$parent4$parent","_node$parent4$parent$","getLogicNode","argMng","arg","fieldName","_node$parent5","Error","_node$parent6","inhfldNode","_node$parent7","fieldKeyList","paramNameList","_node$parent8","_node$parent8$parent","addNum","delNum","parenthesisBalance","formJsxList","ParamInputTypes","_param$isArray","getValueForm","isLastVar","isFormulaOK","hasFormError","varForm","getFormulaItem","_param$isArray2","syncFieldName","_Formula","isInvalid","_Var","_Sig","getFormulaJsx","getFieldRefers","mngNode","_mngNode$parent","_mngNode$parent2","_LogicElementUtil$get3","_LogicElementUtil$get4","inheritWrap","span","EditorBehiviorMng","isVector","hasDecayParam","hasGravityParam","exchangeVectorMethod","flag","trueParamElements","falseParamElements","size","exchangeElements","toggleElements","paramElements","EditorVisualMng","drawMethod","THICKNESS","hasDisappearParam","hasShrinkParam","hasFlashParam","EditorInheritConnMng","EditorInheritConnector","_disable","identify","setIdentify","setMethod","setDepend","defaultName","getNumberingOnPrefixName","logicList","idList","initConnectorNode","syncTreeElementFromWrap","_newNode$parent","initSendParams","sendParamList","_sendNode$parent","dependItem","argWrap","getSendParamList","curParamList","isChange","ConnectTypes","dependLogic","inherit","newWrap","getChildrenElementNode","rootNode","clone","_SendTemplateDialog","COMPONENT_WIDTH","ConnectParentPosition","xName","setXName","yName","setYName","_props$node$parent","argNode","behaviorNode","setParamValue","prpName","targetParam","SetParentPosition","paramList","xParam","yParam","DrawableVectorChooser","_DrawableVectorChooser","EditorSendManager","isDepend","EditorFieldMng","EditorExtendMng","hasLoopParam","hasInvokeParam","EditorSeedItem","disp","setDisp","setEntry","permit","setPermit","_param$disp","logicNameList","seed","items","samples","PermitTypes","EditorThumbnailMng","LogicTreeContext","WND_SIZE","EditorThumbnailItem","_node$parent$parent","seedWrap","setFrame","urls","setUrls","setTimeout","sample","getThumbnailURL","targetFrame","sampleNo","frameCnt","_node$parent3$parent","argMap","sendParams","send","_PreviewUtil$convertP","getSeedValueMap","_LogicElementUtil$get5","_PreviewUtil$convertP2","getSeedArrayMap","par","_ret","pictureJsxList","_LogicElementUtil$get6","imgJsx","_IMG","_SampleDiv","_SampleName","_CanvasDiv","FRAME_WIDTH","ComponentNormal","isDraw","setDraw","pointJsxList","xList","yList","_Point","putAction","clientRect","getBoundingClientRect","posX","posY","addPoint","moveAction","subX","subY","releaseAction","onMouseDown","clientX","clientY","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","pageX","pageY","onTouchMove","onTouchEnd","onTouchCancel","_Center","clear","ComponentColorable","colorHistory","setColorHistory","setR","setG","setB","rList","gList","bList","colorCode","_PointColorable","colorHistoryJsxList","_ColorItem","shift","addColorHistory","_Color","LogicFormUtil","buildPreviewForms","formgrpList","formList","setFormList","usedGrps","form","argument","formgrp","grp","targetForms","j","_Type","_Range","formIndex","xValue","yValue","join","rValue","gValue","bValue","labelName","_Tsumami","EditorSampleItem","paramForms","setParamForms","argInfoList","formgrpMng","defines","seedargList","defval","EditorSampleMng","EditorInterfaceManager","argMngNode","sendMngNode","sampleMngNode","hasGroupNode","execute","removeChildAll","newArgWrap","groupMngNode","hasGroup","EditorSeedArgMng","EditorSeedArgItem","setMin","setMax","setStep","setDefval","isPosX","setPosX","setArray","_param$isPosX","curIndex","getCurrentIndex","getSwapButtonsCallback","isUpper","sampleMng","swapNode","sendMngWrap","_arg$defval","EditorSeedSendMng","EditorFormgrpItem","groupMethod","setGroupMethod","targetList","setTargetList","seedargs","Array","FromGrpMedhods","formName","EditorFormgrpMng","_LogicUtil","COLOR_METHOD","COLOR_MNG","COLOR_LIST","COLOR_ITEM","COLOR_FIELD","getNodeDisplayJsx","isFocus","_Category","detailJsx","_Span","_Field","_EditableValue","_data2$disable","_Signature","_Detail","nameJsx","_ValueType","getTypeName","getDetailComponent","FactDetSeedMng","FactDetArgumentMng","FactDetBehiviorMng","wrapNode","get","listName","elementNode","getChildrenDataNode","_LogicElementUtil","_len","arguments","typeList","_key","_len2","_key2","innerNode","apply","_len3","_key3","getListParamName","_len4","_key4","innerWrap","isHead","isTail","ownerChildren","parentWrap","findIndex","swapOrder","ownDataChildren","curNo","swapData","_len5","dependencyMngNodes","_key5","depNode","replicateSameLevel","cloneBase","cloneDest","namable","getNamableProps","targetElement","getIdentifyParamName","childWrap","createParamWrapList","paramDataList","createVisualParams","createBehaviorParams","findSeedWrap","getInitialData","nameList","curWrap","nameParam","mngWrap","listParam","getLogicNameList","curLogicOwner","prefix","_getLogicItem","mngType","_node$parent5$parent","_node$parent5$parent$","_node$parent5$parent$2","getLogicItem","seedId","doParticleJob","fuse","_logicMng$defs$find","getOrigin","seedargMng","seedarg","getSendingValueMap","getSendingArrayMap","getSeedProperties","seedsendList","thumbnailList","_logicMng$defs$find2","SPUtil","_SPUtil","PreviewLogicInputForm","logicWrap","setSendingValueMap","setSendingArrayMap","PreviewSeedInputForm","template","setTemplate","formgrpWrap","presetList","arrayMap","selectedIndex","PreviewLauncherFrameSp","setCur","isPlay","setPlay","sceens","previewTabJsx","_ProgressDiv","clickX","left","pageXOffset","_ProgressVal","AiFillStepBackward","AiFillStepForward","IoStopOutline","VscDebugStart","RxReset","onKeyDown","_CloseButton","closeAction","BuildUtil","_BuildUtil","run","_props$guaranteeFrame","minFrame","guaranteeFrame","doIterate","particle","limitFrame","limitParticle","doEnd","runPaging","beginFrame","advanceFrame","_props$guaranteeFrame2","BuildFrame","dispatcher","storyPreviewProps","setStoryPreviewProps","useFrame","curFrame","buildCache","setBuildCache","logicData","fuseList","updateStore","isStandby","_ProgressBox","_RateVal","getJsx","PreviewLogicFrame","setSceens","setFrameCnt","isBuild","setBuild","sendingValueMap","sendingArrayMap","isSeed","master","buildTabJsx","_Msg","_FormDiv","closeButtonAction","NameDefDialog","createContext","LogicMainteTab","setInvalidate","masterNode","openPreviewDialog","n","_TreeDiv","_TreeHead","_TreeBody","_PropsDiv","_DetailDiv","_DetailHeader","_DetailHeaderLabel","Provider","setRootData","_DetailMainDiv","_store$cloud","targetSeq","p","existNames","findProjectMaxSeq","_store$system$user","newProject","insertProject","targetItem","updateProjectName","registUpdate","CloudUtil","abrupt","_ref2","_callee2","req","_context2","_x","_x2","_ref3","_callee3","_context3","_x3","_x4","ManageTab","fcsListIdx","setFcsListIdx","listItemJsx","project","_ListItem","getHashedFromProjectSeq","_Name","hasData","incrRec","root","developCnt","privateCnt","releaseCnt","fuseCnt","elementSize","logicCnt","uploadCloud","gZip","overwriteCloudFile","curPrj","updateProjectSource","saveLocalFile","saveLibraryFile","cloudJsx","_ContDiv","unZip","deleteProject","_ListDiv","localJsx","loadFile","_HeaderDiv","_BodyDiv","_LeftDiv","_RighttDiv","assert","getNewSaveButton","getOverwriteButton","getSHA256Hash","CreateChannel","projectType","getProjectType","PublishFrame","libList","setLibList","findAllReleaseProjectList","resList","ownerId","seedList","argCount","setLibCnt","libListJsx","lib","dispCnt","count","_Owner","_CName","plainData","showSaveFilePicker","types","accept","handle","writable","createWritable","write","close","_CDate","_DetailMain","_SeedItemFrame","_SeedItemInner","_SeedName","_SeedArgCnt","_DetailOpen","_CSummary","_ListFrame","ReleaseNote","setJsx","releaseNote","record","note","version","date","HomeChannel","userCount","setUserCount","artsCnt","setArtsCnt","countUsers","_Left","_MessageRecord","_Right","MainFrame","AiFillHome","VscGitPullRequestCreate","Splash","isSwitch","setSwitch","timerId","setTimerId","remove","clearTimeout","_Title","_VERSION","_NowLoading","_Copylight","fadeIn","keyframes","PCRoot","splashJsx","_MainDiv","DirectLinkManager","setStoryData","findScenarioData","library","scenario","scenarioData","getBlindJsx","VscSettingsGear","sql","SPLibraryChannel","_CloudUtil","uploadShareScenario","cloudSeq","sourcePlain","sourceZip","libhash","libSourcePlain","libSourceZip","getNextSeq","insertSnrshRecord","isExistsSameHash","insertLibhsRecord","deleteShareScenario","deleteSnrshRecord","records","_ref4","_callee4","_context4","_x5","_x6","_ref5","_callee5","_context5","_x7","_ref6","_callee6","_context6","c","_x8","_ref7","_callee7","_context7","_x9","_x10","_x11","_x12","ShareDialog","getURL","getURLAddQueryParam","_UrlDiv","isShared","InstapaperShareButton","_SnsIconFrame","AiOutlineInstagram","TwitterShareButton","AiOutlineTwitter","MailruShareButton","AiOutlineMail","FacebookShareButton","AiOutlineFacebook","LineShareButton","BsLine","fileKey","LibraryLoader","_LibraryLoader","getOfficialList","libraries","outline","getExtendList","NewScenarioDialog","focusLibIndex","setFocusLibIndex","isExtend","setExtend","officialPackList","extendPackList","libPackJsxList","pack","_LibItem","_CheckDiv","AiOutlineCheck","_LibInfo","_LibName","_LibVersion","_LibOutline","MdCancelPresentation","AiOutlineEnter","getStringFromDate","extendAction","NameDefDialogLocal","focusIndex","checkName","getDefaultName","curProject","PreviewLauncherFrame","SPManageFrame","setUpdate","projectItemJsxList","onContextMenu","_Share","isShare","BsFillShareFill","thumbJsxList","thumbJsx","cache","thumbList","thumb","_Img","thumn","isEdit","MdClear","IoCreateOutline","setEdit","FiDownload","story","updateCache","ImCopy","MdOutlineDriveFileRenameOutline","RiDeleteBinLine","FuseMainteDialog","newFrame","setNewFrame","setSeed","preset","setPreset","focus","curFuse","mapping","propertiesFormJsx","activeSeed","formgrps","presets","cancelAction","reduce","fuseSeq","initFormList","_seed$disp","COL_WIDTH_LIST","OPTION_BUTTON_WIDTH","FuseList","recordJsxList","_curSeed$disp","curSeed","_RecordWrap","_RecordCont","setFocus","_ColWrap","_TextItem","_ImageItem","FiEdit","modifyAction","cloneFuse","focusSeq","cloneCache","GrView","openPreviewSoloDialog","_HeaderItem","_BodyScrollDiv","FrameLine","startY","setStartY","startX","setStartX","frameRateJsxList","clientWidth","clientHeight","posXIndex","range","top","_FrameRate","isCurr","prevFocusSeq","sort","nowFocusSeq","_FrameLineDiv","SPEditStoryFrame","isPreview","setPreview","presetIndex","setPresetIndex","seedWrapList","groupMng","dispName","VscPreview","IoSaveOutline","editingDataVal","editingData","_SeedDiv","AiOutlineAppstoreAdd","newFuseProps","newSeq","isDisp","_FuseListFrame","SPCreateChannel","_SwitchWrap","SPPropertyChannel","setInterval","setDispPreset","reload","MdOutlineCleaningServices","seqMax","SPInforChannel","SPRoot","isPermit","adjLeft","adjTop","screen","setScreen","_SplashDiv","rect","cw","isFitSide","userAgent","isSmartPhone","orientation","alert","_Error","mainJsx","hashKey","projectSeq","getDecryptionedProjectSeq","BiInfoSquare","TbLogicAnd","VscSymbolProperty","_ChannelWrap","match","Dispatcher","openPreviewAllDialog","seedProps","RouterManage","HashRouter","basename","process","URLSearchParams","useLocation","search","Route","path","exact","_DataUtil","DB_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","encode","Base64","hashedSeq","hashids","decryptioned","decode","fetch","mode","headers","Accept","body","createSendMailRequestInit","queryType","databaseName","createQueryRequestInit","saveFile","findUserInfoFromSeq","findUserScoreList","_ref8","_callee8","_context8","_ref9","_callee9","_context9","_callee10","_yield$window$showOpe","_yield$window$showOpe2","file","fileContents","scenarioProps","_context10","showOpenFilePicker","getFile","hasOwnProperty","saveFileBak","_callee11","_context11","_callee12","_context12","saveScenarioFile","extension","options","_callee13","_context13","_callee14","_context14","original","sha256","val","content","encodeURIComponent","zlib","gzipSync","buffer","Buffer","unzipSync","decodeURIComponent","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str"],"mappings":"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","file":"static/js/main.adfa7add.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 38;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 18px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_LABEL_LARGE = css`\r\n    ${CSS_LABEL}\r\n    height: 50px;\r\n    font-size: ${FONT_LARGE}px;\r\n    line-height: 44px;\r\n`;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 22px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport { useContext } from \"react\";\r\n\r\nnamespace ConfirmDialog {\r\n\r\n    export const Component = (props: {\r\n        message: string;\r\n        width?: number;\r\n        height?: number;\r\n        buttons?: FormUtil.ButtonProps[];\r\n    }) => {\r\n\r\n        const {store,  setStore } = useContext(GlobalContext);\r\n\r\n        const width = props.width ?? 600;\r\n        const height = props.height ?? 150;\r\n        const buttons = props.buttons ?? [\r\n            {\r\n                label: 'OK',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({...store});\r\n                }\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main><_Inner>\r\n                    {props.message.split('\\n').map((msg, i) => {\r\n                        return <FormUtil.Message\r\n                            key={i}\r\n                            message={msg}\r\n                            isCenter\r\n                        />\r\n                    })}\r\n                </_Inner></_Main>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons} />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 110px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* background-color: #bb6868e1; */\r\n`;","import React, { useEffect } from 'react';\r\nimport SystemEntry from './system/contents/entry/systemEntry';\r\n\r\nconst App = () => {\r\n\r\n  useEffect(() => {\r\n    // 右クリック無効\r\n    document.oncontextmenu = function () { return false; }\r\n\r\n    // window.addEventListener(\"keydown\", function (e) {\r\n    //   // space and arrow keys\r\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n    //     e.preventDefault();\r\n    //   }\r\n    // }, false);\r\n\r\n    document.onkeydown = (e) => {\r\n      // if (!['F5'].includes(e.key)) {\r\n      //   return false;\r\n      // }\r\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n  }, []);\r\n  return (\r\n    <SystemEntry />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport DataUtil from './system/utils/dataUtil';\r\nimport SystemConst from './system/utils/systemConst';\r\n\r\nwindow.addEventListener('load', function () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.register(`/pf_apps/${SystemConst.APP_VERSION}/serviceWorker.js`)\r\n      .then(function (registration) {\r\n        console.log(\"serviceWorker registed.\");\r\n      }).catch(function (error) {\r\n        console.warn(\"serviceWorker error.\", error);\r\n      });\r\n  }\r\n});\r\n\r\n/* ピッチインピッチアウトによる拡大縮小を禁止 */\r\ndocument.documentElement.addEventListener('touchstart', function (e) {\r\n  if (e.touches.length >= 2) { e.preventDefault(); }\r\n}, { passive: false });\r\n/* ダブルタップによる拡大を禁止 */\r\nvar t = 0;\r\ndocument.documentElement.addEventListener('touchend', function (e) {\r\n  var now = new Date().getTime();\r\n  if ((now - t) < 350) {\r\n    e.preventDefault();\r\n  }\r\n  t = now;\r\n}, false);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","\r\nnamespace SystemConst {\r\n    export const AUTH_TEXT_WIDTH = 350;\r\n    export const AUTH_TEXT_HEIGHT = 70;\r\n\r\n    // export const IS_SP = false;\r\n    export const IS_SP = true;\r\n    export const APP_VERSION = 'v1.10.1';\r\n    export const APP_TEST_SERVER_DOMAIN = 'http://localhost:4333/pf_apps/' + APP_VERSION;\r\n    export const APP_PRODUCT_SERVER_DOMAIN = 'https://cyber-kohno.github.io/pf_apps/' + APP_VERSION;\r\n    // export const APP_PRODUCT_SERVER_DOMAIN = 'https://create-app.pixelflare.tech/';\r\n    // export const APP_SERVER_DOMAIN = 'https://develop-app.pixelflare.tech/';\r\n    export const APP_SERVER_DOMAIN = APP_PRODUCT_SERVER_DOMAIN;\r\n\r\n    export const EDGE_PREFIX = 'microsoft-edge:';\r\n}\r\n\r\nexport default SystemConst;\r\n\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n\r\n// ホームチャンネル\r\nexport const HOME_USER_DIV_HEIGHT = 400;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport ValidateUtil from \"./validateUtil\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nnamespace FormUtil {\r\n\r\n    export type CheckableValue = {\r\n        value: string;\r\n        errors: ValidateUtil.ErrorType[];\r\n    }\r\n\r\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\r\n        let result = true;\r\n        checkables.forEach(checkable => {\r\n            if (checkable.errors.length > 0) {\r\n                result = false;\r\n                return 1;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    export const InputTextFormBak = (props: {\r\n        titleLabel?: string;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        isCenter?: boolean;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        marginTop?: number;\r\n        isReadOnly?: boolean;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const type = props.isPassword ?? false ? 'password' : 'text';\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency);\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\r\n                <_ItemnInputBak\r\n                    type={type}\r\n                    value={props.checkable.value}\r\n                    hasTitle={props.titleLabel != undefined}\r\n                    width={props.width}\r\n                    isCenter={props.isCenter ?? false}\r\n                    placeholder={props.placeholder}\r\n                    onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        props.checkable.value = value;\r\n                        props.checkable.errors = getErrors(value);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }}\r\n                    errorType={errors.length === 0 ? undefined : errors[0]}\r\n                    readOnly={props.isReadOnly}\r\n                />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n\r\n    export const Record = (props: {\r\n        isEnable?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    const DEFAULT_LABEL_WIDTH = 140;\r\n    export const FormRecord = (props: {\r\n        titleLabel?: string;\r\n        labelWidth?: number;\r\n        isEnabled?: boolean;\r\n        isVisible?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        const lablelWidth = props.labelWidth ?? DEFAULT_LABEL_WIDTH;\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnabled ?? true}\r\n                isVisible={props.isVisible ?? true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={lablelWidth}>{props.titleLabel}</_ItemnLabel>}\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FixedText = (props: {\r\n        value: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        marginLeft?: number;\r\n        isRecordItem?: boolean;\r\n    }) => {\r\n        let width: string | undefined = undefined;\r\n        if (props.isRecordItem) width = `calc(100% - ${DEFAULT_LABEL_WIDTH + 16}px)`;\r\n        if (props.width != undefined) width = props.width + 'px';\r\n        return (\r\n            <_FixedLabel width={width}>{props.value}</_FixedLabel>\r\n        );\r\n    }\r\n\r\n    export const TextField = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        isNumber?: boolean;\r\n        marginLeft?: number;\r\n        step?: number;\r\n    }) => {\r\n        const [isNaN, setNaN] = useState(false);\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        let type = props.isPassword ?? false ? 'password' : 'text';\r\n        if (props.isNumber ?? false) {\r\n            type = 'number';\r\n        }\r\n\r\n        const isEnabled = props.isEnabled ?? true;\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            if (!isEnabled) props.checkable.errors.length = 0;\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n        const step = props.step ?? 1;\r\n\r\n        return (\r\n            <_ItemnInput\r\n                type={type}\r\n                value={value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                step={step}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                    if (type === 'number') {\r\n                        setNaN(Number.isNaN(e.target.valueAsNumber));\r\n                    }\r\n                }}\r\n                onBlur={() => {\r\n                    if (type === 'number') {\r\n                        if (isNaN) props.checkable.value = ' ';\r\n                        else props.checkable.value = Number(value).toString();\r\n                        // console.log(`[${props.checkable.value}]`);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }\r\n                }}\r\n                errorType={!isEnabled || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            // isEnable={isEnable}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\r\n\r\n    export const Combobox = (props: {\r\n        list: ComboboxItemProps[];\r\n        headBlank?: boolean;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n        const headBlank = props.headBlank ?? false;\r\n        const list = props.list.slice();\r\n        if (headBlank) list.unshift({ value: '', labelText: '' });\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n\r\n        const isEnabled = props.isEnabled ?? true;\r\n        useEffect(() => {\r\n            // console.log('value: ' + props.checkable.value);\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            if (!isEnabled) props.checkable.errors.length = 0;\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        return (\r\n            <_ItemCombobox\r\n                value={props.checkable.value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    props.checkable.value = value;\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n\r\n                }}\r\n                errorType={!isEnabled || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            >{list.map((item, i) => {\r\n                return (\r\n                    <_Option key={i}\r\n                        value={item.value}\r\n                        disabled={item.isDisabled ?? false}\r\n                        isDisabled={item.isDisabled ?? false}\r\n                    >{item.labelText}</_Option>\r\n                );\r\n            })}</_ItemCombobox>\r\n        );\r\n    }\r\n\r\n    export const TextArea = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n    }) => {\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n\r\n        const isEnable = props.isEnabled ?? true;\r\n        return (\r\n            <_ItemnTextArea\r\n                value={value}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                }}\r\n                // errorType={!isEnable || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        label: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        icon?: JSX.Element;\r\n        interval?: number;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ButtonRecord = (props: {\r\n        buttons: ButtonProps[],\r\n        align?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        isIconButton?: boolean;\r\n        interval?: number;\r\n    }) => {\r\n        const align = props.align ?? 'right';\r\n        const interval = props.interval ?? 4;\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={align}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n                height={!props.isIconButton ? 40 : 68}\r\n            >\r\n                {props.buttons.map((button, i) => {\r\n                    if (button.icon == undefined) {\r\n                        return (\r\n                            <_Button\r\n                                key={i}\r\n                                isCenter={align === 'center'}\r\n                                isEnable={button.isEnable ?? true}\r\n                                width={button.width}\r\n                                interval={interval}\r\n                                onClick={button.callback}\r\n                            >{button.label}</_Button>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <_IconButton\r\n                                key={i}\r\n                                isCenter={align === 'center'}\r\n                                isEnable={button.isEnable ?? true}\r\n                                width={button.width}\r\n                                interval={interval}\r\n                                onClick={button.callback}\r\n                            >{button.icon}<br />{button.label}</_IconButton>\r\n                        );\r\n                    }\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const ButtonItem = (props: {\r\n        button: ButtonProps\r\n    }) => {\r\n        const button = props.button;\r\n        const interval = button.interval ?? 4;\r\n        if (button.icon == undefined) {\r\n            return (\r\n                <_Button\r\n                    isCenter={false}\r\n                    isEnable={button.isEnable ?? true}\r\n                    width={button.width}\r\n                    interval={interval}\r\n                    onClick={button.callback}\r\n                >{button.label}</_Button>\r\n            );\r\n        } else {\r\n            return (\r\n                <_IconButton\r\n                    isCenter={false}\r\n                    isEnable={button.isEnable ?? true}\r\n                    width={button.width}\r\n                    interval={interval}\r\n                    onClick={button.callback}\r\n                >{button.icon}<br />{button.label}</_IconButton>\r\n            );\r\n        }\r\n        // return (\r\n        //     <_Button\r\n        //         isCenter={false}\r\n        //         isEnable={props.button.isEnable ?? true}\r\n        //         width={props.button.width}\r\n        //         onClick={props.button.callback}\r\n        //     >{props.button.label}</_Button>\r\n        // );\r\n    }\r\n\r\n    export const Message = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const MessageLink = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        clickAction: () => void;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isLink={true}\r\n                    onClick={props.clickAction}\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        isVisible?: boolean;\r\n        height?: number;\r\n        backgroundColor?: string;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        // const title = props.title ?? 'title pl';\r\n        const isVisible = props.isVisible ?? true;\r\n        const isEnable = props.isEnable ?? true;\r\n        const backgroundColor = props.backgroundColor ?? '#cedadd';\r\n        return (<>\r\n            {!isVisible ? <></> : <_BorderText>{props.title}</_BorderText>}\r\n            <_BorderPanel\r\n                isEnable={isEnable}\r\n                isVisible={isVisible}\r\n                height={props.height}\r\n                backgroundColor={backgroundColor}\r\n            >{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export const InfoFrame = (props: {\r\n        height?: number;\r\n        textRecords: string[];\r\n    }) => {\r\n        const height = props.height ?? 70;\r\n        const color = '#1a9900';\r\n        return (<>\r\n            <_InfoDiv height={height} color={color}>\r\n                {props.textRecords.map((text, i) => {\r\n                    return <span key={i}>{text}<br /></span>;\r\n                })}\r\n            </_InfoDiv>\r\n        </>);\r\n    };\r\n\r\n    export const Switch = (props: {\r\n        label: string;\r\n        isUse: boolean;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        isRelation?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isRelation = props.isRelation ?? false;\r\n        const callback = isRelation && props.isUse ? () => { } : props.callback;\r\n        return (\r\n            <_Switch\r\n                isRelation={isRelation}\r\n                isUse={props.isUse}\r\n                isEnable={props.isEnable ?? true}\r\n                width={props.width}\r\n                onClick={callback}\r\n            >{props.label}</_Switch>\r\n        );\r\n    }\r\n\r\n    export const SwitchTwoFace = (props: {\r\n        label1: string;\r\n        label2: string;\r\n        width: number;\r\n        rate1: number;\r\n        rate2: number;\r\n        isUse: boolean;\r\n        isEditable?: boolean;\r\n        isEnable?: boolean;\r\n        isLarge?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isEnable = props.isEnable ?? true;\r\n        const isEditable = props.isEditable ?? true;\r\n        return (<_SwitchTwoFace\r\n            isEnable={isEnable}\r\n            isEditable={isEditable}\r\n            width={props.width}\r\n            isLarge={props.isLarge ?? false}\r\n            onClick={props.callback}\r\n        >\r\n            <_SwitchItem\r\n                isUse={isEnable && !props.isUse}\r\n                rate={props.rate1}\r\n                isLeft={true}\r\n                isEditable={isEditable}\r\n                isLarge={props.isLarge ?? false}\r\n            >{props.label1}</_SwitchItem>\r\n            <_SwitchItem\r\n                isUse={isEnable && props.isUse}\r\n                rate={props.rate2}\r\n                isLeft={false}\r\n                isEditable={isEditable}\r\n                isLarge={props.isLarge ?? false}\r\n            >{props.label2}</_SwitchItem>\r\n        </_SwitchTwoFace>);\r\n    }\r\n\r\n    export const checkItems = (list: CheckableValue[]) => {\r\n        return list.find(item => item.errors.length > 0) == undefined;\r\n    }\r\n}\r\n\r\nexport default FormUtil;\r\n\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n    textAlign: 'left' | 'center' | 'right';\r\n    marginTop: number;\r\n    marginBottom: number;\r\n    height?: number;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    width: 100%;\r\n    height: ${props => props.height ?? '40'}px;\r\n    margin-top: ${props => props.marginTop}px;\r\n    margin-bottom: ${props => props.marginBottom}px;\r\n    /* background-color: #b3b4c4; */\r\n    /* border: 1px solid #000; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    text-align: ${props => props.textAlign};\r\n`;\r\n\r\nconst _ItemnLabel = styled.div<{\r\n    labelWidth?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.labelWidth}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #b4c0c7fa, #d8d8d8, #b4c0c7fa);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n`;\r\n\r\nconst _FixedLabel = styled.div<{\r\n    width?: string;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #0c0e86;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c51a;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n    overflow-x: hidden;\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width};\r\n    `}\r\n`;\r\n\r\nconst _ItemnInputBak = styled.input<{\r\n    readOnly?: boolean;\r\n    isCenter: boolean;\r\n    hasTitle: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${props => !props.hasTitle ? css`\r\n    ` : css`\r\n        width: calc(100% - 152px);\r\n    `}\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    margin-top: 2px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    /* ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    } */\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n    // isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemCombobox = styled.select<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n        pointer-events: none;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _Option = styled.option<{\r\n    isDisabled: boolean;\r\n}>`\r\n    ${props => !props.isDisabled ? '' : css`\r\n        color: #0000004b;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n    isLink?: boolean;\r\n    isCenter: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #002c52;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => !props.isLink ? '' : css`\r\n        color: #0459a3;\r\n        user-select: none;\r\n        text-decoration: underline;\r\n        &:hover {\r\n            color: #68a4d8;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n    interval: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #c0ced6, #ebebeb, #c0ced6);\r\n    border: 1px solid #829bad;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 ${props => props.interval}px;\r\n    ${props => !props.isCenter ? css<{ interval: number }>`\r\n        margin-left: ${props => props.interval}px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        /* background: linear-gradient(to bottom, #989898, #b4b4b4, #989898); */\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst _IconButton = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n    interval: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    height: 58px;\r\n    padding: 4px 0 0 0;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #c0ced6, #ebebeb, #c0ced6);\r\n    border: 1px solid #829bad;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 ${props => props.interval}px;\r\n    ${props => !props.isCenter ? css<{ interval: number }>`\r\n        margin-left: ${props => props.interval}px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        /* background: linear-gradient(to bottom, #989898, #b4b4b4, #989898); */\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isUse: boolean;\r\n    isEnable: boolean;\r\n    width?: number;\r\n    isRelation: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    color: #515151;\r\n    border: 1px solid #747474;\r\n    ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\r\n    ` : css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#ddc1d979' : '#d898b3'};\r\n        color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n    `}\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\r\n        ` : css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#d3a1cb79' : '#d898b3'};\r\n            color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _SwitchTwoFace = styled.div<{\r\n    isEnable: boolean;\r\n    isEditable: boolean;\r\n    width: number;\r\n    isLarge: boolean;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    ${props => !props.isLarge ? css`\r\n        ${Styles.CSS_LABEL_MIDIUM}\r\n    ` : css`\r\n        ${Styles.CSS_LABEL_LARGE}\r\n    `}\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEditable ? '' : css`    \r\n        pointer-events: none;\r\n    `}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* opacity: 0.7; */\r\n    }\r\n`;\r\n\r\nconst _SwitchItem = styled.div<{\r\n    isUse: boolean;\r\n    rate: number;\r\n    isLeft: boolean;\r\n    isEditable: boolean;\r\n    isLarge: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* line-height: 25px; */\r\n    border-top: 1px solid #747474;\r\n    border-bottom: 1px solid #747474;\r\n    text-align: ${props => props.isLeft ? css`\r\n        border-left: 1px solid #747474;\r\n    ` : css`\r\n        border-right: 1px solid #747474;\r\n    `};\r\n    text-align: ${props => props.isLeft ? 'right' : 'left'};\r\n    box-sizing: border-box;\r\n    background-color: #8fa2aa;\r\n    color: #515151;\r\n    ${props => !props.isLarge ? css<{isLeft: boolean}>`\r\n        padding: 0 10px;\r\n        font-size: 16px;\r\n        border-radius: ${props => props.isLeft ? '8px 0 0 8px' : '0 8px 8px 0'};\r\n    ` : css<{isLeft: boolean}>`\r\n        font-size: 22px;\r\n        padding: 10px 10px;\r\n        border-radius: ${props => props.isLeft ? '22px 0 0 22px' : '0 22px 22px 0'};\r\n    `}\r\n    ${props => props.isEditable ? css`\r\n        ${!props.isUse ? '' : css<{isLarge: boolean}>`\r\n            color: #b30000;\r\n            ${props => !props.isLarge ? css`\r\n                font-size: 22px;\r\n            ` : css`\r\n                font-size: 28px;\r\n            `}\r\n            background-color: #dae7ec;\r\n            ${props => !props.isLarge ? css`\r\n                font-size: 22px;\r\n            ` : css`\r\n                font-size: 28px;\r\n            `}\r\n        `}\r\n    ` : css`\r\n        ${!props.isUse ? '' : css<{isLarge: boolean}>`\r\n            color: #110070;\r\n            ${props => !props.isLarge ? css`\r\n                font-size: 22px;\r\n            ` : css`\r\n                font-size: 28px;\r\n            `}\r\n            background-color: #dae7ec;\r\n        `};\r\n    `}\r\n    vertical-align: top;\r\n    transition: background-color 0.3s;\r\n`;\r\n\r\nconst _BorderText = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: #990000;\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n    height?: number;\r\n    backgroundColor: string;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    ${props => props.height == undefined ? '' : css`\r\n        height: ${props.height}px;\r\n    `}\r\n    background-color: ${props => props.backgroundColor};\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    overflow-y: auto;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    margin: 4px 0 0 0;\r\n    display: inline-block;\r\n    background-color: #e7e5e561;\r\n    border: solid 1px #949494;\r\n    width: 100%;\r\n    height: ${props => props.height}px;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: ${props => props.color};\r\n    overflow-y: auto;\r\n`;\r\n\r\n\r\nconst _ItemnTextArea = styled.textarea<{\r\n\r\n}>`\r\n   display: inline-block;\r\n   width: 100%;\r\n   height: 100%;\r\n   background-color: #ebf5f5;\r\n   font-size: 18px;\r\n   color: black;\r\n   border: none;\r\n   resize: none;\r\n   box-sizing: border-box;\r\n`;","import SystemConst from \"./systemConst\";\r\n\r\nnamespace CanvasUtil {\r\n\r\n    /**\r\n     * Canvasに任意の描画をし、画像のURLを取得する\r\n     * @param width 幅\r\n     * @param height 高さ\r\n     * @param draw 描画\r\n     * @returns 画像のURL\r\n     */\r\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        draw(ctx);\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    export const getLogoURL = () => {\r\n        return CanvasUtil.createURL(360, 80, (ctx) => {\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.fillRect(0, 0, 350, 80);\r\n\r\n            ctx.shadowColor = \"#555\";\r\n            ctx.shadowOffsetX = 2;\r\n            ctx.shadowOffsetY = 1;\r\n            ctx.shadowBlur = 5;\r\n            ctx.font = 'italic 50pt Arial';\r\n            ctx.fillStyle = '#c6dce2';\r\n            ctx.fillText('Pixel ', 14, 64);\r\n            const adjust = ctx.measureText('Pixel ').width;\r\n            ctx.fillStyle = '#768fc4';\r\n            ctx.fillText('Flare', 14 + adjust, 64);\r\n            ctx.save();\r\n        });\r\n    }\r\n\r\n    export const getAuthTextURL = (text: string) => {\r\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\r\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\r\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\r\n            ctx.rotate(1 * Math.PI / 180);\r\n            for (let i = 0; i < text.length; i++) {\r\n                const char = text.charAt(i);\r\n\r\n                const fontRand = Math.random() * 60;\r\n                const alphaRand = Math.random() * 60;\r\n                ctx.font = `${20 + fontRand}pt Arial`;\r\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\r\n                ctx.fillText(char, i * SIZE, 60);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CanvasUtil;","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport StoreCloud from \"./storeCloud\";\r\nimport StoreEditing from \"./storeEditing\";\r\nimport StoreLocalStorage from \"./storeLocalStrage\";\r\nimport StoreSystem from \"./storeSystem\";\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    system: StoreSystem.Param;\r\n    env: StoreSystem.Env;\r\n    libraryData: LogicUtil.WrapElement | null;\r\n    storyData: StoryUtil.StoryData | null;\r\n    fuseCacheList: StoryUtil.Cache[];\r\n    local: StoreLocalStorage.Param;\r\n    editing: StoreEditing.Props;\r\n    cloud: StoreCloud.Props | null;\r\n    fileHandle: FileSystemFileHandle | null;\r\n}\r\n\r\nexport const ProjectTypes = ['library', 'story'] as const;\r\nexport type ProjectType = typeof ProjectTypes[number];\r\n\r\nexport const initialStore: Store = {\r\n    system: {\r\n        isSplash: true,\r\n        user: null,\r\n        dialog: null,\r\n        canDialogClose: false,\r\n        isSPMode: false,\r\n        logoutActions: [],\r\n        channelIndex: 1\r\n    },\r\n    cloud: null,\r\n    env: {\r\n        screenRate: 1,\r\n        scrollLock: false,\r\n    },\r\n    libraryData: null,\r\n    storyData: null,\r\n    fuseCacheList: [],\r\n    local: {\r\n        maxSeq: 0,\r\n        projects: [],\r\n        putInterval: 0,\r\n        isDispPreset: true\r\n    },\r\n    editing: {\r\n        localSeq: -1,\r\n        libName: ''\r\n    },\r\n    fileHandle: null,\r\n}","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const dialog = store.system.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            if (!store.system.canDialogClose) return;\r\n            store.system.dialog = null;\r\n            store.system.canDialogClose = false;\r\n            setStore({ ...store });\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\r\n\r\n    export type Validate = {\r\n        checker: (value: string) => boolean;\r\n        errorType: ErrorType;\r\n        message?: string;\r\n    }\r\n\r\n    /**\r\n     * 必須チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkRequired = (str: string) => {\r\n        return str.length > 0;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length === 0 || (str.length >= min && str.length <= max);\r\n    }\r\n\r\n    /**\r\n     * 半角英数時チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        return checkIncludesChars(str, list);\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列で構成されているかチェック\r\n     * @param str 検証する文字列\r\n     * @param list 入力を許す対象文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkIncludesChars = (str: string, list: string) => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            const ch = str.charAt(i);\r\n            if (list.indexOf(ch) === -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列が数値に変換できるかチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumber = (str: string) => {\r\n        return !isNaN(Number(str));\r\n    }\r\n\r\n    /**\r\n     * 数値の値の範囲をチェック\r\n     * @param str 検証する文字列\r\n     * @param min 下限\r\n     * @param max 上限\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumberRange = (str: string, min: number, max: number) => {\r\n        if (!isNaN(Number(str))) {\r\n            const num = Number(str);\r\n            return num >= min && num <= max;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    export const checkArrayNumber = (value: string) => value.split(',').find(v => isNaN(Number(v))) == undefined;\r\n}\r\nexport default ValidateUtil;\r\n","import LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport DataUtil from \"./dataUtil\";\r\n\r\nnamespace LocalStorageUtil {\r\n    export const DEFAULT_FILE_NAME_PREFIX = 'project_';\r\n\r\n    export const KEY_LOGIN_HASH = 'login-hash';\r\n    // export const KEY_SCENARIO_NAMES = 'scenario-names';\r\n    export const KEY_SCENARIO_SEQ = 'scenario-seq';\r\n    export const KEY_SCENARIO_PREFIX = 'scenario-data-';\r\n    export const KEY_DISP_PRESET = 'display-put-preset';\r\n    export const KEY_PROP_PUT_INTERVAL = 'prop-put-interval';\r\n\r\n    export const load = (store: Store, update: () => void) => {\r\n\r\n        // ログイン\r\n        if (store.system.user == null) {\r\n            const userHash = localStorage.getItem(KEY_LOGIN_HASH);\r\n            if (userHash != null) {\r\n                const userSeq = DataUtil.getDecryptionedUserSeq(userHash);\r\n                if (userSeq !== -1) {\r\n                    (async () => {\r\n                        const results = await DataUtil.findUserInfoSeq(userSeq);\r\n                        if (results.length > 0) {\r\n                            store.system.user = {\r\n                                seq: results[0].seq,\r\n                                id: results[0].id,\r\n                                password: results[0].password,\r\n                                email: results[0].email,\r\n                            };\r\n\r\n                            // developの場合、クラウドのライブラリを読み込む\r\n                            if (!store.system.isSPMode) {\r\n                                const resPrjList = await DataUtil.findUserLibdvList(results[0].seq);\r\n                                store.cloud = {\r\n                                    projects: resPrjList.map(res => ({\r\n                                        source: res.source,\r\n                                        name: res.name,\r\n                                        seq: res.seq,\r\n                                        lastmod: res.lastmod\r\n                                    }))\r\n                                };\r\n                            }\r\n                            // update();\r\n                        }\r\n                    })();\r\n                } else {\r\n                    localStorage.removeItem(KEY_LOGIN_HASH);\r\n                }\r\n            }\r\n        }\r\n\r\n        // シナリオファイルのロード\r\n        const scenarioSeq = localStorage.getItem(KEY_SCENARIO_SEQ);\r\n        if (scenarioSeq == null) {\r\n            localStorage.setItem(KEY_SCENARIO_SEQ, '0');\r\n        } else {\r\n            const seq = Number(scenarioSeq);\r\n            store.local.maxSeq = seq;\r\n            for (let i = 0; i <= seq; i++) {\r\n                const source = localStorage.getItem(KEY_SCENARIO_PREFIX + i.toString());\r\n                if (source != null) {\r\n                    store.local.projects.push(JSON.parse(source));\r\n                }\r\n            }\r\n        }\r\n\r\n        // シード配置のインターバル初期値\r\n        let putInterval = localStorage.getItem(KEY_PROP_PUT_INTERVAL);\r\n        if(putInterval == null) {\r\n            putInterval = '50';\r\n            localStorage.setItem(KEY_PROP_PUT_INTERVAL, putInterval);\r\n        }\r\n        console.log(putInterval);\r\n        store.local.putInterval = Number(putInterval);\r\n\r\n        // シード配置のインターバル初期値\r\n        let isDispPreset = localStorage.getItem(KEY_DISP_PRESET);\r\n        if(isDispPreset == null) {\r\n            isDispPreset = '0';\r\n            localStorage.setItem(KEY_DISP_PRESET, isDispPreset);\r\n        }\r\n        store.local.isDispPreset = isDispPreset === '0';\r\n    }\r\n}\r\n\r\nexport default LocalStorageUtil;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: (index: number)=>void;\r\n    tabRecordNum?: number;\r\n}\r\n\r\nexport type TabElements = {\r\n    name: string;\r\n    enable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabRecordNum = props.tabRecordNum ?? 1;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList tabRecordNum={tabRecordNum}>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isEnable={tab.enable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList tabRecordNum={tabRecordNum}>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={!tab.enable ? <></> : tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isEnable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: inline-block;\r\n    height: ${props => 35 * props.tabRecordNum}px;\r\n    text-align: left;\r\n    /* background-color: #ac3b3b; */\r\n    width: 100%;\r\n`;\r\nconst _ContList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\r\n    border-radius: 0 6px 6px 6px;\r\n    /* box-shadow: 0 2px 0 0 #000b3a48; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    \r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                margin-top: 5px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${props.isEnable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport StoreSystem from \"../../redux/store/storeSystem\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../utils/form/validateUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst WIDTH = 750;\r\nconst HEIGHT = 600;\r\n/**\r\n * アカウントフレームのコンポーネント\r\n * @returns \r\n */\r\nconst AccountFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [oldPass, setOldPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPass, setNewPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPassConfirm, setNewPassConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n    const [emailList, setEmailList] = useState<string[]>([]);\r\n\r\n    const [isModify, setModify] = useState(false);\r\n    const loginProps = store.system.user as StoreSystem.User;\r\n\r\n    const reloadInfo = () => {\r\n        setUserId({ ...userId, value: loginProps.id });\r\n        setNewPass({ ...newPass, value: '' });\r\n        setNewPassConfirm({ ...newPassConfirm, value: '' });\r\n        setEmail({ ...email, value: loginProps.email });\r\n        setOldPass({ ...oldPass, value: loginProps.password });\r\n    }\r\n\r\n    useEffect(() => {\r\n        DataUtil.findUserInfoList().then(list => {\r\n\r\n            const userIdList: string[] = [];\r\n            const emailList: string[] = [];\r\n            list.forEach(info => {\r\n                if (info.id !== loginProps.id) userIdList.push(info.id);\r\n                if (info.email !== '') emailList.push(info.email);\r\n            });\r\n            setUserIdList(userIdList);\r\n            setEmailList(emailList);\r\n        });\r\n\r\n        const hash = DataUtil.getHashedFromUserSeq(loginProps.seq);\r\n\r\n        // ユーザページのURLに変更する。\r\n        window.history.replaceState('', '', `/#/user?v=${hash}`);\r\n\r\n        reloadInfo();\r\n\r\n        // 閉じる際にURLを元に戻す\r\n        return () => {\r\n            // alert('destroy');\r\n            window.history.replaceState('', '', `/#/`);\r\n        }\r\n    }, []);\r\n\r\n    const userTabJsx: JSX.Element = (\r\n        <_Wrap>\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'user id'}\r\n                checkable={userId}\r\n                setCheckable={setUserId}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !userIdList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass'}\r\n                isPassword\r\n                checkable={newPass}\r\n                setCheckable={setNewPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPassConfirm.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPassConfirm]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass*'}\r\n                isPassword\r\n                checkable={newPassConfirm}\r\n                setCheckable={setNewPassConfirm}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPass.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPass]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'email'}\r\n                checkable={email}\r\n                setCheckable={setEmail}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => {\r\n                            return value.length === 0 || value.split('@').length === 2;\r\n                        },\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !emailList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                // width={500}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'old pass'}\r\n                isPassword\r\n                checkable={oldPass}\r\n                setCheckable={setOldPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => value === loginProps.password,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                // dependency={[passwordConfirm]}\r\n                width={300}\r\n                marginTop={55}\r\n                isReadOnly={!isModify}\r\n            />\r\n        </_Wrap>\r\n    );\r\n\r\n    // 登録ボタンの活性状態\r\n    const permitRegist = (\r\n        userId.errors.length === 0\r\n        && newPass.errors.length === 0\r\n        && newPassConfirm.errors.length === 0\r\n        && email.errors.length === 0\r\n        && oldPass.errors.length === 0\r\n    );\r\n\r\n    const updateUserInfo = () => {\r\n        const passwordStr = newPass.value.length === 0 ? '' : `,password = '${newPass.value}'`;\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `UPDATE user_tbl SET id = '${userId.value}', email = '${email.value}'${passwordStr}\r\n            WHERE seq = ${loginProps?.seq}`\r\n        ).then(() => {\r\n            loginProps.id = userId.value;\r\n            if (newPass.value.length > 0) {\r\n                loginProps.password = newPass.value;\r\n            }\r\n            loginProps.email = email.value;\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Modify successful!\" />;\r\n            setStore({...store});\r\n        });\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <FormUtil.Message\r\n                    message=\"If you bookmark this page, you can easily login by URL.\"\r\n                />\r\n            </_Header>\r\n            <_Body>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'User', enable: true, cont: userTabJsx },\r\n                        { name: 'Security', enable: false, cont: <></> },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_Body>\r\n            <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        {\r\n                            label: 'Close',\r\n                            callback: () => {\r\n                                // dispatcher.system.closeDialog();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Cancel',\r\n                            isEnable: isModify,\r\n                            callback: () => {\r\n                                setModify(false);\r\n                                reloadInfo();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isModify ? 'Modify' : 'Regist',\r\n                            isEnable: !isModify || permitRegist,\r\n                            callback: () => {\r\n                                if (!isModify) {\r\n                                    setModify(true);\r\n                                    setOldPass({ ...oldPass, value: '' });\r\n                                }\r\n                                else {\r\n                                    updateUserInfo();\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\n\r\nexport default AccountFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7eb;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    /* text-align: center; */\r\n`;\r\nconst _Body = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 100px);\r\n    padding: 4px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport AccountFrame from \"../accountFrame\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginCreateAccount = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isRegist, setRegist] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [passwordConfirm, setPasswordConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n\r\n    const createAuthText = () => {\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n        const list = '0123456789';\r\n        let text = '';\r\n        for (let i = 0; i < 6; i++) {\r\n            text += list.charAt(Math.random() * list.length);\r\n        }\r\n        return text;\r\n    };\r\n\r\n    /** 既存のユーザIDリストを格納 */\r\n    useEffect(() => {\r\n        DataUtil.findUserIdList().then(list => {\r\n            setUserIdList(list);\r\n        });\r\n\r\n        // fetch('https://api.ipify.org/?format=json').then(res => {\r\n        //     res.json().then(data => {\r\n        //         alert(data['ip']);\r\n        //     });\r\n        // });\r\n    }, []);\r\n\r\n    const [authCollation, setAuthCollation] = useState<string>(createAuthText());\r\n    const [authInput, setAuthInput] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    /** キャッシュした認証画像 */\r\n    const authPicture = useMemo(() => {\r\n        return CanvasUtil.getAuthTextURL(authCollation);\r\n\r\n    }, [authCollation]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n                case 'relation': list.push('[password] does not match confirm.'); break;\r\n            }\r\n        }\r\n        if (passwordConfirm.errors.length > 0) {\r\n            switch (passwordConfirm.errors[0]) {\r\n                case 'length': list.push('[password *] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    const registAction = () => {\r\n\r\n        (async () => {\r\n            let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n            let results = await response.json();\r\n            console.log(JSON.stringify(results[0].cnt));\r\n            const isExist = results[0].cnt > 0;\r\n            if (isExist) {\r\n                setMessageList(['That user id has already been recorded.']);\r\n            } else {\r\n                const nextSeq = await DataUtil.getNextUserSeq();\r\n                console.log(nextSeq);\r\n                await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(seq, id, password) VALUES(${nextSeq}, '${userId.value}', '${password.value}')`);\r\n                store.system.user = {\r\n                    seq: nextSeq,\r\n                    id: userId.value,\r\n                    password: password.value,\r\n                    email: '',\r\n                };\r\n                store.cloud = {\r\n                    projects: []\r\n                };\r\n                store.system.dialog = (<ConfirmDialog.Component\r\n                    message='You have successfully created an account!'\r\n                    buttons={[\r\n                        {\r\n                            label: 'OK',\r\n                            callback: () => {\r\n                                store.system.dialog = (<AccountFrame />);\r\n                                setStore({...store});\r\n                            }\r\n                        }\r\n                    ]}\r\n                />);\r\n                setStore({...store});\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0 && passwordConfirm.errors.length === 0;\r\n    }\r\n    const isAuthOK = () => {\r\n        return authInput.errors.length === 0 && authCollation === authInput.value;\r\n    }\r\n\r\n    return (<>\r\n\r\n        <_Frame isVisible={!isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass (Confirm).'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            },\r\n                            {\r\n                                checker: (value) => !userIdList.includes(value),\r\n                                errorType: \"relation\"\r\n                            },\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === passwordConfirm.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[passwordConfirm]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password*'}\r\n                        isPassword\r\n                        checkable={passwordConfirm}\r\n                        setCheckable={setPasswordConfirm}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === password.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[password]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Enter', isEnable: isLoginInfoOK(), callback: () => {\r\n                                    setRegist(true);\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Proof not a robot\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, input the same 6 number as the picture.'}\r\n                    />\r\n                    <_AuthText src={authPicture} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Change', callback: () => {\r\n                                    setAuthCollation(createAuthText());\r\n                                    setAuthInput({ value: '', errors: [] });\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                    {/* 照合する文字列 */}\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'6 numbers'}\r\n                        checkable={authInput}\r\n                        setCheckable={setAuthInput}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Regist', isEnable: isAuthOK(), callback: registAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setRegist(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginCreateAccount;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n\r\nconst _AuthText = styled.img<{\r\n}>`\r\n    display: block;\r\n    text-align: center;\r\n    margin: 4px auto;\r\n    background-color: #f7f0f0;\r\n    border: 1px solid #888888;\r\n    box-sizing: border-box;\r\n`;","import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        // parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        const ref = useRef({} as HTMLDivElement);\r\n\r\n        /**\r\n         * データを元に再帰的に以下のツリーを構成する。\r\n         * @returns ツリー\r\n         */\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        useEffect(() => {\r\n            if (focusNode != null && focusNode.parent != null) {\r\n                focusNode.parent.isOpen = true;\r\n            }\r\n        }, [focusNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            // console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    // 親判定\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    // 兄弟判定\r\n                    if (result === false && focusNode != null && focusNode.parent != null) {\r\n                        result = focusNode.parent.children.find(node => node == element) != undefined;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        width={ref.current.scrollWidth}\r\n                        isActive={isCurrent}\r\n                        isRelation={!isDisable && isRelationNode()}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap\r\n                ref={ref}\r\n                isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #374a54;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #1f3642;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n    isRelation: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #459cff46;\r\n    `}\r\n    opacity: 0.3;\r\n    ${props => !props.isRelation ? '' : css`\r\n        background-color: #ffffff28;\r\n        opacity: 1;\r\n    `}\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #b4d9dd83;\r\n        opacity: 1;\r\n    `}\r\n    width: ${props => props.width}px;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\nimport SystemConst from \"../../../utils/systemConst\";\r\nimport LocalStorageUtil from \"../../../utils/localStorageUtil\";\r\n\r\nconst LoginLogin = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isForget, setForget] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        (async () => {\r\n            const results = await DataUtil.findUserInfoLogin(userId.value, password.value);\r\n            if (results.length > 0) {\r\n                localStorage.setItem(LocalStorageUtil.KEY_LOGIN_HASH, DataUtil.getHashedFromUserSeq(results[0].seq));\r\n                store.system.user = {\r\n                    seq: results[0].seq,\r\n                    id: results[0].id,\r\n                    password: results[0].password,\r\n                    email: results[0].email,\r\n                };\r\n                const resPrjList = await DataUtil.findUserLibdvList(results[0].seq);\r\n                store.cloud = {\r\n                    projects: resPrjList.map(res => ({\r\n                        source: res.source,\r\n                        type: res.type,\r\n                        name: res.name,\r\n                        seq: res.seq,\r\n                        lastmod: res.lastmod\r\n                    }))\r\n                };\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                    message=\"Login successful!\"\r\n                />;\r\n                setStore({ ...store });\r\n            } else {\r\n                setMessageList(['Incorrect user id or password.']);\r\n                // setPassword({ ...password, value: '' });\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0;\r\n    }\r\n\r\n    return (<>\r\n        <_Frame isVisible={!isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Enter', isEnable: isLoginInfoOK(), callback: enterAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Forgot your login information?\"\r\n                clickAction={() => {\r\n                    setForget(true);\r\n                }}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Email\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Submit login information to account address.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'email'}\r\n                        checkable={email}\r\n                        setCheckable={setEmail}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => {\r\n                                    return value.length === 0 || value.split('@').length === 2;\r\n                                },\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={500}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Send', isEnable: email.errors.length === 0, callback: () => {\r\n                                    DataUtil.findUserInfoFromEmail(email.value).then((list) => {\r\n                                        if (list.length > 0) {\r\n                                            const info = list[0];\r\n                                            const hash = DataUtil.getHashedFromUserSeq(info.seq);\r\n                                            const url = `https://demo-app.licresia.com/#/user?v=${hash}`;\r\n                                            DataUtil.sendQueryRequestToMailAPI({\r\n                                                from: 'info@licresia.com',\r\n                                                to: email.value,\r\n                                                subject: '【LiCreSia】support',\r\n                                                text: `Your login information is as follows.\\n\\nURL: ${url}\\nUSR ID: ${info.id}`\r\n                                            });\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"Your login information has been sent!\" />);\r\n                                        } else {\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"This email address is not registered.\" />);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setForget(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginLogin;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LoginCreateAccount from \"./loginCreateAccount\";\r\nimport LoginLogin from \"./loginLogin\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 500;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_LogoDiv>\r\n                <img src={logo} />\r\n            </_LogoDiv>\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {!isCreate ? <LoginLogin /> : <LoginCreateAccount />}\r\n            {/* <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        { name: 'Close', callback: closeAction },\r\n                        { name: 'Enter', callback: enterAction },\r\n                    ]}\r\n                />\r\n            </_Footer> */}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #bf808075;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n    background-color: #bf8080a2;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #c7a73e;\r\n        `}\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled, { css } from \"styled-components\";\r\nimport SystemConst, { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport LoginFrame from \"../dialog/login/loginFrame\";\r\nimport AccountFrame from \"../dialog/accountFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport LocalStorageUtil from \"../../utils/localStorageUtil\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const user = store.system.user;\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (user != null) {\r\n            setUserId('@' + user.id);\r\n        }\r\n    }, [user]);\r\n\r\n    const authButtonJsx = user == null ? (\r\n        <_LoginButton onClick={() => {\r\n            store.system.canDialogClose = true;\r\n            store.system.dialog = <LoginFrame />;\r\n            setStore({ ...store });\r\n            console.log(window.location.origin);\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Login / Sign up\r\n        </_LoginButton>\r\n    ) : (<>\r\n        <_UserName\r\n            isEntry={user != null}\r\n            onClick={() => {\r\n                store.system.dialog = <AccountFrame />;\r\n                setStore({ ...store });\r\n            }}\r\n        >{userId}</_UserName>\r\n        <_LoginButton onClick={() => {\r\n            store.system.user = null;\r\n            localStorage.removeItem(LocalStorageUtil.KEY_LOGIN_HASH);\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message={'Logout.\\nSee you next time!'}\r\n            />;\r\n            store.system.logoutActions.forEach(func => func());\r\n            setStore({ ...store });\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Logout\r\n        </_LoginButton>\r\n    </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Logo src={logo} onClick={() => window.location.replace(SystemConst.APP_SERVER_DOMAIN)} />\r\n            <_Menu>\r\n                {authButtonJsx}\r\n                {/* <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language> */}\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #a6bdc7, #7895b1, #a6bdc7);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    border: 1px solid #7e7e7e;\r\n    box-sizing: border-box;\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #9afff292;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #ff393983;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 180px;\r\n    height: 100%;\r\n    padding: 3px 0;\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n    /** 横向き */\r\n    isLandscape?: boolean;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const isLandscape = props.isLandscape ?? true;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList isLandscape={isLandscape}>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList isLandscape={isLandscape}>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    isLandscape: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isLandscape ? css`\r\n        width: 100px;\r\n        height: 100%;\r\n    ` : css`\r\n        width: 100%;\r\n        height: 100px;\r\n    `}\r\n    margin-right: 5px;\r\n    background-color: #c0d3db;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div<{\r\n    isLandscape: boolean;\r\n}>`\r\n    display: inline-block;\r\n    background-color: #c0d3db;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    ${props => props.isLandscape ? css`\r\n        width: calc(100% - 105px);\r\n        height: 100%;\r\n    ` : css`\r\n        height: calc(100% - 100px);\r\n        width: 100%;\r\n    `}\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    border: 1px solid #8d9aaa7b;\r\n    box-sizing: border-box;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #d5dddf;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #cacecf;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import VectorUtil from \"./vectorUtil\";\r\n\r\nnamespace Particle {\r\n\r\n    export type Props = {\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        limit: number;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n    }\r\n\r\n    export class Instance {\r\n\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        prevPos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        frame: number;\r\n        limit: number;\r\n        isLive: boolean;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n\r\n        constructor(props: Props) {\r\n            this.owner = props.owner;\r\n            this.pos = props.pos;\r\n            this.prevPos = props.pos;\r\n            this.vec = props.vec;\r\n\r\n            this.frame = 0;\r\n            this.limit = props.limit;\r\n            this.isLive = true;\r\n            this.drawer = props.drawer;\r\n            this.extend = props.extend;\r\n        }\r\n\r\n        update = () => {\r\n\r\n            this.pos.x += this.vec.xy.x;\r\n            this.pos.y += this.vec.xy.y;\r\n\r\n            this.extend.forEach(callback => callback(this));\r\n\r\n            if (this.frame === this.limit) {\r\n                this.isLive = false;\r\n            }\r\n            this.frame++;\r\n        }\r\n\r\n        draw = (ctx: CanvasRenderingContext2D) => {\r\n            this.drawer(this, ctx);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Particle;","import Particle from \"./particle\";\r\n\r\nnamespace DrawUtil {\r\n\r\n    export type Rgba = {\r\n        r: number;\r\n        g: number;\r\n        b: number;\r\n        a: number;\r\n    }\r\n\r\n    export type ColorStop = {\r\n        offset: number;\r\n        color: string;\r\n    }\r\n\r\n    export type DrawerParam = {\r\n        color: string;\r\n        radius?: number;\r\n        disappearStartRate?: number;\r\n        shrinkStartRate?: number;\r\n        flashAppearFrame?: number;\r\n        flashHideFrame?: number;\r\n    }\r\n\r\n    export const createGradDrawer = (param: DrawerParam) => {\r\n\r\n        /** 基準となる半径 */\r\n        const radiusBase = param.radius ?? 30;\r\n        return (self: Particle.Instance, ctx: CanvasRenderingContext2D) => {\r\n            if (param.flashAppearFrame != undefined) {\r\n                const appearFrame = param.flashAppearFrame;\r\n                const hideFrame = (param.flashHideFrame as number);\r\n                const unitFrame = appearFrame + hideFrame;\r\n                if ((self.frame % unitFrame) >= appearFrame) return;\r\n            }\r\n\r\n            let radius = radiusBase;\r\n            if (param.shrinkStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.shrinkStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    const rate = (limit - frame) / limit;\r\n                    radius *= rate;\r\n                }\r\n            }\r\n\r\n            const x = self.pos.x;\r\n            const y = self.pos.y;\r\n            const g = ctx.createRadialGradient(x, y, 1, x, y, radius);\r\n\r\n            const grads: ColorStop[] = [];\r\n            const rgba = convertRgbaFromColorCode(param.color) ?? { r: 255, g: 255, b: 255, a: 255 };\r\n            grads.push({ offset: 0, color: convertColorCodeFromRgba({ r: 255, g: 255, b: 255, a: Math.floor(rgba.a * 0.9) }) });\r\n            grads.push({ offset: 0.2, color: convertColorCodeFromRgba({ ...rgba, a: Math.floor(rgba.a * 0.15) }) });\r\n            grads.push({ offset: 1, color: convertColorCodeFromRgba({ ...rgba, a: 1 }) });\r\n\r\n            grads.forEach(grad => {\r\n                g.addColorStop(grad.offset, grad.color);\r\n            });\r\n\r\n            ctx.globalAlpha = 1;\r\n            if (param.disappearStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.disappearStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    ctx.globalAlpha = (limit - frame) / limit;\r\n                }\r\n            }\r\n\r\n            ctx.fillStyle = g;\r\n            // ctx.fillStyle = param.color;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n        };\r\n    }\r\n\r\n    export const convertRgbaFromColorCode = (code: string): Rgba | null => {\r\n        const div = code.split('#');\r\n        if (div.length !== 2 || div[1].length < 6) return null;\r\n\r\n        const value = div[1];\r\n        const r = Number.parseInt(value.substring(0, 2), 16);\r\n        const g = Number.parseInt(value.substring(2, 4), 16);\r\n        const b = Number.parseInt(value.substring(4, 6), 16);\r\n        let a = 1;\r\n        if (value.length === 8) {\r\n            a = Number.parseInt(value.substring(6, 8), 16);\r\n        }\r\n        return { r, g, b, a };\r\n    }\r\n\r\n    export const convertColorCodeFromRgba = (rgba: Rgba): string => {\r\n        const r1 = (Math.floor(rgba.r));\r\n        const g1 = (Math.floor(rgba.g));\r\n        const b1 = (Math.floor(rgba.b));\r\n        const a1 = (Math.floor(rgba.a));\r\n        const r = ('00' + r1.toString(16)).slice(-2);\r\n        const g = ('00' + g1.toString(16)).slice(-2);\r\n        const b = ('00' + b1.toString(16)).slice(-2);\r\n        const a = ('00' + a1.toString(16)).slice(-2);\r\n        return `#${r}${g}${b}${a}`;\r\n    }\r\n\r\n    export const toWhite = (color: string, rate: number): string => {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport default DrawUtil;","namespace VectorUtil {\r\n\r\n    export type XY = {\r\n        x: number, y: number;\r\n    }\r\n\r\n    export class Vector {\r\n\r\n        xy: XY;\r\n        rad: number;\r\n        len: number;\r\n\r\n        constructor(xy: XY) {\r\n            this.xy = xy;\r\n            this.rad = 0;\r\n            this.len = 0;\r\n            this.syncFromXY();\r\n        }\r\n\r\n        syncFromXY = () => {\r\n            this.len = Math.sqrt(this.xy.x * this.xy.x + this.xy.y * this.xy.y);\r\n            this.rad = Math.atan2(this.xy.y, this.xy.x);\r\n        }\r\n\r\n        syncFromRad = () => {\r\n            this.xy.x = Math.cos(this.rad) * this.len;\r\n            this.xy.y = Math.sin(this.rad) * this.len;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default VectorUtil;","\r\nnamespace ParamUtil {\r\n    export enum VisualParamType {\r\n        RADIUS = 'radius',\r\n        COLOR_R = 'color_r',\r\n        COLOR_G = 'color_g',\r\n        COLOR_B = 'color_b',\r\n        COLOR_A = 'color_a',\r\n        THICKNESS = 'thickness',\r\n    }\r\n    export const VisualParams = Object.values(VisualParamType);\r\n    export type VisualParam = typeof VisualParams[number];\r\n\r\n    export enum BehaviorParamType {\r\n        LIMIT = 'limit',\r\n        POS_X = 'pos_x',\r\n        POS_Y = 'pos_y',\r\n        VEC_X = 'vec_x',\r\n        VEC_Y = 'vec_y',\r\n        VEC_RAD = 'vec_radian',\r\n        VEC_LEN = 'vec_length',\r\n    }\r\n    export const BehaviorParams = Object.values(BehaviorParamType);\r\n    export type BehaviorParam = typeof BehaviorParams[number];\r\n\r\n    export enum SelfParamType {\r\n        FRAME = 'self_frame',\r\n        LIMIT = 'self_limit',\r\n        POS_X = 'self_pos_x',\r\n        POS_Y = 'self_pos_y',\r\n        VEC_X = 'self_vec_x',\r\n        VEC_Y = 'self_vec_y',\r\n        VEC_RAD = 'self_vec_radian',\r\n        VEC_LEN = 'self_vec_length',\r\n    }\r\n    export const SelfParams = Object.values(SelfParamType);\r\n    export type SelfParam = typeof SelfParams[number];\r\n\r\n    export enum ExtendParamType {\r\n        LOOP_COUNT = 'loop_count',\r\n        LOOP_ITERATE = 'loop_iterate',\r\n        INVOKE = 'invoke',\r\n    }\r\n    export const ExtendParams = Object.values(ExtendParamType);\r\n    export type ExtendParam = typeof ExtendParams[number];\r\n\r\n    export enum EffectParamType {\r\n        DISAPPEAR_START = 'disappear_start',\r\n        SHRINK_START = 'shrink_start',\r\n        FLASH_APPEAR_FRAME = 'flash_appear_frame',\r\n        FLASH_HIDE_FRAME = 'flash_hide_frame',\r\n    }\r\n    export const EffectParams = Object.values(EffectParamType);\r\n    export type EffectParam = typeof EffectParams[number];\r\n\r\n    export enum ModulateParamType {\r\n        DECAY_RATE = 'decay_rate',\r\n        DECAY_LIMIT = 'decay_limit',\r\n        GRAVITY_VAL = 'gravity_val',\r\n        GRAVITY_LIMIT = 'gravity_limit',\r\n    }\r\n    export const ModulateParams = Object.values(ModulateParamType);\r\n    export type ModulateParam = typeof ModulateParams[number];\r\n\r\n    export enum ConstantType {\r\n        SCREEN_WIDTH = 'screen_width',\r\n        SCREEN_HEIGHT = 'screen_height',\r\n        PI = 'pi',\r\n        RADIAN_ROUND = 'radian_round',\r\n    }\r\n    export const Constants = Object.values(ConstantType);\r\n    export type Constant = typeof Constants[number];\r\n\r\n}\r\n\r\nexport default ParamUtil;","import Particle from \"../../graphic/particle\";\r\n\r\nnamespace ModulateBuilder {\r\n\r\n    type ModulateParam = {\r\n        decayRate?: number;\r\n        decayLimit?: number;\r\n        gravity?: number;\r\n        gravityLimit?: number;\r\n    }\r\n\r\n    export const build = (extendList: ((self: Particle.Instance) => void)[], param: ModulateParam) => {\r\n        \r\n        // 減衰メソッド\r\n        if (param.decayRate != undefined && param.decayLimit != undefined) {\r\n            const decayLimit = param.decayLimit;\r\n            const decayRate = param.decayRate;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.len > decayLimit) {\r\n                    self.vec.len = self.vec.len * decayRate;\r\n                    self.vec.syncFromRad();\r\n                }\r\n            });\r\n        }\r\n        // 重力メソッド\r\n        if (param.gravity != undefined && param.gravityLimit != undefined) {\r\n            const gravityLimit = param.gravityLimit;\r\n            const gravity = param.gravity;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.xy.y < gravityLimit) {\r\n                    self.vec.xy.y += gravity;\r\n                    self.vec.syncFromXY();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModulateBuilder;","import DrawUtil from \"../../graphic/drawUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport ParamUtil from \"../factory/util/paramUtil\";\r\nimport ModulateBuilder from \"./modulateBuilder\";\r\n\r\nnamespace PreviewUtil {\r\n\r\n    export const SCREEN_WIDTH = 550;\r\n    export const SCREEN_HEIGHT = 550;\r\n\r\n    export type ValueMap = {\r\n        name: string;\r\n        value: number;\r\n    }\r\n\r\n    export type ArrayMap = {\r\n        name: string;\r\n        array: number[];\r\n    }\r\n\r\n    export const buildLogicProps = (\r\n        owner: Particle.Instance[],\r\n        origin: LogicUtil.NodeLogicItem,\r\n        rootData: LogicUtil.WrapElement,\r\n        initialValueMapList: ValueMap[],\r\n        initailArrayMapList: ArrayMap[]\r\n    ): Particle.Props => {\r\nconsole.log(initailArrayMapList);\r\n        /**\r\n         * ディペンドするロジック要素を識別名から探して返す。\r\n         * @param name ロジックの識別名\r\n         * @returns ロジック要素\r\n         */\r\n        const searchDependLogic = (name: string): LogicUtil.NodeLogicItem | null => {\r\n            const mng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n            const wrap = mng.defs.find(def => (def.data as LogicUtil.NodeLogicItem).name === name);\r\n            if (wrap == undefined) return null;\r\n            return wrap.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        /**\r\n         * 再帰的にパーティクルを生成する。\r\n         * @param cur ルートとなるロジック要素\r\n         * @param parentValueMapList 親要素から送られてきたValueMap\r\n         * @param parentArrayMapList 親要素から送られてきたArrayMap\r\n         * @returns パーティクルのプロパティ\r\n         */\r\n        const createParticleRec = (cur: LogicUtil.NodeLogicItem, parentValueMapList: ValueMap[], parentArrayMapList: ArrayMap[]): Particle.Props => {\r\n            const valueMapList: ValueMap[] = parentValueMapList.concat(ConstantValueMap);\r\n\r\n            // 配列Mapのプロパティ変数を生成\r\n            parentArrayMapList.forEach(arr => {\r\n                valueMapList.push({ name: arr.name + '.len', value: arr.array.length });\r\n            });\r\n\r\n            // フィールドのパラメータを取得\r\n            const fieldMng = searchElement('field-mng', cur.mngs);\r\n            if (fieldMng != null) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                    valueMapList.push({ name: paramItem.name, value });\r\n                });\r\n            }\r\n\r\n            const visualParams = (searchElement('visual-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n            const behaviorParams = (searchElement('behavior-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n\r\n            const getVisualParam = (name: string) => {\r\n                return convertParamsToValue(name, visualParams, valueMapList);\r\n            }\r\n            const getBehaviorParam = (name: string) => {\r\n                return convertParamsToValue(name, behaviorParams, valueMapList);\r\n            }\r\n\r\n            // Behaviorのパラメータを取得\r\n            const limit = Math.floor(getBehaviorParam(ParamUtil.BehaviorParamType.LIMIT) as number);\r\n            const pos = {\r\n                x: getBehaviorParam(ParamUtil.BehaviorParamType.POS_X) as number,\r\n                y: getBehaviorParam(ParamUtil.BehaviorParamType.POS_Y) as number\r\n            };\r\n            const vec = new VectorUtil.Vector({ x: 0, y: 0 });\r\n            const isVectorMethod = behaviorParams.find(param => param.name === ParamUtil.BehaviorParamType.VEC_X) != undefined;\r\n            if (isVectorMethod) {\r\n                vec.xy.x = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_X) as number;\r\n                vec.xy.y = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_Y) as number;\r\n                vec.syncFromXY();\r\n            } else {\r\n                vec.rad = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_RAD) as number;\r\n                vec.len = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_LEN) as number;\r\n                vec.syncFromRad();\r\n            }\r\n\r\n            /**\r\n             * 追加動作（子要素、エフェクト、モデュレート）\r\n             */\r\n            const extendList: ((self: Particle.Instance) => void)[] = [];\r\n\r\n            // 子要素を生成する\r\n            const connectMng = searchElement('inherit-mng', cur.mngs);\r\n            if (connectMng != null) {\r\n\r\n                // パーティクル情報のフィールド追加\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_X, value: pos.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_Y, value: pos.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_RAD, value: vec.rad });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_LEN, value: vec.len });\r\n\r\n                const connects = (connectMng.data as LogicUtil.NodeConnectManager).inherits;\r\n\r\n                connects.forEach(connect => {\r\n                    const connector = connect.data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.disable ?? false) return;\r\n\r\n                    const logicItem = connector.method === 'create' ?\r\n                        searchElement('inherit-logic', connector.mngs)?.data as LogicUtil.NodeLogicItem :\r\n                        searchDependLogic(connector.depend);\r\n\r\n                    if (logicItem != null) {\r\n\r\n                        extendList.push((self: Particle.Instance) => {\r\n\r\n                            const addValueMap = (item: ValueMap) => {\r\n                                const map = valueMapList.find(map => map.name === item.name);\r\n                                if (map != undefined) map.value = item.value;\r\n                                else valueMapList.push(item);\r\n                            }\r\n                            addValueMap({ name: ParamUtil.SelfParamType.FRAME, value: self.frame });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.LIMIT, value: self.limit });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_X, value: self.pos.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_Y, value: self.pos.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_X, value: self.vec.xy.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_Y, value: self.vec.xy.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_RAD, value: self.vec.rad });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_LEN, value: self.vec.len });\r\n\r\n                            // Inherit配下のフィールドのパラメータを取得\r\n                            const itrfldValueMap: ValueMap[] = [];\r\n                            const fieldMng = searchElement('inhfld-mng', connector.mngs);\r\n                            if (fieldMng != null) {\r\n                                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                                    itrfldValueMap.push({ name: paramItem.name, value });\r\n                                });\r\n                            }\r\n\r\n                            let loopCnt = 1;\r\n                            const extendItem = searchElement('extend-mng', connector.mngs) as LogicUtil.WrapElement;\r\n                            const extendParams = (extendItem.data as LogicUtil.NodeParamManager).params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                            const loopCntVal = convertParamsToValue(ParamUtil.ExtendParamType.LOOP_COUNT, extendParams, valueMapList.concat(itrfldValueMap));\r\n\r\n                            // 派生条件\r\n                            const isInvoke = convertParamsToBoolean(ParamUtil.ExtendParamType.INVOKE, extendParams, valueMapList) ?? true;\r\n\r\n                            // 条件を満たさない場合、以下の処理（パーティクルの生成）を行わない\r\n                            if (!isInvoke) return;\r\n\r\n                            // イテレータを利用している場合\r\n                            if (loopCntVal != undefined) {\r\n                                loopCnt = loopCntVal;\r\n                            }\r\n\r\n                            for (let i = 0; i < loopCnt; i++) {\r\n\r\n                                // イテレータ関連のパラメータを追加\r\n                                const iterateValueMap: ValueMap[] = [\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_COUNT, value: loopCnt },\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_ITERATE, value: i }\r\n                                ];\r\n\r\n                                // 配列Mapのイテレータ変数を追加\r\n                                const iterateArrayMap: ValueMap[] = parentArrayMapList.map(arr => {\r\n                                    return { name: arr.name + '.itr', value: arr.array[i] ?? 0 };\r\n                                });\r\n\r\n                                const sendItem = searchElement('send-mng', connector.mngs)?.data as LogicUtil.NodeParamManager;\r\n                                const params = sendItem.params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                                const sendValueMapList: ValueMap[] = params\r\n                                    .filter(item => !item.isArray)\r\n                                    .map(item => {\r\n                                        return {\r\n                                            name: item.name, value: convertParamsToValue(item.name, params, valueMapList\r\n                                                .concat(itrfldValueMap)\r\n                                                .concat(iterateValueMap)\r\n                                                .concat(iterateArrayMap)\r\n                                            ) ?? 0\r\n                                        };\r\n                                    });\r\n                                const sendArrayMapList: ArrayMap[] = params\r\n                                    .filter(item => item.isArray)\r\n                                    .map(item => {\r\n                                        return { name: item.name, array: convertParamsToArray(item.name, params, parentArrayMapList) ?? [] }\r\n                                    });\r\n\r\n                                const props = createParticleRec(\r\n                                    logicItem,\r\n                                    sendValueMapList,\r\n                                    sendArrayMapList\r\n                                );\r\n                                self.owner.push(new Particle.Instance(props));\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            // モデュレート（動きの変化）を付与\r\n            ModulateBuilder.build(extendList, {\r\n                decayLimit: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_LIMIT),\r\n                decayRate: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_RATE),\r\n                gravity: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_VAL),\r\n                gravityLimit: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_LIMIT),\r\n            });\r\n\r\n            // Visualのパラメータを取得\r\n            const radius = getVisualParam(ParamUtil.VisualParamType.RADIUS);\r\n            const colorR = getVisualParam(ParamUtil.VisualParamType.COLOR_R);\r\n            const colorG = getVisualParam(ParamUtil.VisualParamType.COLOR_G);\r\n            const colorB = getVisualParam(ParamUtil.VisualParamType.COLOR_B);\r\n            const colorA = getVisualParam(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // エフェクト付与\r\n            const disappearStart = getVisualParam(ParamUtil.EffectParamType.DISAPPEAR_START);\r\n            const shrinkStart = getVisualParam(ParamUtil.EffectParamType.SHRINK_START);\r\n            const flashAppearFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME);\r\n            const flashHideFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_HIDE_FRAME);\r\n\r\n            let drawer: (self: Particle.Instance, ctx: CanvasRenderingContext2D) => void = () => { };\r\n            if (radius != undefined) {\r\n                drawer = DrawUtil.createGradDrawer({\r\n                    radius: radius,\r\n                    color: DrawUtil.convertColorCodeFromRgba({\r\n                        r: colorR as number,\r\n                        g: colorG as number,\r\n                        b: colorB as number,\r\n                        a: colorA as number,\r\n                    }),\r\n                    disappearStartRate: disappearStart,\r\n                    shrinkStartRate: shrinkStart,\r\n                    flashAppearFrame,\r\n                    flashHideFrame,\r\n                });\r\n            }\r\n\r\n            return {\r\n                owner, pos, vec,\r\n                limit, drawer,\r\n                extend: extendList\r\n            };\r\n        }\r\n\r\n        return createParticleRec(origin, initialValueMapList, initailArrayMapList);\r\n    }\r\n\r\n    const searchElement = (type: LogicUtil.NodeType, warpList: LogicUtil.WrapElement[]) => {\r\n        return warpList.find(wrap => wrap.type === type) ?? null;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param valueMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToValue = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): number | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToValue(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToValue = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): number => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(ret);\r\n        return ret;\r\n    }\r\n\r\n    export const convertParamsToBoolean = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): boolean | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToBoolean(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToBoolean = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): boolean => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item, i) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            else if (item === '=') str = '==';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(formulaStr);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param arrayMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToArray = (name: string, params: LogicUtil.NodeParamItem[], arrayMapList: ArrayMap[]): number[] | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        const item = formula.values[0];\r\n        if (item.type === 'array') {\r\n            return item.value.split(',').map(v => Number(v));\r\n        } else if (item.type === 'argument') {\r\n            const map = arrayMapList.find(array => array.name === item.value);\r\n            return map == undefined ? [] : map.array;\r\n        }\r\n    }\r\n\r\n    export const ConstantValueMap: ValueMap[] = [\r\n        { name: ParamUtil.ConstantType.SCREEN_WIDTH, value: SCREEN_WIDTH },\r\n        { name: ParamUtil.ConstantType.SCREEN_HEIGHT, value: SCREEN_HEIGHT },\r\n        { name: ParamUtil.ConstantType.PI, value: 3.14159265359 },\r\n        { name: ParamUtil.ConstantType.RADIAN_ROUND, value: 3.14159265359 * 2 }\r\n    ];\r\n}\r\n\r\nexport default PreviewUtil;","import { useContext, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nnamespace ModifyOperations {\r\n\r\n    export type Props = {\r\n        mappingForm: () => void;\r\n        checkableFields: FormUtil.CheckableValue[];\r\n        isInputOK?: boolean;\r\n        firstRegist: () => void;\r\n        modifyRegist: () => void;\r\n    }\r\n\r\n    export const Component = (props: Props) => {\r\n        const { node, isModify, setModify, removeSelf } = useContext(FactoryTreeContext);\r\n\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n        const isComplete = FormUtil.isCompleteCheck(props.checkableFields);\r\n\r\n        return (<>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: isModify,\r\n                        callback: () => {\r\n                            if (wrap.data == null) {\r\n                                removeSelf();\r\n                            } else {\r\n                                props.mappingForm();\r\n                            }\r\n                            setModify(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !isModify || (props.isInputOK ?? isComplete),\r\n                        callback: () => {\r\n                            if (!isModify) {\r\n                                setModify(true);\r\n                            } else {\r\n                                if (wrap.data == null) {\r\n                                    props.firstRegist();\r\n                                } else {\r\n                                    props.modifyRegist();\r\n                                }\r\n                                setModify(false);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default ModifyOperations;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorArgumentMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'argument-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentMng;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ParamUtil from \"../util/paramUtil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\n\r\nnamespace SendTemplateDialog {\r\n\r\n    const FRAME_WIDTH = 450;\r\n    const FRAME_HEIGHT = 160;\r\n    const COMPONENT_WIDTH = 296;\r\n\r\n    export const ConnectParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, input property name!';\r\n\r\n        /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n        const paramNameList = useMemo(() => {\r\n            const owner = (LogicElementUtil.getInnerWrap(props.node.parent?.data as LogicUtil.WrapElement, 'inherit-logic') as LogicUtil.WrapElement).data;\r\n            return LogicElementUtil.getParamNameList(owner);\r\n        }, [props.node]);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    // Sendにパラメータを追加\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: xName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }] }\r\n                    ), props.node);\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: yName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }] }\r\n                    ), props.node);\r\n\r\n                    // 派生ロジックに引数を追加\r\n                    const logicNode = LogicElementUtil.getInnerNode(props.node.parent as TreeUtil.ElementNode, 'inherit-logic') as TreeUtil.ElementNode;\r\n                    const hasArgNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') != undefined;\r\n                    if (!hasArgNode) {\r\n                        LogicElementUtil.insertChild({\r\n                            type: 'argument-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeArgumentManager\r\n                        }, logicNode, 0);\r\n                    }\r\n                    const argNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') as TreeUtil.ElementNode;\r\n\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: xName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: yName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n\r\n                    // 派生ロジックの座標に引数を設定\r\n                    const behaviorNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'behavior-mng') as TreeUtil.ElementNode;\r\n                    const setParamValue = (prpName: string, argName: string) => {\r\n                        const params = behaviorNode.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                        const targetParam = params.find(param => param.name === prpName) as LogicUtil.NodeParamItem;\r\n                        targetParam.formulaItems = ['var'];\r\n                        targetParam.values = [{ type: 'argument', value: argName }];\r\n                    }\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_X, xName.value);\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_Y, yName.value);\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (yName.value !== '') list.push(yName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[yName]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (xName.value !== '') list.push(xName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[xName]}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n\r\n    export const SetParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, select property name!';\r\n\r\n        const list = useMemo(() => {\r\n            return props.node.children.map(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                return (wrap.data as LogicUtil.NodeParamItem).name;\r\n            });\r\n        }, []);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    const paramList = props.node.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                    const xParam = paramList.find(param => param.name === xName.value) as LogicUtil.NodeParamItem;\r\n                    const yParam = paramList.find(param => param.name === yName.value) as LogicUtil.NodeParamItem;\r\n                    xParam.formulaItems = ['var'];\r\n                    xParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }];\r\n                    yParam.formulaItems = ['var'];\r\n                    yParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }];\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== yName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== xName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SendTemplateDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #d0e7e718;\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport GloballDialog from \"../../../../dialog/globalDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorArgumentItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const logicNode = node.parent?.parent as TreeUtil.ElementNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n        setName({ ...name, value: param.name });\r\n        setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, argType]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeArgumentItem = {\r\n                    name: name.value,\r\n                    valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n                syncArgumentAdd(logicNode, name.value, argType.value as LogicUtil.ArgumentType);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(logicNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = reservedList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeArgumentItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getArgumentRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    // DependしているInheritのSendパラメータを同期する\r\n                                    syncArgumentDel(logicNode, name.value);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentItem;\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param node 引数のノード\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param logicNode ロジックノード\r\n*/\r\nconst syncArgumentName = (logicNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n    const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n    if (fieldMng != undefined) {\r\n        syncFormula((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n    }\r\n    const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n    if (visualMng != undefined) {\r\n        syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n    if (behaviorMng != undefined) {\r\n        syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n    if (inhMng != undefined) {\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n            // Inherit配下のField要素のチェック\r\n            if (inhfld != null) {\r\n                syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n            // Extend要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            // Send要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        });\r\n    }\r\n\r\n    const syncParamName = (params: LogicUtil.WrapElement[]) => {\r\n        params.forEach(wrap => {\r\n            const item = wrap.data as LogicUtil.NodeParamItem;\r\n            if (item.name === prevName) {\r\n                item.name = newName;\r\n            }\r\n        });\r\n    }\r\n    if (wrap.type === 'logic-item') {\r\n\r\n        // dependしている箇所を全て反映するために再帰で洗う\r\n        const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n            const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n            if (inhMng == undefined) return;\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    const inhLogic = LogicElementUtil.getInnerWrapFixed(inh, 'inherit-logic').data as LogicUtil.NodeLogicItem;\r\n                    runRec(inhLogic);\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    const sendMng = LogicElementUtil.getInnerWrapFixed(inh, 'send-mng').data as LogicUtil.NodeParamManager;\r\n                    syncParamName(sendMng.params);\r\n                }\r\n            });\r\n        }\r\n        // ロジックを全て調査する\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(logic => {\r\n            runRec((logic.data as LogicUtil.WrapElement).data);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        const root = (rootNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeRoot;\r\n        const defs = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        console.log(defs.length);\r\n        defs.forEach(wrap => {\r\n            const interfaceWrap = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng');\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(interfaceWrap, 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            syncParamName(sendMng.params);\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const connWrap = logicNode.parent?.data as LogicUtil.WrapElement;\r\n        const sendMng = LogicElementUtil.getInnerWrapFixed(connWrap, 'send-mng').data as LogicUtil.NodeParamManager;\r\n        syncParamName(sendMng.params);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の更新に伴い、参照先のSend管理に処理（callback）を行う\r\n * @param logicNode ロジックノード\r\n * @param callback 処理\r\n */\r\nconst syncArgumentCallback = (\r\n    logicNode: TreeUtil.ElementNode,\r\n    callback: (sendNode: TreeUtil.ElementNode) => void\r\n) => {\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n\r\n    if (wrap.type === 'logic-item') {\r\n        const runRec = (logicNode: TreeUtil.ElementNode) => {\r\n            const inhMngNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'inherit-mng');\r\n            if (inhMngNode == undefined) return;\r\n            inhMngNode.children.forEach(child => {\r\n                const conn = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    runRec(LogicElementUtil.getInnerNodeFixed(child, 'inherit-logic'));\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    callback(LogicElementUtil.getInnerNodeFixed(child, 'send-mng'));\r\n                }\r\n            });\r\n        }\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(child => {\r\n            runRec(child);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        rootNode.children[0].children.forEach(seedNode => {\r\n            const interfaceNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'interface-mng');\r\n            const sendNode = LogicElementUtil.getInnerNodeFixed(interfaceNode, 'seedsend-mng');\r\n            const seed = (seedNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n            if (seed.entry === logicItem.name) {\r\n                callback(sendNode);\r\n            }\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const sendNode = LogicElementUtil.getInnerNodeFixed(logicNode.parent as TreeUtil.ElementNode, 'send-mng');\r\n        callback(sendNode);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentAdd = (logicNode: TreeUtil.ElementNode, newArgName: string, type: LogicUtil.ArgumentType) => {\r\n    const addNewParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const isArray = type === 'array';\r\n        const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n            {\r\n                name: newArgName,\r\n                formulaItems: ['var'],\r\n                values: !isArray ? [{ type:  'direct', value: '0' }] : [{ type:  'array', value: '' }],\r\n                isArray: isArray ? true : undefined\r\n            }\r\n        );\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        sendMng.params.push(paramWrap);\r\n        sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n    }\r\n    syncArgumentCallback(logicNode, addNewParam);\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentDel = (logicNode: TreeUtil.ElementNode, delArgName: string) => {\r\n    const delArgParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        let delIndex = -1;\r\n        sendMng.params.some((param, i) => {\r\n            if ((param.data as LogicUtil.NodeParamItem).name == delArgName) {\r\n                delIndex = i;\r\n                return 1;\r\n            }\r\n        });\r\n        sendMng.params.splice(delIndex, 1);\r\n        sendNode.children.splice(delIndex, 1);\r\n    }\r\n    syncArgumentCallback(logicNode, delArgParam);\r\n}","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Seed',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seed-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedManager).defs.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorLogicMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Logic',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'logic-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\n\r\nconst EditorLogicItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [isConnect, hasArgNode, hasFieldNode, hasConnectNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        return [\r\n            parentType === 'connector',\r\n            list.includes('argument-mng'),\r\n            list.includes('field-mng'),\r\n            list.includes('inherit-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        if (!isConnect) {\r\n            const param = wrap.data as LogicUtil.NodeLogicItem;\r\n            setName({ ...name, value: param.name });\r\n        }\r\n    };\r\n\r\n    /** 既存のロジック名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => {\r\n        // インヘリットの場合、名前を持たないため取得しない\r\n        if (wrap.type === 'inherit-logic') return [];\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node, isConnect]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 引数要素の有無を判定\r\n     */\r\n    const hasArgument = () => {\r\n        const argumentNode = LogicElementUtil.getInnerNode(node, 'argument-mng');\r\n        if (argumentNode == null) return false;\r\n        return argumentNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'field-mng');\r\n        if (fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 派生要素の有無を判定\r\n     */\r\n    const hasInherit = () => {\r\n        const inheritNode = LogicElementUtil.getInnerNode(node, 'inherit-mng');\r\n        if (inheritNode == null) return false;\r\n        return inheritNode.children.length > 0;\r\n    }\r\n\r\n    return (<>\r\n        {isConnect ? <></> : (<>\r\n            <ModifyOperations.Component\r\n                mappingForm={mappingForm}\r\n                checkableFields={[name]}\r\n                firstRegist={() => {\r\n                    const element: LogicUtil.NodeLogicItem = {\r\n                        name: name.value,\r\n                        mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                    };\r\n                    element.name = name.value;\r\n                    wrap.data = element;\r\n\r\n                    element.mngs.forEach(mng => {\r\n                        const newNode = TreeUtil.createNode(mng, node);\r\n                        const data = (newNode.data as LogicUtil.WrapElement).data;\r\n                        (data as LogicUtil.NodeParamManager).params.forEach(param => {\r\n                            newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                        });\r\n                        node.children.push(newNode);\r\n                    });\r\n                    invalidate();\r\n                    setStore({ ...store });\r\n                }}\r\n                modifyRegist={() => {\r\n                    const param = wrap.data as LogicUtil.NodeLogicItem;\r\n                    const prevName = param.name;\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n                    // 名前が変わった場合、参照箇所も修正する\r\n                    if (prevName !== param.name) {\r\n                        syncLogicName(node, prevName, param.name);\r\n                    }\r\n                }}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"param\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Name\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={200}\r\n                                isReadOnly={!isModify}\r\n                                checkable={name}\r\n                                setCheckable={setName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => !existNameList.includes(value),\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n        </>)}\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Argument'}\r\n                        width={300}\r\n                        isUse={hasArgNode}\r\n                        isEnable={!hasArgument()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasArgNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'argument-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as LogicUtil.NodeArgumentManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            if (hasArgNode) listPos++;\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'field-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Inherit'}\r\n                            width={300}\r\n                            isUse={hasConnectNode}\r\n                            isEnable={!hasInherit()}\r\n                            callback={() => {\r\n                                let listPos = 2;\r\n                                if (hasArgNode) listPos++;\r\n                                if (hasFieldNode) listPos++;\r\n                                toggleElement(\r\n                                    hasConnectNode,\r\n                                    listPos,\r\n                                    {\r\n                                        type: 'inherit-mng',\r\n                                        data: {\r\n                                            inherits: []\r\n                                        } as LogicUtil.NodeConnectManager\r\n                                    }\r\n                                );\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        {isConnect ? <></> : (\r\n            <FormUtil.BorderPanel\r\n                title=\"operation\"\r\n                isEnable={!isModify}\r\n                innerJsx={<>\r\n                    {LogicElementUtil.getReplicateButton(node, !isModify, 'logic', store, setStore, invalidate)}\r\n                    {/* <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Replicate',\r\n                                isEnable: !isModify,\r\n                                // isEnable: false,\r\n                                callback: () => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Replicate this logic.\"\r\n                                        buttons={[\r\n                                            {\r\n                                                label: 'Cancel',\r\n                                                callback: () => {\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                label: 'Enter',\r\n                                                callback: () => {\r\n                                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                                    const name = wrap.data[namable] as string;\r\n                                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                    // mappingForm();\r\n                                                    invalidate();\r\n                                                }\r\n                                            }\r\n                                        ]}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    /> */}\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Delete',\r\n                                callback: () => {\r\n                                    const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                    const refers = getLocgicRefers(node, param.name);\r\n                                    if (refers.length === 0) {\r\n                                        removeSelf();\r\n                                    } else {\r\n                                        store.system.dialog = <ConfirmDialog.Component\r\n                                            message={`[${param.name}] is referenced in the Inherit.\\n${refers}`}\r\n                                        />;\r\n                                        setStore({ ...store });\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                    {/* 並び順入れ替えボタン */}\r\n                    {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n                </>}\r\n            />\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicItem;\r\n\r\n/**\r\n * ロジックを参照しているInheritのリストを返す。\r\n * @param node 現在のノード\r\n * @param logicName ロジック名\r\n * @returns 参照Inheritリスト\r\n */\r\nexport const getLocgicRefers = (node: TreeUtil.ElementNode, logicName: string) => {\r\n\r\n    const refers: string[] = [];\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        refers.push(conn.id);\r\n    }\r\n    searchLogicReferInherit(node, logicName, callback);\r\n    return refers;\r\n}\r\n\r\n/**\r\n * ロジック名の変更に伴い、参照しているインヘリットを同期する\r\n * @param node ロジックノード\r\n */\r\nconst syncLogicName = (node: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        conn.depend = newName;\r\n    }\r\n    searchLogicReferInherit(node, prevName, callback);\r\n}\r\n\r\nconst searchLogicReferInherit = (\r\n    node: TreeUtil.ElementNode,\r\n    logicName: string,\r\n    callback: (conn: LogicUtil.NodeInheritConnector) => void\r\n) => {\r\n    const logicMngNode = node.parent as TreeUtil.ElementNode\r\n    const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng == undefined) return;\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n            if (conn.method === 'create') {\r\n                const inhLogic = LogicElementUtil.getInnerWrap(inh, 'inherit-logic');\r\n                runRec(inhLogic?.data);\r\n            } else {\r\n                if (conn.depend === logicName) {\r\n                    callback(conn);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    logicMngNode.children.forEach(logic => {\r\n        runRec((logic.data as LogicUtil.WrapElement).data);\r\n    });\r\n}","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype FormProps = {\r\n    inputType: FormUtil.CheckableValue;\r\n    value: FormUtil.CheckableValue;\r\n};\r\n\r\nenum Level {\r\n    FIELD = 0,\r\n    INITIAL,\r\n    INHERIT_FIELD,\r\n    INHERIT_EXTEND,\r\n    INHERIT_SEND,\r\n    SEED = -1,\r\n}\r\n\r\nconst EditorParamItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    /** 名前 */\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    /** 式 */\r\n    const [formulaItems, setFormulaItems] = useState<string[]>([]);\r\n    /** 変数の入力フォーム */\r\n    const [varFormList, setVarFormList] = useState<FormProps[]>([]);\r\n    // const [formJsxList, setFaormJsxList] = useState<JSX.Element[]>([]);\r\n\r\n    const isField = wrap.type === 'field-item';\r\n    const isCondition = wrap.type === 'condition-item';\r\n\r\n    const mappingForm = () => {\r\n        console.log('mapping');\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        setName({ value: param.name, errors: [] });\r\n        setFormulaItems(param.formulaItems.slice());\r\n        setVarFormList(param.values.map(v => {\r\n            return {\r\n                inputType: { value: v.type, errors: [] },\r\n                value: { value: v.value, errors: [] }\r\n            }\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const level: Level = useMemo(() => {\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        switch (parentType) {\r\n            case 'field-mng': return Level.FIELD;\r\n            case 'visual-mng':\r\n            case 'behavior-mng': return Level.INITIAL;\r\n            case 'inhfld-mng': return Level.INHERIT_FIELD;\r\n            case 'extend-mng': return Level.INHERIT_EXTEND;\r\n            case 'send-mng': return Level.INHERIT_SEND;\r\n        }\r\n        return Level.SEED;\r\n    }, [node]);\r\n\r\n    /**\r\n     * 引数とフィールド変数のキーリストを取得する。\r\n     */\r\n    const [argumentList, arrayArgList, fieldKeyList] = useMemo(() => {\r\n        let argumentList: string[] = [];\r\n        let arrayArgList: string[] = [];\r\n        const fieldKeys: string[] = [];\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const targetTypes: LogicUtil.NodeType[] = ['field-mng', 'behavior-mng', 'visual-mng', 'inhfld-mng', 'send-mng', 'extend-mng'];\r\n        if (targetTypes.includes(parentType)) {\r\n            const getLogicNode = () => {\r\n                switch (parentType) {\r\n                    case 'field-mng':\r\n                    case 'visual-mng':\r\n                    case 'behavior-mng': return node.parent?.parent;\r\n                    case 'inhfld-mng':\r\n                    case 'send-mng':\r\n                    case 'extend-mng': return node?.parent?.parent?.parent?.parent;\r\n                }\r\n            };\r\n            const logicItem = (getLogicNode()?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n            // 引数リストを追加\r\n            const argMng = logicItem.mngs.find(mng => mng.type === 'argument-mng');\r\n            if (argMng != undefined) {\r\n                argumentList = (argMng.data as LogicUtil.NodeArgumentManager).args\r\n                    .filter(arg => {\r\n                        const param = wrap.data as LogicUtil.NodeParamItem;\r\n                        const data = arg.data as LogicUtil.NodeArgumentItem;\r\n                        // return (param.isList && data.valueType === 'array') || (!param.isList && data.valueType !== 'array');\r\n                        return data.valueType === 'number';\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n                arrayArgList = (argMng.data as LogicUtil.NodeArgumentManager).args\r\n                    .filter(arg => {\r\n                        const param = wrap.data as LogicUtil.NodeParamItem;\r\n                        const data = arg.data as LogicUtil.NodeArgumentItem;\r\n                        // return (param.isList && data.valueType === 'array') || (!param.isList && data.valueType !== 'array');\r\n                        return data.valueType === 'array';\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n            }\r\n            // 変数リストを追加\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (level >= Level.INITIAL && fieldMng != undefined) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                    fieldKeys.push(fieldName);\r\n                });\r\n            }\r\n        } else if (parentType === 'seedsend-mng') {\r\n            // シード配下のSendは特別に扱う（どのレベルにも属さない）\r\n            const argMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'seedarg-mng');\r\n            if (argMng != null) {\r\n                argumentList = (argMng.data as LogicUtil.NodeSeedArgManager).args\r\n                    .filter(arg => {\r\n                        const data = arg.data as LogicUtil.NodeSeedArgItem;\r\n                        return !data.isArray;\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n                arrayArgList = (argMng.data as LogicUtil.NodeSeedArgManager).args\r\n                    .filter(arg => {\r\n                        const data = arg.data as LogicUtil.NodeSeedArgItem;\r\n                        return data.isArray;\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n            } else throw new Error('argMng is undefined.');\r\n        }\r\n        if (level >= Level.INHERIT_FIELD) {\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_RAD);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_LEN);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.RADIUS);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_R);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_G);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_B);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // フィールドキーにInherit配下のFieldパラメータを追加\r\n            if (level >= Level.INHERIT_EXTEND) {\r\n                const inhfldNode = LogicElementUtil.getInnerNode(node.parent?.parent as TreeUtil.ElementNode, 'inhfld-mng');\r\n                if (inhfldNode != null) {\r\n                    const fieldMng = (inhfldNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeFieldManager;\r\n                    fieldMng.fields.forEach(field => {\r\n                        const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                        fieldKeys.push(fieldName);\r\n                    });\r\n                }\r\n            }\r\n            // フィールドキーにExtendパラメータを追加\r\n            if (level === Level.INHERIT_SEND) {\r\n                const extendWrap = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'extend-mng') as LogicUtil.WrapElement;\r\n                const extendElement = extendWrap.data as LogicUtil.NodeParamManager;\r\n                //Extendにloop_countのパラメータがある場合\r\n                if (extendElement.params.find(\r\n                    param => (param.data as LogicUtil.NodeParamItem).name === ParamUtil.ExtendParamType.LOOP_COUNT\r\n                ) != undefined) {\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_COUNT);\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_ITERATE);\r\n                }\r\n            }\r\n        }\r\n        return [argumentList, arrayArgList, fieldKeys];\r\n    }, [node]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const paramNameList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (item === 'var') num++;\r\n        });\r\n\r\n        if (varFormList.length < num) {\r\n            const addNum = num - varFormList.length;\r\n            for (let i = 0; i < addNum; i++) varFormList.push({\r\n                inputType: { value: 'direct', errors: [] },\r\n                value: { value: '', errors: [] }\r\n            });\r\n            setVarFormList(varFormList.slice());\r\n        } else if (varFormList.length > num) {\r\n            const delNum = varFormList.length - num;\r\n            for (let i = 0; i < delNum; i++) varFormList.splice(varFormList.length - delNum, delNum);\r\n            setVarFormList(varFormList.slice());\r\n        }\r\n    }, [formulaItems]);\r\n\r\n    /** 「(」の数-「)」の数 */\r\n    const parenthesisBalance = useMemo(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (['(', 'rand(', 'integer('].includes(item)) num++;\r\n            else if (item === ')') num--;\r\n        });\r\n        return num;\r\n    }, [formulaItems]);\r\n\r\n    /** 値の入力フォームのJSX */\r\n    const formJsxList = useMemo(() => {\r\n        return varFormList.map((v, i) => {\r\n\r\n            const getValueForm = (): JSX.Element => {\r\n                const type = v.inputType.value as LogicUtil.ParamInputType;\r\n                if (type === 'direct') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isNumber\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else if (type === 'array') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkArrayNumber(value),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else {\r\n                    const isArray = (wrap.data as LogicUtil.NodeParamItem).isArray;\r\n                    let list: string[] = [];\r\n                    switch (type) {\r\n                        case 'argument': {\r\n                            list = !isArray ? argumentList : arrayArgList;\r\n                        } break;\r\n                        case 'field': {\r\n                            list = fieldKeyList;\r\n                        } break;\r\n                        case 'self': {\r\n                            list = ParamUtil.SelfParams;\r\n                        } break;\r\n                        case 'constant': {\r\n                            list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                        } break;\r\n                        case 'array.itr': {\r\n                            list = arrayArgList.map(name => name + '.itr');\r\n                        } break;\r\n                        case 'array.len': {\r\n                            list = arrayArgList.map(name => name + '.len');\r\n                        } break;\r\n                    }\r\n                    // if (type === 'argument') {\r\n                    //     list = argumentList;\r\n                    // } else if (type === 'field') {\r\n                    //     list = fieldKeyList;\r\n                    // } else if (type === 'self') {\r\n                    //     list = ParamUtil.SelfParams;\r\n                    // } else if (type === 'constant') {\r\n                    //     list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                    // }\r\n                    return (\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            list={list.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n            return <FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={`var_${i}`}\r\n                labelWidth={90}\r\n                marginTop={i === 0 ? 4 : 0}\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        checkable={v.inputType}\r\n                        width={142}\r\n                        isReadOnly={!isModify}\r\n                        setCheckable={(checkable) => {\r\n                            varFormList[i].inputType = checkable;\r\n                            if (isModify) {\r\n                                varFormList[i].value.value = checkable.value === 'direct' ? '0' : '';\r\n                            }\r\n                            setVarFormList(varFormList.slice());\r\n                        }}\r\n                        list={LogicUtil.ParamInputTypes.filter(item => {\r\n                            const param = wrap.data as LogicUtil.NodeParamItem;\r\n                            const isArray = param == undefined ? false : param.isArray ?? false;\r\n                            if (!isArray) {\r\n                                switch (item) {\r\n                                    case 'direct':\r\n                                    case 'constant':\r\n                                    case 'argument': return true;\r\n                                    case 'field': return level >= Level.INITIAL;\r\n                                    case 'array.len':\r\n                                    case 'self': return level >= Level.INHERIT_FIELD;\r\n                                    case 'array.itr': return level >= Level.INHERIT_SEND;\r\n                                    case 'array': return false;\r\n                                }\r\n                            } else {\r\n                                switch (item) {\r\n                                    case 'direct':\r\n                                    case 'constant':\r\n                                    case 'self':\r\n                                    case 'field': return false;\r\n                                    case 'array':\r\n                                    case 'argument': return true;\r\n                                }\r\n                            }\r\n                        }).map(item => {\r\n                            return { value: item, labelText: item };\r\n                        })}\r\n                    />\r\n                    {getValueForm()}\r\n                </>}\r\n            />;\r\n        });\r\n    }, [varFormList, isModify]);\r\n\r\n    const getFormulaJsx = () => {\r\n        let num = 0;\r\n        const jsxList: JSX.Element[] = [];\r\n        formulaItems.forEach((item) => {\r\n            if (jsxList.length > 0) {\r\n                jsxList.push(<span key={jsxList.length}>&nbsp;</span>);\r\n            }\r\n            if (item === 'var') {\r\n                jsxList.push(<_Var key={jsxList.length}>{`$\\{var_${num}}`}</_Var>);\r\n                num++;\r\n            } else {\r\n                jsxList.push(<_Sig key={jsxList.length}>{item}</_Sig>);\r\n            }\r\n        });\r\n        return jsxList;\r\n    }\r\n\r\n    const isLastVar = () => formulaItems.length > 0 && ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const isFormulaOK = parenthesisBalance === 0 && varFormList.length > 0 &&\r\n        ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const hasFormError = !isFormulaOK || varFormList.find(varForm => varForm.value.errors.length > 0) != undefined;\r\n\r\n\r\n    const getFormulaItem = (label: string, width: number, isEnable: boolean, value: string) => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        const isArray = param == undefined ? false : param.isArray ?? false;\r\n        return {\r\n            label, width, isEnable: isArray ? false : isEnable,\r\n            callback: () => {\r\n                formulaItems.push(value);\r\n                setFormulaItems(formulaItems.slice());\r\n            }\r\n        };\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeParamItem = {\r\n                    name: name.value,\r\n                    formulaItems: formulaItems.slice(),\r\n                    values: varFormList.map(varForm => {\r\n                        return {\r\n                            type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                            value: varForm.value.value\r\n                        }\r\n                    })\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n            }}\r\n            isInputOK={parenthesisBalance === 0 && !hasFormError && name.errors.length === 0}\r\n            modifyRegist={() => {\r\n                const data = wrap.data as LogicUtil.NodeParamItem;\r\n                data.formulaItems = formulaItems.slice();\r\n                data.values = varFormList.map(varForm => {\r\n                    return {\r\n                        type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                        value: varForm.value.value\r\n                    }\r\n                });\r\n                if (isField) {\r\n                    const prevName = data.name;\r\n                    data.name = name.value;\r\n                    if (prevName !== name.value) {\r\n                        syncFieldName(node.parent as TreeUtil.ElementNode, prevName, name.value);\r\n                    }\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify || !isField}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = paramNameList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeParamItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('+', 50, isModify && isLastVar(), '+'),\r\n                        getFormulaItem('-', 50, isModify && isLastVar(), '-'),\r\n                        getFormulaItem('*', 50, isModify && isLastVar(), '*'),\r\n                        getFormulaItem('/', 50, isModify && isLastVar(), '/'),\r\n                        getFormulaItem('%', 50, isModify && isLastVar(), '%'),\r\n                        getFormulaItem('(', 35, isModify && !isLastVar(), '('),\r\n                        getFormulaItem(')', 35, isModify && isLastVar() && parenthesisBalance > 0, ')'),\r\n                        {\r\n                            label: 'del',\r\n                            width: 60,\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            callback: () => {\r\n                                formulaItems.splice(formulaItems.length - 1, 1);\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {!isCondition ? <></> : (\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            getFormulaItem('<', 50, isModify && isLastVar(), '<'),\r\n                            getFormulaItem('<=', 50, isModify && isLastVar(), '<='),\r\n                            getFormulaItem('=', 50, isModify && isLastVar(), '='),\r\n                            getFormulaItem('>=', 50, isModify && isLastVar(), '>='),\r\n                            getFormulaItem('>', 50, isModify && isLastVar(), '>'),\r\n                            getFormulaItem('&&', 50, isModify && isLastVar(), '&&'),\r\n                            getFormulaItem('||', 50, isModify && isLastVar(), '||'),\r\n                        ]}\r\n                    />\r\n                )}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('var', 70, isModify && !isLastVar(), 'var'),\r\n                        getFormulaItem('rand', 80, isModify && !isLastVar(), 'rand('),\r\n                        getFormulaItem('integer', 80, isModify && !isLastVar(), 'integer('),\r\n                        {\r\n                            label: 'clear',\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            width: 90,\r\n                            callback: () => {\r\n                                setFormulaItems([]);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_Formula\r\n                    isInvalid={!isFormulaOK}\r\n                >{getFormulaJsx()}</_Formula>\r\n                {formJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify && isField}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'field', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getFieldRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {!isField ? <></> : LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorParamItem;\r\n\r\n/**\r\n * ノードの変数を参照している箇所のリストを返す。\r\n * @param node 変数のノード\r\n * @param argName 変数名\r\n * @returns 参照パラメータリスト\r\n */\r\nexport const getFieldRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n * フィールド名の変更に伴い、式で参照している変数を同期する\r\n * @param mngNode ノード\r\n */\r\nexport const syncFieldName = (mngNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const type = (mngNode.data as LogicUtil.WrapElement).type;\r\n    if (type === 'field-mng') {\r\n        const logic = (mngNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n\r\n        const visualMng = logic.mngs.find(mng => mng.type === 'visual-mng');\r\n        if (visualMng != undefined) {\r\n            syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const behaviorMng = logic.mngs.find(mng => mng.type === 'behavior-mng');\r\n        if (behaviorMng != undefined) {\r\n            syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                // Inherit配下のField要素のチェック\r\n                if (inhfld != null) {\r\n                    syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                }\r\n                // Extend要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    } else if (type === 'inhfld-mng') {\r\n        const inheritWrap = mngNode.parent?.data as LogicUtil.WrapElement;\r\n\r\n        // Extend要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        // Send要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n}\r\n\r\nconst _Formula = styled.div<{\r\n    isInvalid: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 12px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    overflow-wrap: break-word;\r\n    height: 100px;//calc(100% - 4px);\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    background-color: #ffffff8b;\r\n    ${props => !props.isInvalid ? '' : css`\r\n        background-color: #ffe8628a;\r\n    `}\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    padding: 0 0 0 4px;\r\n    vertical-align: top;\r\n    margin: 5px 0 0 6px;\r\n`;\r\nconst _Var = styled.span`\r\n    color: #e70013;\r\n`;\r\nconst _Sig = styled.span`\r\n    color: #3333339d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorBehiviorMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [isVector, hasDecayParam, hasGravityParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.BehaviorParamType.VEC_X),\r\n            list.includes(ParamUtil.ModulateParamType.DECAY_RATE),\r\n            list.includes(ParamUtil.ModulateParamType.GRAVITY_VAL)\r\n        ]\r\n    }, [node]);\r\n\r\n    const exchangeElements = (flag: boolean, listPos: number,\r\n        trueParamElements: LogicUtil.NodeParamItem[],\r\n        falseParamElements: LogicUtil.NodeParamItem[]\r\n    ) => {\r\n        const size = (flag ? trueParamElements : falseParamElements).length;\r\n        LogicElementUtil.removeChild(node, listPos, size);\r\n\r\n        (flag ? trueParamElements : falseParamElements).forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    const exchangeVectorMethod = () => {\r\n        exchangeElements(!isVector, 3,\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_X, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_Y, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ],\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_RAD, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_LEN, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ]\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            mng.params.splice(listPos, size);\r\n            node.children.splice(listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                mng.params.splice(listPos + i, 0, wrap);\r\n                const newNode = TreeUtil.createNode(wrap, node);\r\n                node.children.splice(listPos + i, 0, newNode);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Vector method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Direction method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={!isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"modulate\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Decay'}\r\n                            width={300}\r\n                            isUse={hasDecayParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDecayParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_RATE,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.9' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Gravity'}\r\n                            width={300}\r\n                            isUse={hasGravityParam}\r\n                            callback={() => {\r\n                                toggleElements(hasGravityParam, !hasDecayParam ? 5 : 7, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_VAL,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.2' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorBehiviorMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype Medhod = 'blank' | 'particle' | 'snake'\r\n\r\nconst EditorVisualMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [drawMethod, hasDisappearParam, hasShrinkParam, hasFlashParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        let drawMethod: Medhod = 'blank';\r\n        if(list.length > 0) {\r\n            drawMethod = list.includes(ParamUtil.VisualParamType.THICKNESS) ? 'snake' : 'particle';\r\n        }\r\n        return [\r\n            drawMethod,\r\n            list.includes(ParamUtil.EffectParamType.DISAPPEAR_START),\r\n            list.includes(ParamUtil.EffectParamType.SHRINK_START),\r\n            list.includes(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME)\r\n        ]\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    const addElements = (paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        paramElements.forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n    const removeElements = (elementNameList: string[]) => {\r\n        const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        elementNameList.forEach((name) => {\r\n            mng.params.forEach((param, i) => {\r\n                if((param.data as LogicUtil.NodeParamItem).name === name) {\r\n                    LogicElementUtil.removeChild(node, i, 1);\r\n                }\r\n            });\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam || hasFlashParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'None'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'blank'}\r\n                            callback={() => {\r\n                                mng.params.length = 0;\r\n                                node.children.length = 0;\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Snake Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'snake'}\r\n                            callback={() => {\r\n                                removeElements([\r\n                                    ParamUtil.VisualParamType.RADIUS\r\n                                ]);\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.THICKNESS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Particle Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'particle'}\r\n                            callback={() => {\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.RADIUS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '20' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"effect\"\r\n            isEnable={!isModify && drawMethod !== 'blank'}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Disappear'}\r\n                            width={300}\r\n                            isUse={hasDisappearParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDisappearParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.DISAPPEAR_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Shrink'}\r\n                            width={300}\r\n                            isUse={hasShrinkParam}\r\n                            callback={() => {\r\n                                toggleElements(hasShrinkParam, !hasDisappearParam ? 5 : 6, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.SHRINK_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Flash'}\r\n                            width={300}\r\n                            isUse={hasFlashParam}\r\n                            callback={() => {\r\n                                toggleElements(hasFlashParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_APPEAR_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_HIDE_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorVisualMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInheritConnMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeConnectManager;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Inherit',\r\n                        callback: () => {\r\n                            const wrap: LogicUtil.WrapElement = {\r\n                                type: 'connector',\r\n                                data: null\r\n                            }\r\n                            mng.inherits.push(wrap);\r\n                            const newNode = TreeUtil.createNode(wrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorInheritConnector = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, invalidate, setModify, isModify, removeSelf, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const [condition, setCondition] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [identify, setIdentify] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [method, setMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [depend, setDepend] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n        setMethod({ ...method, value: param.method });\r\n        setDepend({ ...depend, value: param.depend });\r\n        setIdentify({ ...identify, value: param.id });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n            // 派生識別名（自動命名）の初期値を取得\r\n            const defaultName = LogicElementUtil.getNumberingOnPrefixName('id_', node.parent as TreeUtil.ElementNode);\r\n            setIdentify({ ...identify, value: defaultName });\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const isCreate = method.value === 'create';\r\n\r\n    const hasFieldNode = useMemo(() => {\r\n        return LogicElementUtil.getInnerNode(node, 'inhfld-mng') != null;\r\n    }, [node]);\r\n\r\n    /** 引用するロジックリスト */\r\n    const logicList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return inheritMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    /** 同階層の既存のインヘリットIDを取得（重複チェックに使用） */\r\n    const idList = useMemo(() => {\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    const initConnectorNode = (param: LogicUtil.NodeInheritConnector) => {\r\n        param.mngs = [];\r\n        node.children = [];\r\n        param.mngs.push({\r\n            type: 'extend-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        param.mngs.push({\r\n            type: 'send-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        if (isCreate) {\r\n            param.mngs.push({\r\n                type: 'inherit-logic',\r\n                data: {\r\n                    mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                } as LogicUtil.NodeInheritItem\r\n            });\r\n        }\r\n        wrap.data = param;\r\n\r\n        param.mngs.forEach(mng => {\r\n            const newNode = TreeUtil.createNode(mng, node);\r\n            const data = (newNode.data as LogicUtil.WrapElement);\r\n            switch (data.type) {\r\n                case 'inherit-logic': {\r\n                    LogicElementUtil.syncTreeElementFromWrap(newNode);\r\n                } break;\r\n                case 'send-mng': {\r\n                    const connector = (newNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.method === 'depend') {\r\n                        console.log('initSendParams');\r\n                        initSendParams(newNode, rootData);\r\n                    }\r\n                } break;\r\n            }\r\n            node.children.push(newNode);\r\n        });\r\n    }\r\n\r\n    const getSendParamList = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement): string[] => {\r\n        const connector = (sendNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = inheritMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement) => {\r\n        const sendParamList = getSendParamList(sendNode, rootData);\r\n        // console.log(sendParamList);\r\n        const wrap = sendNode.data as LogicUtil.WrapElement;\r\n        const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n                sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'inhfld-mng');\r\n        if(fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n\r\n    const isDisable = wrap.data == null ? false : (wrap.data as LogicUtil.NodeInheritConnector).disable ?? false;\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[identify, method, depend]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeInheritConnector = {\r\n                    method: method.value as LogicUtil.InheritMethod,\r\n                    depend: depend.value,\r\n                    id: identify.value,\r\n                    mngs: []\r\n                };\r\n                initConnectorNode(param);\r\n                invalidate();\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                const isChange = param.method !== method.value || param.depend !== depend.value;\r\n                param.method = method.value as LogicUtil.InheritMethod;\r\n                param.depend = depend.value;\r\n                param.id = identify.value;\r\n                wrap.data = param;\r\n\r\n                if (isChange) {\r\n                    initConnectorNode(param);\r\n                }\r\n                invalidate();\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={method}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                // createが選択されたらdependを空にする\r\n                                if (checkable.value === 'create') {\r\n                                    setDepend({ ...depend, value: '' });\r\n                                }\r\n                                setMethod(checkable);\r\n                            }}\r\n                            list={LogicUtil.ConnectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Depend\"\r\n                    isEnabled={method.value === 'depend'}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={depend}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setDepend}\r\n                            list={logicList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            dependency={[method]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => {\r\n                                        return method.value !== 'depend' || ValidateUtil.checkRequired(value);\r\n                                    },\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Identify\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={identify}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setIdentify}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !idList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                0,\r\n                                {\r\n                                    type: 'inhfld-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Disable'}\r\n                        width={300}\r\n                        isUse={isDisable}\r\n                        isEnable={!isModify}\r\n                        callback={() => {\r\n                            const data = (wrap.data as LogicUtil.NodeInheritConnector);\r\n                            if (isDisable) {\r\n                                data.disable = undefined;\r\n                            } else {\r\n                                data.disable = true;\r\n                            }\r\n                            invalidate();\r\n                        }}\r\n                    />}\r\n                />\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'inherit', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Edit local',\r\n                            isEnable: !isModify && !isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Create a clone from the depended inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                                                const logicList = logicMng.defs.map(def => def.data as LogicUtil.NodeLogicItem);\r\n                                                // ディペンドしているロジックを取得\r\n                                                const dependLogic = logicList.find(inherit => inherit.name === depend.value);\r\n                                                if (dependLogic != undefined) {\r\n                                                    const cloneLogic = JSON.parse(JSON.stringify(dependLogic)) as LogicUtil.NodeLogicItem;\r\n                                                    const connectItem: LogicUtil.NodeInheritItem = {\r\n                                                        mngs: cloneLogic.mngs\r\n                                                    };\r\n                                                    const newWrap: LogicUtil.WrapElement = {\r\n                                                        type: 'inherit-logic',\r\n                                                        data: connectItem\r\n                                                    };\r\n                                                    const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                                                    // 子要素の展開\r\n                                                    newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                    const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                    param.method = 'create';\r\n                                                    param.depend = '';\r\n                                                    mappingForm();\r\n                                                }\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Detach global',\r\n                            isEnable: !isModify && isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Detach a clone from the this inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                let rootNode = node;\r\n                                                while (rootNode.parent != null) rootNode = rootNode.parent;\r\n                                                const inheritNode = node.children.find(el => (el.data as LogicUtil.WrapElement).type === 'inherit-logic');\r\n                                                const logicMngNode = rootNode.children.find(el => (el.data as LogicUtil.WrapElement).type === 'logic-mng');\r\n                                                if (logicMngNode == undefined || inheritNode == undefined) return;\r\n                                                const inherit = (inheritNode.data as LogicUtil.WrapElement).data;\r\n                                                const clone = JSON.parse(JSON.stringify((inherit))) as LogicUtil.NodeInheritItem;\r\n                                                // ロジック名（自動命名）を取得\r\n                                                const defaultName = LogicElementUtil.getNumberingOnPrefixName('clone_inherit_', logicMngNode);\r\n                                                const logicItem: LogicUtil.NodeLogicItem = {\r\n                                                    ...clone,\r\n                                                    name: defaultName\r\n                                                };\r\n                                                const newWrap: LogicUtil.WrapElement = {\r\n                                                    type: 'logic-item',\r\n                                                    data: logicItem\r\n                                                };\r\n\r\n                                                // ロジックマネージャに追加\r\n                                                const newNode = LogicElementUtil.addChild(newWrap, logicMngNode);\r\n                                                // 子要素の展開\r\n                                                newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                // 自身（コネクタ）からインヘリット要素を削除\r\n                                                LogicElementUtil.removeChild(node, 2, 1);\r\n\r\n                                                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                param.method = 'depend';\r\n                                                param.depend = logicItem.name;\r\n                                                mappingForm();\r\n\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnector;","import styled, { css } from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport { useContext, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport DrawUtil from \"../../../graphic/drawUtil\";\r\n\r\nconst FRAME_WIDTH = 402;\r\nnamespace DrawableVectorChooser {\r\n\r\n    export const ComponentNormal = (props: {\r\n        addPoint: (x: number, y: number) => void;\r\n        clear: () => void;\r\n        xList: number[];\r\n        yList: number[];\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const screenRate = store.env.screenRate;\r\n\r\n        const [isDraw, setDraw] = useState(false);\r\n        const ref = useRef<HTMLDivElement>(null);\r\n\r\n        const pointJsxList = useMemo(() => {\r\n            return props.xList.map((x, i) => {\r\n\r\n                const y = props.yList[i];\r\n                return (\r\n                    <_Point key={i}\r\n                        x={x}\r\n                        y={y}\r\n                    />\r\n                );\r\n            });\r\n        }, [props.xList.length]);\r\n\r\n\r\n        const putAction = (x: number, y: number) => {\r\n            setDraw(true);\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2);\r\n            store.env.scrollLock = true;\r\n            setStore({ ...store });\r\n        }\r\n\r\n        const moveAction = (x: number, y: number) => {\r\n            if (!isDraw) return;\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            const subX = posX - (props.xList[props.xList.length - 1] + FRAME_WIDTH / 2);\r\n            const subY = posY - (props.yList[props.yList.length - 1] + FRAME_WIDTH / 2);\r\n            const distance = Math.sqrt(subX * subX + subY * subY);\r\n            if (distance > 10) props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2);\r\n        }\r\n\r\n        const releaseAction = () => {\r\n            setDraw(false);\r\n            store.env.scrollLock = false;\r\n            setStore({ ...store });\r\n        }\r\n\r\n        return (<>\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"Point\"\r\n                jsx={\r\n                    <FormUtil.FixedText\r\n                        value={props.xList.length.toString()}\r\n                        isRecordItem\r\n                    />\r\n                }\r\n            />\r\n            <_Frame\r\n                ref={ref}\r\n                onMouseDown={(e) => { putAction(e.clientX, e.clientY) }}\r\n                onMouseMove={(e) => { moveAction(e.clientX, e.clientY) }}\r\n                onMouseUp={releaseAction}\r\n                onMouseLeave={releaseAction}\r\n                onTouchStart={(e) => { putAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchMove={(e) => { moveAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchEnd={releaseAction}\r\n                onTouchCancel={releaseAction}\r\n                isDraw={store.env.scrollLock}\r\n            >\r\n                <_Center />\r\n                {pointJsxList}\r\n            </_Frame>\r\n            <FormUtil.ButtonRecord buttons={[\r\n                {\r\n                    label: 'Clear',\r\n                    isEnable: props.xList.length > 0,\r\n                    callback: props.clear,\r\n                }\r\n            ]} />\r\n        </>);\r\n    }\r\n\r\n    export const ComponentColorable = (props: {\r\n        addPoint: (x: number, y: number, r: number, g: number, b: number) => void;\r\n        clear: () => void;\r\n        xList: number[];\r\n        yList: number[];\r\n        rList: number[];\r\n        gList: number[];\r\n        bList: number[];\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const screenRate = store.env.screenRate;\r\n\r\n        const [isDraw, setDraw] = useState(false);\r\n        const [colorHistory, setColorHistory] = useState<string[]>([]);\r\n\r\n        const [r, setR] = useState(255);\r\n        const [g, setG] = useState(255);\r\n        const [b, setB] = useState(255);\r\n\r\n        const ref = useRef<HTMLDivElement>(null);\r\n\r\n        const pointJsxList = useMemo(() => {\r\n            return props.xList.map((x, i) => {\r\n                const y = props.yList[i];\r\n                const r = props.rList[i];\r\n                const g = props.gList[i];\r\n                const b = props.bList[i];\r\n                const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                    r: Number(r),\r\n                    g: Number(g),\r\n                    b: Number(b),\r\n                    a: 255\r\n                }).substring(0, 7);\r\n                return (\r\n                    <_PointColorable key={i}\r\n                        x={x}\r\n                        y={y}\r\n                        color={colorCode}\r\n                    />\r\n                );\r\n            });\r\n        }, [props.xList.length]);\r\n\r\n\r\n        const colorHistoryJsxList = useMemo(() => {\r\n            return colorHistory.map((history, i) => {\r\n                return (\r\n                    <_ColorItem key={i}\r\n                        color={history}\r\n                        onClick={()=> {\r\n                            const rgba = DrawUtil.convertRgbaFromColorCode(history + 'ff');\r\n                            if (rgba != null) {\r\n                                setR(rgba.r);\r\n                                setG(rgba.g);\r\n                                setB(rgba.b);\r\n                            }\r\n                        }}\r\n                    />\r\n                );\r\n            });\r\n        }, [colorHistory]);\r\n\r\n        const addColorHistory = () => {\r\n            const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                r: Number(r),\r\n                g: Number(g),\r\n                b: Number(b),\r\n                a: 255\r\n            }).substring(0, 7);\r\n            if (colorHistory.find(ch => ch === colorCode) == undefined) {\r\n                colorHistory.push(colorCode);\r\n                if(colorHistory.length > 15) colorHistory.shift();\r\n                setColorHistory(colorHistory.slice());\r\n            }\r\n        };\r\n\r\n        const putAction = (x: number, y: number) => {\r\n            setDraw(true);\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2, r, g, b);\r\n            store.env.scrollLock = true;\r\n            setStore({ ...store });\r\n            addColorHistory();\r\n        }\r\n\r\n        const moveAction = (x: number, y: number) => {\r\n            if (!isDraw) return;\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            const subX = posX - (props.xList[props.xList.length - 1] + FRAME_WIDTH / 2);\r\n            const subY = posY - (props.yList[props.yList.length - 1] + FRAME_WIDTH / 2);\r\n            const distance = Math.sqrt(subX * subX + subY * subY);\r\n            if (distance > 10) props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2, r, g, b);\r\n        }\r\n\r\n        const releaseAction = () => {\r\n            setDraw(false);\r\n            store.env.scrollLock = false;\r\n            setStore({ ...store });\r\n        }\r\n\r\n        const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n            r: Number(r),\r\n            g: Number(g),\r\n            b: Number(b),\r\n            a: 255\r\n        }).substring(0, 7);\r\n        return (<>\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"Point\"\r\n                jsx={\r\n                    <FormUtil.FixedText\r\n                        value={props.xList.length.toString()}\r\n                        isRecordItem\r\n                    />\r\n                }\r\n            />\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"Color\"\r\n                jsx={\r\n                    <_Color type=\"color\" value={colorCode}\r\n                        // disabled={isReadOnly}\r\n                        onChange={(value) => {\r\n                            const rgba = DrawUtil.convertRgbaFromColorCode(value.target.value + 'ff');\r\n                            if (rgba != null) {\r\n                                setR(rgba.r);\r\n                                setG(rgba.g);\r\n                                setB(rgba.b);\r\n                            }\r\n                        }}\r\n                    />\r\n                }\r\n            />\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"History\"\r\n                jsx={<>{colorHistoryJsxList}</>}\r\n            />\r\n            <_Frame\r\n                ref={ref}\r\n                onMouseDown={(e) => { putAction(e.clientX, e.clientY) }}\r\n                onMouseMove={(e) => { moveAction(e.clientX, e.clientY) }}\r\n                onMouseUp={releaseAction}\r\n                onMouseLeave={releaseAction}\r\n                onTouchStart={(e) => { putAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchMove={(e) => { moveAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchEnd={releaseAction}\r\n                onTouchCancel={releaseAction}\r\n                isDraw={store.env.scrollLock}\r\n            >\r\n                <_Center />\r\n                {pointJsxList}\r\n            </_Frame>\r\n            <FormUtil.ButtonRecord buttons={[\r\n                {\r\n                    label: 'Clear',\r\n                    isEnable: props.xList.length > 0,\r\n                    callback: () => {\r\n                        props.clear();\r\n                        setColorHistory([]);\r\n                    },\r\n                }\r\n            ]} />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default DrawableVectorChooser;\r\n\r\nconst _Frame = styled.div<{\r\n    isDraw: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${FRAME_WIDTH}px;\r\n    height: ${FRAME_WIDTH}px;\r\n    margin: 0 0 0 3px;\r\n    background-color: #2e7085;\r\n    ${props => !props.isDraw ? '' : css`\r\n        background-color: #5c9caf;\r\n    `}\r\n    border: 2px solid #800;\r\n    box-sizing: border-box;\r\n    touch-action: none;\r\n`;\r\n\r\nconst _Point = styled.div<{\r\n    x: number;\r\n    y: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x + FRAME_WIDTH / 2 - 5}px;\r\n    top: ${props => props.y + FRAME_WIDTH / 2 - 5}px;\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 10px;\r\n    background-color: #fcfeff9d;\r\n    border: 1px solid #dfe5ff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _PointColorable = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x + FRAME_WIDTH / 2 - 5}px;\r\n    top: ${props => props.y + FRAME_WIDTH / 2 - 5}px;\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 10px;\r\n    background-color: ${props => props.color};\r\n    border: 1px solid #dfe5ff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ColorItem = styled.div<{\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    border-radius: 4px;\r\n    background-color: ${props => props.color};\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n    margin: 6px 0 0 3px;\r\n    width: 15px;\r\n    height: 28px;\r\n`;\r\n\r\nconst _Center = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${FRAME_WIDTH / 2 - 10}px;\r\n    top: ${FRAME_WIDTH / 2 - 10}px;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 20px;\r\n    background-color: #800;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Color = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 3px 0 0 6px;\r\n    width: 100px;\r\n    height: 34px;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSendManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const isDepend = () => {\r\n        const conn = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        return conn.method === 'depend';\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"template\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Connect Position',\r\n                            isEnable: !isDepend(),\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.ConnectParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Set Position',\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.SetParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSendManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFieldMng = () => {\r\n    const { invalidate, node, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Field',\r\n                        callback: () => {\r\n                            // const newWrap: FactoryUtil.WrapNode = FactoryUtil.createParamWrap('field-item',\r\n                            //     { name: '', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                            // );\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'field-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFieldMng;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorExtendMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [hasLoopParam, hasInvokeParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name as ParamUtil.ExtendParam;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.ExtendParamType.LOOP_COUNT),\r\n            list.includes(ParamUtil.ExtendParamType.INVOKE)\r\n        ]\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Loop'}\r\n                            width={300}\r\n                            isUse={hasLoopParam}\r\n                            callback={() => {\r\n                                toggleElement(hasLoopParam, 0, {\r\n                                    type: 'param-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.LOOP_COUNT,\r\n                                        formulaItems: ['var'],\r\n                                        values: [{ type: 'direct', value: '1' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Invoke'}\r\n                            width={300}\r\n                            isUse={hasInvokeParam}\r\n                            callback={() => {\r\n                                toggleElement(hasInvokeParam, hasLoopParam ? 1 : 0, {\r\n                                    type: 'condition-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.INVOKE,\r\n                                        formulaItems: ['var', '=', 'var'],\r\n                                        values: [{ type: 'direct', value: '0' }, { type: 'direct', value: '0' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorExtendMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\n\r\nconst EditorSeedItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [entry, setEntry] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [permit, setPermit] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setEntry({ ...entry, value: param.entry });\r\n        setPermit({ ...permit, value: param.permit })\r\n    };\r\n\r\n    /** 既存のシード名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    // 引用するロジックリスト\r\n    const logicNameList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const logicMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return logicMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    const getSendParamList = (): LogicUtil.NodeArgumentItem[] => {\r\n        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n        const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = logicMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return arg.data as LogicUtil.NodeArgumentItem;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = () => {\r\n        const sendParamList = getSendParamList();\r\n        const sendNode = LogicElementUtil.getInnerNode(node, 'interface-mng', 'seedsend-mng') as TreeUtil.ElementNode;\r\n        const params = ((sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param.name)) {\r\n                const isArray = param.valueType === 'array';\r\n                const paramWrap = LogicElementUtil.createParamWrap('seedsend-item',\r\n                    {\r\n                        name: param.name,\r\n                        formulaItems: ['var'],\r\n                        values: !isArray ? [{ type:  'direct', value: '0' }] : [{ type:  'array', value: '' }],\r\n                        isArray: isArray ? true : undefined\r\n                    }\r\n                );\r\n                params.push(paramWrap);\r\n            }\r\n        });\r\n        LogicElementUtil.syncTreeElementFromWrap(sendNode);\r\n    }\r\n\r\n    const getDefaultSeedMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'interface-mng',\r\n                data: {\r\n                    mngs: [\r\n                        {\r\n                            type: 'seedarg-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeSeedArgManager\r\n                        },\r\n                        {\r\n                            type: 'seedsend-mng',\r\n                            data: {\r\n                                params: []\r\n                            } as LogicUtil.NodeSeedSendManager\r\n                        },\r\n                    ]\r\n                } as LogicUtil.NodeInterfaceMng\r\n            },\r\n            {\r\n                type: 'thumbnail-mng',\r\n                data: {\r\n                    items: []\r\n                } as LogicUtil.NodeThumnailManager\r\n            },\r\n            {\r\n                type: 'sample-mng',\r\n                data: {\r\n                    samples: []\r\n                } as LogicUtil.NodeSampleManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, entry, permit]}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSeedItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    entry: entry.value,\r\n                    permit: permit.value as LogicUtil.PermitType,\r\n                    mngs: getDefaultSeedMngs()\r\n                };\r\n                wrap.data = element;\r\n\r\n                LogicElementUtil.syncTreeElementFromWrap(node);\r\n                // 参照しているロジックの引数をSendに設定\r\n                initSendParams();\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedItem;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.permit = permit.value as LogicUtil.PermitType;\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 24),\r\n                                    errorType: \"length\"\r\n                                },\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Entry\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={entry}\r\n                            width={200}\r\n                            // 更新時は編集できない\r\n                            isReadOnly={!isModify || wrap.data != null}\r\n                            setCheckable={setEntry}\r\n                            list={logicNameList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Permit\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={permit}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setPermit}\r\n                            list={LogicUtil.PermitTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'seed', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedItem;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext as LogicTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorThumbnailMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(LogicTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeThumnailManager;\r\n\r\n    const hasSample = useMemo(() => {\r\n        const sampleMngNode = LogicElementUtil.getInnerNode(node.parent as TreeUtil.ElementNode, 'sample-mng') as TreeUtil.ElementNode;\r\n        return sampleMngNode.children.length as number > 0;\r\n    }, []);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            // isEnable={hasSample}\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Thumbnail',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'thumbnail-item',\r\n                                data: null\r\n                            }\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport Particle from \"../../../../graphic/particle\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst WND_SIZE = 100;\r\n\r\nconst EditorThumbnailItem = () => {\r\n    const { rootData, node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n    const data = wrap.data as LogicUtil.NodeThumbnailItem;\r\n\r\n\r\n    const seedWrap = node.parent?.parent?.data as LogicUtil.WrapElement;\r\n    const sampleMng = LogicElementUtil.getInnerWrap(seedWrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n    const samples = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [urls, setUrls] = useState<string[]>([]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n        setName({ ...name, value: param.name });\r\n        setFrame({ ...frame, value: param.frame.toString() });\r\n    };\r\n    \r\n    /** 既存のサムネイル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n            setTimeout(() => {\r\n                const urls: string[] = [];\r\n                samples.forEach((sample, i) => {\r\n                    urls.push(getThumbnailURL(data.frame, i));\r\n                });\r\n                setUrls(urls);\r\n            }, 1);\r\n        }\r\n    }, [node]);\r\n\r\n    const getSeedValueMap = (sampleNo: number): PreviewUtil.ValueMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ValueMap[] = [];\r\n        argMng.args.forEach((wrap, i) => {\r\n            const item = wrap.data as LogicUtil.NodeSeedArgItem;\r\n            if(!item.isArray) {\r\n                const name = item.name;\r\n                const value = Number(samples[sampleNo].values[i]);\r\n                argMap.push( { name, value });\r\n            }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams\r\n        .filter(item => !item.isArray)\r\n        .map(item => {\r\n            return { name: item.name, value: PreviewUtil.convertParamsToValue(item.name, sendParams, argMap) ?? 0 }\r\n        });\r\n    }\r\n    const getSeedArrayMap = (sampleNo: number): PreviewUtil.ArrayMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ArrayMap[] = [];\r\n        argMng.args.forEach((wrap, i) => {\r\n            const item = wrap.data as LogicUtil.NodeSeedArgItem;\r\n            if(item.isArray) {\r\n                const name = item.name;\r\n                const array = samples[sampleNo].values[i].split(',').map(v => Number(v));\r\n                argMap.push( { name, array });\r\n            }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams\r\n        .filter(item => item.isArray)\r\n        .map(item => {\r\n            return { name: item.name, array: PreviewUtil.convertParamsToArray(item.name, sendParams, argMap) ?? [] }\r\n        });\r\n    }\r\n\r\n    const getThumbnailURL = (targetFrame: number, sampleNo: number) => {\r\n        console.log('create start!');\r\n        const owner: Particle.Instance[] = [];\r\n\r\n        let frameCnt = 0;\r\n        do {\r\n            if (frameCnt === 0) {\r\n                const seed = (node.parent?.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n                const logicManager = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                const logic = logicManager.defs.find(logic => (logic.data as LogicUtil.NodeLogicItem).name === seed.entry);\r\n                if (logic == undefined) break;\r\n\r\n                const sendValueMapList = getSeedValueMap(sampleNo);\r\n                const sendArrayMapList = getSeedArrayMap(sampleNo);\r\n                owner.push(new Particle.Instance(\r\n                    PreviewUtil.buildLogicProps(owner, logic.data, rootData, sendValueMapList, sendArrayMapList))\r\n                );\r\n            }\r\n\r\n            if (frameCnt === targetFrame) {\r\n                return CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                });\r\n            }\r\n\r\n            // パーティクルの更新\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                particle.update();\r\n            }\r\n\r\n            // 死滅したパーティクルの削除\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frameCnt > 500 || owner.length > 3000) break;\r\n            frameCnt++;\r\n        } while (owner.length > 0);\r\n        return '';\r\n    }\r\n\r\n    const pictureJsxList = useMemo(() => {\r\n        const sampleMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n        return sampleMng.samples.map((wrap, i) => {\r\n            const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n\r\n            const url = urls[i];\r\n            const imgJsx = url == undefined ? <></> : <_IMG src={urls[i]} />;\r\n            return (\r\n                <_SampleDiv key={i}>-\r\n                    <_SampleName>{sample.name}</_SampleName>\r\n                    <_CanvasDiv>\r\n                        {imgJsx}\r\n                    </_CanvasDiv>\r\n                </_SampleDiv>\r\n            );\r\n        });\r\n    }, [node, urls]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, frame]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeThumbnailItem = {\r\n                    name: name.value,\r\n                    frame: Number(frame.value),\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n                param.name = name.value;\r\n                param.frame = Number(frame.value);\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"preview\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {pictureJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailItem;\r\n\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport DrawUtil from \"../../../graphic/drawUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport DrawableVectorChooser from \"./drawableVectorChooser\";\r\n\r\nnamespace LogicFormUtil {\r\n\r\n    export const buildPreviewForms = (\r\n        isReadOnly: boolean,\r\n        argumentList: LogicUtil.NodeSeedArgItem[],\r\n        formgrpList: LogicUtil.NodeFromGrpItem[],\r\n        formList: FormUtil.CheckableValue[],\r\n        setFormList: ((formList: FormUtil.CheckableValue[]) => void)\r\n    ): JSX.Element[] => {\r\n        /** 入力フォームのJSX */\r\n        const formJsxList: JSX.Element[] = [];\r\n        const usedGrps: string[] = [];\r\n        formList.forEach((form, i) => {\r\n            const argument = argumentList[i];\r\n            const formgrp = formgrpList.find(grp => grp.args.includes(argument.name));\r\n\r\n            // フォームグループが設定されている場合、独自の入力UIを表示する\r\n            if (formgrp != undefined) {\r\n                // 設定済みであれば追加しない\r\n                if (usedGrps.includes(formgrp.name)) return 1;\r\n                // 利用済みリストに追加\r\n                usedGrps.push(formgrp.name);\r\n                const targetForms: number[] = [];\r\n                argumentList.forEach((arg, j) => {\r\n                    if (formgrp.args.includes(arg.name)) {\r\n                        targetForms.push(j);\r\n                    }\r\n                });\r\n                switch (formgrp.method) {\r\n                    case 'color': {\r\n                        const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                            r: Number(formList[targetForms[0]].value),\r\n                            g: Number(formList[targetForms[1]].value),\r\n                            b: Number(formList[targetForms[2]].value),\r\n                            a: 255\r\n                        }).substring(0, 7);\r\n                        // console.log(colorCode);\r\n                        formJsxList.push(<div key={i}>\r\n                            <FormUtil.Record\r\n                                jsx={\r\n                                    <_Message>{formgrp.name}: <_Type>color </_Type><_Range>({0} ～ {255} respectively)</_Range></_Message>\r\n                                }\r\n                            />\r\n                            <FormUtil.Record\r\n                                jsx={<>\r\n                                    {targetForms.map((formIndex, j) => {\r\n                                        return (\r\n                                            <FormUtil.TextField\r\n                                                key={formIndex}\r\n                                                width={72}\r\n                                                marginLeft={j === 0 ? 5 : 4}\r\n                                                isNumber\r\n                                                isReadOnly={isReadOnly}\r\n                                                checkable={formList[formIndex]}\r\n                                                setCheckable={() => {\r\n                                                    setFormList(formList.slice());\r\n                                                }}\r\n                                                validates={[\r\n                                                    {\r\n                                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                        errorType: \"required\"\r\n                                                    },\r\n                                                    {\r\n                                                        checker: (value) => ValidateUtil.checkNumberRange(value, argument.min as number, argument.max as number),\r\n                                                        errorType: 'value'\r\n                                                    }\r\n                                                ]}\r\n                                            />\r\n                                        );\r\n                                    })}\r\n                                    <_Color type=\"color\" value={colorCode}\r\n                                        disabled={isReadOnly}\r\n                                        onChange={(value) => {\r\n                                            const rgba = DrawUtil.convertRgbaFromColorCode(value.target.value + 'ff');\r\n                                            if (rgba != null) {\r\n                                                formList[targetForms[0]].value = rgba.r.toString();\r\n                                                formList[targetForms[1]].value = rgba.g.toString();\r\n                                                formList[targetForms[2]].value = rgba.b.toString();\r\n                                            }\r\n                                            setFormList(formList.slice());\r\n                                        }}\r\n                                    />\r\n                                </>}\r\n                            />\r\n                        </div>);\r\n                    } break;\r\n                    case 'draw': {\r\n                        const xValue = formList[targetForms[0]].value;\r\n                        const yValue = formList[targetForms[1]].value;\r\n                        const xList = (xValue === '' ? [] : xValue.split(',').map(v => Number(v)));\r\n                        const yList = (xValue === '' ? [] : yValue.split(',').map(v => Number(v)));\r\n                        formJsxList.push(<div key={i}>\r\n                            <FormUtil.Record\r\n                                jsx={\r\n                                    <_Message>{formgrp.name}: <_Type>point </_Type><_Range>(～ {255} drawing)</_Range></_Message>\r\n                                }\r\n                            />\r\n                            <DrawableVectorChooser.ComponentNormal\r\n                                addPoint={(x, y) => {\r\n                                    xList.push(x);\r\n                                    yList.push(y);\r\n                                    formList[targetForms[0]].value = xList.join(',');\r\n                                    formList[targetForms[1]].value = yList.join(',');\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                clear={() => {\r\n                                    formList[targetForms[0]].value = '';\r\n                                    formList[targetForms[1]].value = '';\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                xList={xList}\r\n                                yList={yList}\r\n                            />\r\n                        </div>);\r\n                    } break;\r\n                    case 'draw-colorable': {\r\n                        const xValue = formList[targetForms[0]].value;\r\n                        const yValue = formList[targetForms[1]].value;\r\n                        const rValue = formList[targetForms[2]].value;\r\n                        const gValue = formList[targetForms[3]].value;\r\n                        const bValue = formList[targetForms[4]].value;\r\n                        const xList = (xValue === '' ? [] : xValue.split(',').map(v => Number(v)));\r\n                        const yList = (xValue === '' ? [] : yValue.split(',').map(v => Number(v)));\r\n                        const rList = (rValue === '' ? [] : rValue.split(',').map(v => Number(v)));\r\n                        const gList = (gValue === '' ? [] : gValue.split(',').map(v => Number(v)));\r\n                        const bList = (bValue === '' ? [] : bValue.split(',').map(v => Number(v)));\r\n                        formJsxList.push(<div key={i}>\r\n                            <FormUtil.Record\r\n                                jsx={\r\n                                    <_Message>{formgrp.name}: <_Type>point </_Type><_Range>(～ {255} drawing)</_Range></_Message>\r\n                                }\r\n                            />\r\n                            <DrawableVectorChooser.ComponentColorable\r\n                                addPoint={(x, y, r, g, b) => {\r\n                                    xList.push(x);\r\n                                    yList.push(y);\r\n                                    rList.push(r);\r\n                                    gList.push(g);\r\n                                    bList.push(b);\r\n                                    formList[targetForms[0]].value = xList.join(',');\r\n                                    formList[targetForms[1]].value = yList.join(',');\r\n                                    formList[targetForms[2]].value = rList.join(',');\r\n                                    formList[targetForms[3]].value = gList.join(',');\r\n                                    formList[targetForms[4]].value = bList.join(',');\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                clear={() => {\r\n                                    formList[targetForms[0]].value = '';\r\n                                    formList[targetForms[1]].value = '';\r\n                                    formList[targetForms[2]].value = '';\r\n                                    formList[targetForms[3]].value = '';\r\n                                    formList[targetForms[4]].value = '';\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                xList={xList}\r\n                                yList={yList}\r\n                                rList={rList}\r\n                                gList={gList}\r\n                                bList={bList}\r\n                            />\r\n                        </div>);\r\n                    } break;\r\n                }\r\n            } else {\r\n                let labelName = argument.name;\r\n                if (argument.disp != undefined) labelName = argument.disp;\r\n                formJsxList.push(<div key={i}>\r\n                    <FormUtil.Record\r\n                        jsx={\r\n                            <_Message>{labelName}: <_Type>number </_Type><_Range>({argument.min} ～ {argument.max})</_Range></_Message>\r\n                        }\r\n                    />\r\n                    <FormUtil.Record\r\n                        jsx={<>\r\n                            <FormUtil.TextField\r\n                                width={142}\r\n                                marginLeft={6}\r\n                                isNumber\r\n                                isReadOnly={isReadOnly}\r\n                                step={argument.step}\r\n                                checkable={form}\r\n                                setCheckable={() => {\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, argument.min as number, argument.max as number),\r\n                                        errorType: 'value'\r\n                                    }\r\n                                ]}\r\n                            />\r\n                            <_Tsumami type=\"range\" value={Number(form.value)} min={argument.min} max={argument.max} step={argument.step}\r\n                                disabled={isReadOnly}\r\n                                onChange={(value) => {\r\n                                    formList[i] = { ...form, value: value.target.value };\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                            />\r\n                        </>}\r\n                    />\r\n                </div>);\r\n            }\r\n        });\r\n        return formJsxList;\r\n    }\r\n}\r\n\r\nexport default LogicFormUtil;\r\n\r\n\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    overflow: hidden;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Type = styled.span`\r\n    color: #c10000;\r\n    font-weight: 600;\r\n`;\r\nconst _Range = styled.span`\r\n    color: #423e84fb;\r\n`;\r\n\r\nconst _Tsumami = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 11px 0 0 6px;\r\n    width: calc(100% - 160px);\r\n`;\r\n\r\nconst _Color = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 3px 0 0 6px;\r\n    width: 100px;\r\n    height: 34px;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactDetArgumentMng from \"../detail/logic/editorArgumentMng\";\r\nimport EditorArgumentItem from \"../detail/logic/editorArgumentItem\";\r\nimport FactDetSeedMng from \"../detail/seed/editorSeedMng\";\r\nimport EditorLogicMng from \"../detail/logic/editorLogicMng\";\r\nimport EditorLogicItem from \"../detail/logic/editorLogicItem\";\r\nimport EditorParamItem from \"../detail/logic/editorParamItem\";\r\nimport FactDetBehiviorMng from \"../detail/logic/editorBehiviorMng\";\r\nimport EditorVisualMng from \"../detail/logic/editorVisualMng\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport EditorInheritConnMng from \"../detail/logic/editorInheritConnMng\";\r\nimport EditorInheritConnector from \"../detail/logic/editorInheritConnector\";\r\nimport EditorSendManager from \"../detail/logic/editorSendManager\";\r\nimport EditorFieldMng from \"../detail/logic/editorFieldMng\";\r\nimport EditorExtendMng from \"../detail/logic/editorExtendMng\";\r\nimport EditorSeedItem from \"../detail/seed/editorSeedItem\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"./logicElementUtil\";\r\nimport EditorThumbnailMng from \"../detail/seed/editorThumbnailMng\";\r\nimport EditorThumbnailItem from \"../detail/seed/editorThumbnailItem\";\r\nimport EditorSampleItem from \"../detail/seed/editorSampleItem\";\r\nimport EditorSampleMng from \"../detail/seed/editorSampleMng\";\r\nimport EditorInterfaceManager from \"../detail/seed/editorInterfaceManager\";\r\nimport EditorSeedArgMng from \"../detail/seed/editorSeedArgMng\";\r\nimport EditorSeedArgItem from \"../detail/seed/editorSeedArgItem\";\r\nimport EditorSeedSendMng from \"../detail/seed/editorSeedSendMng\";\r\nimport EditorFormgrpItem from \"../detail/seed/editorFormgrpItem\";\r\nimport EditorFormgrpMng from \"../detail/seed/editorFormgrpMng\";\r\n\r\nnamespace LogicUtil {\r\n\r\n    export type DetailArgs = {\r\n        rootData: LogicUtil.WrapElement;\r\n        node: TreeUtil.ElementNode;\r\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\r\n        invalidate: () => void;\r\n        isModify: boolean;\r\n        setModify: (isModify: boolean) => void;\r\n        // setRootData: React.Dispatch<React.SetStateAction<WrapElement>>;\r\n        setRootData: (rootData: WrapElement) => void;\r\n        removeSelf: () => void;\r\n    }\r\n\r\n    /**\r\n     * 変数名チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkFieldName = (str: string) => {\r\n        // 1文字目が数値でないこと\r\n        const isNoHeadNumber = !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].\r\n            includes(str.substring(0, 1));\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyz_';\r\n        return isNoHeadNumber && ValidateUtil.checkIncludesChars(str, list);\r\n    }\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'seed-mng' |\r\n        'logic-mng' |\r\n        'seed-item' |\r\n        'logic-item' |\r\n        'argument-mng' |\r\n        'argument-item' |\r\n        'field-mng' |\r\n        'field-item' |\r\n        'visual-mng' |\r\n        'behavior-mng' |\r\n        'inhfld-mng' |\r\n        'extend-mng' |\r\n        'inherit-mng' |\r\n        'connector' |\r\n        'inherit-logic' |\r\n        'send-mng' |\r\n        'send-item' |\r\n        'param-item' |\r\n        'condition-item' |\r\n        'interface-mng' |\r\n        'sample-mng' |\r\n        'sample-item' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-item' |\r\n        'seedarg-mng' |\r\n        'seedsend-mng' |\r\n        'seedarg-item' |\r\n        'seedsend-item' |\r\n        'formgrp-mng' |\r\n        'formgrp-item'\r\n        ;\r\n\r\n    export const ArgTypes = ['number', 'array'] as const;\r\n    export type ArgumentType = typeof ArgTypes[number];\r\n\r\n    export const ParamInputTypes = ['direct', 'array', 'constant', 'argument', 'self', 'field', 'array.len', 'array.itr'] as const;\r\n    export type ParamInputType = typeof ParamInputTypes[number];\r\n\r\n    export const ConnectTypes = ['create', 'depend'] as const;\r\n    export type InheritMethod = typeof ConnectTypes[number];\r\n\r\n    export const PermitTypes = ['develop', 'private', 'release'] as const;\r\n    export type PermitType = typeof PermitTypes[number];\r\n\r\n    export const FromGrpMedhods = ['color', 'draw', 'draw-colorable'] as const;\r\n    export type FromGrpMethod = typeof FromGrpMedhods[number];\r\n\r\n    export type ParamProps = {\r\n        type: ParamInputType;\r\n        value: string;\r\n    }\r\n\r\n    export type WrapElement = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        seedMng: WrapElement;\r\n        logicMng: WrapElement;\r\n    }\r\n    export type NodeSeedManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicItem = {\r\n        name: string;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInterfaceMng = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInheritItem = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeParamManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeParamItem = {\r\n        name: string;\r\n        formulaItems: string[];\r\n        values: ParamProps[];\r\n        isArray?: boolean;\r\n    }\r\n\r\n    export type NodeArgumentItem = {\r\n        name: string;\r\n        valueType: ArgumentType;\r\n    }\r\n    export type NodeThumbnailItem = {\r\n        name: string;\r\n        frame: number;\r\n    }\r\n    export type NodeArgumentManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeFieldManager = {\r\n        fields: WrapElement[];\r\n    }\r\n    export type NodeSampleManager = {\r\n        samples: WrapElement[];\r\n    }\r\n    export type NodeSampleItem = {\r\n        name: string;\r\n        values: string[];\r\n    }\r\n\r\n    // export type NodeExtendManager = {\r\n    //     mngs: WrapElement[];\r\n    // }\r\n    export type NodeConnectManager = {\r\n        inherits: WrapElement[];\r\n    }\r\n    export type NodeInheritConnector = {\r\n        method: InheritMethod;\r\n        depend: string;\r\n        id: string;\r\n        disable?: boolean;\r\n        mngs: WrapElement[];\r\n    }\r\n\r\n    export type NodeSeedItem = {\r\n        name: string;\r\n        disp?: string;\r\n        entry: string;\r\n        permit: PermitType;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeThumnailManager = {\r\n        items: WrapElement[];\r\n    }\r\n    export type NodeSeedArgManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeSeedSendManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeSeedArgItem = {\r\n        name: string;\r\n        disp?: string;\r\n        isArray?: boolean;\r\n        min?: number;\r\n        max?: number;\r\n        step?: number;\r\n        defval?: string;\r\n        isPosX?: boolean;\r\n    }\r\n    export type NodeFromgrpManager = {\r\n        defines: WrapElement[];\r\n    }\r\n    export type NodeFromGrpItem = {\r\n        name: string;\r\n        method: FromGrpMethod;\r\n        args: string[];\r\n    }\r\n\r\n    const COLOR_ROOT = '#a1a1a1';\r\n    const COLOR_METHOD = '#cca67b';\r\n    const COLOR_MNG = '#37a2bd';\r\n    const COLOR_LIST = '#b85f5f';\r\n    const COLOR_ITEM = '#ae628c';\r\n    const COLOR_DISABLE = '#685b79';\r\n    const COLOR_PARAM = '#8dae62';\r\n    const COLOR_FIELD = '#cec256';\r\n    const COLOR_THUMBNAIL = '#8283be';\r\n    const COLOR_CONDITION = '#56ce7e';\r\n\r\n    export const getNodeDisplayJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapElement;\r\n        switch (wrap.type) {\r\n            case 'root': {\r\n                return <_Category backgroundColor={COLOR_ROOT}>Library</_Category>;\r\n            }\r\n            case 'seed-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Seed Manager</_Category>;\r\n            }\r\n            case 'logic-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Logic Manager</_Category>;\r\n            }\r\n            case 'visual-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Visual</_Category>;\r\n            }\r\n            case 'extend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Extend</_Category>;\r\n            }\r\n            case 'seed-item': {\r\n                let detailJsx = <>...</>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedItem;\r\n                    detailJsx = <span>{data.name}&nbsp;<_Span color=\"#ffe89ba6\">entry:&nbsp;</_Span><_Field>{data.entry}</_Field></span>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Seed</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n\r\n                </>;\r\n            }\r\n            case 'logic-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Logic</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-logic': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Logic</_Category>;\r\n            }\r\n            case 'argument-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'inhfld-mng':\r\n            case 'field-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Field Manager</_Category>;\r\n            }\r\n            case 'behavior-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Behavior</_Category>;\r\n            }\r\n            case 'inherit-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Inherit Manager</_Category>;\r\n            }\r\n            case 'connector': {\r\n                let detailJsx = <span>...</span>;\r\n                let color = COLOR_ITEM;\r\n                let isDisable = false;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeInheritConnector;\r\n                    detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}</_Span></span>;\r\n                    if (data.method === 'depend') {\r\n                        detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}:&nbsp;</_Span><_Field>{data.depend}</_Field></span>;\r\n                    }\r\n                    if (data.disable ?? false) {\r\n                        color = COLOR_DISABLE;\r\n                        isDisable = true;\r\n                    }\r\n                }\r\n                return (<>\r\n                    <_Category backgroundColor={color} isDisable={isDisable}>Inherit</_Category>\r\n                    {detailJsx == undefined ? <></> : <_EditableValue>{detailJsx}</_EditableValue>}\r\n                </>);\r\n            }\r\n            // パラメータ要素\r\n            case 'param-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_PARAM}>Param<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 条件要素\r\n            case 'condition-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_CONDITION}>Condition<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 変数要素\r\n            case 'field-item': {\r\n                let nameJsx = <span>...</span>;\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeParamItem;\r\n                    nameJsx = <_Detail>&nbsp;[{data.name}]</_Detail>;\r\n                    let result: JSX.Element[] = [];\r\n                    let varCnt = 0;\r\n                    data.formulaItems.forEach((formula, i) => {\r\n                        let str = <_Signature key={i}>{formula}</_Signature>;\r\n                        if (formula === 'var') {\r\n                            const v = data.values[varCnt];\r\n                            if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                            else str = <span key={i}>{v.value}</span>;\r\n                            varCnt++;\r\n                        }\r\n                        result.push(str);\r\n                    });\r\n                    detailJsx = <>{result}</>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Field{nameJsx}</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'argument-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeArgumentItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.valueType})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'send-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'thumbnail-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Thumnail Manager</_Category>;\r\n            }\r\n            case 'thumbnail-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeThumbnailItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.frame})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_THUMBNAIL}>Thumbnail</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'sample-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Preset Manager</_Category>;\r\n            }\r\n            case 'sample-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSampleItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Preset</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'interface-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Interface</_Category>;\r\n            }\r\n            case 'seedarg-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'seedarg-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedArgItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.min}～{data.max})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'seedsend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'formgrp-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Group Manager</_Category>;\r\n            }\r\n            case 'formgrp-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeFromGrpItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.method})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Group<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n        }\r\n        return <_Category backgroundColor={'#ffffff'}>XXXXX</_Category>;\r\n    }\r\n\r\n    export const getTypeName = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return '';\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return 'Root';\r\n            case 'seed-mng': return 'Seed Manager';\r\n            case 'logic-mng': return 'Logic Manager';\r\n            case 'seed-item': return 'Seed Item';\r\n            case 'logic-item': return 'Logic Item';\r\n            case 'argument-mng': return 'Argument Manager';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'Field Manager';\r\n            case 'field-item': return 'Field Item';\r\n            case 'visual-mng': return 'Visual Manager';\r\n            case 'seedarg-item':\r\n            case 'argument-item': return 'Argument Item';\r\n            case 'extend-mng': return 'Extend Manager';\r\n            case 'behavior-mng': return 'Behavior Manager';\r\n            case 'inherit-mng': return 'Inherit Manager';\r\n            case 'connector': return 'Inherit Connector';\r\n            case 'inherit-logic': return 'Inherit Logic';\r\n            case 'send-mng': return 'Send Manager';\r\n            case 'seedsend-item':\r\n            case 'send-item': return 'Send Item';\r\n            case 'param-item': return 'Param Item';\r\n            case 'condition-item': return 'Condition Item';\r\n            case 'interface-mng': return 'Interface Manager';\r\n            case 'thumbnail-mng': return 'Thumbnail Manager';\r\n            case 'thumbnail-item': return 'Thumbnail Item';\r\n            case 'sample-mng': return 'Preset Manager';\r\n            case 'sample-item': return 'Preset Item';\r\n            case 'seedarg-mng': return 'Argument Manager';\r\n            case 'seedsend-mng': return 'Send';\r\n            case 'formgrp-mng': return 'Group Manager';\r\n            case 'formgrp-item': return 'Group Item';\r\n        }\r\n    }\r\n\r\n    export const getDetailComponent = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return <></>;\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return <></>;\r\n            case 'seed-mng': return <FactDetSeedMng />;\r\n            case 'logic-mng': return <EditorLogicMng />;\r\n            case 'seed-item': return <EditorSeedItem />;\r\n            case 'logic-item': return <EditorLogicItem />;\r\n            case 'argument-mng': return <FactDetArgumentMng />;\r\n            case 'argument-item': return <EditorArgumentItem />;\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return <EditorFieldMng />;\r\n            case 'visual-mng': return <EditorVisualMng />;\r\n            case 'extend-mng': return <EditorExtendMng />;\r\n            case 'behavior-mng': return <FactDetBehiviorMng />;\r\n            case 'inherit-mng': return <EditorInheritConnMng />;\r\n            case 'connector': return <EditorInheritConnector />;\r\n            case 'inherit-logic': return <EditorLogicItem />;\r\n            case 'send-mng': return <EditorSendManager />;\r\n            case 'field-item':\r\n            case 'param-item':\r\n            case 'condition-item':\r\n            case 'send-item':\r\n            case 'seedsend-item': return <EditorParamItem />;\r\n            case 'interface-mng': return <EditorInterfaceManager />;\r\n            case 'sample-mng': return <EditorSampleMng />;\r\n            case 'sample-item': return <EditorSampleItem />;\r\n            case 'thumbnail-mng': return <EditorThumbnailMng />;\r\n            case 'thumbnail-item': return <EditorThumbnailItem />;\r\n            case 'seedarg-mng': return <EditorSeedArgMng />;\r\n            case 'seedarg-item': return <EditorSeedArgItem />;\r\n            case 'seedsend-mng': return <EditorSeedSendMng />;\r\n            case 'formgrp-item': return <EditorFormgrpItem />;\r\n            case 'formgrp-mng': return <EditorFormgrpMng />;\r\n        }\r\n    }\r\n\r\n    export const getChildrenElementNode = (node: TreeUtil.ElementNode): TreeUtil.ElementNode[] => {\r\n        const wrapNode = node.data as WrapElement;\r\n        const get = (listName: string) => {\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const elementNode = TreeUtil.createNode(wrap, node);\r\n                elementNode.children = getChildrenElementNode(elementNode);\r\n                return elementNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n\r\n    export const getChildrenDataNode = (wrapNode: WrapElement): TreeUtil.DataNode[] => {\r\n        const get = (listName: string) => {\r\n\r\n            return ((wrapNode.data)[listName] as WrapElement[]).map(wrap => {\r\n                const treeNode: TreeUtil.DataNode = {\r\n                    data: wrap,\r\n                    children: getChildrenDataNode(wrap)\r\n                };\r\n                return treeNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as NodeRoot;\r\n                return [\r\n                    { data: node.seedMng, children: getChildrenDataNode(node.seedMng) },\r\n                    { data: node.logicMng, children: getChildrenDataNode(node.logicMng) }\r\n                ];\r\n            }\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n}\r\n\r\nexport default LogicUtil;\r\n\r\nconst _Category = styled.div<{\r\n    backgroundColor: string;\r\n    isDisable?: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: ${props => props.backgroundColor};\r\n    /* width: 100%; */\r\n    ${props => !(props.isDisable ?? false) ? '' : css`\r\n        text-decoration: line-through;\r\n        color: #00054dac;\r\n    `}\r\n    border-radius: 4px 0 0 4px;\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n    border: solid 1px #000000d2;\r\n`;\r\nconst _Detail = styled.span`\r\n    color: #000b69bd;\r\n`;\r\n\r\nconst _EditableValue = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #0c0c0c;\r\n    color: #ebebeb;\r\n    border-radius: 0 4px 4px 0;\r\n    /* width: 100%; */\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n`;\r\nconst _Span = styled.span<{\r\n    color: string;\r\n}>`\r\n    color: ${props => props.color};\r\n`;\r\nconst _ValueType = styled.span`\r\n    color: #fff9d6b9;\r\n`;\r\nconst _Signature = styled.span`\r\n    color: #ffffff78;\r\n`;\r\nconst _Field = styled.span`\r\n    color: #ff2d2d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../util/logicFormUtil\";\r\n\r\nconst EditorSampleItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [paramForms, setParamForms] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSampleItem;\r\n        setName({ ...name, value: param.name });\r\n        setParamForms(param.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のサンプル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const [seedargList, formgrpList]: [LogicUtil.NodeSeedArgItem[], LogicUtil.NodeFromGrpItem[]] = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'seedarg-mng');\r\n        const argInfoList = (argMng.data as LogicUtil.NodeSeedArgManager).\r\n            args.map(arg => {\r\n                return arg.data as LogicUtil.NodeSeedArgItem;\r\n            });\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        const formgrpMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'formgrp-mng');\r\n        if (formgrpMng != null) {\r\n            formgrpList = (formgrpMng.data as LogicUtil.NodeFromgrpManager).\r\n                defines.map(arg => {\r\n                    return arg.data as LogicUtil.NodeFromGrpItem;\r\n                });\r\n        }\r\n        return [argInfoList, formgrpList];\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setParamForms(seedargList.map(arg => {\r\n                let defval = '';\r\n                if (arg.defval != undefined) defval = arg.defval.toString();\r\n                return { value: defval, errors: [] };\r\n            }));\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const formList = useMemo(() => {\r\n        return LogicFormUtil.buildPreviewForms(\r\n            !isModify, seedargList, formgrpList, paramForms, setParamForms\r\n        );\r\n        // return paramForms.map((paramForm, i) => {\r\n        //     const arg = argInfoList[i];\r\n        //     return <FormUtil.FormRecord key={i}\r\n        //         titleLabel={arg.name}\r\n        //         jsx={\r\n        //             <FormUtil.TextField\r\n        //                 width={150}\r\n        //                 isReadOnly={!isModify}\r\n        //                 checkable={paramForm}\r\n        //                 setCheckable={(checkable) => {\r\n        //                     paramForms[i] = checkable;\r\n        //                     setParamForms(paramForms.slice());\r\n        //                 }}\r\n        //                 isNumber\r\n        //                 step={arg.step}\r\n        //                 validates={[\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkRequired(value),\r\n        //                         errorType: \"required\"\r\n        //                     },\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkNumberRange(value, arg.min, arg.max),\r\n        //                         errorType: \"value\"\r\n        //                     },\r\n        //                 ]}\r\n        //             />\r\n        //         }\r\n        //     />\r\n        // });\r\n    }, [paramForms, isModify]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name].concat(paramForms)}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSampleItem = {\r\n                    name: name.value,\r\n                    values: []\r\n                };\r\n                paramForms.forEach((form, i) => {\r\n                    element.values[i] = form.value;\r\n                });\r\n                wrap.data = element;\r\n\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSampleItem;\r\n                param.name = name.value;\r\n                paramForms.forEach((form, i) => {\r\n                    param.values[i] = form.value;\r\n                });\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 22),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {formList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'preset', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSampleMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Preset',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'sample-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSampleManager).samples.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleMng;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInterfaceManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const argMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedarg-mng');\r\n    const sendMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedsend-mng');\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(node.parent as TreeUtil.ElementNode, 'sample-mng');\r\n\r\n    const [hasGroupNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        return [\r\n            list.includes('formgrp-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const hasArgument = (): boolean => {\r\n        return argMngNode.children.length > 0;\r\n    }\r\n\r\n    /**\r\n     * グループ要素の有無を判定\r\n     */\r\n    const hasGroup = () => {\r\n        const groupMngNode = LogicElementUtil.getInnerNode(node, 'formgrp-mng');\r\n        if (groupMngNode == null) return false;\r\n        return groupMngNode.children.length > 0;\r\n    }\r\n\r\n    const execute = () => {\r\n        // const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n        // 既存の引数を削除\r\n        if (hasArgument()) {\r\n\r\n            LogicElementUtil.removeChildAll(argMngNode);\r\n            LogicElementUtil.removeChildAll(sampleMngNode);\r\n        }\r\n\r\n        sendMngNode.children.forEach(child => {\r\n            const send = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem;\r\n            send.formulaItems = ['var'];\r\n            send.values = [{ type: 'argument', value: send.name }];\r\n\r\n            const newArgData: LogicUtil.NodeSeedArgItem = {\r\n                name: send.name,\r\n                step: 1,\r\n                min: -9999,\r\n                max: 9999,\r\n                defval: ''\r\n            }\r\n            const newArgWrap: LogicUtil.WrapElement = {\r\n                type: 'seedarg-item',\r\n                data: newArgData\r\n            };\r\n            const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n            argMng.args.push(newArgWrap);\r\n            argMngNode.children.push(TreeUtil.createNode(newArgWrap, argMngNode));\r\n            invalidate();\r\n        });\r\n    }\r\n\r\n    const initDefaultSetting = () => {\r\n        if (!hasArgument()) {\r\n            execute();\r\n        } else {\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Are you sure you want to delete the existing element?\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        callback: () => {\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Execute',\r\n                        callback: () => {\r\n                            execute();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            setStore({ ...store });\r\n        }\r\n        invalidate();\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Group'}\r\n                        width={300}\r\n                        isUse={hasGroupNode}\r\n                        isEnable={!hasGroup()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasGroupNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'formgrp-mng',\r\n                                    data: {\r\n                                        defines: []\r\n                                    } as LogicUtil.NodeFromgrpManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Initialize Params',\r\n                        callback: initDefaultSetting\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInterfaceManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedArgMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seedarg-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedArgManager).args.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedArgMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorSeedArgItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [min, setMin] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [max, setMax] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [step, setStep] = useState<FormUtil.CheckableValue>({ value: '1', errors: [] });\r\n    const [defval, setDefval] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [isPosX, setPosX] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [isArray, setArray] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    const seedNode = node.parent?.parent?.parent as TreeUtil.ElementNode;\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setMin({ ...min, value: (param.min != undefined) ? param.min.toString() : '' });\r\n        setMax({ ...max, value: (param.max != undefined) ? param.max.toString() : '' });\r\n        setStep({ ...step, value: (param.step != undefined) ? param.step.toString() : '' });\r\n        setDefval({ ...defval, value: (param.defval != undefined) ? param.defval.toString() : ''});\r\n        setPosX({ ...isPosX, value: (param.isPosX ?? false) ? '1' : '' });\r\n        setArray({ ...isArray, value: (param.isArray ?? false) ? '1' : '' });\r\n        // setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, min, max, step, defval]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeSeedArgItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    min: Number(min.value),\r\n                    max: Number(max.value),\r\n                    step: Number(step.value),\r\n                    defval: defval.value === '' ? undefined : defval.value,\r\n                    isPosX: isPosX.value === '' ? undefined : true,\r\n                    isArray: isArray.value === '' ? undefined : true,\r\n                    // valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                wrap.data = param;\r\n                syncArgumentAdd(seedNode as TreeUtil.ElementNode, param);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.min = Number(min.value === '' ? '0' : min.value);\r\n                param.max = Number(max.value === '' ? '0' : max.value);\r\n                param.step = Number(step.value === '' ? '0' : step.value);\r\n                param.defval = defval.value === '' ? undefined : defval.value;\r\n                param.isPosX = isPosX.value === '' ? undefined : true;\r\n                param.isArray = isArray.value === '' ? undefined : true;\r\n                // param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(seedNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 16),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Array\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={isArray}\r\n                            setCheckable={(checkable) => {\r\n                                setArray(checkable);\r\n                                setMin({ ...min, value: '' });\r\n                                setMax({ ...max, value: '' });\r\n                                setStep({ ...step, value: '' });\r\n                                setDefval({ ...defval, value: '' });\r\n                                setPosX({ ...isPosX, value: '' });\r\n                            }}\r\n                            headBlank\r\n                            list={[\r\n                                { labelText: 'Yes', value: '1' }\r\n                            ]}\r\n                        // dependency={[min, max, step, defval, isPosX]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Min\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={min}\r\n                            setCheckable={setMin}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[max, isArray]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) < Number(max.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Max\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={max}\r\n                            setCheckable={setMax}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[min, isArray]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) > Number(min.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Step\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={step}\r\n                            setCheckable={setStep}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[isArray]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Default\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={defval}\r\n                            setCheckable={setDefval}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[isArray]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Position\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={isPosX}\r\n                            setCheckable={setPosX}\r\n                            isEnabled={isArray.value === ''}\r\n                            headBlank\r\n                            list={[\r\n                                { labelText: 'Yes', value: '1' }\r\n                            ]}\r\n                            dependency={[isArray]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'argument', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                                const refers = getArgumentRefers(seedNode, param.name);\r\n                                if (refers.length === 0) {\r\n                                    const curIndex = LogicElementUtil.getCurrentIndex(node);\r\n                                    if (curIndex === -1) throw new Error('[curIndex] is -1.');\r\n                                    syncArgumentDel(seedNode, curIndex);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtonsCallback(node, invalidate, (index, isUpper) => {\r\n                    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n                    const offset = isUpper ? -1 : 1;\r\n                    sampleMng.samples.forEach(wrap => {\r\n                        const values = (wrap.data as LogicUtil.NodeSampleItem).values;\r\n                        const swapNode = values[index];\r\n                        values[index] = values[index + offset];\r\n                        values[index + offset] = swapNode;\r\n                    });\r\n                })}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (seedNode: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    const sendMng = sendMngWrap.data as LogicUtil.NodeSeedSendManager;\r\n    sendMng.params.forEach(wrap => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        param.values.forEach(varItem => {\r\n            if (varItem.type === 'argument' && varItem.value === argName) {\r\n                refers.push(param.name);\r\n            }\r\n        });\r\n    });\r\n    return refers;\r\n}\r\n\r\nexport default EditorSeedArgItem;\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param seedNode Seedノード\r\n*/\r\nconst syncArgumentName = (seedNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    syncFormula((sendMngWrap.data as LogicUtil.NodeParamManager).params);\r\n\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Sample管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentAdd = (seedNode: TreeUtil.ElementNode, arg: LogicUtil.NodeSeedArgItem) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.push((arg.defval ?? 0).toString());\r\n    });\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentDel = (seedNode: TreeUtil.ElementNode, delIndex: number) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.splice(delIndex, 1);\r\n    });\r\n}","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedSendMng = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const getSendParamList = (): string[] => {\r\n    //     const connector = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n    //     const isCreate = connector.method === 'create';\r\n    //     let targetWrap: LogicUtil.WrapElement | null = null;\r\n    //     if (!isCreate) {\r\n    //         const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n    //         const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n    //         const dependItem = inheritMng.defs.find(wrap => {\r\n    //             return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n    //         });\r\n    //         if (dependItem != undefined) targetWrap = dependItem;\r\n    //     } else {\r\n    //         targetWrap = (node.parent?.children[node.parent?.children.length - 1].data as LogicUtil.WrapElement)\r\n    //     }\r\n    //     if (targetWrap != null) {\r\n    //         const argWrap = (targetWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n    //         if (argWrap.type === 'argument-mng') {\r\n    //             return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n    //                 return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n    //             });\r\n    //         }\r\n    //     }\r\n    //     return [];\r\n    // }\r\n\r\n    // const update = () => {\r\n    //     const sendParamList = getSendParamList();\r\n    //     const curSize = node.children.length;\r\n    //     const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n    //     // 不要なパラメータを削除\r\n    //     for (let i = curSize - 1; i >= 0; i--) {\r\n    //         const name = (params[i].data as LogicUtil.NodeParamItem).name;\r\n    //         if (!sendParamList.includes(name)) {\r\n    //             node.children.splice(i, 1);\r\n    //             params.splice(i, 1);\r\n    //         }\r\n    //     }\r\n    //     // 必要な存在しないパラメータを追加\r\n    //     const curParamList = params.map(param => {\r\n    //         return (param.data as LogicUtil.NodeParamItem).name;\r\n    //     });\r\n    //     sendParamList.forEach(param => {\r\n    //         if (!curParamList.includes(param)) {\r\n    //             const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n    //                 { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n    //             );\r\n    //             params.push(paramWrap);\r\n    //             node.children.push(TreeUtil.createNode(paramWrap, node));\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    return (<>\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedSendMng;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorFormgrpItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [groupMethod, setGroupMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [targetList, setTargetList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n        setName({ ...name, value: param.name });\r\n        setGroupMethod({ ...groupMethod, value: param.method });\r\n        setTargetList(param.args.map(arg => {\r\n            return { value: arg, errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const seedargs = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed(node.parent?.parent?.data as LogicUtil.WrapElement, 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        return argMng.args.map(wrap => (wrap.data as LogicUtil.NodeSeedArgItem));\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, groupMethod].concat(targetList)}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeFromGrpItem = {\r\n                    name: name.value,\r\n                    method: groupMethod.value as LogicUtil.FromGrpMethod,\r\n                    args: targetList.map(form => form.value)\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n                param.name = name.value;\r\n                param.method = groupMethod.value as LogicUtil.FromGrpMethod;\r\n                param.args = targetList.map(form => form.value);\r\n                wrap.data = param;\r\n\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 24),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={groupMethod}\r\n                            setCheckable={(checkable) => {\r\n                                const type = checkable.value as LogicUtil.FromGrpMethod;\r\n                                if (type === 'color') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(3).fill({ value: '', errors: [] }));\r\n                                } else if (type === 'draw') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(2).fill({ value: '', errors: [] }));\r\n                                } else if (type === 'draw-colorable') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(5).fill({ value: '', errors: [] }));\r\n                                } else {\r\n                                    setTargetList([]);\r\n                                }\r\n                                setGroupMethod({ ...checkable });\r\n                            }}\r\n                            list={LogicUtil.FromGrpMedhods.map(type => {\r\n                                return { value: type, labelText: type }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n                {targetList.map((target, i) => {\r\n                    let formName = 'Target_';\r\n                    const method = groupMethod.value as LogicUtil.FromGrpMethod;\r\n                    if (method === 'color') {\r\n                        switch (i) {\r\n                            case 0: formName += 'R'; break;\r\n                            case 1: formName += 'G'; break;\r\n                            case 2: formName += 'B'; break;\r\n                        }\r\n                    } else if (method === 'draw') {\r\n                        switch (i) {\r\n                            case 0: formName += 'X'; break;\r\n                            case 1: formName += 'Y'; break;\r\n                        }\r\n                    } else if (method === 'draw-colorable') {\r\n                        switch (i) {\r\n                            case 0: formName += 'X'; break;\r\n                            case 1: formName += 'Y'; break;\r\n                            case 2: formName += 'R'; break;\r\n                            case 3: formName += 'G'; break;\r\n                            case 4: formName += 'B'; break;\r\n                        }\r\n                    } else {\r\n                        formName += `_${i}`;\r\n                    }\r\n                    return (\r\n                        <FormUtil.FormRecord\r\n                            key={i}\r\n                            titleLabel={formName}\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={target}\r\n                                    setCheckable={(checkable) => {\r\n                                        targetList[i] = checkable;\r\n                                        setTargetList(targetList.slice());\r\n                                    }}\r\n                                    list={seedargs\r\n                                        .filter(item => groupMethod.value === 'color' ? !item.isArray : item.isArray)\r\n                                        .map(item => {\r\n                                            return { value: item.name, labelText: item.name }\r\n                                        })}\r\n                                    headBlank\r\n                                    width={250}\r\n                                    isReadOnly={!isModify}\r\n                                    validates={\r\n                                        [\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            },\r\n                                            {\r\n                                                checker: (value) => targetList.find((target, j) => i !== j && target.value === value) == undefined,\r\n                                                errorType: \"relation\"\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                    dependency={targetList}\r\n                                />\r\n                            }\r\n                        />\r\n                    );\r\n                })}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: removeSelf\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFormgrpMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Group',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'formgrp-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeFromgrpManager).defines.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpMng;","import { assert } from \"console\";\r\nimport { Store } from \"../../../../redux/store/store\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../dialog/confirmDialog\";\r\nimport Particle from \"../../../graphic/particle\";\r\nimport StoryUtil from \"../../launcher/util/storyUtil\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport ParamUtil from \"./paramUtil\";\r\n\r\n\r\nnamespace LogicElementUtil {\r\n\r\n    export const getInnerNode = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode | null => {\r\n\r\n        let cur: TreeUtil.ElementNode | null = node;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const target = cur.children.find(child => (child.data as LogicUtil.WrapElement).type === type);\r\n            if (target == undefined) cur = null;\r\n            else cur = target;\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerNodeFixed = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode => {\r\n        const innerNode = getInnerNode(node, ...typeList);\r\n        if (innerNode == null) throw new Error('[innerNode] is null.');\r\n        return innerNode as TreeUtil.ElementNode;\r\n    }\r\n\r\n    export const getInnerWrap = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement | null => {\r\n\r\n        let cur: LogicUtil.WrapElement | null = wrap;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const listName = getListParamName(cur.type);\r\n            if (listName == null) cur = null;\r\n            else {\r\n                const list = cur.data[`${listName}`] as LogicUtil.WrapElement[];\r\n                const target = list.find(child => child.type === type);\r\n                if (target == undefined) cur = null;\r\n                else cur = target;\r\n            }\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerWrapFixed = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement => {\r\n        const innerWrap = getInnerWrap(wrap, ...typeList);\r\n        if (innerWrap == null) throw new Error('[innerWrap] is null.');\r\n        return innerWrap as LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const addChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode) => {\r\n        return insertChild(wrapElement, node, node.children.length);\r\n    }\r\n\r\n    export const insertChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode, listPos: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, 0, wrapElement);\r\n        const newNode = TreeUtil.createNode(wrapElement, node);\r\n        node.children.splice(listPos, 0, newNode);\r\n        return newNode;\r\n    }\r\n\r\n    export const removeChild = (node: TreeUtil.ElementNode, listPos: number, size: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, size);\r\n        node.children.splice(listPos, size);\r\n    }\r\n\r\n    export const removeChildAll = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].length = 0;\r\n        node.children.length = 0;\r\n    }\r\n\r\n    export const isHead = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[0] == node;\r\n    }\r\n\r\n    export const isTail = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[ownerChildren.length - 1] == node;\r\n    }\r\n\r\n    export const getCurrentIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(parentWrap.type);\r\n        if (listName == null || parentWrap.data == null) return -1;\r\n        const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n        const curIndex = list.findIndex(wrap => wrap == node.data);\r\n        return curIndex;\r\n    }\r\n\r\n    const swapOrder = (node: TreeUtil.ElementNode, offset: number) => {\r\n        if (node.parent == null) return;\r\n        const ownerChildren = node.parent.children;\r\n        const wrap = node.parent.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        const ownDataChildren = wrap.data[`${listName}`] as LogicUtil.WrapElement[];\r\n\r\n        let curNo = getCurrentIndex(node);\r\n        if (curNo === -1) return;\r\n\r\n        // ツリーノードの入れ替え\r\n        const swapNode = ownerChildren[curNo];\r\n        ownerChildren[curNo] = ownerChildren[curNo + offset];\r\n        ownerChildren[curNo + offset] = swapNode;\r\n        // データ要素の入れ替え\r\n        const swapData = ownDataChildren[curNo];\r\n        ownDataChildren[curNo] = ownDataChildren[curNo + offset];\r\n        ownDataChildren[curNo + offset] = swapData;\r\n    }\r\n\r\n    export const getSwapButtons = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        ...dependencyMngNodes: TreeUtil.ElementNode[]\r\n    ) => {\r\n        return getSwapButtonsCallback(node, invalidate, (curIndex, isUpper) => {\r\n            if (dependencyMngNodes.length > 0) {\r\n                dependencyMngNodes.forEach(depNode => {\r\n                    swapOrder(depNode.children[curIndex], isUpper ? -1 : 1);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    export const getSwapButtonsCallback = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        callback: (curIndex: number, isUpper: boolean) => void\r\n    ) => {\r\n        const curIndex = getCurrentIndex(node);\r\n        return <>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↑',\r\n                        isEnable: !LogicElementUtil.isHead(node),\r\n                        callback: () => {\r\n                            swapOrder(node, -1);\r\n                            callback(curIndex, true);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↓',\r\n                        isEnable: !LogicElementUtil.isTail(node),\r\n                        callback: () => {\r\n                            swapOrder(node, 1);\r\n                            callback(curIndex, false);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>;\r\n    }\r\n\r\n    /**\r\n     * 同レベル階層に自身ノードの複製を作成する\r\n     * @param node コピー対象のノード\r\n     * @param newName コピー後の名称\r\n     */\r\n    export const replicateSameLevel = (node: TreeUtil.ElementNode, newName: string) => {\r\n        if (node.parent == null) return;\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const cloneBase = wrap.data;\r\n        const cloneDest = JSON.parse(JSON.stringify((cloneBase)));\r\n\r\n        const newWrap: LogicUtil.WrapElement = {\r\n            type: wrap.type,\r\n            data: cloneDest\r\n        };\r\n        const namable = getNamableProps(wrap.type);\r\n        newWrap.data[namable] = newName;\r\n\r\n        // ロジックマネージャに追加\r\n        const newNode = LogicElementUtil.addChild(newWrap, node.parent);\r\n        // 子要素の展開\r\n        newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n    }\r\n\r\n    export const getReplicateButton = (\r\n        node: TreeUtil.ElementNode,\r\n        isEnable: boolean,\r\n        targetElement: string, store: Store,\r\n        setStore: (store: Store) => void,\r\n        invalidate: () => void\r\n    ): JSX.Element => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        return <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[{\r\n                label: 'Replicate',\r\n                isEnable,\r\n                // isEnable: false,\r\n                callback: () => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={`Replicate this ${targetElement}.`}\r\n                        buttons={[\r\n                            {\r\n                                label: 'Cancel',\r\n                                callback: () => {\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Enter',\r\n                                callback: () => {\r\n                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                    const name = wrap.data[namable] as string;\r\n                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                    // mappingForm();\r\n                                    invalidate();\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }\r\n            }]}\r\n        />;\r\n    }\r\n\r\n    export const getListParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return 'defs';\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            // case 'root':\r\n            case 'logic-item': return 'mngs';\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return 'params';\r\n            case 'inherit-mng': return 'inherits';\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return 'args';\r\n            case 'sample-mng': return 'samples';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'fields';\r\n            case 'thumbnail-mng': return 'items';\r\n            case 'formgrp-mng': return 'defines';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getIdentifyParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'argument-item':\r\n            case 'field-item':\r\n            case 'seed-item':\r\n            case 'thumbnail-item':\r\n            case 'seedarg-item':\r\n            case 'sample-item':\r\n            case 'formgrp-item':\r\n            case 'logic-item': return 'name';\r\n            case 'connector': return 'id';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getNamableProps = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'connector': return 'id';\r\n            case 'seed-item':\r\n            case 'argument-item':\r\n            case 'seedarg-item':\r\n            case 'field-item':\r\n            case 'sample-item':\r\n            case 'thumbnail-item':\r\n            case 'logic-item': return 'name';\r\n        }\r\n        throw new Error('Namable props not found.');\r\n    }\r\n\r\n    export const syncTreeElementFromWrap = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        if (listName == null) return;\r\n        (wrap.data[listName] as any[]).forEach(childWrap => {\r\n            const newNode = TreeUtil.createNode(childWrap, node);\r\n            node.children.push(newNode);\r\n            syncTreeElementFromWrap(newNode);\r\n        });\r\n    }\r\n\r\n    export const createParamWrap = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem): LogicUtil.WrapElement => {\r\n        return { type: type, data: paramDataList };\r\n    }\r\n    export const createParamWrapList = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem[]): LogicUtil.WrapElement[] => {\r\n        return paramDataList.map(data => {\r\n            return { type: type, data: data };\r\n        });\r\n    }\r\n\r\n    export const createVisualParams = (): LogicUtil.WrapElement[] => {\r\n        const type = ParamUtil.VisualParamType;\r\n        return createParamWrapList('param-item', [\r\n            { name: type.RADIUS, formulaItems: ['var'], values: [{ type: 'direct', value: '20' }] },\r\n            { name: type.COLOR_R, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_G, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_B, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_A, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n        ]);\r\n    }\r\n\r\n    export const createBehaviorParams = (): LogicUtil.WrapElement[] => {\r\n        const list: LogicUtil.NodeParamItem[] = [];\r\n        const type = ParamUtil.BehaviorParamType;\r\n        list.push({\r\n            name: type.LIMIT,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '30' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        return createParamWrapList('param-item', list);\r\n    }\r\n\r\n    export const getDefaultLogicMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'visual-mng',\r\n                data: {\r\n                    params: createVisualParams()\r\n                } as LogicUtil.NodeParamManager\r\n            },\r\n            {\r\n                type: 'behavior-mng',\r\n                data: {\r\n                    params: createBehaviorParams()\r\n                } as LogicUtil.NodeParamManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    export const getInitialData = (): LogicUtil.WrapElement => {\r\n        return {\r\n            type: 'root',\r\n            data: {\r\n                seedMng: {\r\n                    type: 'seed-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeSeedManager\r\n                } as LogicUtil.WrapElement,\r\n                logicMng: {\r\n                    type: 'logic-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeLogicManager\r\n                } as LogicUtil.WrapElement\r\n            } as LogicUtil.NodeRoot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 同階層の名前パラメータを持つ要素より、既存の名前一覧を取得する。\r\n     * @param node 現在のノード\r\n     * @returns 同階層の既存の名前一覧\r\n     */\r\n    export const getExistNameList = (node: TreeUtil.ElementNode) => {\r\n        const nameList: string[] = [];\r\n        const curWrap = node.data as LogicUtil.WrapElement;\r\n        const nameParam = getIdentifyParamName(curWrap.type);\r\n        const mngWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listParam = getListParamName(mngWrap.type);\r\n        if (listParam == null || nameParam == null) throw Error('List param or identifiy param not found.');\r\n        const list = mngWrap.data[listParam] as LogicUtil.WrapElement[];\r\n        list.forEach(wrap => {\r\n            if (wrap.data != null && curWrap != wrap) {\r\n                nameList.push(wrap.data[nameParam]);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getLogicNameList = (mng: LogicUtil.NodeLogicManager) => {\r\n        const nameList: string[] = [];\r\n        mng.defs.forEach(logic => {\r\n            if (logic.data != null) {\r\n                nameList.push((logic.data as LogicUtil.NodeLogicItem).name);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getParamNameList = (curLogicOwner: LogicUtil.NodeLogicItem) => {\r\n        const nameList: string[] = [];\r\n\r\n        // システム固有のパラメータ名を取得\r\n        ParamUtil.VisualParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.BehaviorParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.SelfParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ExtendParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.EffectParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ModulateParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.Constants.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n\r\n        // 引数のパラメータ名を取得\r\n        const argMng = curLogicOwner.mngs.find(mng => mng.type === 'argument-mng');\r\n        if (argMng != undefined) {\r\n            const args = (argMng.data as LogicUtil.NodeArgumentManager).args;\r\n            args.forEach(arg => {\r\n                if (arg.data != null) {\r\n                    nameList.push((arg.data as LogicUtil.NodeArgumentItem).name);\r\n                }\r\n            });\r\n        }\r\n        // フィールドのパラメータ名を取得\r\n        const fieldMng = curLogicOwner.mngs.find(mng => mng.type === 'field-mng');\r\n        if (fieldMng != undefined) {\r\n            const fields = (fieldMng.data as LogicUtil.NodeFieldManager).fields;\r\n            fields.forEach(field => {\r\n                if (field.data != null) {\r\n                    nameList.push((field.data as LogicUtil.NodeParamItem).name);\r\n                }\r\n            });\r\n        }\r\n        return nameList;\r\n    }\r\n\r\n    /**\r\n     * 子要素の接頭連番をチェックし、重複しない名称を返す。\r\n     * @param prefix 接頭語\r\n     * @param node 基準となるノード\r\n     */\r\n    export const getNumberingOnPrefixName = (prefix: string, node: TreeUtil.ElementNode) => {\r\n        let num = 0;\r\n        // 接頭番号を取得\r\n        while (true) {\r\n            const check = node.children.find(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                if (wrap.data == null) return false;\r\n                console.log(wrap);\r\n                return wrap.data[getNamableProps(wrap.type)] === `${prefix}${num}`;\r\n            });\r\n            if (check != undefined) num++;\r\n            else break;\r\n        }\r\n        return `${prefix}${num}`;\r\n    }\r\n\r\n    /**\r\n     * パラメータの式で参照されている変数を検索し、\r\n     * 任意の処理（callback）を実行する。\r\n     * @param node 現在のノード\r\n     * @param callback 処理\r\n     */\r\n    export const searchVariableReferInFormula = (node: TreeUtil.ElementNode, callback: Function) => {\r\n\r\n        const mngType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const getLogicItem = () => {\r\n            switch (mngType) {\r\n                case 'field-mng':\r\n                case 'argument-mng': return node.parent?.parent?.data as LogicUtil.WrapElement;\r\n                case 'inhfld-mng': return node.parent?.parent?.parent?.parent?.data as LogicUtil.WrapElement;\r\n            }\r\n        }\r\n        const logicItem = getLogicItem()?.data as LogicUtil.NodeLogicItem;\r\n        if (mngType === 'argument-mng') {\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (fieldMng != undefined) {\r\n                callback((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n        }\r\n        if (mngType !== 'inhfld-mng') {\r\n            const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n            if (visualMng != undefined) {\r\n                callback((visualMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n            const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n            if (behaviorMng != undefined) {\r\n                callback((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n        }\r\n        const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                if (mngType !== 'inhfld-mng') {\r\n                    const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                    // Inherit配下のField要素のチェック\r\n                    if (inhfld != null) {\r\n                        callback((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                    }\r\n                }\r\n                // Extend要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    }\r\n\r\n    export const findSeedWrap = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const root = rootData.data as LogicUtil.NodeRoot;\r\n        const seed = (root.seedMng.data as LogicUtil.NodeSeedManager).defs.find(def => {\r\n            const seedItem = def.data as LogicUtil.NodeSeedItem;\r\n            return seedItem.name === seedId;\r\n        });\r\n        if (seed == undefined) throw new Error();\r\n        return seed;\r\n    }\r\n\r\n    export const doParticleJob = (rootData: LogicUtil.WrapElement, fuse: StoryUtil.Fuse, owner: Particle.Instance[]) => {\r\n        const seedWrap = findSeedWrap(rootData, fuse.seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        const getSendingValueMap = () => {\r\n            const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const valueMapList: PreviewUtil.ValueMap[] = [];\r\n            seedargMng.args.forEach((wrap, i) => {\r\n                const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                if (!seedarg.isArray) {\r\n                    valueMapList.push({ name: seedarg.name, value: Number(fuse.values[i]) })\r\n                }\r\n            });\r\n\r\n            // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n            return sendParams\r\n                .filter(item => !item.isArray)\r\n                .map(item => {\r\n                    const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMapList);\r\n                    if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                    return { name: item.name, value };\r\n                });\r\n        }\r\n\r\n        const getSendingArrayMap = () => {\r\n            const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const arrayMapList: PreviewUtil.ArrayMap[] = [];\r\n            seedargMng.args.forEach((wrap, i) => {\r\n                const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                if (seedarg.isArray) {\r\n                    arrayMapList.push({ name: seedarg.name, array: fuse.values[i].split(',').map(v => Number(v)) })\r\n                }\r\n            });\r\n\r\n            // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n            return sendParams\r\n                .filter(item => item.isArray)\r\n                .map(item => {\r\n                    const array = PreviewUtil.convertParamsToArray(item.name, sendParams, arrayMapList);\r\n                    if (array == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                    return { name: item.name, array: array };\r\n                });\r\n        }\r\n\r\n        owner.push(new Particle.Instance(\r\n            PreviewUtil.buildLogicProps(owner, getOrigin(), rootData, getSendingValueMap(), getSendingArrayMap())\r\n        ));\r\n    }\r\n\r\n    export type SeedProps = {\r\n        seed: LogicUtil.NodeSeedItem;\r\n        logic: LogicUtil.NodeLogicItem;\r\n        seedargList: LogicUtil.NodeSeedArgItem[];\r\n        seedsendList: LogicUtil.NodeParamItem[];\r\n        thumbnailList: LogicUtil.NodeThumbnailItem[];\r\n    }\r\n    export const getSeedProperties = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const seedWrap = findSeedWrap(rootData, seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n        const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        const seedargList = seedargMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n        const seedsendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n        const seedsendList = seedsendMng.params.map(wrap => wrap.data as LogicUtil.NodeParamItem);\r\n        const thumbnailMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'thumbnail-mng').data as LogicUtil.NodeThumnailManager;\r\n        const thumbnailList = thumbnailMng.items.map(wrap => wrap.data as LogicUtil.NodeThumbnailItem);\r\n\r\n        return {\r\n            seed, logic: getOrigin(), seedargList, seedsendList, thumbnailList\r\n        }\r\n    }\r\n}\r\n\r\nexport default LogicElementUtil;","export namespace SPUtil {\r\n\r\n    export const SCREEN_WIDTH = 640;\r\n    export const SCREEN_HEIGHT = 960;\r\n}","import { useState, useMemo, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewLogicInputForm = (props: {\r\n    logicWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n    setSendingArrayMap: (sendingArrayMap: (() => PreviewUtil.ArrayMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const argumentList: LogicUtil.NodeArgumentItem[] = useMemo(() => {\r\n        let list: LogicUtil.NodeArgumentItem[] = [];\r\n        const argWrap = LogicElementUtil.getInnerWrap(props.logicWrap, 'argument-mng');\r\n        if (argWrap != null) {\r\n            list = (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                const argItem = arg.data as LogicUtil.NodeArgumentItem;\r\n                return argItem;\r\n            });\r\n        }\r\n        return list;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFormList(argumentList.map(arg => {\r\n            return { value: '', errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const isFormInputOK = formList.find(form => form.errors.length > 0) == undefined;\r\n        if (isFormInputOK) {\r\n            props.setSendingValueMap(() => {\r\n                return formList\r\n                    .filter((form, i) => {\r\n                        return argumentList[i].valueType === 'number';\r\n                    })\r\n                    .map((form, i) => {\r\n                        const argument = argumentList[i];\r\n                        return { name: argument.name, value: Number(form.value) } as PreviewUtil.ValueMap\r\n                    });\r\n            });\r\n            props.setSendingArrayMap(() => {\r\n                return formList\r\n                    .filter((form, i) => {\r\n                        return argumentList[i].valueType === 'array';\r\n                    })\r\n                    .map((form, i) => {\r\n                        const argument = argumentList[i];\r\n                        const array = form.value.split(',').map(v => Number(v));\r\n                        return { name: argument.name, array } as PreviewUtil.ArrayMap\r\n                    });\r\n            });\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n            props.setSendingArrayMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return <>{\r\n        formList.map((form, i) => {\r\n            const argument = argumentList[i];\r\n\r\n            const validates: ValidateUtil.Validate[] = [];\r\n            let isNumber = false;\r\n            if (argument.valueType === 'number') {\r\n                validates.push({\r\n                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                    errorType: \"required\"\r\n                });\r\n                isNumber = true;\r\n            } else {\r\n                validates.push({\r\n                    checker: (value) => ValidateUtil.checkArrayNumber(value),\r\n                    errorType: \"value\"\r\n                });\r\n            }\r\n            return (<FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={argument.name}\r\n                labelWidth={250}\r\n                jsx={\r\n                    <FormUtil.TextField\r\n                        width={312}\r\n                        isNumber={isNumber}\r\n                        checkable={form}\r\n                        setCheckable={() => {\r\n                            setFormList(formList.slice());\r\n                        }}\r\n                        validates={validates}\r\n                    />\r\n                }\r\n            />);\r\n        })\r\n    }</>\r\n}\r\n\r\nexport default PreviewLogicInputForm;","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../factory/util/logicFormUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewSeedInputForm = (props: {\r\n    seedWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n    setSendingArrayMap: (sendingArrayMap: (() => PreviewUtil.ArrayMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [formgrpList, seedargList, presetList]: [LogicUtil.NodeFromGrpItem[], LogicUtil.NodeSeedArgItem[], LogicUtil.NodeSampleItem[]] = useMemo(() => {\r\n        const formgrpWrap = LogicElementUtil.getInnerWrap(props.seedWrap, 'interface-mng', 'formgrp-mng');\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        if (formgrpWrap != null) {\r\n            formgrpList = (formgrpWrap.data as LogicUtil.NodeFromgrpManager).defines.map(def => def.data as LogicUtil.NodeFromGrpItem);\r\n        }\r\n\r\n        const argWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedarg-mng');\r\n        const seedargList = (argWrap.data as LogicUtil.NodeSeedArgManager).args.map(arg => arg.data as LogicUtil.NodeSeedArgItem);\r\n\r\n        const sampleWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'sample-mng');\r\n        const sampleList = (sampleWrap.data as LogicUtil.NodeSampleManager).samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n        return [formgrpList, seedargList, sampleList];\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        setFormList(seedargList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (formList.find(form => form.errors.length > 0) == undefined) {\r\n            props.setSendingValueMap(() => {\r\n                const valueMap: PreviewUtil.ValueMap[] = [];\r\n                formList.forEach((form, i) => {\r\n                    const seedarg = seedargList[i];\r\n                    if (!seedarg.isArray) {\r\n                        valueMap.push({ name: seedarg.name, value: Number(form.value) });\r\n                    }\r\n                });\r\n\r\n                // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                const sendMng = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                return sendParams\r\n                    .filter((item, i) => {\r\n                        return !item.isArray;\r\n                    })\r\n                    .map(item => {\r\n                        const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                        if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                        return { name: item.name, value };\r\n                    });\r\n            });\r\n            props.setSendingArrayMap(() => {\r\n                const arrayMap: PreviewUtil.ArrayMap[] = [];\r\n                formList.forEach((form, i) => {\r\n                    const seedarg = seedargList[i];\r\n                    if (seedarg.isArray) {\r\n                        const array = (form.value === '' ? [] : form.value.split(',').map(v => Number(v)));\r\n                        arrayMap.push({ name: seedarg.name, array });\r\n                    }\r\n                });\r\n\r\n                // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                const sendMng = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                return sendParams\r\n                    .filter((item, i) => {\r\n                        return item.isArray;\r\n                    })\r\n                    .map(item => {\r\n                        const array = PreviewUtil.convertParamsToArray(item.name, sendParams, arrayMap);\r\n                        if (array == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                        return { name: item.name, array };\r\n                    });\r\n            });\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n            props.setSendingArrayMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"Preset\"\r\n            innerJsx={<FormUtil.Record\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        width={402}\r\n                        checkable={template}\r\n                        setCheckable={setTemplate}\r\n                        headBlank\r\n                        list={presetList.map((sample, i) => {\r\n                            return {\r\n                                labelText: sample.name,\r\n                                value: i.toString()\r\n                            }\r\n                        })}\r\n                    />\r\n                    <FormUtil.ButtonItem\r\n                        button={{\r\n                            label: 'Apply',\r\n                            isEnable: template.value !== '',\r\n                            callback: () => {\r\n                                const selectedIndex = Number(template.value);\r\n                                const values = presetList[selectedIndex].values;\r\n                                values.forEach((value, i) => {\r\n                                    formList[i].value = value.toString();\r\n                                });\r\n                                setFormList(formList.slice());\r\n                            }\r\n                        }}\r\n                    />\r\n                </>}\r\n            />}\r\n        />\r\n        {LogicFormUtil.buildPreviewForms(\r\n            false, seedargList, formgrpList, formList, setFormList\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default PreviewSeedInputForm;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport { SPUtil } from \"../../../sp/spUtil\";\r\nimport { VscDebugStart } from \"react-icons/vsc\";\r\nimport { IoStopOutline } from \"react-icons/io5\";\r\nimport { RxReset } from \"react-icons/rx\";\r\nimport { AiFillStepBackward, AiFillStepForward } from \"react-icons/ai\";\r\n\r\nnamespace PreviewLauncherFrameSp {\r\n\r\n    export const Component = (props: {\r\n        sceens: string[];\r\n        frameCnt: number;\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const sceens = props.sceens;\r\n        const frameCnt = props.frameCnt;\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n\r\n        const previewTabJsx = (\r\n            <>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    // 再生中は変更できない\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    interval={12}\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 60,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            icon: <AiFillStepBackward />,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 60,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            icon: <AiFillStepForward />,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            width: 100,\r\n                            icon: !isPlay ? <VscDebugStart /> : <IoStopOutline />,\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            width: 100,\r\n                            isEnable: !isPlay,\r\n                            icon: <RxReset />,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={SPUtil.SCREEN_WIDTH - 1}\r\n                height={768}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                        } break;\r\n                        case 'ArrowRight': {\r\n                            if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                        } break;\r\n                        case ' ': {\r\n                            setPlay(!isPlay);\r\n                        } break;\r\n                    }\r\n                    if (e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }}\r\n            >\r\n                {previewTabJsx}\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                        if (props.closeAction != undefined) {\r\n                            props.closeAction();\r\n                        }\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLauncherFrameSp;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #575a61ce;\r\n    border: 1px solid #8f8f8f;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${SPUtil.SCREEN_WIDTH - 3}px;\r\n    height: ${SPUtil.SCREEN_WIDTH - 3}px;\r\n    margin: 35px 0 0 0;\r\n    background-color: #020202df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryUtil from \"../launcher/util/storyUtil\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport styled, { css } from \"styled-components\";\r\nimport PreviewLauncherFrame from \"./previewLauncherFrame\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PreviewLauncherFrameSp from \"./previewLauncherFrameSp\";\r\n\r\nnamespace BuildUtil {\r\n\r\n    export type RunParticleProps = {\r\n        /** フレームの上限（過ぎると停止） */\r\n        limitFrame: number,\r\n        /** パーティクル数の上限（超えると停止） */\r\n        limitParticle: number,\r\n        /** 最低保証フレーム */\r\n        guaranteeFrame?: number,\r\n        /** 1フレーム経過ごとに実行する処理のコールバック */\r\n        doIterate: (frame: number, owner: Particle.Instance[]) => void,\r\n        /** 最終フレーム（ループから抜けた直後）に実行する処理のコールバック */\r\n        doEnd?: (frame: number, owner: Particle.Instance[]) => void\r\n    };\r\n\r\n    export type DivideProps = {\r\n        num: number;\r\n        standbyEvent: () => void;\r\n        countUpEvent: () => void;\r\n    }\r\n\r\n    export const run = (props: RunParticleProps) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        const owner: Particle.Instance[] = [];\r\n        let frame = 0;\r\n\r\n        while (true) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frame > props.limitFrame ||\r\n                owner.length > props.limitParticle ||\r\n                frame > minFrame && owner.length === 0\r\n            ) break;\r\n            frame++;\r\n        };\r\n\r\n        if (props.doEnd != undefined) {\r\n            props.doEnd(frame, owner);\r\n        }\r\n    }\r\n\r\n    export const runPaging = (props: RunParticleProps, owner: Particle.Instance[], beginFrame: number, advanceFrame: number) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        // const owner: Particle.Instance[] = [];\r\n\r\n        let frame = beginFrame;\r\n        while (frame - beginFrame < advanceFrame) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            // if (frame > props.limitFrame ||\r\n            //     owner.length > props.limitParticle ||\r\n            //     frame > minFrame && owner.length === 0\r\n            // ) {\r\n            //     if (props.doEnd != undefined) {\r\n            //         props.doEnd(frame, owner);\r\n            //     }\r\n            //     break;\r\n            // }\r\n            frame++;\r\n        };\r\n    }\r\n\r\n    const PROGRESS_VAL = 1;\r\n\r\n    type StoryPreviewProps = {\r\n        sceens: string[];\r\n        useFrame: number;\r\n    }\r\n\r\n    export type PagingField = {\r\n        useFrame: number;\r\n        curFrame: number;\r\n        sceens: string[];\r\n        owner: Particle.Instance[];\r\n    }\r\n\r\n    export const BuildFrame = (props: {\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n        const [storyPreviewProps, setStoryPreviewProps] = useState<StoryPreviewProps | null>(null);\r\n        const [buildCache, setBuildCache] = useState<PagingField>({\r\n            useFrame: 0,\r\n            curFrame: 0,\r\n            owner: [],\r\n            sceens: []\r\n        });\r\n\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n        useEffect(() => {\r\n            // プログレスバーが100％になったら処理される\r\n            if (buildCache.useFrame != 0 && buildCache.curFrame == buildCache.useFrame) {\r\n                setStoryPreviewProps({\r\n                    sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                });\r\n                return;\r\n            }\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const minFrame = fuseList[0].frame;\r\n\r\n            if (buildCache.useFrame === 0) {\r\n                BuildUtil.run({\r\n                    limitFrame,\r\n                    limitParticle,\r\n                    guaranteeFrame: minFrame,\r\n                    doIterate: (frame, owner) => {\r\n                        fuseList.some(fuse => {\r\n                            if (fuse.frame === frame) {\r\n                                LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                            } else if (fuse.frame > frame) return 1;\r\n                        });\r\n                    },\r\n                    doEnd: (frame) => {\r\n                        buildCache.useFrame = frame;\r\n                    }\r\n                });\r\n                setBuildCache({ ...buildCache });\r\n            } else {\r\n                runPaging({\r\n                    limitFrame,\r\n                    limitParticle,\r\n                    guaranteeFrame: minFrame,\r\n                    doIterate: (frame, owner) => {\r\n\r\n                        fuseList.some(fuse => {\r\n                            if (fuse.frame === frame) {\r\n                                LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                            } else if (fuse.frame > frame) return 1;\r\n                        });\r\n\r\n                        buildCache.sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                            // パーティクルの描画\r\n                            owner.forEach(par => {\r\n                                par.draw(ctx);\r\n                            });\r\n                            ctx.save();\r\n                        }));\r\n                    },\r\n                    // doEnd: () => {\r\n                    //     setStoryPreviewProps({\r\n                    //         sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                    //     });\r\n                    // }\r\n                }, buildCache.owner, buildCache.curFrame, PROGRESS_VAL);\r\n                buildCache.curFrame += PROGRESS_VAL;\r\n                if (buildCache.curFrame > buildCache.useFrame) {\r\n                    buildCache.curFrame = buildCache.useFrame;\r\n                }\r\n                setBuildCache({ ...buildCache });\r\n            }\r\n        }, [buildCache]);\r\n\r\n        useEffect(() => {\r\n            if (storyPreviewProps != null) {\r\n                store.system.dialog = <PreviewLauncherFrameSp.Component\r\n                    sceens={storyPreviewProps.sceens}\r\n                    frameCnt={storyPreviewProps.useFrame}\r\n                    closeAction={props.closeAction}\r\n                />;\r\n                dispatcher.updateStore();\r\n            }\r\n        }, [storyPreviewProps]);\r\n\r\n\r\n        const getJsx = () => {\r\n            if (storyPreviewProps == null) {\r\n                if (buildCache == null) return <></>;\r\n                const rate = buildCache.curFrame / buildCache.useFrame * 100;\r\n                const isStandby = buildCache.useFrame === 0;\r\n                return (\r\n                    <_Blind>\r\n                        <_ProgressBox><_ProgressVal rate={rate} /></_ProgressBox>\r\n                        <_RateVal isStandby={isStandby}>{isStandby ? 'Calculating...' : `${Math.floor(rate)}%`}</_RateVal>\r\n                    </_Blind>\r\n                );\r\n            }\r\n            return <></>;\r\n        }\r\n\r\n        return getJsx();\r\n    }\r\n}\r\n\r\nexport default BuildUtil;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #002910c0;\r\n    z-index: 10;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _ProgressBox = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relaltive;\r\n    width: calc(100% - 20px);\r\n    height: 40px;\r\n    margin: 200px 0 0 10px;\r\n    background-color: #ffffff29;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    background-color: #ffffffc1;\r\n`;\r\n\r\nconst _RateVal = styled.div<{\r\n    isStandby: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #0000003b;\r\n\r\n    color: #ffffff;\r\n    ${props => !props.isStandby ? '' : css`\r\n        color: #f50000;\r\n    `}\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ReactLoading from 'react-loading';\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport PreviewLogicInputForm from \"./inputForm/previewLogicInputForm\";\r\nimport PreviewSeedInputForm from \"./inputForm/previewSeedInputForm\";\r\nimport BuildUtil from \"./buildUtil\";\r\n\r\nnamespace PreviewLogicFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        master: LogicUtil.WrapElement;\r\n        rootData: LogicUtil.WrapElement;\r\n        closeButtonAction: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n\r\n        const [sceens, setSceens] = useState<string[]>([]);\r\n        const [frameCnt, setFrameCnt] = useState<number>(-1);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isBuild, setBuild] = useState<boolean>(false);\r\n        const [progress, setProgress] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const [sendingValueMap, setSendingValueMap] = useState<((() => PreviewUtil.ValueMap[]) | null)>(null);\r\n        const [sendingArrayMap, setSendingArrayMap] = useState<((() => PreviewUtil.ArrayMap[]) | null)>(null);\r\n\r\n        const isSeed = props.master.type === 'seed-item';\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n        useEffect(() => {\r\n            if (isBuild) build();\r\n        }, [isBuild]);\r\n\r\n        const build = () => {\r\n            if (sendingValueMap == null) return;\r\n            setCur(0);\r\n            const sceens: string[] = [];\r\n            BuildUtil.run({\r\n                limitFrame: 500,\r\n                limitParticle: 3000,\r\n                doIterate: (frame, owner) => {\r\n                    if (frame === 0) {\r\n                        const getOrigin = () => {\r\n                            if (!isSeed) return props.master.data as LogicUtil.NodeLogicItem;\r\n                            else {\r\n                                const seed = props.master.data as LogicUtil.NodeSeedItem;\r\n                                const root = props.rootData.data as LogicUtil.NodeRoot;\r\n                                const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                                return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                            }\r\n                        }\r\n                        owner.push(new Particle.Instance(\r\n                            PreviewUtil.buildLogicProps(owner, getOrigin(), props.rootData, sendingValueMap as any, sendingArrayMap as any)\r\n                        ));\r\n                    }\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n\r\n                        // 経過フレーム、要素数の表示\r\n                        ctx.globalAlpha = 1;\r\n                        ctx.font = '16pt Arial';\r\n                        ctx.fillStyle = '#ffffff';\r\n                        ctx.fillText(`${frame}`, 6, 24);\r\n                        ctx.fillStyle = '#ffec5c';\r\n                        ctx.fillText(`${owner.length}`, 6, 44);\r\n\r\n                        // ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    setFrameCnt(frame);\r\n                    setSceens(sceens);\r\n\r\n                    setBuild(false);\r\n                    setTabIndex(1);\r\n                }\r\n            });\r\n        }\r\n\r\n        const isInputOK = sendingValueMap != null;\r\n\r\n        const buildTabJsx = (\r\n            <_Wrap>\r\n                <_Blind isEnable={isBuild}>\r\n                    {/* <ReactLoading type='spinningBubbles' /> */}\r\n                    <_Msg>Now building...</_Msg>\r\n                </_Blind>\r\n                <_FormDiv\r\n                    isSeed={props.master.type === 'seed-item'}\r\n                >\r\n                    {!isSeed ? (\r\n                        <PreviewLogicInputForm\r\n                            logicWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                            setSendingArrayMap={setSendingArrayMap}\r\n                        />\r\n                    ) : (\r\n                        <PreviewSeedInputForm\r\n                            seedWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                            setSendingArrayMap={setSendingArrayMap}\r\n                        />\r\n                    )}\r\n                </_FormDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Build',\r\n                            isEnable: isInputOK && !isBuild,\r\n                            callback: () => {\r\n                                setBuild(true);\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    // 再生中は変更できない\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    if (tabIndex === 0) {\r\n                        if (isInputOK && e.key === ' ') build();\r\n                    } else {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                            } break;\r\n                            case 'ArrowRight': {\r\n                                if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                            } break;\r\n                            case ' ': {\r\n                                setPlay(!isPlay);\r\n                            } break;\r\n                        }\r\n                    }\r\n                    if (!isPlay && e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }\r\n                }\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Build', enable: true, cont: buildTabJsx },\r\n                            { name: 'Play', enable: frameCnt !== -1, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={props.closeButtonAction}\r\n                >×</_CloseButton>\r\n            </_Frame >\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLogicFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _FormDiv = styled.div<{\r\n    isSeed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 580px;\r\n    background-color: #c5cfd6df;\r\n    ${props => !props.isSeed ? '' : css`\r\n        background-color: #c6d6c5df;\r\n    `}\r\n    overflow-y: auto;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #c5c5c5df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;\r\n\r\n\r\nconst _Blind = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: ${props => !props.isEnable ? 'none;' : 'inline-block;'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000552cd;\r\n    z-index: 99;\r\n`;\r\n\r\nconst _Msg = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    margin: 240px 0 0 110px;\r\n    /* background-color: #26f055cd; */\r\n    color: white;\r\n    font-size: 56px;\r\n    font-weight: 600;\r\n\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport assert from \"assert\";\r\n\r\nnamespace NameDefDialog {\r\n\r\n    export const Component = (props: {\r\n        targetSeq: number,\r\n        source?: string,\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const width = 500;\r\n        const height = 150;\r\n\r\n        const isCreate = props.targetSeq === -1;\r\n        const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n        const getDefaultName = () => {\r\n            return props.targetSeq === -1 ? '' : (projects.find(p => p.seq === props.targetSeq) as StoreCloud.Project).name;\r\n        }\r\n\r\n        useEffect(() => {\r\n            name.value = getDefaultName();\r\n            setName({ ...name });\r\n        }, []);\r\n\r\n        const [existNames] = useMemo(() => {\r\n            return [\r\n                projects.map(item => item.name)\r\n            ];\r\n        }, []);\r\n\r\n        const registCreate = () => {\r\n            const result = findProjectMaxSeq();\r\n            result.then((maxSeq) => {\r\n                const newProject: StoreCloud.Project = {\r\n                    seq: Number(maxSeq + 1),\r\n                    name: name.value,\r\n                    source: props.source as string,\r\n                    lastmod: ''\r\n                };\r\n                projects.push(newProject);\r\n                insertProject(store.system.user?.seq as number, newProject).then(() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            });\r\n        }\r\n\r\n        const registUpdate = () => {\r\n            const targetItem = projects.find(item => item.seq === props.targetSeq);\r\n            if (targetItem != undefined) {\r\n                updateProjectName(props.targetSeq, name.value).then(() => {\r\n                    targetItem.name = name.value;\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            }\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: isCreate ? 'Create' : 'Update',\r\n                isEnable: name.errors.length === 0,\r\n                callback: () => {\r\n                    if (isCreate) registCreate();\r\n                    else registUpdate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, input new name!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => LogicUtil.checkFieldName(value),\r\n                                //     errorType: \"value\"\r\n                                // },\r\n                                {\r\n                                    checker: (value) => !existNames.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NameDefDialog;\r\n\r\nconst findProjectMaxSeq = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT max(seq) m FROM libdvtbl`);\r\n    const results = await response.json();\r\n    return results[0].m;\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO libdvtbl(seq, owner, name, version, outline, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${'1.0'}', '', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update libdvtbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import { type } from \"os\";\r\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport Common from \"../common\";\r\nimport PreviewLogicFrame from \"../preview/previewLogicFrame\";\r\nimport LogicElementUtil from \"./util/logicElementUtil\";\r\nimport LogicUtil from \"./util/logicUtil\";\r\n\r\nexport const FactoryTreeContext = createContext({} as LogicUtil.DetailArgs);\r\n\r\nconst LogicMainteTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    // const [rootData, setRootData] = useState(LogicElementUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    // const [treeDisable, setTreeDisable] = useState(false);\r\n    const [isModify, setModify] = useState<boolean>(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    const rootData = store.libraryData as LogicUtil.WrapElement;\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: LogicUtil.getChildrenDataNode(rootData)\r\n        }\r\n    }, [rootData]);\r\n\r\n    // useEffect(()=> {\r\n    //     store.logicData = rootData;\r\n    //     setStore({...store});\r\n    // }, [rootData]);\r\n\r\n    const setRootData = (rootData: LogicUtil.WrapElement) => {\r\n        store.libraryData = rootData;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const masterNode = useMemo(() => {\r\n        let cur: TreeUtil.ElementNode | null = focusNode;\r\n        while (cur != null) {\r\n            const type = (cur.data as LogicUtil.WrapElement).type;\r\n            if (['logic-item', 'seed-item'].includes(type)) return cur;\r\n            cur = cur.parent;\r\n        };\r\n        return null;\r\n    }, [focusNode]);\r\n\r\n    /**\r\n     * プレビューダイアログを表示する\r\n     */\r\n    const openPreviewDialog = () => {\r\n        if (masterNode == null) return;\r\n        store.system.dialog = (\r\n            <PreviewLogicFrame.Component\r\n                master={masterNode.data as LogicUtil.WrapElement}\r\n                rootData={rootData}\r\n                closeButtonAction={() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n            onKeyDown={(e) => {\r\n                // console.log(e.key);\r\n                if (isModify || focusNode == null) return;\r\n                switch (e.key) {\r\n                    case 'ArrowRight': {\r\n                        if (focusNode.children.length > 0) {\r\n                            if (!focusNode.isOpen) focusNode.isOpen = true;\r\n                            else setFocusNode(focusNode.children[0]);\r\n                            setInvalidate({});\r\n                        }\r\n                    } break;\r\n                    case 'ArrowLeft': {\r\n                        if (focusNode.isOpen) focusNode.isOpen = false;\r\n                        else {\r\n                            if (focusNode.parent != null) setFocusNode(focusNode.parent);\r\n                        }\r\n                        setInvalidate({});\r\n                    } break;\r\n                    case 'ArrowUp': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n) {\r\n                                    if (i === 0) {\r\n                                        setFocusNode(focusNode.parent);\r\n                                        setInvalidate({});\r\n                                    } else {\r\n                                        setFocusNode(list[i - 1]);\r\n                                        setInvalidate({});\r\n                                    }\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case 'ArrowDown': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n && i < list.length - 1) {\r\n                                    setFocusNode(list[i + 1]);\r\n                                    setInvalidate({});\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case ' ': {\r\n                        if (masterNode != null) openPreviewDialog();\r\n                    } break;\r\n                }\r\n            }}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview',\r\n                                isEnable: masterNode != null,\r\n                                callback: openPreviewDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return LogicUtil.getNodeDisplayJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={isModify}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <_DetailDiv>\r\n                    <_DetailHeader>\r\n                        <_DetailHeaderLabel>{LogicUtil.getTypeName(focusNode)}</_DetailHeaderLabel>\r\n                    </_DetailHeader>\r\n                    <FactoryTreeContext.Provider value={{\r\n                        rootData,\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        isModify,\r\n                        setModify,\r\n                        // treeDisable,\r\n                        setRootData,\r\n                        removeSelf: () => {\r\n                            const node = focusNode as TreeUtil.ElementNode;\r\n                            let index = -1;\r\n                            node.parent?.children.forEach((n, i) => {\r\n                                if (n == node) index = i;\r\n                            });\r\n                            node.parent?.children.splice(index, 1);\r\n                            const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n                            const listName = LogicElementUtil.getListParamName(parentWrap.type);\r\n                            if (listName == null) return;\r\n                            const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n                            list.splice(index, 1);\r\n                            setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                            setInvalidate({});\r\n                        }\r\n                    }}>\r\n                        <_DetailMainDiv>{LogicUtil.getDetailComponent(focusNode)}</_DetailMainDiv>\r\n                    </FactoryTreeContext.Provider>\r\n                </_DetailDiv>\r\n            </_PropsDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default LogicMainteTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #6c8186;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d87b;\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _TreeHeadHalf = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    background-color: #7fbdb47a;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #9fa9b6;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _DetailDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c9;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\nconst _DetailHeader = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #b4b29e; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _DetailHeaderLabel = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #a10000;\r\n    /* background-color: #bbd0d3; */\r\n    border: solid 1px #a10000;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 20px);\r\n    margin: 5px 0 0 10px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DetailMainDiv = styled.div`\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 44px);\r\n    margin: 0 0 0 4px;\r\n    background-color: #ccd2d3;\r\n    border: solid 1px #0026a1;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import StoreLocalStrage from \"../../../../redux/store/storeLocalStrage\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\n\r\nnamespace CloudUtil {\r\n\r\n    export const uploadShareScenario = async (project: StoreLocalStrage.Project) => {\r\n\r\n        let cloudSeq = project.cloudSeq;\r\n        if (cloudSeq === -1) {\r\n            cloudSeq = await getNextSeq();\r\n        }\r\n\r\n        const sourcePlain = JSON.stringify(project.scenarioData);\r\n        const sourceZip = DataUtil.gZip(sourcePlain);\r\n        const libhash = DataUtil.getSHA256Hash(JSON.stringify(project.libraryData));\r\n        await insertSnrshRecord(cloudSeq, project.name, libhash, sourceZip);\r\n\r\n        const existsHash = await isExistsSameHash(libhash);\r\n        // ハッシュがなければ登録する\r\n        if (!existsHash) {\r\n            const libSourcePlain = JSON.stringify(project.libraryData);\r\n            const libSourceZip = DataUtil.gZip(libSourcePlain);\r\n            const owner = -1;\r\n            await insertLibhsRecord(libhash, project.libName, libSourceZip, owner);\r\n        }\r\n\r\n        console.log('cloudSeq: ' + cloudSeq);\r\n        return cloudSeq;\r\n    }\r\n\r\n    export const deleteShareScenario = async (cloudSeq: number) => {\r\n\r\n        await deleteSnrshRecord(cloudSeq);\r\n\r\n        // 同じライブラリのハッシュを使っているシナリオがあるか\r\n        // const existsUseHash = await isExistsSameHash(libhash);\r\n        // // ハッシュがなければ登録する\r\n        // if (!existsHash) {\r\n        //     const libSource = JSON.stringify(project.libraryData);\r\n        //     const owner = -1;\r\n        //     await insertlibhsRecord(libhash, project.libName, libSource, owner);\r\n        // }\r\n    }\r\n\r\n    const getNextSeq = async () => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT max(seq) as m FROM snrshtbl`);\r\n        const results = await response.json();\r\n        const records = results as { m: number }[];\r\n        return records.length === 0 ? 0 : (records[0].m + 1);\r\n    };\r\n\r\n    const insertSnrshRecord = async (seq: number, name: string, libhash: string, source: string) => {\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `INSERT INTO snrshtbl(seq, name, libhash, source, lastmod)\r\n            VALUES(${seq}, '${name}', '${libhash}', '${source}', datetime ('now'))`\r\n        );\r\n    }\r\n\r\n    const deleteSnrshRecord = async (seq: number) => {\r\n        DataUtil.sendQueryRequestToAPI('update', `DELETE FROM snrshtbl where seq = ${seq}`);\r\n    }\r\n\r\n    const isExistsSameHash = async (hash: string) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as c FROM libhstbl where hash = '${hash}'`);\r\n        const results = await response.json();\r\n        const records = results as { c: number }[];\r\n        return records[0].c > 0;\r\n    };\r\n\r\n    const insertLibhsRecord = async (hash: string, name: string, source: string, owner: number) => {\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `INSERT INTO libhstbl(hash, name, source, owner)\r\n            VALUES('${hash}', '${name}', '${source}', ${owner})`\r\n        );\r\n    }\r\n}\r\n\r\nexport default CloudUtil;","import assert from \"assert\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryUtil from \"../launcher/util/storyUtil\";\r\nimport NameDefDialog from \"./nameDefDialog\";\r\nimport NewProjectDialog from \"./newProjectDialog\";\r\nimport NewProjectDialogStoryOnly from \"./newProjectDialogStoryOnly\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n    const listItemJsx = store.cloud == null ? [] : store.cloud.projects.map((project, i) => {\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    setFcsListIdx(i);\r\n                    console.log(DataUtil.getHashedFromProjectSeq(project.seq));\r\n                }}\r\n            >\r\n                <_Name>{project.name}</_Name>\r\n                {/* <_Date> -{item.lastmod}</_Date> */}\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    const hasData = store.libraryData != null;\r\n    const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n    useEffect(() => {\r\n        if (store.cloud == null) {\r\n            setFcsListIdx(-1);\r\n        }\r\n    }, [store.cloud]);\r\n\r\n    const [elementSize, developCnt, privateCnt, releaseCnt, logicCnt, fuseCnt] = useMemo(() => {\r\n        if (store.libraryData == null) return [0, 0, 0, 0, 0, 0];\r\n        let size = 0;\r\n        const incrRec = (wrap: LogicUtil.WrapElement) => {\r\n            size++;\r\n            const listName = LogicElementUtil.getListParamName(wrap.type);\r\n            if (listName != null) {\r\n                const list = wrap.data[listName] as LogicUtil.WrapElement[];\r\n                list.forEach(wrap => incrRec(wrap));\r\n            }\r\n        }\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        incrRec(root.logicMng);\r\n        incrRec(root.seedMng);\r\n\r\n        let developCnt = 0;\r\n        let privateCnt = 0;\r\n        let releaseCnt = 0;\r\n        let fuseCnt = 0;\r\n        const seedMng = root.seedMng.data as LogicUtil.NodeSeedManager;\r\n        seedMng.defs.forEach(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n            switch (seed.permit) {\r\n                case 'develop': developCnt++; break;\r\n                case 'private': privateCnt++; break;\r\n                case 'release': releaseCnt++; break;\r\n            }\r\n        });\r\n\r\n        const logicMng = root.logicMng.data as LogicUtil.NodeLogicManager;\r\n\r\n        if (store.storyData != null) {\r\n            fuseCnt = store.storyData.fuseList.length;\r\n        }\r\n        return [size, developCnt, privateCnt, releaseCnt, logicMng.defs.length, fuseCnt];\r\n    }, [store.libraryData]);\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを新規アップロードする\r\n     */\r\n    const uploadCloud = () => {\r\n        const source = DataUtil.gZip(JSON.stringify(store.libraryData));\r\n        store.system.dialog = <NameDefDialog.Component\r\n            targetSeq={-1}\r\n            source={source}\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを上書き更新する\r\n     */\r\n    const overwriteCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.gZip(JSON.stringify(store.libraryData));\r\n        updateProjectSource(curPrj.seq, source).then(() => {\r\n            curPrj.source = source;\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Update project succesful!\"\r\n            />;\r\n            setStore({ ...store });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 選択中のクラウド上のファイルを読み込む\r\n     */\r\n    const cloneCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.unZip(curPrj.source);\r\n        const data = JSON.parse(source);\r\n        store.libraryData = data;\r\n        store.system.dialog = <ConfirmDialog.Component\r\n            message=\"Clone project succesful!\"\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    const saveLocalFile = () => {\r\n        DataUtil.saveLibraryFile(store, setStore);\r\n    }\r\n\r\n    const getNewSaveButton = () => {\r\n        switch (tabIndex) {\r\n            // Cloud\r\n            case 0: return {\r\n                label: 'Upload cloud',\r\n                width: 210,\r\n                isEnable: hasData && store.cloud != null,\r\n                callback: uploadCloud\r\n            }\r\n            // Local\r\n            case 1: return {\r\n                label: 'Save file',\r\n                width: 210,\r\n                isEnable: hasData && store.fileHandle == null,\r\n                callback: () => {\r\n                    // store.fileHandle = null;\r\n                    // setStore({...store});\r\n                    saveLocalFile();\r\n                }\r\n            }\r\n        }\r\n        throw assert;\r\n    }\r\n\r\n    const getOverwriteButton = () => {\r\n        switch (tabIndex) {\r\n            // Cloud\r\n            case 0: return {\r\n                label: 'Overwrite',\r\n                width: 210,\r\n                isEnable: fcsListIdx != -1 && hasData,\r\n                callback: overwriteCloudFile\r\n            }\r\n            // Local\r\n            case 1: return {\r\n                label: 'Overwrite',\r\n                width: 210,\r\n                isEnable: hasData && store.fileHandle != null,\r\n                callback: () => {\r\n                    // store.fileHandle = null;\r\n                    // setStore({...store});\r\n                    saveLocalFile();\r\n                }\r\n            }\r\n        }\r\n        throw assert;\r\n    }\r\n\r\n    const cloudJsx = (<_ContDiv isEnable={store.cloud != null}>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Load',\r\n                    isEnable: !hasData && fcsListIdx !== -1 && projects[fcsListIdx].source !== '',\r\n                    callback: cloneCloudFile\r\n                },\r\n                {\r\n                    label: 'Rename',\r\n                    width: 110,\r\n                    isEnable: fcsListIdx != -1,\r\n                    callback: () => {\r\n                        store.system.dialog = <NameDefDialog.Component\r\n                            targetSeq={projects[fcsListIdx].seq}\r\n                        />;\r\n                        setStore({ ...store });\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Delete',\r\n                    width: 110,\r\n                    isEnable: fcsListIdx != -1,\r\n                    callback: () => {\r\n                        deleteProject(projects[fcsListIdx].seq).then(() => {\r\n                            store.system.dialog = <ConfirmDialog.Component\r\n                                message=\"Delete project succesful!\"\r\n                            />;\r\n                            projects.splice(fcsListIdx, 1);\r\n                            setFcsListIdx(fcsListIdx - 1);\r\n                            setStore({ ...store });\r\n                        });\r\n                    }\r\n                },\r\n            ]}\r\n        />\r\n        <_ListDiv>\r\n            {listItemJsx}\r\n        </_ListDiv>\r\n    </_ContDiv>);\r\n\r\n    const localJsx = (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Load',\r\n                    width: 100,\r\n                    isEnable: !hasData,\r\n                    callback: () => { DataUtil.loadFile(store, setStore) }\r\n                },\r\n                {\r\n                    label: 'Disconnect',\r\n                    width: 160,\r\n                    isEnable: store.fileHandle != null,\r\n                    callback: () => {\r\n                        store.fileHandle = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                },\r\n            ]}\r\n        />\r\n    </>);\r\n\r\n    return (<_Wrap>\r\n        <_HeaderDiv>\r\n            <FormUtil.ButtonRecord\r\n                align=\"left\"\r\n                buttons={[\r\n                    {\r\n                        label: 'New Project',\r\n                        isEnable: !hasData,\r\n                        callback: () => {\r\n                            store.libraryData = LogicElementUtil.getInitialData();\r\n                            // store.system.dialog = <NewProjectDialog.Component />;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Clear',\r\n                        width: 100,\r\n                        isEnable: hasData,\r\n                        callback: () => {\r\n                            store.libraryData = null;\r\n                            store.storyData = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                ]}\r\n            />\r\n        </_HeaderDiv>\r\n        <_BodyDiv>\r\n            <_LeftDiv isEnable={true}>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'Cloud', enable: true, cont: cloudJsx },\r\n                        { name: 'Local', enable: true, cont: localJsx },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_LeftDiv>\r\n            <_RighttDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getNewSaveButton(),\r\n                        getOverwriteButton()\r\n                    ]}\r\n                />\r\n                <FormUtil.BorderPanel\r\n                    title=\"Project\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Private\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : privateCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Release\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : releaseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Logic\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Elements\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : elementSize.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Hash\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    // width={340}\r\n                                    isRecordItem\r\n                                    value={!hasData ? '-' : DataUtil.getSHA256Hash(JSON.stringify(store.libraryData))}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Fuses\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : fuseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n                {/* <FormUtil.BorderPanel\r\n                    title=\"File\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Type\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={getProjectType()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                /> */}\r\n            </_RighttDiv>\r\n        </_BodyDiv>\r\n\r\n    </_Wrap >);\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst updateProjectSource = async (seq: number, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update libdvtbl set source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from libdvtbl where seq = ${seq};`)\r\n}\r\n\r\nconst HEADER_WIDTH = 40;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    background-color: #ebebeb30;\r\n`;\r\n\r\nconst _HeaderDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_WIDTH}px;\r\n    background-color: #d1f5f32f;\r\n`;\r\n\r\nconst _BodyDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_WIDTH}px);\r\n    background-color: #221a212c;\r\n`;\r\n\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #ffe3fb53; */\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ContDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 38px);\r\n    box-sizing: border-box;\r\n    background-color: #f0ecd43d;\r\n    border: 1px solid #002c8a;\r\n    border-radius: 4px;\r\n`;\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    type: ProjectType | '';\r\n}>`\r\n    color: #0000006d;\r\n    ${props => props.type === 'library' ? css`color: #b90000be;` : ''}\r\n    ${props => props.type === 'story' ? css`color: #003bb9bd;` : ''}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\nconst _RighttDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #cbf7cd2d;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane, TabElements } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport LogicMainteTab from \"./factory/logicMainteTab\";\r\nimport ManageTab from \"./manage/manageTab\";\r\n\r\nconst CreateChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const getProjectType = () => {\r\n        let str = '-';\r\n        if (store.libraryData != null) str = 'library';\r\n        if (store.storyData != null) str = 'scenario';\r\n        return str;\r\n    };\r\n    const projectType = getProjectType();\r\n\r\n    const tabElements: TabElements[] = [];\r\n    tabElements.push({ name: 'Manage', enable: true, cont: <ManageTab /> });\r\n    tabElements.push({ name: 'Library', enable: projectType === 'library', cont: <LogicMainteTab /> });\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={tabElements}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CreateChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport TreeUtil from \"../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../create/factory/util/logicUtil\";\r\nimport PreviewLogicFrame from \"../create/preview/previewLogicFrame\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    isOpen: boolean;\r\n    seedList: SeedProps[];\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\n\r\nconst PublishFrame = (props: {\r\n    setLibCnt: (artsCnt: number) => void;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [libList, setLibList] = useState<LibProps[]>([]);\r\n\r\n    useEffect(() => {\r\n        findAllReleaseProjectList().then((resList) => {\r\n            const libList: LibProps[] = [];\r\n            resList.forEach(res => {\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const rootData = JSON.parse(DataUtil.unZip(res.source)) as LogicUtil.WrapElement;\r\n                const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                const seedList: SeedProps[] = seedMng.defs\r\n                    .filter(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        return seed.permit === 'release';\r\n                    })\r\n                    .map(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                        const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                        return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                    });\r\n                libList.push({\r\n                    name, ownerId, lastmod, rootData, seedList, isOpen: false\r\n                });\r\n            });\r\n            setLibList(libList);\r\n            props.setLibCnt(libList.length);\r\n        });\r\n    }, []);\r\n\r\n    const download = (plainData: string) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        window.showSaveFilePicker(options).then((handle) => {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await handle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"Successfully download!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        }).catch(() => {\r\n            console.log('キャンセルされました');\r\n        });\r\n    }\r\n\r\n    const libListJsx = libList\r\n        .filter(lib => lib.seedList.length > 0).map((lib, i) => {\r\n            const dispCnt = !lib.isOpen ? 0 : lib.seedList.length;\r\n            return (<_Item key={i} count={dispCnt}>\r\n                <_Header onClick={() => {\r\n                    // window.open(DataUtil.getPreviewURL(score.seq), '_blank');\r\n                }}>\r\n                    <_Owner>{`${lib.ownerId}`}</_Owner>\r\n                    <_CName onClick={() => {\r\n                        download(JSON.stringify(lib.rootData));\r\n                    }}>{`${lib.name}`}</_CName><_CDate>{lib.lastmod}</_CDate>\r\n                </_Header>\r\n                <_DetailMain count={dispCnt}>\r\n                    {lib.seedList.map((seed, j) => {\r\n                        let labelName = seed.name;\r\n                        if (seed.disp != undefined) labelName = seed.disp;\r\n                        return (\r\n                            <_SeedItemFrame key={j} onClick={() => {\r\n                                store.system.dialog = (\r\n                                    <PreviewLogicFrame.Component\r\n                                        master={seed.master}\r\n                                        rootData={lib.rootData}\r\n                                        closeButtonAction={() => {\r\n                                            store.system.dialog = null;\r\n                                            setStore({ ...store });\r\n                                        }}\r\n                                    />\r\n                                );\r\n                                setStore({ ...store });\r\n                            }}>\r\n                                <_SeedItemInner>\r\n                                    <_SeedName>{labelName}</_SeedName>\r\n                                    <_SeedArgCnt>{` [${seed.argCount} arguments]`}</_SeedArgCnt>\r\n                                </_SeedItemInner>\r\n                            </_SeedItemFrame>\r\n                        );\r\n                    })}\r\n                </_DetailMain>\r\n                <_DetailOpen onClick={() => {\r\n                    libList[i].isOpen = !libList[i].isOpen;\r\n                    setLibList(libList.slice());\r\n                }}>\r\n                    <_CSummary>{` ${lib.seedList.length} seeds ▼`}</_CSummary>\r\n                </_DetailOpen>\r\n            </_Item>);\r\n        });\r\n\r\n    return (\r\n        <_ListFrame>{libListJsx}</_ListFrame>\r\n    );\r\n}\r\n\r\nexport default PublishFrame;\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = lib.owner) as owner, source, lastmod\r\n        FROM libdvtbl lib\r\n        WHERE source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #6d7a86;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst SEED_HEIGTH = 40;\r\nconst _Item = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${props => (props.count > 0 ? 8 : 0) + 89 + props.count * SEED_HEIGTH}px;\r\n    /* border-bottom: 1px solid #262626; */\r\n    /* background-color: #2e2e2e; */\r\n    /* background: linear-gradient(to bottom, transparent, #4f4f4f); */\r\n    margin: 2px 0 0 0;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    } */\r\n    transition: height 200ms;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100%);\r\n    height: 60px;\r\n    /* background-color: #c9e3df; */\r\n    background: linear-gradient(to bottom, #b9b9b9, #e2e2e2, #b9b9b9);\r\n    /* margin: 4px 0 0 4px; */\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff);\r\n    } */\r\n`;\r\nconst _DetailMain = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 40px);\r\n    height: ${props => (props.count > 0 ? 8 : 0) + props.count * SEED_HEIGTH}px;\r\n    background-color: #c7c7c7;\r\n    border-radius: 0 0 2px 2px;\r\n    margin: 0 0 0 20px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    transition: height 200ms;\r\n    overflow-y: hidden;\r\n`;\r\nconst _DetailOpen = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 60px);\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    margin: 0 0 0 30px;\r\n    background-color: #b1b1b1;\r\n    /* border-radius: 0 0 2px 2px; */\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    clip-path: polygon(7.5% 100%, 0% 0%, 100% 0%, 92.5% 100%);\r\n    \r\n    &:hover {\r\n        background-color: #c6d1a1;\r\n    }\r\n`;\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    \r\n    &:hover {\r\n        color: #db3333;\r\n    }\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CSummary = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 25px;\r\n    font-size: 22px;\r\n    line-height: 22px;\r\n    font-weight: 600;\r\n    color: #fffffad6;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _SeedItemFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${SEED_HEIGTH}px;\r\n    /* background-color: #a3b9c0; */\r\n    margin: 2px 0 0 0;\r\n    /* padding-left: 4px; */\r\n    text-align: left;\r\n`;\r\nconst _SeedItemInner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 2px;\r\n    border: 1px solid #0000002e;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    line-height: 29px;\r\n    font-weight: 600;\r\n    padding: 0 0 0 5px;\r\n    &:hover {\r\n        background-color: #bbd4dc;\r\n    }\r\n`;\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #000f74;\r\n`;\r\nconst _SeedArgCnt = styled.span<{\r\n}>`\r\n    color: #c7020265;\r\n`;","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport releaseNote from \"../../resource/release_note.json\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\ntype NotePorp = {\r\n    version: string;\r\n    date: string;\r\n    note: string;\r\n}\r\n\r\nconst ReleaseNote = () => {\r\n    const { store } = useContext(GlobalContext);\r\n\r\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\r\n    useEffect(() => {\r\n        // fetch('assets/release_note.json')\r\n        //     .then(response => response.json()) // (2) レスポンスデータを取得\r\n        //     .then(json => { // (3)レスポンスデータを処理\r\n        //         const list = json as NotePorp[];\r\n        //         setJsx(list.map((item, i) => {\r\n        //             const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n        //             return (\r\n        //                 <_Item key={i}>\r\n        //                     <_Header>v{item.version} ({item.date})</_Header>\r\n        //                     <_Detail>{record}</_Detail>\r\n        //                 </_Item>\r\n        //             );\r\n        //         }));\r\n        //     });\r\n\r\n        const list = releaseNote as NotePorp[];\r\n        setJsx(list.map((item, i) => {\r\n            const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n            return (\r\n                <_Item key={i}>\r\n                    <_Header>v{item.version} ({item.date})</_Header>\r\n                    <_Detail>{record}</_Detail>\r\n                </_Item>\r\n            );\r\n        }));\r\n    }, []);\r\n    return (<_ListFrame>{jsx}</_ListFrame>);\r\n}\r\n\r\nexport default ReleaseNote;\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    /* height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px); */\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #bfcace;\r\n    border: 1px solid #9b9b9b;\r\n    border-radius: 6px;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    font-weight: 600;\r\n    /* background-color: #8bdbf8; */\r\n    color: #494975;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    /* background-color: #dafce4; */\r\n    color: #754949;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PublishFrame from \"./publishFrame\";\r\nimport ReleaseNote from \"./releaseNote\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [userCount, setUserCount] = useState(0);\r\n    const [artsCnt, setArtsCnt] = useState(0);\r\n\r\n    useEffect(() => {\r\n        countUsers().then(cnt => {\r\n            setUserCount(cnt);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <ReleaseNote />\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{artsCnt} libruary have been published.</_MessageRecord>\r\n            <PublishFrame setLibCnt={setArtsCnt}/>\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeChannel;\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { VscGitPullRequestCreate } from 'react-icons/vsc';\r\nimport CreateChannel from \"../create/createChannel\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <HomeChannel /> },\r\n                    { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <CreateChannel /> },\r\n                ]}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport CanvasUtil from '../../utils/canvasUtil';\r\nimport DataUtil from '../../utils/dataUtil';\r\nimport SystemConst from '../../utils/systemConst';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <_Logo src={logo} />\r\n                </_Title>\r\n                <_VERSION>{SystemConst.APP_VERSION}</_VERSION>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2023 Pixel Flare All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#858892, #8e99b6);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    /* color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-shadow: 1px 2px 22px #0000003d; */\r\n    text-align: center;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    /* & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    } */\r\n`;\r\n\r\nconst _VERSION = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 240px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #ebe7ab;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n    /* height: 200%; */\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { useState } from \"react\";\r\nimport { initialStore } from \"../../redux/store/store\";\r\nimport styled from \"styled-components\";\r\nimport GloballDialog from \"../dialog/globalDialog\";\r\nimport TotalHeader from \"./totalHeader\";\r\nimport MainFrame from \"./mainFrame\";\r\nimport ModeSelectDialog from \"./modeSelectDialog\";\r\nimport Splash from \"./splash\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\n\r\nconst PCRoot = () => {\r\n    const [store, setStore] = useState(initialStore);\r\n\r\n    const splashJsx = !store.system.isSplash ? <></> : (\r\n        <Splash\r\n            remove={() => {\r\n                store.system.isSplash = false;\r\n                // store.system.dialog = <ModeSelectDialog />\r\n                setStore({ ...store });\r\n            }}\r\n        />\r\n    );\r\n\r\n    return (<>\r\n        {splashJsx}\r\n        < _Wrap >\r\n            <GloballDialog />\r\n            <TotalHeader />\r\n            <_MainDiv>\r\n                <MainFrame />\r\n            </_MainDiv>\r\n        </_Wrap >\r\n    </>);\r\n}\r\n\r\nexport default PCRoot;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    min-width: 1200px;\r\n    min-height: 900px;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #a3c1c7;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import DataUtil from \"../utils/dataUtil\";\r\nimport PreviewLogicFrame from \"../contents/create/preview/previewLogicFrame\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport LogicElementUtil from \"../contents/create/factory/util/logicElementUtil\";\r\nimport styled, { css } from \"styled-components\";\r\nimport StoryUtil from \"../contents/create/launcher/util/storyUtil\";\r\nimport FormUtil from \"../utils/form/formUtiil\";\r\nimport CanvasUtil from \"../utils/canvasUtil\";\r\nimport PreviewLauncherFrame from \"../contents/create/preview/previewLauncherFrame\";\r\nimport BuildUtil from \"../contents/create/preview/buildUtil\";\r\nimport Particle from \"../contents/graphic/particle\";\r\nimport { VscSettingsGear } from \"react-icons/vsc\";\r\nimport PreviewLauncherFrameSp from \"../contents/create/preview/previewLauncherFrameSp\";\r\n\r\ntype StoryProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    libraryData: LogicUtil.WrapElement;\r\n    scenarioData: StoryUtil.StoryData;\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\ntype StoryPreviewProps = {\r\n    sceens: string[];\r\n    useFrame: number;\r\n}\r\n\r\nexport type PagingField = {\r\n    useFrame: number;\r\n    curFrame: number;\r\n    sceens: string[];\r\n    owner: Particle.Instance[];\r\n}\r\n\r\nconst PROGRESS_VAL = 1;\r\n\r\nconst DirectLinkManager = (props: {\r\n    scenarioSeq: number;\r\n}) => {\r\n    const [storyData, setStoryData] = useState<StoryProps | null>(null);\r\n    const [storyPreviewProps, setStoryPreviewProps] = useState<StoryPreviewProps | null>(null);\r\n    const [buildCache, setBuildCache] = useState<null | PagingField>(null);\r\n\r\n    useEffect(() => {\r\n\r\n        findScenarioData(props.scenarioSeq).then(resList => {\r\n            if (resList.length > 0) {\r\n                const res = resList[0] as {\r\n                    ownerId: string; seq: number, name: string, scenario: string, library: string, lastmod: string\r\n                };\r\n                const seq = res.seq;\r\n                const name = res.name;\r\n                const ownerId = res.ownerId;\r\n                const lastmod = res.lastmod;\r\n                const library = JSON.parse(DataUtil.unZip(res.library));\r\n                const scenario = JSON.parse(DataUtil.unZip(res.scenario));\r\n\r\n                // const rootData = library as LogicUtil.WrapElement;\r\n                // const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                // const seedList: SeedProps[] = seedMng.defs\r\n                //     .filter(wrap => {\r\n                //         const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                //         return seed.permit === 'release';\r\n                //     })\r\n                //     .map(wrap => {\r\n                //         const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                //         const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                //         const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                //         return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                //     });\r\n                setStoryData({\r\n                    name, libraryData: library, scenarioData: scenario, lastmod, ownerId\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (buildCache == null || storyData == null) return;\r\n        if (buildCache.useFrame != 0 && buildCache.curFrame == buildCache.useFrame) {\r\n            setStoryPreviewProps({\r\n                sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n            });\r\n            return;\r\n        }\r\n\r\n        const fuseList = storyData.scenarioData.fuseList;\r\n        const limitFrame = storyData.scenarioData.limitFrame;\r\n        const limitParticle = storyData.scenarioData.limitParticle;\r\n        const minFrame = fuseList[0].frame;\r\n        const logicData = storyData.libraryData;\r\n        if (buildCache.useFrame === 0) {\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n                    fuseList.some(fuse => {\r\n                        if (fuse.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                        } else if (fuse.frame > frame) return 1;\r\n                    });\r\n                },\r\n                doEnd: (frame) => {\r\n                    buildCache.useFrame = frame;\r\n                }\r\n            });\r\n            setBuildCache({ ...buildCache });\r\n        } else {\r\n\r\n            BuildUtil.runPaging({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    fuseList.some(fuse => {\r\n                        if (fuse.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                        } else if (fuse.frame > frame) return 1;\r\n                    });\r\n\r\n                    buildCache.sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                // doEnd: () => {\r\n                //     setStoryPreviewProps({\r\n                //         sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                //     });\r\n                // }\r\n            }, buildCache.owner, buildCache.curFrame, PROGRESS_VAL);\r\n            buildCache.curFrame += PROGRESS_VAL;\r\n            if (buildCache.curFrame > buildCache.useFrame) {\r\n                buildCache.curFrame = buildCache.useFrame;\r\n            }\r\n            setBuildCache({ ...buildCache });\r\n        }\r\n    }, [buildCache]);\r\n\r\n    /**\r\n     * プレビューオールダイアログを表示する\r\n     */\r\n    const openPreviewAllDialog = () => {\r\n        setBuildCache({\r\n            useFrame: 0,\r\n            curFrame: 0,\r\n            owner: [],\r\n            sceens: []\r\n        });\r\n    }\r\n\r\n    const getJsx = () => {\r\n        let jsx = <></>;\r\n        if (storyData != null) {\r\n            if (storyPreviewProps == null) {\r\n                const getBlindJsx = () => {\r\n                    if (buildCache == null) return <></>;\r\n                    const rate = buildCache.curFrame / buildCache.useFrame * 100;\r\n                    const isStandby = buildCache.useFrame === 0;\r\n                    return (\r\n                        <_Blind>\r\n                            <_ProgressBox><_ProgressVal rate={rate} /></_ProgressBox>\r\n                            <_RateVal isStandby={isStandby}>{isStandby ? 'Calculating...' : `${Math.floor(rate)}%`}</_RateVal>\r\n                        </_Blind>\r\n                    );\r\n                }\r\n                jsx = <>\r\n                    {getBlindJsx()}\r\n                    <_Header>{storyData.name}</_Header>\r\n                    {/* <_Header>{storyData.name}</_Header>\r\n                    <_Header>{storyData.name}</_Header> */}\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        isIconButton\r\n                        buttons={[\r\n                            {\r\n                                label: 'Start',\r\n                                icon: <VscSettingsGear />,\r\n                                width: 300,\r\n                                callback() {\r\n                                    openPreviewAllDialog();\r\n                                },\r\n                            }\r\n                        ]} />\r\n                </>;\r\n            } else {\r\n                jsx = <PreviewLauncherFrameSp.Component\r\n                    sceens={storyPreviewProps.sceens}\r\n                    frameCnt={storyPreviewProps.useFrame}\r\n                    closeAction={() => {\r\n                        setStoryPreviewProps(null);\r\n                        setBuildCache(null);\r\n                    }}\r\n                />\r\n            }\r\n        } else {\r\n            jsx = <FormUtil.Message message=\"This link is invalid.\" />;\r\n        }\r\n        return jsx;\r\n    }\r\n\r\n    return getJsx();\r\n}\r\n\r\nexport default DirectLinkManager;\r\n\r\n\r\nconst findScenarioData = async (seq: number) => {\r\n    const sql = `\r\n        SELECT snr.seq, snr.name,\r\n        (select id from user_tbl where seq = lib.owner) ownerId,\r\n        lib.source library,\r\n        snr.source scenario, snr.lastmod\r\n        FROM snrshtbl snr inner join libhstbl lib on snr.libhash = lib.hash\r\n        WHERE snr.seq = ${seq}\r\n    `;\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', sql);\r\n    console.log(sql);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #002910c0;\r\n    z-index: 10;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _ProgressBox = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relaltive;\r\n    width: calc(100% - 20px);\r\n    height: 40px;\r\n    margin: 200px 0 0 10px;\r\n    background-color: #ffffff29;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    background-color: #ffffffc1;\r\n`;\r\n\r\nconst _RateVal = styled.div<{\r\n    isStandby: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #0000003b;\r\n\r\n    color: #ffffff;\r\n    ${props => !props.isStandby ? '' : css`\r\n        color: #f50000;\r\n    `}\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background: linear-gradient(to bottom, #00215e5c, #00000067, #00215e5c); */\r\n\r\n    color: #001558;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #abc9e6;\r\n`;\r\n\r\nconst _ArgCnt = styled.span<{\r\n}>`\r\n    color: #fbffbf;\r\n`;","import PublishFrame from \"../../contents/home/publishFrame\";\r\n\r\nconst SPLibraryChannel = () => {\r\n\r\n    return (<PublishFrame setLibCnt={()=>{}}/>);\r\n}\r\n\r\nexport default SPLibraryChannel;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport { MdOutlineCancelPresentation } from \"react-icons/md\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\n\r\nimport { AiOutlineInstagram, AiOutlineTwitter, AiOutlineMail, AiOutlineFacebook } from \"react-icons/ai\";\r\nimport { BsLine } from \"react-icons/bs\";\r\n\r\nimport {\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    LineShareButton,\r\n    MailruShareButton,\r\n    TwitterShareButton,\r\n} from \"react-share\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport LocalStorageUtil from \"../../../../utils/localStorageUtil\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport CloudUtil from \"./cloudUtil\";\r\nimport SystemConst from \"../../../../utils/systemConst\";\r\n\r\n\r\nnamespace ShareDialog {\r\n\r\n    export const Component = (props: {\r\n        curIndex: number;\r\n    }) => {\r\n        const width = 500;\r\n        const height = 246;\r\n\r\n        const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n        const local = store.local;\r\n        const project = local.projects[props.curIndex];\r\n\r\n        const getURL = () => {\r\n            let url = '';\r\n            if (project.cloudSeq !== -1) {\r\n                const hash = DataUtil.getHashedFromProjectSeq(project.cloudSeq);\r\n\r\n                url = `${SystemConst.APP_SERVER_DOMAIN}/#/share?v=${hash}`;\r\n            }\r\n            return url;\r\n        };\r\n\r\n        const getURLAddQueryParam = () => {\r\n            return getURL() + '?openExternalBrowser=1';\r\n        }\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Share your digital art!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <_UrlDiv\r\n                    value={getURL()}\r\n                    isEnable={project.isShared}\r\n                    readOnly />\r\n                <_Record\r\n                    isEnable={project.isShared}\r\n                >\r\n                    <InstapaperShareButton\r\n                        url={getURLAddQueryParam()}\r\n                        children={<_SnsIconFrame><AiOutlineInstagram /></_SnsIconFrame>}\r\n                    />\r\n                    <TwitterShareButton\r\n                        url={getURLAddQueryParam()}\r\n                        children={<_SnsIconFrame><AiOutlineTwitter /></_SnsIconFrame>}\r\n                    />\r\n                    <MailruShareButton\r\n                        url={getURLAddQueryParam()}\r\n                        children={<_SnsIconFrame><AiOutlineMail /></_SnsIconFrame>}\r\n                    />\r\n                    <FacebookShareButton\r\n                        url={getURLAddQueryParam()}\r\n                        children={<_SnsIconFrame><AiOutlineFacebook /></_SnsIconFrame>}\r\n                    />\r\n                    <LineShareButton\r\n                        url={getURLAddQueryParam()}\r\n                        children={<_SnsIconFrame><BsLine /></_SnsIconFrame>}\r\n                    />\r\n                </_Record>\r\n                <FormUtil.Record\r\n                    marginTop={10}\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.SwitchTwoFace\r\n                            label1=\"Private\"\r\n                            label2=\"Shared\"\r\n                            rate1={50}\r\n                            rate2={50}\r\n                            width={320}\r\n                            isUse={project.isShared}\r\n                            callback={() => {\r\n                                console.log('share cloudSeq: ' + project.cloudSeq);\r\n                                if (!project.isShared) {\r\n                                    CloudUtil.uploadShareScenario(project).then((cloudSeq) => {\r\n                                        project.isShared = true;\r\n                                        project.cloudSeq = cloudSeq;\r\n                                        const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + project.localSeq.toString();\r\n                                        localStorage.setItem(fileKey, JSON.stringify(project));\r\n                                        dispatcher.updateStore();\r\n                                    });\r\n\r\n                                } else {\r\n                                    CloudUtil.deleteShareScenario(project.cloudSeq).then(() => {\r\n                                        project.isShared = false;\r\n                                        project.cloudSeq = -1;\r\n                                        const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + project.localSeq.toString();\r\n                                        localStorage.setItem(fileKey, JSON.stringify(project));\r\n                                        dispatcher.updateStore();\r\n                                    });\r\n                                }\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShareDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    margin: 8px 0 0 0;\r\n    text-align: center;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _TextAreaDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 4px;\r\n    width: calc(100% - 8px);\r\n    height: 120px;\r\n    margin: 10px 0 0 4px;\r\n    border: 2px solid #3d3d3d;\r\n    box-sizing: border-box;\r\n`;\r\nconst _UrlDiv = styled.textarea<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 4px;\r\n    width: calc(100% - 8px);\r\n    height: 60px;\r\n    margin: 4px 0 0 4px;\r\n    border: 1px solid #3d3d3d;\r\n   background-color: #ebf5f557;\r\n   /* background-color: transparent; */\r\n   outline: none;\r\n   font-size: 18px;\r\n   color: #0041a3;\r\n   resize: none;\r\n   box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _SnsIconFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 8px;\r\n    width: 60px;\r\n    height: 60px;\r\n    border: 2px solid #555555;\r\n    background-color: #f0f0f0e1;\r\n    box-sizing: border-box;\r\n    font-size: 50px;\r\n    color: #666;\r\n    margin: 0 2px;\r\n`;","\r\nimport LogicUtil from \"../../../../contents/create/factory/util/logicUtil\";\r\nimport libraries from \"../../../../resource/library/library.json\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\n\r\nnamespace LibraryLoader {\r\n\r\n    export type LibInfo = {\r\n        name: string;\r\n        version: string;\r\n        outline: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const getOfficialList = (): LibInfo[] => {\r\n        return libraries.map(lib => {\r\n            return {\r\n                name: lib.name,\r\n                version: lib.version,\r\n                outline: lib.outline,\r\n                rootData: JSON.parse(DataUtil.unZip(lib.source.toString())) as LogicUtil.WrapElement\r\n            }\r\n        });\r\n    }\r\n\r\n    export const getExtendList = () => {\r\n        const list: LibInfo[] = [];\r\n\r\n\r\n        return list;\r\n    }\r\n}\r\n\r\nexport default LibraryLoader;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport StoreCloud from \"../../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport { ProjectType, ProjectTypes } from \"../../../../redux/store/store\";\r\nimport { AiOutlineEnter, AiOutlineCheck } from \"react-icons/ai\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport LogicUtil from \"../../../../contents/create/factory/util/logicUtil\";\r\nimport LibraryLoader from \"./libraryLoader\";\r\nimport LocalStorageUtil from \"../../../../utils/localStorageUtil\";\r\nimport StoreLocalStrage from \"../../../../redux/store/storeLocalStrage\";\r\n\r\nnamespace NewScenarioDialog {\r\n\r\n    type CloudLibInfo = {\r\n        seq: number;\r\n        name: string;\r\n        ownerId: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const Component = (props: {\r\n        defaultName: string;\r\n        extendAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [cloudLibs, setCloudLibs] = useState<null | CloudLibInfo[]>(null);\r\n        // const [scenarioName, setScenarioName] = useState<FormUtil.CheckableValue>({ value: 'new_project_0', errors: [] });\r\n        const [focusLibIndex, setFocusLibIndex] = useState<number>(0);\r\n        const [isExtend, setExtend] = useState<boolean>(false);\r\n\r\n        const width = 500;\r\n        const height = 618;\r\n\r\n        // useEffect(() => {\r\n        //     findAllReleaseProjectList().then(resList => {\r\n        //         setCloudLibs(resList.map(res => {\r\n        //             return {\r\n        //                 name: res.name,\r\n        //                 ownerId: res.owner,\r\n        //                 seq: res.seq,\r\n        //                 rootData: JSON.parse(DataUtil.unZip(res.source))\r\n        //             }\r\n        //         }));\r\n        //     });\r\n        // }, []);\r\n\r\n        const officialPackList = useMemo(() => {\r\n            return LibraryLoader.getOfficialList();\r\n        }, []);\r\n\r\n        const extendPackList = useMemo(() => {\r\n            return !isExtend ? [] : LibraryLoader.getExtendList();\r\n        }, [isExtend]);\r\n\r\n        const libPackJsxList = useMemo(() => {\r\n            return (!isExtend ? officialPackList : extendPackList).map((pack, i) => {\r\n                const isFocus = focusLibIndex === i;\r\n                return (\r\n                    <_LibItem key={i}\r\n                        isFocus={isFocus}\r\n                        onClick={() => {\r\n                            setFocusLibIndex(i);\r\n                        }}\r\n                    >\r\n                        <_CheckDiv>{isFocus ? <AiOutlineCheck /> : <></>}</_CheckDiv>\r\n                        <_LibInfo>\r\n                            <_LibName>{pack.name}</_LibName>\r\n                            <_LibVersion>{pack.version}</_LibVersion>\r\n                            <_LibOutline>{pack.outline}</_LibOutline>\r\n                        </_LibInfo>\r\n                    </_LibItem>\r\n                );\r\n            });\r\n        }, [isExtend, focusLibIndex]);\r\n\r\n        const getStoryLib = () => {\r\n            // let storyLib: LogicUtil.WrapElement | null = null;\r\n            // if (cloudLibs != null) {\r\n            //     const lib = cloudLibs.find(lib => lib.seq === Number(selectedLib.value));\r\n            //     if (lib != undefined) {\r\n            //         storyLib = lib.rootData;\r\n            //     }\r\n            // }\r\n            // return storyLib;\r\n            return (!isExtend ? officialPackList : extendPackList)[focusLibIndex];\r\n        }\r\n\r\n        // const usingHash = useMemo(() => {\r\n        //     let hash = '-';\r\n        //     const lib = getStoryLib();\r\n        //     if (lib != null) {\r\n        //         hash = DataUtil.getSHA256Hash(JSON.stringify(lib));\r\n        //     }\r\n        //     return hash;\r\n        // }, [selectedLib]);\r\n\r\n        // const isCreateEnabled = () => {\r\n        //     return usingHash !== '-';\r\n        // }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                icon: <MdCancelPresentation />,\r\n                width: 120,\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Create',\r\n                icon: <AiOutlineEnter />,\r\n                width: 120,\r\n                callback: () => {\r\n                    const lib = getStoryLib();\r\n                    \r\n                    store.libraryData = lib.rootData;\r\n                    store.storyData = {\r\n                        limitFrame: 300,\r\n                        limitParticle: 3000,\r\n                        fuseList: []\r\n                    };\r\n                    store.system.dialog = null;\r\n\r\n                    const local = store.local;\r\n                    //ファイルキーを生成\r\n                    const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + local.maxSeq.toString();\r\n\r\n                    // プロジェクトファイルのインスタンスを作成\r\n                    const project: StoreLocalStrage.Project = {\r\n                        name: props.defaultName,\r\n                        libraryData: lib.rootData,\r\n                        libName: `${lib.name} ${lib.version}`,\r\n                        localSeq: local.maxSeq,\r\n                        scenarioData: store.storyData,\r\n                        lastmod: DataUtil.getStringFromDate(new Date()),\r\n                        cloudSeq: -1,\r\n                        isShared: false\r\n                    };\r\n                    // ローカルストレージに新しいファイルキーでデータを作成\r\n                    localStorage.setItem(fileKey, JSON.stringify(project));\r\n                    // 画面のリストに即時反映するためにstoreにも追加\r\n                    local.projects.push(project);\r\n\r\n                    // 編集中のシーケンスとして設定\r\n                    store.editing.localSeq = local.maxSeq;\r\n                    store.editing.libName = `${lib.name} ${lib.version}`;\r\n\r\n                    // シーケンスの最大値を加算\r\n                    local.maxSeq ++;\r\n                    // ローカルストレージのシーケンスを更新\r\n                    localStorage.setItem(LocalStorageUtil.KEY_SCENARIO_SEQ, local.maxSeq.toString());\r\n                    setStore({ ...store });\r\n                    if (props.extendAction != undefined) props.extendAction();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, select library!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                {/* <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    marginBottom={10}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={320}\r\n                            checkable={scenarioName}\r\n                            setCheckable={setScenarioName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 24),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => !existNameList.includes(value),\r\n                                //     errorType: \"relation\"\r\n                                // }\r\n                            ]}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.SwitchTwoFace\r\n                            label1=\"Official\"\r\n                            label2=\"Extend\"\r\n                            rate1={50}\r\n                            rate2={50}\r\n                            width={320}\r\n                            isUse={isExtend}\r\n                            isEditable={false}\r\n                            callback={() => {\r\n                                setExtend(!isExtend);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n\r\n                <FormUtil.BorderPanel\r\n                    title=\"Library\"\r\n                    height={422}\r\n                    // isDisable={store.cloud == null}\r\n                    backgroundColor=\"#ffffff26\"\r\n                    innerJsx={<>\r\n                        {libPackJsxList}\r\n                    </>}\r\n                />\r\n                {/* <FormUtil.FormRecord\r\n                    titleLabel=\"Library\"\r\n                    isEnabled={cloudLibs != null}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={selectedLib}\r\n                            width={278}\r\n                            setCheckable={setSelectedLib}\r\n                            list={(cloudLibs ?? []).map((item) => {\r\n                                // const disp = `${item.ownerId}: ${item.name}`;\r\n                                return { value: item.seq.toString(), labelText: item.name };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewScenarioDialog;\r\n\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\n\r\nconst _LibItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: 100px;\r\n    margin: 0 0 4px 4px;\r\n    background-color: #d3d3d3df;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #e4ec9996;\r\n    `}\r\n    border: 1px solid #8f8f8f;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _CheckDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 60px;\r\n    height: 60px;\r\n    margin: 20px 0 0 4px;\r\n    background-color: #e7e7e765;\r\n    border: 1px solid #8f8f8fac;\r\n    box-sizing: border-box;\r\n    border-radius: 10px;\r\n    font-size: 55px;\r\n    font-weight: 600;\r\n    color: #02db02;\r\n`;\r\n\r\nconst _LibInfo = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 5px;\r\n    position: relative;\r\n    width: calc(100% - 74px);\r\n    vertical-align: top;\r\n    /* background-color: #3fda6129; */\r\n`;\r\n\r\n\r\nconst _LibName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    max-width: calc(100% - 40px);\r\n    height: 50px;\r\n    margin-right: 6px;\r\n    /* background-color: #da3f3f64; */\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #435688;\r\n    overflow-x: hidden;\r\n    line-height: 48px;\r\n`;\r\n\r\nconst _LibVersion = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 34px;\r\n    height: 50px;\r\n    /* background-color: #3f68da63; */\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c7454c;\r\n    vertical-align: top;\r\n    line-height: 58px;\r\n`;\r\n\r\nconst _LibOutline = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 48px;\r\n    /* background-color: #3fda6129; */\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #6a6d75;\r\n\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport assert from \"assert\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\nimport { AiOutlineEnter } from \"react-icons/ai\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport StoreCloud from \"../../../../redux/store/storeCloud\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport LocalStorageUtil from \"../../../../utils/localStorageUtil\";\r\nimport NewScenarioDialog from \"./newScenarioDialog\";\r\n\r\nnamespace NameDefDialogLocal {\r\n\r\n    export const Component = (props: {\r\n        focusIndex: number;\r\n        extendAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const width = 500;\r\n        const height = 170;\r\n\r\n        const local = store.local;\r\n\r\n        // ローカルのシーケンス最大値と同じ場合はこれから作成するものなのでcreate\r\n        const isCreate = props.focusIndex === -1;\r\n\r\n        const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n        const getDefaultName = () => {\r\n            if (isCreate) {\r\n                let num = 0;\r\n                while (true) {\r\n                    const checkName = `${LocalStorageUtil.DEFAULT_FILE_NAME_PREFIX}${num}`;\r\n                    if (local.projects.find(p => p.name === checkName) == undefined) {\r\n                        return checkName;\r\n                    }\r\n                    num++;\r\n                }\r\n            } else {\r\n                const curProject = local.projects[props.focusIndex];\r\n                return curProject.name;\r\n            }\r\n        }\r\n\r\n        useEffect(() => {\r\n            name.value = getDefaultName();\r\n            setName({ ...name });\r\n        }, []);\r\n\r\n        const [existNames] = useMemo(() => {\r\n            return [\r\n                local.projects.map(item => item.name)\r\n            ];\r\n        }, []);\r\n\r\n\r\n        const registCreate = () => {\r\n        }\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, input new name!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => LogicUtil.checkFieldName(value),\r\n                                //     errorType: \"value\"\r\n                                // },\r\n                                {\r\n                                    checker: (value) => !existNames.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Cancel',\r\n                            icon: <MdCancelPresentation />,\r\n                            width: 130,\r\n                            callback: () => {\r\n                                store.system.dialog = null;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: isCreate ? 'Regist' : 'Update',\r\n                            icon: <AiOutlineEnter />,\r\n                            width: 130,\r\n                            isEnable: name.errors.length === 0,\r\n                            callback: () => {\r\n                                if (isCreate) {\r\n                                    store.system.dialog = <NewScenarioDialog.Component\r\n                                        defaultName={name.value}\r\n                                        extendAction={props.extendAction}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                                else {\r\n                                    const curProject = local.projects[props.focusIndex];\r\n                                    curProject.name = name.value;\r\n                                    const key = `${LocalStorageUtil.KEY_SCENARIO_PREFIX}${curProject.localSeq}`;\r\n                                    localStorage.setItem(key, JSON.stringify(curProject));\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                };\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NameDefDialogLocal;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\n\r\nnamespace PreviewLauncherFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        sceens: string[];\r\n        frameCnt: number;\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const sceens = props.sceens;\r\n        const frameCnt = props.frameCnt;\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    // 再生中は変更できない\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                        } break;\r\n                        case 'ArrowRight': {\r\n                            if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                        } break;\r\n                        case ' ': {\r\n                            setPlay(!isPlay);\r\n                        } break;\r\n                    }\r\n                    if (e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }}\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Play', enable: true, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                        if (props.closeAction != undefined) {\r\n                            props.closeAction();\r\n                        }\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLauncherFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #aec7d8df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../../../contents/dialog/confirmDialog\";\r\nimport NewProjectDialogStoryOnly from \"../../../contents/create/manage/newProjectDialogStoryOnly\";\r\nimport NameDefDialog from \"../../../contents/create/manage/nameDefDialog\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport StoryUtil from \"../../../contents/create/launcher/util/storyUtil\";\r\nimport LogicUtil from \"../../../contents/create/factory/util/logicUtil\";\r\nimport { BsFillShareFill } from 'react-icons/bs';\r\nimport { VscPreview } from \"react-icons/vsc\";\r\nimport { FiUpload, FiDownload } from \"react-icons/fi\";\r\nimport { IoCreateOutline } from \"react-icons/io5\";\r\nimport { ImCopy } from \"react-icons/im\";\r\nimport { MdClear, MdOutlineDriveFileRenameOutline } from \"react-icons/md\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\n\r\nimport ShareDialog from \"./etc/shareDialog\";\r\nimport { setuid } from \"process\";\r\nimport NewScenarioDialog from \"./etc/newScenarioDialog\";\r\nimport LocalStorageUtil from \"../../../utils/localStorageUtil\";\r\nimport assert from \"assert\";\r\nimport StoreLocalStrage from \"../../../redux/store/storeLocalStrage\";\r\nimport NameDefDialogLocal from \"./etc/nameDefDialogLocal\";\r\n\r\nconst SPManageFrame = (props: {\r\n    isEdit: boolean;\r\n    setEdit: (isEdit: boolean) => void;\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n\r\n    const [update, setUpdate] = useState({});\r\n\r\n    const hasData = store.libraryData != null;\r\n    const projects = store.local.projects;\r\n\r\n    useEffect(() => {\r\n        store.system.logoutActions.push(() => {\r\n            setFcsListIdx(-1);\r\n        });\r\n        // dispatcher.updateStore();\r\n    }, []);\r\n\r\n    const getData = () => {\r\n        if (!hasData) return null;\r\n        const data: StoryUtil.ScenarioFileProps = {\r\n            libraryData: store.libraryData as LogicUtil.WrapElement,\r\n            scenarioData: store.storyData as StoryUtil.StoryData\r\n        };\r\n        return data;\r\n    }\r\n\r\n    const projectItemJsxList = projects.map((project, i) => {\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    if (fcsListIdx === i) setFcsListIdx(-1);\r\n                    else setFcsListIdx(i);\r\n                    // console.log(DataUtil.getHashedFromProjectSeq(project.seq));\r\n                }}\r\n                onContextMenu={() => {\r\n                    // store.system.dialog = <ConfirmDialog.Component\r\n                    //     message={DataUtil.getDirectUrl(project.type, project.seq)}\r\n                    // />;\r\n                    // setStore({ ...store });\r\n                }}\r\n            >\r\n                {/* <_Status type={project.type}>[{project.type}] </_Status> */}\r\n                <_Name>{project.name}</_Name>\r\n                <_Share\r\n                    onClick={() => {\r\n                        localStorage.setItem(LocalStorageUtil.KEY_SCENARIO_PREFIX + project.localSeq.toString(), JSON.stringify(project));\r\n\r\n                        store.system.dialog = <ShareDialog.Component\r\n                            curIndex={i}\r\n                        />;\r\n                        store.system.canDialogClose = true;\r\n                        dispatcher.updateStore();\r\n                    }}\r\n                ><_Icon isShare={project.isShared}><BsFillShareFill /></_Icon></_Share>\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    const thumbJsxList = useMemo(() => {\r\n        const storyData = store.storyData;\r\n        if (storyData == null) return [];\r\n        const thumbJsx: JSX.Element[] = [];\r\n        storyData.fuseList.forEach((fuse) => {\r\n\r\n            const cache = store.fuseCacheList.find(cache => cache.seq === fuse.seq);\r\n\r\n            if (cache != undefined) {\r\n                cache.thumbList.forEach((thumb) => {\r\n                    const imgJsx = thumb == undefined ? <></> : <_Img src={thumb.url} />;\r\n                    thumbJsx.push(\r\n                        <_SampleDiv key={thumbJsx.length}>\r\n                            <_CanvasDiv>\r\n                                {imgJsx}\r\n                            </_CanvasDiv>\r\n                        </_SampleDiv>\r\n                    );\r\n                });\r\n            };\r\n        });\r\n        return thumbJsx.filter((thumn, i) => i < 30);\r\n    }, [props.isEdit, update]);\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを新規アップロードする\r\n     */\r\n    const uploadCloud = () => {\r\n        const source = DataUtil.gZip(JSON.stringify(getData()));\r\n        store.system.dialog = <NameDefDialog.Component\r\n            targetSeq={-1}\r\n            source={source}\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを上書き更新する\r\n     */\r\n    const overwriteCloudFile = () => {\r\n        // const curPrj = projects[fcsListIdx];\r\n        // const source = DataUtil.gZip(JSON.stringify(getData()));\r\n        // updateProjectSource(curPrj.seq, 'story', source).then(() => {\r\n        //     curPrj.source = source;\r\n        //     curPrj.type = 'story';\r\n        //     store.system.dialog = <ConfirmDialog.Component\r\n        //         message=\"Update project succesful!\"\r\n        //     />;\r\n        //     setStore({ ...store });\r\n        // });\r\n    }\r\n\r\n    /**\r\n     * 選択中のローカルのファイルを読み込む\r\n     */\r\n    const loadLocalFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        store.libraryData = curPrj.libraryData;\r\n        store.storyData = curPrj.scenarioData;\r\n        const fuseList = store.storyData.fuseList;\r\n\r\n        // const isLoad = fuseList.length > 0 && store.fuseCacheList.length === 0;\r\n        // if (!isLoad) return;\r\n        fuseList.forEach(fuse => {\r\n            const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n            store.fuseCacheList.push(cache);\r\n            dispatcher.story.updateCache(fuse, cache);\r\n        });\r\n        setUpdate({});\r\n\r\n        store.editing.localSeq = curPrj.localSeq;\r\n        store.editing.libName = curPrj.libName;\r\n\r\n        // props.setEdit(true);\r\n        dispatcher.updateStore();\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            isIconButton\r\n            buttons={[\r\n                !hasData ? {\r\n                    label: 'New Project',\r\n                    width: 300,\r\n                    icon: <IoCreateOutline />,\r\n                    callback: () => {\r\n                        store.system.dialog = <NameDefDialogLocal.Component\r\n                            focusIndex={-1}\r\n                            extendAction={() => {\r\n                                props.setEdit(true);\r\n                            }}\r\n                        />\r\n                        setStore({ ...store });\r\n                    }\r\n                } : {\r\n                    label: 'Close',\r\n                    width: 200,\r\n                    icon: <MdClear />,\r\n                    callback: () => {\r\n                        store.libraryData = null;\r\n                        store.storyData = null;\r\n                        store.fuseCacheList.length = 0;\r\n\r\n                        store.editing.localSeq = -1;\r\n                        dispatcher.updateStore();\r\n                        setUpdate({});\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Project\"\r\n            height={170}\r\n            // isDisable={!hasData}\r\n            isEnable={hasData}\r\n            backgroundColor=\"#ffffff26\"\r\n            innerJsx={<>\r\n                {/* <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    buttons={[\r\n                        {\r\n                            label: 'Upload',\r\n                            width: 210,\r\n                            icon: <FiUpload />,\r\n                            isEnable: hasData && store.cloud != null,\r\n                            callback: uploadCloud\r\n                        },\r\n                        {\r\n                            label: 'Overwrite',\r\n                            width: 210,\r\n                            icon: <FaRegSave />,\r\n                            isEnable: fcsListIdx != -1 && hasData,\r\n                            callback: overwriteCloudFile\r\n                        }\r\n                    ]}\r\n                /> */}\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Library\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            // width={340}\r\n                            isRecordItem\r\n                            value={!hasData ? '-' : store.editing.libName}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Fuses\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            value={!hasData ? '-' : store.fuseCacheList.length.toString()}\r\n                        />\r\n                    }\r\n                />\r\n                {thumbJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Files\"\r\n            height={448}\r\n            isEnable={store.editing.localSeq == -1}\r\n            backgroundColor=\"#ffffff26\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    buttons={[\r\n                        {\r\n                            label: 'Load',\r\n                            width: 130,\r\n                            icon: <FiDownload />,\r\n                            isEnable: fcsListIdx !== -1 && store.editing.localSeq == -1,\r\n                            callback: loadLocalFile\r\n                        },\r\n                        {\r\n                            label: 'Copy',\r\n                            width: 130,\r\n                            icon: <ImCopy />,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                const local = store.local;\r\n                                const project = local.projects[fcsListIdx];\r\n                                //ファイルキーを生成\r\n                                const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + local.maxSeq.toString();\r\n\r\n                                const newProject: StoreLocalStrage.Project = JSON.parse(JSON.stringify(project));\r\n                                newProject.localSeq = local.maxSeq;\r\n                                newProject.name += '_copy';\r\n                                // ローカルストレージに新しいファイルキーでデータを作成\r\n                                localStorage.setItem(fileKey, JSON.stringify(newProject));\r\n                                // 画面のリストに即時反映するためにstoreにも追加\r\n                                local.projects.push(newProject);\r\n\r\n                                // シーケンスの最大値を加算\r\n                                local.maxSeq++;\r\n                                // ローカルストレージのシーケンスを更新\r\n                                localStorage.setItem(LocalStorageUtil.KEY_SCENARIO_SEQ, local.maxSeq.toString());\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Copy project succesful!\"\r\n                                />;\r\n                                dispatcher.updateStore();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Rename',\r\n                            width: 130,\r\n                            icon: <MdOutlineDriveFileRenameOutline />,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                store.system.dialog = <NameDefDialogLocal.Component\r\n                                    focusIndex={fcsListIdx}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Delete',\r\n                            width: 130,\r\n                            icon: <RiDeleteBinLine />,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                const local = store.local;\r\n                                const project = local.projects[fcsListIdx];\r\n                                //ファイルキーを生成\r\n                                const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + project.localSeq.toString();\r\n\r\n                                // ローカルストレージにから削除\r\n                                localStorage.removeItem(fileKey);\r\n                                // 画面のリストに即時反映するためにstoreからも削除\r\n                                local.projects.splice(fcsListIdx, 1);\r\n\r\n                                setFcsListIdx(-1);\r\n\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Delete project succesful!\"\r\n                                />;\r\n                                dispatcher.updateStore();\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {projectItemJsxList}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default SPManageFrame;\r\n\r\nconst updateProjectSource = async (seq: number, type: string, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set type = '${type}', source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from prjcttbl where seq = ${seq};`)\r\n}\r\n\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 55px;\r\n    /* background-color: #004df390; */\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    line-height: 64px;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    type: ProjectType | '';\r\n}>`\r\n    color: #0000006d;\r\n    ${props => props.type === 'library' ? css`color: #b90000be;` : ''}\r\n    ${props => props.type === 'story' ? css`color: #003bb9bd;` : ''}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\n\r\nconst _Share = styled.span<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 1px;\r\n    /* background-color: #00eb6a76; */\r\n`;\r\n\r\nconst _Icon = styled.div<{\r\n    isShare: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 40px;\r\n    height: 55px;\r\n    /* background-color: #eb000076; */\r\n    font-size: 30px;\r\n    color: #75757592;\r\n    ${props => !props.isShare ? '' : css`\r\n        color: #eb032a;\r\n    `}\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst WND_SIZE = 40;\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    /* margin: 0 0 0 2px; */\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Img = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport StoryUtil from \"../../../../contents/create/launcher/util/storyUtil\";\r\nimport { FuseBean } from \"../../../../contents/create/launcher/storyTab\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport LogicUtil from \"../../../../contents/create/factory/util/logicUtil\";\r\nimport LogicFormUtil from \"../../../../contents/create/factory/util/logicFormUtil\";\r\nimport LogicElementUtil from \"../../../../contents/create/factory/util/logicElementUtil\";\r\nimport CanvasUtil from \"../../../../utils/canvasUtil\";\r\nimport BuildUtil from \"../../../../contents/create/preview/buildUtil\";\r\nimport { AiOutlineEnter } from \"react-icons/ai\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\n\r\nconst FuseMainteDialog = (props: {\r\n    focus: number;\r\n    seedList: FuseBean[];\r\n    // isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: (frame: number, seedId: string, values: number[]) => void;\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const [newFrame, setNewFrame] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n    const [seed, setSeed] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [preset, setPreset] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const isInputOK = seed.errors.length === 0 && newFrame.errors.length === 0 && formList.find(form => form.errors.length > 0) == undefined;\r\n\r\n    const mapping = () => {\r\n        if (props.focus === -1) return;\r\n        const curFuse = fuseList[props.focus];\r\n        setNewFrame({ ...newFrame, value: curFuse.frame.toString() });\r\n        setSeed({ ...seed, value: curFuse.seedId.toString() });\r\n        setFormList(curFuse.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    }\r\n\r\n    const initFormList = (seedId: string) => {\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seedId;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n        }\r\n        setFormList(argumentList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }\r\n\r\n    const createSeq = () => {\r\n        return fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if(props.focus !== -1) mapping();\r\n    }, []);\r\n\r\n    const propertiesFormJsx = useMemo(() => {\r\n        if (seed.value === '') return <></>;\r\n\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        let presetList: LogicUtil.NodeSampleItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seed.value;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n            formgrpList = activeSeed.formgrps;\r\n            presetList = activeSeed.presets;\r\n        }\r\n        return (<>\r\n            <FormUtil.BorderPanel\r\n                title=\"Preset\"\r\n                innerJsx={<FormUtil.Record\r\n                    jsx={<>\r\n                        <FormUtil.Combobox\r\n                            width={250}\r\n                            checkable={preset}\r\n                            setCheckable={setPreset}\r\n                            headBlank\r\n                            list={presetList.map((sample, i) => {\r\n                                return {\r\n                                    labelText: sample.name,\r\n                                    value: i.toString()\r\n                                }\r\n                            })}\r\n                        />\r\n                        <FormUtil.ButtonItem\r\n                            button={{\r\n                                label: 'Apply',\r\n                                isEnable: preset.value !== '',\r\n                                callback: () => {\r\n                                    const selectedIndex = Number(preset.value);\r\n                                    const values = presetList[selectedIndex].values;\r\n                                    values.forEach((value, i) => {\r\n                                        formList[i].value = value.toString();\r\n                                    });\r\n                                    setFormList(formList.slice());\r\n                                }\r\n                            }}\r\n                        />\r\n                    </>}\r\n                />}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Properties\"\r\n                innerJsx={<>{\r\n                    LogicFormUtil.buildPreviewForms(\r\n                        false, argumentList, formgrpList, formList, setFormList\r\n                    )\r\n                }</>}\r\n            />\r\n        </>);\r\n    }, [preset, formList]);\r\n\r\n    return (\r\n        <_Frame\r\n            width={600}\r\n            height={872}\r\n            scrollLock={store.env.scrollLock}\r\n        >\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        icon: <MdCancelPresentation />,\r\n                        width: 120,\r\n                        // isEnable: props.isModify,\r\n                        callback: () => {\r\n                            props.cancelAction();\r\n                            // setPreset({ ...preset, value: '' });\r\n                            // mapping();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Regist',\r\n                        icon: <AiOutlineEnter />,\r\n                        width: 120,\r\n                        isEnable: isInputOK,\r\n                        callback: () => {\r\n\r\n\r\n                            let fuse: StoryUtil.Fuse | null = null;\r\n                            let cache: StoryUtil.Cache | null = null;\r\n                            if (props.focus === -1) {\r\n                                fuse = { seq: createSeq(), frame: 0, seedId: '', values: [] };\r\n                                fuseList.push(fuse);\r\n\r\n                                cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n                                store.fuseCacheList.push(cache);\r\n                            } else {\r\n                                fuse = fuseList[props.focus];\r\n                                const fuseSeq = fuse.seq;\r\n                                cache = store.fuseCacheList.find(cache => cache.seq === fuseSeq) as StoryUtil.Cache;\r\n                            }\r\n\r\n                            fuse.frame = Number(newFrame.value);\r\n                            fuse.seedId = seed.value;\r\n                            const activeSeed = props.seedList.find(item => {\r\n                                return item.name === seed.value;\r\n                            });\r\n                            // fuse.dispName = activeSeed?.disp;\r\n                            fuse.values = formList.map(form => form.value);\r\n                            dispatcher.story.updateCache(fuse, cache);\r\n                            (store.storyData as StoryUtil.StoryData).fuseList = fuseList.slice();\r\n                            store.system.dialog = null;\r\n                            dispatcher.updateStore();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Base\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isNumber\r\n                                checkable={newFrame}\r\n                                setCheckable={setNewFrame}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Seed\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                checkable={seed}\r\n                                setCheckable={(checkable) => {\r\n                                    initFormList(checkable.value);\r\n                                    setSeed({ ...checkable });\r\n                                }}\r\n                                list={props.seedList.map(seed => {\r\n                                    return { value: seed.name, labelText: seed.disp ?? seed.name }\r\n                                })}\r\n                                headBlank\r\n                                width={250}\r\n                                validates={\r\n                                    [\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n            {propertiesFormJsx}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default FuseMainteDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    scrollLock: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #cfd7dae6;\r\n    border: 1px solid #474747;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n    overflow-y: ${props => !props.scrollLock ? 'auto' : 'hidden'};\r\n`;","import styled, { css, keyframes } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport StoryUtil from \"../../../../contents/create/launcher/util/storyUtil\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport FuseMainteDialog from \"./fuseMainteDialog\";\r\nimport { FuseBean } from \"../../../../contents/create/launcher/storyTab\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\nimport { GrView } from \"react-icons/gr\";\r\nimport { ImCopy } from \"react-icons/im\";\r\nimport assert from \"assert\";\r\n\r\nconst COL_WIDTH_LIST = [48, 252, 150];\r\n\r\nconst OPTION_BUTTON_WIDTH = 112;\r\n\r\nconst FuseList = (props: {\r\n    focus: number;\r\n    setFocus: (focus: number) => void;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const createSeq = () => {\r\n        return storyData.fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    const recordJsxList = useMemo(() => {\r\n        return storyData.fuseList.map((fuse, i) => {\r\n\r\n            const cache = store.fuseCacheList.find(cache => cache.seq === fuse.seq);\r\n            \r\n            const curSeed = props.seedList.find(item => {\r\n                return item.name === fuse.seedId;\r\n            });\r\n            assert(curSeed != undefined, 'curSeed is undefined.');\r\n\r\n            let thumbJsx: JSX.Element[] = [];\r\n            if (cache != undefined) {\r\n                thumbJsx = cache.thumbList.slice(0, 3).map((thumb, j) => {\r\n                    const imgJsx = thumb == undefined ? <></> : <_Img src={thumb.url} />;\r\n                    return (\r\n                        <_SampleDiv key={j}>\r\n                            {/* <_SampleName>{thumb.name}</_SampleName> */}\r\n                            <_CanvasDiv>\r\n                                {imgJsx}\r\n                            </_CanvasDiv>\r\n                        </_SampleDiv>\r\n                    );\r\n                });\r\n            };\r\n            const isFocus = props.focus === i;\r\n            return (<_RecordWrap key={i}\r\n                isFocus={isFocus}\r\n            >\r\n                <_RecordCont\r\n                    onClick={() => {\r\n                        if (props.focus !== i) {\r\n                            props.setFocus(i);\r\n                        } else if (props.focus === i) {\r\n                            props.setFocus(-1);\r\n                        }\r\n                    }}\r\n                >\r\n                    <_ColWrap width={COL_WIDTH_LIST[0]}><_TextItem>{fuse.frame}</_TextItem></_ColWrap>\r\n                    <_ColWrap width={COL_WIDTH_LIST[1]}>\r\n                        <_TextItem>[{fuse.seq}] {curSeed.disp ?? fuse.seedId}</_TextItem>\r\n                        {/* <_FrameForm\r\n                            type=\"number\"\r\n                            isEditable={isFocus}\r\n                            min={0} max={storyData.limitFrame}\r\n                            step={1}\r\n                            value={storyData.fuseList[i].frame}\r\n                            onChange={(e) => {\r\n                                storyData.fuseList[i].frame = e.currentTarget.valueAsNumber;\r\n                                storyData.fuseList = storyData.fuseList.slice();\r\n                                setStore({ ...store });\r\n                            }}\r\n                        />\r\n                        <_FrameSlider\r\n                            type=\"range\"\r\n                            isEditable={isFocus}\r\n                            min={0} max={storyData.limitFrame}\r\n                            step={1}\r\n                            value={storyData.fuseList[i].frame}\r\n                            onChange={(e) => {\r\n                                storyData.fuseList[i].frame = e.currentTarget.valueAsNumber;\r\n                                storyData.fuseList = storyData.fuseList.slice();\r\n                                setStore({ ...store });\r\n                            }}\r\n                        /> */}\r\n                    </_ColWrap>\r\n                    <_ColWrap width={COL_WIDTH_LIST[2]}><_ImageItem>{thumbJsx}</_ImageItem></_ColWrap>\r\n                </_RecordCont>\r\n                <_Option isFocus={isFocus}>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        isIconButton\r\n                        buttons={[\r\n                            {\r\n                                label: 'Edit',\r\n                                icon: <FiEdit />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                // isEnable: props.isModify,\r\n                                callback: () => {\r\n                                    store.system.dialog = <FuseMainteDialog\r\n                                        focus={props.focus}\r\n                                        seedList={props.seedList}\r\n                                        cancelAction={() => {\r\n                                        }}\r\n                                        modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                        }}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Copy',\r\n                                icon: <ImCopy />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    const cloneFuse = JSON.parse(JSON.stringify(storyData.fuseList[props.focus])) as StoryUtil.Fuse;\r\n                                    cloneFuse.seq = createSeq();\r\n                                    const focusSeq = storyData.fuseList[props.focus].seq;\r\n                                    const index = store.fuseCacheList.findIndex(cache => cache.seq === focusSeq);\r\n                                    const cloneCache = JSON.parse(JSON.stringify(store.fuseCacheList[index])) as StoryUtil.Cache;\r\n                                    cloneCache.seq = cloneFuse.seq;\r\n                                    storyData.fuseList.push(cloneFuse);\r\n                                    storyData.fuseList = storyData.fuseList.slice();\r\n                                    store.fuseCacheList.push(cloneCache);\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Delete',\r\n                                icon: <RiDeleteBinLine />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    const focusSeq = storyData.fuseList[props.focus].seq;\r\n                                    storyData.fuseList.splice(props.focus, 1);\r\n                                    const index = store.fuseCacheList.findIndex(cache => cache.seq === focusSeq);\r\n                                    store.fuseCacheList.splice(index, 1);\r\n                                    setStore({ ...store });\r\n                                    props.setFocus(props.focus - 1);\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Test',\r\n                                icon: <GrView />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    dispatcher.story.openPreviewSoloDialog(props.focus);\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_Option>\r\n            </_RecordWrap>);\r\n        });\r\n    }, [storyData.fuseList, props.focus]);\r\n\r\n    return (<>\r\n        <_HeaderDiv>\r\n            <_HeaderItem width={COL_WIDTH_LIST[0]}>F</_HeaderItem>\r\n            <_HeaderItem width={COL_WIDTH_LIST[1]}>[Seq] Seed</_HeaderItem>\r\n            <_HeaderItem width={COL_WIDTH_LIST[2]}>Snapshot</_HeaderItem>\r\n        </_HeaderDiv>\r\n        <_BodyScrollDiv>\r\n            {recordJsxList}\r\n        </_BodyScrollDiv>\r\n    </>);\r\n}\r\n\r\nexport default FuseList;\r\n\r\nconst _HeaderDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #0c0c0c44;\r\n  /* background: linear-gradient(to bottom, #99a5b9, #c3cee4, #99a5b9); */\r\n  width: calc(100% - 30px);\r\n  height: 36px;\r\n  margin: 0 0 0 5px;\r\n  padding: 3px;\r\n  box-sizing: border-box;\r\n  border-radius: 2px 2px 0 0;\r\n`;\r\n\r\nconst _HeaderItem = styled.div<{\r\n    width: number;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #feffff36;\r\n  width: ${props => props.width}px;\r\n  height: 30px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  font-size: 24px;\r\n  line-height: 26px;\r\n  font-weight: 600;\r\n  font-style: italic;\r\n  color: #ffffff;\r\n  text-align: center;\r\n  margin: 0 2px;\r\n`;\r\n\r\nconst _BodyScrollDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #4d6e854e;\r\n  width: calc(100% - 10px);\r\n  height: calc(100% - 36px);\r\n  margin: 0 0 0 5px;\r\n  overflow-y: auto;\r\n`;\r\nconst fadeIn = keyframes`\r\n  from {\r\n    background-color: #bb6f6fa0;\r\n  }\r\n  to {\r\n    background-color: #fabebe58;\r\n  }\r\n`;\r\nconst _RecordWrap = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffffff37;\r\n  ${props => !props.isFocus ? '' : css`\r\n      animation: ${fadeIn} 1.2s linear infinite;\r\n  `}\r\n  width: 100%;\r\n  margin: 1px 0 0 0;\r\n  border-radius: 0 0 8px 8px;\r\n`;\r\nconst _RecordCont = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 20px); */\r\n  width: 100%;\r\n  height: 56px;\r\n  margin: 1px 0 0 0;\r\n  padding: 3px;\r\n  box-sizing: border-box;\r\n`;\r\nconst _Option = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #ebffe6f9; */\r\n  width: 100%;\r\n  height: ${props => props.isFocus ? '68' : '0'}px;\r\n  /* height: 0; */\r\n  margin: 1px 0 0 0;\r\n  overflow-y: hidden;\r\n  transition: height 0.1s;\r\n`;\r\n\r\nconst _ColWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n  display: inline-block;\r\n  width: ${props => props.width}px;\r\n  margin: 0 2px;\r\n  /* background-color: #ff0000bb; */\r\n  vertical-align: middle;\r\n`;\r\nconst _TextItem = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffffffbc;\r\n  width: 100%;\r\n  height: 30px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  padding-left: 6px;\r\n  border-radius: 4px;\r\n  font-size: 24px;\r\n  line-height: 26px;\r\n  font-weight: 600;\r\n  /* font-style: italic; */\r\n  color: #7c0025;\r\n  text-align: left;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  /* margin: 8px 2px; */\r\n`;\r\nconst _FrameForm = styled.input<{\r\n    isEditable: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #628cffb9; */\r\n  border: 1px solid #242424;\r\n  border-radius: 2px;\r\n  width: 46px;\r\n  height: 20px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  ${props => props.isEditable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n  vertical-align: middle;\r\n  font-weight: 600;\r\n  color: #180085;\r\n`;\r\nconst _FrameSlider = styled.input<{\r\n    isEditable: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffd562ba;\r\n  width: calc(100% - 50px);\r\n  height: 20px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  ${props => props.isEditable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst _ImageItem = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #ffffffbc; */\r\n  width: 100%;\r\n  height: 50px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  /* border-radius: 4px; */\r\n  color: #000850;\r\n  text-align: center;\r\n  margin: 0 2px;\r\n  vertical-align: middle;\r\n  text-align: left;\r\n`;\r\n\r\nconst WND_SIZE = 50;\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    /* margin: 0 0 0 2px; */\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Img = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport { useContext, useMemo, useState, useRef } from \"react\";\r\nimport StoryUtil from \"../../../../contents/create/launcher/util/storyUtil\";\r\nimport { FuseBean } from \"../../../../contents/create/launcher/storyTab\";\r\n\r\nexport const FRAME_LINE_WIDTH = 107;\r\n\r\nconst FrameLine = (props: {\r\n    focus: number;\r\n    setFocus: (focus: number) => void;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n    const screenRate = store.env.screenRate;\r\n\r\n    const [startY, setStartY] = useState<null | number>(null);\r\n    const [startX, setStartX] = useState<null | number>(null);\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n\r\n    const frameRateJsxList = useMemo(() => {\r\n        if (ref.current == null) return <></>;\r\n        const clientWidth = ref.current.clientWidth - 10;\r\n        const clientHeight = ref.current.clientHeight - 10;\r\n        return fuseList.map((fuse, i) => {\r\n            let left: undefined | number = undefined;\r\n            const seed = props.seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n            const posXIndex = seed.args.findIndex(arg => arg.isPosX);\r\n            if (posXIndex !== -1) {\r\n                const arg = seed.args[posXIndex];\r\n                const min = arg.min as number;\r\n                const max = arg.max as number;\r\n                const range = max - min;\r\n                const val = Number(fuse.values[posXIndex]) - min;\r\n                const rate = val / range;\r\n                left = Math.floor(clientWidth * rate);\r\n            }\r\n            const top = Math.floor(fuse.frame / limitFrame * clientHeight);\r\n            return <_FrameRate key={i}\r\n                isCurr={i === props.focus}\r\n                top={top}\r\n                left={left}\r\n            />\r\n        });\r\n    }, [fuseList, props.focus]);\r\n\r\n    const putAction = (x: number, y: number) => {\r\n        if (props.focus === -1) return;\r\n        setStartY(y);\r\n        setStartX(x);\r\n    }\r\n\r\n    const moveAction = (x: number, y: number) => {\r\n        if (startY == null || startX == null || ref.current == null) return;\r\n        const clientHeight = ref.current.clientHeight - 10;\r\n        const fuse = fuseList[props.focus];\r\n\r\n        // フレームの移動\r\n        const rate = limitFrame / clientHeight * 2;\r\n        // console.log('read ' + start);\r\n        fuse.frame += Math.floor((y - startY)/screenRate * rate);\r\n        if (fuse.frame < 0) fuse.frame = 0;\r\n        else if (fuse.frame > limitFrame) fuse.frame = limitFrame;\r\n        const prevFocusSeq = fuseList[props.focus].seq;\r\n        fuseList.sort((a, b) => a.frame - b.frame);\r\n        const nowFocusSeq = fuseList[props.focus].seq;\r\n        if (prevFocusSeq !== nowFocusSeq) {\r\n            props.setFocus(fuseList.findIndex(fuse => fuse.seq === prevFocusSeq) as number);\r\n        }\r\n\r\n        // X座標の移動\r\n        const seed = props.seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n        const posXIndex = seed.args.findIndex(arg => arg.isPosX);\r\n        if (posXIndex !== -1) {\r\n            const arg = seed.args[posXIndex];\r\n            const min = arg.min as number;\r\n            const max = arg.max as number;\r\n            const range = max - min;\r\n            const clientWidth = (ref.current as HTMLDivElement).clientWidth - 10;\r\n            const rate = range / clientWidth * 2;\r\n            let value = Number(fuse.values[posXIndex]);\r\n            value += Math.floor((x - startX)/screenRate * rate);\r\n            // 範囲外に出た場合\r\n            if (value < min) value = min;\r\n            else if (value > max) value = max;\r\n            fuse.values[posXIndex] = value.toString();\r\n            setStartX(x);\r\n        }\r\n\r\n        storyData.fuseList = fuseList.slice();\r\n        setStartY(y);\r\n        // console.log('set ' + start);\r\n        dispatcher.updateStore();\r\n    }\r\n\r\n    const releaseAction = () => {\r\n        setStartY(null);\r\n        setStartX(null);\r\n    }\r\n\r\n    return (\r\n        <_FrameLineDiv ref={ref}\r\n            isEdit={startY != null}\r\n            onMouseDown={(e) => { putAction(e.clientX, e.clientY) }}\r\n            onMouseMove={(e) => { moveAction(e.clientX, e.clientY) }}\r\n            onMouseUp={releaseAction}\r\n            onMouseLeave={releaseAction}\r\n            onTouchStart={(e) => { putAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n            onTouchMove={(e) => { moveAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n            onTouchEnd={releaseAction}\r\n            onTouchCancel={releaseAction}\r\n        >\r\n            {frameRateJsxList}\r\n        </_FrameLineDiv>\r\n    );\r\n}\r\n\r\nexport default FrameLine;\r\n\r\n\r\n\r\nconst _FrameLineDiv = styled.div<{\r\n    isEdit: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${FRAME_LINE_WIDTH}px;\r\n  height: calc(100% - 36px);\r\n  background-color: #5995a790;\r\n  ${props => !props.isEdit ? '' : css`\r\n    background-color: #85b9c990;\r\n  `}\r\n  border: 1px solid #5a0000b8;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  vertical-align: top;\r\n  margin-top: 36px;\r\n`;\r\n\r\nconst _FrameRate = styled.div<{\r\n    isCurr: boolean;\r\n    top: number;\r\n    left?: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  left: 0;\r\n  top: ${props => props.top}px;\r\n  width: 100%;\r\n  ${props => props.left == undefined ? '' : css`\r\n      width: 10px;\r\n      left: ${props.left}px;\r\n  `}\r\n  height: 10px;\r\n  background-color: #627cc5;\r\n  border-radius: 4px;\r\n  border: 1px solid #00000061;\r\n  box-sizing: border-box;\r\n  ${props => !props.isCurr ? '' : css`\r\n      background-color: #e20000;\r\n      z-index: 10;\r\n  `}\r\n`;","import { useContext, useMemo, useState, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport FuseList from \"./fuseList\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport StoryUtil from \"../../../../contents/create/launcher/util/storyUtil\";\r\nimport FuseMainteDialog from \"./fuseMainteDialog\";\r\nimport { FuseBean } from \"../../../../contents/create/launcher/storyTab\";\r\nimport LogicUtil from \"../../../../contents/create/factory/util/logicUtil\";\r\nimport LogicElementUtil from \"../../../../contents/create/factory/util/logicElementUtil\";\r\nimport BuildUtil from \"../../../../contents/create/preview/buildUtil\";\r\nimport { AiOutlineAppstoreAdd } from \"react-icons/ai\";\r\nimport { FaSortAmountDownAlt } from \"react-icons/fa\";\r\nimport { VscPreview } from \"react-icons/vsc\";\r\nimport { IoSaveOutline } from \"react-icons/io5\";\r\nimport { IoSave } from \"react-icons/io5\";\r\n\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport FrameLine, { FRAME_LINE_WIDTH } from \"./frameLine\";\r\nimport assert from \"assert\";\r\nimport LocalStorageUtil from \"../../../../utils/localStorageUtil\";\r\nimport StoreLocalStrage from \"../../../../redux/store/storeLocalStrage\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../../../../contents/dialog/confirmDialog\";\r\n\r\nconst SPEditStoryFrame = () => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [focus, setFocus] = useState<number>(-1);\r\n    const [isPreview, setPreview] = useState<boolean>(false);\r\n    // const [seedId, setSeedId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [presetIndex, setPresetIndex] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [interval, setInterval] = useState<FormUtil.CheckableValue>({ value: store.local.putInterval.toString(), errors: [] });\r\n\r\n    const putInterval = store.local.putInterval;\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const [seedList, presetList]: [FuseBean[], StoryUtil.PresetBean[]] = useMemo(() => {\r\n        // if (store.libraryData == null) throw assert('store.libraryDataがnullです。');\r\n        assert(store.libraryData != null);\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        const seedWrapList = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n\r\n        const seedList: FuseBean[] = [];\r\n        const presetList: StoryUtil.PresetBean[] = [];\r\n        seedWrapList.forEach(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n\r\n            // 引数リストを取得\r\n            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const args = argMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n\r\n            // フォームグループリストを取得\r\n            const groupMng = LogicElementUtil.getInnerWrap(wrap, 'interface-mng', 'formgrp-mng');\r\n            let formgrps: LogicUtil.NodeFromGrpItem[] = [];\r\n            if (groupMng != null) {\r\n                formgrps = (groupMng.data as LogicUtil.NodeFromgrpManager).defines.map(wrap => wrap.data as LogicUtil.NodeFromGrpItem);\r\n            }\r\n\r\n            // プリセットリストを取得\r\n            const sampleMng = LogicElementUtil.getInnerWrap(wrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n            const presets = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n            seedList.push({\r\n                name: seed.name,\r\n                disp: seed.disp,\r\n                args, formgrps, presets\r\n            });\r\n\r\n            presets.forEach(preset => {\r\n                const dispName = (seed.disp ?? seed.name) + ': ' + preset.name;\r\n                presetList.push({\r\n                    seedId: seed.name,\r\n                    dispName,\r\n                    values: preset.values\r\n                });\r\n            });\r\n        });\r\n        return [seedList, presetList];\r\n    }, [store.libraryData]);\r\n\r\n    // useEffect(() => {\r\n    //     const isLoad = fuseList.length > 0 && store.fuseCacheList.length === 0;\r\n    //     if (!isLoad) return;\r\n    //     fuseList.forEach(fuse => {\r\n    //         const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n    //         store.fuseCacheList.push(cache);\r\n    //         dispatcher.story.updateCache(fuse, cache);\r\n    //     });\r\n    //     storyData.fuseList = fuseList.slice();\r\n    //     dispatcher.updateStore();\r\n    // }, [fuseList, store.fuseCacheList]);\r\n\r\n    const getNewFuseProps = (): {\r\n        newSeq: number;\r\n        newFrame: number;\r\n    } => {\r\n        const newSeq = fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n        const newFrame = fuseList.length === 0 ? 0 : fuseList[fuseList.length - 1].frame + putInterval;\r\n        return { newSeq, newFrame };\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"left\"\r\n            isIconButton\r\n            buttons={[\r\n                {\r\n                    label: 'Preview',\r\n                    width: 140,\r\n                    icon: <VscPreview />,\r\n                    isEnable: fuseList.length > 0,\r\n                    callback: () => {\r\n                        fuseList.sort((a, b) => {\r\n                            return a.frame - b.frame;\r\n                        });\r\n                        storyData.fuseList = fuseList.slice();\r\n                        // dispatcher.updateStore();\r\n                        setPreview(true);\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Save',\r\n                    width: 140,\r\n                    icon: <IoSaveOutline />,\r\n                    isEnable: true,\r\n                    callback: () => {\r\n                        const local = store.local;\r\n                        const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + store.editing.localSeq.toString();\r\n                        const editingDataVal = localStorage.getItem(fileKey);\r\n                        assert(editingDataVal != null, 'editingData is null.');\r\n                        const editingData = JSON.parse(editingDataVal) as StoreLocalStrage.Project;\r\n                        editingData.lastmod = DataUtil.getStringFromDate(new Date());\r\n                        assert(store.storyData != null, 'store.storyData is null.');\r\n                        editingData.scenarioData = JSON.parse(JSON.stringify(store.storyData));\r\n                        localStorage.setItem(fileKey, JSON.stringify(editingData));\r\n\r\n                        // セーブ完了のダイアログを表示\r\n                        store.system.dialog = <ConfirmDialog.Component\r\n                            message=\"Save project succesful!\"\r\n                        />;\r\n                        dispatcher.updateStore();\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"fuse\"\r\n            height={644}\r\n            backgroundColor=\"#c9d4dd\"\r\n            innerJsx={<>\r\n                <_SeedDiv>\r\n                    <FormUtil.ButtonItem\r\n                        button={\r\n                            {\r\n                                label: 'Add',\r\n                                width: 100,\r\n                                icon: <AiOutlineAppstoreAdd />,\r\n                                callback: () => {\r\n                                    if (presetIndex.value === '') {\r\n\r\n                                        store.system.dialog = <FuseMainteDialog\r\n                                            focus={-1}\r\n                                            seedList={seedList}\r\n                                            cancelAction={() => {\r\n                                            }}\r\n                                            modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                            }}\r\n                                        />;\r\n                                        setStore({ ...store });\r\n                                    } else {\r\n                                        const preset = presetList[Number(presetIndex.value)];\r\n                                        console.log(preset);\r\n                                        const seedId = preset.seedId;\r\n                                        const seed = seedList.find(seed => seed.name === seedId) as FuseBean;\r\n                                        const newFuseProps = getNewFuseProps();\r\n                                        const fuse: StoryUtil.Fuse = {\r\n                                            seq: newFuseProps.newSeq,\r\n                                            frame: newFuseProps.newFrame,\r\n                                            seedId: '',\r\n                                            values: []\r\n                                        };\r\n                                        const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n\r\n                                        fuseList.push(fuse);\r\n                                        store.fuseCacheList.push(cache);\r\n\r\n                                        fuse.seedId = seedId;\r\n                                        // fuse.dispName = seed.disp;\r\n                                        fuse.values = preset.values.slice();\r\n                                        dispatcher.story.updateCache(fuse, cache);\r\n                                        (store.storyData as StoryUtil.StoryData).fuseList = fuseList.slice();\r\n                                        store.system.dialog = null;\r\n                                        dispatcher.updateStore();\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        }\r\n                    />\r\n                    <_FormDiv isDisp={store.local.isDispPreset}>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Preset\"\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={presetIndex}\r\n                                    setCheckable={setPresetIndex}\r\n                                    list={presetList.map((preset, i) => {\r\n                                        return { value: i.toString(), labelText: preset.dispName }\r\n                                    })}\r\n                                    headBlank\r\n                                    width={340}\r\n                                // validates={\r\n                                //     [\r\n                                //         {\r\n                                //             checker: (value) => ValidateUtil.checkRequired(value),\r\n                                //             errorType: \"required\"\r\n                                //         }\r\n                                //     ]\r\n                                // }\r\n                                />\r\n                            }\r\n                        />\r\n                        {/* <FormUtil.FormRecord\r\n                            titleLabel=\"Interval\"\r\n                            jsx={\r\n                                <FormUtil.TextField\r\n                                    width={100}\r\n                                    isNumber\r\n                                    checkable={interval}\r\n                                    setCheckable={setInterval}\r\n                                    validates={[\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        },\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                            errorType: \"value\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            }\r\n                        /> */}\r\n                    </_FormDiv>\r\n                </_SeedDiv>\r\n                <_MainDiv>\r\n                    <FrameLine\r\n                        focus={focus}\r\n                        setFocus={setFocus}\r\n                        seedList={seedList}\r\n                    />\r\n                    <_FuseListFrame>\r\n                        <FuseList\r\n                            focus={focus}\r\n                            setFocus={setFocus}\r\n                            seedList={seedList}\r\n                        />\r\n                    </_FuseListFrame>\r\n                </_MainDiv>\r\n            </>}\r\n        />\r\n        {!isPreview ? <></> : <BuildUtil.BuildFrame closeAction={() => {\r\n            setPreview(false);\r\n        }} />}\r\n    </>);\r\n}\r\n\r\nexport default SPEditStoryFrame;\r\n\r\n\r\nconst _SeedDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 84px;\r\n  /* background-color: #be97ca; */\r\n  vertical-align: top;\r\n`;\r\nconst _FormDiv = styled.div<{\r\n    isDisp: boolean;\r\n}>`\r\n  display: inline-block;\r\n  ${props => !props.isDisp ? '' : css`\r\n      display: none;\r\n  `}\r\n  position: relative;\r\n  width: 492px;\r\n  vertical-align: top;\r\n  /* background-color: #09fc3e; */\r\n  margin: 0 0 0 4px;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: calc(100% - 84px);\r\n  /* background-color: #c2ca97; */\r\n`;\r\n\r\nconst _FuseListFrame = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: calc(100% - ${FRAME_LINE_WIDTH}px);\r\n  height: 100%;\r\n  /* background-color: #f80707; */\r\n  vertical-align: top;\r\n`;","import styled from \"styled-components\";\r\nimport PublishFrame from \"../../../contents/home/publishFrame\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport SPManageFrame from \"./sPManageFrame\";\r\nimport SPEditStoryFrame from \"./edit/sPEditStoryFrame\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\n\r\nconst SPCreateChannel = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isEdit, setEdit] = useState<boolean>(false);\r\n    const hasData = store.libraryData != null;\r\n\r\n    return (<>\r\n        <_SwitchWrap>\r\n            <FormUtil.SwitchTwoFace\r\n                label1=\"Manage\"\r\n                label2=\"Edit\"\r\n                rate1={50}\r\n                rate2={50}\r\n                isUse={isEdit}\r\n                width={550}\r\n                isEditable={hasData}\r\n                isLarge={true}\r\n                callback={() => {\r\n                    setEdit(!isEdit);\r\n                }}\r\n            />\r\n        </_SwitchWrap>\r\n        <_MainDiv>\r\n            {!isEdit ? <SPManageFrame isEdit={isEdit} setEdit={setEdit} /> : <SPEditStoryFrame />}\r\n        </_MainDiv>\r\n    </>);\r\n}\r\n\r\nexport default SPCreateChannel;\r\n\r\nconst _SwitchWrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #9fc99e; */\r\n  width: 100%;\r\n  text-align: center;\r\n  margin-bottom: 6px;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #9fc99e; */\r\n  width: 100%;\r\n  height: calc(100% - 60px);\r\n`;","import styled from \"styled-components\";\r\nimport PublishFrame from \"../../contents/home/publishFrame\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport SPManageFrame from \"./create/sPManageFrame\";\r\nimport SPEditStoryFrame from \"./create/edit/sPEditStoryFrame\";\r\nimport { GlobalContext } from \"../../contents/entry/systemEntry\";\r\nimport LocalStorageUtil from \"../../utils/localStorageUtil\";\r\nimport { MdOutlineCleaningServices } from \"react-icons/md\";\r\nimport ConfirmDialog from \"../../contents/dialog/confirmDialog\";\r\nimport ValidateUtil from \"../../utils/form/validateUtil\";\r\n\r\nconst SPPropertyChannel = () => {\r\n  const { store, dispatcher } = useContext(GlobalContext);\r\n  const [interval, setInterval] = useState<FormUtil.CheckableValue>({ value: \"\", errors: [] });\r\n  const [isDispPreset, setDispPreset] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (store.system.channelIndex == 3) {\r\n      reload();\r\n      dispatcher.updateStore();\r\n    }\r\n  }, [store.system.channelIndex]);\r\n\r\n  const reload = () => {\r\n    interval.value = localStorage.getItem(LocalStorageUtil.KEY_PROP_PUT_INTERVAL) as string;\r\n    setInterval({ ...interval });\r\n    setDispPreset(localStorage.getItem(LocalStorageUtil.KEY_DISP_PRESET) === '0');\r\n\r\n    store.local.putInterval = Number(interval.value);\r\n    console.log(store.local.putInterval);\r\n    store.local.isDispPreset = isDispPreset;\r\n  }\r\n\r\n  return (<>\r\n    <FormUtil.BorderPanel\r\n      title=\"Properties\"\r\n      height={155}\r\n      innerJsx={<>\r\n        <FormUtil.FormRecord\r\n          titleLabel=\"Interval\"\r\n          jsx={\r\n            <FormUtil.TextField\r\n              width={100}\r\n              isNumber\r\n              checkable={interval}\r\n              setCheckable={setInterval}\r\n              validates={[\r\n                {\r\n                  checker: (value) => ValidateUtil.checkRequired(value),\r\n                  errorType: \"required\"\r\n                },\r\n                {\r\n                  checker: (value) => ValidateUtil.checkNumberRange(value, 0, 100),\r\n                  errorType: \"value\"\r\n                }\r\n              ]}\r\n            />\r\n          }\r\n        />\r\n        <FormUtil.FormRecord\r\n          titleLabel=\"Preset\"\r\n          jsx={\r\n            <FormUtil.SwitchTwoFace\r\n              label1=\"Off\"\r\n              label2=\"ON\"\r\n              rate1={50}\r\n              rate2={50}\r\n              width={220}\r\n              isUse={isDispPreset}\r\n              callback={() => {\r\n                setDispPreset(!isDispPreset);\r\n              }}\r\n            />\r\n          }\r\n        />\r\n        <FormUtil.ButtonRecord\r\n          align=\"left\"\r\n          buttons={[\r\n            {\r\n              label: 'Save',\r\n              width: 200,\r\n              icon: <MdOutlineCleaningServices />,\r\n              callback: () => {\r\n                store.local.putInterval = Number(interval.value);\r\n                store.local.isDispPreset = isDispPreset;\r\n                localStorage.setItem(LocalStorageUtil.KEY_DISP_PRESET, store.local.isDispPreset ? '0' : '1');\r\n                localStorage.setItem(LocalStorageUtil.KEY_PROP_PUT_INTERVAL, interval.value);\r\n\r\n                // 更新完了のダイアログを表示\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                  message=\"Save succesful!\"\r\n                />;\r\n                dispatcher.updateStore();\r\n              }\r\n            },\r\n            {\r\n              label: 'Load',\r\n              width: 200,\r\n              icon: <MdOutlineCleaningServices />,\r\n              callback: () => {\r\n                reload();\r\n                // 読み込み完了のダイアログを表示\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                  message=\"Load succesful!\"\r\n                />;\r\n                dispatcher.updateStore();\r\n              }\r\n            }\r\n          ]} />\r\n      </>}\r\n    />\r\n    <FormUtil.ButtonRecord\r\n      align=\"left\"\r\n      buttons={[\r\n        {\r\n          label: 'Local storage all clear',\r\n          width: 300,\r\n          icon: <MdOutlineCleaningServices />,\r\n          callback: () => {\r\n            localStorage.removeItem(LocalStorageUtil.KEY_LOGIN_HASH);\r\n            localStorage.removeItem(LocalStorageUtil.KEY_PROP_PUT_INTERVAL);\r\n            const seqMax = Number(localStorage.getItem(LocalStorageUtil.KEY_SCENARIO_SEQ));\r\n            for (let i = 0; i <= seqMax; i++) {\r\n              localStorage.removeItem(LocalStorageUtil.KEY_SCENARIO_PREFIX + i.toString());\r\n            }\r\n            localStorage.removeItem(LocalStorageUtil.KEY_SCENARIO_SEQ);\r\n\r\n            const local = store.local;\r\n            local.maxSeq = 0;\r\n            local.projects = [];\r\n            store.editing.localSeq = -1;\r\n\r\n            // 削除完了のダイアログを表示\r\n            store.system.dialog = <ConfirmDialog.Component\r\n              message=\"All clear succesful!\"\r\n            />;\r\n            dispatcher.updateStore();\r\n          }\r\n        }\r\n      ]} />\r\n  </>);\r\n}\r\n\r\nexport default SPPropertyChannel;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #9fc99e; */\r\n  width: 100%;\r\n  height: calc(100% - 40px);\r\n`;","import ReleaseNote from \"../../contents/home/releaseNote\";\r\n\r\nconst SPInforChannel = () => {\r\n\r\n    return (<ReleaseNote />);\r\n}\r\n\r\nexport default SPInforChannel;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport DirectLinkManager from \"./directLinkManager\";\r\nimport DataUtil from \"../utils/dataUtil\";\r\nimport { SPUtil } from \"./spUtil\";\r\nimport { initialStore } from \"../redux/store/store\";\r\nimport Splash from \"../contents/entry/splash\";\r\nimport { ChannelPane } from \"../base/components/tab/channelPane\";\r\n\r\nimport { VscGitPullRequestCreate } from \"react-icons/vsc\";\r\nimport { BiInfoSquare } from \"react-icons/bi\";\r\nimport { VscSymbolProperty } from 'react-icons/vsc';\r\nimport { TbLogicAnd } from \"react-icons/tb\";\r\nimport SPLibraryChannel from \"./contents/sPLibraryChannel\";\r\nimport GloballDialog from \"../contents/dialog/globalDialog\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../utils/systemConst\";\r\nimport SPCreateChannel from \"./contents/create/sPCreateChannel\";\r\nimport TotalHeader from \"../contents/entry/totalHeader\";\r\nimport SPPropertyChannel from \"./contents/sPPropertyChannel\";\r\nimport SPInforChannel from \"./contents/sPInfoChannel\";\r\nimport { GlobalContext } from \"../contents/entry/systemEntry\";\r\ntype ScreenBean = {\r\n    adjLeft: number;\r\n    adjTop: number;\r\n    rate: number;\r\n}\r\n\r\nconst SPRoot = (props: {\r\n    hashKey?: string;\r\n}) => {\r\n    // const [store, setStore] = useState(initialStore);\r\n  const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isPermit, setPermit] = useState(true);\r\n    const [screen, setScreen] = useState<ScreenBean>({ adjLeft: 0, adjTop: 0, rate: 1 });\r\n    const ref = useRef<null | HTMLDivElement>(null);\r\n\r\n    const splashJsx = !store.system.isSplash ? <></> : (\r\n        <_SplashDiv>\r\n            <Splash\r\n                remove={() => {\r\n                    store.system.isSplash = false;\r\n                    dispatcher.updateStore();\r\n                }}\r\n            />\r\n        </_SplashDiv>\r\n    );\r\n\r\n    const update = () => {\r\n        if (ref.current != null) {\r\n            // const [clientWidth, clientHeight] = [window.innerWidth, window.innerHeight];\r\n\r\n            const rect = ref.current.getBoundingClientRect();\r\n            const [clientWidth, clientHeight] = [rect.width, rect.height];\r\n\r\n            const cw = SPUtil.SCREEN_WIDTH;\r\n            const ch = SPUtil.SCREEN_HEIGHT;\r\n\r\n            const isFitSide = clientHeight / ch > clientWidth / cw;\r\n\r\n            const rate = !isFitSide ? clientHeight / ch : clientWidth / cw;\r\n            const adjLeft = !isFitSide ? clientWidth / 2 - (cw * rate / 2) : 0;\r\n            const adjTop = !isFitSide ? 0 : clientHeight / 2 - (ch * rate / 2);\r\n\r\n            setScreen({ adjLeft, adjTop, rate });\r\n            store.env.screenRate = rate;\r\n            dispatcher.updateStore();\r\n        }\r\n    }\r\n\r\n    // window.addEventListener('DOMContentLoaded', () => {\r\n    //     if (!isSmartPhone()) {\r\n    //         window.addEventListener('resize', update);\r\n    //     } else {\r\n    //         window.addEventListener('orientationchange resize', () => {\r\n    //             update();\r\n    //             setPermit(window.orientation === 0);\r\n    //         });\r\n    //     }\r\n    // });\r\n\r\n    // window.onorientationchange = () => {\r\n    //   setOrientation(window.orientation);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        store.system.isSPMode = true;\r\n        dispatcher.updateStore();\r\n\r\n        update();\r\n        console.log(navigator.userAgent);\r\n        if (isSmartPhone()) {\r\n            setPermit(window.orientation === 0);\r\n        }\r\n        if (!isSmartPhone()) {\r\n            window.addEventListener('resize', () => {\r\n                update();\r\n            });\r\n        } else {\r\n            window.addEventListener('orientationchange resize', () => {\r\n                alert('change');\r\n                update();\r\n                setPermit(window.orientation === 0);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    let jsx = <_Error>Make your smartphone vertical!</_Error>;\r\n    if (isPermit) {\r\n        let mainJsx = <></>;\r\n        if (props.hashKey != undefined) {\r\n            const projectSeq = DataUtil.getDecryptionedProjectSeq(props.hashKey);\r\n            mainJsx = <DirectLinkManager scenarioSeq={projectSeq} />;\r\n        } else {\r\n            mainJsx = (\r\n                <ChannelPane\r\n                    isLandscape={false}\r\n                    tabElements={[\r\n                        { name: 'Info', icon: <BiInfoSquare />, isEnable: true, cont: <SPInforChannel /> },\r\n                        { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <SPCreateChannel /> },\r\n                        { name: 'Library', icon: <TbLogicAnd />, isEnable: true, cont: <SPLibraryChannel /> },\r\n                        // { name: 'Library', icon: <TbLogicAnd />, isEnable: false, cont: <></>},\r\n                        { name: 'Property', icon: <VscSymbolProperty />, isEnable: true, cont: <SPPropertyChannel /> },\r\n                    ]}\r\n                    activeNo={store.system.channelIndex}\r\n                    selectTabIndex={(index: number) => {\r\n                        store.system.channelIndex = index;\r\n                        dispatcher.updateStore();\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n        jsx = (\r\n            <_Contents>\r\n                {splashJsx}\r\n                <GloballDialog />\r\n                <TotalHeader />\r\n                <_ChannelWrap>\r\n                    {mainJsx}\r\n                </_ChannelWrap>\r\n            </_Contents>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap ref={ref}>\r\n            <_Frame left={screen.adjLeft} top={screen.adjTop} rate={screen.rate}>\r\n                {jsx}\r\n            </_Frame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SPRoot;\r\n\r\nconst isSmartPhone = () => {\r\n    // UserAgentからのスマホ判定\r\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 10px);\r\n  height: calc(100% - 10px);\r\n  background-color: #9eadc9;\r\n  margin: 5px 0 0 5px; */\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst _ChannelWrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #dbdfe7;\r\n  width: 100%;\r\n  height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst _Frame = styled.div<{\r\n    left: number;\r\n    top: number;\r\n    rate: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: ${props => props.top}px;\r\n  left: ${props => props.left}px;\r\n  transform-origin: top left;\r\n  /* width: 100%;\r\n  height: 100%; */\r\n  transform: scale(${props => props.rate});\r\n`;\r\n\r\nconst _Contents = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${SPUtil.SCREEN_WIDTH}px;\r\n  height: ${SPUtil.SCREEN_HEIGHT}px;\r\n  background-color: #929292;\r\n`;\r\n\r\nconst _Error = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #750000;\r\n    color: white;\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _SplashDiv = styled.div`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: 50%;\r\n    top: 400px;\r\n    transform-origin: center;\r\n    transform: scale(0.7);\r\n`;","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport BuildUtil from \"../../contents/create/preview/buildUtil\";\r\nimport PreviewLauncherFrame from \"../../contents/create/preview/previewLauncherFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport { Store } from \"../store/store\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private setStore: (store: Store) => void;\r\n\r\n    constructor(store: Store, setStore: (store: Store) => void) {\r\n        this.store = store;\r\n        this.setStore = setStore;\r\n    }\r\n\r\n    public updateStore = () => {\r\n        this.setStore({ ...this.store });\r\n    }\r\n\r\n    public system = {\r\n        // setUserEnv: (userEnv: UserEnv) => {\r\n        // },\r\n    }\r\n    public story = {\r\n\r\n        /**\r\n         * プレビューオールダイアログを表示する\r\n         */\r\n        openPreviewAllDialog: () => {\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const minFrame = fuseList[0].frame;\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n            const sceens: string[] = [];\r\n            let useFrame: number = 0;\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    fuseList.some(def => {\r\n                        if (def.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                        } else if (def.frame > frame) return 1;\r\n                    });\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    useFrame = frame;\r\n                }\r\n            });\r\n            this.store.system.dialog = (\r\n                <PreviewLauncherFrame.Component\r\n                    sceens={sceens}\r\n                    frameCnt={useFrame}\r\n                />\r\n            );\r\n            this.updateStore();\r\n        },\r\n\r\n        /**\r\n         * プレビューソロダイアログを表示する\r\n         */\r\n        openPreviewSoloDialog: (focus: number) => {\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n            const sceens: string[] = [];\r\n            let useFrame: number = 0;\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    const def = fuseList[focus];\r\n                    if (frame === 0) {\r\n                        LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                    }\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    useFrame = frame;\r\n                }\r\n            });\r\n            this.store.system.dialog = (\r\n                <PreviewLauncherFrame.Component\r\n                    sceens={sceens}\r\n                    frameCnt={useFrame}\r\n                />\r\n            );\r\n            this.updateStore();\r\n        },\r\n\r\n\r\n        updateCache: (fuse: StoryUtil.Fuse, cache: StoryUtil.Cache) => {\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            \r\n            cache.thumbList = [];\r\n            cache.useFrame = 0;\r\n            const seedProps = LogicElementUtil.getSeedProperties(logicData, fuse.seedId);\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                doIterate: (frame, owner) => {\r\n                    if (frame === 0) {\r\n                        LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                    }\r\n\r\n                    const thumb = seedProps.thumbnailList.find(thumb => thumb.frame === frame);\r\n                    if (thumb != undefined) {\r\n                        const url = CanvasUtil.createURL(550, 550, (ctx) => {\r\n                            // パーティクルの描画\r\n                            owner.forEach(par => {\r\n                                par.draw(ctx);\r\n                            });\r\n                            ctx.save();\r\n                        });\r\n                        cache.thumbList.push({ name: thumb.name, url });\r\n                    }\r\n                },\r\n                doEnd: (frame) => {\r\n                    cache.useFrame = frame;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","import { createContext, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport MobileRoot from '../../sp/mobileRoot';\r\nimport PCRoot from './pCRoot';\r\nimport SPRoot from '../../sp/sPRoot';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport DataUtil from '../../utils/dataUtil';\r\nimport SystemConst from '../../utils/systemConst';\r\nimport LocalStorageUtil from '../../utils/localStorageUtil';\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    setStore: React.Dispatch<React.SetStateAction<Store>>;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    // const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const [store, setStore] = useState(initialStore);\r\n    const dispatcher = new Dispatcher(store, setStore);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    useEffect(() => {\r\n        // ローカルストレージから情報取得\r\n        LocalStorageUtil.load(store, dispatcher.updateStore);\r\n        dispatcher.updateStore();\r\n    }, []);\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{ store, setStore, dispatcher }}>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    {/* <PCRoot /> */}\r\n                    {!SystemConst.IS_SP ? <PCRoot /> : <SPRoot />}\r\n                </Route>\r\n                {/* <Route path=\"/sp\" exact >\r\n                    <SPRoot />\r\n                </Route> */}\r\n                {/* <Route path=\"/library\" exact >\r\n                    <MobileRoot hashKey={str} />\r\n                </Route> */}\r\n                <Route path=\"/share\" exact >\r\n                    <SPRoot hashKey={str} />\r\n                </Route>\r\n            </Switch>\r\n        </GlobalContext.Provider>\r\n    );\r\n\r\n}","import zlib from \"zlib\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport { sha256 } from 'js-sha256';\r\nimport Hashids from 'hashids';\r\nimport { ProjectType, Store } from \"../redux/store/store\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport ConfirmDialog from \"../contents/dialog/confirmDialog\";\r\nimport StoryUtil from \"../contents/create/launcher/util/storyUtil\";\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5001';\r\n    export const DB_SERVER_DOMAIN = 'https://hkdev-db.glitch.me';\r\n    // export const DB_SERVER_DOMAIN = 'https://crud-server001.glitch.me';\r\n\r\n    // export const APP_SERVER_DOMAIN = 'http://localhost:4333';\r\n    // export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    const DATABASE_NAME = 'pf2';\r\n\r\n    const getUserHashBuilder = () => {\r\n        return new Hashids('pf-webcache', 16);\r\n    }\r\n\r\n    export const getHashedFromUserSeq = (seq: number) => {\r\n        const hashids = getUserHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\r\n        const hashids = getUserHashBuilder();\r\n        let decryptioned = -1;\r\n        try {\r\n            decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        } catch (e) {\r\n            console.error('decode error');\r\n        }\r\n        return decryptioned;\r\n    }\r\n\r\n    const getScoreHashBuilder = () => {\r\n        return new Hashids('pf', 8);\r\n    }\r\n\r\n    export const getHashedFromProjectSeq = (seq: number) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedProjectSeq = (hashedSeq: string) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    // export const getPreviewURL = (scoreSeq: number) => {\r\n    //     const hashedKey = getHashedFromProjectSeq(scoreSeq);\r\n    //     const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n    //     return url;\r\n    // }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql, databaseName: DATABASE_NAME })\r\n        }\r\n    }\r\n\r\n    export type SendMailParam = {\r\n        from: string,\r\n        to: string,\r\n        subject: string,\r\n        text: string\r\n    }\r\n\r\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(json)\r\n        }\r\n    }\r\n\r\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/mail',\r\n            createSendMailRequestInit(json)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserInfoList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\r\n        const results = await response.json();\r\n        return results as { id: string, email: string }[];\r\n    };\r\n\r\n    export const findUserIdList = async () => {\r\n        const results = await findUserInfoList();\r\n        return (results as { id: string }[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfoFromEmail = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserInfoFromSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoLogin = async (id: string, password: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const getNextUserSeq = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\r\n        const results = await response.json();\r\n        const nextSeq = (results[0]['seq'] as number) + 1;\r\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\r\n\r\n        return nextSeq;\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findUserLibdvList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI(\r\n            'select',\r\n            `SELECT owner, seq, name, source, lastmod FROM libdvtbl WHERE owner = ${userSeq} order by seq`\r\n        );\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const loadFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            store.fileHandle = fileHandle;\r\n            const text = DataUtil.unZip(fileContents);\r\n            const data = JSON.parse(text);\r\n            // シナリオであるかどうかの判定\r\n            if (!data.hasOwnProperty('scenarioData')) {\r\n                store.libraryData = data;\r\n            } else {\r\n                const scenarioProps = data as StoryUtil.ScenarioFileProps;\r\n                store.libraryData = scenarioProps.libraryData;\r\n                store.storyData = scenarioProps.scenarioData;\r\n            }\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Successfully file loaded!\" />;\r\n            setStore({ ...store });\r\n        })();\r\n    }\r\n\r\n    export const saveFileBak = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.libraryData as LogicUtil.WrapElement;\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        const plainData = JSON.stringify(rootData);\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const saveLibraryFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.libraryData as LogicUtil.WrapElement;\r\n        const plainData = JSON.stringify(rootData);\r\n        saveFile(store, setStore, plainData, 'plgc');\r\n    }\r\n\r\n    export const saveScenarioFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const data: StoryUtil.ScenarioFileProps = {\r\n            libraryData: store.libraryData as LogicUtil.WrapElement,\r\n            scenarioData: store.storyData as StoryUtil.StoryData\r\n        }\r\n        const plainData = JSON.stringify(data);\r\n        saveFile(store, setStore, plainData, 'pstr');\r\n    }\r\n\r\n    export const saveFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>, plainData: string, extension: string) => {\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': [`.${extension}`],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const getSHA256Hash = (original: string) => {\r\n        return sha256(original);\r\n    }\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n\r\n    // export const getDirectUrl = (seq: number) => {\r\n    //     return `${APP_SERVER_DOMAIN}/#/story?v=${getHashedFromProjectSeq(seq)}`;\r\n    // }\r\n}\r\n\r\nexport default DataUtil;"],"sourceRoot":""}