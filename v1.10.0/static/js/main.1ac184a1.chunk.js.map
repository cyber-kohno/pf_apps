{"version":3,"sources":["system/base/design/styles.tsx","system/contents/dialog/confirmDialog.tsx","App.tsx","reportWebVitals.ts","index.tsx","system/redux/store/store.tsx","system/base/components/tab/tabbedPane.tsx","system/utils/systemConst.tsx","system/utils/canvasUtil.tsx","system/contents/graphic/particle.tsx","system/contents/graphic/drawUtil.tsx","system/contents/graphic/vectorUtil.tsx","system/contents/create/factory/util/paramUtil.tsx","system/contents/create/preview/modulateBuilder.tsx","system/contents/create/preview/previewUtil.tsx","system/utils/form/validateUtil.tsx","system/utils/treeUtil.tsx","system/contents/create/factory/detail/common/modifyOperations.tsx","system/contents/create/factory/logicMainteTab.tsx","system/contents/create/factory/detail/logic/editorArgumentMng.tsx","system/contents/create/factory/dialog/sendTemplateDialog.tsx","system/contents/create/factory/detail/logic/editorArgumentItem.tsx","system/contents/create/factory/detail/seed/editorSeedMng.tsx","system/contents/create/factory/detail/logic/editorLogicMng.tsx","system/contents/create/factory/detail/logic/editorLogicItem.tsx","system/contents/create/factory/detail/logic/editorParamItem.tsx","system/contents/create/factory/detail/logic/editorBehiviorMng.tsx","system/contents/create/factory/detail/logic/editorVisualMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnector.tsx","system/contents/create/factory/util/drawableVectorChooser.tsx","system/contents/create/factory/detail/logic/editorSendManager.tsx","system/contents/create/factory/detail/logic/editorFieldMng.tsx","system/contents/create/factory/detail/logic/editorExtendMng.tsx","system/contents/create/factory/detail/seed/editorSeedItem.tsx","system/contents/create/factory/detail/seed/editorThumbnailMng.tsx","system/contents/create/factory/detail/seed/editorThumbnailItem.tsx","system/contents/create/factory/util/logicFormUtil.tsx","system/contents/create/factory/util/logicUtil.tsx","system/contents/create/factory/detail/seed/editorSampleItem.tsx","system/contents/create/factory/detail/seed/editorSampleMng.tsx","system/contents/create/factory/detail/seed/editorInterfaceManager.tsx","system/contents/create/factory/detail/seed/editorSeedArgMng.tsx","system/contents/create/factory/detail/seed/editorSeedArgItem.tsx","system/contents/create/factory/detail/seed/editorSeedSendMng.tsx","system/contents/create/factory/detail/seed/editorFormgrpItem.tsx","system/contents/create/factory/detail/seed/editorFormgrpMng.tsx","system/contents/create/factory/util/logicElementUtil.tsx","system/sp/spUtil.tsx","system/contents/create/preview/inputForm/previewLogicInputForm.tsx","system/contents/create/preview/inputForm/previewSeedInputForm.tsx","system/contents/create/preview/previewLauncherFrameSp.tsx","system/contents/create/preview/buildUtil.tsx","system/contents/create/preview/previewLogicFrame.tsx","system/contents/create/preview/previewLauncherFrame.tsx","system/utils/localStorageUtil.tsx","system/sp/directLinkManager.tsx","system/sp/mobileRoot.tsx","system/contents/dialog/globalDialog.tsx","system/contents/dialog/accountFrame.tsx","system/contents/dialog/login/loginCreateAccount.tsx","system/contents/create/manage/nameDefDialog.tsx","system/contents/dialog/login/loginLogin.tsx","system/contents/dialog/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/base/components/tab/channelPane.tsx","system/sp/contents/create/etc/shareDialog.tsx","system/contents/create/manage/manageTab.tsx","system/contents/create/createChannel.tsx","system/contents/home/publishFrame.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/pCRoot.tsx","system/sp/contents/sPLibraryChannel.tsx","system/sp/contents/create/etc/libraryLoader.tsx","system/sp/contents/create/etc/newScenarioDialog.tsx","system/sp/contents/create/etc/nameDefDialogLocal.tsx","system/sp/contents/create/sPManageFrame.tsx","system/sp/contents/create/edit/fuseMainteDialog.tsx","system/sp/contents/create/edit/fuseList.tsx","system/sp/contents/create/edit/frameLine.tsx","system/sp/contents/create/edit/sPEditStoryFrame.tsx","system/sp/contents/create/sPCreateChannel.tsx","system/sp/contents/sPPropertyChannel.tsx","system/sp/contents/sPInfoChannel.tsx","system/sp/sPRoot.tsx","system/redux/dispatcher/dispatcher.tsx","system/contents/entry/systemEntry.tsx","system/utils/form/formUtiil.tsx","system/utils/dataUtil.tsx"],"names":["Styles","_Styles","FONT_SMALL","FONT_MIDIUM","FONT_LARGE","CSS_LABEL","css","_templateObject7","_taggedTemplateLiteral","CSS_LABEL_SMALL","_templateObject8","CSS_LABEL_MIDIUM","_templateObject9","CSS_LABEL_LARGE","_templateObject10","CSS_BUTTON_DISABLE","_templateObject11","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","ConfirmDialog","Component","props","_props$width","_props$height","_props$buttons","_useContext","useContext","GlobalContext","store","setStore","width","height","buttons","label","callback","system","dialog","_objectSpread","_jsxs","_Frame","children","_jsx","_Main","_Inner","message","split","map","msg","i","FormUtil","Message","isCenter","ButtonRecord","align","App","useEffect","document","oncontextmenu","onkeydown","e","ctrlKey","includes","key","SystemEntry","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","window","addEventListener","navigator","serviceWorker","register","concat","DataUtil","APP_VERSION","registration","console","log","catch","error","warn","documentElement","touches","length","preventDefault","passive","t","now","Date","getTime","ReactDOM","render","React","StrictMode","getElementById","initialStore","isSplash","user","canDialogClose","isSPMode","logoutActions","cloud","env","screenRate","scrollLock","libraryData","storyData","fuseCacheList","local","maxSeq","projects","putInterval","editing","localSeq","libName","fileHandle","TabbedPane","_props$tabRecordNum","_useState","useState","activeNo","_useState2","_slicedToArray","setActiveNo","tabRecordNum","_Fragment","_LabelList","tabElements","tab","index","TabLabel","name","isActive","isEnable","enable","selectTab","undefined","selectTabIndex","_ContList","TabContents","cont","_TabLabel","onClick","_Contents","SystemConst","AUTH_TEXT_WIDTH","_SystemConst","AUTH_TEXT_HEIGHT","CanvasUtil","_CanvasUtil","createURL","draw","canvas","createElement","ctx","getContext","toDataURL","getLogoURL","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillStyle","fillText","adjust","measureText","save","getAuthTextURL","text","WIDTH","SIZE","rotate","Math","PI","char","charAt","fontRand","random","alphaRand","Instance","_createClass","_this","_classCallCheck","owner","pos","prevPos","vec","frame","limit","isLive","drawer","extend","update","x","xy","y","forEach","this","_Particle","Particle","_DrawUtil","createGradDrawer","param","_param$radius","radiusBase","radius","self","_convertRgbaFromColor","flashAppearFrame","appearFrame","unitFrame","flashHideFrame","shrinkStartRate","start","floor","g","createRadialGradient","grads","rgba","convertRgbaFromColorCode","color","r","b","a","push","offset","convertColorCodeFromRgba","grad","addColorStop","globalAlpha","disappearStartRate","beginPath","arc","fill","code","value","Number","parseInt","substring","r1","g1","b1","a1","toString","slice","toWhite","rate","DrawUtil","Vector","rad","len","syncFromXY","sqrt","atan2","syncFromRad","cos","sin","_VectorUtil","VectorUtil","VisualParamType","_ParamUtil","VisualParams","Object","values","BehaviorParamType","BehaviorParams","SelfParamType","SelfParams","ExtendParamType","ExtendParams","EffectParamType","EffectParams","ModulateParamType","ModulateParams","ConstantType","Constants","ParamUtil","ModulateBuilder","build","extendList","decayRate","decayLimit","gravity","gravityLimit","PreviewUtil","_PreviewUtil","SCREEN_WIDTH","SCREEN_HEIGHT","searchElement","buildLogicProps","origin","rootData","initialValueMapList","initailArrayMapList","createParticleRec","cur","parentValueMapList","parentArrayMapList","_searchElement","_searchElement2","valueMapList","ConstantValueMap","arr","array","fieldMng","mngs","data","fields","field","paramItem","convertFormulaToValue","visualParams","params","behaviorParams","getVisualParam","convertParamsToValue","getBehaviorParam","LIMIT","POS_X","POS_Y","find","VEC_X","VEC_Y","VEC_RAD","VEC_LEN","connectMng","inherits","connect","_connector$disable","_searchElement3","connector","disable","logicItem","method","wrap","logicMng","defs","def","searchDependLogic","depend","_convertParamsToBoole","addValueMap","item","FRAME","itrfldValueMap","loopCnt","extendParams","loopCntVal","LOOP_COUNT","convertParamsToBoolean","INVOKE","_loop","_searchElement4","iterateValueMap","LOOP_ITERATE","iterateArrayMap","_arr$array$i","sendValueMapList","filter","isArray","_convertParamsToValue","sendArrayMapList","_convertParamsToArray","convertParamsToArray","DECAY_LIMIT","DECAY_RATE","GRAVITY_VAL","GRAVITY_LIMIT","RADIUS","colorR","COLOR_R","colorG","COLOR_G","colorB","COLOR_B","colorA","COLOR_A","disappearStart","DISAPPEAR_START","shrinkStart","SHRINK_START","FLASH_APPEAR_FRAME","FLASH_HIDE_FRAME","type","warpList","_warpList$find","formula","v","valueMap","m","formulaStr","varCnt","formulaItems","str","convertFormulaToBoolean","arrayMapList","RADIAN_ROUND","ValidateUtil","_ValidateUtil","checkRequired","checkStringLength","min","max","checkAsciiChars","checkIncludesChars","list","ch","indexOf","checkNumber","isNaN","checkNumberRange","num","checkAll","conditions","result","checkArrayNumber","TreeUtil","_TreeUtil","createNode","parent","depth","isOpen","getChildIndex","node","parentNode","Frame","_props$isDisable","_props$focusNode","isDisable","focusNode","ref","useRef","buildElementNodeFromData","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","jsxList","useMemo","buildJsxRecords","element","spaceList","isCurrent","_Record","current","scrollWidth","isRelation","tempNode","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","clickEvent","onDoubleClick","getLabelJsx","invalidate","_Wrap","ModifyOperations","_templateObject12","FactoryTreeContext","createContext","LogicMainteTab","setFocusNode","_useState3","_useState4","isModify","setModify","_useState5","_useState6","setInvalidate","LogicUtil","getChildrenDataNode","masterNode","openPreviewDialog","PreviewLogicFrame","master","closeButtonAction","tabIndex","onKeyDown","n","_TreeDiv","_TreeHead","_TreeBody","getNodeDisplayJsx","_PropsDiv","_DetailDiv","_DetailHeader","_DetailHeaderLabel","getTypeName","Provider","setRootData","removeSelf","_node$parent","_node$parent2","_node$parent3","splice","parentWrap","listName","LogicElementUtil","getListParamName","_DetailMainDiv","getDetailComponent","EditorArgumentMng","isVisible","BorderPanel","title","innerJsx","newNode","addChild","_props$isInputOK","isComplete","isCompleteCheck","checkableFields","mappingForm","isInputOK","firstRegist","modifyRegist","SendTemplateDialog","EditorArgumentItem","_useContext2","logicNode","errors","setName","argType","setArgType","reservedList","_node$parent2$parent","getParamNameList","valueType","syncArgumentAdd","prevName","syncArgumentName","FormRecord","titleLabel","jsx","TextField","isReadOnly","checkable","setCheckable","validates","checker","errorType","checkFieldName","Combobox","ArgTypes","labelText","headBlank","refers","getArgumentRefers","syncArgumentDel","getSwapButtons","argName","searchVariableReferInFormula","varItem","newName","syncFormula","mng","visualMng","behaviorMng","inhMng","inh","_LogicElementUtil$get","_LogicElementUtil$get2","inhfld","getInnerWrap","syncParamName","_logicNode$parent","runRec","logic","conn","inhLogic","getInnerWrapFixed","sendMng","seedMng","interfaceWrap","_logicNode$parent2","connWrap","syncArgumentCallback","_logicNode$parent3","inhMngNode","getInnerNodeFixed","seedNode","interfaceNode","sendNode","entry","newArgName","paramWrap","createParamWrap","delArgName","delIndex","some","EditorSeedMng","itemWrap","EditorLogicMng","EditorLogicItem","_useMemo","el","_useMemo2","isConnect","hasArgNode","hasFieldNode","hasConnectNode","existNameList","getExistNameList","toggleElement","hasNode","listPos","wrapElement","removeChild","insertChild","getDefaultLogicMngs","syncLogicName","Record","textAlign","Switch","isUse","argumentNode","getInnerNode","hasArgument","args","fieldNode","hasField","inheritNode","hasInherit","getReplicateButton","getLocgicRefers","logicName","searchLogicReferInherit","id","logicMngNode","Level","EditorParamItem","setFormulaItems","varFormList","setVarFormList","isField","isCondition","inputType","level","FIELD","INITIAL","INHERIT_FIELD","INHERIT_EXTEND","INHERIT_SEND","SEED","argumentList","arrayArgList","fieldKeys","parentType","_getLogicNode","_node$parent4","_node$parent4$parent","_node$parent4$parent$","getLogicNode","argMng","arg","fieldName","_node$parent5","Error","_node$parent6","inhfldNode","_node$parent7","fieldKeyList","paramNameList","_node$parent8","_node$parent8$parent","addNum","delNum","parenthesisBalance","formJsxList","labelWidth","marginTop","ParamInputTypes","_param$isArray","marginLeft","isNumber","getValueForm","isLastVar","isFormulaOK","hasFormError","varForm","getFormulaItem","_param$isArray2","syncFieldName","_Formula","isInvalid","_Var","_Sig","getFormulaJsx","getFieldRefers","mngNode","_mngNode$parent","_mngNode$parent2","_LogicElementUtil$get3","_LogicElementUtil$get4","inheritWrap","span","EditorBehiviorMng","isVector","hasDecayParam","hasGravityParam","exchangeVectorMethod","flag","trueParamElements","falseParamElements","size","exchangeElements","toggleElements","paramElements","EditorVisualMng","drawMethod","THICKNESS","hasDisappearParam","hasShrinkParam","hasFlashParam","EditorInheritConnMng","EditorInheritConnector","_disable","identify","setIdentify","setMethod","setDepend","defaultName","getNumberingOnPrefixName","isCreate","logicList","idList","initConnectorNode","syncTreeElementFromWrap","_newNode$parent","initSendParams","sendParamList","_sendNode$parent","dependItem","argWrap","getSendParamList","curParamList","isChange","ConnectTypes","isEnabled","dependency","dependLogic","inherit","newWrap","JSON","parse","stringify","getChildrenElementNode","rootNode","clone","_SendTemplateDialog","COMPONENT_WIDTH","ConnectParentPosition","xName","setXName","yName","setYName","_props$node$parent","checkItems","argNode","behaviorNode","setParamValue","prpName","targetParam","SetParentPosition","_useState7","_useState8","paramList","xParam","yParam","DrawableVectorChooser","_DrawableVectorChooser","EditorSendManager","isDepend","EditorFieldMng","EditorExtendMng","hasLoopParam","hasInvokeParam","EditorSeedItem","disp","setDisp","setEntry","permit","setPermit","_param$disp","logicNameList","seed","items","samples","PermitTypes","EditorThumbnailMng","LogicTreeContext","WND_SIZE","EditorThumbnailItem","_node$parent$parent","seedWrap","setFrame","urls","setUrls","setTimeout","sample","getThumbnailURL","targetFrame","sampleNo","frameCnt","_node$parent3$parent","argMap","sendParams","send","_PreviewUtil$convertP","getSeedValueMap","_LogicElementUtil$get5","_PreviewUtil$convertP2","getSeedArrayMap","par","_ret","pictureJsxList","_LogicElementUtil$get6","imgJsx","_IMG","src","_SampleDiv","_SampleName","_CanvasDiv","img","FRAME_WIDTH","ComponentNormal","isDraw","setDraw","pointJsxList","xList","yList","_Point","putAction","clientRect","getBoundingClientRect","posX","posY","addPoint","moveAction","subX","subY","releaseAction","FixedText","isRecordItem","onMouseDown","clientX","clientY","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","pageX","pageY","onTouchMove","onTouchEnd","onTouchCancel","_Center","clear","ComponentColorable","colorHistory","setColorHistory","setR","_useState9","_useState10","setG","_useState11","_useState12","setB","rList","gList","bList","colorCode","_PointColorable","colorHistoryJsxList","history","_ColorItem","shift","addColorHistory","_Color","onChange","target","LogicFormUtil","input","buildPreviewForms","formgrpList","formList","setFormList","usedGrps","form","argument","formgrp","grp","targetForms","j","_Message","_Type","_Range","formIndex","disabled","xValue","yValue","join","rValue","gValue","bValue","labelName","step","_Tsumami","EditorSampleItem","paramForms","setParamForms","argInfoList","formgrpMng","defines","seedargList","defval","EditorSampleMng","EditorInterfaceManager","argMngNode","sendMngNode","sampleMngNode","hasGroupNode","execute","removeChildAll","newArgWrap","groupMngNode","hasGroup","EditorSeedArgMng","EditorSeedArgItem","setMin","setMax","setStep","setDefval","_useState13","_useState14","isPosX","setPosX","_useState15","_useState16","setArray","_param$isPosX","curIndex","getCurrentIndex","getSwapButtonsCallback","isUpper","sampleMng","swapNode","sendMngWrap","_arg$defval","EditorSeedSendMng","EditorFormgrpItem","groupMethod","setGroupMethod","targetList","setTargetList","seedargs","Array","FromGrpMedhods","formName","EditorFormgrpMng","_LogicUtil","COLOR_METHOD","COLOR_MNG","COLOR_LIST","COLOR_ITEM","COLOR_FIELD","isFocus","_Category","backgroundColor","detailJsx","_Span","_Field","_EditableValue","_data2$disable","_Signature","_Detail","nameJsx","_ValueType","FactDetSeedMng","FactDetArgumentMng","FactDetBehiviorMng","wrapNode","get","elementNode","_LogicElementUtil","_len","arguments","typeList","_key","_len2","_key2","innerNode","apply","_len3","_key3","_len4","_key4","innerWrap","isHead","isTail","ownerChildren","findIndex","swapOrder","ownDataChildren","curNo","swapData","_len5","dependencyMngNodes","_key5","depNode","replicateSameLevel","cloneBase","cloneDest","namable","getNamableProps","targetElement","getIdentifyParamName","childWrap","createParamWrapList","paramDataList","createVisualParams","createBehaviorParams","findSeedWrap","getInitialData","nameList","curWrap","nameParam","mngWrap","listParam","getLogicNameList","curLogicOwner","prefix","_getLogicItem","mngType","_node$parent5$parent","_node$parent5$parent$","_node$parent5$parent$2","getLogicItem","seedId","doParticleJob","fuse","_logicMng$defs$find","getOrigin","seedargMng","seedarg","getSendingValueMap","getSendingArrayMap","getSeedProperties","seedsendList","thumbnailList","_logicMng$defs$find2","SPUtil","_SPUtil","PreviewLogicInputForm","logicWrap","setSendingValueMap","setSendingArrayMap","PreviewSeedInputForm","template","setTemplate","formgrpWrap","presetList","arrayMap","ButtonItem","button","selectedIndex","PreviewLauncherFrameSp","setCur","isPlay","setPlay","sceens","previewTabJsx","_ProgressDiv","clickX","left","pageXOffset","_ProgressVal","isIconButton","interval","icon","AiFillStepBackward","AiFillStepForward","IoStopOutline","VscDebugStart","RxReset","_CloseButton","closeAction","BuildUtil","_BuildUtil","run","_props$guaranteeFrame","minFrame","guaranteeFrame","doIterate","particle","limitFrame","limitParticle","doEnd","runPaging","beginFrame","advanceFrame","_props$guaranteeFrame2","BuildFrame","dispatcher","storyPreviewProps","setStoryPreviewProps","useFrame","curFrame","buildCache","setBuildCache","logicData","fuseList","updateStore","isStandby","_Blind","_ProgressBox","_RateVal","getJsx","setSceens","setFrameCnt","setTabIndex","isBuild","setBuild","sendingValueMap","_useState17","_useState18","sendingArrayMap","isSeed","buildTabJsx","_Msg","_FormDiv","PreviewLauncherFrame","LocalStorageUtil","DirectLinkManager","libData","setLibData","setStoryData","seedSeq","setSeedSeq","findProject","projectSeq","resList","res","ownerId","lastmod","unZip","source","hasOwnProperty","scenarioProps","scenarioData","seedList","argCount","_Header","_seed$disp","seedName","_Item","_SeedName","_ArgCnt","getBlindJsx","VscSettingsGear","_asyncToGenerator","_regeneratorRuntime","mark","_callee","conteseq","response","results","_context","prev","next","sendQueryRequestToAPI","sent","json","abrupt","stop","_x","MobileRoot","isPermit","adjLeft","adjTop","screen","setScreen","getDecryptionedProjectSeq","hashKey","rect","clientWidth","clientHeight","isFitSide","userAgent","isSmartPhone","orientation","alert","_Error","top","match","GloballDialog","AccountFrame","userId","setUserId","oldPass","setOldPass","newPass","setNewPass","newPassConfirm","setNewPassConfirm","email","setEmail","userIdList","setUserIdList","emailList","setEmailList","loginProps","reloadInfo","password","findUserInfoList","info","hash","getHashedFromUserSeq","seq","replaceState","userTabJsx","InputTextFormBak","isPassword","permitRegist","_Body","_Footer","passwordStr","updateUserInfo","LoginCreateAccount","isRegist","setRegist","setPassword","passwordConfirm","setPasswordConfirm","messageList","setMessageList","createAuthText","findUserIdList","authCollation","setAuthCollation","authInput","setAuthInput","authPicture","placeholder","InfoFrame","textRecords","_AuthText","nextSeq","cnt","getNextUserSeq","MessageLink","clickAction","_LocalStorageUtil","DEFAULT_FILE_NAME_PREFIX","KEY_LOGIN_HASH","KEY_SCENARIO_SEQ","KEY_SCENARIO_PREFIX","KEY_PROP_PUT_INTERVAL","load","userHash","localStorage","getItem","userSeq","getDecryptionedUserSeq","resPrjList","findUserInfoSeq","findUserLibdvList","removeItem","scenarioSeq","setItem","NameDefDialog","LoginLogin","isForget","setForget","findUserInfoLogin","findUserInfoFromEmail","url","sendQueryRequestToMailAPI","from","to","subject","LoginFrame","setCreate","logo","_LogoDiv","_TypeSwitch","TotalHeader","authButtonJsx","_LoginButton","location","ImUser","_UserName","isEntry","func","_Logo","reload","_Menu","_MenuItem","TOTAL_HEADER_WIDTH","ChannelPane","_props$isLandscape","isLandscape","ChannelLabel","ChannelContents","_Icon","_Label","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_store$cloud","targetSeq","p","existNames","findProjectMaxSeq","_store$system$user","newProject","insertProject","targetItem","updateProjectName","registUpdate","marginBottom","ShareDialog","_ref2","_callee2","req","_context2","_x2","_ref3","_callee3","_context3","_x3","_x4","ManageTab","fcsListIdx","setFcsListIdx","listItemJsx","project","_ListItem","getHashedFromProjectSeq","_Name","hasData","incrRec","root","developCnt","privateCnt","releaseCnt","fuseCnt","elementSize","logicCnt","uploadCloud","gZip","overwriteCloudFile","curPrj","updateProjectSource","saveLocalFile","saveLibraryFile","cloudJsx","_ContDiv","deleteProject","_ListDiv","localJsx","loadFile","_HeaderDiv","_BodyDiv","_LeftDiv","_RighttDiv","assert","getNewSaveButton","getOverwriteButton","getSHA256Hash","CreateChannel","projectType","getProjectType","SCORE_TAB_MARGIN","PublishFrame","libList","setLibList","findAllReleaseProjectList","setLibCnt","libListJsx","lib","dispCnt","count","_Owner","_CName","plainData","showSaveFilePicker","types","accept","handle","writable","createWritable","write","close","_CDate","_DetailMain","_SeedItemFrame","_SeedItemInner","_SeedArgCnt","_DetailOpen","_CSummary","_ListFrame","ReleaseNote","setJsx","releaseNote","record","note","version","date","HOME_USER_DIV_HEIGHT","HomeChannel","userCount","setUserCount","artsCnt","setArtsCnt","countUsers","_Left","_MessageRecord","_Right","MainFrame","AiFillHome","VscGitPullRequestCreate","MAIN_FRAME_MARGIN","Splash","isSwitch","setSwitch","timerId","setTimerId","remove","clearTimeout","_Title","_VERSION","_NowLoading","_Copylight","fadeIn","keyframes","PCRoot","splashJsx","_MainDiv","SPLibraryChannel","getURL","APP_SERVER_DOMAIN","cloudSeq","_UrlDiv","isShared","readOnly","InstapaperShareButton","_SnsIconFrame","AiOutlineInstagram","TwitterShareButton","AiOutlineTwitter","MailruShareButton","AiOutlineMail","FacebookShareButton","AiOutlineFacebook","LineShareButton","BsLine","SwitchTwoFace","label1","label2","rate1","rate2","fileKey","LibraryLoader","_LibraryLoader","textarea","getOfficialList","libraries","outline","getExtendList","NewScenarioDialog","focusLibIndex","setFocusLibIndex","isExtend","setExtend","officialPackList","extendPackList","libPackJsxList","pack","_LibItem","_CheckDiv","AiOutlineCheck","_LibInfo","_LibName","_LibVersion","_LibOutline","MdCancelPresentation","AiOutlineEnter","getStringFromDate","extendAction","isEditable","NameDefDialogLocal","focusIndex","checkName","getDefaultName","curProject","SPManageFrame","setUpdate","projectItemJsxList","onContextMenu","_Share","isShare","BsFillShareFill","thumbJsxList","thumbJsx","cache","thumbList","thumb","_Img","thumn","isEdit","MdClear","IoCreateOutline","setEdit","FiDownload","story","updateCache","ImCopy","MdOutlineDriveFileRenameOutline","RiDeleteBinLine","FuseMainteDialog","newFrame","setNewFrame","setSeed","preset","setPreset","focus","curFuse","mapping","propertiesFormJsx","activeSeed","formgrps","presets","cancelAction","reduce","fuseSeq","initFormList","COL_WIDTH_LIST","OPTION_BUTTON_WIDTH","FuseList","recordJsxList","_curSeed$disp","curSeed","_RecordWrap","_RecordCont","setFocus","_ColWrap","_TextItem","_ImageItem","_Option","FiEdit","modifyAction","cloneFuse","focusSeq","cloneCache","GrView","openPreviewSoloDialog","_HeaderItem","_BodyScrollDiv","_templateObject17","FrameLine","startY","setStartY","startX","setStartX","frameRateJsxList","posXIndex","range","_FrameRate","isCurr","prevFocusSeq","sort","nowFocusSeq","_FrameLineDiv","SPEditStoryFrame","isPreview","setPreview","presetIndex","setPresetIndex","setInterval","seedWrapList","groupMng","dispName","VscPreview","IoSaveOutline","editingDataVal","editingData","_SeedDiv","AiOutlineAppstoreAdd","newFuseProps","newSeq","_FuseListFrame","SPCreateChannel","_SwitchWrap","isLarge","SPPropertyChannel","MdOutlineCleaningServices","seqMax","SPInforChannel","SPRoot","_SplashDiv","cw","_ChannelWrap","BiInfoSquare","TbLogicAnd","VscSymbolProperty","Dispatcher","openPreviewAllDialog","seedProps","RouterManage","HashRouter","basename","process","URLSearchParams","useLocation","search","Route","path","exact","_FormUtil","checkables","_props$isPassword","_props$validates","_props$dependency","_props$isEnable","_props$isCenter","_props$marginTop","_props$marginBottom","_props$isCenter2","validaters","dep","getErrors","validater","_ItemnLabel","_ItemnInputBak","hasTitle","_props$isEnable2","_props$textAlign","_props$marginTop2","_props$marginBottom2","_props$labelWidth","_props$isEnabled","_props$isVisible","_props$textAlign2","_props$marginTop3","_props$marginBottom3","lablelWidth","DEFAULT_LABEL_WIDTH","_FixedLabel","_props$isPassword2","_props$isNumber","_props$isEnabled2","_props$validates2","_props$dependency2","_props$step","setNaN","_ItemnInput","valueAsNumber","onBlur","_props$validates3","_props$dependency3","_props$headBlank","_props$isEnabled3","_props$width2","unshift","_ItemCombobox","_item$isDisabled","_item$isDisabled2","isDisabled","TextArea","_props$validates4","_props$dependency4","_ItemnTextArea","_props$align","_props$interval","_props$marginTop4","_props$marginBottom4","_button$isEnable","_button$isEnable2","_Button","_IconButton","_button$interval","_button$isEnable3","_button$isEnable4","_props$isCenter3","_props$marginTop5","_props$marginBottom5","_props$isCenter4","_props$isCenter5","_props$marginTop6","_props$marginBottom6","_props$isCenter6","isLink","_props$isVisible2","_props$isEnable3","_props$backgroundColo","_BorderText","_BorderPanel","_props$height2","_InfoDiv","_props$isRelation","_props$isEnable4","_Switch","_props$isEnable5","_props$isEditable","_props$isLarge","_props$isLarge2","_props$isLarge3","_SwitchTwoFace","_SwitchItem","isLeft","_props$marginLeft","select","_props$marginLeft2","option","_templateObject18","_templateObject19","_templateObject21","_templateObject20","_templateObject22","_templateObject23","_templateObject24","_templateObject25","_templateObject26","_templateObject28","_templateObject27","_templateObject29","_templateObject30","_templateObject31","_templateObject33","_templateObject32","_templateObject34","_templateObject35","_templateObject36","_templateObject38","_templateObject37","_templateObject40","_templateObject39","_templateObject41","_templateObject43","_templateObject42","_templateObject44","_templateObject45","_templateObject46","_templateObject47","_templateObject49","_templateObject48","_templateObject50","_templateObject51","_templateObject53","_templateObject52","_templateObject55","_templateObject54","_templateObject56","_templateObject57","_templateObject59","_templateObject58","_templateObject60","_templateObject61","_templateObject62","_templateObject63","_templateObject64","_templateObject65","_DataUtil","DB_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","encode","Base64","hashedSeq","hashids","decryptioned","decode","getPreviewURL","scoreSeq","hashedKey","fetch","mode","headers","Accept","body","createSendMailRequestInit","queryType","sql","databaseName","createQueryRequestInit","saveFile","findUserInfoFromSeq","_ref4","_callee4","_context4","_ref5","_callee5","_context5","_ref6","_callee6","_context6","_x5","_callee7","_context7","findUserScoreList","_ref8","_callee8","_context8","_x6","_ref9","_callee9","_context9","_x7","_callee10","_yield$window$showOpe","_yield$window$showOpe2","file","fileContents","_context10","showOpenFilePicker","getFile","saveFileBak","_callee11","_context11","_callee12","_context12","saveScenarioFile","extension","options","_callee13","_context13","_callee14","_context14","original","sha256","val","content","encodeURIComponent","zlib","gzipSync","buffer","Buffer","unzipSync","decodeURIComponent","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace"],"mappings":"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","file":"static/js/main.1ac184a1.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 38;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 18px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_LABEL_LARGE = css`\r\n    ${CSS_LABEL}\r\n    height: 50px;\r\n    font-size: ${FONT_LARGE}px;\r\n    line-height: 44px;\r\n`;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 22px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport { useContext } from \"react\";\r\n\r\nnamespace ConfirmDialog {\r\n\r\n    export const Component = (props: {\r\n        message: string;\r\n        width?: number;\r\n        height?: number;\r\n        buttons?: FormUtil.ButtonProps[];\r\n    }) => {\r\n\r\n        const {store,  setStore } = useContext(GlobalContext);\r\n\r\n        const width = props.width ?? 600;\r\n        const height = props.height ?? 150;\r\n        const buttons = props.buttons ?? [\r\n            {\r\n                label: 'OK',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({...store});\r\n                }\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main><_Inner>\r\n                    {props.message.split('\\n').map((msg, i) => {\r\n                        return <FormUtil.Message\r\n                            key={i}\r\n                            message={msg}\r\n                            isCenter\r\n                        />\r\n                    })}\r\n                </_Inner></_Main>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons} />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 110px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* background-color: #bb6868e1; */\r\n`;","import React, { useEffect } from 'react';\r\nimport SystemEntry from './system/contents/entry/systemEntry';\r\n\r\nconst App = () => {\r\n\r\n  useEffect(() => {\r\n    // 右クリック無効\r\n    document.oncontextmenu = function () { return false; }\r\n\r\n    // window.addEventListener(\"keydown\", function (e) {\r\n    //   // space and arrow keys\r\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n    //     e.preventDefault();\r\n    //   }\r\n    // }, false);\r\n\r\n    document.onkeydown = (e) => {\r\n      // if (!['F5'].includes(e.key)) {\r\n      //   return false;\r\n      // }\r\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n  }, []);\r\n  return (\r\n    <SystemEntry />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport DataUtil from './system/utils/dataUtil';\r\n\r\nwindow.addEventListener('load', function () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.register(`/pf_apps/${DataUtil.APP_VERSION}/serviceWorker.js`)\r\n      .then(function (registration) {\r\n        console.log(\"serviceWorker registed.\");\r\n      }).catch(function (error) {\r\n        console.warn(\"serviceWorker error.\", error);\r\n      });\r\n  }\r\n});\r\n\r\n/* ピッチインピッチアウトによる拡大縮小を禁止 */\r\ndocument.documentElement.addEventListener('touchstart', function (e) {\r\n  if (e.touches.length >= 2) { e.preventDefault(); }\r\n}, { passive: false });\r\n/* ダブルタップによる拡大を禁止 */\r\nvar t = 0;\r\ndocument.documentElement.addEventListener('touchend', function (e) {\r\n  var now = new Date().getTime();\r\n  if ((now - t) < 350) {\r\n    e.preventDefault();\r\n  }\r\n  t = now;\r\n}, false);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport StoreCloud from \"./storeCloud\";\r\nimport StoreEditing from \"./storeEditing\";\r\nimport StoreLocalStorage from \"./storeLocalStrage\";\r\nimport StoreSystem from \"./storeSystem\";\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    system: StoreSystem.Param;\r\n    env: StoreSystem.Env;\r\n    libraryData: LogicUtil.WrapElement | null;\r\n    storyData: StoryUtil.StoryData | null;\r\n    fuseCacheList: StoryUtil.Cache[];\r\n    local: StoreLocalStorage.Param;\r\n    editing: StoreEditing.Props;\r\n    cloud: StoreCloud.Props | null;\r\n    fileHandle: FileSystemFileHandle | null;\r\n}\r\n\r\nexport const ProjectTypes = ['library', 'story'] as const;\r\nexport type ProjectType = typeof ProjectTypes[number];\r\n\r\nexport const initialStore: Store = {\r\n    system: {\r\n        isSplash: true,\r\n        user: null,\r\n        dialog: null,\r\n        canDialogClose: false,\r\n        isSPMode: false,\r\n        logoutActions: []\r\n    },\r\n    cloud: null,\r\n    env: {\r\n        screenRate: 1,\r\n        scrollLock: false,\r\n    },\r\n    libraryData: null,\r\n    storyData: null,\r\n    fuseCacheList: [],\r\n    local: {\r\n        maxSeq: 0,\r\n        projects: [],\r\n        putInterval: 0\r\n    },\r\n    editing: {\r\n        localSeq: -1,\r\n        libName: ''\r\n    },\r\n    fileHandle: null,\r\n}","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: (index: number)=>void;\r\n    tabRecordNum?: number;\r\n}\r\n\r\nexport type TabElements = {\r\n    name: string;\r\n    enable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabRecordNum = props.tabRecordNum ?? 1;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList tabRecordNum={tabRecordNum}>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isEnable={tab.enable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList tabRecordNum={tabRecordNum}>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={!tab.enable ? <></> : tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isEnable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: inline-block;\r\n    height: ${props => 35 * props.tabRecordNum}px;\r\n    text-align: left;\r\n    /* background-color: #ac3b3b; */\r\n    width: 100%;\r\n`;\r\nconst _ContList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\r\n    border-radius: 0 6px 6px 6px;\r\n    /* box-shadow: 0 2px 0 0 #000b3a48; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    \r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                margin-top: 5px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${props.isEnable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","\r\nnamespace SystemConst {\r\n    export const AUTH_TEXT_WIDTH = 350;\r\n    export const AUTH_TEXT_HEIGHT = 70;\r\n}\r\n\r\nexport default SystemConst;\r\n\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n\r\n// ホームチャンネル\r\nexport const HOME_USER_DIV_HEIGHT = 400;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import SystemConst from \"./systemConst\";\r\n\r\nnamespace CanvasUtil {\r\n\r\n    /**\r\n     * Canvasに任意の描画をし、画像のURLを取得する\r\n     * @param width 幅\r\n     * @param height 高さ\r\n     * @param draw 描画\r\n     * @returns 画像のURL\r\n     */\r\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        draw(ctx);\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    export const getLogoURL = () => {\r\n        return CanvasUtil.createURL(360, 80, (ctx) => {\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.fillRect(0, 0, 350, 80);\r\n\r\n            ctx.shadowColor = \"#555\";\r\n            ctx.shadowOffsetX = 2;\r\n            ctx.shadowOffsetY = 1;\r\n            ctx.shadowBlur = 5;\r\n            ctx.font = 'italic 50pt Arial';\r\n            ctx.fillStyle = '#c6dce2';\r\n            ctx.fillText('Pixel ', 14, 64);\r\n            const adjust = ctx.measureText('Pixel ').width;\r\n            ctx.fillStyle = '#768fc4';\r\n            ctx.fillText('Flare', 14 + adjust, 64);\r\n            ctx.save();\r\n        });\r\n    }\r\n\r\n    export const getAuthTextURL = (text: string) => {\r\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\r\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\r\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\r\n            ctx.rotate(1 * Math.PI / 180);\r\n            for (let i = 0; i < text.length; i++) {\r\n                const char = text.charAt(i);\r\n\r\n                const fontRand = Math.random() * 60;\r\n                const alphaRand = Math.random() * 60;\r\n                ctx.font = `${20 + fontRand}pt Arial`;\r\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\r\n                ctx.fillText(char, i * SIZE, 60);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CanvasUtil;","import VectorUtil from \"./vectorUtil\";\r\n\r\nnamespace Particle {\r\n\r\n    export type Props = {\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        limit: number;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n    }\r\n\r\n    export class Instance {\r\n\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        prevPos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        frame: number;\r\n        limit: number;\r\n        isLive: boolean;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n\r\n        constructor(props: Props) {\r\n            this.owner = props.owner;\r\n            this.pos = props.pos;\r\n            this.prevPos = props.pos;\r\n            this.vec = props.vec;\r\n\r\n            this.frame = 0;\r\n            this.limit = props.limit;\r\n            this.isLive = true;\r\n            this.drawer = props.drawer;\r\n            this.extend = props.extend;\r\n        }\r\n\r\n        update = () => {\r\n\r\n            this.pos.x += this.vec.xy.x;\r\n            this.pos.y += this.vec.xy.y;\r\n\r\n            this.extend.forEach(callback => callback(this));\r\n\r\n            if (this.frame === this.limit) {\r\n                this.isLive = false;\r\n            }\r\n            this.frame++;\r\n        }\r\n\r\n        draw = (ctx: CanvasRenderingContext2D) => {\r\n            this.drawer(this, ctx);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Particle;","import Particle from \"./particle\";\r\n\r\nnamespace DrawUtil {\r\n\r\n    export type Rgba = {\r\n        r: number;\r\n        g: number;\r\n        b: number;\r\n        a: number;\r\n    }\r\n\r\n    export type ColorStop = {\r\n        offset: number;\r\n        color: string;\r\n    }\r\n\r\n    export type DrawerParam = {\r\n        color: string;\r\n        radius?: number;\r\n        disappearStartRate?: number;\r\n        shrinkStartRate?: number;\r\n        flashAppearFrame?: number;\r\n        flashHideFrame?: number;\r\n    }\r\n\r\n    export const createGradDrawer = (param: DrawerParam) => {\r\n\r\n        /** 基準となる半径 */\r\n        const radiusBase = param.radius ?? 30;\r\n        return (self: Particle.Instance, ctx: CanvasRenderingContext2D) => {\r\n            if (param.flashAppearFrame != undefined) {\r\n                const appearFrame = param.flashAppearFrame;\r\n                const hideFrame = (param.flashHideFrame as number);\r\n                const unitFrame = appearFrame + hideFrame;\r\n                if ((self.frame % unitFrame) >= appearFrame) return;\r\n            }\r\n\r\n            let radius = radiusBase;\r\n            if (param.shrinkStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.shrinkStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    const rate = (limit - frame) / limit;\r\n                    radius *= rate;\r\n                }\r\n            }\r\n\r\n            const x = self.pos.x;\r\n            const y = self.pos.y;\r\n            const g = ctx.createRadialGradient(x, y, 1, x, y, radius);\r\n\r\n            const grads: ColorStop[] = [];\r\n            const rgba = convertRgbaFromColorCode(param.color) ?? { r: 255, g: 255, b: 255, a: 255 };\r\n            grads.push({ offset: 0, color: convertColorCodeFromRgba({ r: 255, g: 255, b: 255, a: Math.floor(rgba.a * 0.9) }) });\r\n            grads.push({ offset: 0.2, color: convertColorCodeFromRgba({ ...rgba, a: Math.floor(rgba.a * 0.15) }) });\r\n            grads.push({ offset: 1, color: convertColorCodeFromRgba({ ...rgba, a: 1 }) });\r\n\r\n            grads.forEach(grad => {\r\n                g.addColorStop(grad.offset, grad.color);\r\n            });\r\n\r\n            ctx.globalAlpha = 1;\r\n            if (param.disappearStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.disappearStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    ctx.globalAlpha = (limit - frame) / limit;\r\n                }\r\n            }\r\n\r\n            ctx.fillStyle = g;\r\n            // ctx.fillStyle = param.color;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n        };\r\n    }\r\n\r\n    export const convertRgbaFromColorCode = (code: string): Rgba | null => {\r\n        const div = code.split('#');\r\n        if (div.length !== 2 || div[1].length < 6) return null;\r\n\r\n        const value = div[1];\r\n        const r = Number.parseInt(value.substring(0, 2), 16);\r\n        const g = Number.parseInt(value.substring(2, 4), 16);\r\n        const b = Number.parseInt(value.substring(4, 6), 16);\r\n        let a = 1;\r\n        if (value.length === 8) {\r\n            a = Number.parseInt(value.substring(6, 8), 16);\r\n        }\r\n        return { r, g, b, a };\r\n    }\r\n\r\n    export const convertColorCodeFromRgba = (rgba: Rgba): string => {\r\n        const r1 = (Math.floor(rgba.r));\r\n        const g1 = (Math.floor(rgba.g));\r\n        const b1 = (Math.floor(rgba.b));\r\n        const a1 = (Math.floor(rgba.a));\r\n        const r = ('00' + r1.toString(16)).slice(-2);\r\n        const g = ('00' + g1.toString(16)).slice(-2);\r\n        const b = ('00' + b1.toString(16)).slice(-2);\r\n        const a = ('00' + a1.toString(16)).slice(-2);\r\n        return `#${r}${g}${b}${a}`;\r\n    }\r\n\r\n    export const toWhite = (color: string, rate: number): string => {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport default DrawUtil;","namespace VectorUtil {\r\n\r\n    export type XY = {\r\n        x: number, y: number;\r\n    }\r\n\r\n    export class Vector {\r\n\r\n        xy: XY;\r\n        rad: number;\r\n        len: number;\r\n\r\n        constructor(xy: XY) {\r\n            this.xy = xy;\r\n            this.rad = 0;\r\n            this.len = 0;\r\n            this.syncFromXY();\r\n        }\r\n\r\n        syncFromXY = () => {\r\n            this.len = Math.sqrt(this.xy.x * this.xy.x + this.xy.y * this.xy.y);\r\n            this.rad = Math.atan2(this.xy.y, this.xy.x);\r\n        }\r\n\r\n        syncFromRad = () => {\r\n            this.xy.x = Math.cos(this.rad) * this.len;\r\n            this.xy.y = Math.sin(this.rad) * this.len;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default VectorUtil;","\r\nnamespace ParamUtil {\r\n    export enum VisualParamType {\r\n        RADIUS = 'radius',\r\n        COLOR_R = 'color_r',\r\n        COLOR_G = 'color_g',\r\n        COLOR_B = 'color_b',\r\n        COLOR_A = 'color_a',\r\n        THICKNESS = 'thickness',\r\n    }\r\n    export const VisualParams = Object.values(VisualParamType);\r\n    export type VisualParam = typeof VisualParams[number];\r\n\r\n    export enum BehaviorParamType {\r\n        LIMIT = 'limit',\r\n        POS_X = 'pos_x',\r\n        POS_Y = 'pos_y',\r\n        VEC_X = 'vec_x',\r\n        VEC_Y = 'vec_y',\r\n        VEC_RAD = 'vec_radian',\r\n        VEC_LEN = 'vec_length',\r\n    }\r\n    export const BehaviorParams = Object.values(BehaviorParamType);\r\n    export type BehaviorParam = typeof BehaviorParams[number];\r\n\r\n    export enum SelfParamType {\r\n        FRAME = 'self_frame',\r\n        LIMIT = 'self_limit',\r\n        POS_X = 'self_pos_x',\r\n        POS_Y = 'self_pos_y',\r\n        VEC_X = 'self_vec_x',\r\n        VEC_Y = 'self_vec_y',\r\n        VEC_RAD = 'self_vec_radian',\r\n        VEC_LEN = 'self_vec_length',\r\n    }\r\n    export const SelfParams = Object.values(SelfParamType);\r\n    export type SelfParam = typeof SelfParams[number];\r\n\r\n    export enum ExtendParamType {\r\n        LOOP_COUNT = 'loop_count',\r\n        LOOP_ITERATE = 'loop_iterate',\r\n        INVOKE = 'invoke',\r\n    }\r\n    export const ExtendParams = Object.values(ExtendParamType);\r\n    export type ExtendParam = typeof ExtendParams[number];\r\n\r\n    export enum EffectParamType {\r\n        DISAPPEAR_START = 'disappear_start',\r\n        SHRINK_START = 'shrink_start',\r\n        FLASH_APPEAR_FRAME = 'flash_appear_frame',\r\n        FLASH_HIDE_FRAME = 'flash_hide_frame',\r\n    }\r\n    export const EffectParams = Object.values(EffectParamType);\r\n    export type EffectParam = typeof EffectParams[number];\r\n\r\n    export enum ModulateParamType {\r\n        DECAY_RATE = 'decay_rate',\r\n        DECAY_LIMIT = 'decay_limit',\r\n        GRAVITY_VAL = 'gravity_val',\r\n        GRAVITY_LIMIT = 'gravity_limit',\r\n    }\r\n    export const ModulateParams = Object.values(ModulateParamType);\r\n    export type ModulateParam = typeof ModulateParams[number];\r\n\r\n    export enum ConstantType {\r\n        SCREEN_WIDTH = 'screen_width',\r\n        SCREEN_HEIGHT = 'screen_height',\r\n        PI = 'pi',\r\n        RADIAN_ROUND = 'radian_round',\r\n    }\r\n    export const Constants = Object.values(ConstantType);\r\n    export type Constant = typeof Constants[number];\r\n\r\n}\r\n\r\nexport default ParamUtil;","import Particle from \"../../graphic/particle\";\r\n\r\nnamespace ModulateBuilder {\r\n\r\n    type ModulateParam = {\r\n        decayRate?: number;\r\n        decayLimit?: number;\r\n        gravity?: number;\r\n        gravityLimit?: number;\r\n    }\r\n\r\n    export const build = (extendList: ((self: Particle.Instance) => void)[], param: ModulateParam) => {\r\n        \r\n        // 減衰メソッド\r\n        if (param.decayRate != undefined && param.decayLimit != undefined) {\r\n            const decayLimit = param.decayLimit;\r\n            const decayRate = param.decayRate;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.len > decayLimit) {\r\n                    self.vec.len = self.vec.len * decayRate;\r\n                    self.vec.syncFromRad();\r\n                }\r\n            });\r\n        }\r\n        // 重力メソッド\r\n        if (param.gravity != undefined && param.gravityLimit != undefined) {\r\n            const gravityLimit = param.gravityLimit;\r\n            const gravity = param.gravity;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.xy.y < gravityLimit) {\r\n                    self.vec.xy.y += gravity;\r\n                    self.vec.syncFromXY();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModulateBuilder;","import DrawUtil from \"../../graphic/drawUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport ParamUtil from \"../factory/util/paramUtil\";\r\nimport ModulateBuilder from \"./modulateBuilder\";\r\n\r\nnamespace PreviewUtil {\r\n\r\n    export const SCREEN_WIDTH = 550;\r\n    export const SCREEN_HEIGHT = 550;\r\n\r\n    export type ValueMap = {\r\n        name: string;\r\n        value: number;\r\n    }\r\n\r\n    export type ArrayMap = {\r\n        name: string;\r\n        array: number[];\r\n    }\r\n\r\n    export const buildLogicProps = (\r\n        owner: Particle.Instance[],\r\n        origin: LogicUtil.NodeLogicItem,\r\n        rootData: LogicUtil.WrapElement,\r\n        initialValueMapList: ValueMap[],\r\n        initailArrayMapList: ArrayMap[]\r\n    ): Particle.Props => {\r\nconsole.log(initailArrayMapList);\r\n        /**\r\n         * ディペンドするロジック要素を識別名から探して返す。\r\n         * @param name ロジックの識別名\r\n         * @returns ロジック要素\r\n         */\r\n        const searchDependLogic = (name: string): LogicUtil.NodeLogicItem | null => {\r\n            const mng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n            const wrap = mng.defs.find(def => (def.data as LogicUtil.NodeLogicItem).name === name);\r\n            if (wrap == undefined) return null;\r\n            return wrap.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        /**\r\n         * 再帰的にパーティクルを生成する。\r\n         * @param cur ルートとなるロジック要素\r\n         * @param parentValueMapList 親要素から送られてきたValueMap\r\n         * @param parentArrayMapList 親要素から送られてきたArrayMap\r\n         * @returns パーティクルのプロパティ\r\n         */\r\n        const createParticleRec = (cur: LogicUtil.NodeLogicItem, parentValueMapList: ValueMap[], parentArrayMapList: ArrayMap[]): Particle.Props => {\r\n            const valueMapList: ValueMap[] = parentValueMapList.concat(ConstantValueMap);\r\n\r\n            // 配列Mapのプロパティ変数を生成\r\n            parentArrayMapList.forEach(arr => {\r\n                valueMapList.push({ name: arr.name + '.len', value: arr.array.length });\r\n            });\r\n\r\n            // フィールドのパラメータを取得\r\n            const fieldMng = searchElement('field-mng', cur.mngs);\r\n            if (fieldMng != null) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                    valueMapList.push({ name: paramItem.name, value });\r\n                });\r\n            }\r\n\r\n            const visualParams = (searchElement('visual-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n            const behaviorParams = (searchElement('behavior-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n\r\n            const getVisualParam = (name: string) => {\r\n                return convertParamsToValue(name, visualParams, valueMapList);\r\n            }\r\n            const getBehaviorParam = (name: string) => {\r\n                return convertParamsToValue(name, behaviorParams, valueMapList);\r\n            }\r\n\r\n            // Behaviorのパラメータを取得\r\n            const limit = Math.floor(getBehaviorParam(ParamUtil.BehaviorParamType.LIMIT) as number);\r\n            const pos = {\r\n                x: getBehaviorParam(ParamUtil.BehaviorParamType.POS_X) as number,\r\n                y: getBehaviorParam(ParamUtil.BehaviorParamType.POS_Y) as number\r\n            };\r\n            const vec = new VectorUtil.Vector({ x: 0, y: 0 });\r\n            const isVectorMethod = behaviorParams.find(param => param.name === ParamUtil.BehaviorParamType.VEC_X) != undefined;\r\n            if (isVectorMethod) {\r\n                vec.xy.x = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_X) as number;\r\n                vec.xy.y = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_Y) as number;\r\n                vec.syncFromXY();\r\n            } else {\r\n                vec.rad = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_RAD) as number;\r\n                vec.len = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_LEN) as number;\r\n                vec.syncFromRad();\r\n            }\r\n\r\n            /**\r\n             * 追加動作（子要素、エフェクト、モデュレート）\r\n             */\r\n            const extendList: ((self: Particle.Instance) => void)[] = [];\r\n\r\n            // 子要素を生成する\r\n            const connectMng = searchElement('inherit-mng', cur.mngs);\r\n            if (connectMng != null) {\r\n\r\n                // パーティクル情報のフィールド追加\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_X, value: pos.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_Y, value: pos.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_RAD, value: vec.rad });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_LEN, value: vec.len });\r\n\r\n                const connects = (connectMng.data as LogicUtil.NodeConnectManager).inherits;\r\n\r\n                connects.forEach(connect => {\r\n                    const connector = connect.data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.disable ?? false) return;\r\n\r\n                    const logicItem = connector.method === 'create' ?\r\n                        searchElement('inherit-logic', connector.mngs)?.data as LogicUtil.NodeLogicItem :\r\n                        searchDependLogic(connector.depend);\r\n\r\n                    if (logicItem != null) {\r\n\r\n                        extendList.push((self: Particle.Instance) => {\r\n\r\n                            const addValueMap = (item: ValueMap) => {\r\n                                const map = valueMapList.find(map => map.name === item.name);\r\n                                if (map != undefined) map.value = item.value;\r\n                                else valueMapList.push(item);\r\n                            }\r\n                            addValueMap({ name: ParamUtil.SelfParamType.FRAME, value: self.frame });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.LIMIT, value: self.limit });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_X, value: self.pos.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_Y, value: self.pos.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_X, value: self.vec.xy.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_Y, value: self.vec.xy.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_RAD, value: self.vec.rad });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_LEN, value: self.vec.len });\r\n\r\n                            // Inherit配下のフィールドのパラメータを取得\r\n                            const itrfldValueMap: ValueMap[] = [];\r\n                            const fieldMng = searchElement('inhfld-mng', connector.mngs);\r\n                            if (fieldMng != null) {\r\n                                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                                    itrfldValueMap.push({ name: paramItem.name, value });\r\n                                });\r\n                            }\r\n\r\n                            let loopCnt = 1;\r\n                            const extendItem = searchElement('extend-mng', connector.mngs) as LogicUtil.WrapElement;\r\n                            const extendParams = (extendItem.data as LogicUtil.NodeParamManager).params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                            const loopCntVal = convertParamsToValue(ParamUtil.ExtendParamType.LOOP_COUNT, extendParams, valueMapList.concat(itrfldValueMap));\r\n\r\n                            // 派生条件\r\n                            const isInvoke = convertParamsToBoolean(ParamUtil.ExtendParamType.INVOKE, extendParams, valueMapList) ?? true;\r\n\r\n                            // 条件を満たさない場合、以下の処理（パーティクルの生成）を行わない\r\n                            if (!isInvoke) return;\r\n\r\n                            // イテレータを利用している場合\r\n                            if (loopCntVal != undefined) {\r\n                                loopCnt = loopCntVal;\r\n                            }\r\n\r\n                            for (let i = 0; i < loopCnt; i++) {\r\n\r\n                                // イテレータ関連のパラメータを追加\r\n                                const iterateValueMap: ValueMap[] = [\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_COUNT, value: loopCnt },\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_ITERATE, value: i }\r\n                                ];\r\n\r\n                                // 配列Mapのイテレータ変数を追加\r\n                                const iterateArrayMap: ValueMap[] = parentArrayMapList.map(arr => {\r\n                                    return { name: arr.name + '.itr', value: arr.array[i] ?? 0 };\r\n                                });\r\n\r\n                                const sendItem = searchElement('send-mng', connector.mngs)?.data as LogicUtil.NodeParamManager;\r\n                                const params = sendItem.params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                                const sendValueMapList: ValueMap[] = params\r\n                                    .filter(item => !item.isArray)\r\n                                    .map(item => {\r\n                                        return {\r\n                                            name: item.name, value: convertParamsToValue(item.name, params, valueMapList\r\n                                                .concat(itrfldValueMap)\r\n                                                .concat(iterateValueMap)\r\n                                                .concat(iterateArrayMap)\r\n                                            ) ?? 0\r\n                                        };\r\n                                    });\r\n                                const sendArrayMapList: ArrayMap[] = params\r\n                                    .filter(item => item.isArray)\r\n                                    .map(item => {\r\n                                        return { name: item.name, array: convertParamsToArray(item.name, params, parentArrayMapList) ?? [] }\r\n                                    });\r\n\r\n                                const props = createParticleRec(\r\n                                    logicItem,\r\n                                    sendValueMapList,\r\n                                    sendArrayMapList\r\n                                );\r\n                                self.owner.push(new Particle.Instance(props));\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            // モデュレート（動きの変化）を付与\r\n            ModulateBuilder.build(extendList, {\r\n                decayLimit: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_LIMIT),\r\n                decayRate: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_RATE),\r\n                gravity: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_VAL),\r\n                gravityLimit: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_LIMIT),\r\n            });\r\n\r\n            // Visualのパラメータを取得\r\n            const radius = getVisualParam(ParamUtil.VisualParamType.RADIUS);\r\n            const colorR = getVisualParam(ParamUtil.VisualParamType.COLOR_R);\r\n            const colorG = getVisualParam(ParamUtil.VisualParamType.COLOR_G);\r\n            const colorB = getVisualParam(ParamUtil.VisualParamType.COLOR_B);\r\n            const colorA = getVisualParam(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // エフェクト付与\r\n            const disappearStart = getVisualParam(ParamUtil.EffectParamType.DISAPPEAR_START);\r\n            const shrinkStart = getVisualParam(ParamUtil.EffectParamType.SHRINK_START);\r\n            const flashAppearFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME);\r\n            const flashHideFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_HIDE_FRAME);\r\n\r\n            let drawer: (self: Particle.Instance, ctx: CanvasRenderingContext2D) => void = () => { };\r\n            if (radius != undefined) {\r\n                drawer = DrawUtil.createGradDrawer({\r\n                    radius: radius,\r\n                    color: DrawUtil.convertColorCodeFromRgba({\r\n                        r: colorR as number,\r\n                        g: colorG as number,\r\n                        b: colorB as number,\r\n                        a: colorA as number,\r\n                    }),\r\n                    disappearStartRate: disappearStart,\r\n                    shrinkStartRate: shrinkStart,\r\n                    flashAppearFrame,\r\n                    flashHideFrame,\r\n                });\r\n            }\r\n\r\n            return {\r\n                owner, pos, vec,\r\n                limit, drawer,\r\n                extend: extendList\r\n            };\r\n        }\r\n\r\n        return createParticleRec(origin, initialValueMapList, initailArrayMapList);\r\n    }\r\n\r\n    const searchElement = (type: LogicUtil.NodeType, warpList: LogicUtil.WrapElement[]) => {\r\n        return warpList.find(wrap => wrap.type === type) ?? null;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param valueMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToValue = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): number | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToValue(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToValue = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): number => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(ret);\r\n        return ret;\r\n    }\r\n\r\n    export const convertParamsToBoolean = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): boolean | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToBoolean(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToBoolean = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): boolean => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item, i) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            else if (item === '=') str = '==';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(formulaStr);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param arrayMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToArray = (name: string, params: LogicUtil.NodeParamItem[], arrayMapList: ArrayMap[]): number[] | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        const item = formula.values[0];\r\n        if (item.type === 'array') {\r\n            return item.value.split(',').map(v => Number(v));\r\n        } else if (item.type === 'argument') {\r\n            const map = arrayMapList.find(array => array.name === item.value);\r\n            return map == undefined ? [] : map.array;\r\n        }\r\n    }\r\n\r\n    export const ConstantValueMap: ValueMap[] = [\r\n        { name: ParamUtil.ConstantType.SCREEN_WIDTH, value: SCREEN_WIDTH },\r\n        { name: ParamUtil.ConstantType.SCREEN_HEIGHT, value: SCREEN_HEIGHT },\r\n        { name: ParamUtil.ConstantType.PI, value: 3.14159265359 },\r\n        { name: ParamUtil.ConstantType.RADIAN_ROUND, value: 3.14159265359 * 2 }\r\n    ];\r\n}\r\n\r\nexport default PreviewUtil;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\r\n\r\n    export type Validate = {\r\n        checker: (value: string) => boolean;\r\n        errorType: ErrorType;\r\n        message?: string;\r\n    }\r\n\r\n    /**\r\n     * 必須チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkRequired = (str: string) => {\r\n        return str.length > 0;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length === 0 || (str.length >= min && str.length <= max);\r\n    }\r\n\r\n    /**\r\n     * 半角英数時チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        return checkIncludesChars(str, list);\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列で構成されているかチェック\r\n     * @param str 検証する文字列\r\n     * @param list 入力を許す対象文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkIncludesChars = (str: string, list: string) => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            const ch = str.charAt(i);\r\n            if (list.indexOf(ch) === -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列が数値に変換できるかチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumber = (str: string) => {\r\n        return !isNaN(Number(str));\r\n    }\r\n\r\n    /**\r\n     * 数値の値の範囲をチェック\r\n     * @param str 検証する文字列\r\n     * @param min 下限\r\n     * @param max 上限\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumberRange = (str: string, min: number, max: number) => {\r\n        if (!isNaN(Number(str))) {\r\n            const num = Number(str);\r\n            return num >= min && num <= max;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    export const checkArrayNumber = (value: string) => value.split(',').find(v => isNaN(Number(v))) == undefined;\r\n}\r\nexport default ValidateUtil;\r\n","import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        // parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        const ref = useRef({} as HTMLDivElement);\r\n\r\n        /**\r\n         * データを元に再帰的に以下のツリーを構成する。\r\n         * @returns ツリー\r\n         */\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        useEffect(() => {\r\n            if (focusNode != null && focusNode.parent != null) {\r\n                focusNode.parent.isOpen = true;\r\n            }\r\n        }, [focusNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            // console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    // 親判定\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    // 兄弟判定\r\n                    if (result === false && focusNode != null && focusNode.parent != null) {\r\n                        result = focusNode.parent.children.find(node => node == element) != undefined;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        width={ref.current.scrollWidth}\r\n                        isActive={isCurrent}\r\n                        isRelation={!isDisable && isRelationNode()}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap\r\n                ref={ref}\r\n                isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #374a54;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #1f3642;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n    isRelation: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #459cff46;\r\n    `}\r\n    opacity: 0.3;\r\n    ${props => !props.isRelation ? '' : css`\r\n        background-color: #ffffff28;\r\n        opacity: 1;\r\n    `}\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #b4d9dd83;\r\n        opacity: 1;\r\n    `}\r\n    width: ${props => props.width}px;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import { useContext, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nnamespace ModifyOperations {\r\n\r\n    export type Props = {\r\n        mappingForm: () => void;\r\n        checkableFields: FormUtil.CheckableValue[];\r\n        isInputOK?: boolean;\r\n        firstRegist: () => void;\r\n        modifyRegist: () => void;\r\n    }\r\n\r\n    export const Component = (props: Props) => {\r\n        const { node, isModify, setModify, removeSelf } = useContext(FactoryTreeContext);\r\n\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n        const isComplete = FormUtil.isCompleteCheck(props.checkableFields);\r\n\r\n        return (<>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: isModify,\r\n                        callback: () => {\r\n                            if (wrap.data == null) {\r\n                                removeSelf();\r\n                            } else {\r\n                                props.mappingForm();\r\n                            }\r\n                            setModify(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !isModify || (props.isInputOK ?? isComplete),\r\n                        callback: () => {\r\n                            if (!isModify) {\r\n                                setModify(true);\r\n                            } else {\r\n                                if (wrap.data == null) {\r\n                                    props.firstRegist();\r\n                                } else {\r\n                                    props.modifyRegist();\r\n                                }\r\n                                setModify(false);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default ModifyOperations;","import { type } from \"os\";\r\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport Common from \"../common\";\r\nimport PreviewLogicFrame from \"../preview/previewLogicFrame\";\r\nimport LogicElementUtil from \"./util/logicElementUtil\";\r\nimport LogicUtil from \"./util/logicUtil\";\r\n\r\nexport const FactoryTreeContext = createContext({} as LogicUtil.DetailArgs);\r\n\r\nconst LogicMainteTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    // const [rootData, setRootData] = useState(LogicElementUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    // const [treeDisable, setTreeDisable] = useState(false);\r\n    const [isModify, setModify] = useState<boolean>(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    const rootData = store.libraryData as LogicUtil.WrapElement;\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: LogicUtil.getChildrenDataNode(rootData)\r\n        }\r\n    }, [rootData]);\r\n\r\n    // useEffect(()=> {\r\n    //     store.logicData = rootData;\r\n    //     setStore({...store});\r\n    // }, [rootData]);\r\n\r\n    const setRootData = (rootData: LogicUtil.WrapElement) => {\r\n        store.libraryData = rootData;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const masterNode = useMemo(() => {\r\n        let cur: TreeUtil.ElementNode | null = focusNode;\r\n        while (cur != null) {\r\n            const type = (cur.data as LogicUtil.WrapElement).type;\r\n            if (['logic-item', 'seed-item'].includes(type)) return cur;\r\n            cur = cur.parent;\r\n        };\r\n        return null;\r\n    }, [focusNode]);\r\n\r\n    /**\r\n     * プレビューダイアログを表示する\r\n     */\r\n    const openPreviewDialog = () => {\r\n        if (masterNode == null) return;\r\n        store.system.dialog = (\r\n            <PreviewLogicFrame.Component\r\n                master={masterNode.data as LogicUtil.WrapElement}\r\n                rootData={rootData}\r\n                closeButtonAction={() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n            onKeyDown={(e) => {\r\n                // console.log(e.key);\r\n                if (isModify || focusNode == null) return;\r\n                switch (e.key) {\r\n                    case 'ArrowRight': {\r\n                        if (focusNode.children.length > 0) {\r\n                            if (!focusNode.isOpen) focusNode.isOpen = true;\r\n                            else setFocusNode(focusNode.children[0]);\r\n                            setInvalidate({});\r\n                        }\r\n                    } break;\r\n                    case 'ArrowLeft': {\r\n                        if (focusNode.isOpen) focusNode.isOpen = false;\r\n                        else {\r\n                            if (focusNode.parent != null) setFocusNode(focusNode.parent);\r\n                        }\r\n                        setInvalidate({});\r\n                    } break;\r\n                    case 'ArrowUp': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n) {\r\n                                    if (i === 0) {\r\n                                        setFocusNode(focusNode.parent);\r\n                                        setInvalidate({});\r\n                                    } else {\r\n                                        setFocusNode(list[i - 1]);\r\n                                        setInvalidate({});\r\n                                    }\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case 'ArrowDown': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n && i < list.length - 1) {\r\n                                    setFocusNode(list[i + 1]);\r\n                                    setInvalidate({});\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case ' ': {\r\n                        if (masterNode != null) openPreviewDialog();\r\n                    } break;\r\n                }\r\n            }}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview',\r\n                                isEnable: masterNode != null,\r\n                                callback: openPreviewDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return LogicUtil.getNodeDisplayJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={isModify}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <_DetailDiv>\r\n                    <_DetailHeader>\r\n                        <_DetailHeaderLabel>{LogicUtil.getTypeName(focusNode)}</_DetailHeaderLabel>\r\n                    </_DetailHeader>\r\n                    <FactoryTreeContext.Provider value={{\r\n                        rootData,\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        isModify,\r\n                        setModify,\r\n                        // treeDisable,\r\n                        setRootData,\r\n                        removeSelf: () => {\r\n                            const node = focusNode as TreeUtil.ElementNode;\r\n                            let index = -1;\r\n                            node.parent?.children.forEach((n, i) => {\r\n                                if (n == node) index = i;\r\n                            });\r\n                            node.parent?.children.splice(index, 1);\r\n                            const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n                            const listName = LogicElementUtil.getListParamName(parentWrap.type);\r\n                            if (listName == null) return;\r\n                            const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n                            list.splice(index, 1);\r\n                            setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                            setInvalidate({});\r\n                        }\r\n                    }}>\r\n                        <_DetailMainDiv>{LogicUtil.getDetailComponent(focusNode)}</_DetailMainDiv>\r\n                    </FactoryTreeContext.Provider>\r\n                </_DetailDiv>\r\n            </_PropsDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default LogicMainteTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #6c8186;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d87b;\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _TreeHeadHalf = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    background-color: #7fbdb47a;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #9fa9b6;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _DetailDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c9;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\nconst _DetailHeader = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #b4b29e; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _DetailHeaderLabel = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #a10000;\r\n    /* background-color: #bbd0d3; */\r\n    border: solid 1px #a10000;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 20px);\r\n    margin: 5px 0 0 10px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DetailMainDiv = styled.div`\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 44px);\r\n    margin: 0 0 0 4px;\r\n    background-color: #ccd2d3;\r\n    border: solid 1px #0026a1;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorArgumentMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'argument-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentMng;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ParamUtil from \"../util/paramUtil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\n\r\nnamespace SendTemplateDialog {\r\n\r\n    const FRAME_WIDTH = 450;\r\n    const FRAME_HEIGHT = 160;\r\n    const COMPONENT_WIDTH = 296;\r\n\r\n    export const ConnectParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, input property name!';\r\n\r\n        /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n        const paramNameList = useMemo(() => {\r\n            const owner = (LogicElementUtil.getInnerWrap(props.node.parent?.data as LogicUtil.WrapElement, 'inherit-logic') as LogicUtil.WrapElement).data;\r\n            return LogicElementUtil.getParamNameList(owner);\r\n        }, [props.node]);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    // Sendにパラメータを追加\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: xName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }] }\r\n                    ), props.node);\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: yName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }] }\r\n                    ), props.node);\r\n\r\n                    // 派生ロジックに引数を追加\r\n                    const logicNode = LogicElementUtil.getInnerNode(props.node.parent as TreeUtil.ElementNode, 'inherit-logic') as TreeUtil.ElementNode;\r\n                    const hasArgNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') != undefined;\r\n                    if (!hasArgNode) {\r\n                        LogicElementUtil.insertChild({\r\n                            type: 'argument-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeArgumentManager\r\n                        }, logicNode, 0);\r\n                    }\r\n                    const argNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') as TreeUtil.ElementNode;\r\n\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: xName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: yName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n\r\n                    // 派生ロジックの座標に引数を設定\r\n                    const behaviorNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'behavior-mng') as TreeUtil.ElementNode;\r\n                    const setParamValue = (prpName: string, argName: string) => {\r\n                        const params = behaviorNode.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                        const targetParam = params.find(param => param.name === prpName) as LogicUtil.NodeParamItem;\r\n                        targetParam.formulaItems = ['var'];\r\n                        targetParam.values = [{ type: 'argument', value: argName }];\r\n                    }\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_X, xName.value);\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_Y, yName.value);\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (yName.value !== '') list.push(yName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[yName]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (xName.value !== '') list.push(xName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[xName]}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n\r\n    export const SetParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, select property name!';\r\n\r\n        const list = useMemo(() => {\r\n            return props.node.children.map(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                return (wrap.data as LogicUtil.NodeParamItem).name;\r\n            });\r\n        }, []);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    const paramList = props.node.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                    const xParam = paramList.find(param => param.name === xName.value) as LogicUtil.NodeParamItem;\r\n                    const yParam = paramList.find(param => param.name === yName.value) as LogicUtil.NodeParamItem;\r\n                    xParam.formulaItems = ['var'];\r\n                    xParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }];\r\n                    yParam.formulaItems = ['var'];\r\n                    yParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }];\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== yName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== xName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SendTemplateDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #d0e7e718;\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport GloballDialog from \"../../../../dialog/globalDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorArgumentItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const logicNode = node.parent?.parent as TreeUtil.ElementNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n        setName({ ...name, value: param.name });\r\n        setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, argType]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeArgumentItem = {\r\n                    name: name.value,\r\n                    valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n                syncArgumentAdd(logicNode, name.value, argType.value as LogicUtil.ArgumentType);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(logicNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = reservedList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeArgumentItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getArgumentRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    // DependしているInheritのSendパラメータを同期する\r\n                                    syncArgumentDel(logicNode, name.value);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentItem;\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param node 引数のノード\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param logicNode ロジックノード\r\n*/\r\nconst syncArgumentName = (logicNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n    const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n    if (fieldMng != undefined) {\r\n        syncFormula((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n    }\r\n    const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n    if (visualMng != undefined) {\r\n        syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n    if (behaviorMng != undefined) {\r\n        syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n    if (inhMng != undefined) {\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n            // Inherit配下のField要素のチェック\r\n            if (inhfld != null) {\r\n                syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n            // Extend要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            // Send要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        });\r\n    }\r\n\r\n    const syncParamName = (params: LogicUtil.WrapElement[]) => {\r\n        params.forEach(wrap => {\r\n            const item = wrap.data as LogicUtil.NodeParamItem;\r\n            if (item.name === prevName) {\r\n                item.name = newName;\r\n            }\r\n        });\r\n    }\r\n    if (wrap.type === 'logic-item') {\r\n\r\n        // dependしている箇所を全て反映するために再帰で洗う\r\n        const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n            const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n            if (inhMng == undefined) return;\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    const inhLogic = LogicElementUtil.getInnerWrapFixed(inh, 'inherit-logic').data as LogicUtil.NodeLogicItem;\r\n                    runRec(inhLogic);\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    const sendMng = LogicElementUtil.getInnerWrapFixed(inh, 'send-mng').data as LogicUtil.NodeParamManager;\r\n                    syncParamName(sendMng.params);\r\n                }\r\n            });\r\n        }\r\n        // ロジックを全て調査する\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(logic => {\r\n            runRec((logic.data as LogicUtil.WrapElement).data);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        const root = (rootNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeRoot;\r\n        const defs = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        console.log(defs.length);\r\n        defs.forEach(wrap => {\r\n            const interfaceWrap = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng');\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(interfaceWrap, 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            syncParamName(sendMng.params);\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const connWrap = logicNode.parent?.data as LogicUtil.WrapElement;\r\n        const sendMng = LogicElementUtil.getInnerWrapFixed(connWrap, 'send-mng').data as LogicUtil.NodeParamManager;\r\n        syncParamName(sendMng.params);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の更新に伴い、参照先のSend管理に処理（callback）を行う\r\n * @param logicNode ロジックノード\r\n * @param callback 処理\r\n */\r\nconst syncArgumentCallback = (\r\n    logicNode: TreeUtil.ElementNode,\r\n    callback: (sendNode: TreeUtil.ElementNode) => void\r\n) => {\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n\r\n    if (wrap.type === 'logic-item') {\r\n        const runRec = (logicNode: TreeUtil.ElementNode) => {\r\n            const inhMngNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'inherit-mng');\r\n            if (inhMngNode == undefined) return;\r\n            inhMngNode.children.forEach(child => {\r\n                const conn = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    runRec(LogicElementUtil.getInnerNodeFixed(child, 'inherit-logic'));\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    callback(LogicElementUtil.getInnerNodeFixed(child, 'send-mng'));\r\n                }\r\n            });\r\n        }\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(child => {\r\n            runRec(child);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        rootNode.children[0].children.forEach(seedNode => {\r\n            const interfaceNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'interface-mng');\r\n            const sendNode = LogicElementUtil.getInnerNodeFixed(interfaceNode, 'seedsend-mng');\r\n            const seed = (seedNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n            if (seed.entry === logicItem.name) {\r\n                callback(sendNode);\r\n            }\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const sendNode = LogicElementUtil.getInnerNodeFixed(logicNode.parent as TreeUtil.ElementNode, 'send-mng');\r\n        callback(sendNode);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentAdd = (logicNode: TreeUtil.ElementNode, newArgName: string, type: LogicUtil.ArgumentType) => {\r\n    const addNewParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const isArray = type === 'array';\r\n        const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n            {\r\n                name: newArgName,\r\n                formulaItems: ['var'],\r\n                values: !isArray ? [{ type:  'direct', value: '0' }] : [{ type:  'array', value: '' }],\r\n                isArray: isArray ? true : undefined\r\n            }\r\n        );\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        sendMng.params.push(paramWrap);\r\n        sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n    }\r\n    syncArgumentCallback(logicNode, addNewParam);\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentDel = (logicNode: TreeUtil.ElementNode, delArgName: string) => {\r\n    const delArgParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        let delIndex = -1;\r\n        sendMng.params.some((param, i) => {\r\n            if ((param.data as LogicUtil.NodeParamItem).name == delArgName) {\r\n                delIndex = i;\r\n                return 1;\r\n            }\r\n        });\r\n        sendMng.params.splice(delIndex, 1);\r\n        sendNode.children.splice(delIndex, 1);\r\n    }\r\n    syncArgumentCallback(logicNode, delArgParam);\r\n}","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Seed',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seed-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedManager).defs.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorLogicMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Logic',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'logic-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\n\r\nconst EditorLogicItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [isConnect, hasArgNode, hasFieldNode, hasConnectNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        return [\r\n            parentType === 'connector',\r\n            list.includes('argument-mng'),\r\n            list.includes('field-mng'),\r\n            list.includes('inherit-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        if (!isConnect) {\r\n            const param = wrap.data as LogicUtil.NodeLogicItem;\r\n            setName({ ...name, value: param.name });\r\n        }\r\n    };\r\n\r\n    /** 既存のロジック名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => {\r\n        // インヘリットの場合、名前を持たないため取得しない\r\n        if (wrap.type === 'inherit-logic') return [];\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node, isConnect]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 引数要素の有無を判定\r\n     */\r\n    const hasArgument = () => {\r\n        const argumentNode = LogicElementUtil.getInnerNode(node, 'argument-mng');\r\n        if (argumentNode == null) return false;\r\n        return argumentNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'field-mng');\r\n        if (fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 派生要素の有無を判定\r\n     */\r\n    const hasInherit = () => {\r\n        const inheritNode = LogicElementUtil.getInnerNode(node, 'inherit-mng');\r\n        if (inheritNode == null) return false;\r\n        return inheritNode.children.length > 0;\r\n    }\r\n\r\n    return (<>\r\n        {isConnect ? <></> : (<>\r\n            <ModifyOperations.Component\r\n                mappingForm={mappingForm}\r\n                checkableFields={[name]}\r\n                firstRegist={() => {\r\n                    const element: LogicUtil.NodeLogicItem = {\r\n                        name: name.value,\r\n                        mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                    };\r\n                    element.name = name.value;\r\n                    wrap.data = element;\r\n\r\n                    element.mngs.forEach(mng => {\r\n                        const newNode = TreeUtil.createNode(mng, node);\r\n                        const data = (newNode.data as LogicUtil.WrapElement).data;\r\n                        (data as LogicUtil.NodeParamManager).params.forEach(param => {\r\n                            newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                        });\r\n                        node.children.push(newNode);\r\n                    });\r\n                    invalidate();\r\n                    setStore({ ...store });\r\n                }}\r\n                modifyRegist={() => {\r\n                    const param = wrap.data as LogicUtil.NodeLogicItem;\r\n                    const prevName = param.name;\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n                    // 名前が変わった場合、参照箇所も修正する\r\n                    if (prevName !== param.name) {\r\n                        syncLogicName(node, prevName, param.name);\r\n                    }\r\n                }}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"param\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Name\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={200}\r\n                                isReadOnly={!isModify}\r\n                                checkable={name}\r\n                                setCheckable={setName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => !existNameList.includes(value),\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n        </>)}\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Argument'}\r\n                        width={300}\r\n                        isUse={hasArgNode}\r\n                        isEnable={!hasArgument()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasArgNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'argument-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as LogicUtil.NodeArgumentManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            if (hasArgNode) listPos++;\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'field-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Inherit'}\r\n                            width={300}\r\n                            isUse={hasConnectNode}\r\n                            isEnable={!hasInherit()}\r\n                            callback={() => {\r\n                                let listPos = 2;\r\n                                if (hasArgNode) listPos++;\r\n                                if (hasFieldNode) listPos++;\r\n                                toggleElement(\r\n                                    hasConnectNode,\r\n                                    listPos,\r\n                                    {\r\n                                        type: 'inherit-mng',\r\n                                        data: {\r\n                                            inherits: []\r\n                                        } as LogicUtil.NodeConnectManager\r\n                                    }\r\n                                );\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        {isConnect ? <></> : (\r\n            <FormUtil.BorderPanel\r\n                title=\"operation\"\r\n                isEnable={!isModify}\r\n                innerJsx={<>\r\n                    {LogicElementUtil.getReplicateButton(node, !isModify, 'logic', store, setStore, invalidate)}\r\n                    {/* <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Replicate',\r\n                                isEnable: !isModify,\r\n                                // isEnable: false,\r\n                                callback: () => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Replicate this logic.\"\r\n                                        buttons={[\r\n                                            {\r\n                                                label: 'Cancel',\r\n                                                callback: () => {\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                label: 'Enter',\r\n                                                callback: () => {\r\n                                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                                    const name = wrap.data[namable] as string;\r\n                                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                    // mappingForm();\r\n                                                    invalidate();\r\n                                                }\r\n                                            }\r\n                                        ]}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    /> */}\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Delete',\r\n                                callback: () => {\r\n                                    const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                    const refers = getLocgicRefers(node, param.name);\r\n                                    if (refers.length === 0) {\r\n                                        removeSelf();\r\n                                    } else {\r\n                                        store.system.dialog = <ConfirmDialog.Component\r\n                                            message={`[${param.name}] is referenced in the Inherit.\\n${refers}`}\r\n                                        />;\r\n                                        setStore({ ...store });\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                    {/* 並び順入れ替えボタン */}\r\n                    {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n                </>}\r\n            />\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicItem;\r\n\r\n/**\r\n * ロジックを参照しているInheritのリストを返す。\r\n * @param node 現在のノード\r\n * @param logicName ロジック名\r\n * @returns 参照Inheritリスト\r\n */\r\nexport const getLocgicRefers = (node: TreeUtil.ElementNode, logicName: string) => {\r\n\r\n    const refers: string[] = [];\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        refers.push(conn.id);\r\n    }\r\n    searchLogicReferInherit(node, logicName, callback);\r\n    return refers;\r\n}\r\n\r\n/**\r\n * ロジック名の変更に伴い、参照しているインヘリットを同期する\r\n * @param node ロジックノード\r\n */\r\nconst syncLogicName = (node: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        conn.depend = newName;\r\n    }\r\n    searchLogicReferInherit(node, prevName, callback);\r\n}\r\n\r\nconst searchLogicReferInherit = (\r\n    node: TreeUtil.ElementNode,\r\n    logicName: string,\r\n    callback: (conn: LogicUtil.NodeInheritConnector) => void\r\n) => {\r\n    const logicMngNode = node.parent as TreeUtil.ElementNode\r\n    const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng == undefined) return;\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n            if (conn.method === 'create') {\r\n                const inhLogic = LogicElementUtil.getInnerWrap(inh, 'inherit-logic');\r\n                runRec(inhLogic?.data);\r\n            } else {\r\n                if (conn.depend === logicName) {\r\n                    callback(conn);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    logicMngNode.children.forEach(logic => {\r\n        runRec((logic.data as LogicUtil.WrapElement).data);\r\n    });\r\n}","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype FormProps = {\r\n    inputType: FormUtil.CheckableValue;\r\n    value: FormUtil.CheckableValue;\r\n};\r\n\r\nenum Level {\r\n    FIELD = 0,\r\n    INITIAL,\r\n    INHERIT_FIELD,\r\n    INHERIT_EXTEND,\r\n    INHERIT_SEND,\r\n    SEED = -1,\r\n}\r\n\r\nconst EditorParamItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    /** 名前 */\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    /** 式 */\r\n    const [formulaItems, setFormulaItems] = useState<string[]>([]);\r\n    /** 変数の入力フォーム */\r\n    const [varFormList, setVarFormList] = useState<FormProps[]>([]);\r\n    // const [formJsxList, setFaormJsxList] = useState<JSX.Element[]>([]);\r\n\r\n    const isField = wrap.type === 'field-item';\r\n    const isCondition = wrap.type === 'condition-item';\r\n\r\n    const mappingForm = () => {\r\n        console.log('mapping');\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        setName({ value: param.name, errors: [] });\r\n        setFormulaItems(param.formulaItems.slice());\r\n        setVarFormList(param.values.map(v => {\r\n            return {\r\n                inputType: { value: v.type, errors: [] },\r\n                value: { value: v.value, errors: [] }\r\n            }\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const level: Level = useMemo(() => {\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        switch (parentType) {\r\n            case 'field-mng': return Level.FIELD;\r\n            case 'visual-mng':\r\n            case 'behavior-mng': return Level.INITIAL;\r\n            case 'inhfld-mng': return Level.INHERIT_FIELD;\r\n            case 'extend-mng': return Level.INHERIT_EXTEND;\r\n            case 'send-mng': return Level.INHERIT_SEND;\r\n        }\r\n        return Level.SEED;\r\n    }, [node]);\r\n\r\n    /**\r\n     * 引数とフィールド変数のキーリストを取得する。\r\n     */\r\n    const [argumentList, arrayArgList, fieldKeyList] = useMemo(() => {\r\n        let argumentList: string[] = [];\r\n        let arrayArgList: string[] = [];\r\n        const fieldKeys: string[] = [];\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const targetTypes: LogicUtil.NodeType[] = ['field-mng', 'behavior-mng', 'visual-mng', 'inhfld-mng', 'send-mng', 'extend-mng'];\r\n        if (targetTypes.includes(parentType)) {\r\n            const getLogicNode = () => {\r\n                switch (parentType) {\r\n                    case 'field-mng':\r\n                    case 'visual-mng':\r\n                    case 'behavior-mng': return node.parent?.parent;\r\n                    case 'inhfld-mng':\r\n                    case 'send-mng':\r\n                    case 'extend-mng': return node?.parent?.parent?.parent?.parent;\r\n                }\r\n            };\r\n            const logicItem = (getLogicNode()?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n            // 引数リストを追加\r\n            const argMng = logicItem.mngs.find(mng => mng.type === 'argument-mng');\r\n            if (argMng != undefined) {\r\n                argumentList = (argMng.data as LogicUtil.NodeArgumentManager).args\r\n                    .filter(arg => {\r\n                        const param = wrap.data as LogicUtil.NodeParamItem;\r\n                        const data = arg.data as LogicUtil.NodeArgumentItem;\r\n                        // return (param.isList && data.valueType === 'array') || (!param.isList && data.valueType !== 'array');\r\n                        return data.valueType === 'number';\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n                arrayArgList = (argMng.data as LogicUtil.NodeArgumentManager).args\r\n                    .filter(arg => {\r\n                        const param = wrap.data as LogicUtil.NodeParamItem;\r\n                        const data = arg.data as LogicUtil.NodeArgumentItem;\r\n                        // return (param.isList && data.valueType === 'array') || (!param.isList && data.valueType !== 'array');\r\n                        return data.valueType === 'array';\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n            }\r\n            // 変数リストを追加\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (level >= Level.INITIAL && fieldMng != undefined) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                    fieldKeys.push(fieldName);\r\n                });\r\n            }\r\n        } else if (parentType === 'seedsend-mng') {\r\n            // シード配下のSendは特別に扱う（どのレベルにも属さない）\r\n            const argMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'seedarg-mng');\r\n            if (argMng != null) {\r\n                argumentList = (argMng.data as LogicUtil.NodeSeedArgManager).args\r\n                    .filter(arg => {\r\n                        const data = arg.data as LogicUtil.NodeSeedArgItem;\r\n                        return !data.isArray;\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n                arrayArgList = (argMng.data as LogicUtil.NodeSeedArgManager).args\r\n                    .filter(arg => {\r\n                        const data = arg.data as LogicUtil.NodeSeedArgItem;\r\n                        return data.isArray;\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n            } else throw new Error('argMng is undefined.');\r\n        }\r\n        if (level >= Level.INHERIT_FIELD) {\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_RAD);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_LEN);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.RADIUS);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_R);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_G);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_B);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // フィールドキーにInherit配下のFieldパラメータを追加\r\n            if (level >= Level.INHERIT_EXTEND) {\r\n                const inhfldNode = LogicElementUtil.getInnerNode(node.parent?.parent as TreeUtil.ElementNode, 'inhfld-mng');\r\n                if (inhfldNode != null) {\r\n                    const fieldMng = (inhfldNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeFieldManager;\r\n                    fieldMng.fields.forEach(field => {\r\n                        const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                        fieldKeys.push(fieldName);\r\n                    });\r\n                }\r\n            }\r\n            // フィールドキーにExtendパラメータを追加\r\n            if (level === Level.INHERIT_SEND) {\r\n                const extendWrap = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'extend-mng') as LogicUtil.WrapElement;\r\n                const extendElement = extendWrap.data as LogicUtil.NodeParamManager;\r\n                //Extendにloop_countのパラメータがある場合\r\n                if (extendElement.params.find(\r\n                    param => (param.data as LogicUtil.NodeParamItem).name === ParamUtil.ExtendParamType.LOOP_COUNT\r\n                ) != undefined) {\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_COUNT);\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_ITERATE);\r\n                }\r\n            }\r\n        }\r\n        return [argumentList, arrayArgList, fieldKeys];\r\n    }, [node]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const paramNameList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (item === 'var') num++;\r\n        });\r\n\r\n        if (varFormList.length < num) {\r\n            const addNum = num - varFormList.length;\r\n            for (let i = 0; i < addNum; i++) varFormList.push({\r\n                inputType: { value: 'direct', errors: [] },\r\n                value: { value: '', errors: [] }\r\n            });\r\n            setVarFormList(varFormList.slice());\r\n        } else if (varFormList.length > num) {\r\n            const delNum = varFormList.length - num;\r\n            for (let i = 0; i < delNum; i++) varFormList.splice(varFormList.length - delNum, delNum);\r\n            setVarFormList(varFormList.slice());\r\n        }\r\n    }, [formulaItems]);\r\n\r\n    /** 「(」の数-「)」の数 */\r\n    const parenthesisBalance = useMemo(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (['(', 'rand(', 'integer('].includes(item)) num++;\r\n            else if (item === ')') num--;\r\n        });\r\n        return num;\r\n    }, [formulaItems]);\r\n\r\n    /** 値の入力フォームのJSX */\r\n    const formJsxList = useMemo(() => {\r\n        return varFormList.map((v, i) => {\r\n\r\n            const getValueForm = (): JSX.Element => {\r\n                const type = v.inputType.value as LogicUtil.ParamInputType;\r\n                if (type === 'direct') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isNumber\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else if (type === 'array') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkArrayNumber(value),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else {\r\n                    const isArray = (wrap.data as LogicUtil.NodeParamItem).isArray;\r\n                    let list: string[] = [];\r\n                    switch (type) {\r\n                        case 'argument': {\r\n                            list = !isArray ? argumentList : arrayArgList;\r\n                        } break;\r\n                        case 'field': {\r\n                            list = fieldKeyList;\r\n                        } break;\r\n                        case 'self': {\r\n                            list = ParamUtil.SelfParams;\r\n                        } break;\r\n                        case 'constant': {\r\n                            list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                        } break;\r\n                        case 'array.itr': {\r\n                            list = arrayArgList.map(name => name + '.itr');\r\n                        } break;\r\n                        case 'array.len': {\r\n                            list = arrayArgList.map(name => name + '.len');\r\n                        } break;\r\n                    }\r\n                    // if (type === 'argument') {\r\n                    //     list = argumentList;\r\n                    // } else if (type === 'field') {\r\n                    //     list = fieldKeyList;\r\n                    // } else if (type === 'self') {\r\n                    //     list = ParamUtil.SelfParams;\r\n                    // } else if (type === 'constant') {\r\n                    //     list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                    // }\r\n                    return (\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            list={list.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n            return <FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={`var_${i}`}\r\n                labelWidth={90}\r\n                marginTop={i === 0 ? 4 : 0}\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        checkable={v.inputType}\r\n                        width={142}\r\n                        isReadOnly={!isModify}\r\n                        setCheckable={(checkable) => {\r\n                            varFormList[i].inputType = checkable;\r\n                            if (isModify) {\r\n                                varFormList[i].value.value = checkable.value === 'direct' ? '0' : '';\r\n                            }\r\n                            setVarFormList(varFormList.slice());\r\n                        }}\r\n                        list={LogicUtil.ParamInputTypes.filter(item => {\r\n                            const param = wrap.data as LogicUtil.NodeParamItem;\r\n                            const isArray = param == undefined ? false : param.isArray ?? false;\r\n                            if (!isArray) {\r\n                                switch (item) {\r\n                                    case 'direct':\r\n                                    case 'constant':\r\n                                    case 'argument': return true;\r\n                                    case 'field': return level >= Level.INITIAL;\r\n                                    case 'array.len':\r\n                                    case 'self': return level >= Level.INHERIT_FIELD;\r\n                                    case 'array.itr': return level >= Level.INHERIT_SEND;\r\n                                    case 'array': return false;\r\n                                }\r\n                            } else {\r\n                                switch (item) {\r\n                                    case 'direct':\r\n                                    case 'constant':\r\n                                    case 'self':\r\n                                    case 'field': return false;\r\n                                    case 'array':\r\n                                    case 'argument': return true;\r\n                                }\r\n                            }\r\n                        }).map(item => {\r\n                            return { value: item, labelText: item };\r\n                        })}\r\n                    />\r\n                    {getValueForm()}\r\n                </>}\r\n            />;\r\n        });\r\n    }, [varFormList, isModify]);\r\n\r\n    const getFormulaJsx = () => {\r\n        let num = 0;\r\n        const jsxList: JSX.Element[] = [];\r\n        formulaItems.forEach((item) => {\r\n            if (jsxList.length > 0) {\r\n                jsxList.push(<span key={jsxList.length}>&nbsp;</span>);\r\n            }\r\n            if (item === 'var') {\r\n                jsxList.push(<_Var key={jsxList.length}>{`$\\{var_${num}}`}</_Var>);\r\n                num++;\r\n            } else {\r\n                jsxList.push(<_Sig key={jsxList.length}>{item}</_Sig>);\r\n            }\r\n        });\r\n        return jsxList;\r\n    }\r\n\r\n    const isLastVar = () => formulaItems.length > 0 && ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const isFormulaOK = parenthesisBalance === 0 && varFormList.length > 0 &&\r\n        ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const hasFormError = !isFormulaOK || varFormList.find(varForm => varForm.value.errors.length > 0) != undefined;\r\n\r\n\r\n    const getFormulaItem = (label: string, width: number, isEnable: boolean, value: string) => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        const isArray = param == undefined ? false : param.isArray ?? false;\r\n        return {\r\n            label, width, isEnable: isArray ? false : isEnable,\r\n            callback: () => {\r\n                formulaItems.push(value);\r\n                setFormulaItems(formulaItems.slice());\r\n            }\r\n        };\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeParamItem = {\r\n                    name: name.value,\r\n                    formulaItems: formulaItems.slice(),\r\n                    values: varFormList.map(varForm => {\r\n                        return {\r\n                            type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                            value: varForm.value.value\r\n                        }\r\n                    })\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n            }}\r\n            isInputOK={parenthesisBalance === 0 && !hasFormError && name.errors.length === 0}\r\n            modifyRegist={() => {\r\n                const data = wrap.data as LogicUtil.NodeParamItem;\r\n                data.formulaItems = formulaItems.slice();\r\n                data.values = varFormList.map(varForm => {\r\n                    return {\r\n                        type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                        value: varForm.value.value\r\n                    }\r\n                });\r\n                if (isField) {\r\n                    const prevName = data.name;\r\n                    data.name = name.value;\r\n                    if (prevName !== name.value) {\r\n                        syncFieldName(node.parent as TreeUtil.ElementNode, prevName, name.value);\r\n                    }\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify || !isField}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = paramNameList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeParamItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('+', 50, isModify && isLastVar(), '+'),\r\n                        getFormulaItem('-', 50, isModify && isLastVar(), '-'),\r\n                        getFormulaItem('*', 50, isModify && isLastVar(), '*'),\r\n                        getFormulaItem('/', 50, isModify && isLastVar(), '/'),\r\n                        getFormulaItem('%', 50, isModify && isLastVar(), '%'),\r\n                        getFormulaItem('(', 35, isModify && !isLastVar(), '('),\r\n                        getFormulaItem(')', 35, isModify && isLastVar() && parenthesisBalance > 0, ')'),\r\n                        {\r\n                            label: 'del',\r\n                            width: 60,\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            callback: () => {\r\n                                formulaItems.splice(formulaItems.length - 1, 1);\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {!isCondition ? <></> : (\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            getFormulaItem('<', 50, isModify && isLastVar(), '<'),\r\n                            getFormulaItem('<=', 50, isModify && isLastVar(), '<='),\r\n                            getFormulaItem('=', 50, isModify && isLastVar(), '='),\r\n                            getFormulaItem('>=', 50, isModify && isLastVar(), '>='),\r\n                            getFormulaItem('>', 50, isModify && isLastVar(), '>'),\r\n                            getFormulaItem('&&', 50, isModify && isLastVar(), '&&'),\r\n                            getFormulaItem('||', 50, isModify && isLastVar(), '||'),\r\n                        ]}\r\n                    />\r\n                )}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('var', 70, isModify && !isLastVar(), 'var'),\r\n                        getFormulaItem('rand', 80, isModify && !isLastVar(), 'rand('),\r\n                        getFormulaItem('integer', 80, isModify && !isLastVar(), 'integer('),\r\n                        {\r\n                            label: 'clear',\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            width: 90,\r\n                            callback: () => {\r\n                                setFormulaItems([]);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_Formula\r\n                    isInvalid={!isFormulaOK}\r\n                >{getFormulaJsx()}</_Formula>\r\n                {formJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify && isField}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'field', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getFieldRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {!isField ? <></> : LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorParamItem;\r\n\r\n/**\r\n * ノードの変数を参照している箇所のリストを返す。\r\n * @param node 変数のノード\r\n * @param argName 変数名\r\n * @returns 参照パラメータリスト\r\n */\r\nexport const getFieldRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n * フィールド名の変更に伴い、式で参照している変数を同期する\r\n * @param mngNode ノード\r\n */\r\nexport const syncFieldName = (mngNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const type = (mngNode.data as LogicUtil.WrapElement).type;\r\n    if (type === 'field-mng') {\r\n        const logic = (mngNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n\r\n        const visualMng = logic.mngs.find(mng => mng.type === 'visual-mng');\r\n        if (visualMng != undefined) {\r\n            syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const behaviorMng = logic.mngs.find(mng => mng.type === 'behavior-mng');\r\n        if (behaviorMng != undefined) {\r\n            syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                // Inherit配下のField要素のチェック\r\n                if (inhfld != null) {\r\n                    syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                }\r\n                // Extend要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    } else if (type === 'inhfld-mng') {\r\n        const inheritWrap = mngNode.parent?.data as LogicUtil.WrapElement;\r\n\r\n        // Extend要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        // Send要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n}\r\n\r\nconst _Formula = styled.div<{\r\n    isInvalid: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 12px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    overflow-wrap: break-word;\r\n    height: 100px;//calc(100% - 4px);\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    background-color: #ffffff8b;\r\n    ${props => !props.isInvalid ? '' : css`\r\n        background-color: #ffe8628a;\r\n    `}\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    padding: 0 0 0 4px;\r\n    vertical-align: top;\r\n    margin: 5px 0 0 6px;\r\n`;\r\nconst _Var = styled.span`\r\n    color: #e70013;\r\n`;\r\nconst _Sig = styled.span`\r\n    color: #3333339d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorBehiviorMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [isVector, hasDecayParam, hasGravityParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.BehaviorParamType.VEC_X),\r\n            list.includes(ParamUtil.ModulateParamType.DECAY_RATE),\r\n            list.includes(ParamUtil.ModulateParamType.GRAVITY_VAL)\r\n        ]\r\n    }, [node]);\r\n\r\n    const exchangeElements = (flag: boolean, listPos: number,\r\n        trueParamElements: LogicUtil.NodeParamItem[],\r\n        falseParamElements: LogicUtil.NodeParamItem[]\r\n    ) => {\r\n        const size = (flag ? trueParamElements : falseParamElements).length;\r\n        LogicElementUtil.removeChild(node, listPos, size);\r\n\r\n        (flag ? trueParamElements : falseParamElements).forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    const exchangeVectorMethod = () => {\r\n        exchangeElements(!isVector, 3,\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_X, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_Y, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ],\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_RAD, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_LEN, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ]\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            mng.params.splice(listPos, size);\r\n            node.children.splice(listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                mng.params.splice(listPos + i, 0, wrap);\r\n                const newNode = TreeUtil.createNode(wrap, node);\r\n                node.children.splice(listPos + i, 0, newNode);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Vector method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Direction method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={!isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"modulate\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Decay'}\r\n                            width={300}\r\n                            isUse={hasDecayParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDecayParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_RATE,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.9' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Gravity'}\r\n                            width={300}\r\n                            isUse={hasGravityParam}\r\n                            callback={() => {\r\n                                toggleElements(hasGravityParam, !hasDecayParam ? 5 : 7, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_VAL,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.2' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorBehiviorMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype Medhod = 'blank' | 'particle' | 'snake'\r\n\r\nconst EditorVisualMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [drawMethod, hasDisappearParam, hasShrinkParam, hasFlashParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        let drawMethod: Medhod = 'blank';\r\n        if(list.length > 0) {\r\n            drawMethod = list.includes(ParamUtil.VisualParamType.THICKNESS) ? 'snake' : 'particle';\r\n        }\r\n        return [\r\n            drawMethod,\r\n            list.includes(ParamUtil.EffectParamType.DISAPPEAR_START),\r\n            list.includes(ParamUtil.EffectParamType.SHRINK_START),\r\n            list.includes(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME)\r\n        ]\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    const addElements = (paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        paramElements.forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n    const removeElements = (elementNameList: string[]) => {\r\n        const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        elementNameList.forEach((name) => {\r\n            mng.params.forEach((param, i) => {\r\n                if((param.data as LogicUtil.NodeParamItem).name === name) {\r\n                    LogicElementUtil.removeChild(node, i, 1);\r\n                }\r\n            });\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam || hasFlashParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'None'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'blank'}\r\n                            callback={() => {\r\n                                mng.params.length = 0;\r\n                                node.children.length = 0;\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Snake Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'snake'}\r\n                            callback={() => {\r\n                                removeElements([\r\n                                    ParamUtil.VisualParamType.RADIUS\r\n                                ]);\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.THICKNESS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Particle Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'particle'}\r\n                            callback={() => {\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.RADIUS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '20' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"effect\"\r\n            isEnable={!isModify && drawMethod !== 'blank'}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Disappear'}\r\n                            width={300}\r\n                            isUse={hasDisappearParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDisappearParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.DISAPPEAR_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Shrink'}\r\n                            width={300}\r\n                            isUse={hasShrinkParam}\r\n                            callback={() => {\r\n                                toggleElements(hasShrinkParam, !hasDisappearParam ? 5 : 6, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.SHRINK_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Flash'}\r\n                            width={300}\r\n                            isUse={hasFlashParam}\r\n                            callback={() => {\r\n                                toggleElements(hasFlashParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_APPEAR_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_HIDE_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorVisualMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInheritConnMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeConnectManager;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Inherit',\r\n                        callback: () => {\r\n                            const wrap: LogicUtil.WrapElement = {\r\n                                type: 'connector',\r\n                                data: null\r\n                            }\r\n                            mng.inherits.push(wrap);\r\n                            const newNode = TreeUtil.createNode(wrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorInheritConnector = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, invalidate, setModify, isModify, removeSelf, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const [condition, setCondition] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [identify, setIdentify] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [method, setMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [depend, setDepend] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n        setMethod({ ...method, value: param.method });\r\n        setDepend({ ...depend, value: param.depend });\r\n        setIdentify({ ...identify, value: param.id });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n            // 派生識別名（自動命名）の初期値を取得\r\n            const defaultName = LogicElementUtil.getNumberingOnPrefixName('id_', node.parent as TreeUtil.ElementNode);\r\n            setIdentify({ ...identify, value: defaultName });\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const isCreate = method.value === 'create';\r\n\r\n    const hasFieldNode = useMemo(() => {\r\n        return LogicElementUtil.getInnerNode(node, 'inhfld-mng') != null;\r\n    }, [node]);\r\n\r\n    /** 引用するロジックリスト */\r\n    const logicList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return inheritMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    /** 同階層の既存のインヘリットIDを取得（重複チェックに使用） */\r\n    const idList = useMemo(() => {\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    const initConnectorNode = (param: LogicUtil.NodeInheritConnector) => {\r\n        param.mngs = [];\r\n        node.children = [];\r\n        param.mngs.push({\r\n            type: 'extend-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        param.mngs.push({\r\n            type: 'send-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        if (isCreate) {\r\n            param.mngs.push({\r\n                type: 'inherit-logic',\r\n                data: {\r\n                    mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                } as LogicUtil.NodeInheritItem\r\n            });\r\n        }\r\n        wrap.data = param;\r\n\r\n        param.mngs.forEach(mng => {\r\n            const newNode = TreeUtil.createNode(mng, node);\r\n            const data = (newNode.data as LogicUtil.WrapElement);\r\n            switch (data.type) {\r\n                case 'inherit-logic': {\r\n                    LogicElementUtil.syncTreeElementFromWrap(newNode);\r\n                } break;\r\n                case 'send-mng': {\r\n                    const connector = (newNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.method === 'depend') {\r\n                        console.log('initSendParams');\r\n                        initSendParams(newNode, rootData);\r\n                    }\r\n                } break;\r\n            }\r\n            node.children.push(newNode);\r\n        });\r\n    }\r\n\r\n    const getSendParamList = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement): string[] => {\r\n        const connector = (sendNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = inheritMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement) => {\r\n        const sendParamList = getSendParamList(sendNode, rootData);\r\n        // console.log(sendParamList);\r\n        const wrap = sendNode.data as LogicUtil.WrapElement;\r\n        const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n                sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'inhfld-mng');\r\n        if(fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n\r\n    const isDisable = wrap.data == null ? false : (wrap.data as LogicUtil.NodeInheritConnector).disable ?? false;\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[identify, method, depend]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeInheritConnector = {\r\n                    method: method.value as LogicUtil.InheritMethod,\r\n                    depend: depend.value,\r\n                    id: identify.value,\r\n                    mngs: []\r\n                };\r\n                initConnectorNode(param);\r\n                invalidate();\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                const isChange = param.method !== method.value || param.depend !== depend.value;\r\n                param.method = method.value as LogicUtil.InheritMethod;\r\n                param.depend = depend.value;\r\n                param.id = identify.value;\r\n                wrap.data = param;\r\n\r\n                if (isChange) {\r\n                    initConnectorNode(param);\r\n                }\r\n                invalidate();\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={method}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                // createが選択されたらdependを空にする\r\n                                if (checkable.value === 'create') {\r\n                                    setDepend({ ...depend, value: '' });\r\n                                }\r\n                                setMethod(checkable);\r\n                            }}\r\n                            list={LogicUtil.ConnectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Depend\"\r\n                    isEnabled={method.value === 'depend'}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={depend}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setDepend}\r\n                            list={logicList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            dependency={[method]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => {\r\n                                        return method.value !== 'depend' || ValidateUtil.checkRequired(value);\r\n                                    },\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Identify\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={identify}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setIdentify}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !idList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                0,\r\n                                {\r\n                                    type: 'inhfld-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Disable'}\r\n                        width={300}\r\n                        isUse={isDisable}\r\n                        isEnable={!isModify}\r\n                        callback={() => {\r\n                            const data = (wrap.data as LogicUtil.NodeInheritConnector);\r\n                            if (isDisable) {\r\n                                data.disable = undefined;\r\n                            } else {\r\n                                data.disable = true;\r\n                            }\r\n                            invalidate();\r\n                        }}\r\n                    />}\r\n                />\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'inherit', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Edit local',\r\n                            isEnable: !isModify && !isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Create a clone from the depended inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                                                const logicList = logicMng.defs.map(def => def.data as LogicUtil.NodeLogicItem);\r\n                                                // ディペンドしているロジックを取得\r\n                                                const dependLogic = logicList.find(inherit => inherit.name === depend.value);\r\n                                                if (dependLogic != undefined) {\r\n                                                    const cloneLogic = JSON.parse(JSON.stringify(dependLogic)) as LogicUtil.NodeLogicItem;\r\n                                                    const connectItem: LogicUtil.NodeInheritItem = {\r\n                                                        mngs: cloneLogic.mngs\r\n                                                    };\r\n                                                    const newWrap: LogicUtil.WrapElement = {\r\n                                                        type: 'inherit-logic',\r\n                                                        data: connectItem\r\n                                                    };\r\n                                                    const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                                                    // 子要素の展開\r\n                                                    newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                    const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                    param.method = 'create';\r\n                                                    param.depend = '';\r\n                                                    mappingForm();\r\n                                                }\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Detach global',\r\n                            isEnable: !isModify && isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Detach a clone from the this inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                let rootNode = node;\r\n                                                while (rootNode.parent != null) rootNode = rootNode.parent;\r\n                                                const inheritNode = node.children.find(el => (el.data as LogicUtil.WrapElement).type === 'inherit-logic');\r\n                                                const logicMngNode = rootNode.children.find(el => (el.data as LogicUtil.WrapElement).type === 'logic-mng');\r\n                                                if (logicMngNode == undefined || inheritNode == undefined) return;\r\n                                                const inherit = (inheritNode.data as LogicUtil.WrapElement).data;\r\n                                                const clone = JSON.parse(JSON.stringify((inherit))) as LogicUtil.NodeInheritItem;\r\n                                                // ロジック名（自動命名）を取得\r\n                                                const defaultName = LogicElementUtil.getNumberingOnPrefixName('clone_inherit_', logicMngNode);\r\n                                                const logicItem: LogicUtil.NodeLogicItem = {\r\n                                                    ...clone,\r\n                                                    name: defaultName\r\n                                                };\r\n                                                const newWrap: LogicUtil.WrapElement = {\r\n                                                    type: 'logic-item',\r\n                                                    data: logicItem\r\n                                                };\r\n\r\n                                                // ロジックマネージャに追加\r\n                                                const newNode = LogicElementUtil.addChild(newWrap, logicMngNode);\r\n                                                // 子要素の展開\r\n                                                newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                // 自身（コネクタ）からインヘリット要素を削除\r\n                                                LogicElementUtil.removeChild(node, 2, 1);\r\n\r\n                                                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                param.method = 'depend';\r\n                                                param.depend = logicItem.name;\r\n                                                mappingForm();\r\n\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnector;","import styled, { css } from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport { useContext, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport DrawUtil from \"../../../graphic/drawUtil\";\r\n\r\nconst FRAME_WIDTH = 402;\r\nnamespace DrawableVectorChooser {\r\n\r\n    export const ComponentNormal = (props: {\r\n        addPoint: (x: number, y: number) => void;\r\n        clear: () => void;\r\n        xList: number[];\r\n        yList: number[];\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const screenRate = store.env.screenRate;\r\n\r\n        const [isDraw, setDraw] = useState(false);\r\n        const ref = useRef<HTMLDivElement>(null);\r\n\r\n        const pointJsxList = useMemo(() => {\r\n            return props.xList.map((x, i) => {\r\n\r\n                const y = props.yList[i];\r\n                return (\r\n                    <_Point key={i}\r\n                        x={x}\r\n                        y={y}\r\n                    />\r\n                );\r\n            });\r\n        }, [props.xList.length]);\r\n\r\n\r\n        const putAction = (x: number, y: number) => {\r\n            setDraw(true);\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2);\r\n            store.env.scrollLock = true;\r\n            setStore({ ...store });\r\n        }\r\n\r\n        const moveAction = (x: number, y: number) => {\r\n            if (!isDraw) return;\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            const subX = posX - (props.xList[props.xList.length - 1] + FRAME_WIDTH / 2);\r\n            const subY = posY - (props.yList[props.yList.length - 1] + FRAME_WIDTH / 2);\r\n            const distance = Math.sqrt(subX * subX + subY * subY);\r\n            if (distance > 10) props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2);\r\n        }\r\n\r\n        const releaseAction = () => {\r\n            setDraw(false);\r\n            store.env.scrollLock = false;\r\n            setStore({ ...store });\r\n        }\r\n\r\n        return (<>\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"Point\"\r\n                jsx={\r\n                    <FormUtil.FixedText\r\n                        value={props.xList.length.toString()}\r\n                        isRecordItem\r\n                    />\r\n                }\r\n            />\r\n            <_Frame\r\n                ref={ref}\r\n                onMouseDown={(e) => { putAction(e.clientX, e.clientY) }}\r\n                onMouseMove={(e) => { moveAction(e.clientX, e.clientY) }}\r\n                onMouseUp={releaseAction}\r\n                onMouseLeave={releaseAction}\r\n                onTouchStart={(e) => { putAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchMove={(e) => { moveAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchEnd={releaseAction}\r\n                onTouchCancel={releaseAction}\r\n                isDraw={store.env.scrollLock}\r\n            >\r\n                <_Center />\r\n                {pointJsxList}\r\n            </_Frame>\r\n            <FormUtil.ButtonRecord buttons={[\r\n                {\r\n                    label: 'Clear',\r\n                    isEnable: props.xList.length > 0,\r\n                    callback: props.clear,\r\n                }\r\n            ]} />\r\n        </>);\r\n    }\r\n\r\n    export const ComponentColorable = (props: {\r\n        addPoint: (x: number, y: number, r: number, g: number, b: number) => void;\r\n        clear: () => void;\r\n        xList: number[];\r\n        yList: number[];\r\n        rList: number[];\r\n        gList: number[];\r\n        bList: number[];\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const screenRate = store.env.screenRate;\r\n\r\n        const [isDraw, setDraw] = useState(false);\r\n        const [colorHistory, setColorHistory] = useState<string[]>([]);\r\n\r\n        const [r, setR] = useState(255);\r\n        const [g, setG] = useState(255);\r\n        const [b, setB] = useState(255);\r\n\r\n        const ref = useRef<HTMLDivElement>(null);\r\n\r\n        const pointJsxList = useMemo(() => {\r\n            return props.xList.map((x, i) => {\r\n                const y = props.yList[i];\r\n                const r = props.rList[i];\r\n                const g = props.gList[i];\r\n                const b = props.bList[i];\r\n                const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                    r: Number(r),\r\n                    g: Number(g),\r\n                    b: Number(b),\r\n                    a: 255\r\n                }).substring(0, 7);\r\n                return (\r\n                    <_PointColorable key={i}\r\n                        x={x}\r\n                        y={y}\r\n                        color={colorCode}\r\n                    />\r\n                );\r\n            });\r\n        }, [props.xList.length]);\r\n\r\n\r\n        const colorHistoryJsxList = useMemo(() => {\r\n            return colorHistory.map((history, i) => {\r\n                return (\r\n                    <_ColorItem key={i}\r\n                        color={history}\r\n                        onClick={()=> {\r\n                            const rgba = DrawUtil.convertRgbaFromColorCode(history + 'ff');\r\n                            if (rgba != null) {\r\n                                setR(rgba.r);\r\n                                setG(rgba.g);\r\n                                setB(rgba.b);\r\n                            }\r\n                        }}\r\n                    />\r\n                );\r\n            });\r\n        }, [colorHistory]);\r\n\r\n        const addColorHistory = () => {\r\n            const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                r: Number(r),\r\n                g: Number(g),\r\n                b: Number(b),\r\n                a: 255\r\n            }).substring(0, 7);\r\n            if (colorHistory.find(ch => ch === colorCode) == undefined) {\r\n                colorHistory.push(colorCode);\r\n                if(colorHistory.length > 15) colorHistory.shift();\r\n                setColorHistory(colorHistory.slice());\r\n            }\r\n        };\r\n\r\n        const putAction = (x: number, y: number) => {\r\n            setDraw(true);\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2, r, g, b);\r\n            store.env.scrollLock = true;\r\n            setStore({ ...store });\r\n            addColorHistory();\r\n        }\r\n\r\n        const moveAction = (x: number, y: number) => {\r\n            if (!isDraw) return;\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            const subX = posX - (props.xList[props.xList.length - 1] + FRAME_WIDTH / 2);\r\n            const subY = posY - (props.yList[props.yList.length - 1] + FRAME_WIDTH / 2);\r\n            const distance = Math.sqrt(subX * subX + subY * subY);\r\n            if (distance > 10) props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2, r, g, b);\r\n        }\r\n\r\n        const releaseAction = () => {\r\n            setDraw(false);\r\n            store.env.scrollLock = false;\r\n            setStore({ ...store });\r\n        }\r\n\r\n        const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n            r: Number(r),\r\n            g: Number(g),\r\n            b: Number(b),\r\n            a: 255\r\n        }).substring(0, 7);\r\n        return (<>\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"Point\"\r\n                jsx={\r\n                    <FormUtil.FixedText\r\n                        value={props.xList.length.toString()}\r\n                        isRecordItem\r\n                    />\r\n                }\r\n            />\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"Color\"\r\n                jsx={\r\n                    <_Color type=\"color\" value={colorCode}\r\n                        // disabled={isReadOnly}\r\n                        onChange={(value) => {\r\n                            const rgba = DrawUtil.convertRgbaFromColorCode(value.target.value + 'ff');\r\n                            if (rgba != null) {\r\n                                setR(rgba.r);\r\n                                setG(rgba.g);\r\n                                setB(rgba.b);\r\n                            }\r\n                        }}\r\n                    />\r\n                }\r\n            />\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"History\"\r\n                jsx={<>{colorHistoryJsxList}</>}\r\n            />\r\n            <_Frame\r\n                ref={ref}\r\n                onMouseDown={(e) => { putAction(e.clientX, e.clientY) }}\r\n                onMouseMove={(e) => { moveAction(e.clientX, e.clientY) }}\r\n                onMouseUp={releaseAction}\r\n                onMouseLeave={releaseAction}\r\n                onTouchStart={(e) => { putAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchMove={(e) => { moveAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchEnd={releaseAction}\r\n                onTouchCancel={releaseAction}\r\n                isDraw={store.env.scrollLock}\r\n            >\r\n                <_Center />\r\n                {pointJsxList}\r\n            </_Frame>\r\n            <FormUtil.ButtonRecord buttons={[\r\n                {\r\n                    label: 'Clear',\r\n                    isEnable: props.xList.length > 0,\r\n                    callback: () => {\r\n                        props.clear();\r\n                        setColorHistory([]);\r\n                    },\r\n                }\r\n            ]} />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default DrawableVectorChooser;\r\n\r\nconst _Frame = styled.div<{\r\n    isDraw: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${FRAME_WIDTH}px;\r\n    height: ${FRAME_WIDTH}px;\r\n    margin: 0 0 0 3px;\r\n    background-color: #2e7085;\r\n    ${props => !props.isDraw ? '' : css`\r\n        background-color: #5c9caf;\r\n    `}\r\n    border: 2px solid #800;\r\n    box-sizing: border-box;\r\n    touch-action: none;\r\n`;\r\n\r\nconst _Point = styled.div<{\r\n    x: number;\r\n    y: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x + FRAME_WIDTH / 2 - 5}px;\r\n    top: ${props => props.y + FRAME_WIDTH / 2 - 5}px;\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 10px;\r\n    background-color: #fcfeff9d;\r\n    border: 1px solid #dfe5ff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _PointColorable = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x + FRAME_WIDTH / 2 - 5}px;\r\n    top: ${props => props.y + FRAME_WIDTH / 2 - 5}px;\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 10px;\r\n    background-color: ${props => props.color};\r\n    border: 1px solid #dfe5ff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ColorItem = styled.div<{\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    border-radius: 4px;\r\n    background-color: ${props => props.color};\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n    margin: 6px 0 0 3px;\r\n    width: 15px;\r\n    height: 28px;\r\n`;\r\n\r\nconst _Center = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${FRAME_WIDTH / 2 - 10}px;\r\n    top: ${FRAME_WIDTH / 2 - 10}px;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 20px;\r\n    background-color: #800;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Color = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 3px 0 0 6px;\r\n    width: 100px;\r\n    height: 34px;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSendManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const isDepend = () => {\r\n        const conn = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        return conn.method === 'depend';\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"template\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Connect Position',\r\n                            isEnable: !isDepend(),\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.ConnectParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Set Position',\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.SetParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSendManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFieldMng = () => {\r\n    const { invalidate, node, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Field',\r\n                        callback: () => {\r\n                            // const newWrap: FactoryUtil.WrapNode = FactoryUtil.createParamWrap('field-item',\r\n                            //     { name: '', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                            // );\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'field-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFieldMng;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorExtendMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [hasLoopParam, hasInvokeParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name as ParamUtil.ExtendParam;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.ExtendParamType.LOOP_COUNT),\r\n            list.includes(ParamUtil.ExtendParamType.INVOKE)\r\n        ]\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Loop'}\r\n                            width={300}\r\n                            isUse={hasLoopParam}\r\n                            callback={() => {\r\n                                toggleElement(hasLoopParam, 0, {\r\n                                    type: 'param-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.LOOP_COUNT,\r\n                                        formulaItems: ['var'],\r\n                                        values: [{ type: 'direct', value: '1' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Invoke'}\r\n                            width={300}\r\n                            isUse={hasInvokeParam}\r\n                            callback={() => {\r\n                                toggleElement(hasInvokeParam, hasLoopParam ? 1 : 0, {\r\n                                    type: 'condition-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.INVOKE,\r\n                                        formulaItems: ['var', '=', 'var'],\r\n                                        values: [{ type: 'direct', value: '0' }, { type: 'direct', value: '0' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorExtendMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\n\r\nconst EditorSeedItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [entry, setEntry] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [permit, setPermit] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setEntry({ ...entry, value: param.entry });\r\n        setPermit({ ...permit, value: param.permit })\r\n    };\r\n\r\n    /** 既存のシード名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    // 引用するロジックリスト\r\n    const logicNameList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const logicMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return logicMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    const getSendParamList = (): LogicUtil.NodeArgumentItem[] => {\r\n        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n        const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = logicMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return arg.data as LogicUtil.NodeArgumentItem;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = () => {\r\n        const sendParamList = getSendParamList();\r\n        const sendNode = LogicElementUtil.getInnerNode(node, 'interface-mng', 'seedsend-mng') as TreeUtil.ElementNode;\r\n        const params = ((sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param.name)) {\r\n                const isArray = param.valueType === 'array';\r\n                const paramWrap = LogicElementUtil.createParamWrap('seedsend-item',\r\n                    {\r\n                        name: param.name,\r\n                        formulaItems: ['var'],\r\n                        values: !isArray ? [{ type:  'direct', value: '0' }] : [{ type:  'array', value: '' }],\r\n                        isArray: isArray ? true : undefined\r\n                    }\r\n                );\r\n                params.push(paramWrap);\r\n            }\r\n        });\r\n        LogicElementUtil.syncTreeElementFromWrap(sendNode);\r\n    }\r\n\r\n    const getDefaultSeedMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'interface-mng',\r\n                data: {\r\n                    mngs: [\r\n                        {\r\n                            type: 'seedarg-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeSeedArgManager\r\n                        },\r\n                        {\r\n                            type: 'seedsend-mng',\r\n                            data: {\r\n                                params: []\r\n                            } as LogicUtil.NodeSeedSendManager\r\n                        },\r\n                    ]\r\n                } as LogicUtil.NodeInterfaceMng\r\n            },\r\n            {\r\n                type: 'thumbnail-mng',\r\n                data: {\r\n                    items: []\r\n                } as LogicUtil.NodeThumnailManager\r\n            },\r\n            {\r\n                type: 'sample-mng',\r\n                data: {\r\n                    samples: []\r\n                } as LogicUtil.NodeSampleManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, entry, permit]}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSeedItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    entry: entry.value,\r\n                    permit: permit.value as LogicUtil.PermitType,\r\n                    mngs: getDefaultSeedMngs()\r\n                };\r\n                wrap.data = element;\r\n\r\n                LogicElementUtil.syncTreeElementFromWrap(node);\r\n                // 参照しているロジックの引数をSendに設定\r\n                initSendParams();\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedItem;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.permit = permit.value as LogicUtil.PermitType;\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 24),\r\n                                    errorType: \"length\"\r\n                                },\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Entry\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={entry}\r\n                            width={200}\r\n                            // 更新時は編集できない\r\n                            isReadOnly={!isModify || wrap.data != null}\r\n                            setCheckable={setEntry}\r\n                            list={logicNameList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Permit\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={permit}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setPermit}\r\n                            list={LogicUtil.PermitTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'seed', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedItem;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext as LogicTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorThumbnailMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(LogicTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeThumnailManager;\r\n\r\n    const hasSample = useMemo(() => {\r\n        const sampleMngNode = LogicElementUtil.getInnerNode(node.parent as TreeUtil.ElementNode, 'sample-mng') as TreeUtil.ElementNode;\r\n        return sampleMngNode.children.length as number > 0;\r\n    }, []);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            // isEnable={hasSample}\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Thumbnail',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'thumbnail-item',\r\n                                data: null\r\n                            }\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport Particle from \"../../../../graphic/particle\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst WND_SIZE = 100;\r\n\r\nconst EditorThumbnailItem = () => {\r\n    const { rootData, node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n    const data = wrap.data as LogicUtil.NodeThumbnailItem;\r\n\r\n\r\n    const seedWrap = node.parent?.parent?.data as LogicUtil.WrapElement;\r\n    const sampleMng = LogicElementUtil.getInnerWrap(seedWrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n    const samples = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [urls, setUrls] = useState<string[]>([]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n        setName({ ...name, value: param.name });\r\n        setFrame({ ...frame, value: param.frame.toString() });\r\n    };\r\n    \r\n    /** 既存のサムネイル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n            setTimeout(() => {\r\n                const urls: string[] = [];\r\n                samples.forEach((sample, i) => {\r\n                    urls.push(getThumbnailURL(data.frame, i));\r\n                });\r\n                setUrls(urls);\r\n            }, 1);\r\n        }\r\n    }, [node]);\r\n\r\n    const getSeedValueMap = (sampleNo: number): PreviewUtil.ValueMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ValueMap[] = [];\r\n        argMng.args.forEach((wrap, i) => {\r\n            const item = wrap.data as LogicUtil.NodeSeedArgItem;\r\n            if(!item.isArray) {\r\n                const name = item.name;\r\n                const value = Number(samples[sampleNo].values[i]);\r\n                argMap.push( { name, value });\r\n            }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams\r\n        .filter(item => !item.isArray)\r\n        .map(item => {\r\n            return { name: item.name, value: PreviewUtil.convertParamsToValue(item.name, sendParams, argMap) ?? 0 }\r\n        });\r\n    }\r\n    const getSeedArrayMap = (sampleNo: number): PreviewUtil.ArrayMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ArrayMap[] = [];\r\n        argMng.args.forEach((wrap, i) => {\r\n            const item = wrap.data as LogicUtil.NodeSeedArgItem;\r\n            if(item.isArray) {\r\n                const name = item.name;\r\n                const array = samples[sampleNo].values[i].split(',').map(v => Number(v));\r\n                argMap.push( { name, array });\r\n            }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams\r\n        .filter(item => item.isArray)\r\n        .map(item => {\r\n            return { name: item.name, array: PreviewUtil.convertParamsToArray(item.name, sendParams, argMap) ?? [] }\r\n        });\r\n    }\r\n\r\n    const getThumbnailURL = (targetFrame: number, sampleNo: number) => {\r\n        console.log('create start!');\r\n        const owner: Particle.Instance[] = [];\r\n\r\n        let frameCnt = 0;\r\n        do {\r\n            if (frameCnt === 0) {\r\n                const seed = (node.parent?.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n                const logicManager = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                const logic = logicManager.defs.find(logic => (logic.data as LogicUtil.NodeLogicItem).name === seed.entry);\r\n                if (logic == undefined) break;\r\n\r\n                const sendValueMapList = getSeedValueMap(sampleNo);\r\n                const sendArrayMapList = getSeedArrayMap(sampleNo);\r\n                owner.push(new Particle.Instance(\r\n                    PreviewUtil.buildLogicProps(owner, logic.data, rootData, sendValueMapList, sendArrayMapList))\r\n                );\r\n            }\r\n\r\n            if (frameCnt === targetFrame) {\r\n                return CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                });\r\n            }\r\n\r\n            // パーティクルの更新\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                particle.update();\r\n            }\r\n\r\n            // 死滅したパーティクルの削除\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frameCnt > 500 || owner.length > 3000) break;\r\n            frameCnt++;\r\n        } while (owner.length > 0);\r\n        return '';\r\n    }\r\n\r\n    const pictureJsxList = useMemo(() => {\r\n        const sampleMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n        return sampleMng.samples.map((wrap, i) => {\r\n            const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n\r\n            const url = urls[i];\r\n            const imgJsx = url == undefined ? <></> : <_IMG src={urls[i]} />;\r\n            return (\r\n                <_SampleDiv key={i}>-\r\n                    <_SampleName>{sample.name}</_SampleName>\r\n                    <_CanvasDiv>\r\n                        {imgJsx}\r\n                    </_CanvasDiv>\r\n                </_SampleDiv>\r\n            );\r\n        });\r\n    }, [node, urls]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, frame]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeThumbnailItem = {\r\n                    name: name.value,\r\n                    frame: Number(frame.value),\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n                param.name = name.value;\r\n                param.frame = Number(frame.value);\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"preview\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {pictureJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailItem;\r\n\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport DrawUtil from \"../../../graphic/drawUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport DrawableVectorChooser from \"./drawableVectorChooser\";\r\n\r\nnamespace LogicFormUtil {\r\n\r\n    export const buildPreviewForms = (\r\n        isReadOnly: boolean,\r\n        argumentList: LogicUtil.NodeSeedArgItem[],\r\n        formgrpList: LogicUtil.NodeFromGrpItem[],\r\n        formList: FormUtil.CheckableValue[],\r\n        setFormList: ((formList: FormUtil.CheckableValue[]) => void)\r\n    ): JSX.Element[] => {\r\n        /** 入力フォームのJSX */\r\n        const formJsxList: JSX.Element[] = [];\r\n        const usedGrps: string[] = [];\r\n        formList.forEach((form, i) => {\r\n            const argument = argumentList[i];\r\n            const formgrp = formgrpList.find(grp => grp.args.includes(argument.name));\r\n\r\n            // フォームグループが設定されている場合、独自の入力UIを表示する\r\n            if (formgrp != undefined) {\r\n                // 設定済みであれば追加しない\r\n                if (usedGrps.includes(formgrp.name)) return 1;\r\n                // 利用済みリストに追加\r\n                usedGrps.push(formgrp.name);\r\n                const targetForms: number[] = [];\r\n                argumentList.forEach((arg, j) => {\r\n                    if (formgrp.args.includes(arg.name)) {\r\n                        targetForms.push(j);\r\n                    }\r\n                });\r\n                switch (formgrp.method) {\r\n                    case 'color': {\r\n                        const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                            r: Number(formList[targetForms[0]].value),\r\n                            g: Number(formList[targetForms[1]].value),\r\n                            b: Number(formList[targetForms[2]].value),\r\n                            a: 255\r\n                        }).substring(0, 7);\r\n                        // console.log(colorCode);\r\n                        formJsxList.push(<div key={i}>\r\n                            <FormUtil.Record\r\n                                jsx={\r\n                                    <_Message>{formgrp.name}: <_Type>color </_Type><_Range>({0} ～ {255} respectively)</_Range></_Message>\r\n                                }\r\n                            />\r\n                            <FormUtil.Record\r\n                                jsx={<>\r\n                                    {targetForms.map((formIndex, j) => {\r\n                                        return (\r\n                                            <FormUtil.TextField\r\n                                                key={formIndex}\r\n                                                width={72}\r\n                                                marginLeft={j === 0 ? 5 : 4}\r\n                                                isNumber\r\n                                                isReadOnly={isReadOnly}\r\n                                                checkable={formList[formIndex]}\r\n                                                setCheckable={() => {\r\n                                                    setFormList(formList.slice());\r\n                                                }}\r\n                                                validates={[\r\n                                                    {\r\n                                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                        errorType: \"required\"\r\n                                                    },\r\n                                                    {\r\n                                                        checker: (value) => ValidateUtil.checkNumberRange(value, argument.min as number, argument.max as number),\r\n                                                        errorType: 'value'\r\n                                                    }\r\n                                                ]}\r\n                                            />\r\n                                        );\r\n                                    })}\r\n                                    <_Color type=\"color\" value={colorCode}\r\n                                        disabled={isReadOnly}\r\n                                        onChange={(value) => {\r\n                                            const rgba = DrawUtil.convertRgbaFromColorCode(value.target.value + 'ff');\r\n                                            if (rgba != null) {\r\n                                                formList[targetForms[0]].value = rgba.r.toString();\r\n                                                formList[targetForms[1]].value = rgba.g.toString();\r\n                                                formList[targetForms[2]].value = rgba.b.toString();\r\n                                            }\r\n                                            setFormList(formList.slice());\r\n                                        }}\r\n                                    />\r\n                                </>}\r\n                            />\r\n                        </div>);\r\n                    } break;\r\n                    case 'draw': {\r\n                        const xValue = formList[targetForms[0]].value;\r\n                        const yValue = formList[targetForms[1]].value;\r\n                        const xList = (xValue === '' ? [] : xValue.split(',').map(v => Number(v)));\r\n                        const yList = (xValue === '' ? [] : yValue.split(',').map(v => Number(v)));\r\n                        formJsxList.push(<div key={i}>\r\n                            <FormUtil.Record\r\n                                jsx={\r\n                                    <_Message>{formgrp.name}: <_Type>point </_Type><_Range>(～ {255} drawing)</_Range></_Message>\r\n                                }\r\n                            />\r\n                            <DrawableVectorChooser.ComponentNormal\r\n                                addPoint={(x, y) => {\r\n                                    xList.push(x);\r\n                                    yList.push(y);\r\n                                    formList[targetForms[0]].value = xList.join(',');\r\n                                    formList[targetForms[1]].value = yList.join(',');\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                clear={() => {\r\n                                    formList[targetForms[0]].value = '';\r\n                                    formList[targetForms[1]].value = '';\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                xList={xList}\r\n                                yList={yList}\r\n                            />\r\n                        </div>);\r\n                    } break;\r\n                    case 'draw-colorable': {\r\n                        const xValue = formList[targetForms[0]].value;\r\n                        const yValue = formList[targetForms[1]].value;\r\n                        const rValue = formList[targetForms[2]].value;\r\n                        const gValue = formList[targetForms[3]].value;\r\n                        const bValue = formList[targetForms[4]].value;\r\n                        const xList = (xValue === '' ? [] : xValue.split(',').map(v => Number(v)));\r\n                        const yList = (xValue === '' ? [] : yValue.split(',').map(v => Number(v)));\r\n                        const rList = (rValue === '' ? [] : rValue.split(',').map(v => Number(v)));\r\n                        const gList = (gValue === '' ? [] : gValue.split(',').map(v => Number(v)));\r\n                        const bList = (bValue === '' ? [] : bValue.split(',').map(v => Number(v)));\r\n                        formJsxList.push(<div key={i}>\r\n                            <FormUtil.Record\r\n                                jsx={\r\n                                    <_Message>{formgrp.name}: <_Type>point </_Type><_Range>(～ {255} drawing)</_Range></_Message>\r\n                                }\r\n                            />\r\n                            <DrawableVectorChooser.ComponentColorable\r\n                                addPoint={(x, y, r, g, b) => {\r\n                                    xList.push(x);\r\n                                    yList.push(y);\r\n                                    rList.push(r);\r\n                                    gList.push(g);\r\n                                    bList.push(b);\r\n                                    formList[targetForms[0]].value = xList.join(',');\r\n                                    formList[targetForms[1]].value = yList.join(',');\r\n                                    formList[targetForms[2]].value = rList.join(',');\r\n                                    formList[targetForms[3]].value = gList.join(',');\r\n                                    formList[targetForms[4]].value = bList.join(',');\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                clear={() => {\r\n                                    formList[targetForms[0]].value = '';\r\n                                    formList[targetForms[1]].value = '';\r\n                                    formList[targetForms[2]].value = '';\r\n                                    formList[targetForms[3]].value = '';\r\n                                    formList[targetForms[4]].value = '';\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                xList={xList}\r\n                                yList={yList}\r\n                                rList={rList}\r\n                                gList={gList}\r\n                                bList={bList}\r\n                            />\r\n                        </div>);\r\n                    } break;\r\n                }\r\n            } else {\r\n                let labelName = argument.name;\r\n                if (argument.disp != undefined) labelName = argument.disp;\r\n                formJsxList.push(<div key={i}>\r\n                    <FormUtil.Record\r\n                        jsx={\r\n                            <_Message>{labelName}: <_Type>number </_Type><_Range>({argument.min} ～ {argument.max})</_Range></_Message>\r\n                        }\r\n                    />\r\n                    <FormUtil.Record\r\n                        jsx={<>\r\n                            <FormUtil.TextField\r\n                                width={142}\r\n                                marginLeft={6}\r\n                                isNumber\r\n                                isReadOnly={isReadOnly}\r\n                                step={argument.step}\r\n                                checkable={form}\r\n                                setCheckable={() => {\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, argument.min as number, argument.max as number),\r\n                                        errorType: 'value'\r\n                                    }\r\n                                ]}\r\n                            />\r\n                            <_Tsumami type=\"range\" value={Number(form.value)} min={argument.min} max={argument.max} step={argument.step}\r\n                                disabled={isReadOnly}\r\n                                onChange={(value) => {\r\n                                    formList[i] = { ...form, value: value.target.value };\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                            />\r\n                        </>}\r\n                    />\r\n                </div>);\r\n            }\r\n        });\r\n        return formJsxList;\r\n    }\r\n}\r\n\r\nexport default LogicFormUtil;\r\n\r\n\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    overflow: hidden;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Type = styled.span`\r\n    color: #c10000;\r\n    font-weight: 600;\r\n`;\r\nconst _Range = styled.span`\r\n    color: #423e84fb;\r\n`;\r\n\r\nconst _Tsumami = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 11px 0 0 6px;\r\n    width: calc(100% - 160px);\r\n`;\r\n\r\nconst _Color = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 3px 0 0 6px;\r\n    width: 100px;\r\n    height: 34px;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactDetArgumentMng from \"../detail/logic/editorArgumentMng\";\r\nimport EditorArgumentItem from \"../detail/logic/editorArgumentItem\";\r\nimport FactDetSeedMng from \"../detail/seed/editorSeedMng\";\r\nimport EditorLogicMng from \"../detail/logic/editorLogicMng\";\r\nimport EditorLogicItem from \"../detail/logic/editorLogicItem\";\r\nimport EditorParamItem from \"../detail/logic/editorParamItem\";\r\nimport FactDetBehiviorMng from \"../detail/logic/editorBehiviorMng\";\r\nimport EditorVisualMng from \"../detail/logic/editorVisualMng\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport EditorInheritConnMng from \"../detail/logic/editorInheritConnMng\";\r\nimport EditorInheritConnector from \"../detail/logic/editorInheritConnector\";\r\nimport EditorSendManager from \"../detail/logic/editorSendManager\";\r\nimport EditorFieldMng from \"../detail/logic/editorFieldMng\";\r\nimport EditorExtendMng from \"../detail/logic/editorExtendMng\";\r\nimport EditorSeedItem from \"../detail/seed/editorSeedItem\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"./logicElementUtil\";\r\nimport EditorThumbnailMng from \"../detail/seed/editorThumbnailMng\";\r\nimport EditorThumbnailItem from \"../detail/seed/editorThumbnailItem\";\r\nimport EditorSampleItem from \"../detail/seed/editorSampleItem\";\r\nimport EditorSampleMng from \"../detail/seed/editorSampleMng\";\r\nimport EditorInterfaceManager from \"../detail/seed/editorInterfaceManager\";\r\nimport EditorSeedArgMng from \"../detail/seed/editorSeedArgMng\";\r\nimport EditorSeedArgItem from \"../detail/seed/editorSeedArgItem\";\r\nimport EditorSeedSendMng from \"../detail/seed/editorSeedSendMng\";\r\nimport EditorFormgrpItem from \"../detail/seed/editorFormgrpItem\";\r\nimport EditorFormgrpMng from \"../detail/seed/editorFormgrpMng\";\r\n\r\nnamespace LogicUtil {\r\n\r\n    export type DetailArgs = {\r\n        rootData: LogicUtil.WrapElement;\r\n        node: TreeUtil.ElementNode;\r\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\r\n        invalidate: () => void;\r\n        isModify: boolean;\r\n        setModify: (isModify: boolean) => void;\r\n        // setRootData: React.Dispatch<React.SetStateAction<WrapElement>>;\r\n        setRootData: (rootData: WrapElement) => void;\r\n        removeSelf: () => void;\r\n    }\r\n\r\n    /**\r\n     * 変数名チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkFieldName = (str: string) => {\r\n        // 1文字目が数値でないこと\r\n        const isNoHeadNumber = !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].\r\n            includes(str.substring(0, 1));\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyz_';\r\n        return isNoHeadNumber && ValidateUtil.checkIncludesChars(str, list);\r\n    }\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'seed-mng' |\r\n        'logic-mng' |\r\n        'seed-item' |\r\n        'logic-item' |\r\n        'argument-mng' |\r\n        'argument-item' |\r\n        'field-mng' |\r\n        'field-item' |\r\n        'visual-mng' |\r\n        'behavior-mng' |\r\n        'inhfld-mng' |\r\n        'extend-mng' |\r\n        'inherit-mng' |\r\n        'connector' |\r\n        'inherit-logic' |\r\n        'send-mng' |\r\n        'send-item' |\r\n        'param-item' |\r\n        'condition-item' |\r\n        'interface-mng' |\r\n        'sample-mng' |\r\n        'sample-item' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-item' |\r\n        'seedarg-mng' |\r\n        'seedsend-mng' |\r\n        'seedarg-item' |\r\n        'seedsend-item' |\r\n        'formgrp-mng' |\r\n        'formgrp-item'\r\n        ;\r\n\r\n    export const ArgTypes = ['number', 'array'] as const;\r\n    export type ArgumentType = typeof ArgTypes[number];\r\n\r\n    export const ParamInputTypes = ['direct', 'array', 'constant', 'argument', 'self', 'field', 'array.len', 'array.itr'] as const;\r\n    export type ParamInputType = typeof ParamInputTypes[number];\r\n\r\n    export const ConnectTypes = ['create', 'depend'] as const;\r\n    export type InheritMethod = typeof ConnectTypes[number];\r\n\r\n    export const PermitTypes = ['develop', 'private', 'release'] as const;\r\n    export type PermitType = typeof PermitTypes[number];\r\n\r\n    export const FromGrpMedhods = ['color', 'draw', 'draw-colorable'] as const;\r\n    export type FromGrpMethod = typeof FromGrpMedhods[number];\r\n\r\n    export type ParamProps = {\r\n        type: ParamInputType;\r\n        value: string;\r\n    }\r\n\r\n    export type WrapElement = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        seedMng: WrapElement;\r\n        logicMng: WrapElement;\r\n    }\r\n    export type NodeSeedManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicItem = {\r\n        name: string;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInterfaceMng = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInheritItem = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeParamManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeParamItem = {\r\n        name: string;\r\n        formulaItems: string[];\r\n        values: ParamProps[];\r\n        isArray?: boolean;\r\n    }\r\n\r\n    export type NodeArgumentItem = {\r\n        name: string;\r\n        valueType: ArgumentType;\r\n    }\r\n    export type NodeThumbnailItem = {\r\n        name: string;\r\n        frame: number;\r\n    }\r\n    export type NodeArgumentManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeFieldManager = {\r\n        fields: WrapElement[];\r\n    }\r\n    export type NodeSampleManager = {\r\n        samples: WrapElement[];\r\n    }\r\n    export type NodeSampleItem = {\r\n        name: string;\r\n        values: string[];\r\n    }\r\n\r\n    // export type NodeExtendManager = {\r\n    //     mngs: WrapElement[];\r\n    // }\r\n    export type NodeConnectManager = {\r\n        inherits: WrapElement[];\r\n    }\r\n    export type NodeInheritConnector = {\r\n        method: InheritMethod;\r\n        depend: string;\r\n        id: string;\r\n        disable?: boolean;\r\n        mngs: WrapElement[];\r\n    }\r\n\r\n    export type NodeSeedItem = {\r\n        name: string;\r\n        disp?: string;\r\n        entry: string;\r\n        permit: PermitType;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeThumnailManager = {\r\n        items: WrapElement[];\r\n    }\r\n    export type NodeSeedArgManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeSeedSendManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeSeedArgItem = {\r\n        name: string;\r\n        disp?: string;\r\n        isArray?: boolean;\r\n        min?: number;\r\n        max?: number;\r\n        step?: number;\r\n        defval?: string;\r\n        isPosX?: boolean;\r\n    }\r\n    export type NodeFromgrpManager = {\r\n        defines: WrapElement[];\r\n    }\r\n    export type NodeFromGrpItem = {\r\n        name: string;\r\n        method: FromGrpMethod;\r\n        args: string[];\r\n    }\r\n\r\n    const COLOR_ROOT = '#a1a1a1';\r\n    const COLOR_METHOD = '#cca67b';\r\n    const COLOR_MNG = '#37a2bd';\r\n    const COLOR_LIST = '#b85f5f';\r\n    const COLOR_ITEM = '#ae628c';\r\n    const COLOR_DISABLE = '#685b79';\r\n    const COLOR_PARAM = '#8dae62';\r\n    const COLOR_FIELD = '#cec256';\r\n    const COLOR_THUMBNAIL = '#8283be';\r\n    const COLOR_CONDITION = '#56ce7e';\r\n\r\n    export const getNodeDisplayJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapElement;\r\n        switch (wrap.type) {\r\n            case 'root': {\r\n                return <_Category backgroundColor={COLOR_ROOT}>Library</_Category>;\r\n            }\r\n            case 'seed-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Seed Manager</_Category>;\r\n            }\r\n            case 'logic-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Logic Manager</_Category>;\r\n            }\r\n            case 'visual-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Visual</_Category>;\r\n            }\r\n            case 'extend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Extend</_Category>;\r\n            }\r\n            case 'seed-item': {\r\n                let detailJsx = <>...</>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedItem;\r\n                    detailJsx = <span>{data.name}&nbsp;<_Span color=\"#ffe89ba6\">entry:&nbsp;</_Span><_Field>{data.entry}</_Field></span>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Seed</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n\r\n                </>;\r\n            }\r\n            case 'logic-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Logic</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-logic': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Logic</_Category>;\r\n            }\r\n            case 'argument-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'inhfld-mng':\r\n            case 'field-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Field Manager</_Category>;\r\n            }\r\n            case 'behavior-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Behavior</_Category>;\r\n            }\r\n            case 'inherit-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Inherit Manager</_Category>;\r\n            }\r\n            case 'connector': {\r\n                let detailJsx = <span>...</span>;\r\n                let color = COLOR_ITEM;\r\n                let isDisable = false;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeInheritConnector;\r\n                    detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}</_Span></span>;\r\n                    if (data.method === 'depend') {\r\n                        detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}:&nbsp;</_Span><_Field>{data.depend}</_Field></span>;\r\n                    }\r\n                    if (data.disable ?? false) {\r\n                        color = COLOR_DISABLE;\r\n                        isDisable = true;\r\n                    }\r\n                }\r\n                return (<>\r\n                    <_Category backgroundColor={color} isDisable={isDisable}>Inherit</_Category>\r\n                    {detailJsx == undefined ? <></> : <_EditableValue>{detailJsx}</_EditableValue>}\r\n                </>);\r\n            }\r\n            // パラメータ要素\r\n            case 'param-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_PARAM}>Param<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 条件要素\r\n            case 'condition-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_CONDITION}>Condition<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 変数要素\r\n            case 'field-item': {\r\n                let nameJsx = <span>...</span>;\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeParamItem;\r\n                    nameJsx = <_Detail>&nbsp;[{data.name}]</_Detail>;\r\n                    let result: JSX.Element[] = [];\r\n                    let varCnt = 0;\r\n                    data.formulaItems.forEach((formula, i) => {\r\n                        let str = <_Signature key={i}>{formula}</_Signature>;\r\n                        if (formula === 'var') {\r\n                            const v = data.values[varCnt];\r\n                            if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                            else str = <span key={i}>{v.value}</span>;\r\n                            varCnt++;\r\n                        }\r\n                        result.push(str);\r\n                    });\r\n                    detailJsx = <>{result}</>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Field{nameJsx}</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'argument-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeArgumentItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.valueType})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'send-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'thumbnail-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Thumnail Manager</_Category>;\r\n            }\r\n            case 'thumbnail-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeThumbnailItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.frame})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_THUMBNAIL}>Thumbnail</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'sample-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Preset Manager</_Category>;\r\n            }\r\n            case 'sample-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSampleItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Preset</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'interface-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Interface</_Category>;\r\n            }\r\n            case 'seedarg-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'seedarg-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedArgItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.min}～{data.max})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'seedsend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'formgrp-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Group Manager</_Category>;\r\n            }\r\n            case 'formgrp-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeFromGrpItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.method})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Group<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n        }\r\n        return <_Category backgroundColor={'#ffffff'}>XXXXX</_Category>;\r\n    }\r\n\r\n    export const getTypeName = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return '';\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return 'Root';\r\n            case 'seed-mng': return 'Seed Manager';\r\n            case 'logic-mng': return 'Logic Manager';\r\n            case 'seed-item': return 'Seed Item';\r\n            case 'logic-item': return 'Logic Item';\r\n            case 'argument-mng': return 'Argument Manager';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'Field Manager';\r\n            case 'field-item': return 'Field Item';\r\n            case 'visual-mng': return 'Visual Manager';\r\n            case 'seedarg-item':\r\n            case 'argument-item': return 'Argument Item';\r\n            case 'extend-mng': return 'Extend Manager';\r\n            case 'behavior-mng': return 'Behavior Manager';\r\n            case 'inherit-mng': return 'Inherit Manager';\r\n            case 'connector': return 'Inherit Connector';\r\n            case 'inherit-logic': return 'Inherit Logic';\r\n            case 'send-mng': return 'Send Manager';\r\n            case 'seedsend-item':\r\n            case 'send-item': return 'Send Item';\r\n            case 'param-item': return 'Param Item';\r\n            case 'condition-item': return 'Condition Item';\r\n            case 'interface-mng': return 'Interface Manager';\r\n            case 'thumbnail-mng': return 'Thumbnail Manager';\r\n            case 'thumbnail-item': return 'Thumbnail Item';\r\n            case 'sample-mng': return 'Preset Manager';\r\n            case 'sample-item': return 'Preset Item';\r\n            case 'seedarg-mng': return 'Argument Manager';\r\n            case 'seedsend-mng': return 'Send';\r\n            case 'formgrp-mng': return 'Group Manager';\r\n            case 'formgrp-item': return 'Group Item';\r\n        }\r\n    }\r\n\r\n    export const getDetailComponent = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return <></>;\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return <></>;\r\n            case 'seed-mng': return <FactDetSeedMng />;\r\n            case 'logic-mng': return <EditorLogicMng />;\r\n            case 'seed-item': return <EditorSeedItem />;\r\n            case 'logic-item': return <EditorLogicItem />;\r\n            case 'argument-mng': return <FactDetArgumentMng />;\r\n            case 'argument-item': return <EditorArgumentItem />;\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return <EditorFieldMng />;\r\n            case 'visual-mng': return <EditorVisualMng />;\r\n            case 'extend-mng': return <EditorExtendMng />;\r\n            case 'behavior-mng': return <FactDetBehiviorMng />;\r\n            case 'inherit-mng': return <EditorInheritConnMng />;\r\n            case 'connector': return <EditorInheritConnector />;\r\n            case 'inherit-logic': return <EditorLogicItem />;\r\n            case 'send-mng': return <EditorSendManager />;\r\n            case 'field-item':\r\n            case 'param-item':\r\n            case 'condition-item':\r\n            case 'send-item':\r\n            case 'seedsend-item': return <EditorParamItem />;\r\n            case 'interface-mng': return <EditorInterfaceManager />;\r\n            case 'sample-mng': return <EditorSampleMng />;\r\n            case 'sample-item': return <EditorSampleItem />;\r\n            case 'thumbnail-mng': return <EditorThumbnailMng />;\r\n            case 'thumbnail-item': return <EditorThumbnailItem />;\r\n            case 'seedarg-mng': return <EditorSeedArgMng />;\r\n            case 'seedarg-item': return <EditorSeedArgItem />;\r\n            case 'seedsend-mng': return <EditorSeedSendMng />;\r\n            case 'formgrp-item': return <EditorFormgrpItem />;\r\n            case 'formgrp-mng': return <EditorFormgrpMng />;\r\n        }\r\n    }\r\n\r\n    export const getChildrenElementNode = (node: TreeUtil.ElementNode): TreeUtil.ElementNode[] => {\r\n        const wrapNode = node.data as WrapElement;\r\n        const get = (listName: string) => {\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const elementNode = TreeUtil.createNode(wrap, node);\r\n                elementNode.children = getChildrenElementNode(elementNode);\r\n                return elementNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n\r\n    export const getChildrenDataNode = (wrapNode: WrapElement): TreeUtil.DataNode[] => {\r\n        const get = (listName: string) => {\r\n\r\n            return ((wrapNode.data)[listName] as WrapElement[]).map(wrap => {\r\n                const treeNode: TreeUtil.DataNode = {\r\n                    data: wrap,\r\n                    children: getChildrenDataNode(wrap)\r\n                };\r\n                return treeNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as NodeRoot;\r\n                return [\r\n                    { data: node.seedMng, children: getChildrenDataNode(node.seedMng) },\r\n                    { data: node.logicMng, children: getChildrenDataNode(node.logicMng) }\r\n                ];\r\n            }\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n}\r\n\r\nexport default LogicUtil;\r\n\r\nconst _Category = styled.div<{\r\n    backgroundColor: string;\r\n    isDisable?: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: ${props => props.backgroundColor};\r\n    /* width: 100%; */\r\n    ${props => !(props.isDisable ?? false) ? '' : css`\r\n        text-decoration: line-through;\r\n        color: #00054dac;\r\n    `}\r\n    border-radius: 4px 0 0 4px;\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n    border: solid 1px #000000d2;\r\n`;\r\nconst _Detail = styled.span`\r\n    color: #000b69bd;\r\n`;\r\n\r\nconst _EditableValue = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #0c0c0c;\r\n    color: #ebebeb;\r\n    border-radius: 0 4px 4px 0;\r\n    /* width: 100%; */\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n`;\r\nconst _Span = styled.span<{\r\n    color: string;\r\n}>`\r\n    color: ${props => props.color};\r\n`;\r\nconst _ValueType = styled.span`\r\n    color: #fff9d6b9;\r\n`;\r\nconst _Signature = styled.span`\r\n    color: #ffffff78;\r\n`;\r\nconst _Field = styled.span`\r\n    color: #ff2d2d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../util/logicFormUtil\";\r\n\r\nconst EditorSampleItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [paramForms, setParamForms] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSampleItem;\r\n        setName({ ...name, value: param.name });\r\n        setParamForms(param.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のサンプル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const [seedargList, formgrpList]: [LogicUtil.NodeSeedArgItem[], LogicUtil.NodeFromGrpItem[]] = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'seedarg-mng');\r\n        const argInfoList = (argMng.data as LogicUtil.NodeSeedArgManager).\r\n            args.map(arg => {\r\n                return arg.data as LogicUtil.NodeSeedArgItem;\r\n            });\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        const formgrpMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'formgrp-mng');\r\n        if (formgrpMng != null) {\r\n            formgrpList = (formgrpMng.data as LogicUtil.NodeFromgrpManager).\r\n                defines.map(arg => {\r\n                    return arg.data as LogicUtil.NodeFromGrpItem;\r\n                });\r\n        }\r\n        return [argInfoList, formgrpList];\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setParamForms(seedargList.map(arg => {\r\n                let defval = '';\r\n                if (arg.defval != undefined) defval = arg.defval.toString();\r\n                return { value: defval, errors: [] };\r\n            }));\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const formList = useMemo(() => {\r\n        return LogicFormUtil.buildPreviewForms(\r\n            !isModify, seedargList, formgrpList, paramForms, setParamForms\r\n        );\r\n        // return paramForms.map((paramForm, i) => {\r\n        //     const arg = argInfoList[i];\r\n        //     return <FormUtil.FormRecord key={i}\r\n        //         titleLabel={arg.name}\r\n        //         jsx={\r\n        //             <FormUtil.TextField\r\n        //                 width={150}\r\n        //                 isReadOnly={!isModify}\r\n        //                 checkable={paramForm}\r\n        //                 setCheckable={(checkable) => {\r\n        //                     paramForms[i] = checkable;\r\n        //                     setParamForms(paramForms.slice());\r\n        //                 }}\r\n        //                 isNumber\r\n        //                 step={arg.step}\r\n        //                 validates={[\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkRequired(value),\r\n        //                         errorType: \"required\"\r\n        //                     },\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkNumberRange(value, arg.min, arg.max),\r\n        //                         errorType: \"value\"\r\n        //                     },\r\n        //                 ]}\r\n        //             />\r\n        //         }\r\n        //     />\r\n        // });\r\n    }, [paramForms, isModify]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name].concat(paramForms)}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSampleItem = {\r\n                    name: name.value,\r\n                    values: []\r\n                };\r\n                paramForms.forEach((form, i) => {\r\n                    element.values[i] = form.value;\r\n                });\r\n                wrap.data = element;\r\n\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSampleItem;\r\n                param.name = name.value;\r\n                paramForms.forEach((form, i) => {\r\n                    param.values[i] = form.value;\r\n                });\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 22),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {formList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'preset', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSampleMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Preset',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'sample-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSampleManager).samples.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleMng;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInterfaceManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const argMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedarg-mng');\r\n    const sendMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedsend-mng');\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(node.parent as TreeUtil.ElementNode, 'sample-mng');\r\n\r\n    const [hasGroupNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        return [\r\n            list.includes('formgrp-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const hasArgument = (): boolean => {\r\n        return argMngNode.children.length > 0;\r\n    }\r\n\r\n    /**\r\n     * グループ要素の有無を判定\r\n     */\r\n    const hasGroup = () => {\r\n        const groupMngNode = LogicElementUtil.getInnerNode(node, 'formgrp-mng');\r\n        if (groupMngNode == null) return false;\r\n        return groupMngNode.children.length > 0;\r\n    }\r\n\r\n    const execute = () => {\r\n        // const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n        // 既存の引数を削除\r\n        if (hasArgument()) {\r\n\r\n            LogicElementUtil.removeChildAll(argMngNode);\r\n            LogicElementUtil.removeChildAll(sampleMngNode);\r\n        }\r\n\r\n        sendMngNode.children.forEach(child => {\r\n            const send = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem;\r\n            send.formulaItems = ['var'];\r\n            send.values = [{ type: 'argument', value: send.name }];\r\n\r\n            const newArgData: LogicUtil.NodeSeedArgItem = {\r\n                name: send.name,\r\n                step: 1,\r\n                min: -9999,\r\n                max: 9999,\r\n                defval: ''\r\n            }\r\n            const newArgWrap: LogicUtil.WrapElement = {\r\n                type: 'seedarg-item',\r\n                data: newArgData\r\n            };\r\n            const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n            argMng.args.push(newArgWrap);\r\n            argMngNode.children.push(TreeUtil.createNode(newArgWrap, argMngNode));\r\n            invalidate();\r\n        });\r\n    }\r\n\r\n    const initDefaultSetting = () => {\r\n        if (!hasArgument()) {\r\n            execute();\r\n        } else {\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Are you sure you want to delete the existing element?\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        callback: () => {\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Execute',\r\n                        callback: () => {\r\n                            execute();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            setStore({ ...store });\r\n        }\r\n        invalidate();\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Group'}\r\n                        width={300}\r\n                        isUse={hasGroupNode}\r\n                        isEnable={!hasGroup()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasGroupNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'formgrp-mng',\r\n                                    data: {\r\n                                        defines: []\r\n                                    } as LogicUtil.NodeFromgrpManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Initialize Params',\r\n                        callback: initDefaultSetting\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInterfaceManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedArgMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seedarg-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedArgManager).args.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedArgMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorSeedArgItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [min, setMin] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [max, setMax] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [step, setStep] = useState<FormUtil.CheckableValue>({ value: '1', errors: [] });\r\n    const [defval, setDefval] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [isPosX, setPosX] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [isArray, setArray] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    const seedNode = node.parent?.parent?.parent as TreeUtil.ElementNode;\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setMin({ ...min, value: (param.min != undefined) ? param.min.toString() : '' });\r\n        setMax({ ...max, value: (param.max != undefined) ? param.max.toString() : '' });\r\n        setStep({ ...step, value: (param.step != undefined) ? param.step.toString() : '' });\r\n        setDefval({ ...defval, value: (param.defval != undefined) ? param.defval.toString() : ''});\r\n        setPosX({ ...isPosX, value: (param.isPosX ?? false) ? '1' : '' });\r\n        setArray({ ...isArray, value: (param.isArray ?? false) ? '1' : '' });\r\n        // setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, min, max, step, defval]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeSeedArgItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    min: Number(min.value),\r\n                    max: Number(max.value),\r\n                    step: Number(step.value),\r\n                    defval: defval.value === '' ? undefined : defval.value,\r\n                    isPosX: isPosX.value === '' ? undefined : true,\r\n                    isArray: isArray.value === '' ? undefined : true,\r\n                    // valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                wrap.data = param;\r\n                syncArgumentAdd(seedNode as TreeUtil.ElementNode, param);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.min = Number(min.value === '' ? '0' : min.value);\r\n                param.max = Number(max.value === '' ? '0' : max.value);\r\n                param.step = Number(step.value === '' ? '0' : step.value);\r\n                param.defval = defval.value === '' ? undefined : defval.value;\r\n                param.isPosX = isPosX.value === '' ? undefined : true;\r\n                param.isArray = isArray.value === '' ? undefined : true;\r\n                // param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(seedNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 16),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Array\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={isArray}\r\n                            setCheckable={(checkable) => {\r\n                                setArray(checkable);\r\n                                setMin({ ...min, value: '' });\r\n                                setMax({ ...max, value: '' });\r\n                                setStep({ ...step, value: '' });\r\n                                setDefval({ ...defval, value: '' });\r\n                                setPosX({ ...isPosX, value: '' });\r\n                            }}\r\n                            headBlank\r\n                            list={[\r\n                                { labelText: 'Yes', value: '1' }\r\n                            ]}\r\n                        // dependency={[min, max, step, defval, isPosX]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Min\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={min}\r\n                            setCheckable={setMin}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[max, isArray]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) < Number(max.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Max\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={max}\r\n                            setCheckable={setMax}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[min, isArray]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) > Number(min.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Step\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={step}\r\n                            setCheckable={setStep}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[isArray]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Default\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={defval}\r\n                            setCheckable={setDefval}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[isArray]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Position\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={isPosX}\r\n                            setCheckable={setPosX}\r\n                            isEnabled={isArray.value === ''}\r\n                            headBlank\r\n                            list={[\r\n                                { labelText: 'Yes', value: '1' }\r\n                            ]}\r\n                            dependency={[isArray]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'argument', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                                const refers = getArgumentRefers(seedNode, param.name);\r\n                                if (refers.length === 0) {\r\n                                    const curIndex = LogicElementUtil.getCurrentIndex(node);\r\n                                    if (curIndex === -1) throw new Error('[curIndex] is -1.');\r\n                                    syncArgumentDel(seedNode, curIndex);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtonsCallback(node, invalidate, (index, isUpper) => {\r\n                    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n                    const offset = isUpper ? -1 : 1;\r\n                    sampleMng.samples.forEach(wrap => {\r\n                        const values = (wrap.data as LogicUtil.NodeSampleItem).values;\r\n                        const swapNode = values[index];\r\n                        values[index] = values[index + offset];\r\n                        values[index + offset] = swapNode;\r\n                    });\r\n                })}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (seedNode: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    const sendMng = sendMngWrap.data as LogicUtil.NodeSeedSendManager;\r\n    sendMng.params.forEach(wrap => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        param.values.forEach(varItem => {\r\n            if (varItem.type === 'argument' && varItem.value === argName) {\r\n                refers.push(param.name);\r\n            }\r\n        });\r\n    });\r\n    return refers;\r\n}\r\n\r\nexport default EditorSeedArgItem;\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param seedNode Seedノード\r\n*/\r\nconst syncArgumentName = (seedNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    syncFormula((sendMngWrap.data as LogicUtil.NodeParamManager).params);\r\n\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Sample管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentAdd = (seedNode: TreeUtil.ElementNode, arg: LogicUtil.NodeSeedArgItem) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.push((arg.defval ?? 0).toString());\r\n    });\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentDel = (seedNode: TreeUtil.ElementNode, delIndex: number) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.splice(delIndex, 1);\r\n    });\r\n}","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedSendMng = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const getSendParamList = (): string[] => {\r\n    //     const connector = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n    //     const isCreate = connector.method === 'create';\r\n    //     let targetWrap: LogicUtil.WrapElement | null = null;\r\n    //     if (!isCreate) {\r\n    //         const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n    //         const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n    //         const dependItem = inheritMng.defs.find(wrap => {\r\n    //             return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n    //         });\r\n    //         if (dependItem != undefined) targetWrap = dependItem;\r\n    //     } else {\r\n    //         targetWrap = (node.parent?.children[node.parent?.children.length - 1].data as LogicUtil.WrapElement)\r\n    //     }\r\n    //     if (targetWrap != null) {\r\n    //         const argWrap = (targetWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n    //         if (argWrap.type === 'argument-mng') {\r\n    //             return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n    //                 return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n    //             });\r\n    //         }\r\n    //     }\r\n    //     return [];\r\n    // }\r\n\r\n    // const update = () => {\r\n    //     const sendParamList = getSendParamList();\r\n    //     const curSize = node.children.length;\r\n    //     const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n    //     // 不要なパラメータを削除\r\n    //     for (let i = curSize - 1; i >= 0; i--) {\r\n    //         const name = (params[i].data as LogicUtil.NodeParamItem).name;\r\n    //         if (!sendParamList.includes(name)) {\r\n    //             node.children.splice(i, 1);\r\n    //             params.splice(i, 1);\r\n    //         }\r\n    //     }\r\n    //     // 必要な存在しないパラメータを追加\r\n    //     const curParamList = params.map(param => {\r\n    //         return (param.data as LogicUtil.NodeParamItem).name;\r\n    //     });\r\n    //     sendParamList.forEach(param => {\r\n    //         if (!curParamList.includes(param)) {\r\n    //             const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n    //                 { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n    //             );\r\n    //             params.push(paramWrap);\r\n    //             node.children.push(TreeUtil.createNode(paramWrap, node));\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    return (<>\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedSendMng;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorFormgrpItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [groupMethod, setGroupMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [targetList, setTargetList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n        setName({ ...name, value: param.name });\r\n        setGroupMethod({ ...groupMethod, value: param.method });\r\n        setTargetList(param.args.map(arg => {\r\n            return { value: arg, errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const seedargs = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed(node.parent?.parent?.data as LogicUtil.WrapElement, 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        return argMng.args.map(wrap => (wrap.data as LogicUtil.NodeSeedArgItem));\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, groupMethod].concat(targetList)}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeFromGrpItem = {\r\n                    name: name.value,\r\n                    method: groupMethod.value as LogicUtil.FromGrpMethod,\r\n                    args: targetList.map(form => form.value)\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n                param.name = name.value;\r\n                param.method = groupMethod.value as LogicUtil.FromGrpMethod;\r\n                param.args = targetList.map(form => form.value);\r\n                wrap.data = param;\r\n\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 24),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={groupMethod}\r\n                            setCheckable={(checkable) => {\r\n                                const type = checkable.value as LogicUtil.FromGrpMethod;\r\n                                if (type === 'color') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(3).fill({ value: '', errors: [] }));\r\n                                } else if (type === 'draw') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(2).fill({ value: '', errors: [] }));\r\n                                } else if (type === 'draw-colorable') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(5).fill({ value: '', errors: [] }));\r\n                                } else {\r\n                                    setTargetList([]);\r\n                                }\r\n                                setGroupMethod({ ...checkable });\r\n                            }}\r\n                            list={LogicUtil.FromGrpMedhods.map(type => {\r\n                                return { value: type, labelText: type }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n                {targetList.map((target, i) => {\r\n                    let formName = 'Target_';\r\n                    const method = groupMethod.value as LogicUtil.FromGrpMethod;\r\n                    if (method === 'color') {\r\n                        switch (i) {\r\n                            case 0: formName += 'R'; break;\r\n                            case 1: formName += 'G'; break;\r\n                            case 2: formName += 'B'; break;\r\n                        }\r\n                    } else if (method === 'draw') {\r\n                        switch (i) {\r\n                            case 0: formName += 'X'; break;\r\n                            case 1: formName += 'Y'; break;\r\n                        }\r\n                    } else if (method === 'draw-colorable') {\r\n                        switch (i) {\r\n                            case 0: formName += 'X'; break;\r\n                            case 1: formName += 'Y'; break;\r\n                            case 2: formName += 'R'; break;\r\n                            case 3: formName += 'G'; break;\r\n                            case 4: formName += 'B'; break;\r\n                        }\r\n                    } else {\r\n                        formName += `_${i}`;\r\n                    }\r\n                    return (\r\n                        <FormUtil.FormRecord\r\n                            key={i}\r\n                            titleLabel={formName}\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={target}\r\n                                    setCheckable={(checkable) => {\r\n                                        targetList[i] = checkable;\r\n                                        setTargetList(targetList.slice());\r\n                                    }}\r\n                                    list={seedargs\r\n                                        .filter(item => groupMethod.value === 'color' ? !item.isArray : item.isArray)\r\n                                        .map(item => {\r\n                                            return { value: item.name, labelText: item.name }\r\n                                        })}\r\n                                    headBlank\r\n                                    width={250}\r\n                                    isReadOnly={!isModify}\r\n                                    validates={\r\n                                        [\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            },\r\n                                            {\r\n                                                checker: (value) => targetList.find((target, j) => i !== j && target.value === value) == undefined,\r\n                                                errorType: \"relation\"\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                    dependency={targetList}\r\n                                />\r\n                            }\r\n                        />\r\n                    );\r\n                })}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: removeSelf\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFormgrpMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Group',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'formgrp-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeFromgrpManager).defines.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpMng;","import { assert } from \"console\";\r\nimport { Store } from \"../../../../redux/store/store\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../dialog/confirmDialog\";\r\nimport Particle from \"../../../graphic/particle\";\r\nimport StoryUtil from \"../../launcher/util/storyUtil\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport ParamUtil from \"./paramUtil\";\r\n\r\n\r\nnamespace LogicElementUtil {\r\n\r\n    export const getInnerNode = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode | null => {\r\n\r\n        let cur: TreeUtil.ElementNode | null = node;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const target = cur.children.find(child => (child.data as LogicUtil.WrapElement).type === type);\r\n            if (target == undefined) cur = null;\r\n            else cur = target;\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerNodeFixed = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode => {\r\n        const innerNode = getInnerNode(node, ...typeList);\r\n        if (innerNode == null) throw new Error('[innerNode] is null.');\r\n        return innerNode as TreeUtil.ElementNode;\r\n    }\r\n\r\n    export const getInnerWrap = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement | null => {\r\n\r\n        let cur: LogicUtil.WrapElement | null = wrap;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const listName = getListParamName(cur.type);\r\n            if (listName == null) cur = null;\r\n            else {\r\n                const list = cur.data[`${listName}`] as LogicUtil.WrapElement[];\r\n                const target = list.find(child => child.type === type);\r\n                if (target == undefined) cur = null;\r\n                else cur = target;\r\n            }\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerWrapFixed = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement => {\r\n        const innerWrap = getInnerWrap(wrap, ...typeList);\r\n        if (innerWrap == null) throw new Error('[innerWrap] is null.');\r\n        return innerWrap as LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const addChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode) => {\r\n        return insertChild(wrapElement, node, node.children.length);\r\n    }\r\n\r\n    export const insertChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode, listPos: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, 0, wrapElement);\r\n        const newNode = TreeUtil.createNode(wrapElement, node);\r\n        node.children.splice(listPos, 0, newNode);\r\n        return newNode;\r\n    }\r\n\r\n    export const removeChild = (node: TreeUtil.ElementNode, listPos: number, size: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, size);\r\n        node.children.splice(listPos, size);\r\n    }\r\n\r\n    export const removeChildAll = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].length = 0;\r\n        node.children.length = 0;\r\n    }\r\n\r\n    export const isHead = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[0] == node;\r\n    }\r\n\r\n    export const isTail = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[ownerChildren.length - 1] == node;\r\n    }\r\n\r\n    export const getCurrentIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(parentWrap.type);\r\n        if (listName == null || parentWrap.data == null) return -1;\r\n        const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n        const curIndex = list.findIndex(wrap => wrap == node.data);\r\n        return curIndex;\r\n    }\r\n\r\n    const swapOrder = (node: TreeUtil.ElementNode, offset: number) => {\r\n        if (node.parent == null) return;\r\n        const ownerChildren = node.parent.children;\r\n        const wrap = node.parent.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        const ownDataChildren = wrap.data[`${listName}`] as LogicUtil.WrapElement[];\r\n\r\n        let curNo = getCurrentIndex(node);\r\n        if (curNo === -1) return;\r\n\r\n        // ツリーノードの入れ替え\r\n        const swapNode = ownerChildren[curNo];\r\n        ownerChildren[curNo] = ownerChildren[curNo + offset];\r\n        ownerChildren[curNo + offset] = swapNode;\r\n        // データ要素の入れ替え\r\n        const swapData = ownDataChildren[curNo];\r\n        ownDataChildren[curNo] = ownDataChildren[curNo + offset];\r\n        ownDataChildren[curNo + offset] = swapData;\r\n    }\r\n\r\n    export const getSwapButtons = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        ...dependencyMngNodes: TreeUtil.ElementNode[]\r\n    ) => {\r\n        return getSwapButtonsCallback(node, invalidate, (curIndex, isUpper) => {\r\n            if (dependencyMngNodes.length > 0) {\r\n                dependencyMngNodes.forEach(depNode => {\r\n                    swapOrder(depNode.children[curIndex], isUpper ? -1 : 1);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    export const getSwapButtonsCallback = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        callback: (curIndex: number, isUpper: boolean) => void\r\n    ) => {\r\n        const curIndex = getCurrentIndex(node);\r\n        return <>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↑',\r\n                        isEnable: !LogicElementUtil.isHead(node),\r\n                        callback: () => {\r\n                            swapOrder(node, -1);\r\n                            callback(curIndex, true);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↓',\r\n                        isEnable: !LogicElementUtil.isTail(node),\r\n                        callback: () => {\r\n                            swapOrder(node, 1);\r\n                            callback(curIndex, false);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>;\r\n    }\r\n\r\n    /**\r\n     * 同レベル階層に自身ノードの複製を作成する\r\n     * @param node コピー対象のノード\r\n     * @param newName コピー後の名称\r\n     */\r\n    export const replicateSameLevel = (node: TreeUtil.ElementNode, newName: string) => {\r\n        if (node.parent == null) return;\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const cloneBase = wrap.data;\r\n        const cloneDest = JSON.parse(JSON.stringify((cloneBase)));\r\n\r\n        const newWrap: LogicUtil.WrapElement = {\r\n            type: wrap.type,\r\n            data: cloneDest\r\n        };\r\n        const namable = getNamableProps(wrap.type);\r\n        newWrap.data[namable] = newName;\r\n\r\n        // ロジックマネージャに追加\r\n        const newNode = LogicElementUtil.addChild(newWrap, node.parent);\r\n        // 子要素の展開\r\n        newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n    }\r\n\r\n    export const getReplicateButton = (\r\n        node: TreeUtil.ElementNode,\r\n        isEnable: boolean,\r\n        targetElement: string, store: Store,\r\n        setStore: (store: Store) => void,\r\n        invalidate: () => void\r\n    ): JSX.Element => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        return <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[{\r\n                label: 'Replicate',\r\n                isEnable,\r\n                // isEnable: false,\r\n                callback: () => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={`Replicate this ${targetElement}.`}\r\n                        buttons={[\r\n                            {\r\n                                label: 'Cancel',\r\n                                callback: () => {\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Enter',\r\n                                callback: () => {\r\n                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                    const name = wrap.data[namable] as string;\r\n                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                    // mappingForm();\r\n                                    invalidate();\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }\r\n            }]}\r\n        />;\r\n    }\r\n\r\n    export const getListParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return 'defs';\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            // case 'root':\r\n            case 'logic-item': return 'mngs';\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return 'params';\r\n            case 'inherit-mng': return 'inherits';\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return 'args';\r\n            case 'sample-mng': return 'samples';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'fields';\r\n            case 'thumbnail-mng': return 'items';\r\n            case 'formgrp-mng': return 'defines';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getIdentifyParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'argument-item':\r\n            case 'field-item':\r\n            case 'seed-item':\r\n            case 'thumbnail-item':\r\n            case 'seedarg-item':\r\n            case 'sample-item':\r\n            case 'formgrp-item':\r\n            case 'logic-item': return 'name';\r\n            case 'connector': return 'id';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getNamableProps = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'connector': return 'id';\r\n            case 'seed-item':\r\n            case 'argument-item':\r\n            case 'seedarg-item':\r\n            case 'field-item':\r\n            case 'sample-item':\r\n            case 'thumbnail-item':\r\n            case 'logic-item': return 'name';\r\n        }\r\n        throw new Error('Namable props not found.');\r\n    }\r\n\r\n    export const syncTreeElementFromWrap = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        if (listName == null) return;\r\n        (wrap.data[listName] as any[]).forEach(childWrap => {\r\n            const newNode = TreeUtil.createNode(childWrap, node);\r\n            node.children.push(newNode);\r\n            syncTreeElementFromWrap(newNode);\r\n        });\r\n    }\r\n\r\n    export const createParamWrap = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem): LogicUtil.WrapElement => {\r\n        return { type: type, data: paramDataList };\r\n    }\r\n    export const createParamWrapList = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem[]): LogicUtil.WrapElement[] => {\r\n        return paramDataList.map(data => {\r\n            return { type: type, data: data };\r\n        });\r\n    }\r\n\r\n    export const createVisualParams = (): LogicUtil.WrapElement[] => {\r\n        const type = ParamUtil.VisualParamType;\r\n        return createParamWrapList('param-item', [\r\n            { name: type.RADIUS, formulaItems: ['var'], values: [{ type: 'direct', value: '20' }] },\r\n            { name: type.COLOR_R, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_G, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_B, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_A, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n        ]);\r\n    }\r\n\r\n    export const createBehaviorParams = (): LogicUtil.WrapElement[] => {\r\n        const list: LogicUtil.NodeParamItem[] = [];\r\n        const type = ParamUtil.BehaviorParamType;\r\n        list.push({\r\n            name: type.LIMIT,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '30' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        return createParamWrapList('param-item', list);\r\n    }\r\n\r\n    export const getDefaultLogicMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'visual-mng',\r\n                data: {\r\n                    params: createVisualParams()\r\n                } as LogicUtil.NodeParamManager\r\n            },\r\n            {\r\n                type: 'behavior-mng',\r\n                data: {\r\n                    params: createBehaviorParams()\r\n                } as LogicUtil.NodeParamManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    export const getInitialData = (): LogicUtil.WrapElement => {\r\n        return {\r\n            type: 'root',\r\n            data: {\r\n                seedMng: {\r\n                    type: 'seed-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeSeedManager\r\n                } as LogicUtil.WrapElement,\r\n                logicMng: {\r\n                    type: 'logic-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeLogicManager\r\n                } as LogicUtil.WrapElement\r\n            } as LogicUtil.NodeRoot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 同階層の名前パラメータを持つ要素より、既存の名前一覧を取得する。\r\n     * @param node 現在のノード\r\n     * @returns 同階層の既存の名前一覧\r\n     */\r\n    export const getExistNameList = (node: TreeUtil.ElementNode) => {\r\n        const nameList: string[] = [];\r\n        const curWrap = node.data as LogicUtil.WrapElement;\r\n        const nameParam = getIdentifyParamName(curWrap.type);\r\n        const mngWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listParam = getListParamName(mngWrap.type);\r\n        if (listParam == null || nameParam == null) throw Error('List param or identifiy param not found.');\r\n        const list = mngWrap.data[listParam] as LogicUtil.WrapElement[];\r\n        list.forEach(wrap => {\r\n            if (wrap.data != null && curWrap != wrap) {\r\n                nameList.push(wrap.data[nameParam]);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getLogicNameList = (mng: LogicUtil.NodeLogicManager) => {\r\n        const nameList: string[] = [];\r\n        mng.defs.forEach(logic => {\r\n            if (logic.data != null) {\r\n                nameList.push((logic.data as LogicUtil.NodeLogicItem).name);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getParamNameList = (curLogicOwner: LogicUtil.NodeLogicItem) => {\r\n        const nameList: string[] = [];\r\n\r\n        // システム固有のパラメータ名を取得\r\n        ParamUtil.VisualParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.BehaviorParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.SelfParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ExtendParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.EffectParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ModulateParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.Constants.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n\r\n        // 引数のパラメータ名を取得\r\n        const argMng = curLogicOwner.mngs.find(mng => mng.type === 'argument-mng');\r\n        if (argMng != undefined) {\r\n            const args = (argMng.data as LogicUtil.NodeArgumentManager).args;\r\n            args.forEach(arg => {\r\n                if (arg.data != null) {\r\n                    nameList.push((arg.data as LogicUtil.NodeArgumentItem).name);\r\n                }\r\n            });\r\n        }\r\n        // フィールドのパラメータ名を取得\r\n        const fieldMng = curLogicOwner.mngs.find(mng => mng.type === 'field-mng');\r\n        if (fieldMng != undefined) {\r\n            const fields = (fieldMng.data as LogicUtil.NodeFieldManager).fields;\r\n            fields.forEach(field => {\r\n                if (field.data != null) {\r\n                    nameList.push((field.data as LogicUtil.NodeParamItem).name);\r\n                }\r\n            });\r\n        }\r\n        return nameList;\r\n    }\r\n\r\n    /**\r\n     * 子要素の接頭連番をチェックし、重複しない名称を返す。\r\n     * @param prefix 接頭語\r\n     * @param node 基準となるノード\r\n     */\r\n    export const getNumberingOnPrefixName = (prefix: string, node: TreeUtil.ElementNode) => {\r\n        let num = 0;\r\n        // 接頭番号を取得\r\n        while (true) {\r\n            const check = node.children.find(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                if (wrap.data == null) return false;\r\n                console.log(wrap);\r\n                return wrap.data[getNamableProps(wrap.type)] === `${prefix}${num}`;\r\n            });\r\n            if (check != undefined) num++;\r\n            else break;\r\n        }\r\n        return `${prefix}${num}`;\r\n    }\r\n\r\n    /**\r\n     * パラメータの式で参照されている変数を検索し、\r\n     * 任意の処理（callback）を実行する。\r\n     * @param node 現在のノード\r\n     * @param callback 処理\r\n     */\r\n    export const searchVariableReferInFormula = (node: TreeUtil.ElementNode, callback: Function) => {\r\n\r\n        const mngType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const getLogicItem = () => {\r\n            switch (mngType) {\r\n                case 'field-mng':\r\n                case 'argument-mng': return node.parent?.parent?.data as LogicUtil.WrapElement;\r\n                case 'inhfld-mng': return node.parent?.parent?.parent?.parent?.data as LogicUtil.WrapElement;\r\n            }\r\n        }\r\n        const logicItem = getLogicItem()?.data as LogicUtil.NodeLogicItem;\r\n        if (mngType === 'argument-mng') {\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (fieldMng != undefined) {\r\n                callback((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n        }\r\n        if (mngType !== 'inhfld-mng') {\r\n            const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n            if (visualMng != undefined) {\r\n                callback((visualMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n            const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n            if (behaviorMng != undefined) {\r\n                callback((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n        }\r\n        const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                if (mngType !== 'inhfld-mng') {\r\n                    const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                    // Inherit配下のField要素のチェック\r\n                    if (inhfld != null) {\r\n                        callback((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                    }\r\n                }\r\n                // Extend要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    }\r\n\r\n    export const findSeedWrap = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const root = rootData.data as LogicUtil.NodeRoot;\r\n        const seed = (root.seedMng.data as LogicUtil.NodeSeedManager).defs.find(def => {\r\n            const seedItem = def.data as LogicUtil.NodeSeedItem;\r\n            return seedItem.name === seedId;\r\n        });\r\n        if (seed == undefined) throw new Error();\r\n        return seed;\r\n    }\r\n\r\n    export const doParticleJob = (rootData: LogicUtil.WrapElement, fuse: StoryUtil.Fuse, owner: Particle.Instance[]) => {\r\n        const seedWrap = findSeedWrap(rootData, fuse.seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        const getSendingValueMap = () => {\r\n            const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const valueMapList: PreviewUtil.ValueMap[] = [];\r\n            seedargMng.args.forEach((wrap, i) => {\r\n                const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                if (!seedarg.isArray) {\r\n                    valueMapList.push({ name: seedarg.name, value: Number(fuse.values[i]) })\r\n                }\r\n            });\r\n\r\n            // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n            return sendParams\r\n                .filter(item => !item.isArray)\r\n                .map(item => {\r\n                    const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMapList);\r\n                    if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                    return { name: item.name, value };\r\n                });\r\n        }\r\n\r\n        const getSendingArrayMap = () => {\r\n            const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const arrayMapList: PreviewUtil.ArrayMap[] = [];\r\n            seedargMng.args.forEach((wrap, i) => {\r\n                const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                if (seedarg.isArray) {\r\n                    arrayMapList.push({ name: seedarg.name, array: fuse.values[i].split(',').map(v => Number(v)) })\r\n                }\r\n            });\r\n\r\n            // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n            return sendParams\r\n                .filter(item => item.isArray)\r\n                .map(item => {\r\n                    const array = PreviewUtil.convertParamsToArray(item.name, sendParams, arrayMapList);\r\n                    if (array == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                    return { name: item.name, array: array };\r\n                });\r\n        }\r\n\r\n        owner.push(new Particle.Instance(\r\n            PreviewUtil.buildLogicProps(owner, getOrigin(), rootData, getSendingValueMap(), getSendingArrayMap())\r\n        ));\r\n    }\r\n\r\n    export type SeedProps = {\r\n        seed: LogicUtil.NodeSeedItem;\r\n        logic: LogicUtil.NodeLogicItem;\r\n        seedargList: LogicUtil.NodeSeedArgItem[];\r\n        seedsendList: LogicUtil.NodeParamItem[];\r\n        thumbnailList: LogicUtil.NodeThumbnailItem[];\r\n    }\r\n    export const getSeedProperties = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const seedWrap = findSeedWrap(rootData, seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n        const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        const seedargList = seedargMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n        const seedsendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n        const seedsendList = seedsendMng.params.map(wrap => wrap.data as LogicUtil.NodeParamItem);\r\n        const thumbnailMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'thumbnail-mng').data as LogicUtil.NodeThumnailManager;\r\n        const thumbnailList = thumbnailMng.items.map(wrap => wrap.data as LogicUtil.NodeThumbnailItem);\r\n\r\n        return {\r\n            seed, logic: getOrigin(), seedargList, seedsendList, thumbnailList\r\n        }\r\n    }\r\n}\r\n\r\nexport default LogicElementUtil;","export namespace SPUtil {\r\n\r\n    export const SCREEN_WIDTH = 640;\r\n    export const SCREEN_HEIGHT = 960;\r\n}","import { useState, useMemo, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewLogicInputForm = (props: {\r\n    logicWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n    setSendingArrayMap: (sendingArrayMap: (() => PreviewUtil.ArrayMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const argumentList: LogicUtil.NodeArgumentItem[] = useMemo(() => {\r\n        let list: LogicUtil.NodeArgumentItem[] = [];\r\n        const argWrap = LogicElementUtil.getInnerWrap(props.logicWrap, 'argument-mng');\r\n        if (argWrap != null) {\r\n            list = (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                const argItem = arg.data as LogicUtil.NodeArgumentItem;\r\n                return argItem;\r\n            });\r\n        }\r\n        return list;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFormList(argumentList.map(arg => {\r\n            return { value: '', errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const isFormInputOK = formList.find(form => form.errors.length > 0) == undefined;\r\n        if (isFormInputOK) {\r\n            props.setSendingValueMap(() => {\r\n                return formList\r\n                    .filter((form, i) => {\r\n                        return argumentList[i].valueType === 'number';\r\n                    })\r\n                    .map((form, i) => {\r\n                        const argument = argumentList[i];\r\n                        return { name: argument.name, value: Number(form.value) } as PreviewUtil.ValueMap\r\n                    });\r\n            });\r\n            props.setSendingArrayMap(() => {\r\n                return formList\r\n                    .filter((form, i) => {\r\n                        return argumentList[i].valueType === 'array';\r\n                    })\r\n                    .map((form, i) => {\r\n                        const argument = argumentList[i];\r\n                        const array = form.value.split(',').map(v => Number(v));\r\n                        return { name: argument.name, array } as PreviewUtil.ArrayMap\r\n                    });\r\n            });\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n            props.setSendingArrayMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return <>{\r\n        formList.map((form, i) => {\r\n            const argument = argumentList[i];\r\n\r\n            const validates: ValidateUtil.Validate[] = [];\r\n            let isNumber = false;\r\n            if (argument.valueType === 'number') {\r\n                validates.push({\r\n                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                    errorType: \"required\"\r\n                });\r\n                isNumber = true;\r\n            } else {\r\n                validates.push({\r\n                    checker: (value) => ValidateUtil.checkArrayNumber(value),\r\n                    errorType: \"value\"\r\n                });\r\n            }\r\n            return (<FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={argument.name}\r\n                labelWidth={250}\r\n                jsx={\r\n                    <FormUtil.TextField\r\n                        width={312}\r\n                        isNumber={isNumber}\r\n                        checkable={form}\r\n                        setCheckable={() => {\r\n                            setFormList(formList.slice());\r\n                        }}\r\n                        validates={validates}\r\n                    />\r\n                }\r\n            />);\r\n        })\r\n    }</>\r\n}\r\n\r\nexport default PreviewLogicInputForm;","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../factory/util/logicFormUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewSeedInputForm = (props: {\r\n    seedWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n    setSendingArrayMap: (sendingArrayMap: (() => PreviewUtil.ArrayMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [formgrpList, seedargList, presetList]: [LogicUtil.NodeFromGrpItem[], LogicUtil.NodeSeedArgItem[], LogicUtil.NodeSampleItem[]] = useMemo(() => {\r\n        const formgrpWrap = LogicElementUtil.getInnerWrap(props.seedWrap, 'interface-mng', 'formgrp-mng');\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        if (formgrpWrap != null) {\r\n            formgrpList = (formgrpWrap.data as LogicUtil.NodeFromgrpManager).defines.map(def => def.data as LogicUtil.NodeFromGrpItem);\r\n        }\r\n\r\n        const argWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedarg-mng');\r\n        const seedargList = (argWrap.data as LogicUtil.NodeSeedArgManager).args.map(arg => arg.data as LogicUtil.NodeSeedArgItem);\r\n\r\n        const sampleWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'sample-mng');\r\n        const sampleList = (sampleWrap.data as LogicUtil.NodeSampleManager).samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n        return [formgrpList, seedargList, sampleList];\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        setFormList(seedargList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (formList.find(form => form.errors.length > 0) == undefined) {\r\n            props.setSendingValueMap(() => {\r\n                const valueMap: PreviewUtil.ValueMap[] = [];\r\n                formList.forEach((form, i) => {\r\n                    const seedarg = seedargList[i];\r\n                    if (!seedarg.isArray) {\r\n                        valueMap.push({ name: seedarg.name, value: Number(form.value) });\r\n                    }\r\n                });\r\n\r\n                // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                const sendMng = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                return sendParams\r\n                    .filter((item, i) => {\r\n                        return !item.isArray;\r\n                    })\r\n                    .map(item => {\r\n                        const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                        if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                        return { name: item.name, value };\r\n                    });\r\n            });\r\n            props.setSendingArrayMap(() => {\r\n                const arrayMap: PreviewUtil.ArrayMap[] = [];\r\n                formList.forEach((form, i) => {\r\n                    const seedarg = seedargList[i];\r\n                    if (seedarg.isArray) {\r\n                        const array = (form.value === '' ? [] : form.value.split(',').map(v => Number(v)));\r\n                        arrayMap.push({ name: seedarg.name, array });\r\n                    }\r\n                });\r\n\r\n                // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                const sendMng = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                return sendParams\r\n                    .filter((item, i) => {\r\n                        return item.isArray;\r\n                    })\r\n                    .map(item => {\r\n                        const array = PreviewUtil.convertParamsToArray(item.name, sendParams, arrayMap);\r\n                        if (array == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                        return { name: item.name, array };\r\n                    });\r\n            });\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n            props.setSendingArrayMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"Preset\"\r\n            innerJsx={<FormUtil.Record\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        width={402}\r\n                        checkable={template}\r\n                        setCheckable={setTemplate}\r\n                        headBlank\r\n                        list={presetList.map((sample, i) => {\r\n                            return {\r\n                                labelText: sample.name,\r\n                                value: i.toString()\r\n                            }\r\n                        })}\r\n                    />\r\n                    <FormUtil.ButtonItem\r\n                        button={{\r\n                            label: 'Apply',\r\n                            isEnable: template.value !== '',\r\n                            callback: () => {\r\n                                const selectedIndex = Number(template.value);\r\n                                const values = presetList[selectedIndex].values;\r\n                                values.forEach((value, i) => {\r\n                                    formList[i].value = value.toString();\r\n                                });\r\n                                setFormList(formList.slice());\r\n                            }\r\n                        }}\r\n                    />\r\n                </>}\r\n            />}\r\n        />\r\n        {LogicFormUtil.buildPreviewForms(\r\n            false, seedargList, formgrpList, formList, setFormList\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default PreviewSeedInputForm;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport { SPUtil } from \"../../../sp/spUtil\";\r\nimport { VscDebugStart } from \"react-icons/vsc\";\r\nimport { IoStopOutline } from \"react-icons/io5\";\r\nimport { RxReset } from \"react-icons/rx\";\r\nimport { AiFillStepBackward, AiFillStepForward } from \"react-icons/ai\";\r\n\r\nnamespace PreviewLauncherFrameSp {\r\n\r\n    export const Component = (props: {\r\n        sceens: string[];\r\n        frameCnt: number;\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const sceens = props.sceens;\r\n        const frameCnt = props.frameCnt;\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n\r\n        const previewTabJsx = (\r\n            <>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    // 再生中は変更できない\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    interval={12}\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 60,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            icon: <AiFillStepBackward />,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 60,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            icon: <AiFillStepForward />,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            width: 100,\r\n                            icon: !isPlay ? <VscDebugStart /> : <IoStopOutline />,\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            width: 100,\r\n                            isEnable: !isPlay,\r\n                            icon: <RxReset />,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={SPUtil.SCREEN_WIDTH - 1}\r\n                height={768}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                        } break;\r\n                        case 'ArrowRight': {\r\n                            if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                        } break;\r\n                        case ' ': {\r\n                            setPlay(!isPlay);\r\n                        } break;\r\n                    }\r\n                    if (e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }}\r\n            >\r\n                {previewTabJsx}\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                        if (props.closeAction != undefined) {\r\n                            props.closeAction();\r\n                        }\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLauncherFrameSp;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #575a61ce;\r\n    border: 1px solid #8f8f8f;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${SPUtil.SCREEN_WIDTH - 3}px;\r\n    height: ${SPUtil.SCREEN_WIDTH - 3}px;\r\n    margin: 35px 0 0 0;\r\n    background-color: #020202df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryUtil from \"../launcher/util/storyUtil\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport styled, { css } from \"styled-components\";\r\nimport PreviewLauncherFrame from \"./previewLauncherFrame\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PreviewLauncherFrameSp from \"./previewLauncherFrameSp\";\r\n\r\nnamespace BuildUtil {\r\n\r\n    export type RunParticleProps = {\r\n        /** フレームの上限（過ぎると停止） */\r\n        limitFrame: number,\r\n        /** パーティクル数の上限（超えると停止） */\r\n        limitParticle: number,\r\n        /** 最低保証フレーム */\r\n        guaranteeFrame?: number,\r\n        /** 1フレーム経過ごとに実行する処理のコールバック */\r\n        doIterate: (frame: number, owner: Particle.Instance[]) => void,\r\n        /** 最終フレーム（ループから抜けた直後）に実行する処理のコールバック */\r\n        doEnd?: (frame: number, owner: Particle.Instance[]) => void\r\n    };\r\n\r\n    export type DivideProps = {\r\n        num: number;\r\n        standbyEvent: () => void;\r\n        countUpEvent: () => void;\r\n    }\r\n\r\n    export const run = (props: RunParticleProps) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        const owner: Particle.Instance[] = [];\r\n        let frame = 0;\r\n\r\n        while (true) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frame > props.limitFrame ||\r\n                owner.length > props.limitParticle ||\r\n                frame > minFrame && owner.length === 0\r\n            ) break;\r\n            frame++;\r\n        };\r\n\r\n        if (props.doEnd != undefined) {\r\n            props.doEnd(frame, owner);\r\n        }\r\n    }\r\n\r\n    export const runPaging = (props: RunParticleProps, owner: Particle.Instance[], beginFrame: number, advanceFrame: number) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        // const owner: Particle.Instance[] = [];\r\n\r\n        let frame = beginFrame;\r\n        while (frame - beginFrame < advanceFrame) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            // if (frame > props.limitFrame ||\r\n            //     owner.length > props.limitParticle ||\r\n            //     frame > minFrame && owner.length === 0\r\n            // ) {\r\n            //     if (props.doEnd != undefined) {\r\n            //         props.doEnd(frame, owner);\r\n            //     }\r\n            //     break;\r\n            // }\r\n            frame++;\r\n        };\r\n    }\r\n\r\n    const PROGRESS_VAL = 1;\r\n\r\n    type StoryPreviewProps = {\r\n        sceens: string[];\r\n        useFrame: number;\r\n    }\r\n\r\n    export type PagingField = {\r\n        useFrame: number;\r\n        curFrame: number;\r\n        sceens: string[];\r\n        owner: Particle.Instance[];\r\n    }\r\n\r\n    export const BuildFrame = (props: {\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n        const [storyPreviewProps, setStoryPreviewProps] = useState<StoryPreviewProps | null>(null);\r\n        const [buildCache, setBuildCache] = useState<PagingField>({\r\n            useFrame: 0,\r\n            curFrame: 0,\r\n            owner: [],\r\n            sceens: []\r\n        });\r\n\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n        useEffect(() => {\r\n            // プログレスバーが100％になったら処理される\r\n            if (buildCache.useFrame != 0 && buildCache.curFrame == buildCache.useFrame) {\r\n                setStoryPreviewProps({\r\n                    sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                });\r\n                return;\r\n            }\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const minFrame = fuseList[0].frame;\r\n\r\n            if (buildCache.useFrame === 0) {\r\n                BuildUtil.run({\r\n                    limitFrame,\r\n                    limitParticle,\r\n                    guaranteeFrame: minFrame,\r\n                    doIterate: (frame, owner) => {\r\n                        fuseList.some(fuse => {\r\n                            if (fuse.frame === frame) {\r\n                                LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                            } else if (fuse.frame > frame) return 1;\r\n                        });\r\n                    },\r\n                    doEnd: (frame) => {\r\n                        buildCache.useFrame = frame;\r\n                    }\r\n                });\r\n                setBuildCache({ ...buildCache });\r\n            } else {\r\n                runPaging({\r\n                    limitFrame,\r\n                    limitParticle,\r\n                    guaranteeFrame: minFrame,\r\n                    doIterate: (frame, owner) => {\r\n\r\n                        fuseList.some(fuse => {\r\n                            if (fuse.frame === frame) {\r\n                                LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                            } else if (fuse.frame > frame) return 1;\r\n                        });\r\n\r\n                        buildCache.sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                            // パーティクルの描画\r\n                            owner.forEach(par => {\r\n                                par.draw(ctx);\r\n                            });\r\n                            ctx.save();\r\n                        }));\r\n                    },\r\n                    // doEnd: () => {\r\n                    //     setStoryPreviewProps({\r\n                    //         sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                    //     });\r\n                    // }\r\n                }, buildCache.owner, buildCache.curFrame, PROGRESS_VAL);\r\n                buildCache.curFrame += PROGRESS_VAL;\r\n                if (buildCache.curFrame > buildCache.useFrame) {\r\n                    buildCache.curFrame = buildCache.useFrame;\r\n                }\r\n                setBuildCache({ ...buildCache });\r\n            }\r\n        }, [buildCache]);\r\n\r\n        useEffect(() => {\r\n            if (storyPreviewProps != null) {\r\n                store.system.dialog = <PreviewLauncherFrameSp.Component\r\n                    sceens={storyPreviewProps.sceens}\r\n                    frameCnt={storyPreviewProps.useFrame}\r\n                    closeAction={props.closeAction}\r\n                />;\r\n                dispatcher.updateStore();\r\n            }\r\n        }, [storyPreviewProps]);\r\n\r\n\r\n        const getJsx = () => {\r\n            if (storyPreviewProps == null) {\r\n                if (buildCache == null) return <></>;\r\n                const rate = buildCache.curFrame / buildCache.useFrame * 100;\r\n                const isStandby = buildCache.useFrame === 0;\r\n                return (\r\n                    <_Blind>\r\n                        <_ProgressBox><_ProgressVal rate={rate} /></_ProgressBox>\r\n                        <_RateVal isStandby={isStandby}>{isStandby ? 'Calculating...' : `${Math.floor(rate)}%`}</_RateVal>\r\n                    </_Blind>\r\n                );\r\n            }\r\n            return <></>;\r\n        }\r\n\r\n        return getJsx();\r\n    }\r\n}\r\n\r\nexport default BuildUtil;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #002910c0;\r\n    z-index: 10;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _ProgressBox = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relaltive;\r\n    width: calc(100% - 20px);\r\n    height: 40px;\r\n    margin: 200px 0 0 10px;\r\n    background-color: #ffffff29;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    background-color: #ffffffc1;\r\n`;\r\n\r\nconst _RateVal = styled.div<{\r\n    isStandby: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #0000003b;\r\n\r\n    color: #ffffff;\r\n    ${props => !props.isStandby ? '' : css`\r\n        color: #f50000;\r\n    `}\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ReactLoading from 'react-loading';\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport PreviewLogicInputForm from \"./inputForm/previewLogicInputForm\";\r\nimport PreviewSeedInputForm from \"./inputForm/previewSeedInputForm\";\r\nimport BuildUtil from \"./buildUtil\";\r\n\r\nnamespace PreviewLogicFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        master: LogicUtil.WrapElement;\r\n        rootData: LogicUtil.WrapElement;\r\n        closeButtonAction: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n\r\n        const [sceens, setSceens] = useState<string[]>([]);\r\n        const [frameCnt, setFrameCnt] = useState<number>(-1);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isBuild, setBuild] = useState<boolean>(false);\r\n        const [progress, setProgress] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const [sendingValueMap, setSendingValueMap] = useState<((() => PreviewUtil.ValueMap[]) | null)>(null);\r\n        const [sendingArrayMap, setSendingArrayMap] = useState<((() => PreviewUtil.ArrayMap[]) | null)>(null);\r\n\r\n        const isSeed = props.master.type === 'seed-item';\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n        useEffect(() => {\r\n            if (isBuild) build();\r\n        }, [isBuild]);\r\n\r\n        const build = () => {\r\n            if (sendingValueMap == null) return;\r\n            setCur(0);\r\n            const sceens: string[] = [];\r\n            BuildUtil.run({\r\n                limitFrame: 500,\r\n                limitParticle: 3000,\r\n                doIterate: (frame, owner) => {\r\n                    if (frame === 0) {\r\n                        const getOrigin = () => {\r\n                            if (!isSeed) return props.master.data as LogicUtil.NodeLogicItem;\r\n                            else {\r\n                                const seed = props.master.data as LogicUtil.NodeSeedItem;\r\n                                const root = props.rootData.data as LogicUtil.NodeRoot;\r\n                                const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                                return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                            }\r\n                        }\r\n                        owner.push(new Particle.Instance(\r\n                            PreviewUtil.buildLogicProps(owner, getOrigin(), props.rootData, sendingValueMap as any, sendingArrayMap as any)\r\n                        ));\r\n                    }\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n\r\n                        // 経過フレーム、要素数の表示\r\n                        ctx.globalAlpha = 1;\r\n                        ctx.font = '16pt Arial';\r\n                        ctx.fillStyle = '#ffffff';\r\n                        ctx.fillText(`${frame}`, 6, 24);\r\n                        ctx.fillStyle = '#ffec5c';\r\n                        ctx.fillText(`${owner.length}`, 6, 44);\r\n\r\n                        // ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    setFrameCnt(frame);\r\n                    setSceens(sceens);\r\n\r\n                    setBuild(false);\r\n                    setTabIndex(1);\r\n                }\r\n            });\r\n        }\r\n\r\n        const isInputOK = sendingValueMap != null;\r\n\r\n        const buildTabJsx = (\r\n            <_Wrap>\r\n                <_Blind isEnable={isBuild}>\r\n                    {/* <ReactLoading type='spinningBubbles' /> */}\r\n                    <_Msg>Now building...</_Msg>\r\n                </_Blind>\r\n                <_FormDiv\r\n                    isSeed={props.master.type === 'seed-item'}\r\n                >\r\n                    {!isSeed ? (\r\n                        <PreviewLogicInputForm\r\n                            logicWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                            setSendingArrayMap={setSendingArrayMap}\r\n                        />\r\n                    ) : (\r\n                        <PreviewSeedInputForm\r\n                            seedWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                            setSendingArrayMap={setSendingArrayMap}\r\n                        />\r\n                    )}\r\n                </_FormDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Build',\r\n                            isEnable: isInputOK && !isBuild,\r\n                            callback: () => {\r\n                                setBuild(true);\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    // 再生中は変更できない\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    if (tabIndex === 0) {\r\n                        if (isInputOK && e.key === ' ') build();\r\n                    } else {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                            } break;\r\n                            case 'ArrowRight': {\r\n                                if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                            } break;\r\n                            case ' ': {\r\n                                setPlay(!isPlay);\r\n                            } break;\r\n                        }\r\n                    }\r\n                    if (!isPlay && e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }\r\n                }\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Build', enable: true, cont: buildTabJsx },\r\n                            { name: 'Play', enable: frameCnt !== -1, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={props.closeButtonAction}\r\n                >×</_CloseButton>\r\n            </_Frame >\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLogicFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _FormDiv = styled.div<{\r\n    isSeed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 580px;\r\n    background-color: #c5cfd6df;\r\n    ${props => !props.isSeed ? '' : css`\r\n        background-color: #c6d6c5df;\r\n    `}\r\n    overflow-y: auto;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #c5c5c5df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;\r\n\r\n\r\nconst _Blind = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: ${props => !props.isEnable ? 'none;' : 'inline-block;'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000552cd;\r\n    z-index: 99;\r\n`;\r\n\r\nconst _Msg = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    margin: 240px 0 0 110px;\r\n    /* background-color: #26f055cd; */\r\n    color: white;\r\n    font-size: 56px;\r\n    font-weight: 600;\r\n\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\n\r\nnamespace PreviewLauncherFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        sceens: string[];\r\n        frameCnt: number;\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const sceens = props.sceens;\r\n        const frameCnt = props.frameCnt;\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    // 再生中は変更できない\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                        } break;\r\n                        case 'ArrowRight': {\r\n                            if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                        } break;\r\n                        case ' ': {\r\n                            setPlay(!isPlay);\r\n                        } break;\r\n                    }\r\n                    if (e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }}\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Play', enable: true, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                        if (props.closeAction != undefined) {\r\n                            props.closeAction();\r\n                        }\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLauncherFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #aec7d8df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;","import LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport { Store } from \"../redux/store/store\";\r\nimport DataUtil from \"./dataUtil\";\r\n\r\nnamespace LocalStorageUtil {\r\n    export const DEFAULT_FILE_NAME_PREFIX = 'project_';\r\n\r\n    export const KEY_LOGIN_HASH = 'login-hash';\r\n    // export const KEY_SCENARIO_NAMES = 'scenario-names';\r\n    export const KEY_SCENARIO_SEQ = 'scenario-seq';\r\n    export const KEY_SCENARIO_PREFIX = 'scenario-data-';\r\n    export const KEY_PROP_PUT_INTERVAL = 'prop-put-interval';\r\n\r\n    export const load = (store: Store, update: () => void) => {\r\n\r\n        // ログイン\r\n        if (store.system.user == null) {\r\n            const userHash = localStorage.getItem(KEY_LOGIN_HASH);\r\n            if (userHash != null) {\r\n                const userSeq = DataUtil.getDecryptionedUserSeq(userHash);\r\n                if (userSeq !== -1) {\r\n                    (async () => {\r\n                        const results = await DataUtil.findUserInfoSeq(userSeq);\r\n                        if (results.length > 0) {\r\n                            store.system.user = {\r\n                                seq: results[0].seq,\r\n                                id: results[0].id,\r\n                                password: results[0].password,\r\n                                email: results[0].email,\r\n                            };\r\n\r\n                            // developの場合、クラウドのライブラリを読み込む\r\n                            if (!store.system.isSPMode) {\r\n                                const resPrjList = await DataUtil.findUserLibdvList(results[0].seq);\r\n                                store.cloud = {\r\n                                    projects: resPrjList.map(res => ({\r\n                                        source: res.source,\r\n                                        name: res.name,\r\n                                        seq: res.seq,\r\n                                        lastmod: res.lastmod\r\n                                    }))\r\n                                };\r\n                            }\r\n                            update();\r\n                        }\r\n                    })();\r\n                } else {\r\n                    localStorage.removeItem(KEY_LOGIN_HASH);\r\n                }\r\n            }\r\n        }\r\n\r\n        // シナリオファイルのロード\r\n        const scenarioSeq = localStorage.getItem(KEY_SCENARIO_SEQ);\r\n        if (scenarioSeq == null) {\r\n            localStorage.setItem(KEY_SCENARIO_SEQ, '0');\r\n        } else {\r\n            const seq = Number(scenarioSeq);\r\n            store.local.maxSeq = seq;\r\n            for (let i = 0; i <= seq; i++) {\r\n                const source = localStorage.getItem(KEY_SCENARIO_PREFIX + i.toString());\r\n                if (source != null) {\r\n                    store.local.projects.push(JSON.parse(source));\r\n                }\r\n            }\r\n        }\r\n\r\n        // 初期値\r\n        const putInterval = localStorage.getItem(KEY_PROP_PUT_INTERVAL);\r\n        if(putInterval == null) {\r\n            localStorage.setItem(KEY_PROP_PUT_INTERVAL, '50');\r\n        }\r\n        store.local.putInterval = Number(putInterval);\r\n    }\r\n}\r\n\r\nexport default LocalStorageUtil;","import DataUtil from \"../utils/dataUtil\";\r\nimport PreviewLogicFrame from \"../contents/create/preview/previewLogicFrame\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport LogicElementUtil from \"../contents/create/factory/util/logicElementUtil\";\r\nimport styled, { css } from \"styled-components\";\r\nimport StoryUtil from \"../contents/create/launcher/util/storyUtil\";\r\nimport FormUtil from \"../utils/form/formUtiil\";\r\nimport CanvasUtil from \"../utils/canvasUtil\";\r\nimport PreviewLauncherFrame from \"../contents/create/preview/previewLauncherFrame\";\r\nimport BuildUtil from \"../contents/create/preview/buildUtil\";\r\nimport Particle from \"../contents/graphic/particle\";\r\nimport { VscSettingsGear } from \"react-icons/vsc\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    seedList: SeedProps[];\r\n}\r\ntype StoryProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    libraryData: LogicUtil.WrapElement;\r\n    scenarioData: StoryUtil.StoryData;\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\ntype StoryPreviewProps = {\r\n    sceens: string[];\r\n    useFrame: number;\r\n}\r\n\r\nexport type PagingField = {\r\n    useFrame: number;\r\n    curFrame: number;\r\n    sceens: string[];\r\n    owner: Particle.Instance[];\r\n}\r\n\r\nconst PROGRESS_VAL = 1;\r\n\r\nconst DirectLinkManager = (props: {\r\n    projectSeq: number;\r\n}) => {\r\n    const [libData, setLibData] = useState<LibProps | null>(null);\r\n    const [storyData, setStoryData] = useState<StoryProps | null>(null);\r\n    const [storyPreviewProps, setStoryPreviewProps] = useState<StoryPreviewProps | null>(null);\r\n    const [buildCache, setBuildCache] = useState<null | PagingField>(null);\r\n\r\n    const [seedSeq, setSeedSeq] = useState(-1);\r\n\r\n    useEffect(() => {\r\n\r\n        findProject(props.projectSeq).then(resList => {\r\n            if (resList.length > 0) {\r\n                const res = resList[0];\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const data = JSON.parse(DataUtil.unZip(res.source));\r\n                // シナリオであるかどうかの判定\r\n                if (!data.hasOwnProperty('scenarioData')) {\r\n                    const rootData = data as LogicUtil.WrapElement;\r\n                    const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                    const seedList: SeedProps[] = seedMng.defs\r\n                        .filter(wrap => {\r\n                            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                            return seed.permit === 'release';\r\n                        })\r\n                        .map(wrap => {\r\n                            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                            const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                            return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                        });\r\n                    setLibData({\r\n                        name, ownerId, lastmod, rootData, seedList\r\n                    });\r\n                } else {\r\n                    const scenarioProps = data as StoryUtil.ScenarioFileProps;\r\n                    setStoryData({\r\n                        name, ownerId, lastmod, libraryData: scenarioProps.libraryData, scenarioData: scenarioProps.scenarioData\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (buildCache == null || storyData == null) return;\r\n        if (buildCache.useFrame != 0 && buildCache.curFrame == buildCache.useFrame) {\r\n            setStoryPreviewProps({\r\n                sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n            });\r\n            return;\r\n        }\r\n\r\n        const fuseList = storyData.scenarioData.fuseList;\r\n        const limitFrame = storyData.scenarioData.limitFrame;\r\n        const limitParticle = storyData.scenarioData.limitParticle;\r\n        const minFrame = fuseList[0].frame;\r\n        const logicData = storyData.libraryData;\r\n        if (buildCache.useFrame === 0) {\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n                    fuseList.some(fuse => {\r\n                        if (fuse.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                        } else if (fuse.frame > frame) return 1;\r\n                    });\r\n                },\r\n                doEnd: (frame) => {\r\n                    buildCache.useFrame = frame;\r\n                }\r\n            });\r\n            setBuildCache({ ...buildCache });\r\n        } else {\r\n\r\n            BuildUtil.runPaging({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    fuseList.some(fuse => {\r\n                        if (fuse.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                        } else if (fuse.frame > frame) return 1;\r\n                    });\r\n\r\n                    buildCache.sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                // doEnd: () => {\r\n                //     setStoryPreviewProps({\r\n                //         sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                //     });\r\n                // }\r\n            }, buildCache.owner, buildCache.curFrame, PROGRESS_VAL);\r\n            buildCache.curFrame += PROGRESS_VAL;\r\n            if (buildCache.curFrame > buildCache.useFrame) {\r\n                buildCache.curFrame = buildCache.useFrame;\r\n            }\r\n            setBuildCache({ ...buildCache });\r\n        }\r\n    }, [buildCache]);\r\n\r\n    /**\r\n     * プレビューオールダイアログを表示する\r\n     */\r\n    const openPreviewAllDialog = () => {\r\n        setBuildCache({\r\n            useFrame: 0,\r\n            curFrame: 0,\r\n            owner: [],\r\n            sceens: []\r\n        });\r\n    }\r\n\r\n    const getJsx = () => {\r\n        let jsx = <></>;\r\n        if (libData != null) {\r\n            if (seedSeq === -1) {\r\n                jsx = <>\r\n                    <_Header>{libData.name}</_Header>\r\n                    {libData.seedList.map((seed, i) => {\r\n                        const seedName = seed.disp ?? seed.name;\r\n                        return (<_Item key={i}\r\n                            onClick={() => {\r\n                                setSeedSeq(i);\r\n                            }}\r\n                        >\r\n                            <_SeedName>{seedName}</_SeedName>\r\n                            <_ArgCnt> [{seed.argCount} arguments]</_ArgCnt>\r\n                        </_Item>);\r\n                    })}\r\n                </>;\r\n            } else {\r\n                jsx = <PreviewLogicFrame.Component\r\n                    master={libData.seedList[seedSeq].master}\r\n                    rootData={libData.rootData}\r\n                    closeButtonAction={() => {\r\n                        setSeedSeq(-1);\r\n                    }}\r\n                />\r\n            }\r\n        } else if (storyData != null) {\r\n            if (storyPreviewProps == null) {\r\n                const getBlindJsx = () => {\r\n                    if (buildCache == null) return <></>;\r\n                    const rate = buildCache.curFrame / buildCache.useFrame * 100;\r\n                    const isStandby = buildCache.useFrame === 0;\r\n                    return (\r\n                        <_Blind>\r\n                            <_ProgressBox><_ProgressVal rate={rate} /></_ProgressBox>\r\n                            <_RateVal isStandby={isStandby}>{isStandby ? 'Calculating...' : `${Math.floor(rate)}%`}</_RateVal>\r\n                        </_Blind>\r\n                    );\r\n                }\r\n                jsx = <>\r\n                    {getBlindJsx()}\r\n                    <_Header>{storyData.name}</_Header>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        isIconButton\r\n                        buttons={[\r\n                            {\r\n                                label: 'Build',\r\n                                icon: <VscSettingsGear />,\r\n                                width: 200,\r\n                                callback() {\r\n                                    openPreviewAllDialog();\r\n                                },\r\n                            }\r\n                        ]} />\r\n                </>;\r\n            } else {\r\n                jsx = <PreviewLauncherFrame.Component\r\n                    sceens={storyPreviewProps.sceens}\r\n                    frameCnt={storyPreviewProps.useFrame}\r\n                />\r\n            }\r\n        }\r\n        return jsx;\r\n    }\r\n\r\n    return getJsx();\r\n}\r\n\r\nexport default DirectLinkManager;\r\n\r\n\r\nconst findProject = async (conteseq: number) => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE seq = ${conteseq}\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #002910c0;\r\n    z-index: 10;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _ProgressBox = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relaltive;\r\n    width: calc(100% - 20px);\r\n    height: 40px;\r\n    margin: 200px 0 0 10px;\r\n    background-color: #ffffff29;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    background-color: #ffffffc1;\r\n`;\r\n\r\nconst _RateVal = styled.div<{\r\n    isStandby: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #0000003b;\r\n\r\n    color: #ffffff;\r\n    ${props => !props.isStandby ? '' : css`\r\n        color: #f50000;\r\n    `}\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background: linear-gradient(to bottom, #00215e, #000000, #00215e);\r\n\r\n    color: #e0e0e0;\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #abc9e6;\r\n`;\r\n\r\nconst _ArgCnt = styled.span<{\r\n}>`\r\n    color: #fbffbf;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport DirectLinkManager from \"./directLinkManager\";\r\nimport DataUtil from \"../utils/dataUtil\";\r\n\r\ntype ScreenBean = {\r\n    adjLeft: number;\r\n    adjTop: number;\r\n    rate: number;\r\n}\r\n\r\n// export const CONTENTS_WIDTH = 576;\r\n// export const CONTENTS_HEIGHT = 1024;\r\n\r\n\r\nexport const CONTENTS_WIDTH = 600;\r\nexport const CONTENTS_HEIGHT = 660;\r\n\r\nconst MobileRoot = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const [isPermit, setPermit] = useState(true);\r\n    const [screen, setScreen] = useState<ScreenBean>({ adjLeft: 0, adjTop: 0, rate: 1 });\r\n    const ref = useRef<null | HTMLDivElement>(null);\r\n\r\n    const projectSeq = DataUtil.getDecryptionedProjectSeq(props.hashKey);\r\n\r\n    const update = () => {\r\n        if (ref.current != null) {\r\n            // const [clientWidth, clientHeight] = [window.innerWidth, window.innerHeight];\r\n\r\n            const rect = ref.current.getBoundingClientRect();\r\n            const [clientWidth, clientHeight] = [rect.width, rect.height];\r\n\r\n            const cw = CONTENTS_WIDTH;\r\n            const ch = CONTENTS_HEIGHT;\r\n\r\n            const isFitSide = clientHeight / ch > clientWidth / cw;\r\n\r\n            const rate = !isFitSide ? clientHeight / ch : clientWidth / cw;\r\n            const adjLeft = !isFitSide ? clientWidth / 2 - (cw * rate / 2) : 0;\r\n            const adjTop = !isFitSide ? 0 : clientHeight / 2 - (ch * rate / 2);\r\n\r\n            setScreen({ adjLeft, adjTop, rate });\r\n        }\r\n    }\r\n\r\n    // window.addEventListener('DOMContentLoaded', () => {\r\n    //     if (!isSmartPhone()) {\r\n    //         window.addEventListener('resize', update);\r\n    //     } else {\r\n    //         window.addEventListener('orientationchange resize', () => {\r\n    //             update();\r\n    //             setPermit(window.orientation === 0);\r\n    //         });\r\n    //     }\r\n    // });\r\n\r\n    // window.onorientationchange = () => {\r\n    //   setOrientation(window.orientation);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        update();\r\n        console.log(navigator.userAgent);\r\n        if (isSmartPhone()) {\r\n            setPermit(window.orientation === 0);\r\n        }\r\n        if (!isSmartPhone()) {\r\n            window.addEventListener('resize', ()=>{\r\n                update();\r\n            });\r\n        } else {\r\n            window.addEventListener('orientationchange resize', () => {\r\n                alert('change');\r\n                update();\r\n                setPermit(window.orientation === 0);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    let jsx = <_Error>Make your smartphone vertical!</_Error>;\r\n    if (isPermit) {\r\n        jsx = (\r\n            <_Contents>\r\n                <DirectLinkManager projectSeq={projectSeq} />\r\n            </_Contents>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap ref={ref}>\r\n            <_Frame left={screen.adjLeft} top={screen.adjTop} rate={screen.rate}>\r\n                {jsx}\r\n            </_Frame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MobileRoot;\r\n\r\nconst isSmartPhone = () => {\r\n    // UserAgentからのスマホ判定\r\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 10px);\r\n  height: calc(100% - 10px);\r\n  background-color: #9eadc9;\r\n  margin: 5px 0 0 5px; */\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst _Frame = styled.div<{\r\n    left: number;\r\n    top: number;\r\n    rate: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: ${props => props.top}px;\r\n  left: ${props => props.left}px;\r\n  transform-origin: top left;\r\n  /* width: 100%;\r\n  height: 100%; */\r\n  transform: scale(${props => props.rate});\r\n`;\r\n\r\nconst _Contents = styled.div`\r\n  display: inline-block;\r\n  width: ${CONTENTS_WIDTH}px;\r\n  height: ${CONTENTS_HEIGHT}px;\r\n  background-color: #929292;\r\n`;\r\n\r\nconst _Error = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #750000;\r\n    color: white;\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const dialog = store.system.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            if (!store.system.canDialogClose) return;\r\n            store.system.dialog = null;\r\n            store.system.canDialogClose = false;\r\n            setStore({ ...store });\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport StoreSystem from \"../../redux/store/storeSystem\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../utils/form/validateUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst WIDTH = 750;\r\nconst HEIGHT = 600;\r\n/**\r\n * アカウントフレームのコンポーネント\r\n * @returns \r\n */\r\nconst AccountFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [oldPass, setOldPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPass, setNewPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPassConfirm, setNewPassConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n    const [emailList, setEmailList] = useState<string[]>([]);\r\n\r\n    const [isModify, setModify] = useState(false);\r\n    const loginProps = store.system.user as StoreSystem.User;\r\n\r\n    const reloadInfo = () => {\r\n        setUserId({ ...userId, value: loginProps.id });\r\n        setNewPass({ ...newPass, value: '' });\r\n        setNewPassConfirm({ ...newPassConfirm, value: '' });\r\n        setEmail({ ...email, value: loginProps.email });\r\n        setOldPass({ ...oldPass, value: loginProps.password });\r\n    }\r\n\r\n    useEffect(() => {\r\n        DataUtil.findUserInfoList().then(list => {\r\n\r\n            const userIdList: string[] = [];\r\n            const emailList: string[] = [];\r\n            list.forEach(info => {\r\n                if (info.id !== loginProps.id) userIdList.push(info.id);\r\n                if (info.email !== '') emailList.push(info.email);\r\n            });\r\n            setUserIdList(userIdList);\r\n            setEmailList(emailList);\r\n        });\r\n\r\n        const hash = DataUtil.getHashedFromUserSeq(loginProps.seq);\r\n\r\n        // ユーザページのURLに変更する。\r\n        window.history.replaceState('', '', `/#/user?v=${hash}`);\r\n\r\n        reloadInfo();\r\n\r\n        // 閉じる際にURLを元に戻す\r\n        return () => {\r\n            // alert('destroy');\r\n            window.history.replaceState('', '', `/#/`);\r\n        }\r\n    }, []);\r\n\r\n    const userTabJsx: JSX.Element = (\r\n        <_Wrap>\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'user id'}\r\n                checkable={userId}\r\n                setCheckable={setUserId}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !userIdList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass'}\r\n                isPassword\r\n                checkable={newPass}\r\n                setCheckable={setNewPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPassConfirm.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPassConfirm]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass*'}\r\n                isPassword\r\n                checkable={newPassConfirm}\r\n                setCheckable={setNewPassConfirm}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPass.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPass]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'email'}\r\n                checkable={email}\r\n                setCheckable={setEmail}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => {\r\n                            return value.length === 0 || value.split('@').length === 2;\r\n                        },\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !emailList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                // width={500}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'old pass'}\r\n                isPassword\r\n                checkable={oldPass}\r\n                setCheckable={setOldPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => value === loginProps.password,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                // dependency={[passwordConfirm]}\r\n                width={300}\r\n                marginTop={55}\r\n                isReadOnly={!isModify}\r\n            />\r\n        </_Wrap>\r\n    );\r\n\r\n    // 登録ボタンの活性状態\r\n    const permitRegist = (\r\n        userId.errors.length === 0\r\n        && newPass.errors.length === 0\r\n        && newPassConfirm.errors.length === 0\r\n        && email.errors.length === 0\r\n        && oldPass.errors.length === 0\r\n    );\r\n\r\n    const updateUserInfo = () => {\r\n        const passwordStr = newPass.value.length === 0 ? '' : `,password = '${newPass.value}'`;\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `UPDATE user_tbl SET id = '${userId.value}', email = '${email.value}'${passwordStr}\r\n            WHERE seq = ${loginProps?.seq}`\r\n        ).then(() => {\r\n            loginProps.id = userId.value;\r\n            if (newPass.value.length > 0) {\r\n                loginProps.password = newPass.value;\r\n            }\r\n            loginProps.email = email.value;\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Modify successful!\" />;\r\n            setStore({...store});\r\n        });\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <FormUtil.Message\r\n                    message=\"If you bookmark this page, you can easily login by URL.\"\r\n                />\r\n            </_Header>\r\n            <_Body>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'User', enable: true, cont: userTabJsx },\r\n                        { name: 'Security', enable: false, cont: <></> },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_Body>\r\n            <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        {\r\n                            label: 'Close',\r\n                            callback: () => {\r\n                                // dispatcher.system.closeDialog();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Cancel',\r\n                            isEnable: isModify,\r\n                            callback: () => {\r\n                                setModify(false);\r\n                                reloadInfo();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isModify ? 'Modify' : 'Regist',\r\n                            isEnable: !isModify || permitRegist,\r\n                            callback: () => {\r\n                                if (!isModify) {\r\n                                    setModify(true);\r\n                                    setOldPass({ ...oldPass, value: '' });\r\n                                }\r\n                                else {\r\n                                    updateUserInfo();\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\n\r\nexport default AccountFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7eb;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    /* text-align: center; */\r\n`;\r\nconst _Body = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 100px);\r\n    padding: 4px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport AccountFrame from \"../accountFrame\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginCreateAccount = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isRegist, setRegist] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [passwordConfirm, setPasswordConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n\r\n    const createAuthText = () => {\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n        const list = '0123456789';\r\n        let text = '';\r\n        for (let i = 0; i < 6; i++) {\r\n            text += list.charAt(Math.random() * list.length);\r\n        }\r\n        return text;\r\n    };\r\n\r\n    /** 既存のユーザIDリストを格納 */\r\n    useEffect(() => {\r\n        DataUtil.findUserIdList().then(list => {\r\n            setUserIdList(list);\r\n        });\r\n\r\n        // fetch('https://api.ipify.org/?format=json').then(res => {\r\n        //     res.json().then(data => {\r\n        //         alert(data['ip']);\r\n        //     });\r\n        // });\r\n    }, []);\r\n\r\n    const [authCollation, setAuthCollation] = useState<string>(createAuthText());\r\n    const [authInput, setAuthInput] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    /** キャッシュした認証画像 */\r\n    const authPicture = useMemo(() => {\r\n        return CanvasUtil.getAuthTextURL(authCollation);\r\n\r\n    }, [authCollation]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n                case 'relation': list.push('[password] does not match confirm.'); break;\r\n            }\r\n        }\r\n        if (passwordConfirm.errors.length > 0) {\r\n            switch (passwordConfirm.errors[0]) {\r\n                case 'length': list.push('[password *] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    const registAction = () => {\r\n\r\n        (async () => {\r\n            let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n            let results = await response.json();\r\n            console.log(JSON.stringify(results[0].cnt));\r\n            const isExist = results[0].cnt > 0;\r\n            if (isExist) {\r\n                setMessageList(['That user id has already been recorded.']);\r\n            } else {\r\n                const nextSeq = await DataUtil.getNextUserSeq();\r\n                console.log(nextSeq);\r\n                await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(seq, id, password) VALUES(${nextSeq}, '${userId.value}', '${password.value}')`);\r\n                store.system.user = {\r\n                    seq: nextSeq,\r\n                    id: userId.value,\r\n                    password: password.value,\r\n                    email: '',\r\n                };\r\n                store.cloud = {\r\n                    projects: []\r\n                };\r\n                store.system.dialog = (<ConfirmDialog.Component\r\n                    message='You have successfully created an account!'\r\n                    buttons={[\r\n                        {\r\n                            label: 'OK',\r\n                            callback: () => {\r\n                                store.system.dialog = (<AccountFrame />);\r\n                                setStore({...store});\r\n                            }\r\n                        }\r\n                    ]}\r\n                />);\r\n                setStore({...store});\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0 && passwordConfirm.errors.length === 0;\r\n    }\r\n    const isAuthOK = () => {\r\n        return authInput.errors.length === 0 && authCollation === authInput.value;\r\n    }\r\n\r\n    return (<>\r\n\r\n        <_Frame isVisible={!isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass (Confirm).'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            },\r\n                            {\r\n                                checker: (value) => !userIdList.includes(value),\r\n                                errorType: \"relation\"\r\n                            },\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === passwordConfirm.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[passwordConfirm]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password*'}\r\n                        isPassword\r\n                        checkable={passwordConfirm}\r\n                        setCheckable={setPasswordConfirm}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === password.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[password]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Enter', isEnable: isLoginInfoOK(), callback: () => {\r\n                                    setRegist(true);\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Proof not a robot\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, input the same 6 number as the picture.'}\r\n                    />\r\n                    <_AuthText src={authPicture} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Change', callback: () => {\r\n                                    setAuthCollation(createAuthText());\r\n                                    setAuthInput({ value: '', errors: [] });\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                    {/* 照合する文字列 */}\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'6 numbers'}\r\n                        checkable={authInput}\r\n                        setCheckable={setAuthInput}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Regist', isEnable: isAuthOK(), callback: registAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setRegist(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginCreateAccount;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n\r\nconst _AuthText = styled.img<{\r\n}>`\r\n    display: block;\r\n    text-align: center;\r\n    margin: 4px auto;\r\n    background-color: #f7f0f0;\r\n    border: 1px solid #888888;\r\n    box-sizing: border-box;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport assert from \"assert\";\r\n\r\nnamespace NameDefDialog {\r\n\r\n    export const Component = (props: {\r\n        targetSeq: number,\r\n        source?: string,\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const width = 500;\r\n        const height = 150;\r\n\r\n        const isCreate = props.targetSeq === -1;\r\n        const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n        const getDefaultName = () => {\r\n            return props.targetSeq === -1 ? '' : (projects.find(p => p.seq === props.targetSeq) as StoreCloud.Project).name;\r\n        }\r\n\r\n        useEffect(() => {\r\n            name.value = getDefaultName();\r\n            setName({ ...name });\r\n        }, []);\r\n\r\n        const [existNames] = useMemo(() => {\r\n            return [\r\n                projects.map(item => item.name)\r\n            ];\r\n        }, []);\r\n\r\n        const registCreate = () => {\r\n            const result = findProjectMaxSeq();\r\n            result.then((maxSeq) => {\r\n                const newProject: StoreCloud.Project = {\r\n                    seq: Number(maxSeq + 1),\r\n                    name: name.value,\r\n                    source: props.source as string,\r\n                    lastmod: ''\r\n                };\r\n                projects.push(newProject);\r\n                insertProject(store.system.user?.seq as number, newProject).then(() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            });\r\n        }\r\n\r\n        const registUpdate = () => {\r\n            const targetItem = projects.find(item => item.seq === props.targetSeq);\r\n            if (targetItem != undefined) {\r\n                updateProjectName(props.targetSeq, name.value).then(() => {\r\n                    targetItem.name = name.value;\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            }\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: isCreate ? 'Create' : 'Update',\r\n                isEnable: name.errors.length === 0,\r\n                callback: () => {\r\n                    if (isCreate) registCreate();\r\n                    else registUpdate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, input new name!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => LogicUtil.checkFieldName(value),\r\n                                //     errorType: \"value\"\r\n                                // },\r\n                                {\r\n                                    checker: (value) => !existNames.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NameDefDialog;\r\n\r\nconst findProjectMaxSeq = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT max(seq) m FROM libdvtbl`);\r\n    const results = await response.json();\r\n    return results[0].m;\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO libdvtbl(seq, owner, name, version, outline, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${'1.0'}', '', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update libdvtbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\nimport SystemConst from \"../../../utils/systemConst\";\r\nimport LocalStorageUtil from \"../../../utils/localStorageUtil\";\r\n\r\nconst LoginLogin = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isForget, setForget] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        (async () => {\r\n            const results = await DataUtil.findUserInfoLogin(userId.value, password.value);\r\n            if (results.length > 0) {\r\n                localStorage.setItem(LocalStorageUtil.KEY_LOGIN_HASH, DataUtil.getHashedFromUserSeq(results[0].seq));\r\n                store.system.user = {\r\n                    seq: results[0].seq,\r\n                    id: results[0].id,\r\n                    password: results[0].password,\r\n                    email: results[0].email,\r\n                };\r\n                const resPrjList = await DataUtil.findUserLibdvList(results[0].seq);\r\n                store.cloud = {\r\n                    projects: resPrjList.map(res => ({\r\n                        source: res.source,\r\n                        type: res.type,\r\n                        name: res.name,\r\n                        seq: res.seq,\r\n                        lastmod: res.lastmod\r\n                    }))\r\n                };\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                    message=\"Login successful!\"\r\n                />;\r\n                setStore({ ...store });\r\n            } else {\r\n                setMessageList(['Incorrect user id or password.']);\r\n                // setPassword({ ...password, value: '' });\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0;\r\n    }\r\n\r\n    return (<>\r\n        <_Frame isVisible={!isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Enter', isEnable: isLoginInfoOK(), callback: enterAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Forgot your login information?\"\r\n                clickAction={() => {\r\n                    setForget(true);\r\n                }}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Email\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Submit login information to account address.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'email'}\r\n                        checkable={email}\r\n                        setCheckable={setEmail}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => {\r\n                                    return value.length === 0 || value.split('@').length === 2;\r\n                                },\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={500}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Send', isEnable: email.errors.length === 0, callback: () => {\r\n                                    DataUtil.findUserInfoFromEmail(email.value).then((list) => {\r\n                                        if (list.length > 0) {\r\n                                            const info = list[0];\r\n                                            const hash = DataUtil.getHashedFromUserSeq(info.seq);\r\n                                            const url = `https://demo-app.licresia.com/#/user?v=${hash}`;\r\n                                            DataUtil.sendQueryRequestToMailAPI({\r\n                                                from: 'info@licresia.com',\r\n                                                to: email.value,\r\n                                                subject: '【LiCreSia】support',\r\n                                                text: `Your login information is as follows.\\n\\nURL: ${url}\\nUSR ID: ${info.id}`\r\n                                            });\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"Your login information has been sent!\" />);\r\n                                        } else {\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"This email address is not registered.\" />);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setForget(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginLogin;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LoginCreateAccount from \"./loginCreateAccount\";\r\nimport LoginLogin from \"./loginLogin\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 500;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_LogoDiv>\r\n                <img src={logo} />\r\n            </_LogoDiv>\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {!isCreate ? <LoginLogin /> : <LoginCreateAccount />}\r\n            {/* <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        { name: 'Close', callback: closeAction },\r\n                        { name: 'Enter', callback: enterAction },\r\n                    ]}\r\n                />\r\n            </_Footer> */}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #bf808075;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n    background-color: #bf8080a2;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #c7a73e;\r\n        `}\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled, { css } from \"styled-components\";\r\nimport SystemConst, { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport LoginFrame from \"../dialog/login/loginFrame\";\r\nimport AccountFrame from \"../dialog/accountFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport LocalStorageUtil from \"../../utils/localStorageUtil\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const user = store.system.user;\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (user != null) {\r\n            setUserId('@' + user.id);\r\n        }\r\n    }, [user]);\r\n\r\n    const authButtonJsx = user == null ? (\r\n        <_LoginButton onClick={() => {\r\n            store.system.canDialogClose = true;\r\n            store.system.dialog = <LoginFrame />;\r\n            setStore({ ...store });\r\n            console.log(window.location.origin);\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Login / Sign up\r\n        </_LoginButton>\r\n    ) : (<>\r\n        <_UserName\r\n            isEntry={user != null}\r\n            onClick={() => {\r\n                store.system.dialog = <AccountFrame />;\r\n                setStore({ ...store });\r\n            }}\r\n        >{userId}</_UserName>\r\n        <_LoginButton onClick={() => {\r\n            store.system.user = null;\r\n            localStorage.removeItem(LocalStorageUtil.KEY_LOGIN_HASH);\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message={'Logout.\\nSee you next time!'}\r\n            />;\r\n            store.system.logoutActions.forEach(func => func());\r\n            setStore({ ...store });\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Logout\r\n        </_LoginButton>\r\n    </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Logo src={logo} onClick={() => window.location.reload()} />\r\n            <_Menu>\r\n                {authButtonJsx}\r\n                {/* <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language> */}\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #a6bdc7, #7895b1, #a6bdc7);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    border: 1px solid #7e7e7e;\r\n    box-sizing: border-box;\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #9afff292;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #ff393983;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 180px;\r\n    height: 100%;\r\n    padding: 3px 0;\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n    /** 横向き */\r\n    isLandscape?: boolean;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const isLandscape = props.isLandscape ?? true;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList isLandscape={isLandscape}>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList isLandscape={isLandscape}>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    isLandscape: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isLandscape ? css`\r\n        width: 100px;\r\n        height: 100%;\r\n    ` : css`\r\n        width: 100%;\r\n        height: 100px;\r\n    `}\r\n    margin-right: 5px;\r\n    background-color: #c0d3db;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div<{\r\n    isLandscape: boolean;\r\n}>`\r\n    display: inline-block;\r\n    background-color: #c0d3db;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    ${props => props.isLandscape ? css`\r\n        width: calc(100% - 105px);\r\n        height: 100%;\r\n    ` : css`\r\n        height: calc(100% - 100px);\r\n        width: 100%;\r\n    `}\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    border: 1px solid #8d9aaa7b;\r\n    box-sizing: border-box;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #d5dddf;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #cacecf;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport { MdOutlineCancelPresentation } from \"react-icons/md\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\n\r\nimport { AiOutlineInstagram, AiOutlineTwitter, AiOutlineMail, AiOutlineFacebook } from \"react-icons/ai\";\r\nimport { BsLine } from \"react-icons/bs\";\r\n\r\nimport {\r\n    EmailShareButton,\r\n    FacebookShareButton,\r\n    HatenaShareButton,\r\n    InstapaperShareButton,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    LivejournalShareButton,\r\n    MailruShareButton,\r\n    OKShareButton,\r\n    PinterestShareButton,\r\n    PocketShareButton,\r\n    RedditShareButton,\r\n    TelegramShareButton,\r\n    TumblrShareButton,\r\n    TwitterShareButton,\r\n    ViberShareButton,\r\n    VKShareButton,\r\n    WhatsappShareButton,\r\n    WorkplaceShareButton\r\n} from \"react-share\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport LocalStorageUtil from \"../../../../utils/localStorageUtil\";\r\nimport Styles from \"../../../../base/design/styles\";\r\n\r\n\r\nnamespace ShareDialog {\r\n\r\n    export const Component = (props: {\r\n        hash: string;\r\n        curIndex: number;\r\n    }) => {\r\n        const width = 500;\r\n        const height = 246;\r\n\r\n        const getURL = () => `${DataUtil.APP_SERVER_DOMAIN}/#/story?v=${props.hash}`;\r\n\r\n        const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n        const local = store.local;\r\n        const project = local.projects[props.curIndex];\r\n        project.cloudSeq = -1;\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Share your digital art!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <_UrlDiv\r\n                    value={getURL()}\r\n                    isEnable={project.isShared}\r\n                    readOnly />\r\n                <_Record\r\n                    isEnable={project.isShared}\r\n                >\r\n                    <InstapaperShareButton\r\n                        url={getURL()}\r\n                        children={<_SnsIconFrame><AiOutlineInstagram /></_SnsIconFrame>}\r\n                    />\r\n                    <TwitterShareButton\r\n                        url={getURL()}\r\n                        children={<_SnsIconFrame><AiOutlineTwitter /></_SnsIconFrame>}\r\n                    />\r\n                    <MailruShareButton\r\n                        url={getURL()}\r\n                        children={<_SnsIconFrame><AiOutlineMail /></_SnsIconFrame>}\r\n                    />\r\n                    <FacebookShareButton\r\n                        url={getURL()}\r\n                        children={<_SnsIconFrame><AiOutlineFacebook /></_SnsIconFrame>}\r\n                    />\r\n                    <LineShareButton\r\n                        url={getURL()}\r\n                        children={<_SnsIconFrame><BsLine /></_SnsIconFrame>}\r\n                    />\r\n                </_Record>\r\n                <FormUtil.Record\r\n                    marginTop={10}\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.SwitchTwoFace\r\n                            label1=\"Private\"\r\n                            label2=\"Shared\"\r\n                            rate1={50}\r\n                            rate2={50}\r\n                            width={320}\r\n                            isUse={project.isShared}\r\n                            callback={() => {\r\n                                if (!project.isShared) {\r\n                                    project.isShared = true;\r\n                                } else {\r\n                                    project.isShared = false;\r\n                                }\r\n                                const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + project.localSeq.toString();\r\n                                localStorage.setItem(fileKey, JSON.stringify(project));\r\n                                dispatcher.updateStore();\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShareDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    margin: 8px 0 0 0;\r\n    text-align: center;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _TextAreaDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 4px;\r\n    width: calc(100% - 8px);\r\n    height: 120px;\r\n    margin: 10px 0 0 4px;\r\n    border: 2px solid #3d3d3d;\r\n    box-sizing: border-box;\r\n`;\r\nconst _UrlDiv = styled.textarea<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 4px;\r\n    width: calc(100% - 8px);\r\n    height: 60px;\r\n    margin: 4px 0 0 4px;\r\n    border: 1px solid #3d3d3d;\r\n   background-color: #ebf5f557;\r\n   /* background-color: transparent; */\r\n   outline: none;\r\n   font-size: 18px;\r\n   color: #0041a3;\r\n   resize: none;\r\n   box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _SnsIconFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 8px;\r\n    width: 60px;\r\n    height: 60px;\r\n    border: 2px solid #555555;\r\n    background-color: #f0f0f0e1;\r\n    box-sizing: border-box;\r\n    font-size: 50px;\r\n    color: #666;\r\n    margin: 0 2px;\r\n`;","import assert from \"assert\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryUtil from \"../launcher/util/storyUtil\";\r\nimport NameDefDialog from \"./nameDefDialog\";\r\nimport NewProjectDialog from \"./newProjectDialog\";\r\nimport NewProjectDialogStoryOnly from \"./newProjectDialogStoryOnly\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n    const listItemJsx = store.cloud == null ? [] : store.cloud.projects.map((project, i) => {\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    setFcsListIdx(i);\r\n                    console.log(DataUtil.getHashedFromProjectSeq(project.seq));\r\n                }}\r\n            >\r\n                <_Name>{project.name}</_Name>\r\n                {/* <_Date> -{item.lastmod}</_Date> */}\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    const hasData = store.libraryData != null;\r\n    const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n    useEffect(() => {\r\n        if (store.cloud == null) {\r\n            setFcsListIdx(-1);\r\n        }\r\n    }, [store.cloud]);\r\n\r\n    const [elementSize, developCnt, privateCnt, releaseCnt, logicCnt, fuseCnt] = useMemo(() => {\r\n        if (store.libraryData == null) return [0, 0, 0, 0, 0, 0];\r\n        let size = 0;\r\n        const incrRec = (wrap: LogicUtil.WrapElement) => {\r\n            size++;\r\n            const listName = LogicElementUtil.getListParamName(wrap.type);\r\n            if (listName != null) {\r\n                const list = wrap.data[listName] as LogicUtil.WrapElement[];\r\n                list.forEach(wrap => incrRec(wrap));\r\n            }\r\n        }\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        incrRec(root.logicMng);\r\n        incrRec(root.seedMng);\r\n\r\n        let developCnt = 0;\r\n        let privateCnt = 0;\r\n        let releaseCnt = 0;\r\n        let fuseCnt = 0;\r\n        const seedMng = root.seedMng.data as LogicUtil.NodeSeedManager;\r\n        seedMng.defs.forEach(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n            switch (seed.permit) {\r\n                case 'develop': developCnt++; break;\r\n                case 'private': privateCnt++; break;\r\n                case 'release': releaseCnt++; break;\r\n            }\r\n        });\r\n\r\n        const logicMng = root.logicMng.data as LogicUtil.NodeLogicManager;\r\n\r\n        if (store.storyData != null) {\r\n            fuseCnt = store.storyData.fuseList.length;\r\n        }\r\n        return [size, developCnt, privateCnt, releaseCnt, logicMng.defs.length, fuseCnt];\r\n    }, [store.libraryData]);\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを新規アップロードする\r\n     */\r\n    const uploadCloud = () => {\r\n        const source = DataUtil.gZip(JSON.stringify(store.libraryData));\r\n        store.system.dialog = <NameDefDialog.Component\r\n            targetSeq={-1}\r\n            source={source}\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを上書き更新する\r\n     */\r\n    const overwriteCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.gZip(JSON.stringify(store.libraryData));\r\n        updateProjectSource(curPrj.seq, source).then(() => {\r\n            curPrj.source = source;\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Update project succesful!\"\r\n            />;\r\n            setStore({ ...store });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 選択中のクラウド上のファイルを読み込む\r\n     */\r\n    const cloneCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.unZip(curPrj.source);\r\n        const data = JSON.parse(source);\r\n        store.libraryData = data;\r\n        store.system.dialog = <ConfirmDialog.Component\r\n            message=\"Clone project succesful!\"\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    const saveLocalFile = () => {\r\n        DataUtil.saveLibraryFile(store, setStore);\r\n    }\r\n\r\n    const getNewSaveButton = () => {\r\n        switch (tabIndex) {\r\n            // Cloud\r\n            case 0: return {\r\n                label: 'Upload cloud',\r\n                width: 210,\r\n                isEnable: hasData && store.cloud != null,\r\n                callback: uploadCloud\r\n            }\r\n            // Local\r\n            case 1: return {\r\n                label: 'Save file',\r\n                width: 210,\r\n                isEnable: hasData && store.fileHandle == null,\r\n                callback: () => {\r\n                    // store.fileHandle = null;\r\n                    // setStore({...store});\r\n                    saveLocalFile();\r\n                }\r\n            }\r\n        }\r\n        throw assert;\r\n    }\r\n\r\n    const getOverwriteButton = () => {\r\n        switch (tabIndex) {\r\n            // Cloud\r\n            case 0: return {\r\n                label: 'Overwrite',\r\n                width: 210,\r\n                isEnable: fcsListIdx != -1 && hasData,\r\n                callback: overwriteCloudFile\r\n            }\r\n            // Local\r\n            case 1: return {\r\n                label: 'Overwrite',\r\n                width: 210,\r\n                isEnable: hasData && store.fileHandle != null,\r\n                callback: () => {\r\n                    // store.fileHandle = null;\r\n                    // setStore({...store});\r\n                    saveLocalFile();\r\n                }\r\n            }\r\n        }\r\n        throw assert;\r\n    }\r\n\r\n    const cloudJsx = (<_ContDiv isEnable={store.cloud != null}>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Load',\r\n                    isEnable: !hasData && fcsListIdx !== -1 && projects[fcsListIdx].source !== '',\r\n                    callback: cloneCloudFile\r\n                },\r\n                {\r\n                    label: 'Rename',\r\n                    width: 110,\r\n                    isEnable: fcsListIdx != -1,\r\n                    callback: () => {\r\n                        store.system.dialog = <NameDefDialog.Component\r\n                            targetSeq={projects[fcsListIdx].seq}\r\n                        />;\r\n                        setStore({ ...store });\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Delete',\r\n                    width: 110,\r\n                    isEnable: fcsListIdx != -1,\r\n                    callback: () => {\r\n                        deleteProject(projects[fcsListIdx].seq).then(() => {\r\n                            store.system.dialog = <ConfirmDialog.Component\r\n                                message=\"Delete project succesful!\"\r\n                            />;\r\n                            projects.splice(fcsListIdx, 1);\r\n                            setFcsListIdx(fcsListIdx - 1);\r\n                            setStore({ ...store });\r\n                        });\r\n                    }\r\n                },\r\n            ]}\r\n        />\r\n        <_ListDiv>\r\n            {listItemJsx}\r\n        </_ListDiv>\r\n    </_ContDiv>);\r\n\r\n    const localJsx = (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Load',\r\n                    width: 100,\r\n                    isEnable: !hasData,\r\n                    callback: () => { DataUtil.loadFile(store, setStore) }\r\n                },\r\n                {\r\n                    label: 'Disconnect',\r\n                    width: 160,\r\n                    isEnable: store.fileHandle != null,\r\n                    callback: () => {\r\n                        store.fileHandle = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                },\r\n            ]}\r\n        />\r\n    </>);\r\n\r\n    return (<_Wrap>\r\n        <_HeaderDiv>\r\n            <FormUtil.ButtonRecord\r\n                align=\"left\"\r\n                buttons={[\r\n                    {\r\n                        label: 'New Project',\r\n                        isEnable: !hasData,\r\n                        callback: () => {\r\n                            store.libraryData = LogicElementUtil.getInitialData();\r\n                            // store.system.dialog = <NewProjectDialog.Component />;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Clear',\r\n                        width: 100,\r\n                        isEnable: hasData,\r\n                        callback: () => {\r\n                            store.libraryData = null;\r\n                            store.storyData = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                ]}\r\n            />\r\n        </_HeaderDiv>\r\n        <_BodyDiv>\r\n            <_LeftDiv isEnable={true}>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'Cloud', enable: true, cont: cloudJsx },\r\n                        { name: 'Local', enable: true, cont: localJsx },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_LeftDiv>\r\n            <_RighttDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getNewSaveButton(),\r\n                        getOverwriteButton()\r\n                    ]}\r\n                />\r\n                <FormUtil.BorderPanel\r\n                    title=\"Project\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Private\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : privateCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Release\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : releaseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Logic\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Elements\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : elementSize.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Hash\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    // width={340}\r\n                                    isRecordItem\r\n                                    value={!hasData ? '-' : DataUtil.getSHA256Hash(JSON.stringify(store.libraryData))}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Fuses\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : fuseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n                {/* <FormUtil.BorderPanel\r\n                    title=\"File\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Type\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={getProjectType()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                /> */}\r\n            </_RighttDiv>\r\n        </_BodyDiv>\r\n\r\n    </_Wrap >);\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst updateProjectSource = async (seq: number, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update libdvtbl set source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from libdvtbl where seq = ${seq};`)\r\n}\r\n\r\nconst HEADER_WIDTH = 40;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    background-color: #ebebeb30;\r\n`;\r\n\r\nconst _HeaderDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_WIDTH}px;\r\n    background-color: #d1f5f32f;\r\n`;\r\n\r\nconst _BodyDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_WIDTH}px);\r\n    background-color: #221a212c;\r\n`;\r\n\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #ffe3fb53; */\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ContDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 38px);\r\n    box-sizing: border-box;\r\n    background-color: #f0ecd43d;\r\n    border: 1px solid #002c8a;\r\n    border-radius: 4px;\r\n`;\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    type: ProjectType | '';\r\n}>`\r\n    color: #0000006d;\r\n    ${props => props.type === 'library' ? css`color: #b90000be;` : ''}\r\n    ${props => props.type === 'story' ? css`color: #003bb9bd;` : ''}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\nconst _RighttDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #cbf7cd2d;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane, TabElements } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport LogicMainteTab from \"./factory/logicMainteTab\";\r\nimport ManageTab from \"./manage/manageTab\";\r\n\r\nconst CreateChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const getProjectType = () => {\r\n        let str = '-';\r\n        if (store.libraryData != null) str = 'library';\r\n        if (store.storyData != null) str = 'scenario';\r\n        return str;\r\n    };\r\n    const projectType = getProjectType();\r\n\r\n    const tabElements: TabElements[] = [];\r\n    tabElements.push({ name: 'Manage', enable: true, cont: <ManageTab /> });\r\n    tabElements.push({ name: 'Library', enable: projectType === 'library', cont: <LogicMainteTab /> });\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={tabElements}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CreateChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport TreeUtil from \"../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../create/factory/util/logicUtil\";\r\nimport PreviewLogicFrame from \"../create/preview/previewLogicFrame\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    isOpen: boolean;\r\n    seedList: SeedProps[];\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\n\r\nconst PublishFrame = (props: {\r\n    setLibCnt: (artsCnt: number) => void;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [libList, setLibList] = useState<LibProps[]>([]);\r\n\r\n    useEffect(() => {\r\n        findAllReleaseProjectList().then((resList) => {\r\n            const libList: LibProps[] = [];\r\n            resList.forEach(res => {\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const rootData = JSON.parse(DataUtil.unZip(res.source)) as LogicUtil.WrapElement;\r\n                const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                const seedList: SeedProps[] = seedMng.defs\r\n                    .filter(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        return seed.permit === 'release';\r\n                    })\r\n                    .map(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                        const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                        return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                    });\r\n                libList.push({\r\n                    name, ownerId, lastmod, rootData, seedList, isOpen: false\r\n                });\r\n            });\r\n            setLibList(libList);\r\n            props.setLibCnt(libList.length);\r\n        });\r\n    }, []);\r\n\r\n    const download = (plainData: string) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        window.showSaveFilePicker(options).then((handle) => {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await handle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"Successfully download!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        }).catch(() => {\r\n            console.log('キャンセルされました');\r\n        });\r\n    }\r\n\r\n    const libListJsx = libList\r\n        .filter(lib => lib.seedList.length > 0).map((lib, i) => {\r\n            const dispCnt = !lib.isOpen ? 0 : lib.seedList.length;\r\n            return (<_Item key={i} count={dispCnt}>\r\n                <_Header onClick={() => {\r\n                    // window.open(DataUtil.getPreviewURL(score.seq), '_blank');\r\n                }}>\r\n                    <_Owner>{`${lib.ownerId}`}</_Owner>\r\n                    <_CName onClick={() => {\r\n                        download(JSON.stringify(lib.rootData));\r\n                    }}>{`${lib.name}`}</_CName><_CDate>{lib.lastmod}</_CDate>\r\n                </_Header>\r\n                <_DetailMain count={dispCnt}>\r\n                    {lib.seedList.map((seed, j) => {\r\n                        let labelName = seed.name;\r\n                        if (seed.disp != undefined) labelName = seed.disp;\r\n                        return (\r\n                            <_SeedItemFrame key={j} onClick={() => {\r\n                                store.system.dialog = (\r\n                                    <PreviewLogicFrame.Component\r\n                                        master={seed.master}\r\n                                        rootData={lib.rootData}\r\n                                        closeButtonAction={() => {\r\n                                            store.system.dialog = null;\r\n                                            setStore({ ...store });\r\n                                        }}\r\n                                    />\r\n                                );\r\n                                setStore({ ...store });\r\n                            }}>\r\n                                <_SeedItemInner>\r\n                                    <_SeedName>{labelName}</_SeedName>\r\n                                    <_SeedArgCnt>{` [${seed.argCount} arguments]`}</_SeedArgCnt>\r\n                                </_SeedItemInner>\r\n                            </_SeedItemFrame>\r\n                        );\r\n                    })}\r\n                </_DetailMain>\r\n                <_DetailOpen onClick={() => {\r\n                    libList[i].isOpen = !libList[i].isOpen;\r\n                    setLibList(libList.slice());\r\n                }}>\r\n                    <_CSummary>{` ${lib.seedList.length} seeds ▼`}</_CSummary>\r\n                </_DetailOpen>\r\n            </_Item>);\r\n        });\r\n\r\n    return (\r\n        <_ListFrame>{libListJsx}</_ListFrame>\r\n    );\r\n}\r\n\r\nexport default PublishFrame;\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = lib.owner) as owner, source, lastmod\r\n        FROM libdvtbl lib\r\n        WHERE source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #6d7a86;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst SEED_HEIGTH = 40;\r\nconst _Item = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${props => (props.count > 0 ? 8 : 0) + 89 + props.count * SEED_HEIGTH}px;\r\n    /* border-bottom: 1px solid #262626; */\r\n    /* background-color: #2e2e2e; */\r\n    /* background: linear-gradient(to bottom, transparent, #4f4f4f); */\r\n    margin: 2px 0 0 0;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    } */\r\n    transition: height 200ms;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100%);\r\n    height: 60px;\r\n    /* background-color: #c9e3df; */\r\n    background: linear-gradient(to bottom, #b9b9b9, #e2e2e2, #b9b9b9);\r\n    /* margin: 4px 0 0 4px; */\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff);\r\n    } */\r\n`;\r\nconst _DetailMain = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 40px);\r\n    height: ${props => (props.count > 0 ? 8 : 0) + props.count * SEED_HEIGTH}px;\r\n    background-color: #c7c7c7;\r\n    border-radius: 0 0 2px 2px;\r\n    margin: 0 0 0 20px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    transition: height 200ms;\r\n    overflow-y: hidden;\r\n`;\r\nconst _DetailOpen = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 60px);\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    margin: 0 0 0 30px;\r\n    background-color: #b1b1b1;\r\n    /* border-radius: 0 0 2px 2px; */\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    clip-path: polygon(7.5% 100%, 0% 0%, 100% 0%, 92.5% 100%);\r\n    \r\n    &:hover {\r\n        background-color: #c6d1a1;\r\n    }\r\n`;\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    \r\n    &:hover {\r\n        color: #db3333;\r\n    }\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CSummary = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 25px;\r\n    font-size: 22px;\r\n    line-height: 22px;\r\n    font-weight: 600;\r\n    color: #fffffad6;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _SeedItemFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${SEED_HEIGTH}px;\r\n    /* background-color: #a3b9c0; */\r\n    margin: 2px 0 0 0;\r\n    /* padding-left: 4px; */\r\n    text-align: left;\r\n`;\r\nconst _SeedItemInner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 2px;\r\n    border: 1px solid #0000002e;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    line-height: 29px;\r\n    font-weight: 600;\r\n    padding: 0 0 0 5px;\r\n    &:hover {\r\n        background-color: #bbd4dc;\r\n    }\r\n`;\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #000f74;\r\n`;\r\nconst _SeedArgCnt = styled.span<{\r\n}>`\r\n    color: #c7020265;\r\n`;","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport releaseNote from \"../../resource/release_note.json\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\ntype NotePorp = {\r\n    version: string;\r\n    date: string;\r\n    note: string;\r\n}\r\n\r\nconst ReleaseNote = () => {\r\n    const { store } = useContext(GlobalContext);\r\n\r\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\r\n    useEffect(() => {\r\n        // fetch('assets/release_note.json')\r\n        //     .then(response => response.json()) // (2) レスポンスデータを取得\r\n        //     .then(json => { // (3)レスポンスデータを処理\r\n        //         const list = json as NotePorp[];\r\n        //         setJsx(list.map((item, i) => {\r\n        //             const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n        //             return (\r\n        //                 <_Item key={i}>\r\n        //                     <_Header>v{item.version} ({item.date})</_Header>\r\n        //                     <_Detail>{record}</_Detail>\r\n        //                 </_Item>\r\n        //             );\r\n        //         }));\r\n        //     });\r\n\r\n        const list = releaseNote as NotePorp[];\r\n        setJsx(list.map((item, i) => {\r\n            const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n            return (\r\n                <_Item key={i}>\r\n                    <_Header>v{item.version} ({item.date})</_Header>\r\n                    <_Detail>{record}</_Detail>\r\n                </_Item>\r\n            );\r\n        }));\r\n    }, []);\r\n    return (<_ListFrame>{jsx}</_ListFrame>);\r\n}\r\n\r\nexport default ReleaseNote;\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    /* height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px); */\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #bfcace;\r\n    border: 1px solid #9b9b9b;\r\n    border-radius: 6px;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    font-weight: 600;\r\n    /* background-color: #8bdbf8; */\r\n    color: #494975;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    /* background-color: #dafce4; */\r\n    color: #754949;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PublishFrame from \"./publishFrame\";\r\nimport ReleaseNote from \"./releaseNote\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [userCount, setUserCount] = useState(0);\r\n    const [artsCnt, setArtsCnt] = useState(0);\r\n\r\n    useEffect(() => {\r\n        countUsers().then(cnt => {\r\n            setUserCount(cnt);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <ReleaseNote />\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{artsCnt} libruary have been published.</_MessageRecord>\r\n            <PublishFrame setLibCnt={setArtsCnt}/>\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeChannel;\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { VscGitPullRequestCreate } from 'react-icons/vsc';\r\nimport CreateChannel from \"../create/createChannel\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <HomeChannel /> },\r\n                    { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <CreateChannel /> },\r\n                ]}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport CanvasUtil from '../../utils/canvasUtil';\r\nimport DataUtil from '../../utils/dataUtil';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <_Logo src={logo} />\r\n                </_Title>\r\n                <_VERSION>{DataUtil.APP_VERSION + ' beta'}</_VERSION>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2023 Pixel Flare All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#858892, #8e99b6);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    /* color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-shadow: 1px 2px 22px #0000003d; */\r\n    text-align: center;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    /* & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    } */\r\n`;\r\n\r\nconst _VERSION = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 240px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #ebe7ab;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n    /* height: 200%; */\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { useState } from \"react\";\r\nimport { initialStore } from \"../../redux/store/store\";\r\nimport styled from \"styled-components\";\r\nimport GloballDialog from \"../dialog/globalDialog\";\r\nimport TotalHeader from \"./totalHeader\";\r\nimport MainFrame from \"./mainFrame\";\r\nimport ModeSelectDialog from \"./modeSelectDialog\";\r\nimport Splash from \"./splash\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\n\r\nconst PCRoot = () => {\r\n    const [store, setStore] = useState(initialStore);\r\n\r\n    const splashJsx = !store.system.isSplash ? <></> : (\r\n        <Splash\r\n            remove={() => {\r\n                store.system.isSplash = false;\r\n                // store.system.dialog = <ModeSelectDialog />\r\n                setStore({ ...store });\r\n            }}\r\n        />\r\n    );\r\n\r\n    return (<>\r\n        {splashJsx}\r\n        < _Wrap >\r\n            <GloballDialog />\r\n            <TotalHeader />\r\n            <_MainDiv>\r\n                <MainFrame />\r\n            </_MainDiv>\r\n        </_Wrap >\r\n    </>);\r\n}\r\n\r\nexport default PCRoot;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    min-width: 1200px;\r\n    min-height: 900px;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #a3c1c7;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import PublishFrame from \"../../contents/home/publishFrame\";\r\n\r\nconst SPLibraryChannel = () => {\r\n\r\n    return (<PublishFrame setLibCnt={()=>{}}/>);\r\n}\r\n\r\nexport default SPLibraryChannel;","\r\nimport LogicUtil from \"../../../../contents/create/factory/util/logicUtil\";\r\nimport libraries from \"../../../../resource/library/library.json\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\n\r\nnamespace LibraryLoader {\r\n\r\n    export type LibInfo = {\r\n        name: string;\r\n        version: string;\r\n        outline: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const getOfficialList = (): LibInfo[] => {\r\n        return libraries.map(lib => {\r\n            return {\r\n                name: lib.name,\r\n                version: lib.version,\r\n                outline: lib.outline,\r\n                rootData: JSON.parse(DataUtil.unZip(lib.source.toString())) as LogicUtil.WrapElement\r\n            }\r\n        });\r\n    }\r\n\r\n    export const getExtendList = () => {\r\n        const list: LibInfo[] = [];\r\n\r\n\r\n        return list;\r\n    }\r\n}\r\n\r\nexport default LibraryLoader;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport StoreCloud from \"../../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport { ProjectType, ProjectTypes } from \"../../../../redux/store/store\";\r\nimport { AiOutlineEnter, AiOutlineCheck } from \"react-icons/ai\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport LogicUtil from \"../../../../contents/create/factory/util/logicUtil\";\r\nimport LibraryLoader from \"./libraryLoader\";\r\nimport LocalStorageUtil from \"../../../../utils/localStorageUtil\";\r\nimport StoreLocalStrage from \"../../../../redux/store/storeLocalStrage\";\r\n\r\nnamespace NewScenarioDialog {\r\n\r\n    type CloudLibInfo = {\r\n        seq: number;\r\n        name: string;\r\n        ownerId: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const Component = (props: {\r\n        defaultName: string;\r\n        extendAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [cloudLibs, setCloudLibs] = useState<null | CloudLibInfo[]>(null);\r\n        // const [scenarioName, setScenarioName] = useState<FormUtil.CheckableValue>({ value: 'new_project_0', errors: [] });\r\n        const [focusLibIndex, setFocusLibIndex] = useState<number>(0);\r\n        const [isExtend, setExtend] = useState<boolean>(false);\r\n\r\n        const width = 500;\r\n        const height = 618;\r\n\r\n        // useEffect(() => {\r\n        //     findAllReleaseProjectList().then(resList => {\r\n        //         setCloudLibs(resList.map(res => {\r\n        //             return {\r\n        //                 name: res.name,\r\n        //                 ownerId: res.owner,\r\n        //                 seq: res.seq,\r\n        //                 rootData: JSON.parse(DataUtil.unZip(res.source))\r\n        //             }\r\n        //         }));\r\n        //     });\r\n        // }, []);\r\n\r\n        const officialPackList = useMemo(() => {\r\n            return LibraryLoader.getOfficialList();\r\n        }, []);\r\n\r\n        const extendPackList = useMemo(() => {\r\n            return !isExtend ? [] : LibraryLoader.getExtendList();\r\n        }, [isExtend]);\r\n\r\n        const libPackJsxList = useMemo(() => {\r\n            return (!isExtend ? officialPackList : extendPackList).map((pack, i) => {\r\n                const isFocus = focusLibIndex === i;\r\n                return (\r\n                    <_LibItem key={i}\r\n                        isFocus={isFocus}\r\n                        onClick={() => {\r\n                            setFocusLibIndex(i);\r\n                        }}\r\n                    >\r\n                        <_CheckDiv>{isFocus ? <AiOutlineCheck /> : <></>}</_CheckDiv>\r\n                        <_LibInfo>\r\n                            <_LibName>{pack.name}</_LibName>\r\n                            <_LibVersion>{pack.version}</_LibVersion>\r\n                            <_LibOutline>{pack.outline}</_LibOutline>\r\n                        </_LibInfo>\r\n                    </_LibItem>\r\n                );\r\n            });\r\n        }, [isExtend, focusLibIndex]);\r\n\r\n        const getStoryLib = () => {\r\n            // let storyLib: LogicUtil.WrapElement | null = null;\r\n            // if (cloudLibs != null) {\r\n            //     const lib = cloudLibs.find(lib => lib.seq === Number(selectedLib.value));\r\n            //     if (lib != undefined) {\r\n            //         storyLib = lib.rootData;\r\n            //     }\r\n            // }\r\n            // return storyLib;\r\n            return (!isExtend ? officialPackList : extendPackList)[focusLibIndex];\r\n        }\r\n\r\n        // const usingHash = useMemo(() => {\r\n        //     let hash = '-';\r\n        //     const lib = getStoryLib();\r\n        //     if (lib != null) {\r\n        //         hash = DataUtil.getSHA256Hash(JSON.stringify(lib));\r\n        //     }\r\n        //     return hash;\r\n        // }, [selectedLib]);\r\n\r\n        // const isCreateEnabled = () => {\r\n        //     return usingHash !== '-';\r\n        // }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                icon: <MdCancelPresentation />,\r\n                width: 120,\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Create',\r\n                icon: <AiOutlineEnter />,\r\n                width: 120,\r\n                callback: () => {\r\n                    const lib = getStoryLib();\r\n                    \r\n                    store.libraryData = lib.rootData;\r\n                    store.storyData = {\r\n                        limitFrame: 300,\r\n                        limitParticle: 3000,\r\n                        fuseList: []\r\n                    };\r\n                    store.system.dialog = null;\r\n\r\n                    const local = store.local;\r\n                    //ファイルキーを生成\r\n                    const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + local.maxSeq.toString();\r\n\r\n                    // プロジェクトファイルのインスタンスを作成\r\n                    const project: StoreLocalStrage.Project = {\r\n                        name: props.defaultName,\r\n                        libraryData: lib.rootData,\r\n                        libName: `${lib.name} ${lib.version}`,\r\n                        localSeq: local.maxSeq,\r\n                        scenarioData: store.storyData,\r\n                        lastmod: DataUtil.getStringFromDate(new Date()),\r\n                        cloudSeq: -1,\r\n                        isShared: false\r\n                    };\r\n                    // ローカルストレージに新しいファイルキーでデータを作成\r\n                    localStorage.setItem(fileKey, JSON.stringify(project));\r\n                    // 画面のリストに即時反映するためにstoreにも追加\r\n                    local.projects.push(project);\r\n\r\n                    // 編集中のシーケンスとして設定\r\n                    store.editing.localSeq = local.maxSeq;\r\n                    store.editing.libName = `${lib.name} ${lib.version}`;\r\n\r\n                    // シーケンスの最大値を加算\r\n                    local.maxSeq ++;\r\n                    // ローカルストレージのシーケンスを更新\r\n                    localStorage.setItem(LocalStorageUtil.KEY_SCENARIO_SEQ, local.maxSeq.toString());\r\n                    setStore({ ...store });\r\n                    if (props.extendAction != undefined) props.extendAction();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, select library!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                {/* <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    marginBottom={10}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={320}\r\n                            checkable={scenarioName}\r\n                            setCheckable={setScenarioName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 24),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => !existNameList.includes(value),\r\n                                //     errorType: \"relation\"\r\n                                // }\r\n                            ]}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.SwitchTwoFace\r\n                            label1=\"Official\"\r\n                            label2=\"Extend\"\r\n                            rate1={50}\r\n                            rate2={50}\r\n                            width={320}\r\n                            isUse={isExtend}\r\n                            isEditable={false}\r\n                            callback={() => {\r\n                                setExtend(!isExtend);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n\r\n                <FormUtil.BorderPanel\r\n                    title=\"Library\"\r\n                    height={422}\r\n                    // isDisable={store.cloud == null}\r\n                    backgroundColor=\"#ffffff26\"\r\n                    innerJsx={<>\r\n                        {libPackJsxList}\r\n                    </>}\r\n                />\r\n                {/* <FormUtil.FormRecord\r\n                    titleLabel=\"Library\"\r\n                    isEnabled={cloudLibs != null}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={selectedLib}\r\n                            width={278}\r\n                            setCheckable={setSelectedLib}\r\n                            list={(cloudLibs ?? []).map((item) => {\r\n                                // const disp = `${item.ownerId}: ${item.name}`;\r\n                                return { value: item.seq.toString(), labelText: item.name };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewScenarioDialog;\r\n\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\n\r\nconst _LibItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: 100px;\r\n    margin: 0 0 4px 4px;\r\n    background-color: #d3d3d3df;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #e4ec9996;\r\n    `}\r\n    border: 1px solid #8f8f8f;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _CheckDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 60px;\r\n    height: 60px;\r\n    margin: 20px 0 0 4px;\r\n    background-color: #e7e7e765;\r\n    border: 1px solid #8f8f8fac;\r\n    box-sizing: border-box;\r\n    border-radius: 10px;\r\n    font-size: 55px;\r\n    font-weight: 600;\r\n    color: #02db02;\r\n`;\r\n\r\nconst _LibInfo = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin-left: 5px;\r\n    position: relative;\r\n    width: calc(100% - 74px);\r\n    vertical-align: top;\r\n    /* background-color: #3fda6129; */\r\n`;\r\n\r\n\r\nconst _LibName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    max-width: calc(100% - 40px);\r\n    height: 50px;\r\n    margin-right: 6px;\r\n    /* background-color: #da3f3f64; */\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #435688;\r\n    overflow-x: hidden;\r\n    line-height: 48px;\r\n`;\r\n\r\nconst _LibVersion = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 34px;\r\n    height: 50px;\r\n    /* background-color: #3f68da63; */\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c7454c;\r\n    vertical-align: top;\r\n    line-height: 58px;\r\n`;\r\n\r\nconst _LibOutline = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 48px;\r\n    /* background-color: #3fda6129; */\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #6a6d75;\r\n\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport assert from \"assert\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\nimport { AiOutlineEnter } from \"react-icons/ai\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport StoreCloud from \"../../../../redux/store/storeCloud\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport LocalStorageUtil from \"../../../../utils/localStorageUtil\";\r\nimport NewScenarioDialog from \"./newScenarioDialog\";\r\n\r\nnamespace NameDefDialogLocal {\r\n\r\n    export const Component = (props: {\r\n        focusIndex: number;\r\n        extendAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const width = 500;\r\n        const height = 170;\r\n\r\n        const local = store.local;\r\n\r\n        // ローカルのシーケンス最大値と同じ場合はこれから作成するものなのでcreate\r\n        const isCreate = props.focusIndex === -1;\r\n\r\n        const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n        const getDefaultName = () => {\r\n            if (isCreate) {\r\n                let num = 0;\r\n                while (true) {\r\n                    const checkName = `${LocalStorageUtil.DEFAULT_FILE_NAME_PREFIX}${num}`;\r\n                    if (local.projects.find(p => p.name === checkName) == undefined) {\r\n                        return checkName;\r\n                    }\r\n                    num++;\r\n                }\r\n            } else {\r\n                const curProject = local.projects[props.focusIndex];\r\n                return curProject.name;\r\n            }\r\n        }\r\n\r\n        useEffect(() => {\r\n            name.value = getDefaultName();\r\n            setName({ ...name });\r\n        }, []);\r\n\r\n        const [existNames] = useMemo(() => {\r\n            return [\r\n                local.projects.map(item => item.name)\r\n            ];\r\n        }, []);\r\n\r\n\r\n        const registCreate = () => {\r\n        }\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, input new name!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => LogicUtil.checkFieldName(value),\r\n                                //     errorType: \"value\"\r\n                                // },\r\n                                {\r\n                                    checker: (value) => !existNames.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Cancel',\r\n                            icon: <MdCancelPresentation />,\r\n                            width: 130,\r\n                            callback: () => {\r\n                                store.system.dialog = null;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: isCreate ? 'Regist' : 'Update',\r\n                            icon: <AiOutlineEnter />,\r\n                            width: 130,\r\n                            isEnable: name.errors.length === 0,\r\n                            callback: () => {\r\n                                if (isCreate) {\r\n                                    store.system.dialog = <NewScenarioDialog.Component\r\n                                        defaultName={name.value}\r\n                                        extendAction={props.extendAction}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                                else {\r\n                                    const curProject = local.projects[props.focusIndex];\r\n                                    curProject.name = name.value;\r\n                                    const key = `${LocalStorageUtil.KEY_SCENARIO_PREFIX}${curProject.localSeq}`;\r\n                                    localStorage.setItem(key, JSON.stringify(curProject));\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                };\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NameDefDialogLocal;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../../../contents/dialog/confirmDialog\";\r\nimport NewProjectDialogStoryOnly from \"../../../contents/create/manage/newProjectDialogStoryOnly\";\r\nimport NameDefDialog from \"../../../contents/create/manage/nameDefDialog\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport StoryUtil from \"../../../contents/create/launcher/util/storyUtil\";\r\nimport LogicUtil from \"../../../contents/create/factory/util/logicUtil\";\r\nimport { BsFillShareFill } from 'react-icons/bs';\r\nimport { VscPreview } from \"react-icons/vsc\";\r\nimport { FiUpload, FiDownload } from \"react-icons/fi\";\r\nimport { IoCreateOutline } from \"react-icons/io5\";\r\nimport { ImCopy } from \"react-icons/im\";\r\nimport { MdClear, MdOutlineDriveFileRenameOutline } from \"react-icons/md\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\n\r\nimport ShareDialog from \"./etc/shareDialog\";\r\nimport { setuid } from \"process\";\r\nimport NewScenarioDialog from \"./etc/newScenarioDialog\";\r\nimport LocalStorageUtil from \"../../../utils/localStorageUtil\";\r\nimport assert from \"assert\";\r\nimport StoreLocalStrage from \"../../../redux/store/storeLocalStrage\";\r\nimport NameDefDialogLocal from \"./etc/nameDefDialogLocal\";\r\n\r\nconst SPManageFrame = (props: {\r\n    isEdit: boolean;\r\n    setEdit: (isEdit: boolean) => void;\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n\r\n    const [update, setUpdate] = useState({});\r\n\r\n    const hasData = store.libraryData != null;\r\n    const projects = store.local.projects;\r\n\r\n    useEffect(() => {\r\n        store.system.logoutActions.push(() => {\r\n            setFcsListIdx(-1);\r\n        });\r\n        // dispatcher.updateStore();\r\n    }, []);\r\n\r\n    const getData = () => {\r\n        if (!hasData) return null;\r\n        const data: StoryUtil.ScenarioFileProps = {\r\n            libraryData: store.libraryData as LogicUtil.WrapElement,\r\n            scenarioData: store.storyData as StoryUtil.StoryData\r\n        };\r\n        return data;\r\n    }\r\n\r\n    const projectItemJsxList = projects.map((project, i) => {\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    if (fcsListIdx === i) setFcsListIdx(-1);\r\n                    else setFcsListIdx(i);\r\n                    // console.log(DataUtil.getHashedFromProjectSeq(project.seq));\r\n                }}\r\n                onContextMenu={() => {\r\n                    // store.system.dialog = <ConfirmDialog.Component\r\n                    //     message={DataUtil.getDirectUrl(project.type, project.seq)}\r\n                    // />;\r\n                    // setStore({ ...store });\r\n                }}\r\n            >\r\n                {/* <_Status type={project.type}>[{project.type}] </_Status> */}\r\n                <_Name>{project.name}</_Name>\r\n                <_Share\r\n                    onClick={() => {\r\n                        localStorage.setItem(LocalStorageUtil.KEY_SCENARIO_PREFIX + project.localSeq.toString(), JSON.stringify(project));\r\n\r\n                        store.system.dialog = <ShareDialog.Component\r\n                            curIndex={i}\r\n                            hash={DataUtil.getHashedFromProjectSeq(project.localSeq)}\r\n                        />;\r\n                        store.system.canDialogClose = true;\r\n                        dispatcher.updateStore();\r\n                    }}\r\n                ><_Icon isShare={project.isShared}><BsFillShareFill /></_Icon></_Share>\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    const thumbJsxList = useMemo(() => {\r\n        const storyData = store.storyData;\r\n        if (storyData == null) return [];\r\n        const thumbJsx: JSX.Element[] = [];\r\n        storyData.fuseList.forEach((fuse) => {\r\n\r\n            const cache = store.fuseCacheList.find(cache => cache.seq === fuse.seq);\r\n\r\n            if (cache != undefined) {\r\n                cache.thumbList.forEach((thumb) => {\r\n                    const imgJsx = thumb == undefined ? <></> : <_Img src={thumb.url} />;\r\n                    thumbJsx.push(\r\n                        <_SampleDiv key={thumbJsx.length}>\r\n                            <_CanvasDiv>\r\n                                {imgJsx}\r\n                            </_CanvasDiv>\r\n                        </_SampleDiv>\r\n                    );\r\n                });\r\n            };\r\n        });\r\n        return thumbJsx.filter((thumn, i) => i < 30);\r\n    }, [props.isEdit, update]);\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを新規アップロードする\r\n     */\r\n    const uploadCloud = () => {\r\n        const source = DataUtil.gZip(JSON.stringify(getData()));\r\n        store.system.dialog = <NameDefDialog.Component\r\n            targetSeq={-1}\r\n            source={source}\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを上書き更新する\r\n     */\r\n    const overwriteCloudFile = () => {\r\n        // const curPrj = projects[fcsListIdx];\r\n        // const source = DataUtil.gZip(JSON.stringify(getData()));\r\n        // updateProjectSource(curPrj.seq, 'story', source).then(() => {\r\n        //     curPrj.source = source;\r\n        //     curPrj.type = 'story';\r\n        //     store.system.dialog = <ConfirmDialog.Component\r\n        //         message=\"Update project succesful!\"\r\n        //     />;\r\n        //     setStore({ ...store });\r\n        // });\r\n    }\r\n\r\n    /**\r\n     * 選択中のローカルのファイルを読み込む\r\n     */\r\n    const loadLocalFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        store.libraryData = curPrj.libraryData;\r\n        store.storyData = curPrj.scenarioData;\r\n        const fuseList = store.storyData.fuseList;\r\n\r\n        // const isLoad = fuseList.length > 0 && store.fuseCacheList.length === 0;\r\n        // if (!isLoad) return;\r\n        fuseList.forEach(fuse => {\r\n            const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n            store.fuseCacheList.push(cache);\r\n            dispatcher.story.updateCache(fuse, cache);\r\n        });\r\n        setUpdate({});\r\n\r\n        store.editing.localSeq = curPrj.localSeq;\r\n        store.editing.libName = curPrj.libName;\r\n\r\n        // props.setEdit(true);\r\n        dispatcher.updateStore();\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            isIconButton\r\n            buttons={[\r\n                !hasData ? {\r\n                    label: 'New Project',\r\n                    width: 300,\r\n                    icon: <IoCreateOutline />,\r\n                    callback: () => {\r\n                        store.system.dialog = <NameDefDialogLocal.Component\r\n                            focusIndex={-1}\r\n                            extendAction={() => {\r\n                                props.setEdit(true);\r\n                            }}\r\n                        />\r\n                        setStore({ ...store });\r\n                    }\r\n                } : {\r\n                    label: 'Close',\r\n                    width: 200,\r\n                    icon: <MdClear />,\r\n                    callback: () => {\r\n                        store.libraryData = null;\r\n                        store.storyData = null;\r\n                        store.fuseCacheList.length = 0;\r\n\r\n                        store.editing.localSeq = -1;\r\n                        dispatcher.updateStore();\r\n                        setUpdate({});\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Project\"\r\n            height={170}\r\n            // isDisable={!hasData}\r\n            isEnable={hasData}\r\n            backgroundColor=\"#ffffff26\"\r\n            innerJsx={<>\r\n                {/* <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    buttons={[\r\n                        {\r\n                            label: 'Upload',\r\n                            width: 210,\r\n                            icon: <FiUpload />,\r\n                            isEnable: hasData && store.cloud != null,\r\n                            callback: uploadCloud\r\n                        },\r\n                        {\r\n                            label: 'Overwrite',\r\n                            width: 210,\r\n                            icon: <FaRegSave />,\r\n                            isEnable: fcsListIdx != -1 && hasData,\r\n                            callback: overwriteCloudFile\r\n                        }\r\n                    ]}\r\n                /> */}\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Library\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            // width={340}\r\n                            isRecordItem\r\n                            value={!hasData ? '-' : store.editing.libName}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Fuses\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            value={!hasData ? '-' : store.fuseCacheList.length.toString()}\r\n                        />\r\n                    }\r\n                />\r\n                {thumbJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Files\"\r\n            height={448}\r\n            isEnable={store.editing.localSeq == -1}\r\n            backgroundColor=\"#ffffff26\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    buttons={[\r\n                        {\r\n                            label: 'Load',\r\n                            width: 130,\r\n                            icon: <FiDownload />,\r\n                            isEnable: fcsListIdx !== -1 && store.editing.localSeq == -1,\r\n                            callback: loadLocalFile\r\n                        },\r\n                        {\r\n                            label: 'Copy',\r\n                            width: 130,\r\n                            icon: <ImCopy />,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                const local = store.local;\r\n                                const project = local.projects[fcsListIdx];\r\n                                //ファイルキーを生成\r\n                                const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + local.maxSeq.toString();\r\n\r\n                                const newProject: StoreLocalStrage.Project = JSON.parse(JSON.stringify(project));\r\n                                newProject.localSeq = local.maxSeq;\r\n                                newProject.name += '_copy';\r\n                                // ローカルストレージに新しいファイルキーでデータを作成\r\n                                localStorage.setItem(fileKey, JSON.stringify(newProject));\r\n                                // 画面のリストに即時反映するためにstoreにも追加\r\n                                local.projects.push(newProject);\r\n\r\n                                // シーケンスの最大値を加算\r\n                                local.maxSeq++;\r\n                                // ローカルストレージのシーケンスを更新\r\n                                localStorage.setItem(LocalStorageUtil.KEY_SCENARIO_SEQ, local.maxSeq.toString());\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Copy project succesful!\"\r\n                                />;\r\n                                dispatcher.updateStore();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Rename',\r\n                            width: 130,\r\n                            icon: <MdOutlineDriveFileRenameOutline />,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                store.system.dialog = <NameDefDialogLocal.Component\r\n                                    focusIndex={fcsListIdx}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Delete',\r\n                            width: 130,\r\n                            icon: <RiDeleteBinLine />,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                const local = store.local;\r\n                                const project = local.projects[fcsListIdx];\r\n                                //ファイルキーを生成\r\n                                const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + project.localSeq.toString();\r\n\r\n                                // ローカルストレージにから削除\r\n                                localStorage.removeItem(fileKey);\r\n                                // 画面のリストに即時反映するためにstoreからも削除\r\n                                local.projects.splice(fcsListIdx, 1);\r\n\r\n                                setFcsListIdx(-1);\r\n\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Delete project succesful!\"\r\n                                />;\r\n                                dispatcher.updateStore();\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {projectItemJsxList}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default SPManageFrame;\r\n\r\nconst updateProjectSource = async (seq: number, type: string, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set type = '${type}', source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from prjcttbl where seq = ${seq};`)\r\n}\r\n\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 55px;\r\n    /* background-color: #004df390; */\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    line-height: 64px;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    type: ProjectType | '';\r\n}>`\r\n    color: #0000006d;\r\n    ${props => props.type === 'library' ? css`color: #b90000be;` : ''}\r\n    ${props => props.type === 'story' ? css`color: #003bb9bd;` : ''}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\n\r\nconst _Share = styled.span<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 1px;\r\n    /* background-color: #00eb6a76; */\r\n`;\r\n\r\nconst _Icon = styled.div<{\r\n    isShare: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 40px;\r\n    height: 55px;\r\n    /* background-color: #eb000076; */\r\n    font-size: 30px;\r\n    color: #75757592;\r\n    ${props => !props.isShare ? '' : css`\r\n        color: #eb032a;\r\n    `}\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst WND_SIZE = 40;\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    /* margin: 0 0 0 2px; */\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Img = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport StoryUtil from \"../../../../contents/create/launcher/util/storyUtil\";\r\nimport { FuseBean } from \"../../../../contents/create/launcher/storyTab\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport LogicUtil from \"../../../../contents/create/factory/util/logicUtil\";\r\nimport LogicFormUtil from \"../../../../contents/create/factory/util/logicFormUtil\";\r\nimport LogicElementUtil from \"../../../../contents/create/factory/util/logicElementUtil\";\r\nimport CanvasUtil from \"../../../../utils/canvasUtil\";\r\nimport BuildUtil from \"../../../../contents/create/preview/buildUtil\";\r\nimport { AiOutlineEnter } from \"react-icons/ai\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\n\r\nconst FuseMainteDialog = (props: {\r\n    focus: number;\r\n    seedList: FuseBean[];\r\n    // isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: (frame: number, seedId: string, values: number[]) => void;\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const [newFrame, setNewFrame] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n    const [seed, setSeed] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [preset, setPreset] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const isInputOK = seed.errors.length === 0 && newFrame.errors.length === 0 && formList.find(form => form.errors.length > 0) == undefined;\r\n\r\n    const mapping = () => {\r\n        if (props.focus === -1) return;\r\n        const curFuse = fuseList[props.focus];\r\n        setNewFrame({ ...newFrame, value: curFuse.frame.toString() });\r\n        setSeed({ ...seed, value: curFuse.seedId.toString() });\r\n        setFormList(curFuse.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    }\r\n\r\n    const initFormList = (seedId: string) => {\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seedId;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n        }\r\n        setFormList(argumentList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }\r\n\r\n    const createSeq = () => {\r\n        return fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if(props.focus !== -1) mapping();\r\n    }, []);\r\n\r\n    const propertiesFormJsx = useMemo(() => {\r\n        if (seed.value === '') return <></>;\r\n\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        let presetList: LogicUtil.NodeSampleItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seed.value;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n            formgrpList = activeSeed.formgrps;\r\n            presetList = activeSeed.presets;\r\n        }\r\n        return (<>\r\n            <FormUtil.BorderPanel\r\n                title=\"Preset\"\r\n                innerJsx={<FormUtil.Record\r\n                    jsx={<>\r\n                        <FormUtil.Combobox\r\n                            width={250}\r\n                            checkable={preset}\r\n                            setCheckable={setPreset}\r\n                            headBlank\r\n                            list={presetList.map((sample, i) => {\r\n                                return {\r\n                                    labelText: sample.name,\r\n                                    value: i.toString()\r\n                                }\r\n                            })}\r\n                        />\r\n                        <FormUtil.ButtonItem\r\n                            button={{\r\n                                label: 'Apply',\r\n                                isEnable: preset.value !== '',\r\n                                callback: () => {\r\n                                    const selectedIndex = Number(preset.value);\r\n                                    const values = presetList[selectedIndex].values;\r\n                                    values.forEach((value, i) => {\r\n                                        formList[i].value = value.toString();\r\n                                    });\r\n                                    setFormList(formList.slice());\r\n                                }\r\n                            }}\r\n                        />\r\n                    </>}\r\n                />}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Properties\"\r\n                innerJsx={<>{\r\n                    LogicFormUtil.buildPreviewForms(\r\n                        false, argumentList, formgrpList, formList, setFormList\r\n                    )\r\n                }</>}\r\n            />\r\n        </>);\r\n    }, [preset, formList]);\r\n\r\n    return (\r\n        <_Frame\r\n            width={600}\r\n            height={872}\r\n            scrollLock={store.env.scrollLock}\r\n        >\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        icon: <MdCancelPresentation />,\r\n                        width: 120,\r\n                        // isEnable: props.isModify,\r\n                        callback: () => {\r\n                            props.cancelAction();\r\n                            // setPreset({ ...preset, value: '' });\r\n                            // mapping();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Regist',\r\n                        icon: <AiOutlineEnter />,\r\n                        width: 120,\r\n                        isEnable: isInputOK,\r\n                        callback: () => {\r\n\r\n\r\n                            let fuse: StoryUtil.Fuse | null = null;\r\n                            let cache: StoryUtil.Cache | null = null;\r\n                            if (props.focus === -1) {\r\n                                fuse = { seq: createSeq(), frame: 0, seedId: '', values: [] };\r\n                                fuseList.push(fuse);\r\n\r\n                                cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n                                store.fuseCacheList.push(cache);\r\n                            } else {\r\n                                fuse = fuseList[props.focus];\r\n                                const fuseSeq = fuse.seq;\r\n                                cache = store.fuseCacheList.find(cache => cache.seq === fuseSeq) as StoryUtil.Cache;\r\n                            }\r\n\r\n                            fuse.frame = Number(newFrame.value);\r\n                            fuse.seedId = seed.value;\r\n                            const activeSeed = props.seedList.find(item => {\r\n                                return item.name === seed.value;\r\n                            });\r\n                            // fuse.dispName = activeSeed?.disp;\r\n                            fuse.values = formList.map(form => form.value);\r\n                            dispatcher.story.updateCache(fuse, cache);\r\n                            (store.storyData as StoryUtil.StoryData).fuseList = fuseList.slice();\r\n                            store.system.dialog = null;\r\n                            dispatcher.updateStore();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Base\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isNumber\r\n                                checkable={newFrame}\r\n                                setCheckable={setNewFrame}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Seed\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                checkable={seed}\r\n                                setCheckable={(checkable) => {\r\n                                    initFormList(checkable.value);\r\n                                    setSeed({ ...checkable });\r\n                                }}\r\n                                list={props.seedList.map(seed => {\r\n                                    return { value: seed.name, labelText: seed.disp ?? seed.name }\r\n                                })}\r\n                                headBlank\r\n                                width={250}\r\n                                validates={\r\n                                    [\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n            {propertiesFormJsx}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default FuseMainteDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    scrollLock: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #cfd7dae6;\r\n    border: 1px solid #474747;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n    overflow-y: ${props => !props.scrollLock ? 'auto' : 'hidden'};\r\n`;","import styled, { css, keyframes } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport StoryUtil from \"../../../../contents/create/launcher/util/storyUtil\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport FuseMainteDialog from \"./fuseMainteDialog\";\r\nimport { FuseBean } from \"../../../../contents/create/launcher/storyTab\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\nimport { GrView } from \"react-icons/gr\";\r\nimport { ImCopy } from \"react-icons/im\";\r\nimport assert from \"assert\";\r\n\r\nconst COL_WIDTH_LIST = [48, 252, 150];\r\n\r\nconst OPTION_BUTTON_WIDTH = 112;\r\n\r\nconst FuseList = (props: {\r\n    focus: number;\r\n    setFocus: (focus: number) => void;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const createSeq = () => {\r\n        return storyData.fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    const recordJsxList = useMemo(() => {\r\n        return storyData.fuseList.map((fuse, i) => {\r\n\r\n            const cache = store.fuseCacheList.find(cache => cache.seq === fuse.seq);\r\n            \r\n            const curSeed = props.seedList.find(item => {\r\n                return item.name === fuse.seedId;\r\n            });\r\n            assert(curSeed != undefined, 'curSeed is undefined.');\r\n\r\n            let thumbJsx: JSX.Element[] = [];\r\n            if (cache != undefined) {\r\n                thumbJsx = cache.thumbList.slice(0, 3).map((thumb, j) => {\r\n                    const imgJsx = thumb == undefined ? <></> : <_Img src={thumb.url} />;\r\n                    return (\r\n                        <_SampleDiv key={j}>\r\n                            {/* <_SampleName>{thumb.name}</_SampleName> */}\r\n                            <_CanvasDiv>\r\n                                {imgJsx}\r\n                            </_CanvasDiv>\r\n                        </_SampleDiv>\r\n                    );\r\n                });\r\n            };\r\n            const isFocus = props.focus === i;\r\n            return (<_RecordWrap key={i}\r\n                isFocus={isFocus}\r\n            >\r\n                <_RecordCont\r\n                    onClick={() => {\r\n                        if (props.focus !== i) {\r\n                            props.setFocus(i);\r\n                        } else if (props.focus === i) {\r\n                            props.setFocus(-1);\r\n                        }\r\n                    }}\r\n                >\r\n                    <_ColWrap width={COL_WIDTH_LIST[0]}><_TextItem>{fuse.frame}</_TextItem></_ColWrap>\r\n                    <_ColWrap width={COL_WIDTH_LIST[1]}>\r\n                        <_TextItem>[{fuse.seq}] {curSeed.disp ?? fuse.seedId}</_TextItem>\r\n                        {/* <_FrameForm\r\n                            type=\"number\"\r\n                            isEditable={isFocus}\r\n                            min={0} max={storyData.limitFrame}\r\n                            step={1}\r\n                            value={storyData.fuseList[i].frame}\r\n                            onChange={(e) => {\r\n                                storyData.fuseList[i].frame = e.currentTarget.valueAsNumber;\r\n                                storyData.fuseList = storyData.fuseList.slice();\r\n                                setStore({ ...store });\r\n                            }}\r\n                        />\r\n                        <_FrameSlider\r\n                            type=\"range\"\r\n                            isEditable={isFocus}\r\n                            min={0} max={storyData.limitFrame}\r\n                            step={1}\r\n                            value={storyData.fuseList[i].frame}\r\n                            onChange={(e) => {\r\n                                storyData.fuseList[i].frame = e.currentTarget.valueAsNumber;\r\n                                storyData.fuseList = storyData.fuseList.slice();\r\n                                setStore({ ...store });\r\n                            }}\r\n                        /> */}\r\n                    </_ColWrap>\r\n                    <_ColWrap width={COL_WIDTH_LIST[2]}><_ImageItem>{thumbJsx}</_ImageItem></_ColWrap>\r\n                </_RecordCont>\r\n                <_Option isFocus={isFocus}>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        isIconButton\r\n                        buttons={[\r\n                            {\r\n                                label: 'Edit',\r\n                                icon: <FiEdit />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                // isEnable: props.isModify,\r\n                                callback: () => {\r\n                                    store.system.dialog = <FuseMainteDialog\r\n                                        focus={props.focus}\r\n                                        seedList={props.seedList}\r\n                                        cancelAction={() => {\r\n                                        }}\r\n                                        modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                        }}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Copy',\r\n                                icon: <ImCopy />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    const cloneFuse = JSON.parse(JSON.stringify(storyData.fuseList[props.focus])) as StoryUtil.Fuse;\r\n                                    cloneFuse.seq = createSeq();\r\n                                    const focusSeq = storyData.fuseList[props.focus].seq;\r\n                                    const index = store.fuseCacheList.findIndex(cache => cache.seq === focusSeq);\r\n                                    const cloneCache = JSON.parse(JSON.stringify(store.fuseCacheList[index])) as StoryUtil.Cache;\r\n                                    cloneCache.seq = cloneFuse.seq;\r\n                                    storyData.fuseList.push(cloneFuse);\r\n                                    storyData.fuseList = storyData.fuseList.slice();\r\n                                    store.fuseCacheList.push(cloneCache);\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Delete',\r\n                                icon: <RiDeleteBinLine />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    const focusSeq = storyData.fuseList[props.focus].seq;\r\n                                    storyData.fuseList.splice(props.focus, 1);\r\n                                    const index = store.fuseCacheList.findIndex(cache => cache.seq === focusSeq);\r\n                                    store.fuseCacheList.splice(index, 1);\r\n                                    setStore({ ...store });\r\n                                    props.setFocus(props.focus - 1);\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Test',\r\n                                icon: <GrView />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    dispatcher.story.openPreviewSoloDialog(props.focus);\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_Option>\r\n            </_RecordWrap>);\r\n        });\r\n    }, [storyData.fuseList, props.focus]);\r\n\r\n    return (<>\r\n        <_HeaderDiv>\r\n            <_HeaderItem width={COL_WIDTH_LIST[0]}>F</_HeaderItem>\r\n            <_HeaderItem width={COL_WIDTH_LIST[1]}>[Seq] Seed</_HeaderItem>\r\n            <_HeaderItem width={COL_WIDTH_LIST[2]}>Snapshot</_HeaderItem>\r\n        </_HeaderDiv>\r\n        <_BodyScrollDiv>\r\n            {recordJsxList}\r\n        </_BodyScrollDiv>\r\n    </>);\r\n}\r\n\r\nexport default FuseList;\r\n\r\nconst _HeaderDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #0c0c0c44;\r\n  /* background: linear-gradient(to bottom, #99a5b9, #c3cee4, #99a5b9); */\r\n  width: calc(100% - 30px);\r\n  height: 36px;\r\n  margin: 0 0 0 5px;\r\n  padding: 3px;\r\n  box-sizing: border-box;\r\n  border-radius: 2px 2px 0 0;\r\n`;\r\n\r\nconst _HeaderItem = styled.div<{\r\n    width: number;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #feffff36;\r\n  width: ${props => props.width}px;\r\n  height: 30px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  font-size: 24px;\r\n  line-height: 26px;\r\n  font-weight: 600;\r\n  font-style: italic;\r\n  color: #ffffff;\r\n  text-align: center;\r\n  margin: 0 2px;\r\n`;\r\n\r\nconst _BodyScrollDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #4d6e854e;\r\n  width: calc(100% - 10px);\r\n  height: calc(100% - 36px);\r\n  margin: 0 0 0 5px;\r\n  overflow-y: auto;\r\n`;\r\nconst fadeIn = keyframes`\r\n  from {\r\n    background-color: #bb6f6fa0;\r\n  }\r\n  to {\r\n    background-color: #fabebe58;\r\n  }\r\n`;\r\nconst _RecordWrap = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffffff37;\r\n  ${props => !props.isFocus ? '' : css`\r\n      animation: ${fadeIn} 1.2s linear infinite;\r\n  `}\r\n  width: 100%;\r\n  margin: 1px 0 0 0;\r\n  border-radius: 0 0 8px 8px;\r\n`;\r\nconst _RecordCont = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 20px); */\r\n  width: 100%;\r\n  height: 56px;\r\n  margin: 1px 0 0 0;\r\n  padding: 3px;\r\n  box-sizing: border-box;\r\n`;\r\nconst _Option = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #ebffe6f9; */\r\n  width: 100%;\r\n  height: ${props => props.isFocus ? '68' : '0'}px;\r\n  /* height: 0; */\r\n  margin: 1px 0 0 0;\r\n  overflow-y: hidden;\r\n  transition: height 0.1s;\r\n`;\r\n\r\nconst _ColWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n  display: inline-block;\r\n  width: ${props => props.width}px;\r\n  margin: 0 2px;\r\n  /* background-color: #ff0000bb; */\r\n  vertical-align: middle;\r\n`;\r\nconst _TextItem = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffffffbc;\r\n  width: 100%;\r\n  height: 30px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  padding-left: 6px;\r\n  border-radius: 4px;\r\n  font-size: 24px;\r\n  line-height: 26px;\r\n  font-weight: 600;\r\n  /* font-style: italic; */\r\n  color: #7c0025;\r\n  text-align: left;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  /* margin: 8px 2px; */\r\n`;\r\nconst _FrameForm = styled.input<{\r\n    isEditable: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #628cffb9; */\r\n  border: 1px solid #242424;\r\n  border-radius: 2px;\r\n  width: 46px;\r\n  height: 20px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  ${props => props.isEditable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n  vertical-align: middle;\r\n  font-weight: 600;\r\n  color: #180085;\r\n`;\r\nconst _FrameSlider = styled.input<{\r\n    isEditable: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffd562ba;\r\n  width: calc(100% - 50px);\r\n  height: 20px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  ${props => props.isEditable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst _ImageItem = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #ffffffbc; */\r\n  width: 100%;\r\n  height: 50px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  /* border-radius: 4px; */\r\n  color: #000850;\r\n  text-align: center;\r\n  margin: 0 2px;\r\n  vertical-align: middle;\r\n  text-align: left;\r\n`;\r\n\r\nconst WND_SIZE = 50;\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    /* margin: 0 0 0 2px; */\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Img = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport { useContext, useMemo, useState, useRef } from \"react\";\r\nimport StoryUtil from \"../../../../contents/create/launcher/util/storyUtil\";\r\nimport { FuseBean } from \"../../../../contents/create/launcher/storyTab\";\r\n\r\nexport const FRAME_LINE_WIDTH = 107;\r\n\r\nconst FrameLine = (props: {\r\n    focus: number;\r\n    setFocus: (focus: number) => void;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n    const screenRate = store.env.screenRate;\r\n\r\n    const [startY, setStartY] = useState<null | number>(null);\r\n    const [startX, setStartX] = useState<null | number>(null);\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n\r\n    const frameRateJsxList = useMemo(() => {\r\n        if (ref.current == null) return <></>;\r\n        const clientWidth = ref.current.clientWidth - 10;\r\n        const clientHeight = ref.current.clientHeight - 10;\r\n        return fuseList.map((fuse, i) => {\r\n            let left: undefined | number = undefined;\r\n            const seed = props.seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n            const posXIndex = seed.args.findIndex(arg => arg.isPosX);\r\n            if (posXIndex !== -1) {\r\n                const arg = seed.args[posXIndex];\r\n                const min = arg.min as number;\r\n                const max = arg.max as number;\r\n                const range = max - min;\r\n                const val = Number(fuse.values[posXIndex]) - min;\r\n                const rate = val / range;\r\n                left = Math.floor(clientWidth * rate);\r\n            }\r\n            const top = Math.floor(fuse.frame / limitFrame * clientHeight);\r\n            return <_FrameRate key={i}\r\n                isCurr={i === props.focus}\r\n                top={top}\r\n                left={left}\r\n            />\r\n        });\r\n    }, [fuseList, props.focus]);\r\n\r\n    const putAction = (x: number, y: number) => {\r\n        if (props.focus === -1) return;\r\n        setStartY(y);\r\n        setStartX(x);\r\n    }\r\n\r\n    const moveAction = (x: number, y: number) => {\r\n        if (startY == null || startX == null || ref.current == null) return;\r\n        const clientHeight = ref.current.clientHeight - 10;\r\n        const fuse = fuseList[props.focus];\r\n\r\n        // フレームの移動\r\n        const rate = limitFrame / clientHeight * 2;\r\n        // console.log('read ' + start);\r\n        fuse.frame += Math.floor((y - startY)/screenRate * rate);\r\n        if (fuse.frame < 0) fuse.frame = 0;\r\n        else if (fuse.frame > limitFrame) fuse.frame = limitFrame;\r\n        const prevFocusSeq = fuseList[props.focus].seq;\r\n        fuseList.sort((a, b) => a.frame - b.frame);\r\n        const nowFocusSeq = fuseList[props.focus].seq;\r\n        if (prevFocusSeq !== nowFocusSeq) {\r\n            props.setFocus(fuseList.findIndex(fuse => fuse.seq === prevFocusSeq) as number);\r\n        }\r\n\r\n        // X座標の移動\r\n        const seed = props.seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n        const posXIndex = seed.args.findIndex(arg => arg.isPosX);\r\n        if (posXIndex !== -1) {\r\n            const arg = seed.args[posXIndex];\r\n            const min = arg.min as number;\r\n            const max = arg.max as number;\r\n            const range = max - min;\r\n            const clientWidth = (ref.current as HTMLDivElement).clientWidth - 10;\r\n            const rate = range / clientWidth * 2;\r\n            let value = Number(fuse.values[posXIndex]);\r\n            value += Math.floor((x - startX)/screenRate * rate);\r\n            // 範囲外に出た場合\r\n            if (value < min) value = min;\r\n            else if (value > max) value = max;\r\n            fuse.values[posXIndex] = value.toString();\r\n            setStartX(x);\r\n        }\r\n\r\n        storyData.fuseList = fuseList.slice();\r\n        setStartY(y);\r\n        // console.log('set ' + start);\r\n        dispatcher.updateStore();\r\n    }\r\n\r\n    const releaseAction = () => {\r\n        setStartY(null);\r\n        setStartX(null);\r\n    }\r\n\r\n    return (\r\n        <_FrameLineDiv ref={ref}\r\n            isEdit={startY != null}\r\n            onMouseDown={(e) => { putAction(e.clientX, e.clientY) }}\r\n            onMouseMove={(e) => { moveAction(e.clientX, e.clientY) }}\r\n            onMouseUp={releaseAction}\r\n            onMouseLeave={releaseAction}\r\n            onTouchStart={(e) => { putAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n            onTouchMove={(e) => { moveAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n            onTouchEnd={releaseAction}\r\n            onTouchCancel={releaseAction}\r\n        >\r\n            {frameRateJsxList}\r\n        </_FrameLineDiv>\r\n    );\r\n}\r\n\r\nexport default FrameLine;\r\n\r\n\r\n\r\nconst _FrameLineDiv = styled.div<{\r\n    isEdit: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${FRAME_LINE_WIDTH}px;\r\n  height: calc(100% - 36px);\r\n  background-color: #5995a790;\r\n  ${props => !props.isEdit ? '' : css`\r\n    background-color: #85b9c990;\r\n  `}\r\n  border: 1px solid #5a0000b8;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  vertical-align: top;\r\n  margin-top: 36px;\r\n`;\r\n\r\nconst _FrameRate = styled.div<{\r\n    isCurr: boolean;\r\n    top: number;\r\n    left?: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  left: 0;\r\n  top: ${props => props.top}px;\r\n  width: 100%;\r\n  ${props => props.left == undefined ? '' : css`\r\n      width: 10px;\r\n      left: ${props.left}px;\r\n  `}\r\n  height: 10px;\r\n  background-color: #627cc5;\r\n  border-radius: 4px;\r\n  border: 1px solid #00000061;\r\n  box-sizing: border-box;\r\n  ${props => !props.isCurr ? '' : css`\r\n      background-color: #e20000;\r\n      z-index: 10;\r\n  `}\r\n`;","import { useContext, useMemo, useState, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport FuseList from \"./fuseList\";\r\nimport { GlobalContext } from \"../../../../contents/entry/systemEntry\";\r\nimport StoryUtil from \"../../../../contents/create/launcher/util/storyUtil\";\r\nimport FuseMainteDialog from \"./fuseMainteDialog\";\r\nimport { FuseBean } from \"../../../../contents/create/launcher/storyTab\";\r\nimport LogicUtil from \"../../../../contents/create/factory/util/logicUtil\";\r\nimport LogicElementUtil from \"../../../../contents/create/factory/util/logicElementUtil\";\r\nimport BuildUtil from \"../../../../contents/create/preview/buildUtil\";\r\nimport { AiOutlineAppstoreAdd } from \"react-icons/ai\";\r\nimport { FaSortAmountDownAlt } from \"react-icons/fa\";\r\nimport { VscPreview } from \"react-icons/vsc\";\r\nimport { IoSaveOutline } from \"react-icons/io5\";\r\nimport { IoSave } from \"react-icons/io5\";\r\n\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport FrameLine, { FRAME_LINE_WIDTH } from \"./frameLine\";\r\nimport assert from \"assert\";\r\nimport LocalStorageUtil from \"../../../../utils/localStorageUtil\";\r\nimport StoreLocalStrage from \"../../../../redux/store/storeLocalStrage\";\r\nimport DataUtil from \"../../../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../../../../contents/dialog/confirmDialog\";\r\n\r\nconst SPEditStoryFrame = () => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [focus, setFocus] = useState<number>(-1);\r\n    const [isPreview, setPreview] = useState<boolean>(false);\r\n    // const [seedId, setSeedId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [presetIndex, setPresetIndex] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [interval, setInterval] = useState<FormUtil.CheckableValue>({ value: store.local.putInterval.toString(), errors: [] });\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const [seedList, presetList]: [FuseBean[], StoryUtil.PresetBean[]] = useMemo(() => {\r\n        // if (store.libraryData == null) throw assert('store.libraryDataがnullです。');\r\n        assert(store.libraryData != null);\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        const seedWrapList = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n\r\n        const seedList: FuseBean[] = [];\r\n        const presetList: StoryUtil.PresetBean[] = [];\r\n        seedWrapList.forEach(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n\r\n            // 引数リストを取得\r\n            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const args = argMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n\r\n            // フォームグループリストを取得\r\n            const groupMng = LogicElementUtil.getInnerWrap(wrap, 'interface-mng', 'formgrp-mng');\r\n            let formgrps: LogicUtil.NodeFromGrpItem[] = [];\r\n            if (groupMng != null) {\r\n                formgrps = (groupMng.data as LogicUtil.NodeFromgrpManager).defines.map(wrap => wrap.data as LogicUtil.NodeFromGrpItem);\r\n            }\r\n\r\n            // プリセットリストを取得\r\n            const sampleMng = LogicElementUtil.getInnerWrap(wrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n            const presets = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n            seedList.push({\r\n                name: seed.name,\r\n                disp: seed.disp,\r\n                args, formgrps, presets\r\n            });\r\n\r\n            presets.forEach(preset => {\r\n                const dispName = (seed.disp ?? seed.name) + ': ' + preset.name;\r\n                presetList.push({\r\n                    seedId: seed.name,\r\n                    dispName,\r\n                    values: preset.values\r\n                });\r\n            });\r\n        });\r\n        return [seedList, presetList];\r\n    }, [store.libraryData]);\r\n\r\n    // useEffect(() => {\r\n    //     const isLoad = fuseList.length > 0 && store.fuseCacheList.length === 0;\r\n    //     if (!isLoad) return;\r\n    //     fuseList.forEach(fuse => {\r\n    //         const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n    //         store.fuseCacheList.push(cache);\r\n    //         dispatcher.story.updateCache(fuse, cache);\r\n    //     });\r\n    //     storyData.fuseList = fuseList.slice();\r\n    //     dispatcher.updateStore();\r\n    // }, [fuseList, store.fuseCacheList]);\r\n\r\n    const getNewFuseProps = (): {\r\n        newSeq: number;\r\n        newFrame: number;\r\n    } => {\r\n        const newSeq = fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n        const newFrame = fuseList.length === 0 ? 0 : fuseList[fuseList.length - 1].frame + Number(interval.value);\r\n        return { newSeq, newFrame };\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"left\"\r\n            isIconButton\r\n            buttons={[\r\n                {\r\n                    label: 'Preview',\r\n                    width: 140,\r\n                    icon: <VscPreview />,\r\n                    isEnable: fuseList.length > 0,\r\n                    callback: () => {\r\n                        fuseList.sort((a, b) => {\r\n                            return a.frame - b.frame;\r\n                        });\r\n                        storyData.fuseList = fuseList.slice();\r\n                        // dispatcher.updateStore();\r\n                        setPreview(true);\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Save',\r\n                    width: 140,\r\n                    icon: <IoSaveOutline />,\r\n                    isEnable: true,\r\n                    callback: () => {\r\n                        const local = store.local;\r\n                        const fileKey = LocalStorageUtil.KEY_SCENARIO_PREFIX + store.editing.localSeq.toString();\r\n                        const editingDataVal = localStorage.getItem(fileKey);\r\n                        assert(editingDataVal != null, 'editingData is null.');\r\n                        const editingData = JSON.parse(editingDataVal) as StoreLocalStrage.Project;\r\n                        editingData.lastmod = DataUtil.getStringFromDate(new Date());\r\n                        assert(store.storyData != null, 'store.storyData is null.');\r\n                        editingData.scenarioData = JSON.parse(JSON.stringify(store.storyData));\r\n                        localStorage.setItem(fileKey, JSON.stringify(editingData));\r\n\r\n                        // セーブ完了のダイアログを表示\r\n                        store.system.dialog = <ConfirmDialog.Component\r\n                            message=\"Save project succesful!\"\r\n                        />;\r\n                        dispatcher.updateStore();\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"fuse\"\r\n            height={644}\r\n            backgroundColor=\"#c9d4dd\"\r\n            innerJsx={<>\r\n                <_SeedDiv>\r\n                    <FormUtil.ButtonItem\r\n                        button={\r\n                            {\r\n                                label: 'Add',\r\n                                width: 100,\r\n                                icon: <AiOutlineAppstoreAdd />,\r\n                                callback: () => {\r\n                                    if (presetIndex.value === '') {\r\n\r\n                                        store.system.dialog = <FuseMainteDialog\r\n                                            focus={-1}\r\n                                            seedList={seedList}\r\n                                            cancelAction={() => {\r\n                                            }}\r\n                                            modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                            }}\r\n                                        />;\r\n                                        setStore({ ...store });\r\n                                    } else {\r\n                                        const preset = presetList[Number(presetIndex.value)];\r\n                                        console.log(preset);\r\n                                        const seedId = preset.seedId;\r\n                                        const seed = seedList.find(seed => seed.name === seedId) as FuseBean;\r\n                                        const newFuseProps = getNewFuseProps();\r\n                                        const fuse: StoryUtil.Fuse = {\r\n                                            seq: newFuseProps.newSeq,\r\n                                            frame: newFuseProps.newFrame,\r\n                                            seedId: '',\r\n                                            values: []\r\n                                        };\r\n                                        const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n\r\n                                        fuseList.push(fuse);\r\n                                        store.fuseCacheList.push(cache);\r\n\r\n                                        fuse.seedId = seedId;\r\n                                        // fuse.dispName = seed.disp;\r\n                                        fuse.values = preset.values.slice();\r\n                                        dispatcher.story.updateCache(fuse, cache);\r\n                                        (store.storyData as StoryUtil.StoryData).fuseList = fuseList.slice();\r\n                                        store.system.dialog = null;\r\n                                        dispatcher.updateStore();\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        }\r\n                    />\r\n                    <_FormDiv>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Preset\"\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={presetIndex}\r\n                                    setCheckable={setPresetIndex}\r\n                                    list={presetList.map((preset, i) => {\r\n                                        return { value: i.toString(), labelText: preset.dispName }\r\n                                    })}\r\n                                    headBlank\r\n                                    width={340}\r\n                                // validates={\r\n                                //     [\r\n                                //         {\r\n                                //             checker: (value) => ValidateUtil.checkRequired(value),\r\n                                //             errorType: \"required\"\r\n                                //         }\r\n                                //     ]\r\n                                // }\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Interval\"\r\n                            jsx={\r\n                                <FormUtil.TextField\r\n                                    width={100}\r\n                                    isNumber\r\n                                    checkable={interval}\r\n                                    setCheckable={setInterval}\r\n                                    validates={[\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        },\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                            errorType: \"value\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            }\r\n                        />\r\n                    </_FormDiv>\r\n                </_SeedDiv>\r\n                <_MainDiv>\r\n                    <FrameLine\r\n                        focus={focus}\r\n                        setFocus={setFocus}\r\n                        seedList={seedList}\r\n                    />\r\n                    <_FuseListFrame>\r\n                        <FuseList\r\n                            focus={focus}\r\n                            setFocus={setFocus}\r\n                            seedList={seedList}\r\n                        />\r\n                    </_FuseListFrame>\r\n                </_MainDiv>\r\n            </>}\r\n        />\r\n        {!isPreview ? <></> : <BuildUtil.BuildFrame closeAction={() => {\r\n            setPreview(false);\r\n        }} />}\r\n    </>);\r\n}\r\n\r\nexport default SPEditStoryFrame;\r\n\r\n\r\nconst _SeedDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 84px;\r\n  /* background-color: #be97ca; */\r\n  vertical-align: top;\r\n`;\r\nconst _FormDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 492px;\r\n  vertical-align: top;\r\n  /* background-color: #09fc3e; */\r\n  margin: 0 0 0 4px;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: calc(100% - 84px);\r\n  /* background-color: #c2ca97; */\r\n`;\r\n\r\nconst _FuseListFrame = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: calc(100% - ${FRAME_LINE_WIDTH}px);\r\n  height: 100%;\r\n  /* background-color: #f80707; */\r\n  vertical-align: top;\r\n`;","import styled from \"styled-components\";\r\nimport PublishFrame from \"../../../contents/home/publishFrame\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport SPManageFrame from \"./sPManageFrame\";\r\nimport SPEditStoryFrame from \"./edit/sPEditStoryFrame\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\n\r\nconst SPCreateChannel = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isEdit, setEdit] = useState<boolean>(false);\r\n    const hasData = store.libraryData != null;\r\n\r\n    return (<>\r\n        <_SwitchWrap>\r\n            <FormUtil.SwitchTwoFace\r\n                label1=\"Manage\"\r\n                label2=\"Edit\"\r\n                rate1={50}\r\n                rate2={50}\r\n                isUse={isEdit}\r\n                width={550}\r\n                isEditable={hasData}\r\n                isLarge={true}\r\n                callback={() => {\r\n                    setEdit(!isEdit);\r\n                }}\r\n            />\r\n        </_SwitchWrap>\r\n        <_MainDiv>\r\n            {!isEdit ? <SPManageFrame isEdit={isEdit} setEdit={setEdit} /> : <SPEditStoryFrame />}\r\n        </_MainDiv>\r\n    </>);\r\n}\r\n\r\nexport default SPCreateChannel;\r\n\r\nconst _SwitchWrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #9fc99e; */\r\n  width: 100%;\r\n  text-align: center;\r\n  margin-bottom: 6px;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #9fc99e; */\r\n  width: 100%;\r\n  height: calc(100% - 60px);\r\n`;","import styled from \"styled-components\";\r\nimport PublishFrame from \"../../contents/home/publishFrame\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport SPManageFrame from \"./create/sPManageFrame\";\r\nimport SPEditStoryFrame from \"./create/edit/sPEditStoryFrame\";\r\nimport { GlobalContext } from \"../../contents/entry/systemEntry\";\r\nimport LocalStorageUtil from \"../../utils/localStorageUtil\";\r\nimport { MdOutlineCleaningServices } from \"react-icons/md\";\r\nimport ConfirmDialog from \"../../contents/dialog/confirmDialog\";\r\n\r\nconst SPPropertyChannel = () => {\r\n  const { store, dispatcher } = useContext(GlobalContext);\r\n\r\n  return (<>\r\n    <FormUtil.ButtonRecord\r\n      align=\"left\"\r\n      buttons={[\r\n        {\r\n          label: 'Local storage all clear',\r\n          width: 300,\r\n          icon: <MdOutlineCleaningServices />,\r\n          callback: () => {\r\n            localStorage.removeItem(LocalStorageUtil.KEY_LOGIN_HASH);\r\n            localStorage.removeItem(LocalStorageUtil.KEY_PROP_PUT_INTERVAL);\r\n            const seqMax = Number(localStorage.getItem(LocalStorageUtil.KEY_SCENARIO_SEQ));\r\n            for (let i = 0; i <= seqMax; i++) {\r\n              localStorage.removeItem(LocalStorageUtil.KEY_SCENARIO_PREFIX + i.toString());\r\n            }\r\n            localStorage.removeItem(LocalStorageUtil.KEY_SCENARIO_SEQ);\r\n\r\n            const local = store.local;\r\n            local.maxSeq = 0;\r\n            local.projects = [];\r\n            store.editing.localSeq = -1;\r\n\r\n            // 削除完了のダイアログを表示\r\n            store.system.dialog = <ConfirmDialog.Component\r\n              message=\"All clear succesful!\"\r\n            />;\r\n            dispatcher.updateStore();\r\n          }\r\n        }\r\n      ]} />\r\n  </>);\r\n}\r\n\r\nexport default SPPropertyChannel;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #9fc99e; */\r\n  width: 100%;\r\n  height: calc(100% - 40px);\r\n`;","import ReleaseNote from \"../../contents/home/releaseNote\";\r\n\r\nconst SPInforChannel = () => {\r\n\r\n    return (<ReleaseNote />);\r\n}\r\n\r\nexport default SPInforChannel;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport DirectLinkManager from \"./directLinkManager\";\r\nimport DataUtil from \"../utils/dataUtil\";\r\nimport { SPUtil } from \"./spUtil\";\r\nimport { initialStore } from \"../redux/store/store\";\r\nimport Splash from \"../contents/entry/splash\";\r\nimport { ChannelPane } from \"../base/components/tab/channelPane\";\r\n\r\nimport { VscGitPullRequestCreate } from \"react-icons/vsc\";\r\nimport { BiInfoSquare } from \"react-icons/bi\";\r\nimport { VscSymbolProperty } from 'react-icons/vsc';\r\nimport { TbLogicAnd } from \"react-icons/tb\";\r\nimport SPLibraryChannel from \"./contents/sPLibraryChannel\";\r\nimport GloballDialog from \"../contents/dialog/globalDialog\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../utils/systemConst\";\r\nimport SPCreateChannel from \"./contents/create/sPCreateChannel\";\r\nimport TotalHeader from \"../contents/entry/totalHeader\";\r\nimport SPPropertyChannel from \"./contents/sPPropertyChannel\";\r\nimport SPInforChannel from \"./contents/sPInfoChannel\";\r\ntype ScreenBean = {\r\n    adjLeft: number;\r\n    adjTop: number;\r\n    rate: number;\r\n}\r\n\r\nconst SPRoot = (props: {\r\n}) => {\r\n    const [store, setStore] = useState(initialStore);\r\n\r\n    const [isPermit, setPermit] = useState(true);\r\n    const [screen, setScreen] = useState<ScreenBean>({ adjLeft: 0, adjTop: 0, rate: 1 });\r\n    const ref = useRef<null | HTMLDivElement>(null);\r\n\r\n    const splashJsx = !store.system.isSplash ? <></> : (\r\n        <_SplashDiv>\r\n            <Splash\r\n                remove={() => {\r\n                    store.system.isSplash = false;\r\n                    setStore({ ...store });\r\n                }}\r\n            />\r\n        </_SplashDiv>\r\n    );\r\n\r\n    const update = () => {\r\n        if (ref.current != null) {\r\n            // const [clientWidth, clientHeight] = [window.innerWidth, window.innerHeight];\r\n\r\n            const rect = ref.current.getBoundingClientRect();\r\n            const [clientWidth, clientHeight] = [rect.width, rect.height];\r\n\r\n            const cw = SPUtil.SCREEN_WIDTH;\r\n            const ch = SPUtil.SCREEN_HEIGHT;\r\n\r\n            const isFitSide = clientHeight / ch > clientWidth / cw;\r\n\r\n            const rate = !isFitSide ? clientHeight / ch : clientWidth / cw;\r\n            const adjLeft = !isFitSide ? clientWidth / 2 - (cw * rate / 2) : 0;\r\n            const adjTop = !isFitSide ? 0 : clientHeight / 2 - (ch * rate / 2);\r\n\r\n            setScreen({ adjLeft, adjTop, rate });\r\n            store.env.screenRate = rate;\r\n            setStore({...store});\r\n        }\r\n    }\r\n\r\n    // window.addEventListener('DOMContentLoaded', () => {\r\n    //     if (!isSmartPhone()) {\r\n    //         window.addEventListener('resize', update);\r\n    //     } else {\r\n    //         window.addEventListener('orientationchange resize', () => {\r\n    //             update();\r\n    //             setPermit(window.orientation === 0);\r\n    //         });\r\n    //     }\r\n    // });\r\n\r\n    // window.onorientationchange = () => {\r\n    //   setOrientation(window.orientation);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        store.system.isSPMode = true;\r\n        setStore({...store});\r\n        \r\n        update();\r\n        console.log(navigator.userAgent);\r\n        if (isSmartPhone()) {\r\n            setPermit(window.orientation === 0);\r\n        }\r\n        if (!isSmartPhone()) {\r\n            window.addEventListener('resize', () => {\r\n                update();\r\n            });\r\n        } else {\r\n            window.addEventListener('orientationchange resize', () => {\r\n                alert('change');\r\n                update();\r\n                setPermit(window.orientation === 0);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    let jsx = <_Error>Make your smartphone vertical!</_Error>;\r\n    if (isPermit) {\r\n        jsx = (\r\n            <_Contents>\r\n                {splashJsx}\r\n                <GloballDialog />\r\n                <TotalHeader />\r\n                <_ChannelWrap>\r\n                    <ChannelPane\r\n                        isLandscape={false}\r\n                        tabElements={[\r\n                            { name: 'Info', icon: <BiInfoSquare />, isEnable: true, cont: <SPInforChannel /> },\r\n                            { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <SPCreateChannel /> },\r\n                            { name: 'Library', icon: <TbLogicAnd />, isEnable: true, cont: <SPLibraryChannel />},\r\n                            // { name: 'Library', icon: <TbLogicAnd />, isEnable: false, cont: <></>},\r\n                            { name: 'Property', icon: <VscSymbolProperty />, isEnable: true, cont: <SPPropertyChannel /> },\r\n                        ]}\r\n                        activeNo={1}\r\n                    // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n                    />\r\n                </_ChannelWrap>\r\n            </_Contents>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap ref={ref}>\r\n            <_Frame left={screen.adjLeft} top={screen.adjTop} rate={screen.rate}>\r\n                {jsx}\r\n            </_Frame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SPRoot;\r\n\r\nconst isSmartPhone = () => {\r\n    // UserAgentからのスマホ判定\r\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 10px);\r\n  height: calc(100% - 10px);\r\n  background-color: #9eadc9;\r\n  margin: 5px 0 0 5px; */\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst _ChannelWrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #dbdfe7;\r\n  width: 100%;\r\n  height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst _Frame = styled.div<{\r\n    left: number;\r\n    top: number;\r\n    rate: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: ${props => props.top}px;\r\n  left: ${props => props.left}px;\r\n  transform-origin: top left;\r\n  /* width: 100%;\r\n  height: 100%; */\r\n  transform: scale(${props => props.rate});\r\n`;\r\n\r\nconst _Contents = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${SPUtil.SCREEN_WIDTH}px;\r\n  height: ${SPUtil.SCREEN_HEIGHT}px;\r\n  background-color: #929292;\r\n`;\r\n\r\nconst _Error = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #750000;\r\n    color: white;\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _SplashDiv = styled.div`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: 50%;\r\n    top: 400px;\r\n    transform-origin: center;\r\n    transform: scale(0.7);\r\n`;","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport BuildUtil from \"../../contents/create/preview/buildUtil\";\r\nimport PreviewLauncherFrame from \"../../contents/create/preview/previewLauncherFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport { Store } from \"../store/store\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private setStore: (store: Store) => void;\r\n\r\n    constructor(store: Store, setStore: (store: Store) => void) {\r\n        this.store = store;\r\n        this.setStore = setStore;\r\n    }\r\n\r\n    public updateStore = () => {\r\n        this.setStore({ ...this.store });\r\n    }\r\n\r\n    public system = {\r\n        // setUserEnv: (userEnv: UserEnv) => {\r\n        // },\r\n    }\r\n    public story = {\r\n\r\n        /**\r\n         * プレビューオールダイアログを表示する\r\n         */\r\n        openPreviewAllDialog: () => {\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const minFrame = fuseList[0].frame;\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n            const sceens: string[] = [];\r\n            let useFrame: number = 0;\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    fuseList.some(def => {\r\n                        if (def.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                        } else if (def.frame > frame) return 1;\r\n                    });\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    useFrame = frame;\r\n                }\r\n            });\r\n            this.store.system.dialog = (\r\n                <PreviewLauncherFrame.Component\r\n                    sceens={sceens}\r\n                    frameCnt={useFrame}\r\n                />\r\n            );\r\n            this.updateStore();\r\n        },\r\n\r\n        /**\r\n         * プレビューソロダイアログを表示する\r\n         */\r\n        openPreviewSoloDialog: (focus: number) => {\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n            const sceens: string[] = [];\r\n            let useFrame: number = 0;\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    const def = fuseList[focus];\r\n                    if (frame === 0) {\r\n                        LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                    }\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    useFrame = frame;\r\n                }\r\n            });\r\n            this.store.system.dialog = (\r\n                <PreviewLauncherFrame.Component\r\n                    sceens={sceens}\r\n                    frameCnt={useFrame}\r\n                />\r\n            );\r\n            this.updateStore();\r\n        },\r\n\r\n\r\n        updateCache: (fuse: StoryUtil.Fuse, cache: StoryUtil.Cache) => {\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            \r\n            cache.thumbList = [];\r\n            cache.useFrame = 0;\r\n            const seedProps = LogicElementUtil.getSeedProperties(logicData, fuse.seedId);\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                doIterate: (frame, owner) => {\r\n                    if (frame === 0) {\r\n                        LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                    }\r\n\r\n                    const thumb = seedProps.thumbnailList.find(thumb => thumb.frame === frame);\r\n                    if (thumb != undefined) {\r\n                        const url = CanvasUtil.createURL(550, 550, (ctx) => {\r\n                            // パーティクルの描画\r\n                            owner.forEach(par => {\r\n                                par.draw(ctx);\r\n                            });\r\n                            ctx.save();\r\n                        });\r\n                        cache.thumbList.push({ name: thumb.name, url });\r\n                    }\r\n                },\r\n                doEnd: (frame) => {\r\n                    cache.useFrame = frame;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","import { createContext, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport MobileRoot from '../../sp/mobileRoot';\r\nimport PCRoot from './pCRoot';\r\nimport SPRoot from '../../sp/sPRoot';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport DataUtil from '../../utils/dataUtil';\r\nimport SystemConst from '../../utils/systemConst';\r\nimport LocalStorageUtil from '../../utils/localStorageUtil';\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    setStore: React.Dispatch<React.SetStateAction<Store>>;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    // const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const [store, setStore] = useState(initialStore);\r\n    const dispatcher = new Dispatcher(store, setStore);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    useEffect(() => {\r\n        // ローカルストレージから情報取得\r\n        LocalStorageUtil.load(store, dispatcher.updateStore);\r\n    }, []);\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{ store, setStore, dispatcher }}>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <PCRoot />\r\n                </Route>\r\n                <Route path=\"/sp\" exact >\r\n                    <SPRoot />\r\n                </Route>\r\n                <Route path=\"/library\" exact >\r\n                    <MobileRoot hashKey={str} />\r\n                </Route>\r\n                <Route path=\"/story\" exact >\r\n                    <MobileRoot hashKey={str} />\r\n                </Route>\r\n            </Switch>\r\n        </GlobalContext.Provider>\r\n    );\r\n\r\n}","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport ValidateUtil from \"./validateUtil\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nnamespace FormUtil {\r\n\r\n    export type CheckableValue = {\r\n        value: string;\r\n        errors: ValidateUtil.ErrorType[];\r\n    }\r\n\r\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\r\n        let result = true;\r\n        checkables.forEach(checkable => {\r\n            if (checkable.errors.length > 0) {\r\n                result = false;\r\n                return 1;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    export const InputTextFormBak = (props: {\r\n        titleLabel?: string;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        isCenter?: boolean;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        marginTop?: number;\r\n        isReadOnly?: boolean;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const type = props.isPassword ?? false ? 'password' : 'text';\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency);\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\r\n                <_ItemnInputBak\r\n                    type={type}\r\n                    value={props.checkable.value}\r\n                    hasTitle={props.titleLabel != undefined}\r\n                    width={props.width}\r\n                    isCenter={props.isCenter ?? false}\r\n                    placeholder={props.placeholder}\r\n                    onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        props.checkable.value = value;\r\n                        props.checkable.errors = getErrors(value);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }}\r\n                    errorType={errors.length === 0 ? undefined : errors[0]}\r\n                    readOnly={props.isReadOnly}\r\n                />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n\r\n    export const Record = (props: {\r\n        isEnable?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    const DEFAULT_LABEL_WIDTH = 140;\r\n    export const FormRecord = (props: {\r\n        titleLabel?: string;\r\n        labelWidth?: number;\r\n        isEnabled?: boolean;\r\n        isVisible?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        const lablelWidth = props.labelWidth ?? DEFAULT_LABEL_WIDTH;\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnabled ?? true}\r\n                isVisible={props.isVisible ?? true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={lablelWidth}>{props.titleLabel}</_ItemnLabel>}\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FixedText = (props: {\r\n        value: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        marginLeft?: number;\r\n        isRecordItem?: boolean;\r\n    }) => {\r\n        let width: string | undefined = undefined;\r\n        if (props.isRecordItem) width = `calc(100% - ${DEFAULT_LABEL_WIDTH + 16}px)`;\r\n        if (props.width != undefined) width = props.width + 'px';\r\n        return (\r\n            <_FixedLabel width={width}>{props.value}</_FixedLabel>\r\n        );\r\n    }\r\n\r\n    export const TextField = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        isNumber?: boolean;\r\n        marginLeft?: number;\r\n        step?: number;\r\n    }) => {\r\n        const [isNaN, setNaN] = useState(false);\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        let type = props.isPassword ?? false ? 'password' : 'text';\r\n        if (props.isNumber ?? false) {\r\n            type = 'number';\r\n        }\r\n\r\n        const isEnabled = props.isEnabled ?? true;\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            if (!isEnabled) props.checkable.errors.length = 0;\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n        const step = props.step ?? 1;\r\n\r\n        return (\r\n            <_ItemnInput\r\n                type={type}\r\n                value={value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                step={step}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                    if (type === 'number') {\r\n                        setNaN(Number.isNaN(e.target.valueAsNumber));\r\n                    }\r\n                }}\r\n                onBlur={() => {\r\n                    if (type === 'number') {\r\n                        if (isNaN) props.checkable.value = ' ';\r\n                        else props.checkable.value = Number(value).toString();\r\n                        // console.log(`[${props.checkable.value}]`);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }\r\n                }}\r\n                errorType={!isEnabled || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            // isEnable={isEnable}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\r\n\r\n    export const Combobox = (props: {\r\n        list: ComboboxItemProps[];\r\n        headBlank?: boolean;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n        const headBlank = props.headBlank ?? false;\r\n        const list = props.list.slice();\r\n        if (headBlank) list.unshift({ value: '', labelText: '' });\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n\r\n        const isEnabled = props.isEnabled ?? true;\r\n        useEffect(() => {\r\n            // console.log('value: ' + props.checkable.value);\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            if (!isEnabled) props.checkable.errors.length = 0;\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        return (\r\n            <_ItemCombobox\r\n                value={props.checkable.value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    props.checkable.value = value;\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n\r\n                }}\r\n                errorType={!isEnabled || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            >{list.map((item, i) => {\r\n                return (\r\n                    <_Option key={i}\r\n                        value={item.value}\r\n                        disabled={item.isDisabled ?? false}\r\n                        isDisabled={item.isDisabled ?? false}\r\n                    >{item.labelText}</_Option>\r\n                );\r\n            })}</_ItemCombobox>\r\n        );\r\n    }\r\n\r\n    export const TextArea = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n    }) => {\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n\r\n        const isEnable = props.isEnabled ?? true;\r\n        return (\r\n            <_ItemnTextArea\r\n                value={value}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                }}\r\n                // errorType={!isEnable || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        label: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        icon?: JSX.Element;\r\n        interval?: number;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ButtonRecord = (props: {\r\n        buttons: ButtonProps[],\r\n        align?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        isIconButton?: boolean;\r\n        interval?: number;\r\n    }) => {\r\n        const align = props.align ?? 'right';\r\n        const interval = props.interval ?? 4;\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={align}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n                height={!props.isIconButton ? 40 : 68}\r\n            >\r\n                {props.buttons.map((button, i) => {\r\n                    if (button.icon == undefined) {\r\n                        return (\r\n                            <_Button\r\n                                key={i}\r\n                                isCenter={align === 'center'}\r\n                                isEnable={button.isEnable ?? true}\r\n                                width={button.width}\r\n                                interval={interval}\r\n                                onClick={button.callback}\r\n                            >{button.label}</_Button>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <_IconButton\r\n                                key={i}\r\n                                isCenter={align === 'center'}\r\n                                isEnable={button.isEnable ?? true}\r\n                                width={button.width}\r\n                                interval={interval}\r\n                                onClick={button.callback}\r\n                            >{button.icon}<br />{button.label}</_IconButton>\r\n                        );\r\n                    }\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const ButtonItem = (props: {\r\n        button: ButtonProps\r\n    }) => {\r\n        const button = props.button;\r\n        const interval = button.interval ?? 4;\r\n        if (button.icon == undefined) {\r\n            return (\r\n                <_Button\r\n                    isCenter={false}\r\n                    isEnable={button.isEnable ?? true}\r\n                    width={button.width}\r\n                    interval={interval}\r\n                    onClick={button.callback}\r\n                >{button.label}</_Button>\r\n            );\r\n        } else {\r\n            return (\r\n                <_IconButton\r\n                    isCenter={false}\r\n                    isEnable={button.isEnable ?? true}\r\n                    width={button.width}\r\n                    interval={interval}\r\n                    onClick={button.callback}\r\n                >{button.icon}<br />{button.label}</_IconButton>\r\n            );\r\n        }\r\n        // return (\r\n        //     <_Button\r\n        //         isCenter={false}\r\n        //         isEnable={props.button.isEnable ?? true}\r\n        //         width={props.button.width}\r\n        //         onClick={props.button.callback}\r\n        //     >{props.button.label}</_Button>\r\n        // );\r\n    }\r\n\r\n    export const Message = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const MessageLink = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        clickAction: () => void;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isLink={true}\r\n                    onClick={props.clickAction}\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        isVisible?: boolean;\r\n        height?: number;\r\n        backgroundColor?: string;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        // const title = props.title ?? 'title pl';\r\n        const isVisible = props.isVisible ?? true;\r\n        const isEnable = props.isEnable ?? true;\r\n        const backgroundColor = props.backgroundColor ?? '#cedadd';\r\n        return (<>\r\n            {!isVisible ? <></> : <_BorderText>{props.title}</_BorderText>}\r\n            <_BorderPanel\r\n                isEnable={isEnable}\r\n                isVisible={isVisible}\r\n                height={props.height}\r\n                backgroundColor={backgroundColor}\r\n            >{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export const InfoFrame = (props: {\r\n        height?: number;\r\n        textRecords: string[];\r\n    }) => {\r\n        const height = props.height ?? 70;\r\n        const color = '#1a9900';\r\n        return (<>\r\n            <_InfoDiv height={height} color={color}>\r\n                {props.textRecords.map((text, i) => {\r\n                    return <span key={i}>{text}<br /></span>;\r\n                })}\r\n            </_InfoDiv>\r\n        </>);\r\n    };\r\n\r\n    export const Switch = (props: {\r\n        label: string;\r\n        isUse: boolean;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        isRelation?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isRelation = props.isRelation ?? false;\r\n        const callback = isRelation && props.isUse ? () => { } : props.callback;\r\n        return (\r\n            <_Switch\r\n                isRelation={isRelation}\r\n                isUse={props.isUse}\r\n                isEnable={props.isEnable ?? true}\r\n                width={props.width}\r\n                onClick={callback}\r\n            >{props.label}</_Switch>\r\n        );\r\n    }\r\n\r\n    export const SwitchTwoFace = (props: {\r\n        label1: string;\r\n        label2: string;\r\n        width: number;\r\n        rate1: number;\r\n        rate2: number;\r\n        isUse: boolean;\r\n        isEditable?: boolean;\r\n        isEnable?: boolean;\r\n        isLarge?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isEnable = props.isEnable ?? true;\r\n        const isEditable = props.isEditable ?? true;\r\n        return (<_SwitchTwoFace\r\n            isEnable={isEnable}\r\n            isEditable={isEditable}\r\n            width={props.width}\r\n            isLarge={props.isLarge ?? false}\r\n            onClick={props.callback}\r\n        >\r\n            <_SwitchItem\r\n                isUse={isEnable && !props.isUse}\r\n                rate={props.rate1}\r\n                isLeft={true}\r\n                isEditable={isEditable}\r\n                isLarge={props.isLarge ?? false}\r\n            >{props.label1}</_SwitchItem>\r\n            <_SwitchItem\r\n                isUse={isEnable && props.isUse}\r\n                rate={props.rate2}\r\n                isLeft={false}\r\n                isEditable={isEditable}\r\n                isLarge={props.isLarge ?? false}\r\n            >{props.label2}</_SwitchItem>\r\n        </_SwitchTwoFace>);\r\n    }\r\n\r\n    export const checkItems = (list: CheckableValue[]) => {\r\n        return list.find(item => item.errors.length > 0) == undefined;\r\n    }\r\n}\r\n\r\nexport default FormUtil;\r\n\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n    textAlign: 'left' | 'center' | 'right';\r\n    marginTop: number;\r\n    marginBottom: number;\r\n    height?: number;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    width: 100%;\r\n    height: ${props => props.height ?? '40'}px;\r\n    margin-top: ${props => props.marginTop}px;\r\n    margin-bottom: ${props => props.marginBottom}px;\r\n    /* background-color: #b3b4c4; */\r\n    /* border: 1px solid #000; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    text-align: ${props => props.textAlign};\r\n`;\r\n\r\nconst _ItemnLabel = styled.div<{\r\n    labelWidth?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.labelWidth}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #b4c0c7fa, #d8d8d8, #b4c0c7fa);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n`;\r\n\r\nconst _FixedLabel = styled.div<{\r\n    width?: string;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #0c0e86;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c51a;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n    overflow-x: hidden;\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width};\r\n    `}\r\n`;\r\n\r\nconst _ItemnInputBak = styled.input<{\r\n    readOnly?: boolean;\r\n    isCenter: boolean;\r\n    hasTitle: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${props => !props.hasTitle ? css`\r\n    ` : css`\r\n        width: calc(100% - 152px);\r\n    `}\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    margin-top: 2px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    /* ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    } */\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n    // isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemCombobox = styled.select<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n        pointer-events: none;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _Option = styled.option<{\r\n    isDisabled: boolean;\r\n}>`\r\n    ${props => !props.isDisabled ? '' : css`\r\n        color: #0000004b;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n    isLink?: boolean;\r\n    isCenter: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #002c52;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => !props.isLink ? '' : css`\r\n        color: #0459a3;\r\n        user-select: none;\r\n        text-decoration: underline;\r\n        &:hover {\r\n            color: #68a4d8;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n    interval: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #c0ced6, #ebebeb, #c0ced6);\r\n    border: 1px solid #829bad;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 ${props => props.interval}px;\r\n    ${props => !props.isCenter ? css<{ interval: number }>`\r\n        margin-left: ${props => props.interval}px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        /* background: linear-gradient(to bottom, #989898, #b4b4b4, #989898); */\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst _IconButton = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n    interval: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    height: 58px;\r\n    padding: 4px 0 0 0;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #c0ced6, #ebebeb, #c0ced6);\r\n    border: 1px solid #829bad;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 ${props => props.interval}px;\r\n    ${props => !props.isCenter ? css<{ interval: number }>`\r\n        margin-left: ${props => props.interval}px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        /* background: linear-gradient(to bottom, #989898, #b4b4b4, #989898); */\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isUse: boolean;\r\n    isEnable: boolean;\r\n    width?: number;\r\n    isRelation: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    color: #515151;\r\n    border: 1px solid #747474;\r\n    ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\r\n    ` : css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#ddc1d979' : '#d898b3'};\r\n        color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n    `}\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\r\n        ` : css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#d3a1cb79' : '#d898b3'};\r\n            color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _SwitchTwoFace = styled.div<{\r\n    isEnable: boolean;\r\n    isEditable: boolean;\r\n    width: number;\r\n    isLarge: boolean;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    ${props => !props.isLarge ? css`\r\n        ${Styles.CSS_LABEL_MIDIUM}\r\n    ` : css`\r\n        ${Styles.CSS_LABEL_LARGE}\r\n    `}\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEditable ? '' : css`    \r\n        pointer-events: none;\r\n    `}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* opacity: 0.7; */\r\n    }\r\n`;\r\n\r\nconst _SwitchItem = styled.div<{\r\n    isUse: boolean;\r\n    rate: number;\r\n    isLeft: boolean;\r\n    isEditable: boolean;\r\n    isLarge: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* line-height: 25px; */\r\n    border-top: 1px solid #747474;\r\n    border-bottom: 1px solid #747474;\r\n    text-align: ${props => props.isLeft ? css`\r\n        border-left: 1px solid #747474;\r\n    ` : css`\r\n        border-right: 1px solid #747474;\r\n    `};\r\n    text-align: ${props => props.isLeft ? 'right' : 'left'};\r\n    box-sizing: border-box;\r\n    background-color: #8fa2aa;\r\n    color: #515151;\r\n    ${props => !props.isLarge ? css<{isLeft: boolean}>`\r\n        padding: 0 10px;\r\n        font-size: 16px;\r\n        border-radius: ${props => props.isLeft ? '8px 0 0 8px' : '0 8px 8px 0'};\r\n    ` : css<{isLeft: boolean}>`\r\n        font-size: 22px;\r\n        padding: 10px 10px;\r\n        border-radius: ${props => props.isLeft ? '22px 0 0 22px' : '0 22px 22px 0'};\r\n    `}\r\n    ${props => props.isEditable ? css`\r\n        ${!props.isUse ? '' : css<{isLarge: boolean}>`\r\n            color: #b30000;\r\n            ${props => !props.isLarge ? css`\r\n                font-size: 22px;\r\n            ` : css`\r\n                font-size: 28px;\r\n            `}\r\n            background-color: #dae7ec;\r\n            ${props => !props.isLarge ? css`\r\n                font-size: 22px;\r\n            ` : css`\r\n                font-size: 28px;\r\n            `}\r\n        `}\r\n    ` : css`\r\n        ${!props.isUse ? '' : css<{isLarge: boolean}>`\r\n            color: #110070;\r\n            ${props => !props.isLarge ? css`\r\n                font-size: 22px;\r\n            ` : css`\r\n                font-size: 28px;\r\n            `}\r\n            background-color: #dae7ec;\r\n        `};\r\n    `}\r\n    vertical-align: top;\r\n    transition: background-color 0.3s;\r\n`;\r\n\r\nconst _BorderText = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: #990000;\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n    height?: number;\r\n    backgroundColor: string;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    ${props => props.height == undefined ? '' : css`\r\n        height: ${props.height}px;\r\n    `}\r\n    background-color: ${props => props.backgroundColor};\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    overflow-y: auto;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    margin: 4px 0 0 0;\r\n    display: inline-block;\r\n    background-color: #e7e5e561;\r\n    border: solid 1px #949494;\r\n    width: 100%;\r\n    height: ${props => props.height}px;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: ${props => props.color};\r\n    overflow-y: auto;\r\n`;\r\n\r\n\r\nconst _ItemnTextArea = styled.textarea<{\r\n\r\n}>`\r\n   display: inline-block;\r\n   width: 100%;\r\n   height: 100%;\r\n   background-color: #ebf5f5;\r\n   font-size: 18px;\r\n   color: black;\r\n   border: none;\r\n   resize: none;\r\n   box-sizing: border-box;\r\n`;","import zlib from \"zlib\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport { sha256 } from 'js-sha256';\r\nimport Hashids from 'hashids';\r\nimport { ProjectType, Store } from \"../redux/store/store\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport ConfirmDialog from \"../contents/dialog/confirmDialog\";\r\nimport StoryUtil from \"../contents/create/launcher/util/storyUtil\";\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5001';\r\n    export const DB_SERVER_DOMAIN = 'https://hkdev-db.glitch.me';\r\n    // export const DB_SERVER_DOMAIN = 'https://crud-server001.glitch.me';\r\n\r\n    // export const APP_SERVER_DOMAIN = 'http://localhost:4333';\r\n    export const APP_VERSION = 'v1.10.0';\r\n    export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/pf_apps/' + APP_VERSION;\r\n    // export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    const DATABASE_NAME = 'pf2';\r\n\r\n    const getUserHashBuilder = () => {\r\n        return new Hashids('pf-webcache', 16);\r\n    }\r\n\r\n    export const getHashedFromUserSeq = (seq: number) => {\r\n        const hashids = getUserHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\r\n        const hashids = getUserHashBuilder();\r\n        let decryptioned = -1;\r\n        try {\r\n            decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        } catch (e) {\r\n            console.error('decode error');\r\n        }\r\n        return decryptioned;\r\n    }\r\n\r\n    const getScoreHashBuilder = () => {\r\n        return new Hashids('pf', 8);\r\n    }\r\n\r\n    export const getHashedFromProjectSeq = (seq: number) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedProjectSeq = (hashedSeq: string) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    export const getPreviewURL = (scoreSeq: number) => {\r\n        const hashedKey = getHashedFromProjectSeq(scoreSeq);\r\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql, databaseName: DATABASE_NAME })\r\n        }\r\n    }\r\n\r\n    export type SendMailParam = {\r\n        from: string,\r\n        to: string,\r\n        subject: string,\r\n        text: string\r\n    }\r\n\r\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(json)\r\n        }\r\n    }\r\n\r\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/mail',\r\n            createSendMailRequestInit(json)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserInfoList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\r\n        const results = await response.json();\r\n        return results as { id: string, email: string }[];\r\n    };\r\n\r\n    export const findUserIdList = async () => {\r\n        const results = await findUserInfoList();\r\n        return (results as { id: string }[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfoFromEmail = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserInfoFromSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoLogin = async (id: string, password: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const getNextUserSeq = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\r\n        const results = await response.json();\r\n        const nextSeq = (results[0]['seq'] as number) + 1;\r\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\r\n\r\n        return nextSeq;\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findUserLibdvList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI(\r\n            'select',\r\n            `SELECT owner, seq, name, source, lastmod FROM libdvtbl WHERE owner = ${userSeq} order by seq`\r\n        );\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const loadFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            store.fileHandle = fileHandle;\r\n            const text = DataUtil.unZip(fileContents);\r\n            const data = JSON.parse(text);\r\n            // シナリオであるかどうかの判定\r\n            if (!data.hasOwnProperty('scenarioData')) {\r\n                store.libraryData = data;\r\n            } else {\r\n                const scenarioProps = data as StoryUtil.ScenarioFileProps;\r\n                store.libraryData = scenarioProps.libraryData;\r\n                store.storyData = scenarioProps.scenarioData;\r\n            }\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Successfully file loaded!\" />;\r\n            setStore({ ...store });\r\n        })();\r\n    }\r\n\r\n    export const saveFileBak = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.libraryData as LogicUtil.WrapElement;\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        const plainData = JSON.stringify(rootData);\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const saveLibraryFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.libraryData as LogicUtil.WrapElement;\r\n        const plainData = JSON.stringify(rootData);\r\n        saveFile(store, setStore, plainData, 'plgc');\r\n    }\r\n\r\n    export const saveScenarioFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const data: StoryUtil.ScenarioFileProps = {\r\n            libraryData: store.libraryData as LogicUtil.WrapElement,\r\n            scenarioData: store.storyData as StoryUtil.StoryData\r\n        }\r\n        const plainData = JSON.stringify(data);\r\n        saveFile(store, setStore, plainData, 'pstr');\r\n    }\r\n\r\n    export const saveFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>, plainData: string, extension: string) => {\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': [`.${extension}`],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const getSHA256Hash = (original: string) => {\r\n        return sha256(original);\r\n    }\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n\r\n    // export const getDirectUrl = (seq: number) => {\r\n    //     return `${APP_SERVER_DOMAIN}/#/story?v=${getHashedFromProjectSeq(seq)}`;\r\n    // }\r\n}\r\n\r\nexport default DataUtil;"],"sourceRoot":""}