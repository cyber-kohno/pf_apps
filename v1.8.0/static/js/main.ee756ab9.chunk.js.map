{"version":3,"sources":["system/base/design/styles.tsx","App.tsx","reportWebVitals.ts","index.tsx","system/contents/dialog/confirmDialog.tsx","system/redux/store/store.tsx","system/contents/entry/directLogin.tsx","system/base/components/tab/tabbedPane.tsx","system/utils/systemConst.tsx","system/utils/canvasUtil.tsx","system/contents/graphic/particle.tsx","system/contents/graphic/drawUtil.tsx","system/contents/graphic/vectorUtil.tsx","system/contents/create/factory/util/paramUtil.tsx","system/contents/create/preview/modulateBuilder.tsx","system/contents/create/preview/previewUtil.tsx","system/utils/form/validateUtil.tsx","system/utils/treeUtil.tsx","system/contents/create/factory/detail/common/modifyOperations.tsx","system/contents/create/factory/logicMainteTab.tsx","system/contents/create/factory/detail/logic/editorArgumentMng.tsx","system/contents/create/factory/dialog/sendTemplateDialog.tsx","system/contents/create/factory/detail/logic/editorArgumentItem.tsx","system/contents/create/factory/detail/seed/editorSeedMng.tsx","system/contents/create/factory/detail/logic/editorLogicMng.tsx","system/contents/create/factory/detail/logic/editorLogicItem.tsx","system/contents/create/factory/detail/logic/editorParamItem.tsx","system/contents/create/factory/detail/logic/editorBehiviorMng.tsx","system/contents/create/factory/detail/logic/editorVisualMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnector.tsx","system/contents/create/factory/util/drawableVectorChooser.tsx","system/contents/create/factory/detail/logic/editorSendManager.tsx","system/contents/create/factory/detail/logic/editorFieldMng.tsx","system/contents/create/factory/detail/logic/editorExtendMng.tsx","system/contents/create/factory/detail/seed/editorSeedItem.tsx","system/contents/create/factory/detail/seed/editorThumbnailMng.tsx","system/contents/create/factory/detail/seed/editorThumbnailItem.tsx","system/contents/create/factory/util/logicFormUtil.tsx","system/contents/create/factory/util/logicUtil.tsx","system/contents/create/factory/detail/seed/editorSampleItem.tsx","system/contents/create/factory/detail/seed/editorSampleMng.tsx","system/contents/create/factory/detail/seed/editorInterfaceManager.tsx","system/contents/create/factory/detail/seed/editorSeedArgMng.tsx","system/contents/create/factory/detail/seed/editorSeedArgItem.tsx","system/contents/create/factory/detail/seed/editorSeedSendMng.tsx","system/contents/create/factory/detail/seed/editorFormgrpItem.tsx","system/contents/create/factory/detail/seed/editorFormgrpMng.tsx","system/contents/create/factory/util/logicElementUtil.tsx","system/contents/create/preview/previewLauncherFrame.tsx","system/contents/create/preview/inputForm/previewLogicInputForm.tsx","system/contents/create/preview/inputForm/previewSeedInputForm.tsx","system/contents/create/preview/buildUtil.tsx","system/contents/create/preview/previewLogicFrame.tsx","system/contents/create/manage/nameDefDialog.tsx","system/sp/directLinkManager.tsx","system/sp/mobileRoot.tsx","system/contents/dialog/globalDialog.tsx","system/contents/dialog/accountFrame.tsx","system/contents/dialog/login/loginCreateAccount.tsx","system/contents/dialog/login/loginLogin.tsx","system/contents/dialog/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/base/components/tab/channelPane.tsx","system/contents/create/launcher/tab/storyFuseAnalysis.tsx","system/contents/create/launcher/tab/storyProperty.tsx","system/contents/create/launcher/tab/storyEnvironment.tsx","system/contents/create/launcher/timelineFrame.tsx","system/contents/create/launcher/storyTab.tsx","system/contents/create/manage/newProjectDialog.tsx","system/contents/create/manage/newProjectDialogStoryOnly.tsx","system/sp/spUtil.tsx","system/contents/create/manage/manageTab.tsx","system/contents/create/createChannel.tsx","system/contents/home/publishFrame.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/pCRoot.tsx","system/sp/contents/sPHomeChannel.tsx","system/sp/contents/etc/shareDialog.tsx","system/sp/contents/sPManageFrame.tsx","system/sp/contents/edit/fuseMainteDialog.tsx","system/sp/contents/edit/fuseList.tsx","system/sp/contents/edit/frameLine.tsx","system/sp/contents/edit/sPEditStoryFrame.tsx","system/sp/contents/sPCreateChannel.tsx","system/sp/sPRoot.tsx","system/redux/dispatcher/dispatcher.tsx","system/contents/entry/systemEntry.tsx","system/utils/form/formUtiil.tsx","system/utils/dataUtil.tsx"],"names":["Styles","_Styles","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","FONT_LARGE","css","_templateObject7","_taggedTemplateLiteral","CSS_LABEL_SMALL","_templateObject8","CSS_LABEL_MIDIUM","_templateObject9","CSS_BUTTON_DISABLE","_templateObject10","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","App","useEffect","document","oncontextmenu","onkeydown","e","ctrlKey","includes","key","_jsx","SystemEntry","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","children","getElementById","ConfirmDialog","Component","props","_props$width","_props$height","_props$buttons","_useContext","useContext","GlobalContext","store","setStore","width","height","buttons","label","callback","system","dialog","_objectSpread","_jsxs","_Frame","_Main","_Inner","message","split","map","msg","i","FormUtil","Message","isCenter","ButtonRecord","align","ProjectTypes","initialStore","isSplash","user","canDialogClose","isSPMode","logoutActions","env","isEditLibrary","isUseLocalFile","libraryData","storyData","fuseCacheList","cloud","fileHandle","DirectLogin","seq","DataUtil","getDecryptionedUserSeq","hashKey","console","log","findUserInfoFromSeq","resList","length","Redirect","to","TabbedPane","_props$tabRecordNum","_useState","useState","activeNo","_useState2","_slicedToArray","setActiveNo","tabRecordNum","_Fragment","_LabelList","tabElements","tab","index","TabLabel","name","isActive","isEnable","enable","selectTab","undefined","selectTabIndex","_ContList","TabContents","cont","_TabLabel","onClick","_Contents","SystemConst","AUTH_TEXT_WIDTH","_SystemConst","AUTH_TEXT_HEIGHT","CanvasUtil","_CanvasUtil","createURL","draw","canvas","createElement","ctx","getContext","toDataURL","getLogoURL","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillStyle","fillText","adjust","measureText","save","getAuthTextURL","text","WIDTH","SIZE","rotate","Math","PI","char","charAt","fontRand","random","alphaRand","concat","Instance","_createClass","_this","_classCallCheck","owner","pos","prevPos","vec","frame","limit","isLive","drawer","extend","update","x","xy","y","forEach","this","_Particle","Particle","_DrawUtil","createGradDrawer","param","_param$radius","radiusBase","radius","self","_convertRgbaFromColor","flashAppearFrame","appearFrame","unitFrame","flashHideFrame","shrinkStartRate","start","floor","g","createRadialGradient","grads","rgba","convertRgbaFromColorCode","color","r","b","a","push","offset","convertColorCodeFromRgba","grad","addColorStop","globalAlpha","disappearStartRate","beginPath","arc","fill","code","value","Number","parseInt","substring","r1","g1","b1","a1","toString","slice","toWhite","rate","DrawUtil","Vector","rad","len","syncFromXY","sqrt","atan2","syncFromRad","cos","sin","_VectorUtil","VectorUtil","VisualParamType","_ParamUtil","VisualParams","Object","values","BehaviorParamType","BehaviorParams","SelfParamType","SelfParams","ExtendParamType","ExtendParams","EffectParamType","EffectParams","ModulateParamType","ModulateParams","ConstantType","Constants","ParamUtil","ModulateBuilder","build","extendList","decayRate","decayLimit","gravity","gravityLimit","PreviewUtil","_PreviewUtil","SCREEN_WIDTH","SCREEN_HEIGHT","searchElement","buildLogicProps","origin","rootData","initialValueMapList","initailArrayMapList","createParticleRec","cur","parentValueMapList","parentArrayMapList","_searchElement","_searchElement2","valueMapList","ConstantValueMap","arr","array","fieldMng","mngs","data","fields","field","paramItem","convertFormulaToValue","visualParams","params","behaviorParams","getVisualParam","convertParamsToValue","getBehaviorParam","LIMIT","POS_X","POS_Y","find","VEC_X","VEC_Y","VEC_RAD","VEC_LEN","connectMng","inherits","connect","_connector$disable","_searchElement3","connector","disable","logicItem","method","wrap","logicMng","defs","def","searchDependLogic","depend","_convertParamsToBoole","addValueMap","item","FRAME","itrfldValueMap","loopCnt","extendParams","loopCntVal","LOOP_COUNT","convertParamsToBoolean","INVOKE","_loop","_searchElement4","iterateValueMap","LOOP_ITERATE","iterateArrayMap","_arr$array$i","sendValueMapList","filter","isArray","_convertParamsToValue","sendArrayMapList","_convertParamsToArray","convertParamsToArray","DECAY_LIMIT","DECAY_RATE","GRAVITY_VAL","GRAVITY_LIMIT","RADIUS","colorR","COLOR_R","colorG","COLOR_G","colorB","COLOR_B","colorA","COLOR_A","disappearStart","DISAPPEAR_START","shrinkStart","SHRINK_START","FLASH_APPEAR_FRAME","FLASH_HIDE_FRAME","type","warpList","_warpList$find","formula","v","valueMap","m","formulaStr","varCnt","formulaItems","str","convertFormulaToBoolean","arrayMapList","RADIAN_ROUND","ValidateUtil","_ValidateUtil","checkRequired","checkStringLength","min","max","checkAsciiChars","checkIncludesChars","list","ch","indexOf","checkNumber","isNaN","checkNumberRange","num","checkAll","conditions","result","checkArrayNumber","TreeUtil","_TreeUtil","createNode","parent","depth","isOpen","getChildIndex","node","parentNode","Frame","_props$isDisable","_props$focusNode","isDisable","focusNode","ref","useRef","buildElementNodeFromData","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","jsxList","useMemo","buildJsxRecords","element","spaceList","isCurrent","_Record","current","scrollWidth","isRelation","tempNode","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","clickEvent","onDoubleClick","getLabelJsx","invalidate","_Wrap","ModifyOperations","_templateObject11","_templateObject12","FactoryTreeContext","createContext","LogicMainteTab","setFocusNode","_useState3","_useState4","isModify","setModify","_useState5","_useState6","setInvalidate","LogicUtil","getChildrenDataNode","masterNode","openPreviewDialog","PreviewLogicFrame","master","closeButtonAction","tabIndex","onKeyDown","n","_TreeDiv","_TreeHead","_TreeBody","getNodeDisplayJsx","_PropsDiv","_DetailDiv","_DetailHeader","_DetailHeaderLabel","getTypeName","Provider","setRootData","removeSelf","_node$parent","_node$parent2","_node$parent3","splice","parentWrap","listName","LogicElementUtil","getListParamName","_DetailMainDiv","getDetailComponent","EditorArgumentMng","isVisible","BorderPanel","title","innerJsx","newNode","addChild","_props$isInputOK","isComplete","isCompleteCheck","checkableFields","mappingForm","isInputOK","firstRegist","modifyRegist","SendTemplateDialog","EditorArgumentItem","_useContext2","logicNode","errors","setName","argType","setArgType","reservedList","_node$parent2$parent","getParamNameList","valueType","syncArgumentAdd","prevName","syncArgumentName","FormRecord","titleLabel","jsx","TextField","isReadOnly","checkable","setCheckable","validates","checker","errorType","checkFieldName","Combobox","ArgTypes","labelText","headBlank","refers","getArgumentRefers","syncArgumentDel","getSwapButtons","argName","searchVariableReferInFormula","varItem","newName","syncFormula","mng","visualMng","behaviorMng","inhMng","inh","_LogicElementUtil$get","_LogicElementUtil$get2","inhfld","getInnerWrap","syncParamName","_logicNode$parent","runRec","logic","conn","inhLogic","getInnerWrapFixed","sendMng","seedMng","interfaceWrap","_logicNode$parent2","connWrap","syncArgumentCallback","_logicNode$parent3","inhMngNode","getInnerNodeFixed","seedNode","interfaceNode","sendNode","entry","newArgName","paramWrap","createParamWrap","delArgName","delIndex","some","EditorSeedMng","itemWrap","EditorLogicMng","EditorLogicItem","_useMemo","el","_useMemo2","isConnect","hasArgNode","hasFieldNode","hasConnectNode","existNameList","getExistNameList","toggleElement","hasNode","listPos","wrapElement","removeChild","insertChild","getDefaultLogicMngs","syncLogicName","Record","textAlign","Switch","isUse","argumentNode","getInnerNode","hasArgument","args","fieldNode","hasField","inheritNode","hasInherit","getReplicateButton","getLocgicRefers","logicName","searchLogicReferInherit","id","logicMngNode","Level","EditorParamItem","setFormulaItems","varFormList","setVarFormList","isField","isCondition","inputType","level","FIELD","INITIAL","INHERIT_FIELD","INHERIT_EXTEND","INHERIT_SEND","SEED","argumentList","arrayArgList","fieldKeys","parentType","_getLogicNode","_node$parent4","_node$parent4$parent","_node$parent4$parent$","getLogicNode","argMng","arg","fieldName","_node$parent5","Error","_node$parent6","inhfldNode","_node$parent7","fieldKeyList","paramNameList","_node$parent8","_node$parent8$parent","addNum","delNum","parenthesisBalance","formJsxList","labelWidth","marginTop","ParamInputTypes","marginLeft","isNumber","getValueForm","isLastVar","isFormulaOK","hasFormError","varForm","getFormulaItem","syncFieldName","_Formula","isInvalid","_Var","_Sig","getFormulaJsx","getFieldRefers","mngNode","_mngNode$parent","_mngNode$parent2","_LogicElementUtil$get3","_LogicElementUtil$get4","inheritWrap","span","EditorBehiviorMng","isVector","hasDecayParam","hasGravityParam","exchangeVectorMethod","flag","trueParamElements","falseParamElements","size","exchangeElements","toggleElements","paramElements","EditorVisualMng","drawMethod","THICKNESS","hasDisappearParam","hasShrinkParam","hasFlashParam","EditorInheritConnMng","EditorInheritConnector","_disable","identify","setIdentify","setMethod","setDepend","defaultName","getNumberingOnPrefixName","isCreate","logicList","idList","initConnectorNode","syncTreeElementFromWrap","_newNode$parent","initSendParams","sendParamList","_sendNode$parent","dependItem","argWrap","getSendParamList","curParamList","isChange","ConnectTypes","isEnabled","dependency","dependLogic","inherit","newWrap","JSON","parse","stringify","getChildrenElementNode","rootNode","clone","_SendTemplateDialog","COMPONENT_WIDTH","ConnectParentPosition","xName","setXName","yName","setYName","_props$node$parent","checkItems","argNode","behaviorNode","setParamValue","prpName","targetParam","SetParentPosition","_useState7","_useState8","paramList","xParam","yParam","DrawableVectorChooser","EditorSendManager","isDepend","EditorFieldMng","EditorExtendMng","hasLoopParam","hasInvokeParam","EditorSeedItem","disp","setDisp","setEntry","permit","setPermit","_param$disp","logicNameList","seed","items","samples","PermitTypes","EditorThumbnailMng","LogicTreeContext","hasSample","WND_SIZE","EditorThumbnailItem","_node$parent$parent","seedWrap","setFrame","urls","setUrls","setTimeout","sample","getThumbnailURL","targetFrame","sampleNo","frameCnt","_node$parent3$parent","argMap","sendParams","send","_PreviewUtil$convertP","getSeedValueMap","_LogicElementUtil$get5","_PreviewUtil$convertP2","getSeedArrayMap","par","_ret","pictureJsxList","_LogicElementUtil$get6","imgJsx","_IMG","src","_SampleDiv","_SampleName","_CanvasDiv","img","FRAME_WIDTH","isDraw","setDraw","pointJsxList","xList","yList","_Point","putAction","clientRect","getBoundingClientRect","posX","posY","addPoint","moveAction","subX","subY","releaseAction","FixedText","isRecordItem","onMouseDown","clientX","clientY","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","touches","pageX","pageY","onTouchMove","onTouchEnd","onTouchCancel","_Center","clear","LogicFormUtil","buildPreviewForms","formgrpList","formList","setFormList","usedGrps","form","argument","formgrp","grp","targetForms","j","colorCode","_Message","_Type","_Range","formIndex","_Color","disabled","onChange","target","xValue","yValue","join","labelName","step","_Tsumami","input","EditorSampleItem","paramForms","setParamForms","argInfoList","formgrpMng","defines","seedargList","defval","EditorSampleMng","EditorInterfaceManager","argMngNode","sendMngNode","sampleMngNode","hasGroupNode","execute","removeChildAll","newArgWrap","groupMngNode","hasGroup","EditorSeedArgMng","EditorSeedArgItem","setMin","setMax","_useState9","_useState10","setStep","_useState11","_useState12","setDefval","_useState13","_useState14","isPosX","setPosX","_useState15","_useState16","setArray","_param$isPosX","_param$isArray","curIndex","getCurrentIndex","getSwapButtonsCallback","isUpper","sampleMng","swapNode","sendMngWrap","_arg$defval","EditorSeedSendMng","EditorFormgrpItem","groupMethod","setGroupMethod","targetList","setTargetList","seedargs","Array","FromGrpMedhods","formName","EditorFormgrpMng","_LogicUtil","COLOR_METHOD","COLOR_MNG","COLOR_LIST","COLOR_ITEM","COLOR_FIELD","isFocus","_Category","backgroundColor","detailJsx","_Span","_Field","_EditableValue","_data2$disable","_Signature","_Detail","nameJsx","_ValueType","FactDetSeedMng","FactDetArgumentMng","FactDetBehiviorMng","wrapNode","get","elementNode","_LogicElementUtil","_len","arguments","typeList","_key","_len2","_key2","innerNode","apply","_len3","_key3","_len4","_key4","innerWrap","isHead","isTail","ownerChildren","findIndex","swapOrder","ownDataChildren","curNo","swapData","_len5","dependencyMngNodes","_key5","depNode","replicateSameLevel","cloneBase","cloneDest","namable","getNamableProps","targetElement","getIdentifyParamName","childWrap","createParamWrapList","paramDataList","createVisualParams","createBehaviorParams","findSeedWrap","getInitialData","nameList","curWrap","nameParam","mngWrap","listParam","getLogicNameList","curLogicOwner","prefix","_getLogicItem","mngType","_node$parent5$parent","_node$parent5$parent$","_node$parent5$parent$2","getLogicItem","seedId","doParticleJob","fuse","_logicMng$defs$find","getOrigin","seedargMng","seedarg","getSendingValueMap","getSendingArrayMap","getSeedProperties","seedsendList","thumbnailList","_logicMng$defs$find2","PreviewLauncherFrame","PreviewLogicInputForm","logicWrap","setSendingValueMap","setSendingArrayMap","PreviewSeedInputForm","template","setTemplate","formgrpWrap","presetList","arrayMap","ButtonItem","button","selectedIndex","setTabIndex","setCur","isPlay","setPlay","sceens","previewTabJsx","_ProgressDiv","clickX","left","window","pageXOffset","_ProgressVal","_CloseButton","closeAction","BuildUtil","_BuildUtil","run","_props$guaranteeFrame","minFrame","guaranteeFrame","doIterate","particle","limitFrame","limitParticle","doEnd","runPaging","beginFrame","advanceFrame","_props$guaranteeFrame2","BuildFrame","dispatcher","storyPreviewProps","setStoryPreviewProps","useFrame","curFrame","buildCache","setBuildCache","logicData","fuseList","updateStore","isStandby","_Blind","_ProgressBox","_RateVal","getJsx","setSceens","setFrameCnt","isBuild","setBuild","sendingValueMap","_useState17","_useState18","sendingArrayMap","isSeed","buildTabJsx","_Msg","_FormDiv","NameDefDialog","DirectLinkManager","libData","setLibData","setStoryData","seedSeq","setSeedSeq","findProject","projectSeq","res","ownerId","lastmod","unZip","source","hasOwnProperty","scenarioProps","scenarioData","seedList","argCount","_Header","_seed$disp","seedName","_Item","_SeedName","_ArgCnt","getBlindJsx","isIconButton","icon","VscSettingsGear","_asyncToGenerator","_regeneratorRuntime","mark","_callee","conteseq","response","results","_context","prev","next","sendQueryRequestToAPI","sent","json","abrupt","stop","_x","MobileRoot","isPermit","adjLeft","adjTop","screen","setScreen","getDecryptionedProjectSeq","rect","clientWidth","clientHeight","isFitSide","navigator","userAgent","isSmartPhone","orientation","addEventListener","alert","_Error","top","match","GloballDialog","AccountFrame","userId","setUserId","oldPass","setOldPass","newPass","setNewPass","newPassConfirm","setNewPassConfirm","email","setEmail","userIdList","setUserIdList","emailList","setEmailList","loginProps","reloadInfo","password","findUserInfoList","info","hash","getHashedFromUserSeq","history","replaceState","userTabJsx","InputTextFormBak","isPassword","permitRegist","_Body","_Footer","passwordStr","updateUserInfo","LoginCreateAccount","isRegist","setRegist","setPassword","passwordConfirm","setPasswordConfirm","messageList","setMessageList","createAuthText","findUserIdList","authCollation","setAuthCollation","authInput","setAuthInput","authPicture","placeholder","InfoFrame","textRecords","_AuthText","nextSeq","cnt","getNextUserSeq","projects","MessageLink","clickAction","LoginLogin","isForget","setForget","resPrjList","findUserInfoLogin","findUserProjectList","findUserInfoFromEmail","url","sendQueryRequestToMailAPI","from","subject","_ref2","_callee2","userSeq","storyOnly","_context2","_x2","LoginFrame","setCreate","logo","_LogoDiv","_TypeSwitch","TotalHeader","authButtonJsx","_LoginButton","location","ImUser","_UserName","isEntry","func","_Logo","_Menu","_Language","MdOutlineLanguage","_MenuItem","TOTAL_HEADER_WIDTH","ChannelPane","_props$isLandscape","isLandscape","ChannelLabel","ChannelContents","_Icon","_Label","_templateObject13","_templateObject14","_templateObject15","_templateObject16","StoryFuseAnalysis","divide","setDivide","peak","setPeak","total","setTotal","countList","setCountList","defList","itemJsxList","rateHeight","count","_AnalisisItem","divRate","pastRate","needPoint","_AnalisisDiv","StoryProperty","setSeed","newFrame","setNewFrame","mapping","curFuse","propertiesFormJsx","activeSeed","formgrps","presets","cancelAction","modifyAction","initFormList","StoryEnvironment","setParticle","maxLimit","reduce","ITEM_WIDTH","TimelineFrame","cacheList","fusePosJsxList","newFrameRate","newFrameValue","focus","sus","cache","_Line","_Sustain","memoriJsxList","DIV_CNT","_Memori","_MeasureDiv","setNewFrameValue","MEASURE_WIDTH","StoryTab","isFuseEdit","setFuseEdit","isEnvEdit","setEnvEdit","tabActiveIndex","setTabActiveIndex","setFocus","setFuseList","groupMng","scenarioCacheList","newCache","thumbList","updateCache","createSeq","fuseJsxList","thumbJsx","thumb","_ItemDiv","_ItemFrame","_PropRecord","_FrameRecord","_SeedRecord","_ThumbFrame","val","_Title","seedProps","_ListDiv","_ListHead","cloneFuse","newSeq","_ListBody","_Timeline","_ListMain","_RightDiv","_RightInner","sort","LIST_HEAD","_templateObject17","_templateObject18","_templateObject19","_templateObject20","_templateObject21","_templateObject22","_templateObject23","_templateObject24","_store$cloud","targetSeq","p","existNames","assert","findProjectMaxSeq","maxSeq","_store$system$user","newProject","insertProject","registCreate","targetItem","updateProjectName","registUpdate","marginBottom","NewProjectDialog","req","_ref3","_callee3","_context3","_x3","_x4","setType","selectedLib","setSelectedLib","localLib","setLocalLib","cloudLibs","setCloudLibs","getStoryLib","storyLib","lib","usingHash","getSHA256Hash","findAllReleaseProjectList","_callee4","_yield$window$showOpe","_yield$window$showOpe2","file","fileContents","_context4","showOpenFilePicker","getFile","fileName","NewProjectDialogStoryOnly","selectedType","setSelectedType","MdCancelPresentation","AiOutlineEnter","extendAction","SPUtil","_SPUtil","ManageTab","fcsListIdx","setFcsListIdx","listItemJsx","project","_ListItem","getHashedFromProjectSeq","onContextMenu","getDirectUrl","_Status","_Name","getProjectType","hasData","incrRec","root","developCnt","privateCnt","releaseCnt","fuseCnt","elementSize","logicCnt","getData","uploadCloud","gZip","overwriteCloudFile","curPrj","updateProjectSource","saveLocalFile","saveLibraryFile","saveScenarioFile","cloudJsx","_ContDiv","scenarioFileProps","deleteProject","localJsx","loadFile","_HeaderDiv","_BodyDiv","_LeftDiv","_RighttDiv","getNewSaveButton","getOverwriteButton","CreateChannel","projectType","SCORE_TAB_MARGIN","PublishFrame","libList","setLibList","setLibCnt","libListJsx","dispCnt","_Owner","_CName","plainData","showSaveFilePicker","types","accept","handle","writable","createWritable","write","close","catch","_CDate","_DetailMain","_SeedItemFrame","_SeedItemInner","_SeedArgCnt","_DetailOpen","_CSummary","_ListFrame","ReleaseNote","setJsx","fetch","record","note","version","date","HOME_USER_DIV_HEIGHT","HomeChannel","userCount","setUserCount","artsCnt","setArtsCnt","countUsers","_Left","_MessageRecord","_Right","MainFrame","AiFillHome","VscGitPullRequestCreate","MAIN_FRAME_MARGIN","Splash","isSwitch","setSwitch","timerId","setTimerId","remove","clearTimeout","_NowLoading","_Copylight","fadeIn","keyframes","PCRoot","splashJsx","_MainDiv","ShareDialog","SPHomeChannel","getURL","APP_SERVER_DOMAIN","setText","_TextAreaDiv","TextArea","_UrlDiv","readOnly","InstapaperShareButton","_SnsIconFrame","AiOutlineInstagram","TwitterShareButton","AiOutlineTwitter","MailruShareButton","AiOutlineMail","FacebookShareButton","AiOutlineFacebook","LineShareButton","about","BsLine","textarea","SPManageFrame","_Share","BsFillShareFill","MdClear","IoCreateOutline","setEdit","FiUpload","FaRegSave","FiDownload","MdOutlineDriveFileRenameOutline","RiDeleteBinLine","FuseMainteDialog","preset","setPreset","fuseSeq","story","COL_WIDTH_LIST","OPTION_BUTTON_WIDTH","FuseList","recordJsxList","_Img","_RecordWrap","_RecordCont","_ColWrap","_TextItem","_ImageItem","_Option","FiEdit","ImCopy","focusSeq","cloneCache","GrView","openPreviewSoloDialog","_HeaderItem","_BodyScrollDiv","isEditable","FrameLine","startY","setStartY","startX","setStartX","frameRateJsxList","posXIndex","range","_FrameRate","isCurr","prevFocusSeq","nowFocusSeq","_FrameLineDiv","isEdit","SPEditStoryFrame","isPreview","setPreview","setSeedId","interval","setInterval","VscPreview","IoSave","_SeedDiv","AiOutlineAppstoreAdd","newFuseProps","_FuseListFrame","SPCreateChannel","SwitchTwoFace","label1","label2","rate1","rate2","SPRoot","_SplashDiv","cw","_ChannelWrap","Dispatcher","openPreviewAllDialog","RouterManage","HashRouter","basename","process","URLSearchParams","useLocation","search","Route","path","exact","_FormUtil","checkables","_props$isPassword","_props$validates","_props$dependency","_props$isEnable","_props$isCenter","_props$marginTop","_props$marginBottom","_props$isCenter2","validaters","dep","getErrors","validater","_ItemnLabel","_ItemnInputBak","hasTitle","_props$isEnable2","_props$textAlign","_props$marginTop2","_props$marginBottom2","_props$labelWidth","_props$isEnabled","_props$isVisible","_props$textAlign2","_props$marginTop3","_props$marginBottom3","lablelWidth","DEFAULT_LABEL_WIDTH","_FixedLabel","_props$isPassword2","_props$isNumber","_props$validates2","_props$dependency2","_props$step","_props$isEnabled2","setNaN","_ItemnInput","valueAsNumber","onBlur","_props$validates3","_props$dependency3","_props$headBlank","_props$isEnabled3","_props$width2","unshift","_ItemCombobox","_item$isDisabled","_item$isDisabled2","isDisabled","_props$validates4","_props$dependency4","_ItemnTextArea","_props$align","_props$marginTop4","_props$marginBottom4","_button$isEnable","_button$isEnable2","_Button","_IconButton","_button$isEnable3","_button$isEnable4","_props$isCenter3","_props$marginTop5","_props$marginBottom5","_props$isCenter4","_props$isCenter5","_props$marginTop6","_props$marginBottom6","_props$isCenter6","isLink","_props$isEnable3","_props$backgroundColo","_BorderText","_BorderPanel","_props$height2","_InfoDiv","_props$isRelation","_props$isEnable4","_Switch","_props$isEnable5","_props$isEditable","_SwitchTwoFace","_SwitchItem","isLeft","_props$marginLeft","select","_props$marginLeft2","option","_templateObject25","_templateObject26","_templateObject28","_templateObject27","_templateObject29","_templateObject30","_templateObject31","_templateObject33","_templateObject32","_templateObject34","_templateObject35","_templateObject36","_templateObject38","_templateObject37","_templateObject40","_templateObject39","_templateObject41","_templateObject42","_templateObject43","_templateObject44","_templateObject45","_templateObject46","_templateObject47","_templateObject48","_templateObject49","_templateObject50","_templateObject51","_templateObject52","_templateObject53","_templateObject54","_templateObject55","_DataUtil","DB_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","encode","Base64","hashedSeq","hashids","decode","getPreviewURL","scoreSeq","hashedKey","mode","headers","Accept","body","createSendMailRequestInit","queryType","sql","databaseName","createQueryRequestInit","saveFile","_ref4","_ref5","_callee5","_context5","_callee6","_context6","findUserScoreList","_ref7","_callee7","_context7","_x5","findScore","_ref8","_callee8","_context8","_x6","_callee9","_context9","saveFileBak","_callee10","_context10","_callee11","_context11","extension","options","_callee12","_context12","_callee13","_context13","original","sha256","content","encodeURIComponent","zlib","gzipSync","buffer","Buffer","unzipSync","decodeURIComponent","getStringFromDate","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace"],"mappings":"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","file":"static/js/main.ee756ab9.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 18px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 22px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import React, { useEffect } from 'react';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nconst App = () => {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport { useContext } from \"react\";\r\n\r\nnamespace ConfirmDialog {\r\n\r\n    export const Component = (props: {\r\n        message: string;\r\n        width?: number;\r\n        height?: number;\r\n        buttons?: FormUtil.ButtonProps[];\r\n    }) => {\r\n\r\n        const {store,  setStore } = useContext(GlobalContext);\r\n\r\n        const width = props.width ?? 600;\r\n        const height = props.height ?? 150;\r\n        const buttons = props.buttons ?? [\r\n            {\r\n                label: 'OK',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({...store});\r\n                }\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main><_Inner>\r\n                    {props.message.split('\\n').map((msg, i) => {\r\n                        return <FormUtil.Message\r\n                            key={i}\r\n                            message={msg}\r\n                            isCenter\r\n                        />\r\n                    })}\r\n                </_Inner></_Main>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons} />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 110px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* background-color: #bb6868e1; */\r\n`;","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport StoreCloud from \"./storeCloud\";\r\nimport StoreSystem from \"./storeSystem\";\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    system: StoreSystem.Param;\r\n    env: StoreSystem.Env;\r\n    libraryData: LogicUtil.WrapElement | null;\r\n    storyData: StoryUtil.StoryData | null;\r\n    fuseCacheList: StoryUtil.Cache[];\r\n    cloud: StoreCloud.Props | null;\r\n    fileHandle: FileSystemFileHandle | null;\r\n}\r\n\r\n\r\nexport const ProjectTypes = ['library', 'story'] as const;\r\nexport type ProjectType = typeof ProjectTypes[number];\r\n\r\nexport const initialStore: Store = {\r\n    system: {\r\n        isSplash: true,\r\n        user: null,\r\n        dialog: null,\r\n        canDialogClose: false,\r\n        isSPMode: false,\r\n        logoutActions: []\r\n    },\r\n    env: {\r\n        isEditLibrary: true,\r\n        isUseLocalFile: true\r\n    },\r\n    libraryData: null,\r\n    storyData: null,\r\n    fuseCacheList: [],\r\n    cloud: null,\r\n    fileHandle: null,\r\n}","import { Redirect } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst DirectLogin = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        const seq = DataUtil.getDecryptionedUserSeq(props.hashKey);\r\n        console.log(seq);\r\n        DataUtil.findUserInfoFromSeq(seq).then(resList => {\r\n            console.log(resList);\r\n            if (resList.length > 0) {\r\n                const loginProps = resList[0];\r\n                // store.userEnv.login = loginProps;\r\n                // dispatcher.system.setUserEnv(store.userEnv);\r\n            }\r\n        });\r\n    }, []);\r\n    // if (store.userEnv.login == null) {\r\n    //     return <></>;\r\n    // } else {\r\n    //     return <Redirect to=\"/\" />;\r\n    //     // return <MainFrame />;\r\n    // }\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nexport default DirectLogin;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: (index: number)=>void;\r\n    tabRecordNum?: number;\r\n}\r\n\r\nexport type TabElements = {\r\n    name: string;\r\n    enable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabRecordNum = props.tabRecordNum ?? 1;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList tabRecordNum={tabRecordNum}>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isEnable={tab.enable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList tabRecordNum={tabRecordNum}>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={!tab.enable ? <></> : tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isEnable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: inline-block;\r\n    height: ${props => 35 * props.tabRecordNum}px;\r\n    text-align: left;\r\n    /* background-color: #ac3b3b; */\r\n    width: 100%;\r\n`;\r\nconst _ContList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\r\n    border-radius: 0 6px 6px 6px;\r\n    /* box-shadow: 0 2px 0 0 #000b3a48; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    \r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                margin-top: 5px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${props.isEnable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","\r\nnamespace SystemConst {\r\n    export const AUTH_TEXT_WIDTH = 350;\r\n    export const AUTH_TEXT_HEIGHT = 70;\r\n}\r\n\r\nexport default SystemConst;\r\n\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n\r\n// ホームチャンネル\r\nexport const HOME_USER_DIV_HEIGHT = 400;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import SystemConst from \"./systemConst\";\r\n\r\nnamespace CanvasUtil {\r\n\r\n    /**\r\n     * Canvasに任意の描画をし、画像のURLを取得する\r\n     * @param width 幅\r\n     * @param height 高さ\r\n     * @param draw 描画\r\n     * @returns 画像のURL\r\n     */\r\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        draw(ctx);\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    export const getLogoURL = () => {\r\n        return CanvasUtil.createURL(360, 80, (ctx) => {\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.fillRect(0, 0, 350, 80);\r\n\r\n            ctx.shadowColor = \"#555\";\r\n            ctx.shadowOffsetX = 2;\r\n            ctx.shadowOffsetY = 1;\r\n            ctx.shadowBlur = 5;\r\n            ctx.font = 'italic 50pt Arial';\r\n            ctx.fillStyle = '#c6dce2';\r\n            ctx.fillText('Pixel ', 14, 64);\r\n            const adjust = ctx.measureText('Pixel ').width;\r\n            ctx.fillStyle = '#768fc4';\r\n            ctx.fillText('Flare', 14 + adjust, 64);\r\n            ctx.save();\r\n        });\r\n    }\r\n\r\n    export const getAuthTextURL = (text: string) => {\r\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\r\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\r\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\r\n            ctx.rotate(1 * Math.PI / 180);\r\n            for (let i = 0; i < text.length; i++) {\r\n                const char = text.charAt(i);\r\n\r\n                const fontRand = Math.random() * 60;\r\n                const alphaRand = Math.random() * 60;\r\n                ctx.font = `${20 + fontRand}pt Arial`;\r\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\r\n                ctx.fillText(char, i * SIZE, 60);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CanvasUtil;","import VectorUtil from \"./vectorUtil\";\r\n\r\nnamespace Particle {\r\n\r\n    export type Props = {\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        limit: number;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n    }\r\n\r\n    export class Instance {\r\n\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        prevPos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        frame: number;\r\n        limit: number;\r\n        isLive: boolean;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n\r\n        constructor(props: Props) {\r\n            this.owner = props.owner;\r\n            this.pos = props.pos;\r\n            this.prevPos = props.pos;\r\n            this.vec = props.vec;\r\n\r\n            this.frame = 0;\r\n            this.limit = props.limit;\r\n            this.isLive = true;\r\n            this.drawer = props.drawer;\r\n            this.extend = props.extend;\r\n        }\r\n\r\n        update = () => {\r\n\r\n            this.pos.x += this.vec.xy.x;\r\n            this.pos.y += this.vec.xy.y;\r\n\r\n            this.extend.forEach(callback => callback(this));\r\n\r\n            if (this.frame === this.limit) {\r\n                this.isLive = false;\r\n            }\r\n            this.frame++;\r\n        }\r\n\r\n        draw = (ctx: CanvasRenderingContext2D) => {\r\n            this.drawer(this, ctx);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Particle;","import Particle from \"./particle\";\r\n\r\nnamespace DrawUtil {\r\n\r\n    export type Rgba = {\r\n        r: number;\r\n        g: number;\r\n        b: number;\r\n        a: number;\r\n    }\r\n\r\n    export type ColorStop = {\r\n        offset: number;\r\n        color: string;\r\n    }\r\n\r\n    export type DrawerParam = {\r\n        color: string;\r\n        radius?: number;\r\n        disappearStartRate?: number;\r\n        shrinkStartRate?: number;\r\n        flashAppearFrame?: number;\r\n        flashHideFrame?: number;\r\n    }\r\n\r\n    export const createGradDrawer = (param: DrawerParam) => {\r\n\r\n        /** 基準となる半径 */\r\n        const radiusBase = param.radius ?? 30;\r\n        return (self: Particle.Instance, ctx: CanvasRenderingContext2D) => {\r\n            if (param.flashAppearFrame != undefined) {\r\n                const appearFrame = param.flashAppearFrame;\r\n                const hideFrame = (param.flashHideFrame as number);\r\n                const unitFrame = appearFrame + hideFrame;\r\n                if ((self.frame % unitFrame) >= appearFrame) return;\r\n            }\r\n\r\n            let radius = radiusBase;\r\n            if (param.shrinkStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.shrinkStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    const rate = (limit - frame) / limit;\r\n                    radius *= rate;\r\n                }\r\n            }\r\n\r\n            const x = self.pos.x;\r\n            const y = self.pos.y;\r\n            const g = ctx.createRadialGradient(x, y, 1, x, y, radius);\r\n\r\n            const grads: ColorStop[] = [];\r\n            const rgba = convertRgbaFromColorCode(param.color) ?? { r: 255, g: 255, b: 255, a: 255 };\r\n            grads.push({ offset: 0, color: convertColorCodeFromRgba({ r: 255, g: 255, b: 255, a: Math.floor(rgba.a * 0.9) }) });\r\n            grads.push({ offset: 0.2, color: convertColorCodeFromRgba({ ...rgba, a: Math.floor(rgba.a * 0.15) }) });\r\n            grads.push({ offset: 1, color: convertColorCodeFromRgba({ ...rgba, a: 1 }) });\r\n\r\n            grads.forEach(grad => {\r\n                g.addColorStop(grad.offset, grad.color);\r\n            });\r\n\r\n            ctx.globalAlpha = 1;\r\n            if (param.disappearStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.disappearStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    ctx.globalAlpha = (limit - frame) / limit;\r\n                }\r\n            }\r\n\r\n            ctx.fillStyle = g;\r\n            // ctx.fillStyle = param.color;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n        };\r\n    }\r\n\r\n    export const convertRgbaFromColorCode = (code: string): Rgba | null => {\r\n        const div = code.split('#');\r\n        if (div.length !== 2 || div[1].length < 6) return null;\r\n\r\n        const value = div[1];\r\n        const r = Number.parseInt(value.substring(0, 2), 16);\r\n        const g = Number.parseInt(value.substring(2, 4), 16);\r\n        const b = Number.parseInt(value.substring(4, 6), 16);\r\n        let a = 1;\r\n        if (value.length === 8) {\r\n            a = Number.parseInt(value.substring(6, 8), 16);\r\n        }\r\n        return { r, g, b, a };\r\n    }\r\n\r\n    export const convertColorCodeFromRgba = (rgba: Rgba): string => {\r\n        const r1 = (Math.floor(rgba.r));\r\n        const g1 = (Math.floor(rgba.g));\r\n        const b1 = (Math.floor(rgba.b));\r\n        const a1 = (Math.floor(rgba.a));\r\n        const r = ('00' + r1.toString(16)).slice(-2);\r\n        const g = ('00' + g1.toString(16)).slice(-2);\r\n        const b = ('00' + b1.toString(16)).slice(-2);\r\n        const a = ('00' + a1.toString(16)).slice(-2);\r\n        return `#${r}${g}${b}${a}`;\r\n    }\r\n\r\n    export const toWhite = (color: string, rate: number): string => {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport default DrawUtil;","namespace VectorUtil {\r\n\r\n    export type XY = {\r\n        x: number, y: number;\r\n    }\r\n\r\n    export class Vector {\r\n\r\n        xy: XY;\r\n        rad: number;\r\n        len: number;\r\n\r\n        constructor(xy: XY) {\r\n            this.xy = xy;\r\n            this.rad = 0;\r\n            this.len = 0;\r\n            this.syncFromXY();\r\n        }\r\n\r\n        syncFromXY = () => {\r\n            this.len = Math.sqrt(this.xy.x * this.xy.x + this.xy.y * this.xy.y);\r\n            this.rad = Math.atan2(this.xy.y, this.xy.x);\r\n        }\r\n\r\n        syncFromRad = () => {\r\n            this.xy.x = Math.cos(this.rad) * this.len;\r\n            this.xy.y = Math.sin(this.rad) * this.len;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default VectorUtil;","\r\nnamespace ParamUtil {\r\n    export enum VisualParamType {\r\n        RADIUS = 'radius',\r\n        COLOR_R = 'color_r',\r\n        COLOR_G = 'color_g',\r\n        COLOR_B = 'color_b',\r\n        COLOR_A = 'color_a',\r\n        THICKNESS = 'thickness',\r\n    }\r\n    export const VisualParams = Object.values(VisualParamType);\r\n    export type VisualParam = typeof VisualParams[number];\r\n\r\n    export enum BehaviorParamType {\r\n        LIMIT = 'limit',\r\n        POS_X = 'pos_x',\r\n        POS_Y = 'pos_y',\r\n        VEC_X = 'vec_x',\r\n        VEC_Y = 'vec_y',\r\n        VEC_RAD = 'vec_radian',\r\n        VEC_LEN = 'vec_length',\r\n    }\r\n    export const BehaviorParams = Object.values(BehaviorParamType);\r\n    export type BehaviorParam = typeof BehaviorParams[number];\r\n\r\n    export enum SelfParamType {\r\n        FRAME = 'self_frame',\r\n        LIMIT = 'self_limit',\r\n        POS_X = 'self_pos_x',\r\n        POS_Y = 'self_pos_y',\r\n        VEC_X = 'self_vec_x',\r\n        VEC_Y = 'self_vec_y',\r\n        VEC_RAD = 'self_vec_radian',\r\n        VEC_LEN = 'self_vec_length',\r\n    }\r\n    export const SelfParams = Object.values(SelfParamType);\r\n    export type SelfParam = typeof SelfParams[number];\r\n\r\n    export enum ExtendParamType {\r\n        LOOP_COUNT = 'loop_count',\r\n        LOOP_ITERATE = 'loop_iterate',\r\n        INVOKE = 'invoke',\r\n    }\r\n    export const ExtendParams = Object.values(ExtendParamType);\r\n    export type ExtendParam = typeof ExtendParams[number];\r\n\r\n    export enum EffectParamType {\r\n        DISAPPEAR_START = 'disappear_start',\r\n        SHRINK_START = 'shrink_start',\r\n        FLASH_APPEAR_FRAME = 'flash_appear_frame',\r\n        FLASH_HIDE_FRAME = 'flash_hide_frame',\r\n    }\r\n    export const EffectParams = Object.values(EffectParamType);\r\n    export type EffectParam = typeof EffectParams[number];\r\n\r\n    export enum ModulateParamType {\r\n        DECAY_RATE = 'decay_rate',\r\n        DECAY_LIMIT = 'decay_limit',\r\n        GRAVITY_VAL = 'gravity_val',\r\n        GRAVITY_LIMIT = 'gravity_limit',\r\n    }\r\n    export const ModulateParams = Object.values(ModulateParamType);\r\n    export type ModulateParam = typeof ModulateParams[number];\r\n\r\n    export enum ConstantType {\r\n        SCREEN_WIDTH = 'screen_width',\r\n        SCREEN_HEIGHT = 'screen_height',\r\n        PI = 'pi',\r\n        RADIAN_ROUND = 'radian_round',\r\n    }\r\n    export const Constants = Object.values(ConstantType);\r\n    export type Constant = typeof Constants[number];\r\n\r\n}\r\n\r\nexport default ParamUtil;","import Particle from \"../../graphic/particle\";\r\n\r\nnamespace ModulateBuilder {\r\n\r\n    type ModulateParam = {\r\n        decayRate?: number;\r\n        decayLimit?: number;\r\n        gravity?: number;\r\n        gravityLimit?: number;\r\n    }\r\n\r\n    export const build = (extendList: ((self: Particle.Instance) => void)[], param: ModulateParam) => {\r\n        \r\n        // 減衰メソッド\r\n        if (param.decayRate != undefined && param.decayLimit != undefined) {\r\n            const decayLimit = param.decayLimit;\r\n            const decayRate = param.decayRate;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.len > decayLimit) {\r\n                    self.vec.len = self.vec.len * decayRate;\r\n                    self.vec.syncFromRad();\r\n                }\r\n            });\r\n        }\r\n        // 重力メソッド\r\n        if (param.gravity != undefined && param.gravityLimit != undefined) {\r\n            const gravityLimit = param.gravityLimit;\r\n            const gravity = param.gravity;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.xy.y < gravityLimit) {\r\n                    self.vec.xy.y += gravity;\r\n                    self.vec.syncFromXY();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModulateBuilder;","import DrawUtil from \"../../graphic/drawUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport ParamUtil from \"../factory/util/paramUtil\";\r\nimport ModulateBuilder from \"./modulateBuilder\";\r\n\r\nnamespace PreviewUtil {\r\n\r\n    export const SCREEN_WIDTH = 550;\r\n    export const SCREEN_HEIGHT = 550;\r\n\r\n    export type ValueMap = {\r\n        name: string;\r\n        value: number;\r\n    }\r\n\r\n    export type ArrayMap = {\r\n        name: string;\r\n        array: number[];\r\n    }\r\n\r\n    export const buildLogicProps = (\r\n        owner: Particle.Instance[],\r\n        origin: LogicUtil.NodeLogicItem,\r\n        rootData: LogicUtil.WrapElement,\r\n        initialValueMapList: ValueMap[],\r\n        initailArrayMapList: ArrayMap[]\r\n    ): Particle.Props => {\r\nconsole.log(initailArrayMapList);\r\n        /**\r\n         * ディペンドするロジック要素を識別名から探して返す。\r\n         * @param name ロジックの識別名\r\n         * @returns ロジック要素\r\n         */\r\n        const searchDependLogic = (name: string): LogicUtil.NodeLogicItem | null => {\r\n            const mng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n            const wrap = mng.defs.find(def => (def.data as LogicUtil.NodeLogicItem).name === name);\r\n            if (wrap == undefined) return null;\r\n            return wrap.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        /**\r\n         * 再帰的にパーティクルを生成する。\r\n         * @param cur ルートとなるロジック要素\r\n         * @param parentValueMapList 親要素から送られてきたValueMap\r\n         * @param parentArrayMapList 親要素から送られてきたArrayMap\r\n         * @returns パーティクルのプロパティ\r\n         */\r\n        const createParticleRec = (cur: LogicUtil.NodeLogicItem, parentValueMapList: ValueMap[], parentArrayMapList: ArrayMap[]): Particle.Props => {\r\n            const valueMapList: ValueMap[] = parentValueMapList.concat(ConstantValueMap);\r\n\r\n            // 配列Mapのプロパティ変数を生成\r\n            parentArrayMapList.forEach(arr => {\r\n                valueMapList.push({ name: arr.name + '.len', value: arr.array.length });\r\n            });\r\n\r\n            // フィールドのパラメータを取得\r\n            const fieldMng = searchElement('field-mng', cur.mngs);\r\n            if (fieldMng != null) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                    valueMapList.push({ name: paramItem.name, value });\r\n                });\r\n            }\r\n\r\n            const visualParams = (searchElement('visual-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n            const behaviorParams = (searchElement('behavior-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n\r\n            const getVisualParam = (name: string) => {\r\n                return convertParamsToValue(name, visualParams, valueMapList);\r\n            }\r\n            const getBehaviorParam = (name: string) => {\r\n                return convertParamsToValue(name, behaviorParams, valueMapList);\r\n            }\r\n\r\n            // Behaviorのパラメータを取得\r\n            const limit = Math.floor(getBehaviorParam(ParamUtil.BehaviorParamType.LIMIT) as number);\r\n            const pos = {\r\n                x: getBehaviorParam(ParamUtil.BehaviorParamType.POS_X) as number,\r\n                y: getBehaviorParam(ParamUtil.BehaviorParamType.POS_Y) as number\r\n            };\r\n            const vec = new VectorUtil.Vector({ x: 0, y: 0 });\r\n            const isVectorMethod = behaviorParams.find(param => param.name === ParamUtil.BehaviorParamType.VEC_X) != undefined;\r\n            if (isVectorMethod) {\r\n                vec.xy.x = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_X) as number;\r\n                vec.xy.y = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_Y) as number;\r\n                vec.syncFromXY();\r\n            } else {\r\n                vec.rad = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_RAD) as number;\r\n                vec.len = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_LEN) as number;\r\n                vec.syncFromRad();\r\n            }\r\n\r\n            /**\r\n             * 追加動作（子要素、エフェクト、モデュレート）\r\n             */\r\n            const extendList: ((self: Particle.Instance) => void)[] = [];\r\n\r\n            // 子要素を生成する\r\n            const connectMng = searchElement('inherit-mng', cur.mngs);\r\n            if (connectMng != null) {\r\n\r\n                // パーティクル情報のフィールド追加\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_X, value: pos.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_Y, value: pos.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_RAD, value: vec.rad });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_LEN, value: vec.len });\r\n\r\n                const connects = (connectMng.data as LogicUtil.NodeConnectManager).inherits;\r\n\r\n                connects.forEach(connect => {\r\n                    const connector = connect.data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.disable ?? false) return;\r\n\r\n                    const logicItem = connector.method === 'create' ?\r\n                        searchElement('inherit-logic', connector.mngs)?.data as LogicUtil.NodeLogicItem :\r\n                        searchDependLogic(connector.depend);\r\n\r\n                    if (logicItem != null) {\r\n\r\n                        extendList.push((self: Particle.Instance) => {\r\n\r\n                            const addValueMap = (item: ValueMap) => {\r\n                                const map = valueMapList.find(map => map.name === item.name);\r\n                                if (map != undefined) map.value = item.value;\r\n                                else valueMapList.push(item);\r\n                            }\r\n                            addValueMap({ name: ParamUtil.SelfParamType.FRAME, value: self.frame });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.LIMIT, value: self.limit });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_X, value: self.pos.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_Y, value: self.pos.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_X, value: self.vec.xy.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_Y, value: self.vec.xy.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_RAD, value: self.vec.rad });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_LEN, value: self.vec.len });\r\n\r\n                            // Inherit配下のフィールドのパラメータを取得\r\n                            const itrfldValueMap: ValueMap[] = [];\r\n                            const fieldMng = searchElement('inhfld-mng', connector.mngs);\r\n                            if (fieldMng != null) {\r\n                                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                                    itrfldValueMap.push({ name: paramItem.name, value });\r\n                                });\r\n                            }\r\n\r\n                            let loopCnt = 1;\r\n                            const extendItem = searchElement('extend-mng', connector.mngs) as LogicUtil.WrapElement;\r\n                            const extendParams = (extendItem.data as LogicUtil.NodeParamManager).params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                            const loopCntVal = convertParamsToValue(ParamUtil.ExtendParamType.LOOP_COUNT, extendParams, valueMapList.concat(itrfldValueMap));\r\n\r\n                            // 派生条件\r\n                            const isInvoke = convertParamsToBoolean(ParamUtil.ExtendParamType.INVOKE, extendParams, valueMapList) ?? true;\r\n\r\n                            // 条件を満たさない場合、以下の処理（パーティクルの生成）を行わない\r\n                            if (!isInvoke) return;\r\n\r\n                            // イテレータを利用している場合\r\n                            if (loopCntVal != undefined) {\r\n                                loopCnt = loopCntVal;\r\n                            }\r\n\r\n                            for (let i = 0; i < loopCnt; i++) {\r\n\r\n                                // イテレータ関連のパラメータを追加\r\n                                const iterateValueMap: ValueMap[] = [\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_COUNT, value: loopCnt },\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_ITERATE, value: i }\r\n                                ];\r\n\r\n                                // 配列Mapのイテレータ変数を追加\r\n                                const iterateArrayMap: ValueMap[] = parentArrayMapList.map(arr => {\r\n                                    return { name: arr.name + '.itr', value: arr.array[i] ?? 0 };\r\n                                });\r\n\r\n                                const sendItem = searchElement('send-mng', connector.mngs)?.data as LogicUtil.NodeParamManager;\r\n                                const params = sendItem.params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                                const sendValueMapList: ValueMap[] = params\r\n                                    .filter(item => !item.isArray)\r\n                                    .map(item => {\r\n                                        return {\r\n                                            name: item.name, value: convertParamsToValue(item.name, params, valueMapList\r\n                                                .concat(itrfldValueMap)\r\n                                                .concat(iterateValueMap)\r\n                                                .concat(iterateArrayMap)\r\n                                            ) ?? 0\r\n                                        };\r\n                                    });\r\n                                const sendArrayMapList: ArrayMap[] = params\r\n                                    .filter(item => item.isArray)\r\n                                    .map(item => {\r\n                                        return { name: item.name, array: convertParamsToArray(item.name, params, parentArrayMapList) ?? [] }\r\n                                    });\r\n\r\n                                const props = createParticleRec(\r\n                                    logicItem,\r\n                                    sendValueMapList,\r\n                                    sendArrayMapList\r\n                                );\r\n                                self.owner.push(new Particle.Instance(props));\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            // モデュレート（動きの変化）を付与\r\n            ModulateBuilder.build(extendList, {\r\n                decayLimit: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_LIMIT),\r\n                decayRate: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_RATE),\r\n                gravity: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_VAL),\r\n                gravityLimit: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_LIMIT),\r\n            });\r\n\r\n            // Visualのパラメータを取得\r\n            const radius = getVisualParam(ParamUtil.VisualParamType.RADIUS);\r\n            const colorR = getVisualParam(ParamUtil.VisualParamType.COLOR_R);\r\n            const colorG = getVisualParam(ParamUtil.VisualParamType.COLOR_G);\r\n            const colorB = getVisualParam(ParamUtil.VisualParamType.COLOR_B);\r\n            const colorA = getVisualParam(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // エフェクト付与\r\n            const disappearStart = getVisualParam(ParamUtil.EffectParamType.DISAPPEAR_START);\r\n            const shrinkStart = getVisualParam(ParamUtil.EffectParamType.SHRINK_START);\r\n            const flashAppearFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME);\r\n            const flashHideFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_HIDE_FRAME);\r\n\r\n            let drawer: (self: Particle.Instance, ctx: CanvasRenderingContext2D) => void = () => { };\r\n            if (radius != undefined) {\r\n                drawer = DrawUtil.createGradDrawer({\r\n                    radius: radius,\r\n                    color: DrawUtil.convertColorCodeFromRgba({\r\n                        r: colorR as number,\r\n                        g: colorG as number,\r\n                        b: colorB as number,\r\n                        a: colorA as number,\r\n                    }),\r\n                    disappearStartRate: disappearStart,\r\n                    shrinkStartRate: shrinkStart,\r\n                    flashAppearFrame,\r\n                    flashHideFrame,\r\n                });\r\n            }\r\n\r\n            return {\r\n                owner, pos, vec,\r\n                limit, drawer,\r\n                extend: extendList\r\n            };\r\n        }\r\n\r\n        return createParticleRec(origin, initialValueMapList, initailArrayMapList);\r\n    }\r\n\r\n    const searchElement = (type: LogicUtil.NodeType, warpList: LogicUtil.WrapElement[]) => {\r\n        return warpList.find(wrap => wrap.type === type) ?? null;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param valueMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToValue = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): number | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToValue(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToValue = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): number => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(ret);\r\n        return ret;\r\n    }\r\n\r\n    export const convertParamsToBoolean = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): boolean | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToBoolean(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToBoolean = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): boolean => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item, i) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            else if (item === '=') str = '==';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(formulaStr);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param arrayMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToArray = (name: string, params: LogicUtil.NodeParamItem[], arrayMapList: ArrayMap[]): number[] | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        const item = formula.values[0];\r\n        if (item.type === 'array') {\r\n            return item.value.split(',').map(v => Number(v));\r\n        } else if (item.type === 'argument') {\r\n            const map = arrayMapList.find(array => array.name === item.value);\r\n            return map == undefined ? [] : map.array;\r\n        }\r\n    }\r\n\r\n    export const ConstantValueMap: ValueMap[] = [\r\n        { name: ParamUtil.ConstantType.SCREEN_WIDTH, value: SCREEN_WIDTH },\r\n        { name: ParamUtil.ConstantType.SCREEN_HEIGHT, value: SCREEN_HEIGHT },\r\n        { name: ParamUtil.ConstantType.PI, value: 3.14159265359 },\r\n        { name: ParamUtil.ConstantType.RADIAN_ROUND, value: 3.14159265359 * 2 }\r\n    ];\r\n}\r\n\r\nexport default PreviewUtil;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\r\n\r\n    export type Validate = {\r\n        checker: (value: string) => boolean;\r\n        errorType: ErrorType;\r\n        message?: string;\r\n    }\r\n\r\n    /**\r\n     * 必須チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkRequired = (str: string) => {\r\n        return str.length > 0;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length === 0 || (str.length >= min && str.length <= max);\r\n    }\r\n\r\n    /**\r\n     * 半角英数時チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        return checkIncludesChars(str, list);\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列で構成されているかチェック\r\n     * @param str 検証する文字列\r\n     * @param list 入力を許す対象文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkIncludesChars = (str: string, list: string) => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            const ch = str.charAt(i);\r\n            if (list.indexOf(ch) === -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列が数値に変換できるかチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumber = (str: string) => {\r\n        return !isNaN(Number(str));\r\n    }\r\n\r\n    /**\r\n     * 数値の値の範囲をチェック\r\n     * @param str 検証する文字列\r\n     * @param min 下限\r\n     * @param max 上限\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumberRange = (str: string, min: number, max: number) => {\r\n        if (!isNaN(Number(str))) {\r\n            const num = Number(str);\r\n            return num >= min && num <= max;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    export const checkArrayNumber = (value: string) => value.split(',').find(v => isNaN(Number(v))) == undefined;\r\n}\r\nexport default ValidateUtil;\r\n","import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        // parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        const ref = useRef({} as HTMLDivElement);\r\n\r\n        /**\r\n         * データを元に再帰的に以下のツリーを構成する。\r\n         * @returns ツリー\r\n         */\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        useEffect(() => {\r\n            if (focusNode != null && focusNode.parent != null) {\r\n                focusNode.parent.isOpen = true;\r\n            }\r\n        }, [focusNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            // console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    // 親判定\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    // 兄弟判定\r\n                    if (result === false && focusNode != null && focusNode.parent != null) {\r\n                        result = focusNode.parent.children.find(node => node == element) != undefined;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        width={ref.current.scrollWidth}\r\n                        isActive={isCurrent}\r\n                        isRelation={!isDisable && isRelationNode()}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap\r\n                ref={ref}\r\n                isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #374a54;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #1f3642;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n    isRelation: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #459cff46;\r\n    `}\r\n    opacity: 0.3;\r\n    ${props => !props.isRelation ? '' : css`\r\n        background-color: #ffffff28;\r\n        opacity: 1;\r\n    `}\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #b4d9dd83;\r\n        opacity: 1;\r\n    `}\r\n    width: ${props => props.width}px;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import { useContext, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nnamespace ModifyOperations {\r\n\r\n    export type Props = {\r\n        mappingForm: () => void;\r\n        checkableFields: FormUtil.CheckableValue[];\r\n        isInputOK?: boolean;\r\n        firstRegist: () => void;\r\n        modifyRegist: () => void;\r\n    }\r\n\r\n    export const Component = (props: Props) => {\r\n        const { node, isModify, setModify, removeSelf } = useContext(FactoryTreeContext);\r\n\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n        const isComplete = FormUtil.isCompleteCheck(props.checkableFields);\r\n\r\n        return (<>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: isModify,\r\n                        callback: () => {\r\n                            if (wrap.data == null) {\r\n                                removeSelf();\r\n                            } else {\r\n                                props.mappingForm();\r\n                            }\r\n                            setModify(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !isModify || (props.isInputOK ?? isComplete),\r\n                        callback: () => {\r\n                            if (!isModify) {\r\n                                setModify(true);\r\n                            } else {\r\n                                if (wrap.data == null) {\r\n                                    props.firstRegist();\r\n                                } else {\r\n                                    props.modifyRegist();\r\n                                }\r\n                                setModify(false);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default ModifyOperations;","import { type } from \"os\";\r\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport Common from \"../common\";\r\nimport PreviewLogicFrame from \"../preview/previewLogicFrame\";\r\nimport LogicElementUtil from \"./util/logicElementUtil\";\r\nimport LogicUtil from \"./util/logicUtil\";\r\n\r\nexport const FactoryTreeContext = createContext({} as LogicUtil.DetailArgs);\r\n\r\nconst LogicMainteTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    // const [rootData, setRootData] = useState(LogicElementUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    // const [treeDisable, setTreeDisable] = useState(false);\r\n    const [isModify, setModify] = useState<boolean>(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    const rootData = store.libraryData as LogicUtil.WrapElement;\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: LogicUtil.getChildrenDataNode(rootData)\r\n        }\r\n    }, [rootData]);\r\n\r\n    // useEffect(()=> {\r\n    //     store.logicData = rootData;\r\n    //     setStore({...store});\r\n    // }, [rootData]);\r\n\r\n    const setRootData = (rootData: LogicUtil.WrapElement) => {\r\n        store.libraryData = rootData;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const masterNode = useMemo(() => {\r\n        let cur: TreeUtil.ElementNode | null = focusNode;\r\n        while (cur != null) {\r\n            const type = (cur.data as LogicUtil.WrapElement).type;\r\n            if (['logic-item', 'seed-item'].includes(type)) return cur;\r\n            cur = cur.parent;\r\n        };\r\n        return null;\r\n    }, [focusNode]);\r\n\r\n    /**\r\n     * プレビューダイアログを表示する\r\n     */\r\n    const openPreviewDialog = () => {\r\n        if (masterNode == null) return;\r\n        store.system.dialog = (\r\n            <PreviewLogicFrame.Component\r\n                master={masterNode.data as LogicUtil.WrapElement}\r\n                rootData={rootData}\r\n                closeButtonAction={() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n            onKeyDown={(e) => {\r\n                // console.log(e.key);\r\n                if (isModify || focusNode == null) return;\r\n                switch (e.key) {\r\n                    case 'ArrowRight': {\r\n                        if (focusNode.children.length > 0) {\r\n                            if (!focusNode.isOpen) focusNode.isOpen = true;\r\n                            else setFocusNode(focusNode.children[0]);\r\n                            setInvalidate({});\r\n                        }\r\n                    } break;\r\n                    case 'ArrowLeft': {\r\n                        if (focusNode.isOpen) focusNode.isOpen = false;\r\n                        else {\r\n                            if (focusNode.parent != null) setFocusNode(focusNode.parent);\r\n                        }\r\n                        setInvalidate({});\r\n                    } break;\r\n                    case 'ArrowUp': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n) {\r\n                                    if (i === 0) {\r\n                                        setFocusNode(focusNode.parent);\r\n                                        setInvalidate({});\r\n                                    } else {\r\n                                        setFocusNode(list[i - 1]);\r\n                                        setInvalidate({});\r\n                                    }\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case 'ArrowDown': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n && i < list.length - 1) {\r\n                                    setFocusNode(list[i + 1]);\r\n                                    setInvalidate({});\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case ' ': {\r\n                        if (masterNode != null) openPreviewDialog();\r\n                    } break;\r\n                }\r\n            }}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview',\r\n                                isEnable: masterNode != null,\r\n                                callback: openPreviewDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return LogicUtil.getNodeDisplayJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={isModify}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <_DetailDiv>\r\n                    <_DetailHeader>\r\n                        <_DetailHeaderLabel>{LogicUtil.getTypeName(focusNode)}</_DetailHeaderLabel>\r\n                    </_DetailHeader>\r\n                    <FactoryTreeContext.Provider value={{\r\n                        rootData,\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        isModify,\r\n                        setModify,\r\n                        // treeDisable,\r\n                        setRootData,\r\n                        removeSelf: () => {\r\n                            const node = focusNode as TreeUtil.ElementNode;\r\n                            let index = -1;\r\n                            node.parent?.children.forEach((n, i) => {\r\n                                if (n == node) index = i;\r\n                            });\r\n                            node.parent?.children.splice(index, 1);\r\n                            const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n                            const listName = LogicElementUtil.getListParamName(parentWrap.type);\r\n                            if (listName == null) return;\r\n                            const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n                            list.splice(index, 1);\r\n                            setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                            setInvalidate({});\r\n                        }\r\n                    }}>\r\n                        <_DetailMainDiv>{LogicUtil.getDetailComponent(focusNode)}</_DetailMainDiv>\r\n                    </FactoryTreeContext.Provider>\r\n                </_DetailDiv>\r\n            </_PropsDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default LogicMainteTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #6c8186;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d87b;\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _TreeHeadHalf = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    background-color: #7fbdb47a;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #9fa9b6;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _DetailDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\nconst _DetailHeader = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #b4b29e; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _DetailHeaderLabel = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #a10000;\r\n    /* background-color: #bbd0d3; */\r\n    border: solid 1px #a10000;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 20px);\r\n    margin: 5px 0 0 10px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DetailMainDiv = styled.div`\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 44px);\r\n    margin: 0 0 0 4px;\r\n    background-color: #cfd3cc;\r\n    border: solid 1px #0026a1;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorArgumentMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'argument-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentMng;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ParamUtil from \"../util/paramUtil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\n\r\nnamespace SendTemplateDialog {\r\n\r\n    const FRAME_WIDTH = 450;\r\n    const FRAME_HEIGHT = 160;\r\n    const COMPONENT_WIDTH = 296;\r\n\r\n    export const ConnectParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, input property name!';\r\n\r\n        /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n        const paramNameList = useMemo(() => {\r\n            const owner = (LogicElementUtil.getInnerWrap(props.node.parent?.data as LogicUtil.WrapElement, 'inherit-logic') as LogicUtil.WrapElement).data;\r\n            return LogicElementUtil.getParamNameList(owner);\r\n        }, [props.node]);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    // Sendにパラメータを追加\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: xName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }] }\r\n                    ), props.node);\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: yName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }] }\r\n                    ), props.node);\r\n\r\n                    // 派生ロジックに引数を追加\r\n                    const logicNode = LogicElementUtil.getInnerNode(props.node.parent as TreeUtil.ElementNode, 'inherit-logic') as TreeUtil.ElementNode;\r\n                    const hasArgNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') != undefined;\r\n                    if (!hasArgNode) {\r\n                        LogicElementUtil.insertChild({\r\n                            type: 'argument-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeArgumentManager\r\n                        }, logicNode, 0);\r\n                    }\r\n                    const argNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') as TreeUtil.ElementNode;\r\n\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: xName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: yName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n\r\n                    // 派生ロジックの座標に引数を設定\r\n                    const behaviorNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'behavior-mng') as TreeUtil.ElementNode;\r\n                    const setParamValue = (prpName: string, argName: string) => {\r\n                        const params = behaviorNode.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                        const targetParam = params.find(param => param.name === prpName) as LogicUtil.NodeParamItem;\r\n                        targetParam.formulaItems = ['var'];\r\n                        targetParam.values = [{ type: 'argument', value: argName }];\r\n                    }\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_X, xName.value);\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_Y, yName.value);\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (yName.value !== '') list.push(yName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[yName]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (xName.value !== '') list.push(xName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[xName]}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n\r\n    export const SetParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, select property name!';\r\n\r\n        const list = useMemo(() => {\r\n            return props.node.children.map(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                return (wrap.data as LogicUtil.NodeParamItem).name;\r\n            });\r\n        }, []);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    const paramList = props.node.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                    const xParam = paramList.find(param => param.name === xName.value) as LogicUtil.NodeParamItem;\r\n                    const yParam = paramList.find(param => param.name === yName.value) as LogicUtil.NodeParamItem;\r\n                    xParam.formulaItems = ['var'];\r\n                    xParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }];\r\n                    yParam.formulaItems = ['var'];\r\n                    yParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }];\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== yName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== xName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SendTemplateDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #d0e7e718;\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport GloballDialog from \"../../../../dialog/globalDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorArgumentItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const logicNode = node.parent?.parent as TreeUtil.ElementNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n        setName({ ...name, value: param.name });\r\n        setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, argType]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeArgumentItem = {\r\n                    name: name.value,\r\n                    valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n                syncArgumentAdd(logicNode, name.value, argType.value as LogicUtil.ArgumentType);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(logicNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = reservedList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeArgumentItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getArgumentRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    // DependしているInheritのSendパラメータを同期する\r\n                                    syncArgumentDel(logicNode, name.value);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentItem;\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param node 引数のノード\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param logicNode ロジックノード\r\n*/\r\nconst syncArgumentName = (logicNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n    const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n    if (fieldMng != undefined) {\r\n        syncFormula((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n    }\r\n    const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n    if (visualMng != undefined) {\r\n        syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n    if (behaviorMng != undefined) {\r\n        syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n    if (inhMng != undefined) {\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n            // Inherit配下のField要素のチェック\r\n            if (inhfld != null) {\r\n                syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n            // Extend要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            // Send要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        });\r\n    }\r\n\r\n    const syncParamName = (params: LogicUtil.WrapElement[]) => {\r\n        params.forEach(wrap => {\r\n            const item = wrap.data as LogicUtil.NodeParamItem;\r\n            if (item.name === prevName) {\r\n                item.name = newName;\r\n            }\r\n        });\r\n    }\r\n    if (wrap.type === 'logic-item') {\r\n\r\n        // dependしている箇所を全て反映するために再帰で洗う\r\n        const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n            const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n            if (inhMng == undefined) return;\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    const inhLogic = LogicElementUtil.getInnerWrapFixed(inh, 'inherit-logic').data as LogicUtil.NodeLogicItem;\r\n                    runRec(inhLogic);\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    const sendMng = LogicElementUtil.getInnerWrapFixed(inh, 'send-mng').data as LogicUtil.NodeParamManager;\r\n                    syncParamName(sendMng.params);\r\n                }\r\n            });\r\n        }\r\n        // ロジックを全て調査する\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(logic => {\r\n            runRec((logic.data as LogicUtil.WrapElement).data);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        const root = (rootNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeRoot;\r\n        const defs = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        console.log(defs.length);\r\n        defs.forEach(wrap => {\r\n            const interfaceWrap = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng');\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(interfaceWrap, 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            syncParamName(sendMng.params);\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const connWrap = logicNode.parent?.data as LogicUtil.WrapElement;\r\n        const sendMng = LogicElementUtil.getInnerWrapFixed(connWrap, 'send-mng').data as LogicUtil.NodeParamManager;\r\n        syncParamName(sendMng.params);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の更新に伴い、参照先のSend管理に処理（callback）を行う\r\n * @param logicNode ロジックノード\r\n * @param callback 処理\r\n */\r\nconst syncArgumentCallback = (\r\n    logicNode: TreeUtil.ElementNode,\r\n    callback: (sendNode: TreeUtil.ElementNode) => void\r\n) => {\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n\r\n    if (wrap.type === 'logic-item') {\r\n        const runRec = (logicNode: TreeUtil.ElementNode) => {\r\n            const inhMngNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'inherit-mng');\r\n            if (inhMngNode == undefined) return;\r\n            inhMngNode.children.forEach(child => {\r\n                const conn = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    runRec(LogicElementUtil.getInnerNodeFixed(child, 'inherit-logic'));\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    callback(LogicElementUtil.getInnerNodeFixed(child, 'send-mng'));\r\n                }\r\n            });\r\n        }\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(child => {\r\n            runRec(child);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        rootNode.children[0].children.forEach(seedNode => {\r\n            const interfaceNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'interface-mng');\r\n            const sendNode = LogicElementUtil.getInnerNodeFixed(interfaceNode, 'seedsend-mng');\r\n            const seed = (seedNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n            if (seed.entry === logicItem.name) {\r\n                callback(sendNode);\r\n            }\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const sendNode = LogicElementUtil.getInnerNodeFixed(logicNode.parent as TreeUtil.ElementNode, 'send-mng');\r\n        callback(sendNode);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentAdd = (logicNode: TreeUtil.ElementNode, newArgName: string, type: LogicUtil.ArgumentType) => {\r\n    const addNewParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const isArray = type === 'array';\r\n        const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n            {\r\n                name: newArgName,\r\n                formulaItems: ['var'],\r\n                values: !isArray ? [{ type:  'direct', value: '0' }] : [{ type:  'array', value: '' }],\r\n                isArray: isArray ? true : undefined\r\n            }\r\n        );\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        sendMng.params.push(paramWrap);\r\n        sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n    }\r\n    syncArgumentCallback(logicNode, addNewParam);\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentDel = (logicNode: TreeUtil.ElementNode, delArgName: string) => {\r\n    const delArgParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        let delIndex = -1;\r\n        sendMng.params.some((param, i) => {\r\n            if ((param.data as LogicUtil.NodeParamItem).name == delArgName) {\r\n                delIndex = i;\r\n                return 1;\r\n            }\r\n        });\r\n        sendMng.params.splice(delIndex, 1);\r\n        sendNode.children.splice(delIndex, 1);\r\n    }\r\n    syncArgumentCallback(logicNode, delArgParam);\r\n}","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Seed',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seed-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedManager).defs.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorLogicMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Logic',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'logic-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\n\r\nconst EditorLogicItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [isConnect, hasArgNode, hasFieldNode, hasConnectNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        return [\r\n            parentType === 'connector',\r\n            list.includes('argument-mng'),\r\n            list.includes('field-mng'),\r\n            list.includes('inherit-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        if (!isConnect) {\r\n            const param = wrap.data as LogicUtil.NodeLogicItem;\r\n            setName({ ...name, value: param.name });\r\n        }\r\n    };\r\n\r\n    /** 既存のロジック名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => {\r\n        // インヘリットの場合、名前を持たないため取得しない\r\n        if (wrap.type === 'inherit-logic') return [];\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node, isConnect]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 引数要素の有無を判定\r\n     */\r\n    const hasArgument = () => {\r\n        const argumentNode = LogicElementUtil.getInnerNode(node, 'argument-mng');\r\n        if (argumentNode == null) return false;\r\n        return argumentNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'field-mng');\r\n        if (fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 派生要素の有無を判定\r\n     */\r\n    const hasInherit = () => {\r\n        const inheritNode = LogicElementUtil.getInnerNode(node, 'inherit-mng');\r\n        if (inheritNode == null) return false;\r\n        return inheritNode.children.length > 0;\r\n    }\r\n\r\n    return (<>\r\n        {isConnect ? <></> : (<>\r\n            <ModifyOperations.Component\r\n                mappingForm={mappingForm}\r\n                checkableFields={[name]}\r\n                firstRegist={() => {\r\n                    const element: LogicUtil.NodeLogicItem = {\r\n                        name: name.value,\r\n                        mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                    };\r\n                    element.name = name.value;\r\n                    wrap.data = element;\r\n\r\n                    element.mngs.forEach(mng => {\r\n                        const newNode = TreeUtil.createNode(mng, node);\r\n                        const data = (newNode.data as LogicUtil.WrapElement).data;\r\n                        (data as LogicUtil.NodeParamManager).params.forEach(param => {\r\n                            newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                        });\r\n                        node.children.push(newNode);\r\n                    });\r\n                    invalidate();\r\n                    setStore({ ...store });\r\n                }}\r\n                modifyRegist={() => {\r\n                    const param = wrap.data as LogicUtil.NodeLogicItem;\r\n                    const prevName = param.name;\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n                    // 名前が変わった場合、参照箇所も修正する\r\n                    if (prevName !== param.name) {\r\n                        syncLogicName(node, prevName, param.name);\r\n                    }\r\n                }}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"param\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Name\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={200}\r\n                                isReadOnly={!isModify}\r\n                                checkable={name}\r\n                                setCheckable={setName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => !existNameList.includes(value),\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n        </>)}\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Argument'}\r\n                        width={300}\r\n                        isUse={hasArgNode}\r\n                        isEnable={!hasArgument()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasArgNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'argument-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as LogicUtil.NodeArgumentManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            if (hasArgNode) listPos++;\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'field-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Inherit'}\r\n                            width={300}\r\n                            isUse={hasConnectNode}\r\n                            isEnable={!hasInherit()}\r\n                            callback={() => {\r\n                                let listPos = 2;\r\n                                if (hasArgNode) listPos++;\r\n                                if (hasFieldNode) listPos++;\r\n                                toggleElement(\r\n                                    hasConnectNode,\r\n                                    listPos,\r\n                                    {\r\n                                        type: 'inherit-mng',\r\n                                        data: {\r\n                                            inherits: []\r\n                                        } as LogicUtil.NodeConnectManager\r\n                                    }\r\n                                );\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        {isConnect ? <></> : (\r\n            <FormUtil.BorderPanel\r\n                title=\"operation\"\r\n                isEnable={!isModify}\r\n                innerJsx={<>\r\n                    {LogicElementUtil.getReplicateButton(node, !isModify, 'logic', store, setStore, invalidate)}\r\n                    {/* <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Replicate',\r\n                                isEnable: !isModify,\r\n                                // isEnable: false,\r\n                                callback: () => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Replicate this logic.\"\r\n                                        buttons={[\r\n                                            {\r\n                                                label: 'Cancel',\r\n                                                callback: () => {\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                label: 'Enter',\r\n                                                callback: () => {\r\n                                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                                    const name = wrap.data[namable] as string;\r\n                                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                    // mappingForm();\r\n                                                    invalidate();\r\n                                                }\r\n                                            }\r\n                                        ]}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    /> */}\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Delete',\r\n                                callback: () => {\r\n                                    const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                    const refers = getLocgicRefers(node, param.name);\r\n                                    if (refers.length === 0) {\r\n                                        removeSelf();\r\n                                    } else {\r\n                                        store.system.dialog = <ConfirmDialog.Component\r\n                                            message={`[${param.name}] is referenced in the Inherit.\\n${refers}`}\r\n                                        />;\r\n                                        setStore({ ...store });\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                    {/* 並び順入れ替えボタン */}\r\n                    {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n                </>}\r\n            />\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicItem;\r\n\r\n/**\r\n * ロジックを参照しているInheritのリストを返す。\r\n * @param node 現在のノード\r\n * @param logicName ロジック名\r\n * @returns 参照Inheritリスト\r\n */\r\nexport const getLocgicRefers = (node: TreeUtil.ElementNode, logicName: string) => {\r\n\r\n    const refers: string[] = [];\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        refers.push(conn.id);\r\n    }\r\n    searchLogicReferInherit(node, logicName, callback);\r\n    return refers;\r\n}\r\n\r\n/**\r\n * ロジック名の変更に伴い、参照しているインヘリットを同期する\r\n * @param node ロジックノード\r\n */\r\nconst syncLogicName = (node: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        conn.depend = newName;\r\n    }\r\n    searchLogicReferInherit(node, prevName, callback);\r\n}\r\n\r\nconst searchLogicReferInherit = (\r\n    node: TreeUtil.ElementNode,\r\n    logicName: string,\r\n    callback: (conn: LogicUtil.NodeInheritConnector) => void\r\n) => {\r\n    const logicMngNode = node.parent as TreeUtil.ElementNode\r\n    const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng == undefined) return;\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n            if (conn.method === 'create') {\r\n                const inhLogic = LogicElementUtil.getInnerWrap(inh, 'inherit-logic');\r\n                runRec(inhLogic?.data);\r\n            } else {\r\n                if (conn.depend === logicName) {\r\n                    callback(conn);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    logicMngNode.children.forEach(logic => {\r\n        runRec((logic.data as LogicUtil.WrapElement).data);\r\n    });\r\n}","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype FormProps = {\r\n    inputType: FormUtil.CheckableValue;\r\n    value: FormUtil.CheckableValue;\r\n};\r\n\r\nenum Level {\r\n    FIELD = 0,\r\n    INITIAL,\r\n    INHERIT_FIELD,\r\n    INHERIT_EXTEND,\r\n    INHERIT_SEND,\r\n    SEED = -1,\r\n}\r\n\r\nconst EditorParamItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    /** 名前 */\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    /** 式 */\r\n    const [formulaItems, setFormulaItems] = useState<string[]>([]);\r\n    /** 変数の入力フォーム */\r\n    const [varFormList, setVarFormList] = useState<FormProps[]>([]);\r\n    // const [formJsxList, setFaormJsxList] = useState<JSX.Element[]>([]);\r\n\r\n    const isField = wrap.type === 'field-item';\r\n    const isCondition = wrap.type === 'condition-item';\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        setName({ value: param.name, errors: [] });\r\n        setFormulaItems(param.formulaItems.slice());\r\n        setVarFormList(param.values.map(v => {\r\n            return {\r\n                inputType: { value: v.type, errors: [] },\r\n                value: { value: v.value, errors: [] }\r\n            }\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const level: Level = useMemo(() => {\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        switch (parentType) {\r\n            case 'field-mng': return Level.FIELD;\r\n            case 'visual-mng':\r\n            case 'behavior-mng': return Level.INITIAL;\r\n            case 'inhfld-mng': return Level.INHERIT_FIELD;\r\n            case 'extend-mng': return Level.INHERIT_EXTEND;\r\n            case 'send-mng': return Level.INHERIT_SEND;\r\n        }\r\n        return Level.SEED;\r\n    }, [node]);\r\n\r\n    /**\r\n     * 引数とフィールド変数のキーリストを取得する。\r\n     */\r\n    const [argumentList, arrayArgList, fieldKeyList] = useMemo(() => {\r\n        let argumentList: string[] = [];\r\n        let arrayArgList: string[] = [];\r\n        const fieldKeys: string[] = [];\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const targetTypes: LogicUtil.NodeType[] = ['field-mng', 'behavior-mng', 'visual-mng', 'inhfld-mng', 'send-mng', 'extend-mng'];\r\n        if (targetTypes.includes(parentType)) {\r\n            const getLogicNode = () => {\r\n                switch (parentType) {\r\n                    case 'field-mng':\r\n                    case 'visual-mng':\r\n                    case 'behavior-mng': return node.parent?.parent;\r\n                    case 'inhfld-mng':\r\n                    case 'send-mng':\r\n                    case 'extend-mng': return node?.parent?.parent?.parent?.parent;\r\n                }\r\n            };\r\n            const logicItem = (getLogicNode()?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n            // 引数リストを追加\r\n            const argMng = logicItem.mngs.find(mng => mng.type === 'argument-mng');\r\n            if (argMng != undefined) {\r\n                argumentList = (argMng.data as LogicUtil.NodeArgumentManager).args\r\n                    .filter(arg => {\r\n                        const param = wrap.data as LogicUtil.NodeParamItem;\r\n                        const data = arg.data as LogicUtil.NodeArgumentItem;\r\n                        // return (param.isList && data.valueType === 'array') || (!param.isList && data.valueType !== 'array');\r\n                        return data.valueType === 'number';\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n                arrayArgList = (argMng.data as LogicUtil.NodeArgumentManager).args\r\n                    .filter(arg => {\r\n                        const param = wrap.data as LogicUtil.NodeParamItem;\r\n                        const data = arg.data as LogicUtil.NodeArgumentItem;\r\n                        // return (param.isList && data.valueType === 'array') || (!param.isList && data.valueType !== 'array');\r\n                        return data.valueType === 'array';\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n            }\r\n            // 変数リストを追加\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (level >= Level.INITIAL && fieldMng != undefined) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                    fieldKeys.push(fieldName);\r\n                });\r\n            }\r\n        } else if (parentType === 'seedsend-mng') {\r\n            // シード配下のSendは特別に扱う（どのレベルにも属さない）\r\n            const argMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'seedarg-mng');\r\n            if (argMng != null) {\r\n                argumentList = (argMng.data as LogicUtil.NodeSeedArgManager).args\r\n                    .filter(arg => {\r\n                        const data = arg.data as LogicUtil.NodeSeedArgItem;\r\n                        return !data.isArray;\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n                arrayArgList = (argMng.data as LogicUtil.NodeSeedArgManager).args\r\n                    .filter(arg => {\r\n                        const data = arg.data as LogicUtil.NodeSeedArgItem;\r\n                        return data.isArray;\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n            } else throw new Error('argMng is undefined.');\r\n        }\r\n        if (level >= Level.INHERIT_FIELD) {\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_RAD);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_LEN);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.RADIUS);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_R);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_G);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_B);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // フィールドキーにInherit配下のFieldパラメータを追加\r\n            if (level >= Level.INHERIT_EXTEND) {\r\n                const inhfldNode = LogicElementUtil.getInnerNode(node.parent?.parent as TreeUtil.ElementNode, 'inhfld-mng');\r\n                if (inhfldNode != null) {\r\n                    const fieldMng = (inhfldNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeFieldManager;\r\n                    fieldMng.fields.forEach(field => {\r\n                        const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                        fieldKeys.push(fieldName);\r\n                    });\r\n                }\r\n            }\r\n            // フィールドキーにExtendパラメータを追加\r\n            if (level === Level.INHERIT_SEND) {\r\n                const extendWrap = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'extend-mng') as LogicUtil.WrapElement;\r\n                const extendElement = extendWrap.data as LogicUtil.NodeParamManager;\r\n                //Extendにloop_countのパラメータがある場合\r\n                if (extendElement.params.find(\r\n                    param => (param.data as LogicUtil.NodeParamItem).name === ParamUtil.ExtendParamType.LOOP_COUNT\r\n                ) != undefined) {\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_COUNT);\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_ITERATE);\r\n                }\r\n            }\r\n        }\r\n        return [argumentList, arrayArgList, fieldKeys];\r\n    }, [node]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const paramNameList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (item === 'var') num++;\r\n        });\r\n\r\n        if (varFormList.length < num) {\r\n            const addNum = num - varFormList.length;\r\n            for (let i = 0; i < addNum; i++) varFormList.push({\r\n                inputType: { value: 'direct', errors: [] },\r\n                value: { value: '', errors: [] }\r\n            });\r\n            setVarFormList(varFormList.slice());\r\n        } else if (varFormList.length > num) {\r\n            const delNum = varFormList.length - num;\r\n            for (let i = 0; i < delNum; i++) varFormList.splice(varFormList.length - delNum, delNum);\r\n            setVarFormList(varFormList.slice());\r\n        }\r\n    }, [formulaItems]);\r\n\r\n    /** 「(」の数-「)」の数 */\r\n    const parenthesisBalance = useMemo(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (['(', 'rand(', 'integer('].includes(item)) num++;\r\n            else if (item === ')') num--;\r\n        });\r\n        return num;\r\n    }, [formulaItems]);\r\n\r\n    /** 値の入力フォームのJSX */\r\n    const formJsxList = useMemo(() => {\r\n        return varFormList.map((v, i) => {\r\n\r\n            const getValueForm = (): JSX.Element => {\r\n                const type = v.inputType.value as LogicUtil.ParamInputType;\r\n                if (type === 'direct') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isNumber\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else if (type === 'array') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkArrayNumber(value),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else {\r\n                    const isArray = (wrap.data as LogicUtil.NodeParamItem).isArray;\r\n                    let list: string[] = [];\r\n                    switch (type) {\r\n                        case 'argument': {\r\n                            list = !isArray ? argumentList : arrayArgList;\r\n                        } break;\r\n                        case 'field': {\r\n                            list = fieldKeyList;\r\n                        } break;\r\n                        case 'self': {\r\n                            list = ParamUtil.SelfParams;\r\n                        } break;\r\n                        case 'constant': {\r\n                            list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                        } break;\r\n                        case 'array.itr': {\r\n                            list = arrayArgList.map(name => name + '.itr');\r\n                        } break;\r\n                        case 'array.len': {\r\n                            list = arrayArgList.map(name => name + '.len');\r\n                        } break;\r\n                    }\r\n                    // if (type === 'argument') {\r\n                    //     list = argumentList;\r\n                    // } else if (type === 'field') {\r\n                    //     list = fieldKeyList;\r\n                    // } else if (type === 'self') {\r\n                    //     list = ParamUtil.SelfParams;\r\n                    // } else if (type === 'constant') {\r\n                    //     list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                    // }\r\n                    return (\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            list={list.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n            return <FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={`var_${i}`}\r\n                labelWidth={90}\r\n                marginTop={i === 0 ? 4 : 0}\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        checkable={v.inputType}\r\n                        width={142}\r\n                        isReadOnly={!isModify}\r\n                        setCheckable={(checkable) => {\r\n                            varFormList[i].inputType = checkable;\r\n                            if (isModify) {\r\n                                varFormList[i].value.value = checkable.value === 'direct' ? '0' : '';\r\n                            }\r\n                            setVarFormList(varFormList.slice());\r\n                        }}\r\n                        list={LogicUtil.ParamInputTypes.filter(item => {\r\n                            const param = wrap.data as LogicUtil.NodeParamItem;\r\n                            if (!param.isArray) {\r\n                                switch (item) {\r\n                                    case 'direct':\r\n                                    case 'constant':\r\n                                    case 'argument': return true;\r\n                                    case 'field': return level >= Level.INITIAL;\r\n                                    case 'array.len':\r\n                                    case 'self': return level >= Level.INHERIT_FIELD;\r\n                                    case 'array.itr': return level >= Level.INHERIT_SEND;\r\n                                    case 'array': return false;\r\n                                }\r\n                            } else {\r\n                                switch (item) {\r\n                                    case 'direct':\r\n                                    case 'constant':\r\n                                    case 'self':\r\n                                    case 'field': return false;\r\n                                    case 'array':\r\n                                    case 'argument': return true;\r\n                                }\r\n                            }\r\n                        }).map(item => {\r\n                            return { value: item, labelText: item };\r\n                        })}\r\n                    />\r\n                    {getValueForm()}\r\n                </>}\r\n            />;\r\n        });\r\n    }, [varFormList, isModify]);\r\n\r\n    const getFormulaJsx = () => {\r\n        let num = 0;\r\n        const jsxList: JSX.Element[] = [];\r\n        formulaItems.forEach((item) => {\r\n            if (jsxList.length > 0) {\r\n                jsxList.push(<span key={jsxList.length}>&nbsp;</span>);\r\n            }\r\n            if (item === 'var') {\r\n                jsxList.push(<_Var key={jsxList.length}>{`$\\{var_${num}}`}</_Var>);\r\n                num++;\r\n            } else {\r\n                jsxList.push(<_Sig key={jsxList.length}>{item}</_Sig>);\r\n            }\r\n        });\r\n        return jsxList;\r\n    }\r\n\r\n    const isLastVar = () => formulaItems.length > 0 && ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const isFormulaOK = parenthesisBalance === 0 && varFormList.length > 0 &&\r\n        ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const hasFormError = !isFormulaOK || varFormList.find(varForm => varForm.value.errors.length > 0) != undefined;\r\n\r\n\r\n    const getFormulaItem = (label: string, width: number, isEnable: boolean, value: string) => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        return {\r\n            label, width, isEnable: param.isArray ? false : isEnable,\r\n            callback: () => {\r\n                formulaItems.push(value);\r\n                setFormulaItems(formulaItems.slice());\r\n            }\r\n        };\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeParamItem = {\r\n                    name: name.value,\r\n                    formulaItems: formulaItems.slice(),\r\n                    values: varFormList.map(varForm => {\r\n                        return {\r\n                            type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                            value: varForm.value.value\r\n                        }\r\n                    })\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n            }}\r\n            isInputOK={parenthesisBalance === 0 && !hasFormError && name.errors.length === 0}\r\n            modifyRegist={() => {\r\n                const data = wrap.data as LogicUtil.NodeParamItem;\r\n                data.formulaItems = formulaItems.slice();\r\n                data.values = varFormList.map(varForm => {\r\n                    return {\r\n                        type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                        value: varForm.value.value\r\n                    }\r\n                });\r\n                if (isField) {\r\n                    const prevName = data.name;\r\n                    data.name = name.value;\r\n                    if (prevName !== name.value) {\r\n                        syncFieldName(node.parent as TreeUtil.ElementNode, prevName, name.value);\r\n                    }\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify || !isField}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = paramNameList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeParamItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('+', 50, isModify && isLastVar(), '+'),\r\n                        getFormulaItem('-', 50, isModify && isLastVar(), '-'),\r\n                        getFormulaItem('*', 50, isModify && isLastVar(), '*'),\r\n                        getFormulaItem('/', 50, isModify && isLastVar(), '/'),\r\n                        getFormulaItem('%', 50, isModify && isLastVar(), '%'),\r\n                        getFormulaItem('(', 35, isModify && !isLastVar(), '('),\r\n                        getFormulaItem(')', 35, isModify && isLastVar() && parenthesisBalance > 0, ')'),\r\n                        {\r\n                            label: 'del',\r\n                            width: 60,\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            callback: () => {\r\n                                formulaItems.splice(formulaItems.length - 1, 1);\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {!isCondition ? <></> : (\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            getFormulaItem('<', 50, isModify && isLastVar(), '<'),\r\n                            getFormulaItem('<=', 50, isModify && isLastVar(), '<='),\r\n                            getFormulaItem('=', 50, isModify && isLastVar(), '='),\r\n                            getFormulaItem('>=', 50, isModify && isLastVar(), '>='),\r\n                            getFormulaItem('>', 50, isModify && isLastVar(), '>'),\r\n                            getFormulaItem('&&', 50, isModify && isLastVar(), '&&'),\r\n                            getFormulaItem('||', 50, isModify && isLastVar(), '||'),\r\n                        ]}\r\n                    />\r\n                )}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('var', 70, isModify && !isLastVar(), 'var'),\r\n                        getFormulaItem('rand', 80, isModify && !isLastVar(), 'rand('),\r\n                        getFormulaItem('integer', 80, isModify && !isLastVar(), 'integer('),\r\n                        {\r\n                            label: 'clear',\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            width: 90,\r\n                            callback: () => {\r\n                                setFormulaItems([]);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_Formula\r\n                    isInvalid={!isFormulaOK}\r\n                >{getFormulaJsx()}</_Formula>\r\n                {formJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify && isField}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'field', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getFieldRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {!isField ? <></> : LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorParamItem;\r\n\r\n/**\r\n * ノードの変数を参照している箇所のリストを返す。\r\n * @param node 変数のノード\r\n * @param argName 変数名\r\n * @returns 参照パラメータリスト\r\n */\r\nexport const getFieldRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n * フィールド名の変更に伴い、式で参照している変数を同期する\r\n * @param mngNode ノード\r\n */\r\nexport const syncFieldName = (mngNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const type = (mngNode.data as LogicUtil.WrapElement).type;\r\n    if (type === 'field-mng') {\r\n        const logic = (mngNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n\r\n        const visualMng = logic.mngs.find(mng => mng.type === 'visual-mng');\r\n        if (visualMng != undefined) {\r\n            syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const behaviorMng = logic.mngs.find(mng => mng.type === 'behavior-mng');\r\n        if (behaviorMng != undefined) {\r\n            syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                // Inherit配下のField要素のチェック\r\n                if (inhfld != null) {\r\n                    syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                }\r\n                // Extend要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    } else if (type === 'inhfld-mng') {\r\n        const inheritWrap = mngNode.parent?.data as LogicUtil.WrapElement;\r\n\r\n        // Extend要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        // Send要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n}\r\n\r\nconst _Formula = styled.div<{\r\n    isInvalid: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 12px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    overflow-wrap: break-word;\r\n    height: 100px;//calc(100% - 4px);\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    background-color: #ffffff8b;\r\n    ${props => !props.isInvalid ? '' : css`\r\n        background-color: #ffe8628a;\r\n    `}\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    padding: 0 0 0 4px;\r\n    vertical-align: top;\r\n    margin: 5px 0 0 6px;\r\n`;\r\nconst _Var = styled.span`\r\n    color: #e70013;\r\n`;\r\nconst _Sig = styled.span`\r\n    color: #3333339d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorBehiviorMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [isVector, hasDecayParam, hasGravityParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.BehaviorParamType.VEC_X),\r\n            list.includes(ParamUtil.ModulateParamType.DECAY_RATE),\r\n            list.includes(ParamUtil.ModulateParamType.GRAVITY_VAL)\r\n        ]\r\n    }, [node]);\r\n\r\n    const exchangeElements = (flag: boolean, listPos: number,\r\n        trueParamElements: LogicUtil.NodeParamItem[],\r\n        falseParamElements: LogicUtil.NodeParamItem[]\r\n    ) => {\r\n        const size = (flag ? trueParamElements : falseParamElements).length;\r\n        LogicElementUtil.removeChild(node, listPos, size);\r\n\r\n        (flag ? trueParamElements : falseParamElements).forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    const exchangeVectorMethod = () => {\r\n        exchangeElements(!isVector, 3,\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_X, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_Y, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ],\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_RAD, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_LEN, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ]\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            mng.params.splice(listPos, size);\r\n            node.children.splice(listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                mng.params.splice(listPos + i, 0, wrap);\r\n                const newNode = TreeUtil.createNode(wrap, node);\r\n                node.children.splice(listPos + i, 0, newNode);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Vector method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Direction method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={!isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"modulate\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Decay'}\r\n                            width={300}\r\n                            isUse={hasDecayParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDecayParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_RATE,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.9' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Gravity'}\r\n                            width={300}\r\n                            isUse={hasGravityParam}\r\n                            callback={() => {\r\n                                toggleElements(hasGravityParam, !hasDecayParam ? 5 : 7, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_VAL,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.2' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorBehiviorMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype Medhod = 'blank' | 'particle' | 'snake'\r\n\r\nconst EditorVisualMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [drawMethod, hasDisappearParam, hasShrinkParam, hasFlashParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        let drawMethod: Medhod = 'blank';\r\n        if(list.length > 0) {\r\n            drawMethod = list.includes(ParamUtil.VisualParamType.THICKNESS) ? 'snake' : 'particle';\r\n        }\r\n        return [\r\n            drawMethod,\r\n            list.includes(ParamUtil.EffectParamType.DISAPPEAR_START),\r\n            list.includes(ParamUtil.EffectParamType.SHRINK_START),\r\n            list.includes(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME)\r\n        ]\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    const addElements = (paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        paramElements.forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n    const removeElements = (elementNameList: string[]) => {\r\n        const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        elementNameList.forEach((name) => {\r\n            mng.params.forEach((param, i) => {\r\n                if((param.data as LogicUtil.NodeParamItem).name === name) {\r\n                    LogicElementUtil.removeChild(node, i, 1);\r\n                }\r\n            });\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam || hasFlashParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'None'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'blank'}\r\n                            callback={() => {\r\n                                mng.params.length = 0;\r\n                                node.children.length = 0;\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Snake Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'snake'}\r\n                            callback={() => {\r\n                                removeElements([\r\n                                    ParamUtil.VisualParamType.RADIUS\r\n                                ]);\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.THICKNESS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Particle Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'particle'}\r\n                            callback={() => {\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.RADIUS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '20' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"effect\"\r\n            isEnable={!isModify && drawMethod !== 'blank'}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Disappear'}\r\n                            width={300}\r\n                            isUse={hasDisappearParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDisappearParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.DISAPPEAR_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Shrink'}\r\n                            width={300}\r\n                            isUse={hasShrinkParam}\r\n                            callback={() => {\r\n                                toggleElements(hasShrinkParam, !hasDisappearParam ? 5 : 6, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.SHRINK_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Flash'}\r\n                            width={300}\r\n                            isUse={hasFlashParam}\r\n                            callback={() => {\r\n                                toggleElements(hasFlashParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_APPEAR_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_HIDE_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorVisualMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInheritConnMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeConnectManager;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Inherit',\r\n                        callback: () => {\r\n                            const wrap: LogicUtil.WrapElement = {\r\n                                type: 'connector',\r\n                                data: null\r\n                            }\r\n                            mng.inherits.push(wrap);\r\n                            const newNode = TreeUtil.createNode(wrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorInheritConnector = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, invalidate, setModify, isModify, removeSelf, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const [condition, setCondition] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [identify, setIdentify] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [method, setMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [depend, setDepend] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n        setMethod({ ...method, value: param.method });\r\n        setDepend({ ...depend, value: param.depend });\r\n        setIdentify({ ...identify, value: param.id });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n            // 派生識別名（自動命名）の初期値を取得\r\n            const defaultName = LogicElementUtil.getNumberingOnPrefixName('id_', node.parent as TreeUtil.ElementNode);\r\n            setIdentify({ ...identify, value: defaultName });\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const isCreate = method.value === 'create';\r\n\r\n    const hasFieldNode = useMemo(() => {\r\n        return LogicElementUtil.getInnerNode(node, 'inhfld-mng') != null;\r\n    }, [node]);\r\n\r\n    /** 引用するロジックリスト */\r\n    const logicList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return inheritMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    /** 同階層の既存のインヘリットIDを取得（重複チェックに使用） */\r\n    const idList = useMemo(() => {\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    const initConnectorNode = (param: LogicUtil.NodeInheritConnector) => {\r\n        param.mngs = [];\r\n        node.children = [];\r\n        param.mngs.push({\r\n            type: 'extend-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        param.mngs.push({\r\n            type: 'send-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        if (isCreate) {\r\n            param.mngs.push({\r\n                type: 'inherit-logic',\r\n                data: {\r\n                    mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                } as LogicUtil.NodeInheritItem\r\n            });\r\n        }\r\n        wrap.data = param;\r\n\r\n        param.mngs.forEach(mng => {\r\n            const newNode = TreeUtil.createNode(mng, node);\r\n            const data = (newNode.data as LogicUtil.WrapElement);\r\n            switch (data.type) {\r\n                case 'inherit-logic': {\r\n                    LogicElementUtil.syncTreeElementFromWrap(newNode);\r\n                } break;\r\n                case 'send-mng': {\r\n                    const connector = (newNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.method === 'depend') {\r\n                        console.log('initSendParams');\r\n                        initSendParams(newNode, rootData);\r\n                    }\r\n                } break;\r\n            }\r\n            node.children.push(newNode);\r\n        });\r\n    }\r\n\r\n    const getSendParamList = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement): string[] => {\r\n        const connector = (sendNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = inheritMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement) => {\r\n        const sendParamList = getSendParamList(sendNode, rootData);\r\n        // console.log(sendParamList);\r\n        const wrap = sendNode.data as LogicUtil.WrapElement;\r\n        const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n                sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'inhfld-mng');\r\n        if(fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n\r\n    const isDisable = wrap.data == null ? false : (wrap.data as LogicUtil.NodeInheritConnector).disable ?? false;\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[identify, method, depend]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeInheritConnector = {\r\n                    method: method.value as LogicUtil.InheritMethod,\r\n                    depend: depend.value,\r\n                    id: identify.value,\r\n                    mngs: []\r\n                };\r\n                initConnectorNode(param);\r\n                invalidate();\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                const isChange = param.method !== method.value || param.depend !== depend.value;\r\n                param.method = method.value as LogicUtil.InheritMethod;\r\n                param.depend = depend.value;\r\n                param.id = identify.value;\r\n                wrap.data = param;\r\n\r\n                if (isChange) {\r\n                    initConnectorNode(param);\r\n                }\r\n                invalidate();\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={method}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                // createが選択されたらdependを空にする\r\n                                if (checkable.value === 'create') {\r\n                                    setDepend({ ...depend, value: '' });\r\n                                }\r\n                                setMethod(checkable);\r\n                            }}\r\n                            list={LogicUtil.ConnectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Depend\"\r\n                    isEnabled={method.value === 'depend'}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={depend}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setDepend}\r\n                            list={logicList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            dependency={[method]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => {\r\n                                        return method.value !== 'depend' || ValidateUtil.checkRequired(value);\r\n                                    },\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Identify\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={identify}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setIdentify}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !idList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                0,\r\n                                {\r\n                                    type: 'inhfld-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Disable'}\r\n                        width={300}\r\n                        isUse={isDisable}\r\n                        isEnable={!isModify}\r\n                        callback={() => {\r\n                            const data = (wrap.data as LogicUtil.NodeInheritConnector);\r\n                            if (isDisable) {\r\n                                data.disable = undefined;\r\n                            } else {\r\n                                data.disable = true;\r\n                            }\r\n                            invalidate();\r\n                        }}\r\n                    />}\r\n                />\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'inherit', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Edit local',\r\n                            isEnable: !isModify && !isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Create a clone from the depended inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                                                const logicList = logicMng.defs.map(def => def.data as LogicUtil.NodeLogicItem);\r\n                                                // ディペンドしているロジックを取得\r\n                                                const dependLogic = logicList.find(inherit => inherit.name === depend.value);\r\n                                                if (dependLogic != undefined) {\r\n                                                    const cloneLogic = JSON.parse(JSON.stringify(dependLogic)) as LogicUtil.NodeLogicItem;\r\n                                                    const connectItem: LogicUtil.NodeInheritItem = {\r\n                                                        mngs: cloneLogic.mngs\r\n                                                    };\r\n                                                    const newWrap: LogicUtil.WrapElement = {\r\n                                                        type: 'inherit-logic',\r\n                                                        data: connectItem\r\n                                                    };\r\n                                                    const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                                                    // 子要素の展開\r\n                                                    newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                    const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                    param.method = 'create';\r\n                                                    param.depend = '';\r\n                                                    mappingForm();\r\n                                                }\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Detach global',\r\n                            isEnable: !isModify && isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Detach a clone from the this inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                let rootNode = node;\r\n                                                while (rootNode.parent != null) rootNode = rootNode.parent;\r\n                                                const inheritNode = node.children.find(el => (el.data as LogicUtil.WrapElement).type === 'inherit-logic');\r\n                                                const logicMngNode = rootNode.children.find(el => (el.data as LogicUtil.WrapElement).type === 'logic-mng');\r\n                                                if (logicMngNode == undefined || inheritNode == undefined) return;\r\n                                                const inherit = (inheritNode.data as LogicUtil.WrapElement).data;\r\n                                                const clone = JSON.parse(JSON.stringify((inherit))) as LogicUtil.NodeInheritItem;\r\n                                                // ロジック名（自動命名）を取得\r\n                                                const defaultName = LogicElementUtil.getNumberingOnPrefixName('clone_inherit_', logicMngNode);\r\n                                                const logicItem: LogicUtil.NodeLogicItem = {\r\n                                                    ...clone,\r\n                                                    name: defaultName\r\n                                                };\r\n                                                const newWrap: LogicUtil.WrapElement = {\r\n                                                    type: 'logic-item',\r\n                                                    data: logicItem\r\n                                                };\r\n\r\n                                                // ロジックマネージャに追加\r\n                                                const newNode = LogicElementUtil.addChild(newWrap, logicMngNode);\r\n                                                // 子要素の展開\r\n                                                newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                // 自身（コネクタ）からインヘリット要素を削除\r\n                                                LogicElementUtil.removeChild(node, 2, 1);\r\n\r\n                                                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                param.method = 'depend';\r\n                                                param.depend = logicItem.name;\r\n                                                mappingForm();\r\n\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnector;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport { useContext, useMemo, useState, useRef } from \"react\";\r\n\r\nconst FRAME_WIDTH = 400;\r\nnamespace DrawableVectorChooser {\r\n\r\n    export const Component = (props: {\r\n        addPoint: (x: number, y: number) => void;\r\n        clear: () => void;\r\n        xList: number[];\r\n        yList: number[];\r\n    }) => {\r\n\r\n        const [isDraw, setDraw] = useState(false);\r\n        const ref = useRef<HTMLDivElement>(null);\r\n\r\n        const pointJsxList = useMemo(() => {\r\n            return props.xList.map((x, i) => {\r\n                const y = props.yList[i];\r\n                return (\r\n                    <_Point key={i}\r\n                        x={x}\r\n                        y={y}\r\n                    />\r\n                );\r\n            });\r\n        }, [props.xList.length]);\r\n\r\n\r\n        const putAction = (x: number, y: number) => {\r\n            setDraw(true);\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = x - clientRect.x;\r\n            const posY = y - clientRect.y;\r\n            props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2);\r\n        }\r\n\r\n        const moveAction = (x: number, y: number) => {\r\n            if (!isDraw) return;\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = x - clientRect.x;\r\n            const posY = y - clientRect.y;\r\n            const subX = posX - (props.xList[props.xList.length - 1] + FRAME_WIDTH / 2);\r\n            const subY = posY - (props.yList[props.yList.length - 1] + FRAME_WIDTH / 2);\r\n            const distance = Math.sqrt(subX * subX + subY * subY);\r\n            if (distance > 10) props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2);\r\n        }\r\n\r\n        const releaseAction = () => {\r\n            setDraw(false);\r\n        }\r\n\r\n        return (<>\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"Point\"\r\n                jsx={\r\n                    <FormUtil.FixedText\r\n                        value={props.xList.length.toString()}\r\n                        isRecordItem\r\n                    />\r\n                }\r\n            />\r\n            <_Frame\r\n                ref={ref}\r\n                onMouseDown={(e) => { putAction(e.clientX, e.clientY) }}\r\n                onMouseMove={(e) => { moveAction(e.clientX, e.clientY) }}\r\n                onMouseUp={releaseAction}\r\n                onMouseLeave={releaseAction}\r\n                onTouchStart={(e) => { putAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchMove={(e) => { moveAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchEnd={releaseAction}\r\n                onTouchCancel={releaseAction}\r\n            >\r\n                <_Center />\r\n                {pointJsxList}\r\n            </_Frame>\r\n            <FormUtil.ButtonRecord buttons={[\r\n                {\r\n                    label: 'Clear',\r\n                    isEnable: props.xList.length > 0,\r\n                    callback: props.clear,\r\n                }\r\n            ]} />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default DrawableVectorChooser;\r\n\r\nconst _Frame = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${FRAME_WIDTH}px;\r\n    height: 400px;\r\n    margin: 0 0 0 3px;\r\n    background-color: #2e7085;\r\n    border: 2px solid #800;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Point = styled.div<{\r\n    x: number;\r\n    y: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x + FRAME_WIDTH / 2 - 5}px;\r\n    top: ${props => props.y + FRAME_WIDTH / 2 - 5}px;\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 10px;\r\n    background-color: #fcfeff9d;\r\n    border: 1px solid #dfe5ff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Center = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${FRAME_WIDTH / 2 - 10}px;\r\n    top: ${FRAME_WIDTH / 2 - 10}px;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 20px;\r\n    background-color: #800;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSendManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const isDepend = () => {\r\n        const conn = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        return conn.method === 'depend';\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"template\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Connect Position',\r\n                            isEnable: !isDepend(),\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.ConnectParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Set Position',\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.SetParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSendManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFieldMng = () => {\r\n    const { invalidate, node, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Field',\r\n                        callback: () => {\r\n                            // const newWrap: FactoryUtil.WrapNode = FactoryUtil.createParamWrap('field-item',\r\n                            //     { name: '', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                            // );\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'field-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFieldMng;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorExtendMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [hasLoopParam, hasInvokeParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name as ParamUtil.ExtendParam;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.ExtendParamType.LOOP_COUNT),\r\n            list.includes(ParamUtil.ExtendParamType.INVOKE)\r\n        ]\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Loop'}\r\n                            width={300}\r\n                            isUse={hasLoopParam}\r\n                            callback={() => {\r\n                                toggleElement(hasLoopParam, 0, {\r\n                                    type: 'param-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.LOOP_COUNT,\r\n                                        formulaItems: ['var'],\r\n                                        values: [{ type: 'direct', value: '1' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Invoke'}\r\n                            width={300}\r\n                            isUse={hasInvokeParam}\r\n                            callback={() => {\r\n                                toggleElement(hasInvokeParam, hasLoopParam ? 1 : 0, {\r\n                                    type: 'condition-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.INVOKE,\r\n                                        formulaItems: ['var', '=', 'var'],\r\n                                        values: [{ type: 'direct', value: '0' }, { type: 'direct', value: '0' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorExtendMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\n\r\nconst EditorSeedItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [entry, setEntry] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [permit, setPermit] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setEntry({ ...entry, value: param.entry });\r\n        setPermit({ ...permit, value: param.permit })\r\n    };\r\n\r\n    /** 既存のシード名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    // 引用するロジックリスト\r\n    const logicNameList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const logicMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return logicMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    const getSendParamList = (): LogicUtil.NodeArgumentItem[] => {\r\n        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n        const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = logicMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return arg.data as LogicUtil.NodeArgumentItem;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = () => {\r\n        const sendParamList = getSendParamList();\r\n        const sendNode = LogicElementUtil.getInnerNode(node, 'interface-mng', 'seedsend-mng') as TreeUtil.ElementNode;\r\n        const params = ((sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param.name)) {\r\n                const isArray = param.valueType === 'array';\r\n                const paramWrap = LogicElementUtil.createParamWrap('seedsend-item',\r\n                    {\r\n                        name: param.name,\r\n                        formulaItems: ['var'],\r\n                        values: !isArray ? [{ type:  'direct', value: '0' }] : [{ type:  'array', value: '' }],\r\n                        isArray: isArray ? true : undefined\r\n                    }\r\n                );\r\n                params.push(paramWrap);\r\n            }\r\n        });\r\n        LogicElementUtil.syncTreeElementFromWrap(sendNode);\r\n    }\r\n\r\n    const getDefaultSeedMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'interface-mng',\r\n                data: {\r\n                    mngs: [\r\n                        {\r\n                            type: 'seedarg-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeSeedArgManager\r\n                        },\r\n                        {\r\n                            type: 'seedsend-mng',\r\n                            data: {\r\n                                params: []\r\n                            } as LogicUtil.NodeSeedSendManager\r\n                        },\r\n                    ]\r\n                } as LogicUtil.NodeInterfaceMng\r\n            },\r\n            {\r\n                type: 'thumbnail-mng',\r\n                data: {\r\n                    items: []\r\n                } as LogicUtil.NodeThumnailManager\r\n            },\r\n            {\r\n                type: 'sample-mng',\r\n                data: {\r\n                    samples: []\r\n                } as LogicUtil.NodeSampleManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, entry, permit]}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSeedItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    entry: entry.value,\r\n                    permit: permit.value as LogicUtil.PermitType,\r\n                    mngs: getDefaultSeedMngs()\r\n                };\r\n                wrap.data = element;\r\n\r\n                LogicElementUtil.syncTreeElementFromWrap(node);\r\n                // 参照しているロジックの引数をSendに設定\r\n                initSendParams();\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedItem;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.permit = permit.value as LogicUtil.PermitType;\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 24),\r\n                                    errorType: \"length\"\r\n                                },\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Entry\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={entry}\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setEntry}\r\n                            list={logicNameList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Permit\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={permit}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setPermit}\r\n                            list={LogicUtil.PermitTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'seed', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedItem;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext as LogicTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorThumbnailMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(LogicTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeThumnailManager;\r\n\r\n    const hasSample = useMemo(() => {\r\n        const sampleMngNode = LogicElementUtil.getInnerNode(node.parent as TreeUtil.ElementNode, 'sample-mng') as TreeUtil.ElementNode;\r\n        return sampleMngNode.children.length as number > 0;\r\n    }, []);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={hasSample}\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Thumbnail',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'thumbnail-item',\r\n                                data: null\r\n                            }\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport Particle from \"../../../../graphic/particle\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst WND_SIZE = 100;\r\n\r\nconst EditorThumbnailItem = () => {\r\n    const { rootData, node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n    const data = wrap.data as LogicUtil.NodeThumbnailItem;\r\n\r\n\r\n    const seedWrap = node.parent?.parent?.data as LogicUtil.WrapElement;\r\n    const sampleMng = LogicElementUtil.getInnerWrap(seedWrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n    const samples = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [urls, setUrls] = useState<string[]>([]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n        setName({ ...name, value: param.name });\r\n        setFrame({ ...frame, value: param.frame.toString() });\r\n    };\r\n    \r\n    /** 既存のサムネイル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n            setTimeout(() => {\r\n                const urls: string[] = [];\r\n                samples.forEach((sample, i) => {\r\n                    urls.push(getThumbnailURL(data.frame, i));\r\n                });\r\n                setUrls(urls);\r\n            }, 1);\r\n        }\r\n    }, [node]);\r\n\r\n    const getSeedValueMap = (sampleNo: number): PreviewUtil.ValueMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ValueMap[] = [];\r\n        argMng.args.forEach((wrap, i) => {\r\n            const item = wrap.data as LogicUtil.NodeSeedArgItem;\r\n            if(!item.isArray) {\r\n                const name = item.name;\r\n                const value = Number(samples[sampleNo].values[i]);\r\n                argMap.push( { name, value });\r\n            }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams\r\n        .filter(item => !item.isArray)\r\n        .map(item => {\r\n            return { name: item.name, value: PreviewUtil.convertParamsToValue(item.name, sendParams, argMap) ?? 0 }\r\n        });\r\n    }\r\n    const getSeedArrayMap = (sampleNo: number): PreviewUtil.ArrayMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ArrayMap[] = [];\r\n        argMng.args.forEach((wrap, i) => {\r\n            const item = wrap.data as LogicUtil.NodeSeedArgItem;\r\n            if(item.isArray) {\r\n                const name = item.name;\r\n                const array = samples[sampleNo].values[i].split(',').map(v => Number(v));\r\n                argMap.push( { name, array });\r\n            }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams\r\n        .filter(item => item.isArray)\r\n        .map(item => {\r\n            return { name: item.name, array: PreviewUtil.convertParamsToArray(item.name, sendParams, argMap) ?? [] }\r\n        });\r\n    }\r\n\r\n    const getThumbnailURL = (targetFrame: number, sampleNo: number) => {\r\n        console.log('create start!');\r\n        const owner: Particle.Instance[] = [];\r\n\r\n        let frameCnt = 0;\r\n        do {\r\n            if (frameCnt === 0) {\r\n                const seed = (node.parent?.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n                const logicManager = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                const logic = logicManager.defs.find(logic => (logic.data as LogicUtil.NodeLogicItem).name === seed.entry);\r\n                if (logic == undefined) break;\r\n\r\n                const sendValueMapList = getSeedValueMap(sampleNo);\r\n                const sendArrayMapList = getSeedArrayMap(sampleNo);\r\n                owner.push(new Particle.Instance(\r\n                    PreviewUtil.buildLogicProps(owner, logic.data, rootData, sendValueMapList, sendArrayMapList))\r\n                );\r\n            }\r\n\r\n            if (frameCnt === targetFrame) {\r\n                return CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                });\r\n            }\r\n\r\n            // パーティクルの更新\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                particle.update();\r\n            }\r\n\r\n            // 死滅したパーティクルの削除\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frameCnt > 500 || owner.length > 3000) break;\r\n            frameCnt++;\r\n        } while (owner.length > 0);\r\n        return '';\r\n    }\r\n\r\n    const pictureJsxList = useMemo(() => {\r\n        const sampleMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n        return sampleMng.samples.map((wrap, i) => {\r\n            const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n\r\n            const url = urls[i];\r\n            const imgJsx = url == undefined ? <></> : <_IMG src={urls[i]} />;\r\n            return (\r\n                <_SampleDiv key={i}>-\r\n                    <_SampleName>{sample.name}</_SampleName>\r\n                    <_CanvasDiv>\r\n                        {imgJsx}\r\n                    </_CanvasDiv>\r\n                </_SampleDiv>\r\n            );\r\n        });\r\n    }, [node, urls]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, frame]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeThumbnailItem = {\r\n                    name: name.value,\r\n                    frame: Number(frame.value),\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n                param.name = name.value;\r\n                param.frame = Number(frame.value);\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"preview\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {pictureJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailItem;\r\n\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport DrawUtil from \"../../../graphic/drawUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport DrawableVectorChooser from \"./drawableVectorChooser\";\r\n\r\nnamespace LogicFormUtil {\r\n\r\n    export const buildPreviewForms = (\r\n        isReadOnly: boolean,\r\n        argumentList: LogicUtil.NodeSeedArgItem[],\r\n        formgrpList: LogicUtil.NodeFromGrpItem[],\r\n        formList: FormUtil.CheckableValue[],\r\n        setFormList: ((formList: FormUtil.CheckableValue[]) => void)\r\n    ): JSX.Element[] => {\r\n        /** 入力フォームのJSX */\r\n        const formJsxList: JSX.Element[] = [];\r\n        const usedGrps: string[] = [];\r\n        formList.forEach((form, i) => {\r\n            const argument = argumentList[i];\r\n            const formgrp = formgrpList.find(grp => grp.args.includes(argument.name));\r\n\r\n            // フォームグループが設定されている場合、独自の入力UIを表示する\r\n            if (formgrp != undefined) {\r\n                // 設定済みであれば追加しない\r\n                if (usedGrps.includes(formgrp.name)) return 1;\r\n                // 利用済みリストに追加\r\n                usedGrps.push(formgrp.name);\r\n                const targetForms: number[] = [];\r\n                argumentList.forEach((arg, j) => {\r\n                    if (formgrp.args.includes(arg.name)) {\r\n                        targetForms.push(j);\r\n                    }\r\n                });\r\n                switch (formgrp.method) {\r\n                    case 'color': {\r\n                        const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                            r: Number(formList[targetForms[0]].value),\r\n                            g: Number(formList[targetForms[1]].value),\r\n                            b: Number(formList[targetForms[2]].value),\r\n                            a: 255\r\n                        }).substring(0, 7);\r\n                        // console.log(colorCode);\r\n                        formJsxList.push(<div key={i}>\r\n                            <FormUtil.Record\r\n                                jsx={\r\n                                    <_Message>{formgrp.name}: <_Type>color </_Type><_Range>({0} ～ {255} respectively)</_Range></_Message>\r\n                                }\r\n                            />\r\n                            <FormUtil.Record\r\n                                jsx={<>\r\n                                    {targetForms.map((formIndex, j) => {\r\n                                        return (\r\n                                            <FormUtil.TextField\r\n                                                key={formIndex}\r\n                                                width={72}\r\n                                                marginLeft={j === 0 ? 5 : 4}\r\n                                                isNumber\r\n                                                isReadOnly={isReadOnly}\r\n                                                checkable={formList[formIndex]}\r\n                                                setCheckable={() => {\r\n                                                    setFormList(formList.slice());\r\n                                                }}\r\n                                                validates={[\r\n                                                    {\r\n                                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                        errorType: \"required\"\r\n                                                    },\r\n                                                    {\r\n                                                        checker: (value) => ValidateUtil.checkNumberRange(value, argument.min, argument.max),\r\n                                                        errorType: 'value'\r\n                                                    }\r\n                                                ]}\r\n                                            />\r\n                                        );\r\n                                    })}\r\n                                    <_Color type=\"color\" value={colorCode}\r\n                                        disabled={isReadOnly}\r\n                                        onChange={(value) => {\r\n                                            const rgba = DrawUtil.convertRgbaFromColorCode(value.target.value + 'ff');\r\n                                            if (rgba != null) {\r\n                                                formList[targetForms[0]].value = rgba.r.toString();\r\n                                                formList[targetForms[1]].value = rgba.g.toString();\r\n                                                formList[targetForms[2]].value = rgba.b.toString();\r\n                                            }\r\n                                            setFormList(formList.slice());\r\n                                        }}\r\n                                    />\r\n                                </>}\r\n                            />\r\n                        </div>);\r\n                    } break;\r\n                    case 'draw': {\r\n                        const xValue = formList[targetForms[0]].value;\r\n                        const yValue = formList[targetForms[1]].value;\r\n                        const xList = (xValue === '' ? [] : xValue.split(',').map(v => Number(v)));\r\n                        const yList = (xValue === '' ? [] : yValue.split(',').map(v => Number(v)));\r\n                        formJsxList.push(<div key={i}>\r\n                            <FormUtil.Record\r\n                                jsx={\r\n                                    <_Message>{formgrp.name}: <_Type>point </_Type><_Range>(～ {255} drawing)</_Range></_Message>\r\n                                }\r\n                            />\r\n                            <DrawableVectorChooser.Component\r\n                                addPoint={(x, y) => {\r\n                                    xList.push(x);\r\n                                    yList.push(y);\r\n                                    formList[targetForms[0]].value = xList.join(',');\r\n                                    formList[targetForms[1]].value = yList.join(',');\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                clear={() => {\r\n                                    formList[targetForms[0]].value = '';\r\n                                    formList[targetForms[1]].value = '';\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                xList={xList}\r\n                                yList={yList}\r\n                            />\r\n                        </div>);\r\n                    } break;\r\n                }\r\n            } else {\r\n                let labelName = argument.name;\r\n                if (argument.disp != undefined) labelName = argument.disp;\r\n                formJsxList.push(<div key={i}>\r\n                    <FormUtil.Record\r\n                        jsx={\r\n                            <_Message>{labelName}: <_Type>number </_Type><_Range>({argument.min} ～ {argument.max})</_Range></_Message>\r\n                        }\r\n                    />\r\n                    <FormUtil.Record\r\n                        jsx={<>\r\n                            <FormUtil.TextField\r\n                                width={142}\r\n                                marginLeft={6}\r\n                                isNumber\r\n                                isReadOnly={isReadOnly}\r\n                                step={argument.step}\r\n                                checkable={form}\r\n                                setCheckable={() => {\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, argument.min, argument.max),\r\n                                        errorType: 'value'\r\n                                    }\r\n                                ]}\r\n                            />\r\n                            <_Tsumami type=\"range\" value={Number(form.value)} min={argument.min} max={argument.max} step={argument.step}\r\n                                disabled={isReadOnly}\r\n                                onChange={(value) => {\r\n                                    formList[i] = { ...form, value: value.target.value };\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                            />\r\n                        </>}\r\n                    />\r\n                </div>);\r\n            }\r\n        });\r\n        return formJsxList;\r\n    }\r\n}\r\n\r\nexport default LogicFormUtil;\r\n\r\n\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    overflow: hidden;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Type = styled.span`\r\n    color: #c10000;\r\n    font-weight: 600;\r\n`;\r\nconst _Range = styled.span`\r\n    color: #423e84fb;\r\n`;\r\n\r\nconst _Tsumami = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 11px 0 0 6px;\r\n    width: calc(100% - 160px);\r\n`;\r\n\r\nconst _Color = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 3px 0 0 6px;\r\n    width: 100px;\r\n    height: 34px;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactDetArgumentMng from \"../detail/logic/editorArgumentMng\";\r\nimport EditorArgumentItem from \"../detail/logic/editorArgumentItem\";\r\nimport FactDetSeedMng from \"../detail/seed/editorSeedMng\";\r\nimport EditorLogicMng from \"../detail/logic/editorLogicMng\";\r\nimport EditorLogicItem from \"../detail/logic/editorLogicItem\";\r\nimport EditorParamItem from \"../detail/logic/editorParamItem\";\r\nimport FactDetBehiviorMng from \"../detail/logic/editorBehiviorMng\";\r\nimport EditorVisualMng from \"../detail/logic/editorVisualMng\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport EditorInheritConnMng from \"../detail/logic/editorInheritConnMng\";\r\nimport EditorInheritConnector from \"../detail/logic/editorInheritConnector\";\r\nimport EditorSendManager from \"../detail/logic/editorSendManager\";\r\nimport EditorFieldMng from \"../detail/logic/editorFieldMng\";\r\nimport EditorExtendMng from \"../detail/logic/editorExtendMng\";\r\nimport EditorSeedItem from \"../detail/seed/editorSeedItem\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"./logicElementUtil\";\r\nimport EditorThumbnailMng from \"../detail/seed/editorThumbnailMng\";\r\nimport EditorThumbnailItem from \"../detail/seed/editorThumbnailItem\";\r\nimport EditorSampleItem from \"../detail/seed/editorSampleItem\";\r\nimport EditorSampleMng from \"../detail/seed/editorSampleMng\";\r\nimport EditorInterfaceManager from \"../detail/seed/editorInterfaceManager\";\r\nimport EditorSeedArgMng from \"../detail/seed/editorSeedArgMng\";\r\nimport EditorSeedArgItem from \"../detail/seed/editorSeedArgItem\";\r\nimport EditorSeedSendMng from \"../detail/seed/editorSeedSendMng\";\r\nimport EditorFormgrpItem from \"../detail/seed/editorFormgrpItem\";\r\nimport EditorFormgrpMng from \"../detail/seed/editorFormgrpMng\";\r\n\r\nnamespace LogicUtil {\r\n\r\n    export type DetailArgs = {\r\n        rootData: LogicUtil.WrapElement;\r\n        node: TreeUtil.ElementNode;\r\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\r\n        invalidate: () => void;\r\n        isModify: boolean;\r\n        setModify: (isModify: boolean) => void;\r\n        // setRootData: React.Dispatch<React.SetStateAction<WrapElement>>;\r\n        setRootData: (rootData: WrapElement) => void;\r\n        removeSelf: () => void;\r\n    }\r\n\r\n    /**\r\n     * 変数名チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkFieldName = (str: string) => {\r\n        // 1文字目が数値でないこと\r\n        const isNoHeadNumber = !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].\r\n            includes(str.substring(0, 1));\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyz_';\r\n        return isNoHeadNumber && ValidateUtil.checkIncludesChars(str, list);\r\n    }\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'seed-mng' |\r\n        'logic-mng' |\r\n        'seed-item' |\r\n        'logic-item' |\r\n        'argument-mng' |\r\n        'argument-item' |\r\n        'field-mng' |\r\n        'field-item' |\r\n        'visual-mng' |\r\n        'behavior-mng' |\r\n        'inhfld-mng' |\r\n        'extend-mng' |\r\n        'inherit-mng' |\r\n        'connector' |\r\n        'inherit-logic' |\r\n        'send-mng' |\r\n        'send-item' |\r\n        'param-item' |\r\n        'condition-item' |\r\n        'interface-mng' |\r\n        'sample-mng' |\r\n        'sample-item' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-item' |\r\n        'seedarg-mng' |\r\n        'seedsend-mng' |\r\n        'seedarg-item' |\r\n        'seedsend-item' |\r\n        'formgrp-mng' |\r\n        'formgrp-item'\r\n        ;\r\n\r\n    export const ArgTypes = ['number', 'array'] as const;\r\n    export type ArgumentType = typeof ArgTypes[number];\r\n\r\n    export const ParamInputTypes = ['direct', 'array', 'constant', 'argument', 'self', 'field', 'array.len', 'array.itr'] as const;\r\n    export type ParamInputType = typeof ParamInputTypes[number];\r\n\r\n    export const ConnectTypes = ['create', 'depend'] as const;\r\n    export type InheritMethod = typeof ConnectTypes[number];\r\n\r\n    export const PermitTypes = ['develop', 'private', 'release'] as const;\r\n    export type PermitType = typeof PermitTypes[number];\r\n\r\n    export const FromGrpMedhods = ['color', 'draw'] as const;\r\n    export type FromGrpMethod = typeof FromGrpMedhods[number];\r\n\r\n    export type ParamProps = {\r\n        type: ParamInputType;\r\n        value: string;\r\n    }\r\n\r\n    export type WrapElement = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        seedMng: WrapElement;\r\n        logicMng: WrapElement;\r\n    }\r\n    export type NodeSeedManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicItem = {\r\n        name: string;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInterfaceMng = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInheritItem = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeParamManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeParamItem = {\r\n        name: string;\r\n        formulaItems: string[];\r\n        values: ParamProps[];\r\n        isArray?: boolean;\r\n    }\r\n\r\n    export type NodeArgumentItem = {\r\n        name: string;\r\n        valueType: ArgumentType;\r\n    }\r\n    export type NodeThumbnailItem = {\r\n        name: string;\r\n        frame: number;\r\n    }\r\n    export type NodeArgumentManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeFieldManager = {\r\n        fields: WrapElement[];\r\n    }\r\n    export type NodeSampleManager = {\r\n        samples: WrapElement[];\r\n    }\r\n    export type NodeSampleItem = {\r\n        name: string;\r\n        values: string[];\r\n    }\r\n\r\n    // export type NodeExtendManager = {\r\n    //     mngs: WrapElement[];\r\n    // }\r\n    export type NodeConnectManager = {\r\n        inherits: WrapElement[];\r\n    }\r\n    export type NodeInheritConnector = {\r\n        method: InheritMethod;\r\n        depend: string;\r\n        id: string;\r\n        disable?: boolean;\r\n        mngs: WrapElement[];\r\n    }\r\n\r\n    export type NodeSeedItem = {\r\n        name: string;\r\n        disp?: string;\r\n        entry: string;\r\n        permit: PermitType;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeThumnailManager = {\r\n        items: WrapElement[];\r\n    }\r\n    export type NodeSeedArgManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeSeedSendManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeSeedArgItem = {\r\n        name: string;\r\n        disp?: string;\r\n        isArray?: boolean;\r\n        min: number;\r\n        max: number;\r\n        step: number;\r\n        defval: number | undefined;\r\n        isPosX?: boolean;\r\n    }\r\n    export type NodeFromgrpManager = {\r\n        defines: WrapElement[];\r\n    }\r\n    export type NodeFromGrpItem = {\r\n        name: string;\r\n        method: FromGrpMethod;\r\n        args: string[];\r\n    }\r\n\r\n    const COLOR_ROOT = '#a1a1a1';\r\n    const COLOR_METHOD = '#cca67b';\r\n    const COLOR_MNG = '#37a2bd';\r\n    const COLOR_LIST = '#b85f5f';\r\n    const COLOR_ITEM = '#ae628c';\r\n    const COLOR_DISABLE = '#685b79';\r\n    const COLOR_PARAM = '#8dae62';\r\n    const COLOR_FIELD = '#cec256';\r\n    const COLOR_THUMBNAIL = '#8283be';\r\n    const COLOR_CONDITION = '#56ce7e';\r\n\r\n    export const getNodeDisplayJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapElement;\r\n        switch (wrap.type) {\r\n            case 'root': {\r\n                return <_Category backgroundColor={COLOR_ROOT}>Library</_Category>;\r\n            }\r\n            case 'seed-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Seed Manager</_Category>;\r\n            }\r\n            case 'logic-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Logic Manager</_Category>;\r\n            }\r\n            case 'visual-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Visual</_Category>;\r\n            }\r\n            case 'extend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Extend</_Category>;\r\n            }\r\n            case 'seed-item': {\r\n                let detailJsx = <>...</>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedItem;\r\n                    detailJsx = <span>{data.name}&nbsp;<_Span color=\"#ffe89ba6\">entry:&nbsp;</_Span><_Field>{data.entry}</_Field></span>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Seed</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n\r\n                </>;\r\n            }\r\n            case 'logic-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Logic</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-logic': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Logic</_Category>;\r\n            }\r\n            case 'argument-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'inhfld-mng':\r\n            case 'field-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Field Manager</_Category>;\r\n            }\r\n            case 'behavior-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Behavior</_Category>;\r\n            }\r\n            case 'inherit-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Inherit Manager</_Category>;\r\n            }\r\n            case 'connector': {\r\n                let detailJsx = <span>...</span>;\r\n                let color = COLOR_ITEM;\r\n                let isDisable = false;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeInheritConnector;\r\n                    detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}</_Span></span>;\r\n                    if (data.method === 'depend') {\r\n                        detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}:&nbsp;</_Span><_Field>{data.depend}</_Field></span>;\r\n                    }\r\n                    if (data.disable ?? false) {\r\n                        color = COLOR_DISABLE;\r\n                        isDisable = true;\r\n                    }\r\n                }\r\n                return (<>\r\n                    <_Category backgroundColor={color} isDisable={isDisable}>Inherit</_Category>\r\n                    {detailJsx == undefined ? <></> : <_EditableValue>{detailJsx}</_EditableValue>}\r\n                </>);\r\n            }\r\n            // パラメータ要素\r\n            case 'param-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_PARAM}>Param<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 条件要素\r\n            case 'condition-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_CONDITION}>Condition<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 変数要素\r\n            case 'field-item': {\r\n                let nameJsx = <span>...</span>;\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeParamItem;\r\n                    nameJsx = <_Detail>&nbsp;[{data.name}]</_Detail>;\r\n                    let result: JSX.Element[] = [];\r\n                    let varCnt = 0;\r\n                    data.formulaItems.forEach((formula, i) => {\r\n                        let str = <_Signature key={i}>{formula}</_Signature>;\r\n                        if (formula === 'var') {\r\n                            const v = data.values[varCnt];\r\n                            if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                            else str = <span key={i}>{v.value}</span>;\r\n                            varCnt++;\r\n                        }\r\n                        result.push(str);\r\n                    });\r\n                    detailJsx = <>{result}</>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Field{nameJsx}</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'argument-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeArgumentItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.valueType})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'send-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'thumbnail-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Thumnail Manager</_Category>;\r\n            }\r\n            case 'thumbnail-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeThumbnailItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.frame})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_THUMBNAIL}>Thumbnail</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'sample-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Preset Manager</_Category>;\r\n            }\r\n            case 'sample-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSampleItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Preset</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'interface-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Interface</_Category>;\r\n            }\r\n            case 'seedarg-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'seedarg-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedArgItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.min}～{data.max})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'seedsend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'formgrp-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Group Manager</_Category>;\r\n            }\r\n            case 'formgrp-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeFromGrpItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.method})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Group<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n        }\r\n        return <_Category backgroundColor={'#ffffff'}>XXXXX</_Category>;\r\n    }\r\n\r\n    export const getTypeName = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return '';\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return 'Root';\r\n            case 'seed-mng': return 'Seed Manager';\r\n            case 'logic-mng': return 'Logic Manager';\r\n            case 'seed-item': return 'Seed Item';\r\n            case 'logic-item': return 'Logic Item';\r\n            case 'argument-mng': return 'Argument Manager';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'Field Manager';\r\n            case 'field-item': return 'Field Item';\r\n            case 'visual-mng': return 'Visual Manager';\r\n            case 'seedarg-item':\r\n            case 'argument-item': return 'Argument Item';\r\n            case 'extend-mng': return 'Extend Manager';\r\n            case 'behavior-mng': return 'Behavior Manager';\r\n            case 'inherit-mng': return 'Inherit Manager';\r\n            case 'connector': return 'Inherit Connector';\r\n            case 'inherit-logic': return 'Inherit Logic';\r\n            case 'send-mng': return 'Send Manager';\r\n            case 'seedsend-item':\r\n            case 'send-item': return 'Send Item';\r\n            case 'param-item': return 'Param Item';\r\n            case 'condition-item': return 'Condition Item';\r\n            case 'interface-mng': return 'Interface Manager';\r\n            case 'thumbnail-mng': return 'Thumbnail Manager';\r\n            case 'thumbnail-item': return 'Thumbnail Item';\r\n            case 'sample-mng': return 'Preset Manager';\r\n            case 'sample-item': return 'Preset Item';\r\n            case 'seedarg-mng': return 'Argument Manager';\r\n            case 'seedsend-mng': return 'Send';\r\n            case 'formgrp-mng': return 'Group Manager';\r\n            case 'formgrp-item': return 'Group Item';\r\n        }\r\n    }\r\n\r\n    export const getDetailComponent = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return <></>;\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return <></>;\r\n            case 'seed-mng': return <FactDetSeedMng />;\r\n            case 'logic-mng': return <EditorLogicMng />;\r\n            case 'seed-item': return <EditorSeedItem />;\r\n            case 'logic-item': return <EditorLogicItem />;\r\n            case 'argument-mng': return <FactDetArgumentMng />;\r\n            case 'argument-item': return <EditorArgumentItem />;\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return <EditorFieldMng />;\r\n            case 'visual-mng': return <EditorVisualMng />;\r\n            case 'extend-mng': return <EditorExtendMng />;\r\n            case 'behavior-mng': return <FactDetBehiviorMng />;\r\n            case 'inherit-mng': return <EditorInheritConnMng />;\r\n            case 'connector': return <EditorInheritConnector />;\r\n            case 'inherit-logic': return <EditorLogicItem />;\r\n            case 'send-mng': return <EditorSendManager />;\r\n            case 'field-item':\r\n            case 'param-item':\r\n            case 'condition-item':\r\n            case 'send-item':\r\n            case 'seedsend-item': return <EditorParamItem />;\r\n            case 'interface-mng': return <EditorInterfaceManager />;\r\n            case 'sample-mng': return <EditorSampleMng />;\r\n            case 'sample-item': return <EditorSampleItem />;\r\n            case 'thumbnail-mng': return <EditorThumbnailMng />;\r\n            case 'thumbnail-item': return <EditorThumbnailItem />;\r\n            case 'seedarg-mng': return <EditorSeedArgMng />;\r\n            case 'seedarg-item': return <EditorSeedArgItem />;\r\n            case 'seedsend-mng': return <EditorSeedSendMng />;\r\n            case 'formgrp-item': return <EditorFormgrpItem />;\r\n            case 'formgrp-mng': return <EditorFormgrpMng />;\r\n        }\r\n    }\r\n\r\n    export const getChildrenElementNode = (node: TreeUtil.ElementNode): TreeUtil.ElementNode[] => {\r\n        const wrapNode = node.data as WrapElement;\r\n        const get = (listName: string) => {\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const elementNode = TreeUtil.createNode(wrap, node);\r\n                elementNode.children = getChildrenElementNode(elementNode);\r\n                return elementNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n\r\n    export const getChildrenDataNode = (wrapNode: LogicUtil.WrapElement): TreeUtil.DataNode[] => {\r\n        const get = (listName: string) => {\r\n\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const treeNode: TreeUtil.DataNode = {\r\n                    data: wrap,\r\n                    children: getChildrenDataNode(wrap)\r\n                };\r\n                return treeNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as LogicUtil.NodeRoot;\r\n                return [\r\n                    { data: node.seedMng, children: getChildrenDataNode(node.seedMng) },\r\n                    { data: node.logicMng, children: getChildrenDataNode(node.logicMng) }\r\n                ];\r\n            }\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n}\r\n\r\nexport default LogicUtil;\r\n\r\nconst _Category = styled.div<{\r\n    backgroundColor: string;\r\n    isDisable?: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: ${props => props.backgroundColor};\r\n    /* width: 100%; */\r\n    ${props => !(props.isDisable ?? false) ? '' : css`\r\n        text-decoration: line-through;\r\n        color: #00054dac;\r\n    `}\r\n    border-radius: 4px 0 0 4px;\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n    border: solid 1px #000000d2;\r\n`;\r\nconst _Detail = styled.span`\r\n    color: #000b69bd;\r\n`;\r\n\r\nconst _EditableValue = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #0c0c0c;\r\n    color: #ebebeb;\r\n    border-radius: 0 4px 4px 0;\r\n    /* width: 100%; */\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n`;\r\nconst _Span = styled.span<{\r\n    color: string;\r\n}>`\r\n    color: ${props => props.color};\r\n`;\r\nconst _ValueType = styled.span`\r\n    color: #fff9d6b9;\r\n`;\r\nconst _Signature = styled.span`\r\n    color: #ffffff78;\r\n`;\r\nconst _Field = styled.span`\r\n    color: #ff2d2d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../util/logicFormUtil\";\r\n\r\nconst EditorSampleItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [paramForms, setParamForms] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSampleItem;\r\n        setName({ ...name, value: param.name });\r\n        setParamForms(param.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のサンプル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const [seedargList, formgrpList]: [LogicUtil.NodeSeedArgItem[], LogicUtil.NodeFromGrpItem[]] = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'seedarg-mng');\r\n        const argInfoList = (argMng.data as LogicUtil.NodeSeedArgManager).\r\n            args.map(arg => {\r\n                return arg.data as LogicUtil.NodeSeedArgItem;\r\n            });\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        const formgrpMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'formgrp-mng');\r\n        if (formgrpMng != null) {\r\n            formgrpList = (formgrpMng.data as LogicUtil.NodeFromgrpManager).\r\n                defines.map(arg => {\r\n                    return arg.data as LogicUtil.NodeFromGrpItem;\r\n                });\r\n        }\r\n        return [argInfoList, formgrpList];\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setParamForms(seedargList.map(arg => {\r\n                let defval = '';\r\n                if (arg.defval != undefined) defval = arg.defval.toString();\r\n                return { value: defval, errors: [] };\r\n            }));\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const formList = useMemo(() => {\r\n        return LogicFormUtil.buildPreviewForms(\r\n            !isModify, seedargList, formgrpList, paramForms, setParamForms\r\n        );\r\n        // return paramForms.map((paramForm, i) => {\r\n        //     const arg = argInfoList[i];\r\n        //     return <FormUtil.FormRecord key={i}\r\n        //         titleLabel={arg.name}\r\n        //         jsx={\r\n        //             <FormUtil.TextField\r\n        //                 width={150}\r\n        //                 isReadOnly={!isModify}\r\n        //                 checkable={paramForm}\r\n        //                 setCheckable={(checkable) => {\r\n        //                     paramForms[i] = checkable;\r\n        //                     setParamForms(paramForms.slice());\r\n        //                 }}\r\n        //                 isNumber\r\n        //                 step={arg.step}\r\n        //                 validates={[\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkRequired(value),\r\n        //                         errorType: \"required\"\r\n        //                     },\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkNumberRange(value, arg.min, arg.max),\r\n        //                         errorType: \"value\"\r\n        //                     },\r\n        //                 ]}\r\n        //             />\r\n        //         }\r\n        //     />\r\n        // });\r\n    }, [paramForms, isModify]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name].concat(paramForms)}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSampleItem = {\r\n                    name: name.value,\r\n                    values: []\r\n                };\r\n                paramForms.forEach((form, i) => {\r\n                    element.values[i] = form.value;\r\n                });\r\n                wrap.data = element;\r\n\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSampleItem;\r\n                param.name = name.value;\r\n                paramForms.forEach((form, i) => {\r\n                    param.values[i] = form.value;\r\n                });\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {formList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'preset', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSampleMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Preset',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'sample-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSampleManager).samples.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleMng;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInterfaceManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const argMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedarg-mng');\r\n    const sendMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedsend-mng');\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(node.parent as TreeUtil.ElementNode, 'sample-mng');\r\n\r\n    const [hasGroupNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        return [\r\n            list.includes('formgrp-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const hasArgument = (): boolean => {\r\n        return argMngNode.children.length > 0;\r\n    }\r\n\r\n    /**\r\n     * グループ要素の有無を判定\r\n     */\r\n    const hasGroup = () => {\r\n        const groupMngNode = LogicElementUtil.getInnerNode(node, 'formgrp-mng');\r\n        if (groupMngNode == null) return false;\r\n        return groupMngNode.children.length > 0;\r\n    }\r\n\r\n    const execute = () => {\r\n        // const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n        // 既存の引数を削除\r\n        if (hasArgument()) {\r\n\r\n            LogicElementUtil.removeChildAll(argMngNode);\r\n            LogicElementUtil.removeChildAll(sampleMngNode);\r\n        }\r\n\r\n        sendMngNode.children.forEach(child => {\r\n            const send = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem;\r\n            send.formulaItems = ['var'];\r\n            send.values = [{ type: 'argument', value: send.name }];\r\n\r\n            const newArgData: LogicUtil.NodeSeedArgItem = {\r\n                name: send.name,\r\n                step: 1,\r\n                min: -9999,\r\n                max: 9999,\r\n                defval: 0\r\n            }\r\n            const newArgWrap: LogicUtil.WrapElement = {\r\n                type: 'seedarg-item',\r\n                data: newArgData\r\n            };\r\n            const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n            argMng.args.push(newArgWrap);\r\n            argMngNode.children.push(TreeUtil.createNode(newArgWrap, argMngNode));\r\n            invalidate();\r\n        });\r\n    }\r\n\r\n    const initDefaultSetting = () => {\r\n        if (!hasArgument()) {\r\n            execute();\r\n        } else {\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Are you sure you want to delete the existing element?\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        callback: () => {\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Execute',\r\n                        callback: () => {\r\n                            execute();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            setStore({ ...store });\r\n        }\r\n        invalidate();\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Group'}\r\n                        width={300}\r\n                        isUse={hasGroupNode}\r\n                        isEnable={!hasGroup()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasGroupNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'formgrp-mng',\r\n                                    data: {\r\n                                        defines: []\r\n                                    } as LogicUtil.NodeFromgrpManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Initialize Params',\r\n                        callback: initDefaultSetting\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInterfaceManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedArgMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seedarg-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedArgManager).args.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedArgMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorSeedArgItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [min, setMin] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [max, setMax] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [step, setStep] = useState<FormUtil.CheckableValue>({ value: '1', errors: [] });\r\n    const [defval, setDefval] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [isPosX, setPosX] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [isArray, setArray] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    const seedNode = node.parent?.parent?.parent as TreeUtil.ElementNode;\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setMin({ ...min, value: param.min.toString() });\r\n        setMax({ ...max, value: param.max.toString() });\r\n        setStep({ ...step, value: param.step.toString() });\r\n        setDefval({ ...defval, value: param.defval == undefined ? '' : param.defval.toString() });\r\n        setPosX({ ...isPosX, value: (param.isPosX ?? false) ? '1' : '' });\r\n        setArray({ ...isArray, value: (param.isArray ?? false) ? '1' : '' });\r\n        // setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, min, max, step, defval]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeSeedArgItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    min: Number(min.value),\r\n                    max: Number(max.value),\r\n                    step: Number(step.value),\r\n                    defval: defval.value === '' ? undefined : Number(defval.value),\r\n                    isPosX: isPosX.value === '' ? undefined : true,\r\n                    isArray: isArray.value === '' ? undefined : true,\r\n                    // valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                wrap.data = param;\r\n                syncArgumentAdd(seedNode as TreeUtil.ElementNode, param);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.min = Number(min.value === '' ? '0' : min.value);\r\n                param.max = Number(max.value === '' ? '0' : max.value);\r\n                param.step = Number(step.value === '' ? '0' : step.value);\r\n                param.defval = defval.value === '' ? undefined : Number(defval.value);\r\n                param.isPosX = isPosX.value === '' ? undefined : true;\r\n                // param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(seedNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 16),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Array\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={isArray}\r\n                            setCheckable={(checkable)=> {\r\n                                setArray(checkable);\r\n                                setMin({...min, value: ''});\r\n                                setMax({...max, value: ''});\r\n                                setStep({...step, value: ''});\r\n                                setDefval({...defval, value: ''});\r\n                                setPosX({...isPosX, value: ''});\r\n                            }}\r\n                            headBlank\r\n                            list={[\r\n                                { labelText: 'Yes', value: '1' }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Min\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            isEnabled={isArray.value === ''}\r\n                            checkable={min}\r\n                            setCheckable={setMin}\r\n                            isNumber\r\n                            dependency={[max]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) < Number(max.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Max\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            isEnabled={isArray.value === ''}\r\n                            checkable={max}\r\n                            setCheckable={setMax}\r\n                            isNumber\r\n                            dependency={[min]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) > Number(min.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Step\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            isEnabled={isArray.value === ''}\r\n                            checkable={step}\r\n                            setCheckable={setStep}\r\n                            isNumber\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Default\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            isEnabled={isArray.value === ''}\r\n                            checkable={defval}\r\n                            setCheckable={setDefval}\r\n                            isNumber\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Position\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            isEnabled={isArray.value === ''}\r\n                            checkable={isPosX}\r\n                            setCheckable={setPosX}\r\n                            headBlank\r\n                            list={[\r\n                                { labelText: 'Yes', value: '1' }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'color' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                /> */}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'argument', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                                const refers = getArgumentRefers(seedNode, param.name);\r\n                                if (refers.length === 0) {\r\n                                    const curIndex = LogicElementUtil.getCurrentIndex(node);\r\n                                    if (curIndex === -1) throw new Error('[curIndex] is -1.');\r\n                                    syncArgumentDel(seedNode, curIndex);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtonsCallback(node, invalidate, (index, isUpper) => {\r\n                    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n                    const offset = isUpper ? -1 : 1;\r\n                    sampleMng.samples.forEach(wrap => {\r\n                        const values = (wrap.data as LogicUtil.NodeSampleItem).values;\r\n                        const swapNode = values[index];\r\n                        values[index] = values[index + offset];\r\n                        values[index + offset] = swapNode;\r\n                    });\r\n                })}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (seedNode: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    const sendMng = sendMngWrap.data as LogicUtil.NodeSeedSendManager;\r\n    sendMng.params.forEach(wrap => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        param.values.forEach(varItem => {\r\n            if (varItem.type === 'argument' && varItem.value === argName) {\r\n                refers.push(param.name);\r\n            }\r\n        });\r\n    });\r\n    return refers;\r\n}\r\n\r\nexport default EditorSeedArgItem;\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param seedNode Seedノード\r\n*/\r\nconst syncArgumentName = (seedNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    syncFormula((sendMngWrap.data as LogicUtil.NodeParamManager).params);\r\n\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Sample管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentAdd = (seedNode: TreeUtil.ElementNode, arg: LogicUtil.NodeSeedArgItem) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.push((arg.defval ?? arg.min).toString());\r\n    });\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentDel = (seedNode: TreeUtil.ElementNode, delIndex: number) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.splice(delIndex, 1);\r\n    });\r\n}","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedSendMng = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const getSendParamList = (): string[] => {\r\n    //     const connector = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n    //     const isCreate = connector.method === 'create';\r\n    //     let targetWrap: LogicUtil.WrapElement | null = null;\r\n    //     if (!isCreate) {\r\n    //         const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n    //         const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n    //         const dependItem = inheritMng.defs.find(wrap => {\r\n    //             return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n    //         });\r\n    //         if (dependItem != undefined) targetWrap = dependItem;\r\n    //     } else {\r\n    //         targetWrap = (node.parent?.children[node.parent?.children.length - 1].data as LogicUtil.WrapElement)\r\n    //     }\r\n    //     if (targetWrap != null) {\r\n    //         const argWrap = (targetWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n    //         if (argWrap.type === 'argument-mng') {\r\n    //             return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n    //                 return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n    //             });\r\n    //         }\r\n    //     }\r\n    //     return [];\r\n    // }\r\n\r\n    // const update = () => {\r\n    //     const sendParamList = getSendParamList();\r\n    //     const curSize = node.children.length;\r\n    //     const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n    //     // 不要なパラメータを削除\r\n    //     for (let i = curSize - 1; i >= 0; i--) {\r\n    //         const name = (params[i].data as LogicUtil.NodeParamItem).name;\r\n    //         if (!sendParamList.includes(name)) {\r\n    //             node.children.splice(i, 1);\r\n    //             params.splice(i, 1);\r\n    //         }\r\n    //     }\r\n    //     // 必要な存在しないパラメータを追加\r\n    //     const curParamList = params.map(param => {\r\n    //         return (param.data as LogicUtil.NodeParamItem).name;\r\n    //     });\r\n    //     sendParamList.forEach(param => {\r\n    //         if (!curParamList.includes(param)) {\r\n    //             const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n    //                 { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n    //             );\r\n    //             params.push(paramWrap);\r\n    //             node.children.push(TreeUtil.createNode(paramWrap, node));\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    return (<>\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedSendMng;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorFormgrpItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [groupMethod, setGroupMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [targetList, setTargetList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n        setName({ ...name, value: param.name });\r\n        setGroupMethod({ ...groupMethod, value: param.method });\r\n        setTargetList(param.args.map(arg => {\r\n            return { value: arg, errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const seedargs = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed(node.parent?.parent?.data as LogicUtil.WrapElement, 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        return argMng.args.map(wrap => (wrap.data as LogicUtil.NodeSeedArgItem));\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, groupMethod].concat(targetList)}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeFromGrpItem = {\r\n                    name: name.value,\r\n                    method: groupMethod.value as LogicUtil.FromGrpMethod,\r\n                    args: targetList.map(form => form.value)\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n                param.name = name.value;\r\n                param.method = groupMethod.value as LogicUtil.FromGrpMethod;\r\n                param.args = targetList.map(form => form.value);\r\n                wrap.data = param;\r\n\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 24),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={groupMethod}\r\n                            setCheckable={(checkable) => {\r\n                                const type = checkable.value as LogicUtil.FromGrpMethod;\r\n                                if (type === 'color') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(3).fill({ value: '', errors: [] }));\r\n                                } else if (type === 'draw') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(2).fill({ value: '', errors: [] }));\r\n                                } else {\r\n                                    setTargetList([]);\r\n                                }\r\n                                setGroupMethod({ ...checkable });\r\n                            }}\r\n                            list={LogicUtil.FromGrpMedhods.map(type => {\r\n                                return { value: type, labelText: type }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n                {targetList.map((target, i) => {\r\n                    let formName = 'Target_';\r\n                    const method = groupMethod.value as LogicUtil.FromGrpMethod;\r\n                    if (method === 'color') {\r\n                        switch (i) {\r\n                            case 0: formName += 'R'; break;\r\n                            case 1: formName += 'G'; break;\r\n                            case 2: formName += 'B'; break;\r\n                        }\r\n                    } else if (method === 'draw') {\r\n                        switch (i) {\r\n                            case 0: formName += 'X'; break;\r\n                            case 1: formName += 'Y'; break;\r\n                        }\r\n                    } else {\r\n                        formName += `_${i}`;\r\n                    }\r\n                    return (\r\n                        <FormUtil.FormRecord\r\n                            key={i}\r\n                            titleLabel={formName}\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={target}\r\n                                    setCheckable={(checkable) => {\r\n                                        targetList[i] = checkable;\r\n                                        setTargetList(targetList.slice());\r\n                                    }}\r\n                                    list={seedargs\r\n                                        .filter(item => groupMethod.value === 'color' ? !item.isArray : item.isArray)\r\n                                        .map(item => {\r\n                                            return { value: item.name, labelText: item.name }\r\n                                        })}\r\n                                    headBlank\r\n                                    width={250}\r\n                                    isReadOnly={!isModify}\r\n                                    validates={\r\n                                        [\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            },\r\n                                            {\r\n                                                checker: (value) => targetList.find((target, j) => i !== j && target.value === value) == undefined,\r\n                                                errorType: \"relation\"\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                    dependency={targetList}\r\n                                />\r\n                            }\r\n                        />\r\n                    );\r\n                })}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: removeSelf\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFormgrpMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Group',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'formgrp-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeFromgrpManager).defines.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpMng;","import { assert } from \"console\";\r\nimport { Store } from \"../../../../redux/store/store\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../dialog/confirmDialog\";\r\nimport Particle from \"../../../graphic/particle\";\r\nimport StoryUtil from \"../../launcher/util/storyUtil\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport ParamUtil from \"./paramUtil\";\r\n\r\n\r\nnamespace LogicElementUtil {\r\n\r\n    export const getInnerNode = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode | null => {\r\n\r\n        let cur: TreeUtil.ElementNode | null = node;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const target = cur.children.find(child => (child.data as LogicUtil.WrapElement).type === type);\r\n            if (target == undefined) cur = null;\r\n            else cur = target;\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerNodeFixed = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode => {\r\n        const innerNode = getInnerNode(node, ...typeList);\r\n        if (innerNode == null) throw new Error('[innerNode] is null.');\r\n        return innerNode as TreeUtil.ElementNode;\r\n    }\r\n\r\n    export const getInnerWrap = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement | null => {\r\n\r\n        let cur: LogicUtil.WrapElement | null = wrap;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const listName = getListParamName(cur.type);\r\n            if (listName == null) cur = null;\r\n            else {\r\n                const list = cur.data[`${listName}`] as LogicUtil.WrapElement[];\r\n                const target = list.find(child => child.type === type);\r\n                if (target == undefined) cur = null;\r\n                else cur = target;\r\n            }\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerWrapFixed = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement => {\r\n        const innerWrap = getInnerWrap(wrap, ...typeList);\r\n        if (innerWrap == null) throw new Error('[innerWrap] is null.');\r\n        return innerWrap as LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const addChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode) => {\r\n        return insertChild(wrapElement, node, node.children.length);\r\n    }\r\n\r\n    export const insertChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode, listPos: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, 0, wrapElement);\r\n        const newNode = TreeUtil.createNode(wrapElement, node);\r\n        node.children.splice(listPos, 0, newNode);\r\n        return newNode;\r\n    }\r\n\r\n    export const removeChild = (node: TreeUtil.ElementNode, listPos: number, size: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, size);\r\n        node.children.splice(listPos, size);\r\n    }\r\n\r\n    export const removeChildAll = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].length = 0;\r\n        node.children.length = 0;\r\n    }\r\n\r\n    export const isHead = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[0] == node;\r\n    }\r\n\r\n    export const isTail = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[ownerChildren.length - 1] == node;\r\n    }\r\n\r\n    export const getCurrentIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(parentWrap.type);\r\n        if (listName == null || parentWrap.data == null) return -1;\r\n        const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n        const curIndex = list.findIndex(wrap => wrap == node.data);\r\n        return curIndex;\r\n    }\r\n\r\n    const swapOrder = (node: TreeUtil.ElementNode, offset: number) => {\r\n        if (node.parent == null) return;\r\n        const ownerChildren = node.parent.children;\r\n        const wrap = node.parent.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        const ownDataChildren = wrap.data[`${listName}`] as LogicUtil.WrapElement[];\r\n\r\n        let curNo = getCurrentIndex(node);\r\n        if (curNo === -1) return;\r\n\r\n        // ツリーノードの入れ替え\r\n        const swapNode = ownerChildren[curNo];\r\n        ownerChildren[curNo] = ownerChildren[curNo + offset];\r\n        ownerChildren[curNo + offset] = swapNode;\r\n        // データ要素の入れ替え\r\n        const swapData = ownDataChildren[curNo];\r\n        ownDataChildren[curNo] = ownDataChildren[curNo + offset];\r\n        ownDataChildren[curNo + offset] = swapData;\r\n    }\r\n\r\n    export const getSwapButtons = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        ...dependencyMngNodes: TreeUtil.ElementNode[]\r\n    ) => {\r\n        return getSwapButtonsCallback(node, invalidate, (curIndex, isUpper) => {\r\n            if (dependencyMngNodes.length > 0) {\r\n                dependencyMngNodes.forEach(depNode => {\r\n                    swapOrder(depNode.children[curIndex], isUpper ? -1 : 1);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    export const getSwapButtonsCallback = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        callback: (curIndex: number, isUpper: boolean) => void\r\n    ) => {\r\n        const curIndex = getCurrentIndex(node);\r\n        return <>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↑',\r\n                        isEnable: !LogicElementUtil.isHead(node),\r\n                        callback: () => {\r\n                            swapOrder(node, -1);\r\n                            callback(curIndex, true);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↓',\r\n                        isEnable: !LogicElementUtil.isTail(node),\r\n                        callback: () => {\r\n                            swapOrder(node, 1);\r\n                            callback(curIndex, false);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>;\r\n    }\r\n\r\n    /**\r\n     * 同レベル階層に自身ノードの複製を作成する\r\n     * @param node コピー対象のノード\r\n     * @param newName コピー後の名称\r\n     */\r\n    export const replicateSameLevel = (node: TreeUtil.ElementNode, newName: string) => {\r\n        if (node.parent == null) return;\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const cloneBase = wrap.data;\r\n        const cloneDest = JSON.parse(JSON.stringify((cloneBase)));\r\n\r\n        const newWrap: LogicUtil.WrapElement = {\r\n            type: wrap.type,\r\n            data: cloneDest\r\n        };\r\n        const namable = getNamableProps(wrap.type);\r\n        newWrap.data[namable] = newName;\r\n\r\n        // ロジックマネージャに追加\r\n        const newNode = LogicElementUtil.addChild(newWrap, node.parent);\r\n        // 子要素の展開\r\n        newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n    }\r\n\r\n    export const getReplicateButton = (\r\n        node: TreeUtil.ElementNode,\r\n        isEnable: boolean,\r\n        targetElement: string, store: Store,\r\n        setStore: (store: Store) => void,\r\n        invalidate: () => void\r\n    ): JSX.Element => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        return <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[{\r\n                label: 'Replicate',\r\n                isEnable,\r\n                // isEnable: false,\r\n                callback: () => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={`Replicate this ${targetElement}.`}\r\n                        buttons={[\r\n                            {\r\n                                label: 'Cancel',\r\n                                callback: () => {\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Enter',\r\n                                callback: () => {\r\n                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                    const name = wrap.data[namable] as string;\r\n                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                    // mappingForm();\r\n                                    invalidate();\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }\r\n            }]}\r\n        />;\r\n    }\r\n\r\n    export const getListParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return 'defs';\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            // case 'root':\r\n            case 'logic-item': return 'mngs';\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return 'params';\r\n            case 'inherit-mng': return 'inherits';\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return 'args';\r\n            case 'sample-mng': return 'samples';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'fields';\r\n            case 'thumbnail-mng': return 'items';\r\n            case 'formgrp-mng': return 'defines';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getIdentifyParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'argument-item':\r\n            case 'field-item':\r\n            case 'seed-item':\r\n            case 'thumbnail-item':\r\n            case 'seedarg-item':\r\n            case 'sample-item':\r\n            case 'formgrp-item':\r\n            case 'logic-item': return 'name';\r\n            case 'connector': return 'id';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getNamableProps = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'connector': return 'id';\r\n            case 'seed-item':\r\n            case 'argument-item':\r\n            case 'seedarg-item':\r\n            case 'field-item':\r\n            case 'sample-item':\r\n            case 'thumbnail-item':\r\n            case 'logic-item': return 'name';\r\n        }\r\n        throw new Error('Namable props not found.');\r\n    }\r\n\r\n    export const syncTreeElementFromWrap = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        if (listName == null) return;\r\n        (wrap.data[listName] as any[]).forEach(childWrap => {\r\n            const newNode = TreeUtil.createNode(childWrap, node);\r\n            node.children.push(newNode);\r\n            syncTreeElementFromWrap(newNode);\r\n        });\r\n    }\r\n\r\n    export const createParamWrap = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem): LogicUtil.WrapElement => {\r\n        return { type: type, data: paramDataList };\r\n    }\r\n    export const createParamWrapList = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem[]): LogicUtil.WrapElement[] => {\r\n        return paramDataList.map(data => {\r\n            return { type: type, data: data };\r\n        });\r\n    }\r\n\r\n    export const createVisualParams = (): LogicUtil.WrapElement[] => {\r\n        const type = ParamUtil.VisualParamType;\r\n        return createParamWrapList('param-item', [\r\n            { name: type.RADIUS, formulaItems: ['var'], values: [{ type: 'direct', value: '20' }] },\r\n            { name: type.COLOR_R, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_G, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_B, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_A, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n        ]);\r\n    }\r\n\r\n    export const createBehaviorParams = (): LogicUtil.WrapElement[] => {\r\n        const list: LogicUtil.NodeParamItem[] = [];\r\n        const type = ParamUtil.BehaviorParamType;\r\n        list.push({\r\n            name: type.LIMIT,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '30' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        return createParamWrapList('param-item', list);\r\n    }\r\n\r\n    export const getDefaultLogicMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'visual-mng',\r\n                data: {\r\n                    params: createVisualParams()\r\n                } as LogicUtil.NodeParamManager\r\n            },\r\n            {\r\n                type: 'behavior-mng',\r\n                data: {\r\n                    params: createBehaviorParams()\r\n                } as LogicUtil.NodeParamManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    export const getInitialData = (): LogicUtil.WrapElement => {\r\n        return {\r\n            type: 'root',\r\n            data: {\r\n                seedMng: {\r\n                    type: 'seed-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeSeedManager\r\n                } as LogicUtil.WrapElement,\r\n                logicMng: {\r\n                    type: 'logic-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeLogicManager\r\n                } as LogicUtil.WrapElement\r\n            } as LogicUtil.NodeRoot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 同階層の名前パラメータを持つ要素より、既存の名前一覧を取得する。\r\n     * @param node 現在のノード\r\n     * @returns 同階層の既存の名前一覧\r\n     */\r\n    export const getExistNameList = (node: TreeUtil.ElementNode) => {\r\n        const nameList: string[] = [];\r\n        const curWrap = node.data as LogicUtil.WrapElement;\r\n        const nameParam = getIdentifyParamName(curWrap.type);\r\n        const mngWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listParam = getListParamName(mngWrap.type);\r\n        if (listParam == null || nameParam == null) throw Error('List param or identifiy param not found.');\r\n        const list = mngWrap.data[listParam] as LogicUtil.WrapElement[];\r\n        list.forEach(wrap => {\r\n            if (wrap.data != null && curWrap != wrap) {\r\n                nameList.push(wrap.data[nameParam]);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getLogicNameList = (mng: LogicUtil.NodeLogicManager) => {\r\n        const nameList: string[] = [];\r\n        mng.defs.forEach(logic => {\r\n            if (logic.data != null) {\r\n                nameList.push((logic.data as LogicUtil.NodeLogicItem).name);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getParamNameList = (curLogicOwner: LogicUtil.NodeLogicItem) => {\r\n        const nameList: string[] = [];\r\n\r\n        // システム固有のパラメータ名を取得\r\n        ParamUtil.VisualParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.BehaviorParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.SelfParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ExtendParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.EffectParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ModulateParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.Constants.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n\r\n        // 引数のパラメータ名を取得\r\n        const argMng = curLogicOwner.mngs.find(mng => mng.type === 'argument-mng');\r\n        if (argMng != undefined) {\r\n            const args = (argMng.data as LogicUtil.NodeArgumentManager).args;\r\n            args.forEach(arg => {\r\n                if (arg.data != null) {\r\n                    nameList.push((arg.data as LogicUtil.NodeArgumentItem).name);\r\n                }\r\n            });\r\n        }\r\n        // フィールドのパラメータ名を取得\r\n        const fieldMng = curLogicOwner.mngs.find(mng => mng.type === 'field-mng');\r\n        if (fieldMng != undefined) {\r\n            const fields = (fieldMng.data as LogicUtil.NodeFieldManager).fields;\r\n            fields.forEach(field => {\r\n                if (field.data != null) {\r\n                    nameList.push((field.data as LogicUtil.NodeParamItem).name);\r\n                }\r\n            });\r\n        }\r\n        return nameList;\r\n    }\r\n\r\n    /**\r\n     * 子要素の接頭連番をチェックし、重複しない名称を返す。\r\n     * @param prefix 接頭語\r\n     * @param node 基準となるノード\r\n     */\r\n    export const getNumberingOnPrefixName = (prefix: string, node: TreeUtil.ElementNode) => {\r\n        let num = 0;\r\n        // 接頭番号を取得\r\n        while (true) {\r\n            const check = node.children.find(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                if (wrap.data == null) return false;\r\n                console.log(wrap);\r\n                return wrap.data[getNamableProps(wrap.type)] === `${prefix}${num}`;\r\n            });\r\n            if (check != undefined) num++;\r\n            else break;\r\n        }\r\n        return `${prefix}${num}`;\r\n    }\r\n\r\n    /**\r\n     * パラメータの式で参照されている変数を検索し、\r\n     * 任意の処理（callback）を実行する。\r\n     * @param node 現在のノード\r\n     * @param callback 処理\r\n     */\r\n    export const searchVariableReferInFormula = (node: TreeUtil.ElementNode, callback: Function) => {\r\n\r\n        const mngType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const getLogicItem = () => {\r\n            switch (mngType) {\r\n                case 'field-mng':\r\n                case 'argument-mng': return node.parent?.parent?.data as LogicUtil.WrapElement;\r\n                case 'inhfld-mng': return node.parent?.parent?.parent?.parent?.data as LogicUtil.WrapElement;\r\n            }\r\n        }\r\n        const logicItem = getLogicItem()?.data as LogicUtil.NodeLogicItem;\r\n        if (mngType === 'argument-mng') {\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (fieldMng != undefined) {\r\n                callback((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n        }\r\n        if (mngType !== 'inhfld-mng') {\r\n            const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n            if (visualMng != undefined) {\r\n                callback((visualMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n            const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n            if (behaviorMng != undefined) {\r\n                callback((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n        }\r\n        const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                if (mngType !== 'inhfld-mng') {\r\n                    const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                    // Inherit配下のField要素のチェック\r\n                    if (inhfld != null) {\r\n                        callback((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                    }\r\n                }\r\n                // Extend要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    }\r\n\r\n    export const findSeedWrap = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const root = rootData.data as LogicUtil.NodeRoot;\r\n        const seed = (root.seedMng.data as LogicUtil.NodeSeedManager).defs.find(def => {\r\n            const seedItem = def.data as LogicUtil.NodeSeedItem;\r\n            return seedItem.name === seedId;\r\n        });\r\n        if (seed == undefined) throw new Error();\r\n        return seed;\r\n    }\r\n\r\n    export const doParticleJob = (rootData: LogicUtil.WrapElement, fuse: StoryUtil.Fuse, owner: Particle.Instance[]) => {\r\n        const seedWrap = findSeedWrap(rootData, fuse.seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        const getSendingValueMap = () => {\r\n            const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const valueMapList: PreviewUtil.ValueMap[] = [];\r\n            seedargMng.args.forEach((wrap, i) => {\r\n                const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                if (!seedarg.isArray) {\r\n                    valueMapList.push({ name: seedarg.name, value: Number(fuse.values[i]) })\r\n                }\r\n            });\r\n\r\n            // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n            return sendParams\r\n                .filter(item => !item.isArray)\r\n                .map(item => {\r\n                    const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMapList);\r\n                    if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                    return { name: item.name, value };\r\n                });\r\n        }\r\n\r\n        const getSendingArrayMap = () => {\r\n            const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const arrayMapList: PreviewUtil.ArrayMap[] = [];\r\n            seedargMng.args.forEach((wrap, i) => {\r\n                const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                if (seedarg.isArray) {\r\n                    arrayMapList.push({ name: seedarg.name, array: fuse.values[i].split(',').map(v => Number(v)) })\r\n                }\r\n            });\r\n\r\n            // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n            return sendParams\r\n                .filter(item => item.isArray)\r\n                .map(item => {\r\n                    const array = PreviewUtil.convertParamsToArray(item.name, sendParams, arrayMapList);\r\n                    if (array == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                    return { name: item.name, array: array };\r\n                });\r\n        }\r\n\r\n        owner.push(new Particle.Instance(\r\n            PreviewUtil.buildLogicProps(owner, getOrigin(), rootData, getSendingValueMap(), getSendingArrayMap())\r\n        ));\r\n    }\r\n\r\n    export type SeedProps = {\r\n        seed: LogicUtil.NodeSeedItem;\r\n        logic: LogicUtil.NodeLogicItem;\r\n        seedargList: LogicUtil.NodeSeedArgItem[];\r\n        seedsendList: LogicUtil.NodeParamItem[];\r\n        thumbnailList: LogicUtil.NodeThumbnailItem[];\r\n    }\r\n    export const getSeedProperties = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const seedWrap = findSeedWrap(rootData, seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n        const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        const seedargList = seedargMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n        const seedsendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n        const seedsendList = seedsendMng.params.map(wrap => wrap.data as LogicUtil.NodeParamItem);\r\n        const thumbnailMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'thumbnail-mng').data as LogicUtil.NodeThumnailManager;\r\n        const thumbnailList = thumbnailMng.items.map(wrap => wrap.data as LogicUtil.NodeThumbnailItem);\r\n\r\n        return {\r\n            seed, logic: getOrigin(), seedargList, seedsendList, thumbnailList\r\n        }\r\n    }\r\n}\r\n\r\nexport default LogicElementUtil;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\n\r\nnamespace PreviewLauncherFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        sceens: string[];\r\n        frameCnt: number;\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const sceens = props.sceens;\r\n        const frameCnt = props.frameCnt;\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                        } break;\r\n                        case 'ArrowRight': {\r\n                            if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                        } break;\r\n                        case ' ': {\r\n                            setPlay(!isPlay);\r\n                        } break;\r\n                    }\r\n                    if (e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }}\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Play', enable: true, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                        if (props.closeAction != undefined) {\r\n                            props.closeAction();\r\n                        }\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLauncherFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #aed5d8e0;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;","import { useState, useMemo, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewLogicInputForm = (props: {\r\n    logicWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n    setSendingArrayMap: (sendingArrayMap: (() => PreviewUtil.ArrayMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const argumentList: LogicUtil.NodeArgumentItem[] = useMemo(() => {\r\n        let list: LogicUtil.NodeArgumentItem[] = [];\r\n        const argWrap = LogicElementUtil.getInnerWrap(props.logicWrap, 'argument-mng');\r\n        if (argWrap != null) {\r\n            list = (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                const argItem = arg.data as LogicUtil.NodeArgumentItem;\r\n                return argItem;\r\n            });\r\n        }\r\n        return list;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFormList(argumentList.map(arg => {\r\n            return { value: '', errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const isFormInputOK = formList.find(form => form.errors.length > 0) == undefined;\r\n        if (isFormInputOK) {\r\n            props.setSendingValueMap(() => {\r\n                return formList\r\n                    .filter((form, i) => {\r\n                        return argumentList[i].valueType === 'number';\r\n                    })\r\n                    .map((form, i) => {\r\n                        const argument = argumentList[i];\r\n                        return { name: argument.name, value: Number(form.value) } as PreviewUtil.ValueMap\r\n                    });\r\n            });\r\n            props.setSendingArrayMap(() => {\r\n                return formList\r\n                    .filter((form, i) => {\r\n                        return argumentList[i].valueType === 'array';\r\n                    })\r\n                    .map((form, i) => {\r\n                        const argument = argumentList[i];\r\n                        const array = form.value.split(',').map(v => Number(v));\r\n                        return { name: argument.name, array } as PreviewUtil.ArrayMap\r\n                    });\r\n            });\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n            props.setSendingArrayMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return <>{\r\n        formList.map((form, i) => {\r\n            const argument = argumentList[i];\r\n\r\n            const validates: ValidateUtil.Validate[] = [];\r\n            let isNumber = false;\r\n            if (argument.valueType === 'number') {\r\n                validates.push({\r\n                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                    errorType: \"required\"\r\n                });\r\n                isNumber = true;\r\n            } else {\r\n                validates.push({\r\n                    checker: (value) => ValidateUtil.checkArrayNumber(value),\r\n                    errorType: \"value\"\r\n                });\r\n            }\r\n            return (<FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={argument.name}\r\n                labelWidth={250}\r\n                jsx={\r\n                    <FormUtil.TextField\r\n                        width={312}\r\n                        isNumber={isNumber}\r\n                        checkable={form}\r\n                        setCheckable={() => {\r\n                            setFormList(formList.slice());\r\n                        }}\r\n                        validates={validates}\r\n                    />\r\n                }\r\n            />);\r\n        })\r\n    }</>\r\n}\r\n\r\nexport default PreviewLogicInputForm;","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../factory/util/logicFormUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewSeedInputForm = (props: {\r\n    seedWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n    setSendingArrayMap: (sendingArrayMap: (() => PreviewUtil.ArrayMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [formgrpList, seedargList, presetList]: [LogicUtil.NodeFromGrpItem[], LogicUtil.NodeSeedArgItem[], LogicUtil.NodeSampleItem[]] = useMemo(() => {\r\n        const formgrpWrap = LogicElementUtil.getInnerWrap(props.seedWrap, 'interface-mng', 'formgrp-mng');\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        if (formgrpWrap != null) {\r\n            formgrpList = (formgrpWrap.data as LogicUtil.NodeFromgrpManager).defines.map(def => def.data as LogicUtil.NodeFromGrpItem);\r\n        }\r\n\r\n        const argWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedarg-mng');\r\n        const seedargList = (argWrap.data as LogicUtil.NodeSeedArgManager).args.map(arg => arg.data as LogicUtil.NodeSeedArgItem);\r\n\r\n        const sampleWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'sample-mng');\r\n        const sampleList = (sampleWrap.data as LogicUtil.NodeSampleManager).samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n        return [formgrpList, seedargList, sampleList];\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        setFormList(seedargList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (formList.find(form => form.errors.length > 0) == undefined) {\r\n            props.setSendingValueMap(() => {\r\n                const valueMap: PreviewUtil.ValueMap[] = [];\r\n                formList.forEach((form, i) => {\r\n                    const seedarg = seedargList[i];\r\n                    if (!seedarg.isArray) {\r\n                        valueMap.push({ name: seedarg.name, value: Number(form.value) });\r\n                    }\r\n                });\r\n\r\n                // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                const sendMng = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                return sendParams\r\n                    .filter((item, i) => {\r\n                        return !item.isArray;\r\n                    })\r\n                    .map(item => {\r\n                        const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                        if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                        return { name: item.name, value };\r\n                    });\r\n            });\r\n            props.setSendingArrayMap(() => {\r\n                const arrayMap: PreviewUtil.ArrayMap[] = [];\r\n                formList.forEach((form, i) => {\r\n                    const seedarg = seedargList[i];\r\n                    if (seedarg.isArray) {\r\n                        const array = (form.value === '' ? [] : form.value.split(',').map(v => Number(v)));\r\n                        arrayMap.push({ name: seedarg.name, array });\r\n                    }\r\n                });\r\n\r\n                // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                const sendMng = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                return sendParams\r\n                    .filter((item, i) => {\r\n                        return item.isArray;\r\n                    })\r\n                    .map(item => {\r\n                        console.log(arrayMap);\r\n                        const array = PreviewUtil.convertParamsToArray(item.name, sendParams, arrayMap);\r\n                        if (array == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                        return { name: item.name, array };\r\n                    });\r\n            });\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n            props.setSendingArrayMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"Preset\"\r\n            innerJsx={<FormUtil.Record\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        width={402}\r\n                        checkable={template}\r\n                        setCheckable={setTemplate}\r\n                        headBlank\r\n                        list={presetList.map((sample, i) => {\r\n                            return {\r\n                                labelText: sample.name,\r\n                                value: i.toString()\r\n                            }\r\n                        })}\r\n                    />\r\n                    <FormUtil.ButtonItem\r\n                        button={{\r\n                            label: 'Apply',\r\n                            isEnable: template.value !== '',\r\n                            callback: () => {\r\n                                const selectedIndex = Number(template.value);\r\n                                const values = presetList[selectedIndex].values;\r\n                                values.forEach((value, i) => {\r\n                                    formList[i].value = value.toString();\r\n                                });\r\n                                setFormList(formList.slice());\r\n                            }\r\n                        }}\r\n                    />\r\n                </>}\r\n            />}\r\n        />\r\n        {LogicFormUtil.buildPreviewForms(\r\n            false, seedargList, formgrpList, formList, setFormList\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default PreviewSeedInputForm;","import { useContext, useEffect, useState } from \"react\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryUtil from \"../launcher/util/storyUtil\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport styled, { css } from \"styled-components\";\r\nimport PreviewLauncherFrame from \"./previewLauncherFrame\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nnamespace BuildUtil {\r\n\r\n    export type RunParticleProps = {\r\n        /** フレームの上限（過ぎると停止） */\r\n        limitFrame: number,\r\n        /** パーティクル数の上限（超えると停止） */\r\n        limitParticle: number,\r\n        /** 最低保証フレーム */\r\n        guaranteeFrame?: number,\r\n        /** 1フレーム経過ごとに実行する処理のコールバック */\r\n        doIterate: (frame: number, owner: Particle.Instance[]) => void,\r\n        /** 最終フレーム（ループから抜けた直後）に実行する処理のコールバック */\r\n        doEnd?: (frame: number, owner: Particle.Instance[]) => void\r\n    };\r\n\r\n    export type DivideProps = {\r\n        num: number;\r\n        standbyEvent: () => void;\r\n        countUpEvent: () => void;\r\n    }\r\n\r\n    export const run = (props: RunParticleProps) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        const owner: Particle.Instance[] = [];\r\n        let frame = 0;\r\n\r\n        while (true) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frame > props.limitFrame ||\r\n                owner.length > props.limitParticle ||\r\n                frame > minFrame && owner.length === 0\r\n            ) break;\r\n            frame++;\r\n        };\r\n\r\n        if (props.doEnd != undefined) {\r\n            props.doEnd(frame, owner);\r\n        }\r\n    }\r\n\r\n    export const runPaging = (props: RunParticleProps, owner: Particle.Instance[], beginFrame: number, advanceFrame: number) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        // const owner: Particle.Instance[] = [];\r\n\r\n        let frame = beginFrame;\r\n        while (frame - beginFrame < advanceFrame) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            // if (frame > props.limitFrame ||\r\n            //     owner.length > props.limitParticle ||\r\n            //     frame > minFrame && owner.length === 0\r\n            // ) {\r\n            //     if (props.doEnd != undefined) {\r\n            //         props.doEnd(frame, owner);\r\n            //     }\r\n            //     break;\r\n            // }\r\n            frame++;\r\n        };\r\n    }\r\n\r\n    const PROGRESS_VAL = 1;\r\n\r\n    type StoryPreviewProps = {\r\n        sceens: string[];\r\n        useFrame: number;\r\n    }\r\n\r\n    export type PagingField = {\r\n        useFrame: number;\r\n        curFrame: number;\r\n        sceens: string[];\r\n        owner: Particle.Instance[];\r\n    }\r\n\r\n    export const BuildFrame = (props: {\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n        const [storyPreviewProps, setStoryPreviewProps] = useState<StoryPreviewProps | null>(null);\r\n        const [buildCache, setBuildCache] = useState<PagingField>({\r\n            useFrame: 0,\r\n            curFrame: 0,\r\n            owner: [],\r\n            sceens: []\r\n        });\r\n\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n        useEffect(() => {\r\n            // プログレスバーが100％になったら処理される\r\n            if (buildCache.useFrame != 0 && buildCache.curFrame == buildCache.useFrame) {\r\n                setStoryPreviewProps({\r\n                    sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                });\r\n                return;\r\n            }\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const minFrame = fuseList[0].frame;\r\n\r\n            if (buildCache.useFrame === 0) {\r\n                BuildUtil.run({\r\n                    limitFrame,\r\n                    limitParticle,\r\n                    guaranteeFrame: minFrame,\r\n                    doIterate: (frame, owner) => {\r\n                        fuseList.some(fuse => {\r\n                            if (fuse.frame === frame) {\r\n                                LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                            } else if (fuse.frame > frame) return 1;\r\n                        });\r\n                    },\r\n                    doEnd: (frame) => {\r\n                        buildCache.useFrame = frame;\r\n                    }\r\n                });\r\n                setBuildCache({ ...buildCache });\r\n            } else {\r\n                runPaging({\r\n                    limitFrame,\r\n                    limitParticle,\r\n                    guaranteeFrame: minFrame,\r\n                    doIterate: (frame, owner) => {\r\n\r\n                        fuseList.some(fuse => {\r\n                            if (fuse.frame === frame) {\r\n                                LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                            } else if (fuse.frame > frame) return 1;\r\n                        });\r\n\r\n                        buildCache.sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                            // パーティクルの描画\r\n                            owner.forEach(par => {\r\n                                par.draw(ctx);\r\n                            });\r\n                            ctx.save();\r\n                        }));\r\n                    },\r\n                    // doEnd: () => {\r\n                    //     setStoryPreviewProps({\r\n                    //         sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                    //     });\r\n                    // }\r\n                }, buildCache.owner, buildCache.curFrame, PROGRESS_VAL);\r\n                buildCache.curFrame += PROGRESS_VAL;\r\n                if (buildCache.curFrame > buildCache.useFrame) {\r\n                    buildCache.curFrame = buildCache.useFrame;\r\n                }\r\n                setBuildCache({ ...buildCache });\r\n            }\r\n        }, [buildCache]);\r\n\r\n        useEffect(() => {\r\n            if (storyPreviewProps != null) {\r\n                store.system.dialog = <PreviewLauncherFrame.Component\r\n                    sceens={storyPreviewProps.sceens}\r\n                    frameCnt={storyPreviewProps.useFrame}\r\n                    closeAction={props.closeAction}\r\n                />;\r\n                dispatcher.updateStore();\r\n            }\r\n        }, [storyPreviewProps]);\r\n\r\n\r\n        const getJsx = () => {\r\n            if (storyPreviewProps == null) {\r\n                if (buildCache == null) return <></>;\r\n                const rate = buildCache.curFrame / buildCache.useFrame * 100;\r\n                const isStandby = buildCache.useFrame === 0;\r\n                return (\r\n                    <_Blind>\r\n                        <_ProgressBox><_ProgressVal rate={rate} /></_ProgressBox>\r\n                        <_RateVal isStandby={isStandby}>{isStandby ? 'Calculating...' : `${Math.floor(rate)}%`}</_RateVal>\r\n                    </_Blind>\r\n                );\r\n            }\r\n            return <></>;\r\n        }\r\n\r\n        return getJsx();\r\n    }\r\n}\r\n\r\nexport default BuildUtil;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #002910c0;\r\n    z-index: 10;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _ProgressBox = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relaltive;\r\n    width: calc(100% - 20px);\r\n    height: 40px;\r\n    margin: 200px 0 0 10px;\r\n    background-color: #ffffff29;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    background-color: #ffffffc1;\r\n`;\r\n\r\nconst _RateVal = styled.div<{\r\n    isStandby: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #0000003b;\r\n\r\n    color: #ffffff;\r\n    ${props => !props.isStandby ? '' : css`\r\n        color: #f50000;\r\n    `}\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ReactLoading from 'react-loading';\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport PreviewLogicInputForm from \"./inputForm/previewLogicInputForm\";\r\nimport PreviewSeedInputForm from \"./inputForm/previewSeedInputForm\";\r\nimport BuildUtil from \"./buildUtil\";\r\n\r\nnamespace PreviewLogicFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        master: LogicUtil.WrapElement;\r\n        rootData: LogicUtil.WrapElement;\r\n        closeButtonAction: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n\r\n        const [sceens, setSceens] = useState<string[]>([]);\r\n        const [frameCnt, setFrameCnt] = useState<number>(-1);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isBuild, setBuild] = useState<boolean>(false);\r\n        const [progress, setProgress] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const [sendingValueMap, setSendingValueMap] = useState<((() => PreviewUtil.ValueMap[]) | null)>(null);\r\n        const [sendingArrayMap, setSendingArrayMap] = useState<((() => PreviewUtil.ArrayMap[]) | null)>(null);\r\n\r\n        const isSeed = props.master.type === 'seed-item';\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n        useEffect(() => {\r\n            if (isBuild) build();\r\n        }, [isBuild]);\r\n\r\n        const build = () => {\r\n            if (sendingValueMap == null) return;\r\n            setCur(0);\r\n            const sceens: string[] = [];\r\n            BuildUtil.run({\r\n                limitFrame: 500,\r\n                limitParticle: 3000,\r\n                doIterate: (frame, owner) => {\r\n                    if (frame === 0) {\r\n                        const getOrigin = () => {\r\n                            if (!isSeed) return props.master.data as LogicUtil.NodeLogicItem;\r\n                            else {\r\n                                const seed = props.master.data as LogicUtil.NodeSeedItem;\r\n                                const root = props.rootData.data as LogicUtil.NodeRoot;\r\n                                const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                                return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                            }\r\n                        }\r\n                        owner.push(new Particle.Instance(\r\n                            PreviewUtil.buildLogicProps(owner, getOrigin(), props.rootData, sendingValueMap as any, sendingArrayMap as any)\r\n                        ));\r\n                    }\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n\r\n                        // 経過フレーム、要素数の表示\r\n                        ctx.globalAlpha = 1;\r\n                        ctx.font = '16pt Arial';\r\n                        ctx.fillStyle = '#ffffff';\r\n                        ctx.fillText(`${frame}`, 6, 24);\r\n                        ctx.fillStyle = '#ffec5c';\r\n                        ctx.fillText(`${owner.length}`, 6, 44);\r\n\r\n                        // ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    setFrameCnt(frame);\r\n                    setSceens(sceens);\r\n\r\n                    setBuild(false);\r\n                    setTabIndex(1);\r\n                }\r\n            });\r\n        }\r\n\r\n        const isInputOK = sendingValueMap != null;\r\n\r\n        const buildTabJsx = (\r\n            <_Wrap>\r\n                <_Blind isEnable={isBuild}>\r\n                    {/* <ReactLoading type='spinningBubbles' /> */}\r\n                    <_Msg>Now building...</_Msg>\r\n                </_Blind>\r\n                <_FormDiv\r\n                    isSeed={props.master.type === 'seed-item'}\r\n                >\r\n                    {!isSeed ? (\r\n                        <PreviewLogicInputForm\r\n                            logicWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                            setSendingArrayMap={setSendingArrayMap}\r\n                        />\r\n                    ) : (\r\n                        <PreviewSeedInputForm\r\n                            seedWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                            setSendingArrayMap={setSendingArrayMap}\r\n                        />\r\n                    )}\r\n                </_FormDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Build',\r\n                            isEnable: isInputOK && !isBuild,\r\n                            callback: () => {\r\n                                setBuild(true);\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    if (tabIndex === 0) {\r\n                        if (isInputOK && e.key === ' ') build();\r\n                    } else {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                            } break;\r\n                            case 'ArrowRight': {\r\n                                if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                            } break;\r\n                            case ' ': {\r\n                                setPlay(!isPlay);\r\n                            } break;\r\n                        }\r\n                    }\r\n                    if (!isPlay && e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }\r\n                }\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Build', enable: true, cont: buildTabJsx },\r\n                            { name: 'Play', enable: frameCnt !== -1, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={props.closeButtonAction}\r\n                >×</_CloseButton>\r\n            </_Frame >\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLogicFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _FormDiv = styled.div<{\r\n    isSeed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 580px;\r\n    background-color: #c5cfd6df;\r\n    ${props => !props.isSeed ? '' : css`\r\n        background-color: #c6d6c5df;\r\n    `}\r\n    overflow-y: auto;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #c5c5c5df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;\r\n\r\n\r\nconst _Blind = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: ${props => !props.isEnable ? 'none;' : 'inline-block;'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000552cd;\r\n    z-index: 99;\r\n`;\r\n\r\nconst _Msg = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    margin: 240px 0 0 110px;\r\n    /* background-color: #26f055cd; */\r\n    color: white;\r\n    font-size: 56px;\r\n    font-weight: 600;\r\n\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport assert from \"assert\";\r\n\r\nnamespace NameDefDialog {\r\n\r\n    export const Component = (props: {\r\n        targetSeq: number,\r\n        type?: ProjectType,\r\n        source?: string,\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const width = 500;\r\n        const height = 150;\r\n\r\n        const isCreate = props.targetSeq === -1;\r\n        const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n        const getDefaultName = () => {\r\n            return props.targetSeq === -1 ? '' : (projects.find(p => p.seq === props.targetSeq) as StoreCloud.Project).name;\r\n        }\r\n\r\n        useEffect(() => {\r\n            name.value = getDefaultName();\r\n            setName({ ...name });\r\n        }, []);\r\n\r\n        const [existNames] = useMemo(() => {\r\n            return [\r\n                projects.map(item => item.name)\r\n            ];\r\n        }, []);\r\n\r\n        const registCreate = () => {\r\n            if(props.type == undefined || props.source == undefined) throw assert;\r\n            const result = findProjectMaxSeq();\r\n            result.then((maxSeq) => {\r\n                const newProject: StoreCloud.Project = {\r\n                    seq: Number(maxSeq + 1),\r\n                    name: name.value,\r\n                    type: props.type as ProjectType,\r\n                    source: props.source as string,\r\n                    lastmod: ''\r\n                };\r\n                projects.push(newProject);\r\n                insertProject(store.system.user?.seq as number, newProject).then(() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            });\r\n        }\r\n\r\n        const registUpdate = () => {\r\n            const targetItem = projects.find(item => item.seq === props.targetSeq);\r\n            if (targetItem != undefined) {\r\n                updateProjectName(props.targetSeq, name.value).then(() => {\r\n                    targetItem.name = name.value;\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            }\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: isCreate ? 'Create' : 'Update',\r\n                isEnable: name.errors.length === 0,\r\n                callback: () => {\r\n                    if (isCreate) registCreate();\r\n                    else registUpdate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, input new name!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => LogicUtil.checkFieldName(value),\r\n                                //     errorType: \"value\"\r\n                                // },\r\n                                {\r\n                                    checker: (value) => !existNames.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NameDefDialog;\r\n\r\nconst findProjectMaxSeq = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT max(seq) m FROM prjcttbl`);\r\n    const results = await response.json();\r\n    return results[0].m;\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, type, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.type}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import DataUtil from \"../utils/dataUtil\";\r\nimport PreviewLogicFrame from \"../contents/create/preview/previewLogicFrame\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport LogicElementUtil from \"../contents/create/factory/util/logicElementUtil\";\r\nimport styled, { css } from \"styled-components\";\r\nimport StoryUtil from \"../contents/create/launcher/util/storyUtil\";\r\nimport FormUtil from \"../utils/form/formUtiil\";\r\nimport CanvasUtil from \"../utils/canvasUtil\";\r\nimport PreviewLauncherFrame from \"../contents/create/preview/previewLauncherFrame\";\r\nimport BuildUtil from \"../contents/create/preview/buildUtil\";\r\nimport Particle from \"../contents/graphic/particle\";\r\nimport { VscSettingsGear } from \"react-icons/vsc\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    seedList: SeedProps[];\r\n}\r\ntype StoryProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    libraryData: LogicUtil.WrapElement;\r\n    scenarioData: StoryUtil.StoryData;\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\ntype StoryPreviewProps = {\r\n    sceens: string[];\r\n    useFrame: number;\r\n}\r\n\r\nexport type PagingField = {\r\n    useFrame: number;\r\n    curFrame: number;\r\n    sceens: string[];\r\n    owner: Particle.Instance[];\r\n}\r\n\r\nconst PROGRESS_VAL = 1;\r\n\r\nconst DirectLinkManager = (props: {\r\n    projectSeq: number;\r\n}) => {\r\n    const [libData, setLibData] = useState<LibProps | null>(null);\r\n    const [storyData, setStoryData] = useState<StoryProps | null>(null);\r\n    const [storyPreviewProps, setStoryPreviewProps] = useState<StoryPreviewProps | null>(null);\r\n    const [buildCache, setBuildCache] = useState<null | PagingField>(null);\r\n\r\n    const [seedSeq, setSeedSeq] = useState(-1);\r\n\r\n    useEffect(() => {\r\n\r\n        findProject(props.projectSeq).then(resList => {\r\n            if (resList.length > 0) {\r\n                const res = resList[0];\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const data = JSON.parse(DataUtil.unZip(res.source));\r\n                // シナリオであるかどうかの判定\r\n                if (!data.hasOwnProperty('scenarioData')) {\r\n                    const rootData = data as LogicUtil.WrapElement;\r\n                    const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                    const seedList: SeedProps[] = seedMng.defs\r\n                        .filter(wrap => {\r\n                            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                            return seed.permit === 'release';\r\n                        })\r\n                        .map(wrap => {\r\n                            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                            const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                            return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                        });\r\n                    setLibData({\r\n                        name, ownerId, lastmod, rootData, seedList\r\n                    });\r\n                } else {\r\n                    const scenarioProps = data as StoryUtil.ScenarioFileProps;\r\n                    setStoryData({\r\n                        name, ownerId, lastmod, libraryData: scenarioProps.libraryData, scenarioData: scenarioProps.scenarioData\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (buildCache == null || storyData == null) return;\r\n        if (buildCache.useFrame != 0 && buildCache.curFrame == buildCache.useFrame) {\r\n            setStoryPreviewProps({\r\n                sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n            });\r\n            return;\r\n        }\r\n\r\n        const fuseList = storyData.scenarioData.fuseList;\r\n        const limitFrame = storyData.scenarioData.limitFrame;\r\n        const limitParticle = storyData.scenarioData.limitParticle;\r\n        const minFrame = fuseList[0].frame;\r\n        const logicData = storyData.libraryData;\r\n        if (buildCache.useFrame === 0) {\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n                    fuseList.some(fuse => {\r\n                        if (fuse.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                        } else if (fuse.frame > frame) return 1;\r\n                    });\r\n                },\r\n                doEnd: (frame) => {\r\n                    buildCache.useFrame = frame;\r\n                }\r\n            });\r\n            setBuildCache({ ...buildCache });\r\n        } else {\r\n\r\n            BuildUtil.runPaging({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    fuseList.some(fuse => {\r\n                        if (fuse.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                        } else if (fuse.frame > frame) return 1;\r\n                    });\r\n\r\n                    buildCache.sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                // doEnd: () => {\r\n                //     setStoryPreviewProps({\r\n                //         sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                //     });\r\n                // }\r\n            }, buildCache.owner, buildCache.curFrame, PROGRESS_VAL);\r\n            buildCache.curFrame += PROGRESS_VAL;\r\n            if (buildCache.curFrame > buildCache.useFrame) {\r\n                buildCache.curFrame = buildCache.useFrame;\r\n            }\r\n            setBuildCache({ ...buildCache });\r\n        }\r\n    }, [buildCache]);\r\n\r\n    /**\r\n     * プレビューオールダイアログを表示する\r\n     */\r\n    const openPreviewAllDialog = () => {\r\n        setBuildCache({\r\n            useFrame: 0,\r\n            curFrame: 0,\r\n            owner: [],\r\n            sceens: []\r\n        });\r\n    }\r\n\r\n    const getJsx = () => {\r\n        let jsx = <></>;\r\n        if (libData != null) {\r\n            if (seedSeq === -1) {\r\n                jsx = <>\r\n                    <_Header>{libData.name}</_Header>\r\n                    {libData.seedList.map((seed, i) => {\r\n                        const seedName = seed.disp ?? seed.name;\r\n                        return (<_Item key={i}\r\n                            onClick={() => {\r\n                                setSeedSeq(i);\r\n                            }}\r\n                        >\r\n                            <_SeedName>{seedName}</_SeedName>\r\n                            <_ArgCnt> [{seed.argCount} arguments]</_ArgCnt>\r\n                        </_Item>);\r\n                    })}\r\n                </>;\r\n            } else {\r\n                jsx = <PreviewLogicFrame.Component\r\n                    master={libData.seedList[seedSeq].master}\r\n                    rootData={libData.rootData}\r\n                    closeButtonAction={() => {\r\n                        setSeedSeq(-1);\r\n                    }}\r\n                />\r\n            }\r\n        } else if (storyData != null) {\r\n            if (storyPreviewProps == null) {\r\n                const getBlindJsx = () => {\r\n                    if (buildCache == null) return <></>;\r\n                    const rate = buildCache.curFrame / buildCache.useFrame * 100;\r\n                    const isStandby = buildCache.useFrame === 0;\r\n                    return (\r\n                        <_Blind>\r\n                            <_ProgressBox><_ProgressVal rate={rate} /></_ProgressBox>\r\n                            <_RateVal isStandby={isStandby}>{isStandby ? 'Calculating...' : `${Math.floor(rate)}%`}</_RateVal>\r\n                        </_Blind>\r\n                    );\r\n                }\r\n                jsx = <>\r\n                    {getBlindJsx()}\r\n                    <_Header>{storyData.name}</_Header>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        isIconButton\r\n                        buttons={[\r\n                            {\r\n                                label: 'Build',\r\n                                icon: <VscSettingsGear />,\r\n                                width: 200,\r\n                                callback() {\r\n                                    openPreviewAllDialog();\r\n                                },\r\n                            }\r\n                        ]} />\r\n                </>;\r\n            } else {\r\n                jsx = <PreviewLauncherFrame.Component\r\n                    sceens={storyPreviewProps.sceens}\r\n                    frameCnt={storyPreviewProps.useFrame}\r\n                />\r\n            }\r\n        }\r\n        return jsx;\r\n    }\r\n\r\n    return getJsx();\r\n}\r\n\r\nexport default DirectLinkManager;\r\n\r\n\r\nconst findProject = async (conteseq: number) => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE seq = ${conteseq}\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #002910c0;\r\n    z-index: 10;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _ProgressBox = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relaltive;\r\n    width: calc(100% - 20px);\r\n    height: 40px;\r\n    margin: 200px 0 0 10px;\r\n    background-color: #ffffff29;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    background-color: #ffffffc1;\r\n`;\r\n\r\nconst _RateVal = styled.div<{\r\n    isStandby: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #0000003b;\r\n\r\n    color: #ffffff;\r\n    ${props => !props.isStandby ? '' : css`\r\n        color: #f50000;\r\n    `}\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background: linear-gradient(to bottom, #00215e, #000000, #00215e);\r\n\r\n    color: #e0e0e0;\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #abc9e6;\r\n`;\r\n\r\nconst _ArgCnt = styled.span<{\r\n}>`\r\n    color: #fbffbf;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport DirectLinkManager from \"./directLinkManager\";\r\nimport DataUtil from \"../utils/dataUtil\";\r\n\r\ntype ScreenBean = {\r\n    adjLeft: number;\r\n    adjTop: number;\r\n    rate: number;\r\n}\r\n\r\n// export const CONTENTS_WIDTH = 576;\r\n// export const CONTENTS_HEIGHT = 1024;\r\n\r\n\r\nexport const CONTENTS_WIDTH = 600;\r\nexport const CONTENTS_HEIGHT = 660;\r\n\r\nconst MobileRoot = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const [isPermit, setPermit] = useState(true);\r\n    const [screen, setScreen] = useState<ScreenBean>({ adjLeft: 0, adjTop: 0, rate: 1 });\r\n    const ref = useRef<null | HTMLDivElement>(null);\r\n\r\n    const projectSeq = DataUtil.getDecryptionedProjectSeq(props.hashKey);\r\n\r\n    const update = () => {\r\n        if (ref.current != null) {\r\n            // const [clientWidth, clientHeight] = [window.innerWidth, window.innerHeight];\r\n\r\n            const rect = ref.current.getBoundingClientRect();\r\n            const [clientWidth, clientHeight] = [rect.width, rect.height];\r\n\r\n            const cw = CONTENTS_WIDTH;\r\n            const ch = CONTENTS_HEIGHT;\r\n\r\n            const isFitSide = clientHeight / ch > clientWidth / cw;\r\n\r\n            const rate = !isFitSide ? clientHeight / ch : clientWidth / cw;\r\n            const adjLeft = !isFitSide ? clientWidth / 2 - (cw * rate / 2) : 0;\r\n            const adjTop = !isFitSide ? 0 : clientHeight / 2 - (ch * rate / 2);\r\n\r\n            setScreen({ adjLeft, adjTop, rate });\r\n        }\r\n    }\r\n\r\n    // window.addEventListener('DOMContentLoaded', () => {\r\n    //     if (!isSmartPhone()) {\r\n    //         window.addEventListener('resize', update);\r\n    //     } else {\r\n    //         window.addEventListener('orientationchange resize', () => {\r\n    //             update();\r\n    //             setPermit(window.orientation === 0);\r\n    //         });\r\n    //     }\r\n    // });\r\n\r\n    // window.onorientationchange = () => {\r\n    //   setOrientation(window.orientation);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        update();\r\n        console.log(navigator.userAgent);\r\n        if (isSmartPhone()) {\r\n            setPermit(window.orientation === 0);\r\n        }\r\n        if (!isSmartPhone()) {\r\n            window.addEventListener('resize', ()=>{\r\n                update();\r\n            });\r\n        } else {\r\n            window.addEventListener('orientationchange resize', () => {\r\n                alert('change');\r\n                update();\r\n                setPermit(window.orientation === 0);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    let jsx = <_Error>Make your smartphone vertical!</_Error>;\r\n    if (isPermit) {\r\n        jsx = (\r\n            <_Contents>\r\n                <DirectLinkManager projectSeq={projectSeq} />\r\n            </_Contents>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap ref={ref}>\r\n            <_Frame left={screen.adjLeft} top={screen.adjTop} rate={screen.rate}>\r\n                {jsx}\r\n            </_Frame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MobileRoot;\r\n\r\nconst isSmartPhone = () => {\r\n    // UserAgentからのスマホ判定\r\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 10px);\r\n  height: calc(100% - 10px);\r\n  background-color: #9eadc9;\r\n  margin: 5px 0 0 5px; */\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst _Frame = styled.div<{\r\n    left: number;\r\n    top: number;\r\n    rate: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: ${props => props.top}px;\r\n  left: ${props => props.left}px;\r\n  transform-origin: top left;\r\n  /* width: 100%;\r\n  height: 100%; */\r\n  transform: scale(${props => props.rate});\r\n`;\r\n\r\nconst _Contents = styled.div`\r\n  display: inline-block;\r\n  width: ${CONTENTS_WIDTH}px;\r\n  height: ${CONTENTS_HEIGHT}px;\r\n  background-color: #929292;\r\n`;\r\n\r\nconst _Error = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #750000;\r\n    color: white;\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const dialog = store.system.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            if (!store.system.canDialogClose) return;\r\n            store.system.dialog = null;\r\n            store.system.canDialogClose = false;\r\n            setStore({ ...store });\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport StoreSystem from \"../../redux/store/storeSystem\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../utils/form/validateUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst WIDTH = 750;\r\nconst HEIGHT = 600;\r\n/**\r\n * アカウントフレームのコンポーネント\r\n * @returns \r\n */\r\nconst AccountFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [oldPass, setOldPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPass, setNewPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPassConfirm, setNewPassConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n    const [emailList, setEmailList] = useState<string[]>([]);\r\n\r\n    const [isModify, setModify] = useState(false);\r\n    const loginProps = store.system.user as StoreSystem.User;\r\n\r\n    const reloadInfo = () => {\r\n        setUserId({ ...userId, value: loginProps.id });\r\n        setNewPass({ ...newPass, value: '' });\r\n        setNewPassConfirm({ ...newPassConfirm, value: '' });\r\n        setEmail({ ...email, value: loginProps.email });\r\n        setOldPass({ ...oldPass, value: loginProps.password });\r\n    }\r\n\r\n    useEffect(() => {\r\n        DataUtil.findUserInfoList().then(list => {\r\n\r\n            const userIdList: string[] = [];\r\n            const emailList: string[] = [];\r\n            list.forEach(info => {\r\n                if (info.id !== loginProps.id) userIdList.push(info.id);\r\n                if (info.email !== '') emailList.push(info.email);\r\n            });\r\n            setUserIdList(userIdList);\r\n            setEmailList(emailList);\r\n        });\r\n\r\n        const hash = DataUtil.getHashedFromUserSeq(loginProps.seq);\r\n\r\n        // ユーザページのURLに変更する。\r\n        window.history.replaceState('', '', `/#/user?v=${hash}`);\r\n\r\n        reloadInfo();\r\n\r\n        // 閉じる際にURLを元に戻す\r\n        return () => {\r\n            // alert('destroy');\r\n            window.history.replaceState('', '', `/#/`);\r\n        }\r\n    }, []);\r\n\r\n    const userTabJsx: JSX.Element = (\r\n        <_Wrap>\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'user id'}\r\n                checkable={userId}\r\n                setCheckable={setUserId}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !userIdList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass'}\r\n                isPassword\r\n                checkable={newPass}\r\n                setCheckable={setNewPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPassConfirm.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPassConfirm]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass*'}\r\n                isPassword\r\n                checkable={newPassConfirm}\r\n                setCheckable={setNewPassConfirm}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPass.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPass]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'email'}\r\n                checkable={email}\r\n                setCheckable={setEmail}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => {\r\n                            return value.length === 0 || value.split('@').length === 2;\r\n                        },\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !emailList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                // width={500}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'old pass'}\r\n                isPassword\r\n                checkable={oldPass}\r\n                setCheckable={setOldPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => value === loginProps.password,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                // dependency={[passwordConfirm]}\r\n                width={300}\r\n                marginTop={55}\r\n                isReadOnly={!isModify}\r\n            />\r\n        </_Wrap>\r\n    );\r\n\r\n    // 登録ボタンの活性状態\r\n    const permitRegist = (\r\n        userId.errors.length === 0\r\n        && newPass.errors.length === 0\r\n        && newPassConfirm.errors.length === 0\r\n        && email.errors.length === 0\r\n        && oldPass.errors.length === 0\r\n    );\r\n\r\n    const updateUserInfo = () => {\r\n        const passwordStr = newPass.value.length === 0 ? '' : `,password = '${newPass.value}'`;\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `UPDATE user_tbl SET id = '${userId.value}', email = '${email.value}'${passwordStr}\r\n            WHERE seq = ${loginProps?.seq}`\r\n        ).then(() => {\r\n            loginProps.id = userId.value;\r\n            if (newPass.value.length > 0) {\r\n                loginProps.password = newPass.value;\r\n            }\r\n            loginProps.email = email.value;\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Modify successful!\" />;\r\n            setStore({...store});\r\n        });\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <FormUtil.Message\r\n                    message=\"If you bookmark this page, you can easily login by URL.\"\r\n                />\r\n            </_Header>\r\n            <_Body>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'User', enable: true, cont: userTabJsx },\r\n                        { name: 'Security', enable: false, cont: <></> },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_Body>\r\n            <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        {\r\n                            label: 'Close',\r\n                            callback: () => {\r\n                                // dispatcher.system.closeDialog();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Cancel',\r\n                            isEnable: isModify,\r\n                            callback: () => {\r\n                                setModify(false);\r\n                                reloadInfo();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isModify ? 'Modify' : 'Regist',\r\n                            isEnable: !isModify || permitRegist,\r\n                            callback: () => {\r\n                                if (!isModify) {\r\n                                    setModify(true);\r\n                                    setOldPass({ ...oldPass, value: '' });\r\n                                }\r\n                                else {\r\n                                    updateUserInfo();\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\n\r\nexport default AccountFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7eb;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    /* text-align: center; */\r\n`;\r\nconst _Body = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 100px);\r\n    padding: 4px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport AccountFrame from \"../accountFrame\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginCreateAccount = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isRegist, setRegist] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [passwordConfirm, setPasswordConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n\r\n    const createAuthText = () => {\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n        const list = '0123456789';\r\n        let text = '';\r\n        for (let i = 0; i < 6; i++) {\r\n            text += list.charAt(Math.random() * list.length);\r\n        }\r\n        return text;\r\n    };\r\n\r\n    /** 既存のユーザIDリストを格納 */\r\n    useEffect(() => {\r\n        DataUtil.findUserIdList().then(list => {\r\n            setUserIdList(list);\r\n        });\r\n\r\n        // fetch('https://api.ipify.org/?format=json').then(res => {\r\n        //     res.json().then(data => {\r\n        //         alert(data['ip']);\r\n        //     });\r\n        // });\r\n    }, []);\r\n\r\n    const [authCollation, setAuthCollation] = useState<string>(createAuthText());\r\n    const [authInput, setAuthInput] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    /** キャッシュした認証画像 */\r\n    const authPicture = useMemo(() => {\r\n        return CanvasUtil.getAuthTextURL(authCollation);\r\n\r\n    }, [authCollation]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n                case 'relation': list.push('[password] does not match confirm.'); break;\r\n            }\r\n        }\r\n        if (passwordConfirm.errors.length > 0) {\r\n            switch (passwordConfirm.errors[0]) {\r\n                case 'length': list.push('[password *] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    const registAction = () => {\r\n\r\n        (async () => {\r\n            let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n            let results = await response.json();\r\n            console.log(JSON.stringify(results[0].cnt));\r\n            const isExist = results[0].cnt > 0;\r\n            if (isExist) {\r\n                setMessageList(['That user id has already been recorded.']);\r\n            } else {\r\n                const nextSeq = await DataUtil.getNextUserSeq();\r\n                console.log(nextSeq);\r\n                await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(seq, id, password) VALUES(${nextSeq}, '${userId.value}', '${password.value}')`);\r\n                store.system.user = {\r\n                    seq: nextSeq,\r\n                    id: userId.value,\r\n                    password: password.value,\r\n                    email: '',\r\n                };\r\n                store.cloud = {\r\n                    projects: []\r\n                };\r\n                store.system.dialog = (<ConfirmDialog.Component\r\n                    message='You have successfully created an account!'\r\n                    buttons={[\r\n                        {\r\n                            label: 'OK',\r\n                            callback: () => {\r\n                                store.system.dialog = (<AccountFrame />);\r\n                                setStore({...store});\r\n                            }\r\n                        }\r\n                    ]}\r\n                />);\r\n                setStore({...store});\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0 && passwordConfirm.errors.length === 0;\r\n    }\r\n    const isAuthOK = () => {\r\n        return authInput.errors.length === 0 && authCollation === authInput.value;\r\n    }\r\n\r\n    return (<>\r\n\r\n        <_Frame isVisible={!isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass (Confirm).'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            },\r\n                            {\r\n                                checker: (value) => !userIdList.includes(value),\r\n                                errorType: \"relation\"\r\n                            },\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === passwordConfirm.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[passwordConfirm]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password*'}\r\n                        isPassword\r\n                        checkable={passwordConfirm}\r\n                        setCheckable={setPasswordConfirm}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === password.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[password]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Enter', isEnable: isLoginInfoOK(), callback: () => {\r\n                                    setRegist(true);\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Proof not a robot\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, input the same 6 number as the picture.'}\r\n                    />\r\n                    <_AuthText src={authPicture} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Change', callback: () => {\r\n                                    setAuthCollation(createAuthText());\r\n                                    setAuthInput({ value: '', errors: [] });\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                    {/* 照合する文字列 */}\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'6 numbers'}\r\n                        checkable={authInput}\r\n                        setCheckable={setAuthInput}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Regist', isEnable: isAuthOK(), callback: registAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setRegist(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginCreateAccount;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n\r\nconst _AuthText = styled.img<{\r\n}>`\r\n    display: block;\r\n    text-align: center;\r\n    margin: 4px auto;\r\n    background-color: #f7f0f0;\r\n    border: 1px solid #888888;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginLogin = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isForget, setForget] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        // alert(`Confirmation passwords don't match.`);\r\n        (async () => {\r\n            const results = await DataUtil.findUserInfoLogin(userId.value, password.value);\r\n            console.log(JSON.stringify(results));\r\n            if (results.length > 0) {\r\n                store.system.user = {\r\n                    seq: results[0].seq,\r\n                    id: results[0].id,\r\n                    password: results[0].password,\r\n                    email: results[0].email,\r\n                };\r\n                const resPrjList = await findUserProjectList(results[0].seq, store.system.isSPMode);\r\n                console.log(JSON.stringify(resPrjList));\r\n                store.cloud = {\r\n                    projects: resPrjList.map(res => ({\r\n                        source: res.source,\r\n                        type: res.type,\r\n                        name: res.name,\r\n                        seq: res.seq,\r\n                        lastmod: res.lastmod\r\n                    }))\r\n                };\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                    message=\"Login successful!\"\r\n                />;\r\n                setStore({ ...store });\r\n            } else {\r\n                setMessageList(['Incorrect user id or password.']);\r\n                // setPassword({ ...password, value: '' });\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0;\r\n    }\r\n\r\n    return (<>\r\n        <_Frame isVisible={!isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Enter', isEnable: isLoginInfoOK(), callback: enterAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Forgot your login information?\"\r\n                clickAction={() => {\r\n                    setForget(true);\r\n                }}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Email\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Submit login information to account address.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'email'}\r\n                        checkable={email}\r\n                        setCheckable={setEmail}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => {\r\n                                    return value.length === 0 || value.split('@').length === 2;\r\n                                },\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={500}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Send', isEnable: email.errors.length === 0, callback: () => {\r\n                                    DataUtil.findUserInfoFromEmail(email.value).then((list) => {\r\n                                        if (list.length > 0) {\r\n                                            const info = list[0];\r\n                                            const hash = DataUtil.getHashedFromUserSeq(info.seq);\r\n                                            const url = `https://demo-app.licresia.com/#/user?v=${hash}`;\r\n                                            DataUtil.sendQueryRequestToMailAPI({\r\n                                                from: 'info@licresia.com',\r\n                                                to: email.value,\r\n                                                subject: '【LiCreSia】support',\r\n                                                text: `Your login information is as follows.\\n\\nURL: ${url}\\nUSR ID: ${info.id}`\r\n                                            });\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"Your login information has been sent!\" />);\r\n                                        } else {\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"This email address is not registered.\" />);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setForget(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginLogin;\r\n\r\n\r\nexport const findUserProjectList = async (userSeq: number, isSPMode: boolean) => {\r\n    const storyOnly = !isSPMode ? '' : `and type = 'story'`;\r\n    const response = await DataUtil.sendQueryRequestToAPI(\r\n        'select',\r\n        `SELECT owner, seq, type, name, source, lastmod FROM prjcttbl WHERE owner = ${userSeq} ${storyOnly}order by seq`\r\n    );\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LoginCreateAccount from \"./loginCreateAccount\";\r\nimport LoginLogin from \"./loginLogin\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 500;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_LogoDiv>\r\n                <img src={logo} />\r\n            </_LogoDiv>\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {!isCreate ? <LoginLogin /> : <LoginCreateAccount />}\r\n            {/* <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        { name: 'Close', callback: closeAction },\r\n                        { name: 'Enter', callback: enterAction },\r\n                    ]}\r\n                />\r\n            </_Footer> */}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #bf808075;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n    background-color: #bf8080a2;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #c7a73e;\r\n        `}\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport LoginFrame from \"../dialog/login/loginFrame\";\r\nimport AccountFrame from \"../dialog/accountFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const user = store.system.user;\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (user != null) {\r\n            setUserId('@' + user.id);\r\n        }\r\n    }, [user]);\r\n\r\n    const authButtonJsx = user == null ? (\r\n        <_LoginButton onClick={() => {\r\n            store.system.canDialogClose = true;\r\n            store.system.dialog = <LoginFrame />;\r\n            setStore({ ...store });\r\n            console.log(window.location.origin);\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Login / Sign up\r\n        </_LoginButton>\r\n    ) : (<>\r\n        <_UserName\r\n            isEntry={user != null}\r\n            onClick={() => {\r\n                store.system.dialog = <AccountFrame />;\r\n                setStore({ ...store });\r\n            }}\r\n        >{userId}</_UserName>\r\n        <_LoginButton onClick={() => {\r\n            store.system.user = null;\r\n            store.cloud = null;\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message={'Logout.\\nSee you next time!'}\r\n            />;\r\n            store.system.logoutActions.forEach(func => func());\r\n            setStore({ ...store });\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Logout\r\n        </_LoginButton>\r\n    </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Logo src={logo} />\r\n            <_Menu>\r\n                {authButtonJsx}\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #a6bdc7, #7895b1, #a6bdc7);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    border: 1px solid #7e7e7e;\r\n    box-sizing: border-box;\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #9afff292;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #ff393983;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 180px;\r\n    height: 100%;\r\n    padding: 3px 0;\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n    /** 横向き */\r\n    isLandscape?: boolean;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const isLandscape = props.isLandscape ?? true;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList isLandscape={isLandscape}>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList isLandscape={isLandscape}>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    isLandscape: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isLandscape ? css`\r\n        width: 100px;\r\n        height: 100%;\r\n    ` : css`\r\n        width: 100%;\r\n        height: 100px;\r\n    `}\r\n    margin-right: 5px;\r\n    background-color: #c0d3db;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div<{\r\n    isLandscape: boolean;\r\n}>`\r\n    display: inline-block;\r\n    background-color: #c0d3db;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    ${props => props.isLandscape ? css`\r\n        width: calc(100% - 105px);\r\n        height: 100%;\r\n    ` : css`\r\n        height: calc(100% - 105px);\r\n        width: 100%;\r\n    `}\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    border: 1px solid #8d9aaa7b;\r\n    box-sizing: border-box;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #d5dddf;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #cacecf;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\n\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport Particle from \"../../../graphic/particle\";\r\nimport StoryUtil from \"../util/storyUtil\";\r\nimport BuildUtil from \"../../preview/buildUtil\";\r\n\r\nconst StoryFuseAnalysis = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [divide, setDivide] = useState<FormUtil.CheckableValue>({ value: '20', errors: [] });\r\n    const [peak, setPeak] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n    const [total, setTotal] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n\r\n    const [countList, setCountList] = useState<number[]>([]);\r\n\r\n    const scenarioData = store.storyData as StoryUtil.StoryData;\r\n    const limitFrame = scenarioData.limitFrame;\r\n    const limitParticle = scenarioData.limitParticle;\r\n    const defList = scenarioData.fuseList;\r\n\r\n    const logicData = store.libraryData as LogicUtil.WrapElement;\r\n\r\n    const execute = () => {\r\n        const minFrame = defList[0].frame;\r\n        const divRate = 1 / Number(divide.value);\r\n        const countList: number[] = [];\r\n        let peak = 0;\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            guaranteeFrame: minFrame,\r\n            doIterate: (frame, owner) => {\r\n                const def = defList.find(def => def.frame === frame);\r\n                if (def != undefined) {\r\n                    const seedWrap = LogicElementUtil.findSeedWrap(logicData, def.seedId);\r\n                    const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n                    const getOrigin = () => {\r\n                        const root = logicData.data as LogicUtil.NodeRoot;\r\n                        const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                        return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                    }\r\n                    const getSendingValueMap = () => {\r\n                        const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n                        const valueMap = seedargMng.args.map((wrap, i) => {\r\n                            const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                            return { name: seedarg.name, value: Number(def.values[i]) }\r\n                        });\r\n\r\n                        // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                        const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                        return sendParams.map(item => {\r\n                            const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                            if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                            return { name: item.name, value }\r\n                        });\r\n                    }\r\n\r\n                    owner.push(new Particle.Instance(\r\n                        PreviewUtil.buildLogicProps(owner, getOrigin(), logicData, getSendingValueMap(), [])\r\n                    ));\r\n                }\r\n\r\n                const pastRate = frame / limitFrame;\r\n                const needPoint = (countList.length + 1);\r\n                const curPoint = pastRate / divRate;\r\n                if (curPoint >= needPoint) {\r\n                    countList.push(owner.length);\r\n                }\r\n\r\n                if (owner.length > peak) peak = owner.length;\r\n            },\r\n            doEnd: (frame) => {\r\n                setTotal({ ...total, value: frame.toString() })\r\n            }\r\n        });\r\n        setPeak({ ...total, value: peak.toString() })\r\n        setCountList(countList);\r\n        // console.log(countList);\r\n    };\r\n\r\n    const itemJsxList = useMemo(() => {\r\n        const divRate = 1 / Number(divide.value);\r\n        const rateHeight = divRate / 1;\r\n        return countList.map((count, i) => {\r\n            const rate = count / limitParticle;\r\n            return (\r\n                <_AnalisisItem key={i}\r\n                    rate={rate * 100}\r\n                    height={rateHeight * 100}\r\n                />\r\n            );\r\n        });\r\n    }, [countList]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <FormUtil.BorderPanel\r\n                title=\"Property\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Divide\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isNumber\r\n                                checkable={divide}\r\n                                setCheckable={setDivide}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 5, 200),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Analysis',\r\n                                isEnable: divide.errors.length === 0 && defList.length > 0,\r\n                                callback: execute\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Result\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Peak\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={150}\r\n                                isNumber\r\n                                checkable={peak}\r\n                                isReadOnly\r\n                                setCheckable={setPeak}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"End frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={150}\r\n                                isNumber\r\n                                checkable={total}\r\n                                isReadOnly\r\n                                setCheckable={setTotal}\r\n                            />\r\n                        }\r\n                    />\r\n                    <_AnalisisDiv>\r\n                        {itemJsxList}\r\n                    </_AnalisisDiv>\r\n                </>}\r\n            />\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default StoryFuseAnalysis;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _AnalisisDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #000000d3;\r\n    width: calc(100% - 16px);\r\n    height: 500px;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _AnalisisItem = styled.div<{\r\n    rate: number;\r\n    height: number;\r\n}>`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #ededed77; */\r\n    background: linear-gradient(to bottom, #d1ceda, #b3aec2, #d1ceda);\r\n    width: ${props => props.rate}%;\r\n    height: calc(${props => props.height}% - 1px);\r\n    margin: 1px 0 0 0;\r\n    /* height: 20px; */\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport LogicFormUtil from \"../../factory/util/logicFormUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport StoryUtil from \"../util/storyUtil\";\r\nimport { FuseBean } from \"../storyTab\";\r\n\r\n\r\nconst StoryProperty = (props: {\r\n    newFrame: FormUtil.CheckableValue;\r\n    setNewFrame: (newFrame: FormUtil.CheckableValue) => void;\r\n    curFuse: StoryUtil.Fuse;\r\n    seedList: FuseBean[];\r\n    isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: (frame: number, seedId: string, values: string[]) => void;\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const [seed, setSeed] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const newFrame = props.newFrame;\r\n    const setNewFrame = props.setNewFrame;\r\n    const isInputOK = seed.errors.length === 0 && newFrame.errors.length === 0 && formList.find(form => form.errors.length > 0) == undefined;\r\n\r\n\r\n    const mapping = () => {\r\n        setNewFrame({ ...newFrame, value: props.curFuse.frame.toString() });\r\n        setSeed({ ...seed, value: props.curFuse.seedId.toString() });\r\n        setFormList(props.curFuse.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.curFuse == undefined) return;\r\n        if (props.curFuse.seedId === '') {\r\n            setNewFrame({ ...newFrame, value: '' });\r\n            setSeed({ ...seed, value: '' });\r\n            setFormList([]);\r\n        } else {\r\n            mapping();\r\n        }\r\n    }, [props.curFuse]);\r\n\r\n    const initFormList = (seedId: string) => {\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seedId;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n        }\r\n        setFormList(argumentList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }\r\n\r\n    const propertiesFormJsx = useMemo(() => {\r\n        if (seed.value === '') return <></>;\r\n\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        let presetList: LogicUtil.NodeSampleItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seed.value;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n            formgrpList = activeSeed.formgrps;\r\n            presetList = activeSeed.presets;\r\n        }\r\n        return (<>\r\n            <FormUtil.BorderPanel\r\n                title=\"Preset\"\r\n                innerJsx={<FormUtil.Record\r\n                    jsx={<>\r\n                        <FormUtil.Combobox\r\n                            width={250}\r\n                            checkable={template}\r\n                            setCheckable={setTemplate}\r\n                            headBlank\r\n                            list={presetList.map((sample, i) => {\r\n                                return {\r\n                                    labelText: sample.name,\r\n                                    value: i.toString()\r\n                                }\r\n                            })}\r\n                            isReadOnly={!props.isModify}\r\n                        />\r\n                        <FormUtil.ButtonItem\r\n                            button={{\r\n                                label: 'Apply',\r\n                                isEnable: template.value !== '',\r\n                                callback: () => {\r\n                                    const selectedIndex = Number(template.value);\r\n                                    const values = presetList[selectedIndex].values;\r\n                                    values.forEach((value, i) => {\r\n                                        formList[i].value = value.toString();\r\n                                    });\r\n                                    setFormList(formList.slice());\r\n                                }\r\n                            }}\r\n                        />\r\n                    </>}\r\n                />}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Properties\"\r\n                innerJsx={<>{\r\n                    LogicFormUtil.buildPreviewForms(\r\n                        !props.isModify, argumentList, formgrpList, formList, setFormList\r\n                    )\r\n                }</>}\r\n            />\r\n        </>);\r\n    }, [template, formList, props.isModify]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: props.isModify,\r\n                        callback: () => {\r\n                            props.cancelAction();\r\n                            setTemplate({ ...template, value: '' });\r\n                            mapping();\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !props.isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !props.isModify || isInputOK,\r\n                        callback: () => {\r\n                            props.modifyAction(\r\n                                Number(newFrame.value),\r\n                                seed.value,\r\n                                formList.map(form => form.value)\r\n                            );\r\n                            setTemplate({ ...template, value: '' });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Base\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isReadOnly={!props.isModify}\r\n                                isNumber\r\n                                checkable={newFrame}\r\n                                setCheckable={setNewFrame}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Seed\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                checkable={seed}\r\n                                setCheckable={(checkable) => {\r\n                                    initFormList(checkable.value);\r\n                                    setSeed({ ...checkable });\r\n                                }}\r\n                                list={props.seedList.map(seed => {\r\n                                    return { value: seed.name, labelText: seed.disp ?? seed.name }\r\n                                })}\r\n                                headBlank\r\n                                width={250}\r\n                                isReadOnly={!props.isModify}\r\n                                validates={\r\n                                    [\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n            {propertiesFormJsx}\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default StoryProperty;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #dbebd6;\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport StoryUtil from \"../util/storyUtil\";\r\n\r\n\r\nconst StoryEnvironment = (props: {\r\n    isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: () => void;\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [particle, setParticle] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const data = store.storyData as StoryUtil.StoryData;\r\n\r\n    const mapping = () => {\r\n        setFrame({ ...frame, value: data.limitFrame.toString() });\r\n        setParticle({ ...particle, value: data.limitParticle.toString() });\r\n    }\r\n    useEffect(() => {\r\n        mapping();\r\n    }, []);\r\n\r\n    const isInputOK = particle.errors.length === 0 && frame.errors.length === 0;\r\n\r\n    const maxLimit = data.fuseList.map(def => def.frame).reduce((prev, cur) => {\r\n        return prev > cur ? prev : cur;\r\n    }, 0);\r\n\r\n    return (<_Wrap>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Cancel',\r\n                    isEnable: props.isModify,\r\n                    callback: () => {\r\n                        mapping();\r\n                        props.cancelAction();\r\n                    }\r\n                },\r\n                {\r\n                    label: !props.isModify ? 'Modify' : 'Regist',\r\n                    isEnable: !props.isModify || isInputOK,\r\n                    callback: () => {\r\n                        data.limitFrame = Number(frame.value);\r\n                        data.limitParticle = Number(particle.value);\r\n                        setStore({ ...store });\r\n                        props.modifyAction();\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Limit\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!props.isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkNumberRange(value, maxLimit, 1000),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Particle\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!props.isModify}\r\n                            isNumber\r\n                            checkable={particle}\r\n                            setCheckable={setParticle}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkNumberRange(value, 100, 5000),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </_Wrap>)\r\n}\r\n\r\nexport default StoryEnvironment;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import { useContext, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { JsxEmit } from \"typescript\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport { FuseBean } from \"./storyTab\";\r\nimport StoryUtil from \"./util/storyUtil\";\r\n\r\nconst ITEM_WIDTH = 10;\r\nconst DIV_CNT = 5;\r\n\r\nconst TimelineFrame = (props: {\r\n    newFrameValue: number;\r\n    setNewFrameValue: (num: number) => void;\r\n    isModify: boolean;\r\n    focus: number;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const scenarioData = store.storyData as StoryUtil.StoryData;\r\n    const fuseList = scenarioData.fuseList;\r\n    const cacheList = store.fuseCacheList;\r\n    const limitFrame = scenarioData.limitFrame;\r\n\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const fusePosJsxList = useMemo(() => {\r\n        if(cacheList.length !== fuseList.length) return [];\r\n        const newFrameRate = props.newFrameValue / limitFrame;\r\n        return fuseList.map((fuse, i) => {\r\n            const rate = props.isModify && props.focus === i ? newFrameRate : fuse.frame / limitFrame;\r\n            const x = rate * 100;\r\n            const y = 5 + i * (ITEM_WIDTH + 3);\r\n            const cache = store.fuseCacheList.find(cache => cache.seq === fuse.seq) as StoryUtil.Cache;\r\n            const sus = cache.useFrame / limitFrame * 100;\r\n            return (<div key={i}>\r\n                {props.isModify && props.focus === i ? (\r\n                    <_Line x={x} />\r\n                ) : <></>}\r\n                <_Item\r\n                    x={x} y={y}\r\n                    isFocus={i === props.focus}\r\n                />\r\n                <_Sustain\r\n                    x={x}\r\n                    y={y}\r\n                    sus={sus}\r\n                />\r\n            </div>);\r\n        });\r\n    }, [limitFrame, props.focus, fuseList, props.isModify, props.newFrameValue, cacheList]);\r\n\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i < DIV_CNT + 1; i++) {\r\n            const rate = i / DIV_CNT;\r\n            const value = Math.floor(limitFrame * rate);\r\n            jsxList.push(\r\n                <_Memori\r\n                    key={i}\r\n                    x={rate * 100}\r\n                >{value}</_Memori>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [limitFrame]);\r\n\r\n    return (<>\r\n        <_MeasureDiv>\r\n            {memoriJsxList}\r\n        </_MeasureDiv>\r\n        <_Wrap\r\n            ref={ref}\r\n            isModify={props.isModify}\r\n            onClick={(e) => {\r\n                if (!props.isModify) return;\r\n                if (ref != null) {\r\n                    const dom = ref.current as HTMLDivElement;\r\n                    const rect = dom.getBoundingClientRect();\r\n                    const pos = e.clientX - rect.x;\r\n                    const rate = pos / rect.width;\r\n                    const newFrame = Math.floor(limitFrame * rate);\r\n                    props.setNewFrameValue(newFrame);\r\n                }\r\n            }}>\r\n            {fusePosJsxList}\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default TimelineFrame;\r\n\r\nconst MEASURE_WIDTH = 40;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #f2d9341a;\r\n    /* border-bottom: 3px solid #fff; */\r\n    box-sizing: border-box;\r\n    width: calc(100% - 36px);\r\n    height: ${MEASURE_WIDTH}px;\r\n    margin: 2px 0 0 18px;\r\n`;\r\nconst _Memori = styled.div<{\r\n    x: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* background-color: #ffffff31; */\r\n    width: 30px;\r\n    height: 20px;\r\n    left: calc(${props => props.x}% - 18px);\r\n    bottom: 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Wrap = styled.div<{\r\n    isModify: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b3d0b937;\r\n    /* border: 1px solid #ffffff4c; */\r\n    ${props => !props.isModify ? '' : css`\r\n        background-color: #ff000049;\r\n    `}\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 36px);\r\n    height: calc(100% - ${MEASURE_WIDTH + 8}px);\r\n    margin: 2px 0 0 18px;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #ffffff8d;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #ffb222;\r\n    `}\r\n    /* border: solid 1px #000000; */\r\n    border-radius: ${ITEM_WIDTH}px;\r\n    width: ${ITEM_WIDTH}px;\r\n    height: ${ITEM_WIDTH}px;\r\n    left: calc(${props => props.x}% - ${ITEM_WIDTH / 2}px);\r\n    top: ${props => props.y}px;\r\n`;\r\nconst _Sustain = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    sus: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #bfffb324;\r\n    /* border: solid 1px #000000; */\r\n    /* border-radius: ${ITEM_WIDTH}px; */\r\n    width: ${props => props.sus}%;\r\n    height: ${ITEM_WIDTH / 2}px;\r\n    left: calc(${props => props.x}%);\r\n    top: calc(${props => props.y}px + ${ITEM_WIDTH / 4}px);\r\n`;\r\nconst _Line = styled.div<{\r\n    x: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #ff0000f0;\r\n    left: ${props => props.x}%;\r\n    top: 0;\r\n    width: 1px;\r\n    height: 100%;\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryFuseAnalysis from \"./tab/storyFuseAnalysis\";\r\nimport StoryProperty from \"./tab/storyProperty\";\r\nimport StoryEnvironment from \"./tab/storyEnvironment\";\r\nimport TimelineFrame from \"./timelineFrame\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport PreviewUtil from \"../preview/previewUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport PreviewLauncherFrame from \"../preview/previewLauncherFrame\";\r\nimport StoryUtil from \"./util/storyUtil\";\r\nimport BuildUtil from \"../preview/buildUtil\";\r\n\r\nexport type FuseBean = {\r\n    name: string;\r\n    disp?: string;\r\n    args: LogicUtil.NodeSeedArgItem[];\r\n    formgrps: LogicUtil.NodeFromGrpItem[];\r\n    presets: LogicUtil.NodeSampleItem[];\r\n};\r\n\r\nconst StoryTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const [newFrame, setNewFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [defList, setDefList] = useState<LaunchDef[]>([]);\r\n    const [isFuseEdit, setFuseEdit] = useState<boolean>(false);\r\n    const [isEnvEdit, setEnvEdit] = useState<boolean>(false);\r\n    const [tabActiveIndex, setTabActiveIndex] = useState<number>(0);\r\n    const [focus, setFocus] = useState<number>(-1);\r\n\r\n    const fuseList = storyData.fuseList;\r\n\r\n    const setFuseList = (fuseList: StoryUtil.Fuse[]) => {\r\n        storyData.fuseList = fuseList;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const seedList: FuseBean[] = useMemo(() => {\r\n        if (store.libraryData == null) return [];\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        const seedWrapList = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        return seedWrapList.map(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n\r\n            // 引数リストを取得\r\n            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const args = argMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n\r\n            // フォームグループリストを取得\r\n            const groupMng = LogicElementUtil.getInnerWrap(wrap, 'interface-mng', 'formgrp-mng');\r\n            let formgrps: LogicUtil.NodeFromGrpItem[] = [];\r\n            if (groupMng != null) {\r\n                formgrps = (groupMng.data as LogicUtil.NodeFromgrpManager).defines.map(wrap => wrap.data as LogicUtil.NodeFromGrpItem);\r\n            }\r\n\r\n            // プリセットリストを取得\r\n            const sampleMng = LogicElementUtil.getInnerWrap(wrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n            const presets = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n            return {\r\n                name: seed.name,\r\n                disp: seed.disp,\r\n                args, formgrps, presets\r\n            }\r\n        });\r\n    }, [store.libraryData]);\r\n\r\n    useEffect(() => {\r\n        if (storyData.fuseList.length > 0) {\r\n            const scenarioCacheList: StoryUtil.Cache[] = [];\r\n            storyData.fuseList.forEach((fuse) => {\r\n                const newCache: StoryUtil.Cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n                updateCache(fuse, newCache);\r\n                scenarioCacheList.push(newCache);\r\n            });\r\n            store.fuseCacheList = scenarioCacheList;\r\n            setStore({ ...store });\r\n        }\r\n    }, [storyData]);\r\n\r\n    const createSeq = () => {\r\n        return fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    const add = () => {\r\n        const seq = createSeq();\r\n        fuseList.push({ seq, frame: 0, seedId: '', values: [] });\r\n        setFuseList(fuseList.slice());\r\n        setFocus(fuseList.length - 1);\r\n        store.fuseCacheList.push({ seq, thumbList: [], useFrame: 0 });\r\n        setTabActiveIndex(2);\r\n        setFuseEdit(true);\r\n    }\r\n\r\n    const fuseJsxList = useMemo(() => {\r\n        return fuseList.map((fuse, i) => {\r\n\r\n            const cache = store.fuseCacheList.find(cache => cache.seq === fuse.seq);\r\n\r\n            let thumbJsx: JSX.Element[] = [];\r\n            if (cache != undefined) {\r\n                thumbJsx = cache.thumbList.slice(0, 3).map((thumb, j) => {\r\n                    const imgJsx = thumb == undefined ? <></> : <_IMG src={thumb.url} />;\r\n                    return (\r\n                        <_SampleDiv key={j}>-\r\n                            <_SampleName>{thumb.name}</_SampleName>\r\n                            <_CanvasDiv>\r\n                                {imgJsx}\r\n                            </_CanvasDiv>\r\n                        </_SampleDiv>\r\n                    );\r\n                });\r\n            };\r\n            return (\r\n                <_ItemDiv key={i}\r\n                    isEnable={!isFuseEdit || focus === i}\r\n                >\r\n                    <_ItemFrame isFocus={i === focus}\r\n                        onClick={() => {\r\n                            setFocus(i);\r\n                        }}\r\n                    >\r\n                        {fuse.seedId === '' ? (\r\n                            <_PropRecord>Creating...</_PropRecord>\r\n                        ) : (<>\r\n                            <_FrameRecord>{fuse.frame}</_FrameRecord>\r\n                            {/* <_SeedRecord>{def.seedName}: {def.seq}</_SeedRecord> */}\r\n                            <_SeedRecord>{fuse.seedId}</_SeedRecord>\r\n                            <_ThumbFrame>\r\n                                {thumbJsx}\r\n                            </_ThumbFrame>\r\n                            {fuse.values.map((val, j) => {\r\n                                const seedBean = seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n                                const name = seedBean.args[j].name;\r\n                                return (\r\n                                    <_PropRecord key={j}><_Title>{name}: </_Title>{val}</_PropRecord>\r\n                                );\r\n                            })}\r\n                        </>)}\r\n                    </_ItemFrame>\r\n                </_ItemDiv>\r\n            );\r\n        });\r\n    }, [fuseList, focus, isFuseEdit, store.fuseCacheList]);\r\n\r\n    /**\r\n     * プレビューオールダイアログを表示する\r\n     */\r\n    const openPreviewAllDialog = () => {\r\n        const minFrame = fuseList[0].frame;\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        const sceens: string[] = [];\r\n        let useFrame: number = 0;\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            guaranteeFrame: minFrame,\r\n            doIterate: (frame, owner) => {\r\n\r\n                fuseList.some(def => {\r\n                    if (def.frame === frame) {\r\n                        LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                    } else if (def.frame > frame) return 1;\r\n                });\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                }));\r\n            },\r\n            doEnd: (frame) => {\r\n                useFrame = frame;\r\n            }\r\n        });\r\n        store.system.dialog = (\r\n            <PreviewLauncherFrame.Component\r\n                sceens={sceens}\r\n                frameCnt={useFrame}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * プレビューソロダイアログを表示する\r\n     */\r\n    const openPreviewSoloDialog = () => {\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        const sceens: string[] = [];\r\n        let useFrame: number = 0;\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            doIterate: (frame, owner) => {\r\n\r\n                const def = fuseList[focus];\r\n                if (frame === 0) {\r\n                    LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                }\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                }));\r\n            },\r\n            doEnd: (frame) => {\r\n                useFrame = frame;\r\n            }\r\n        });\r\n        store.system.dialog = (\r\n            <PreviewLauncherFrame.Component\r\n                sceens={sceens}\r\n                frameCnt={useFrame}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const updateCache = (fuse: StoryUtil.Fuse, cache: StoryUtil.Cache) => {\r\n\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        cache.thumbList = [];\r\n        cache.useFrame = 0;\r\n        const seedProps = LogicElementUtil.getSeedProperties(logicData, fuse.seedId);\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            doIterate: (frame, owner) => {\r\n                if (frame === 0) {\r\n                    LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                }\r\n\r\n                const thumb = seedProps.thumbnailList.find(thumb => thumb.frame === frame);\r\n                if (thumb != undefined) {\r\n                    const url = CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    });\r\n                    cache.thumbList.push({ name: thumb.name, url });\r\n                }\r\n            },\r\n            doEnd: (frame) => {\r\n                cache.useFrame = frame;\r\n            }\r\n        });\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const isCreate = fuseList.length === 0 ? false : fuseList[fuseList.length - 1].seedId === '';\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n        >\r\n            <_ListDiv>\r\n                <_ListHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview All',\r\n                                isEnable: !isFuseEdit,\r\n                                callback: openPreviewAllDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_ListHead>\r\n                <_ListHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Add',\r\n                                isEnable: !isFuseEdit,\r\n                                callback: add\r\n                            },\r\n                            {\r\n                                label: 'Delete',\r\n                                isEnable: !isFuseEdit && focus != -1,\r\n                                callback: () => {\r\n                                    fuseList.splice(focus, 1);\r\n                                    setFuseList(fuseList.slice());\r\n                                    if (focus > 0) {\r\n                                        setFocus(focus - 1);\r\n                                    } else if (focus === 0 && fuseList.length === 0) {\r\n                                        setFocus(-1);\r\n                                        setTabActiveIndex(0);\r\n                                    }\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Replicate',\r\n                                isEnable: !isFuseEdit && focus != -1,\r\n                                callback: () => {\r\n                                    const cloneFuse = JSON.parse(JSON.stringify(fuseList[focus])) as StoryUtil.Fuse;\r\n                                    const newSeq = createSeq();\r\n                                    cloneFuse.seq = newSeq;\r\n                                    fuseList.splice(focus, 0, cloneFuse);\r\n                                    setFuseList(fuseList.slice());\r\n                                    setFocus(focus + 1);\r\n\r\n                                    // const baseCache = store.launchCacheList.find(cache => cache.seq === defList[focus].seq) as Cache;\r\n                                    // console.log(baseCache);\r\n                                    // const cloneCache = JSON.parse(JSON.stringify(baseCache)) as Cache;\r\n                                    // cloneCache.seq = newSeq;\r\n                                    const newCache: StoryUtil.Cache = { seq: newSeq, thumbList: [], useFrame: 0 };\r\n                                    updateCache(cloneFuse, newCache);\r\n                                    store.fuseCacheList.push(newCache);\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Preview Solo',\r\n                                isEnable: !isFuseEdit && focus != -1,\r\n                                callback: openPreviewSoloDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_ListHead>\r\n                <_ListBody>\r\n                    <_Timeline><TimelineFrame\r\n                        newFrameValue={Number(newFrame.value)}\r\n                        setNewFrameValue={(num: number) => {\r\n                            setNewFrame({ ...newFrame, value: num.toString() })\r\n                        }}\r\n                        isModify={isFuseEdit}\r\n                        focus={focus}\r\n                        seedList={seedList}\r\n                    /></_Timeline>\r\n                    <_ListMain>\r\n                        {fuseJsxList}\r\n                    </_ListMain>\r\n                </_ListBody>\r\n            </_ListDiv>\r\n            <_RightDiv>\r\n                <_RightInner>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            {\r\n                                name: 'Environment', enable: !isFuseEdit, cont: <StoryEnvironment\r\n                                    isModify={isEnvEdit}\r\n                                    cancelAction={() => {\r\n                                        setEnvEdit(false);\r\n                                    }}\r\n                                    modifyAction={() => {\r\n                                        if (!isEnvEdit) {\r\n                                            setEnvEdit(true);\r\n                                        } else {\r\n                                            setEnvEdit(false);\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            },\r\n                            { name: 'Analysis', enable: !isFuseEdit && !isEnvEdit, cont: <StoryFuseAnalysis /> },\r\n                            {\r\n                                name: 'Property', enable: !isEnvEdit && focus != -1, cont: <StoryProperty\r\n                                    newFrame={newFrame}\r\n                                    setNewFrame={setNewFrame}\r\n                                    curFuse={fuseList[focus]}\r\n                                    seedList={seedList}\r\n                                    isModify={isFuseEdit}\r\n                                    cancelAction={() => {\r\n                                        setFuseEdit(false);\r\n                                        if (isCreate) {\r\n                                            fuseList.splice(fuseList.length - 1, 1);\r\n                                            setFuseList(fuseList.slice());\r\n                                            setFocus(focus - 1);\r\n                                            if (fuseList.length === 0) {\r\n                                                setTabActiveIndex(0);\r\n                                            }\r\n                                        }\r\n                                    }}\r\n                                    modifyAction={(frame: number, seedId: string, values: string[]) => {\r\n                                        if (!isFuseEdit) {\r\n                                            setFuseEdit(true);\r\n                                        } else {\r\n                                            const fuse = fuseList[focus];\r\n                                            fuse.frame = frame;\r\n                                            fuse.seedId = seedId;\r\n                                            fuse.values = values;\r\n                                            const seq = fuse.seq;\r\n                                            const cache = store.fuseCacheList.find(cache => cache.seq === seq) as StoryUtil.Cache;\r\n                                            updateCache(fuse, cache);\r\n                                            fuseList.sort((a, b) => {\r\n                                                return a.frame - b.frame;\r\n                                            });\r\n                                            setFuseList(fuseList.slice());\r\n                                            setFocus(fuseList.findIndex(def => def.seq === seq));\r\n                                            setFuseEdit(false);\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            }\r\n                        ]}\r\n                        selectTabIndex={setTabActiveIndex}\r\n                        activeNo={tabActiveIndex}\r\n                    />\r\n                </_RightInner>\r\n            </_RightDiv>\r\n            {/* <_Blind isVisible={isBackingWnd}>\r\n                    <_Contents>{!isBackingWnd ? <></> : <BackingEditorFrame />}</_Contents>\r\n                </_Blind> */}\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default StoryTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #1e1c22;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _ListDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #653fd6; */\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst LIST_HEAD = 40;\r\nconst TIMELINE_WIDTH = 240;\r\n\r\nconst _ListHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d8;\r\n    width: 100%;\r\n    height: ${LIST_HEAD}px;\r\n`;\r\n\r\nconst _ListBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: calc(100% - ${LIST_HEAD * 2}px);\r\n`;\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #00071b;\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: ${TIMELINE_WIDTH}px;\r\n`;\r\nconst _ListMain = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #c551b6; */\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: calc(100% - ${TIMELINE_WIDTH}px);\r\n    overflow-x: auto;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _RightDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c1c0c4;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\nconst _RightInner = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n`;\r\n\r\nconst _TabContWrap = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 630px;\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    /* opacity: 0.9; */\r\n    overflow: hidden;\r\n`;\r\n\r\n\r\nconst _ItemDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    background: linear-gradient(to right, #3a383d, #8d8999, #3a383d);\r\n    vertical-align: top;\r\n    width: 220px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n    background: linear-gradient(to right, #66626b, #b7b2c7, #66626b);\r\n    }\r\n`;\r\n\r\nconst _ItemFrame = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #8997bd29;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #d7eb7d83;\r\n    `}\r\n    border: 1px solid #2c3577;\r\n    border-radius: 2px;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _PropRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    /* margin-top: 1px; */\r\n    height: 24px;\r\n    /* background: linear-gradient(to bottom, #aaaaaa89, #e1e1e18a, #aaaaaa89); */\r\n    /* font-size: 20px; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #555555;\r\n    font-style: italic;\r\n    line-height: 22px;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Title = styled.span`\r\n    color: #f00;\r\n`;\r\n\r\n\r\nconst _FrameRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    height: 35px;\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    color: #132693;\r\n    font-style: italic;\r\n    line-height: 34px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\nconst _SeedRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    height: 35px;\r\n    font-size: 26px;\r\n    font-style: italic;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    line-height: 34px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ThumbFrame = styled.div<{}>`\r\n    display: inline-block;\r\n    /* background-color: #4b09ff; */\r\n    width: 100%;\r\n`;\r\nconst WND_SIZE = 65;\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport { ProjectType, ProjectTypes } from \"../../../redux/store/store\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\n\r\nnamespace NewProjectDialog {\r\n\r\n    type CloudLibInfo = {\r\n        seq: number;\r\n        name: string;\r\n        ownerId: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    type LocalLibInfo = {\r\n        fileName: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const Component = (props: {\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [type, setType] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const [selectedLib, setSelectedLib] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [localLib, setLocalLib] = useState<null | LocalLibInfo>(null);\r\n\r\n        const [cloudLibs, setCloudLibs] = useState<null | CloudLibInfo[]>(null);\r\n\r\n        const width = 500;\r\n        const height = 340;\r\n\r\n        // useEffect(() => {\r\n        //     setType({ ...type });\r\n        // }, []);\r\n\r\n        const getStoryLib = () => {\r\n            let storyLib: LogicUtil.WrapElement | null = null;\r\n            if (cloudLibs != null) {\r\n                const lib = cloudLibs.find(lib => lib.seq === Number(selectedLib.value));\r\n                if (lib != undefined) {\r\n                    storyLib = lib.rootData;\r\n                }\r\n            } else if (localLib != null) {\r\n                storyLib = localLib.rootData;\r\n            }\r\n            return storyLib;\r\n        }\r\n\r\n        const usingHash = useMemo(() => {\r\n            let hash = '-';\r\n            const lib = getStoryLib();\r\n            if (lib != null) {\r\n                hash = DataUtil.getSHA256Hash(JSON.stringify(lib));\r\n            }\r\n            return hash;\r\n        }, [selectedLib, localLib]);\r\n\r\n        const isCreateEnabled = () => {\r\n            if (type.value === '') return false;\r\n            if ((type.value as ProjectType) === 'story') {\r\n                return usingHash !== '-';\r\n            }\r\n            return true;\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Create',\r\n                isEnable: isCreateEnabled(),\r\n                callback: () => {\r\n                    const projectType = type.value as ProjectType;\r\n                    if (projectType as ProjectType === 'library') {\r\n                        store.libraryData = LogicElementUtil.getInitialData();\r\n                    } else {\r\n                        store.libraryData = getStoryLib();\r\n                        store.storyData = {\r\n                            limitFrame: 300,\r\n                            limitParticle: 3000,\r\n                            fuseList: []\r\n                        };\r\n                    }\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, select project type!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={type}\r\n                            width={178}\r\n                            setCheckable={(checkable => {\r\n                                setType(checkable);\r\n                                if (checkable.value as ProjectType !== 'story') {\r\n                                    setCloudLibs(null);\r\n                                    setLocalLib(null);\r\n                                    setSelectedLib({ value: '', errors: [] });\r\n                                }\r\n                            })}\r\n                            list={ProjectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.BorderPanel\r\n                    title=\"Story\"\r\n                    isEnable={type.value as ProjectType === 'story'}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Source\"\r\n                            jsx={<>\r\n                                <FormUtil.ButtonItem\r\n                                    button={{\r\n                                        label: 'Cloud',\r\n                                        width: 120,\r\n                                        callback: () => {\r\n                                            findAllReleaseProjectList().then(resList => {\r\n                                                setCloudLibs(resList.map(res => {\r\n                                                    return {\r\n                                                        name: res.name,\r\n                                                        ownerId: res.owner,\r\n                                                        seq: res.seq,\r\n                                                        rootData: JSON.parse(DataUtil.unZip(res.source))\r\n                                                    }\r\n                                                }));\r\n                                                setLocalLib(null);\r\n                                            });\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                <FormUtil.ButtonItem\r\n                                    button={{\r\n                                        label: 'Local',\r\n                                        width: 120,\r\n                                        callback: () => {\r\n                                            (async () => {\r\n                                                const [fileHandle] = await window.showOpenFilePicker();\r\n                                                const file = await fileHandle.getFile();\r\n                                                const fileContents = await file.text();\r\n                                                const text = DataUtil.unZip(fileContents);\r\n                                                setLocalLib({\r\n                                                    fileName: file.name,\r\n                                                    rootData: JSON.parse(text)\r\n                                                });\r\n                                                setCloudLibs(null);\r\n                                                setSelectedLib({ value: '', errors: [] });\r\n                                            })();\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </>}\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Cloud\"\r\n                            isEnabled={cloudLibs != null}\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    marginLeft={2}\r\n                                    checkable={selectedLib}\r\n                                    width={278}\r\n                                    setCheckable={setSelectedLib}\r\n                                    list={(cloudLibs ?? []).map((item) => {\r\n                                        // const disp = `${item.ownerId}: ${item.name}`;\r\n                                        return { value: item.seq.toString(), labelText: item.name };\r\n                                    })}\r\n                                    headBlank\r\n                                    validates={[\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Local\"\r\n                            isEnabled={localLib != null}\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={localLib == null ? '' : localLib.fileName}\r\n                                    isRecordItem\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Hash\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={usingHash}\r\n                                    isRecordItem\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewProjectDialog;\r\n\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport { ProjectType, ProjectTypes } from \"../../../redux/store/store\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { AiOutlineEnter } from \"react-icons/ai\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\n\r\nnamespace NewProjectDialogStoryOnly {\r\n\r\n    type CloudLibInfo = {\r\n        seq: number;\r\n        name: string;\r\n        ownerId: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const Component = (props: {\r\n        extendAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [selectedType, setSelectedType] = useState<FormUtil.CheckableValue>({ value: 'official', errors: [] });\r\n        const [selectedLib, setSelectedLib] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [cloudLibs, setCloudLibs] = useState<null | CloudLibInfo[]>(null);\r\n\r\n        const width = 500;\r\n        const height = 210;\r\n\r\n        useEffect(() => {\r\n            findAllReleaseProjectList().then(resList => {\r\n                setCloudLibs(resList.map(res => {\r\n                    return {\r\n                        name: res.name,\r\n                        ownerId: res.owner,\r\n                        seq: res.seq,\r\n                        rootData: JSON.parse(DataUtil.unZip(res.source))\r\n                    }\r\n                }));\r\n            });\r\n        }, []);\r\n\r\n        const getStoryLib = () => {\r\n            let storyLib: LogicUtil.WrapElement | null = null;\r\n            if (cloudLibs != null) {\r\n                const lib = cloudLibs.find(lib => lib.seq === Number(selectedLib.value));\r\n                if (lib != undefined) {\r\n                    storyLib = lib.rootData;\r\n                }\r\n            }\r\n            return storyLib;\r\n        }\r\n\r\n        const usingHash = useMemo(() => {\r\n            let hash = '-';\r\n            const lib = getStoryLib();\r\n            if (lib != null) {\r\n                hash = DataUtil.getSHA256Hash(JSON.stringify(lib));\r\n            }\r\n            return hash;\r\n        }, [selectedLib]);\r\n\r\n        const isCreateEnabled = () => {\r\n            return usingHash !== '-';\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                icon: <MdCancelPresentation />,\r\n                width: 120,\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Create',\r\n                icon: <AiOutlineEnter />,\r\n                width: 120,\r\n                isEnable: isCreateEnabled(),\r\n                callback: () => {\r\n                    store.libraryData = getStoryLib();\r\n                    store.storyData = {\r\n                        limitFrame: 300,\r\n                        limitParticle: 3000,\r\n                        fuseList: []\r\n                    };\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    if (props.extendAction != undefined) props.extendAction();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, select library!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    isEnabled={true}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={selectedType}\r\n                            width={278}\r\n                            setCheckable={setSelectedType}\r\n                            list={['official','original'].map((item) => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Library\"\r\n                    isEnabled={cloudLibs != null}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={selectedLib}\r\n                            width={278}\r\n                            setCheckable={setSelectedLib}\r\n                            list={(cloudLibs ?? []).map((item) => {\r\n                                // const disp = `${item.ownerId}: ${item.name}`;\r\n                                return { value: item.seq.toString(), labelText: item.name };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.FormRecord\r\n                    titleLabel=\"Hash\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            value={usingHash}\r\n                            isRecordItem\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewProjectDialogStoryOnly;\r\n\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","export namespace SPUtil {\r\n\r\n    export const SCREEN_WIDTH = 640;\r\n    export const SCREEN_HEIGHT = 960;\r\n}","import assert from \"assert\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryUtil from \"../launcher/util/storyUtil\";\r\nimport NameDefDialog from \"./nameDefDialog\";\r\nimport NewProjectDialog from \"./newProjectDialog\";\r\nimport NewProjectDialogStoryOnly from \"./newProjectDialogStoryOnly\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n    const listItemJsx = store.cloud == null ? [] : store.cloud.projects.map((project, i) => {\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    setFcsListIdx(i);\r\n                    console.log(DataUtil.getHashedFromProjectSeq(project.seq));\r\n                }}\r\n                onContextMenu={() => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={DataUtil.getDirectUrl(project.type, project.seq)}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }}\r\n            >\r\n                <_Status type={project.type}>[{project.type}] </_Status>\r\n                <_Name>{project.name}</_Name>\r\n                {/* <_Date> -{item.lastmod}</_Date> */}\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    const getProjectType = () => {\r\n        let str = '-';\r\n        if (store.libraryData != null) str = 'library';\r\n        if (store.storyData != null) str = 'story';\r\n        return str;\r\n    }\r\n\r\n    const hasData = store.libraryData != null;\r\n    const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n    useEffect(() => {\r\n        if (store.cloud == null) {\r\n            setFcsListIdx(-1);\r\n        }\r\n    }, [store.cloud]);\r\n\r\n    const [elementSize, developCnt, privateCnt, releaseCnt, logicCnt, fuseCnt] = useMemo(() => {\r\n        if (store.libraryData == null) return [0, 0, 0, 0, 0, 0];\r\n        let size = 0;\r\n        const incrRec = (wrap: LogicUtil.WrapElement) => {\r\n            size++;\r\n            const listName = LogicElementUtil.getListParamName(wrap.type);\r\n            if (listName != null) {\r\n                const list = wrap.data[listName] as LogicUtil.WrapElement[];\r\n                list.forEach(wrap => incrRec(wrap));\r\n            }\r\n        }\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        incrRec(root.logicMng);\r\n        incrRec(root.seedMng);\r\n\r\n        let developCnt = 0;\r\n        let privateCnt = 0;\r\n        let releaseCnt = 0;\r\n        let fuseCnt = 0;\r\n        const seedMng = root.seedMng.data as LogicUtil.NodeSeedManager;\r\n        seedMng.defs.forEach(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n            switch (seed.permit) {\r\n                case 'develop': developCnt++; break;\r\n                case 'private': privateCnt++; break;\r\n                case 'release': releaseCnt++; break;\r\n            }\r\n        });\r\n\r\n        const logicMng = root.logicMng.data as LogicUtil.NodeLogicManager;\r\n\r\n        if (store.storyData != null) {\r\n            fuseCnt = store.storyData.fuseList.length;\r\n        }\r\n        return [size, developCnt, privateCnt, releaseCnt, logicMng.defs.length, fuseCnt];\r\n    }, [store.libraryData]);\r\n\r\n    \r\n    const getData = (type: ProjectType) => {\r\n        switch (type) {\r\n            case 'library': {\r\n                return store.libraryData;\r\n            }\r\n            case 'story': {\r\n                const data: StoryUtil.ScenarioFileProps = {\r\n                    libraryData: store.libraryData as LogicUtil.WrapElement,\r\n                    scenarioData: store.storyData as StoryUtil.StoryData\r\n                };\r\n                return data;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを新規アップロードする\r\n     */\r\n    const uploadCloud = () => {\r\n        const type = getProjectType() as ProjectType;\r\n        const source = DataUtil.gZip(JSON.stringify(getData(type)));\r\n        store.system.dialog = <NameDefDialog.Component\r\n            targetSeq={-1}\r\n            type={type}\r\n            source={source}\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを上書き更新する\r\n     */\r\n    const overwriteCloudFile = () => {\r\n        const type = getProjectType() as ProjectType;\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.gZip(JSON.stringify(getData(type)));\r\n        updateProjectSource(curPrj.seq, getProjectType(), source).then(() => {\r\n            curPrj.source = source;\r\n            curPrj.type = type;\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Update project succesful!\"\r\n            />;\r\n            setStore({ ...store });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 選択中のクラウド上のファイルを読み込む\r\n     */\r\n    const cloneCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.unZip(curPrj.source);\r\n        const data = JSON.parse(source);\r\n        switch (curPrj.type) {\r\n            case 'library': {\r\n                store.libraryData = data;\r\n            } break;\r\n            case 'story': {\r\n                const scenarioFileProps = data as StoryUtil.ScenarioFileProps;\r\n                store.libraryData = scenarioFileProps.libraryData;\r\n                store.storyData = scenarioFileProps.scenarioData;\r\n            } break;\r\n        }\r\n        store.system.dialog = <ConfirmDialog.Component\r\n            message=\"Clone project succesful!\"\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    const saveLocalFile = () => {\r\n        switch (getProjectType() as ProjectType) {\r\n            case 'library': DataUtil.saveLibraryFile(store, setStore); break;\r\n            case 'story': DataUtil.saveScenarioFile(store, setStore); break;\r\n        }\r\n    }\r\n\r\n    const getNewSaveButton = () => {\r\n        switch (tabIndex) {\r\n            // Cloud\r\n            case 0: return {\r\n                label: 'Upload cloud',\r\n                width: 210,\r\n                isEnable: hasData && store.cloud != null,\r\n                callback: uploadCloud\r\n            }\r\n            // Local\r\n            case 1: return {\r\n                label: 'Save file',\r\n                width: 210,\r\n                isEnable: hasData && store.fileHandle == null,\r\n                callback: () => {\r\n                    // store.fileHandle = null;\r\n                    // setStore({...store});\r\n                    saveLocalFile();\r\n                }\r\n            }\r\n        }\r\n        throw assert;\r\n    }\r\n\r\n    const getOverwriteButton = () => {\r\n        switch (tabIndex) {\r\n            // Cloud\r\n            case 0: return {\r\n                label: 'Overwrite',\r\n                width: 210,\r\n                isEnable: fcsListIdx != -1 && hasData,\r\n                callback: overwriteCloudFile\r\n            }\r\n            // Local\r\n            case 1: return {\r\n                label: 'Overwrite',\r\n                width: 210,\r\n                isEnable: hasData && store.fileHandle != null,\r\n                callback: () => {\r\n                    // store.fileHandle = null;\r\n                    // setStore({...store});\r\n                    saveLocalFile();\r\n                }\r\n            }\r\n        }\r\n        throw assert;\r\n    }\r\n\r\n    const cloudJsx = (<_ContDiv isEnable={store.cloud != null}>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Load',\r\n                    isEnable: !hasData && fcsListIdx !== -1 && projects[fcsListIdx].source !== '',\r\n                    callback: cloneCloudFile\r\n                },\r\n                {\r\n                    label: 'Rename',\r\n                    width: 110,\r\n                    isEnable: fcsListIdx != -1,\r\n                    callback: () => {\r\n                        store.system.dialog = <NameDefDialog.Component\r\n                            targetSeq={projects[fcsListIdx].seq}\r\n                        />;\r\n                        setStore({ ...store });\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Delete',\r\n                    width: 110,\r\n                    isEnable: fcsListIdx != -1,\r\n                    callback: () => {\r\n                        deleteProject(projects[fcsListIdx].seq).then(() => {\r\n                            store.system.dialog = <ConfirmDialog.Component\r\n                                message=\"Delete project succesful!\"\r\n                            />;\r\n                            projects.splice(fcsListIdx, 1);\r\n                            setFcsListIdx(fcsListIdx - 1);\r\n                            setStore({ ...store });\r\n                        });\r\n                    }\r\n                },\r\n            ]}\r\n        />\r\n        <_ListDiv>\r\n            {listItemJsx}\r\n        </_ListDiv>\r\n    </_ContDiv>);\r\n\r\n    const localJsx = (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Load',\r\n                    width: 100,\r\n                    isEnable: !hasData,\r\n                    callback: () => { DataUtil.loadFile(store, setStore) }\r\n                },\r\n                {\r\n                    label: 'Disconnect',\r\n                    width: 160,\r\n                    isEnable: store.fileHandle != null,\r\n                    callback: () => {\r\n                        store.fileHandle = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                },\r\n            ]}\r\n        />\r\n    </>);\r\n\r\n    return (<_Wrap>\r\n        <_HeaderDiv>\r\n            <FormUtil.ButtonRecord\r\n                align=\"left\"\r\n                buttons={[\r\n                    {\r\n                        label: 'New Project',\r\n                        isEnable: !hasData,\r\n                        callback: () => {\r\n\r\n                            store.system.dialog = store.env.isEditLibrary ? <NewProjectDialog.Component /> : <NewProjectDialogStoryOnly.Component />;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Clear',\r\n                        width: 100,\r\n                        isEnable: hasData,\r\n                        callback: () => {\r\n                            store.libraryData = null;\r\n                            store.storyData = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                ]}\r\n            />\r\n        </_HeaderDiv>\r\n        <_BodyDiv>\r\n            <_LeftDiv isEnable={true}>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'Cloud', enable: true, cont: cloudJsx },\r\n                        { name: 'Local', enable: true, cont: localJsx },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_LeftDiv>\r\n            <_RighttDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getNewSaveButton(),\r\n                        getOverwriteButton()\r\n                    ]}\r\n                />\r\n                <FormUtil.BorderPanel\r\n                    title=\"Project\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Type\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={getProjectType()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Private\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : privateCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Release\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : releaseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Logic\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Elements\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : elementSize.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Hash\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    // width={340}\r\n                                    isRecordItem\r\n                                    value={!hasData ? '-' : DataUtil.getSHA256Hash(JSON.stringify(store.libraryData))}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Fuses\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : fuseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n                {/* <FormUtil.BorderPanel\r\n                    title=\"File\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Type\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={getProjectType()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                /> */}\r\n            </_RighttDiv>\r\n        </_BodyDiv>\r\n\r\n    </_Wrap >);\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst updateProjectSource = async (seq: number, type: string, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set type = '${type}', source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from prjcttbl where seq = ${seq};`)\r\n}\r\n\r\nconst HEADER_WIDTH = 40;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    background-color: #ebebeb30;\r\n`;\r\n\r\nconst _HeaderDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_WIDTH}px;\r\n    background-color: #d1f5f32f;\r\n`;\r\n\r\nconst _BodyDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_WIDTH}px);\r\n    background-color: #221a212c;\r\n`;\r\n\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #ffe3fb53; */\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ContDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 38px);\r\n    box-sizing: border-box;\r\n    background-color: #f0ecd43d;\r\n    border: 1px solid #002c8a;\r\n    border-radius: 4px;\r\n`;\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    type: ProjectType | '';\r\n}>`\r\n    color: #0000006d;\r\n    ${props => props.type === 'library' ? css`color: #b90000be;` : ''}\r\n    ${props => props.type === 'story' ? css`color: #003bb9bd;` : ''}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\nconst _RighttDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #cbf7cd2d;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane, TabElements } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport LogicMainteTab from \"./factory/logicMainteTab\";\r\nimport StoryTab from \"./launcher/storyTab\";\r\nimport ManageTab from \"./manage/manageTab\";\r\n\r\nconst CreateChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const getProjectType = () => {\r\n        let str = '-';\r\n        if (store.libraryData != null) str = 'library';\r\n        if (store.storyData != null) str = 'scenario';\r\n        return str;\r\n    };\r\n    const projectType = getProjectType();\r\n\r\n    const tabElements: TabElements[] = [];\r\n    tabElements.push({ name: 'Manage', enable: true, cont: <ManageTab /> });\r\n    tabElements.push({ name: 'Story', enable: projectType === 'scenario', cont: projectType === 'scenario' ? <StoryTab /> : <></> });\r\n    if (store.env.isEditLibrary) {\r\n        tabElements.push({ name: 'Library', enable: projectType === 'library', cont: <LogicMainteTab /> });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={tabElements}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CreateChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport TreeUtil from \"../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../create/factory/util/logicUtil\";\r\nimport PreviewLogicFrame from \"../create/preview/previewLogicFrame\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    isOpen: boolean;\r\n    seedList: SeedProps[];\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\n\r\nconst PublishFrame = (props: {\r\n    setLibCnt: (artsCnt: number) => void;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [libList, setLibList] = useState<LibProps[]>([]);\r\n\r\n    useEffect(() => {\r\n        findAllReleaseProjectList().then((resList) => {\r\n            const libList: LibProps[] = [];\r\n            resList.forEach(res => {\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const rootData = JSON.parse(DataUtil.unZip(res.source)) as LogicUtil.WrapElement;\r\n                const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                const seedList: SeedProps[] = seedMng.defs\r\n                    .filter(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        return seed.permit === 'release';\r\n                    })\r\n                    .map(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                        const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                        return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                    });\r\n                libList.push({\r\n                    name, ownerId, lastmod, rootData, seedList, isOpen: false\r\n                });\r\n            });\r\n            setLibList(libList);\r\n            props.setLibCnt(libList.length);\r\n        });\r\n    }, []);\r\n\r\n    const download = (plainData: string) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        window.showSaveFilePicker(options).then((handle) => {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await handle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"Successfully download!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        }).catch(() => {\r\n            console.log('キャンセルされました');\r\n        });\r\n    }\r\n\r\n    const libListJsx = libList\r\n        .filter(lib => lib.seedList.length > 0).map((lib, i) => {\r\n            const dispCnt = !lib.isOpen ? 0 : lib.seedList.length;\r\n            return (<_Item key={i} count={dispCnt}>\r\n                <_Header onClick={() => {\r\n                    // window.open(DataUtil.getPreviewURL(score.seq), '_blank');\r\n                }}>\r\n                    <_Owner>{`${lib.ownerId}`}</_Owner>\r\n                    <_CName onClick={() => {\r\n                        download(JSON.stringify(lib.rootData));\r\n                    }}>{`${lib.name}`}</_CName><_CDate>{lib.lastmod}</_CDate>\r\n                </_Header>\r\n                <_DetailMain count={dispCnt}>\r\n                    {lib.seedList.map((seed, j) => {\r\n                        let labelName = seed.name;\r\n                        if (seed.disp != undefined) labelName = seed.disp;\r\n                        return (\r\n                            <_SeedItemFrame key={j} onClick={() => {\r\n                                store.system.dialog = (\r\n                                    <PreviewLogicFrame.Component\r\n                                        master={seed.master}\r\n                                        rootData={lib.rootData}\r\n                                        closeButtonAction={() => {\r\n                                            store.system.dialog = null;\r\n                                            setStore({ ...store });\r\n                                        }}\r\n                                    />\r\n                                );\r\n                                setStore({ ...store });\r\n                            }}>\r\n                                <_SeedItemInner>\r\n                                    <_SeedName>{labelName}</_SeedName>\r\n                                    <_SeedArgCnt>{` [${seed.argCount} arguments]`}</_SeedArgCnt>\r\n                                </_SeedItemInner>\r\n                            </_SeedItemFrame>\r\n                        );\r\n                    })}\r\n                </_DetailMain>\r\n                <_DetailOpen onClick={() => {\r\n                    libList[i].isOpen = !libList[i].isOpen;\r\n                    setLibList(libList.slice());\r\n                }}>\r\n                    <_CSummary>{` ${lib.seedList.length} seeds ▼`}</_CSummary>\r\n                </_DetailOpen>\r\n            </_Item>);\r\n        });\r\n\r\n    return (\r\n        <_ListFrame>{libListJsx}</_ListFrame>\r\n    );\r\n}\r\n\r\nexport default PublishFrame;\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #6d7a86;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst SEED_HEIGTH = 40;\r\nconst _Item = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${props => (props.count > 0 ? 8 : 0) + 89 + props.count * SEED_HEIGTH}px;\r\n    /* border-bottom: 1px solid #262626; */\r\n    /* background-color: #2e2e2e; */\r\n    /* background: linear-gradient(to bottom, transparent, #4f4f4f); */\r\n    margin: 2px 0 0 0;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    } */\r\n    transition: height 200ms;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100%);\r\n    height: 60px;\r\n    /* background-color: #c9e3df; */\r\n    background: linear-gradient(to bottom, #b9b9b9, #e2e2e2, #b9b9b9);\r\n    /* margin: 4px 0 0 4px; */\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff);\r\n    } */\r\n`;\r\nconst _DetailMain = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 40px);\r\n    height: ${props => (props.count > 0 ? 8 : 0) + props.count * SEED_HEIGTH}px;\r\n    background-color: #c7c7c7;\r\n    border-radius: 0 0 2px 2px;\r\n    margin: 0 0 0 20px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    transition: height 200ms;\r\n    overflow-y: hidden;\r\n`;\r\nconst _DetailOpen = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 60px);\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    margin: 0 0 0 30px;\r\n    background-color: #b1b1b1;\r\n    /* border-radius: 0 0 2px 2px; */\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    clip-path: polygon(7.5% 100%, 0% 0%, 100% 0%, 92.5% 100%);\r\n    \r\n    &:hover {\r\n        background-color: #c6d1a1;\r\n    }\r\n`;\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    \r\n    &:hover {\r\n        color: #db3333;\r\n    }\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CSummary = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 25px;\r\n    font-size: 22px;\r\n    line-height: 22px;\r\n    font-weight: 600;\r\n    color: #fffffad6;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _SeedItemFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${SEED_HEIGTH}px;\r\n    /* background-color: #a3b9c0; */\r\n    margin: 2px 0 0 0;\r\n    /* padding-left: 4px; */\r\n    text-align: left;\r\n`;\r\nconst _SeedItemInner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 2px;\r\n    border: 1px solid #0000002e;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    line-height: 29px;\r\n    font-weight: 600;\r\n    padding: 0 0 0 5px;\r\n    &:hover {\r\n        background-color: #bbd4dc;\r\n    }\r\n`;\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #000f74;\r\n`;\r\nconst _SeedArgCnt = styled.span<{\r\n}>`\r\n    color: #c7020265;\r\n`;","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\ntype NotePorp = {\r\n    version: string;\r\n    date: string;\r\n    note: string;\r\n}\r\n\r\nconst ReleaseNote = () => {\r\n    const { store } = useContext(GlobalContext);\r\n\r\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\r\n    useEffect(() => {\r\n        fetch('assets/release_note.json')\r\n            .then(response => response.json()) // (2) レスポンスデータを取得\r\n            .then(json => { // (3)レスポンスデータを処理\r\n                const list = json as NotePorp[];\r\n                setJsx(list.map((item, i) => {\r\n                    const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n                    return (\r\n                        <_Item key={i}>\r\n                            <_Header>v{item.version} ({item.date})</_Header>\r\n                            <_Detail>{record}</_Detail>\r\n                        </_Item>\r\n                    );\r\n                }));\r\n            });\r\n    }, []);\r\n    return (<_ListFrame>{jsx}</_ListFrame>);\r\n}\r\n\r\nexport default ReleaseNote;\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    /* height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px); */\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #bfcace;\r\n    border: 1px solid #9b9b9b;\r\n    border-radius: 6px;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    font-weight: 600;\r\n    /* background-color: #8bdbf8; */\r\n    color: #494975;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    /* background-color: #dafce4; */\r\n    color: #754949;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PublishFrame from \"./publishFrame\";\r\nimport ReleaseNote from \"./releaseNote\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [userCount, setUserCount] = useState(0);\r\n    const [artsCnt, setArtsCnt] = useState(0);\r\n\r\n    useEffect(() => {\r\n        countUsers().then(cnt => {\r\n            setUserCount(cnt);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <ReleaseNote />\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{artsCnt} libruary have been published.</_MessageRecord>\r\n            <PublishFrame setLibCnt={setArtsCnt}/>\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeChannel;\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nexport const findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT seq, (select id from user_tbl where seq = prj.seq) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { VscGitPullRequestCreate } from 'react-icons/vsc';\r\nimport CreateChannel from \"../create/createChannel\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <HomeChannel /> },\r\n                    { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <CreateChannel /> },\r\n                ]}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport CanvasUtil from '../../utils/canvasUtil';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <_Logo src={logo} />\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2023 Pixel Flare All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#858892, #8e99b6);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    /* color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-shadow: 1px 2px 22px #0000003d; */\r\n    text-align: center;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    /* & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    } */\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #ebe7ab;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n    /* height: 200%; */\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { useState } from \"react\";\r\nimport { initialStore } from \"../../redux/store/store\";\r\nimport styled from \"styled-components\";\r\nimport GloballDialog from \"../dialog/globalDialog\";\r\nimport TotalHeader from \"./totalHeader\";\r\nimport MainFrame from \"./mainFrame\";\r\nimport ModeSelectDialog from \"./modeSelectDialog\";\r\nimport Splash from \"./splash\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\n\r\nconst PCRoot = () => {\r\n    const [store, setStore] = useState(initialStore);\r\n\r\n    const splashJsx = !store.system.isSplash ? <></> : (\r\n        <Splash\r\n            remove={() => {\r\n                store.system.isSplash = false;\r\n                // store.system.dialog = <ModeSelectDialog />\r\n                setStore({ ...store });\r\n            }}\r\n        />\r\n    );\r\n\r\n    return (<>\r\n        {splashJsx}\r\n        < _Wrap >\r\n            <GloballDialog />\r\n            <TotalHeader />\r\n            <_MainDiv>\r\n                <MainFrame />\r\n            </_MainDiv>\r\n        </_Wrap >\r\n    </>);\r\n}\r\n\r\nexport default PCRoot;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    min-width: 1200px;\r\n    min-height: 900px;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #a3c1c7;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import PublishFrame from \"../../contents/home/publishFrame\";\r\n\r\nconst SPHomeChannel = () => {\r\n\r\n    return (<PublishFrame setLibCnt={()=>{}}/>);\r\n}\r\n\r\nexport default SPHomeChannel;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\n\r\nimport { AiOutlineInstagram, AiOutlineTwitter, AiOutlineMail, AiOutlineFacebook } from \"react-icons/ai\";\r\nimport { BsLine } from \"react-icons/bs\";\r\n\r\nimport {\r\n    EmailShareButton,\r\n    FacebookShareButton,\r\n    HatenaShareButton,\r\n    InstapaperShareButton,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    LivejournalShareButton,\r\n    MailruShareButton,\r\n    OKShareButton,\r\n    PinterestShareButton,\r\n    PocketShareButton,\r\n    RedditShareButton,\r\n    TelegramShareButton,\r\n    TumblrShareButton,\r\n    TwitterShareButton,\r\n    ViberShareButton,\r\n    VKShareButton,\r\n    WhatsappShareButton,\r\n    WorkplaceShareButton\r\n} from \"react-share\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\n\r\n\r\nnamespace ShareDialog {\r\n\r\n    export const Component = (props: {\r\n        hash: string;\r\n    }) => {\r\n        const width = 500;\r\n        const height = 326;\r\n\r\n        const getInitialText = () => {\r\n            let str = '';\r\n            str += 'I created digital art with the Pixel Flare!\\n\\n';\r\n            return str;\r\n        }\r\n\r\n        const getURL = () => `${DataUtil.APP_SERVER_DOMAIN}/#/story?v=${props.hash}`;\r\n\r\n        const [text, setText] = useState<FormUtil.CheckableValue>({ value: getInitialText(), errors: [] });\r\n\r\n        const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Share your digital art!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <_TextAreaDiv><FormUtil.TextArea\r\n                    checkable={text}\r\n                    setCheckable={setText}\r\n                /></_TextAreaDiv>\r\n                <_UrlDiv value={getURL()} readOnly/>\r\n                <_Record>\r\n                    <InstapaperShareButton\r\n                        url={getURL()}\r\n                        title={text.value}\r\n                        children={<_SnsIconFrame><AiOutlineInstagram /></_SnsIconFrame>}\r\n                    />\r\n                    <TwitterShareButton\r\n                        url={getURL()}\r\n                        title={text.value}\r\n                        children={<_SnsIconFrame><AiOutlineTwitter /></_SnsIconFrame>}\r\n                    />\r\n                    <MailruShareButton\r\n                        url={getURL()}\r\n                        title={text.value}\r\n                        children={<_SnsIconFrame><AiOutlineMail /></_SnsIconFrame>}\r\n                    />\r\n                    <FacebookShareButton\r\n                        url={getURL()}\r\n                        title={text.value}\r\n                        children={<_SnsIconFrame><AiOutlineFacebook /></_SnsIconFrame>}\r\n                    />\r\n                    <LineShareButton\r\n                        url={getURL()}\r\n                        title={text.value}\r\n                        about=\"aabb\"\r\n                        children={<_SnsIconFrame><BsLine /></_SnsIconFrame>}\r\n                    />\r\n                </_Record>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShareDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    margin: 8px 0 0 0;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextAreaDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 4px;\r\n    width: calc(100% - 8px);\r\n    height: 120px;\r\n    margin: 10px 0 0 4px;\r\n    border: 2px solid #3d3d3d;\r\n    box-sizing: border-box;\r\n`;\r\nconst _UrlDiv = styled.textarea<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 4px;\r\n    width: calc(100% - 8px);\r\n    height: 60px;\r\n    margin: 4px 0 0 4px;\r\n    border: 1px solid #3d3d3d;\r\n   background-color: #ebf5f557;\r\n   /* background-color: transparent; */\r\n   outline: none;\r\n   font-size: 18px;\r\n   color: #0041a3;\r\n   resize: none;\r\n   box-sizing: border-box;\r\n`;\r\n\r\nconst _SnsIconFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 8px;\r\n    width: 60px;\r\n    height: 60px;\r\n    border: 2px solid #555555;\r\n    background-color: #f0f0f0e1;\r\n    box-sizing: border-box;\r\n    font-size: 50px;\r\n    color: #666;\r\n    margin: 0 2px;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../contents/entry/systemEntry\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { ProjectType } from \"../../redux/store/store\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../../contents/dialog/confirmDialog\";\r\nimport NewProjectDialogStoryOnly from \"../../contents/create/manage/newProjectDialogStoryOnly\";\r\nimport NameDefDialog from \"../../contents/create/manage/nameDefDialog\";\r\nimport StoreCloud from \"../../redux/store/storeCloud\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport { BsFillShareFill } from 'react-icons/bs';\r\nimport { VscPreview } from \"react-icons/vsc\";\r\nimport { FiUpload, FiDownload } from \"react-icons/fi\";\r\nimport { IoCreateOutline } from \"react-icons/io5\";\r\nimport { FaRegSave } from \"react-icons/fa\";\r\nimport { MdClear, MdOutlineDriveFileRenameOutline } from \"react-icons/md\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\n\r\nimport ShareDialog from \"./etc/shareDialog\";\r\n\r\nconst SPManageFrame = (props: {\r\n    setEdit: (isEdit: boolean) => void;\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n    const hasData = store.libraryData != null;\r\n    const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n    useEffect(() => {\r\n        store.system.logoutActions.push(() => {\r\n            setFcsListIdx(-1);\r\n        });\r\n        // dispatcher.updateStore();\r\n    }, []);\r\n\r\n    const getData = () => {\r\n        if (!hasData) return null;\r\n        const data: StoryUtil.ScenarioFileProps = {\r\n            libraryData: store.libraryData as LogicUtil.WrapElement,\r\n            scenarioData: store.storyData as StoryUtil.StoryData\r\n        };\r\n        return data;\r\n    }\r\n\r\n    const listItemJsx = store.cloud == null ? [] : store.cloud.projects.map((project, i) => {\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    setFcsListIdx(i);\r\n                    console.log(DataUtil.getHashedFromProjectSeq(project.seq));\r\n                }}\r\n                onContextMenu={() => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={DataUtil.getDirectUrl(project.type, project.seq)}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }}\r\n            >\r\n                {/* <_Status type={project.type}>[{project.type}] </_Status> */}\r\n                <_Name>{project.name}</_Name>\r\n                {/* <LineShareButton\r\n                    url=\"hoge\"\r\n                    children={<_Icon><BsFillShareFill /></_Icon>}\r\n                /> */}\r\n                {/* <_Date> -{item.lastmod}</_Date> */}\r\n                <_Share\r\n                    onClick={() => {\r\n                        store.system.dialog = <ShareDialog.Component\r\n                            hash={DataUtil.getHashedFromProjectSeq(project.seq)}\r\n                        />;\r\n                        store.system.canDialogClose = true;\r\n                        dispatcher.updateStore();\r\n                    }}\r\n                ><_Icon><BsFillShareFill /></_Icon></_Share>\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを新規アップロードする\r\n     */\r\n    const uploadCloud = () => {\r\n        const source = DataUtil.gZip(JSON.stringify(getData()));\r\n        store.system.dialog = <NameDefDialog.Component\r\n            targetSeq={-1}\r\n            type={'story'}\r\n            source={source}\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを上書き更新する\r\n     */\r\n    const overwriteCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.gZip(JSON.stringify(getData()));\r\n        updateProjectSource(curPrj.seq, 'story', source).then(() => {\r\n            curPrj.source = source;\r\n            curPrj.type = 'story';\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Update project succesful!\"\r\n            />;\r\n            setStore({ ...store });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 選択中のクラウド上のファイルを読み込む\r\n     */\r\n    const cloneCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.unZip(curPrj.source);\r\n        const data = JSON.parse(source);\r\n        switch (curPrj.type) {\r\n            case 'library': {\r\n                store.libraryData = data;\r\n            } break;\r\n            case 'story': {\r\n                const scenarioFileProps = data as StoryUtil.ScenarioFileProps;\r\n                store.libraryData = scenarioFileProps.libraryData;\r\n                store.storyData = scenarioFileProps.scenarioData;\r\n            } break;\r\n        }\r\n        store.system.dialog = <ConfirmDialog.Component\r\n            message=\"Clone project succesful!\"\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"left\"\r\n            isIconButton\r\n            buttons={[\r\n                !hasData ? {\r\n                    label: 'New Project',\r\n                    width: 200,\r\n                    icon: <IoCreateOutline />,\r\n                    callback: () => {\r\n                        store.system.dialog = <NewProjectDialogStoryOnly.Component\r\n                            extendAction={() => { props.setEdit(true); }}\r\n                        />;\r\n                        setStore({ ...store });\r\n                    }\r\n                } : {\r\n                    label: 'Clear',\r\n                    width: 200,\r\n                    icon: <MdClear />,\r\n                    callback: () => {\r\n                        store.libraryData = null;\r\n                        store.storyData = null;\r\n                        store.fuseCacheList.length = 0;\r\n                        dispatcher.updateStore();\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Project\"\r\n            height={198}\r\n            // isDisable={!hasData}\r\n            isEnable={hasData}\r\n            backgroundColor=\"#ffffff26\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    buttons={[\r\n                        {\r\n                            label: 'Upload',\r\n                            width: 210,\r\n                            icon: <FiUpload />,\r\n                            isEnable: hasData && store.cloud != null,\r\n                            callback: uploadCloud\r\n                        },\r\n                        {\r\n                            label: 'Overwrite',\r\n                            width: 210,\r\n                            icon: <FaRegSave />,\r\n                            isEnable: fcsListIdx != -1 && hasData,\r\n                            callback: overwriteCloudFile\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Hash\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            // width={340}\r\n                            isRecordItem\r\n                            value={!hasData ? '-' : DataUtil.getSHA256Hash(JSON.stringify(store.libraryData))}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Fuses\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            value={!hasData ? '-' : '0'}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Size\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            value={!hasData ? '-' : '0'}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Cloud\"\r\n            height={434}\r\n            // isDisable={store.cloud == null}\r\n            isEnable={store.cloud != null}\r\n            backgroundColor=\"#ffffff26\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    buttons={[\r\n                        {\r\n                            label: 'Load',\r\n                            width: 140,\r\n                            icon: <FiDownload />,\r\n                            isEnable: !hasData && fcsListIdx !== -1 && projects[fcsListIdx].source !== '',\r\n                            callback: cloneCloudFile\r\n                        },\r\n                        {\r\n                            label: 'Rename',\r\n                            width: 140,\r\n                            icon: <MdOutlineDriveFileRenameOutline />,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                store.system.dialog = <NameDefDialog.Component\r\n                                    targetSeq={projects[fcsListIdx].seq}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Delete',\r\n                            width: 140,\r\n                            icon: <RiDeleteBinLine />,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                deleteProject(projects[fcsListIdx].seq).then(() => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Delete project succesful!\"\r\n                                    />;\r\n                                    projects.splice(fcsListIdx, 1);\r\n                                    setFcsListIdx(fcsListIdx - 1);\r\n                                    setStore({ ...store });\r\n                                });\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {listItemJsx}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default SPManageFrame;\r\n\r\nconst updateProjectSource = async (seq: number, type: string, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set type = '${type}', source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from prjcttbl where seq = ${seq};`)\r\n}\r\n\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 38px);\r\n    box-sizing: border-box;\r\n    background-color: #f0ecd43d;\r\n    border: 1px solid #002c8a;\r\n    border-radius: 4px;\r\n`;\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    type: ProjectType | '';\r\n}>`\r\n    color: #0000006d;\r\n    ${props => props.type === 'library' ? css`color: #b90000be;` : ''}\r\n    ${props => props.type === 'story' ? css`color: #003bb9bd;` : ''}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\n\r\nconst _Share = styled.span<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 1px;\r\n    /* background-color: #00eb6a76; */\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 30px;\r\n    /* background-color: #eb000076; */\r\n    font-size: 20px;\r\n    color: #757575;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport StoryUtil from \"../../../contents/create/launcher/util/storyUtil\";\r\nimport { FuseBean } from \"../../../contents/create/launcher/storyTab\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport LogicUtil from \"../../../contents/create/factory/util/logicUtil\";\r\nimport LogicFormUtil from \"../../../contents/create/factory/util/logicFormUtil\";\r\nimport LogicElementUtil from \"../../../contents/create/factory/util/logicElementUtil\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport BuildUtil from \"../../../contents/create/preview/buildUtil\";\r\nimport { AiOutlineEnter } from \"react-icons/ai\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\n\r\nconst FuseMainteDialog = (props: {\r\n    focus: number;\r\n    seedList: FuseBean[];\r\n    // isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: (frame: number, seedId: string, values: number[]) => void;\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const [newFrame, setNewFrame] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n    const [seed, setSeed] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [preset, setPreset] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const isInputOK = seed.errors.length === 0 && newFrame.errors.length === 0 && formList.find(form => form.errors.length > 0) == undefined;\r\n\r\n    const mapping = () => {\r\n        if (props.focus === -1) return;\r\n        const curFuse = fuseList[props.focus];\r\n        setNewFrame({ ...newFrame, value: curFuse.frame.toString() });\r\n        setSeed({ ...seed, value: curFuse.seedId.toString() });\r\n        setFormList(curFuse.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    }\r\n\r\n    const initFormList = (seedId: string) => {\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seedId;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n        }\r\n        setFormList(argumentList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }\r\n\r\n    const createSeq = () => {\r\n        return fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if(props.focus !== -1) mapping();\r\n    }, []);\r\n\r\n    const propertiesFormJsx = useMemo(() => {\r\n        if (seed.value === '') return <></>;\r\n\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        let presetList: LogicUtil.NodeSampleItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seed.value;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n            formgrpList = activeSeed.formgrps;\r\n            presetList = activeSeed.presets;\r\n        }\r\n        return (<>\r\n            <FormUtil.BorderPanel\r\n                title=\"Preset\"\r\n                innerJsx={<FormUtil.Record\r\n                    jsx={<>\r\n                        <FormUtil.Combobox\r\n                            width={250}\r\n                            checkable={preset}\r\n                            setCheckable={setPreset}\r\n                            headBlank\r\n                            list={presetList.map((sample, i) => {\r\n                                return {\r\n                                    labelText: sample.name,\r\n                                    value: i.toString()\r\n                                }\r\n                            })}\r\n                        />\r\n                        <FormUtil.ButtonItem\r\n                            button={{\r\n                                label: 'Apply',\r\n                                isEnable: preset.value !== '',\r\n                                callback: () => {\r\n                                    const selectedIndex = Number(preset.value);\r\n                                    const values = presetList[selectedIndex].values;\r\n                                    values.forEach((value, i) => {\r\n                                        formList[i].value = value.toString();\r\n                                    });\r\n                                    setFormList(formList.slice());\r\n                                }\r\n                            }}\r\n                        />\r\n                    </>}\r\n                />}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Properties\"\r\n                innerJsx={<>{\r\n                    LogicFormUtil.buildPreviewForms(\r\n                        false, argumentList, formgrpList, formList, setFormList\r\n                    )\r\n                }</>}\r\n            />\r\n        </>);\r\n    }, [preset, formList]);\r\n\r\n    return (\r\n        <_Frame\r\n            width={600}\r\n            height={872}\r\n        >\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        icon: <MdCancelPresentation />,\r\n                        width: 120,\r\n                        // isEnable: props.isModify,\r\n                        callback: () => {\r\n                            props.cancelAction();\r\n                            // setPreset({ ...preset, value: '' });\r\n                            // mapping();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Regist',\r\n                        icon: <AiOutlineEnter />,\r\n                        width: 120,\r\n                        isEnable: isInputOK,\r\n                        callback: () => {\r\n\r\n\r\n                            let fuse: StoryUtil.Fuse | null = null;\r\n                            let cache: StoryUtil.Cache | null = null;\r\n                            if (props.focus === -1) {\r\n                                fuse = { seq: createSeq(), frame: 0, seedId: '', values: [] };\r\n                                fuseList.push(fuse);\r\n\r\n                                cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n                                store.fuseCacheList.push(cache);\r\n                            } else {\r\n                                fuse = fuseList[props.focus];\r\n                                const fuseSeq = fuse.seq;\r\n                                cache = store.fuseCacheList.find(cache => cache.seq === fuseSeq) as StoryUtil.Cache;\r\n                            }\r\n\r\n                            fuse.frame = Number(newFrame.value);\r\n                            fuse.seedId = seed.value;\r\n                            fuse.values = formList.map(form => form.value);\r\n                            dispatcher.story.updateCache(fuse, cache);\r\n                            (store.storyData as StoryUtil.StoryData).fuseList = fuseList.slice();\r\n                            store.system.dialog = null;\r\n                            dispatcher.updateStore();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Base\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isNumber\r\n                                checkable={newFrame}\r\n                                setCheckable={setNewFrame}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Seed\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                checkable={seed}\r\n                                setCheckable={(checkable) => {\r\n                                    initFormList(checkable.value);\r\n                                    setSeed({ ...checkable });\r\n                                }}\r\n                                list={props.seedList.map(seed => {\r\n                                    return { value: seed.name, labelText: seed.disp ?? seed.name }\r\n                                })}\r\n                                headBlank\r\n                                width={250}\r\n                                validates={\r\n                                    [\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n            {propertiesFormJsx}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default FuseMainteDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #d4dacfe6;\r\n    border: 1px solid #474747;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n    overflow-y: auto;\r\n`;","import styled, { css, keyframes } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport StoryUtil from \"../../../contents/create/launcher/util/storyUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport FuseMainteDialog from \"./fuseMainteDialog\";\r\nimport { FuseBean } from \"../../../contents/create/launcher/storyTab\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\nimport { GrView } from \"react-icons/gr\";\r\nimport { ImCopy } from \"react-icons/im\";\r\n\r\nconst COL_WIDTH_LIST = [48, 252, 150];\r\n\r\nconst OPTION_BUTTON_WIDTH = 112;\r\n\r\nconst FuseList = (props: {\r\n    focus: number;\r\n    setFocus: (focus: number) => void;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const createSeq = () => {\r\n        return storyData.fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    const recordJsxList = useMemo(() => {\r\n        return storyData.fuseList.map((fuse, i) => {\r\n\r\n            const cache = store.fuseCacheList.find(cache => cache.seq === fuse.seq);\r\n\r\n            let thumbJsx: JSX.Element[] = [];\r\n            if (cache != undefined) {\r\n                thumbJsx = cache.thumbList.slice(0, 3).map((thumb, j) => {\r\n                    const imgJsx = thumb == undefined ? <></> : <_Img src={thumb.url} />;\r\n                    return (\r\n                        <_SampleDiv key={j}>\r\n                            {/* <_SampleName>{thumb.name}</_SampleName> */}\r\n                            <_CanvasDiv>\r\n                                {imgJsx}\r\n                            </_CanvasDiv>\r\n                        </_SampleDiv>\r\n                    );\r\n                });\r\n            };\r\n            const isFocus = props.focus === i;\r\n            return (<_RecordWrap key={i}\r\n                isFocus={isFocus}\r\n            >\r\n                <_RecordCont\r\n                    onClick={() => {\r\n                        if(props.focus !== i) {\r\n                            props.setFocus(i);\r\n                        } else if(props.focus === i) {\r\n                            props.setFocus(-1);\r\n                        }\r\n                    }}\r\n                >\r\n                    <_ColWrap width={COL_WIDTH_LIST[0]}><_TextItem>{fuse.frame}</_TextItem></_ColWrap>\r\n                    <_ColWrap width={COL_WIDTH_LIST[1]}>\r\n                        <_TextItem>[{fuse.seq}] {fuse.seedId}</_TextItem>\r\n                        {/* <_FrameForm\r\n                            type=\"number\"\r\n                            isEditable={isFocus}\r\n                            min={0} max={storyData.limitFrame}\r\n                            step={1}\r\n                            value={storyData.fuseList[i].frame}\r\n                            onChange={(e) => {\r\n                                storyData.fuseList[i].frame = e.currentTarget.valueAsNumber;\r\n                                storyData.fuseList = storyData.fuseList.slice();\r\n                                setStore({ ...store });\r\n                            }}\r\n                        />\r\n                        <_FrameSlider\r\n                            type=\"range\"\r\n                            isEditable={isFocus}\r\n                            min={0} max={storyData.limitFrame}\r\n                            step={1}\r\n                            value={storyData.fuseList[i].frame}\r\n                            onChange={(e) => {\r\n                                storyData.fuseList[i].frame = e.currentTarget.valueAsNumber;\r\n                                storyData.fuseList = storyData.fuseList.slice();\r\n                                setStore({ ...store });\r\n                            }}\r\n                        /> */}\r\n                    </_ColWrap>\r\n                    <_ColWrap width={COL_WIDTH_LIST[2]}><_ImageItem>{thumbJsx}</_ImageItem></_ColWrap>\r\n                </_RecordCont>\r\n                <_Option isFocus={isFocus}>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        isIconButton\r\n                        buttons={[\r\n                            {\r\n                                label: 'Edit',\r\n                                icon: <FiEdit />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                // isEnable: props.isModify,\r\n                                callback: () => {\r\n                                    store.system.dialog = <FuseMainteDialog\r\n                                        focus={props.focus}\r\n                                        seedList={props.seedList}\r\n                                        cancelAction={() => {\r\n                                        }}\r\n                                        modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                        }}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Copy',\r\n                                icon: <ImCopy />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    const cloneFuse = JSON.parse(JSON.stringify(storyData.fuseList[props.focus])) as StoryUtil.Fuse;\r\n                                    cloneFuse.seq = createSeq();\r\n                                    const focusSeq = storyData.fuseList[props.focus].seq;\r\n                                    const index = store.fuseCacheList.findIndex(cache => cache.seq === focusSeq);\r\n                                    const cloneCache = JSON.parse(JSON.stringify(store.fuseCacheList[index])) as StoryUtil.Cache;\r\n                                    cloneCache.seq = cloneFuse.seq;\r\n                                    storyData.fuseList.push(cloneFuse);\r\n                                    storyData.fuseList = storyData.fuseList.slice();\r\n                                    store.fuseCacheList.push(cloneCache);\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Delete',\r\n                                icon: <RiDeleteBinLine />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    const focusSeq = storyData.fuseList[props.focus].seq;\r\n                                    storyData.fuseList.splice(props.focus, 1);\r\n                                    const index = store.fuseCacheList.findIndex(cache => cache.seq === focusSeq);\r\n                                    store.fuseCacheList.splice(index, 1);\r\n                                    setStore({ ...store });\r\n                                    props.setFocus(props.focus - 1);\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Test',\r\n                                icon: <GrView />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    dispatcher.story.openPreviewSoloDialog(props.focus);\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_Option>\r\n            </_RecordWrap>);\r\n        });\r\n    }, [storyData.fuseList, props.focus]);\r\n\r\n    return (<>\r\n        <_HeaderDiv>\r\n            <_HeaderItem width={COL_WIDTH_LIST[0]}>F</_HeaderItem>\r\n            <_HeaderItem width={COL_WIDTH_LIST[1]}>[Seq] Seed</_HeaderItem>\r\n            <_HeaderItem width={COL_WIDTH_LIST[2]}>Snapshot</_HeaderItem>\r\n        </_HeaderDiv>\r\n        <_BodyScrollDiv>\r\n            {recordJsxList}\r\n        </_BodyScrollDiv>\r\n    </>);\r\n}\r\n\r\nexport default FuseList;\r\n\r\nconst _HeaderDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #0c0c0c44;\r\n  /* background: linear-gradient(to bottom, #99a5b9, #c3cee4, #99a5b9); */\r\n  width: calc(100% - 30px);\r\n  height: 36px;\r\n  margin: 0 0 0 5px;\r\n  padding: 3px;\r\n  box-sizing: border-box;\r\n  border-radius: 2px 2px 0 0;\r\n`;\r\n\r\nconst _HeaderItem = styled.div<{\r\n    width: number;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #feffff36;\r\n  width: ${props => props.width}px;\r\n  height: 30px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  font-size: 24px;\r\n  line-height: 26px;\r\n  font-weight: 600;\r\n  font-style: italic;\r\n  color: #ffffff;\r\n  text-align: center;\r\n  margin: 0 2px;\r\n`;\r\n\r\nconst _BodyScrollDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #4d6e854e;\r\n  width: calc(100% - 10px);\r\n  height: calc(100% - 36px);\r\n  margin: 0 0 0 5px;\r\n  overflow-y: auto;\r\n`;\r\nconst fadeIn = keyframes`\r\n  from {\r\n    background-color: #bb6f6fa0;\r\n  }\r\n  to {\r\n    background-color: #fabebe58;\r\n  }\r\n`;\r\nconst _RecordWrap = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffffff37;\r\n  ${props => !props.isFocus ? '' : css`\r\n      animation: ${fadeIn} 1.2s linear infinite;\r\n  `}\r\n  width: 100%;\r\n  margin: 1px 0 0 0;\r\n  border-radius: 0 0 8px 8px;\r\n`;\r\nconst _RecordCont = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 20px); */\r\n  width: 100%;\r\n  height: 56px;\r\n  margin: 1px 0 0 0;\r\n  padding: 3px;\r\n  box-sizing: border-box;\r\n`;\r\nconst _Option = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #ebffe6f9; */\r\n  width: 100%;\r\n  height: ${props => props.isFocus ? '68' : '0'}px;\r\n  /* height: 0; */\r\n  margin: 1px 0 0 0;\r\n  overflow-y: hidden;\r\n  transition: height 0.1s;\r\n`;\r\n\r\nconst _ColWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n  display: inline-block;\r\n  width: ${props => props.width}px;\r\n  margin: 0 2px;\r\n  /* background-color: #ff0000bb; */\r\n  vertical-align: middle;\r\n`;\r\nconst _TextItem = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffffffbc;\r\n  width: 100%;\r\n  height: 30px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  font-size: 24px;\r\n  line-height: 26px;\r\n  font-weight: 600;\r\n  /* font-style: italic; */\r\n  color: #7c0025;\r\n  text-align: center;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  /* margin: 8px 2px; */\r\n`;\r\nconst _FrameForm = styled.input<{\r\n    isEditable: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #628cffb9; */\r\n  border: 1px solid #242424;\r\n  border-radius: 2px;\r\n  width: 46px;\r\n  height: 20px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  ${props => props.isEditable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n  vertical-align: middle;\r\n  font-weight: 600;\r\n  color: #180085;\r\n`;\r\nconst _FrameSlider = styled.input<{\r\n    isEditable: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffd562ba;\r\n  width: calc(100% - 50px);\r\n  height: 20px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  ${props => props.isEditable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst _ImageItem = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #ffffffbc; */\r\n  width: 100%;\r\n  height: 50px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  /* border-radius: 4px; */\r\n  color: #000850;\r\n  text-align: center;\r\n  margin: 0 2px;\r\n  vertical-align: middle;\r\n  text-align: left;\r\n`;\r\n\r\nconst WND_SIZE = 50;\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    /* margin: 0 0 0 2px; */\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Img = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport { useContext, useMemo, useState, useRef } from \"react\";\r\nimport StoryUtil from \"../../../contents/create/launcher/util/storyUtil\";\r\nimport { FuseBean } from \"../../../contents/create/launcher/storyTab\";\r\n\r\nexport const FRAME_LINE_WIDTH = 107;\r\n\r\nconst FrameLine = (props: {\r\n    focus: number;\r\n    setFocus: (focus: number) => void;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [startY, setStartY] = useState<null | number>(null);\r\n    const [startX, setStartX] = useState<null | number>(null);\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const frameRateJsxList = useMemo(() => {\r\n        if (ref.current == null) return <></>;\r\n        const clientWidth = ref.current.clientWidth - 10;\r\n        const clientHeight = ref.current.clientHeight - 10;\r\n        return fuseList.map((fuse, i) => {\r\n            let left: undefined | number = undefined;\r\n            const seed = props.seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n            const posXIndex = seed.args.findIndex(arg => arg.isPosX);\r\n            if (posXIndex !== -1) {\r\n                const arg = seed.args[posXIndex];\r\n                const range = arg.max - arg.min;\r\n                const val = Number(fuse.values[posXIndex]) - arg.min;\r\n                const rate = val / range;\r\n                left = Math.floor(clientWidth * rate);\r\n            }\r\n            const top = Math.floor(fuse.frame / limitFrame * clientHeight);\r\n            return <_FrameRate key={i}\r\n                isCurr={i === props.focus}\r\n                top={top}\r\n                left={left}\r\n            />\r\n        });\r\n    }, [fuseList, props.focus]);\r\n    const putAction = (x: number, y: number) => {\r\n        if (props.focus === -1) return;\r\n        setStartY(y);\r\n        setStartX(x);\r\n    }\r\n\r\n    const moveAction = (x: number, y: number) => {\r\n        if (startY == null || startX == null || ref.current == null) return;\r\n        const clientHeight = ref.current.clientHeight - 10;\r\n        const fuse = fuseList[props.focus];\r\n\r\n        // フレームの移動\r\n        const rate = limitFrame / clientHeight * 2;\r\n        // console.log('read ' + start);\r\n        fuse.frame += Math.floor((y - startY) * rate);\r\n        if (fuse.frame < 0) fuse.frame = 0;\r\n        else if (fuse.frame > limitFrame) fuse.frame = limitFrame;\r\n        const prevFocusSeq = fuseList[props.focus].seq;\r\n        fuseList.sort((a, b) => a.frame - b.frame);\r\n        const nowFocusSeq = fuseList[props.focus].seq;\r\n        if (prevFocusSeq !== nowFocusSeq) {\r\n            props.setFocus(fuseList.findIndex(fuse => fuse.seq === prevFocusSeq) as number);\r\n        }\r\n\r\n        // X座標の移動\r\n        const seed = props.seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n        const posXIndex = seed.args.findIndex(arg => arg.isPosX);\r\n        if (posXIndex !== -1) {\r\n            const arg = seed.args[posXIndex];\r\n            const range = arg.max - arg.min;\r\n            const clientWidth = (ref.current as HTMLDivElement).clientWidth - 10;\r\n            const rate = range / clientWidth * 2;\r\n            fuse.values[posXIndex] += Math.floor((x - startX) * rate);\r\n            const value = Number(fuse.values[posXIndex]);\r\n            if (value < arg.min) fuse.values[posXIndex] = arg.min.toString();\r\n            else if (value > arg.max) fuse.values[posXIndex] = arg.max.toString();\r\n            setStartX(x);\r\n        }\r\n\r\n        storyData.fuseList = fuseList.slice();\r\n        setStartY(y);\r\n        // console.log('set ' + start);\r\n        dispatcher.updateStore();\r\n    }\r\n\r\n    const releaseAction = () => {\r\n        setStartY(null);\r\n        setStartX(null);\r\n    }\r\n\r\n    return (\r\n        <_FrameLineDiv ref={ref}\r\n            isEdit={startY != null}\r\n            onMouseDown={(e) => { putAction(e.clientX, e.clientY) }}\r\n            onMouseMove={(e) => { moveAction(e.clientX, e.clientY) }}\r\n            onMouseUp={releaseAction}\r\n            onMouseLeave={releaseAction}\r\n            onTouchStart={(e) => { putAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n            onTouchMove={(e) => { moveAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n            onTouchEnd={releaseAction}\r\n            onTouchCancel={releaseAction}\r\n        >\r\n            {frameRateJsxList}\r\n        </_FrameLineDiv>\r\n    );\r\n}\r\n\r\nexport default FrameLine;\r\n\r\n\r\n\r\nconst _FrameLineDiv = styled.div<{\r\n    isEdit: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${FRAME_LINE_WIDTH}px;\r\n  height: calc(100% - 36px);\r\n  background-color: #5995a790;\r\n  ${props => !props.isEdit ? '' : css`\r\n    background-color: #85b9c990;\r\n  `}\r\n  border: 1px solid #5a0000b8;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  vertical-align: top;\r\n  margin-top: 36px;\r\n`;\r\n\r\nconst _FrameRate = styled.div<{\r\n    isCurr: boolean;\r\n    top: number;\r\n    left?: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  left: 0;\r\n  top: ${props => props.top}px;\r\n  width: 100%;\r\n  ${props => props.left == undefined ? '' : css`\r\n      width: 10px;\r\n      left: ${props.left}px;\r\n  `}\r\n  height: 10px;\r\n  background-color: #627cc5;\r\n  border-radius: 4px;\r\n  border: 1px solid #00000061;\r\n  box-sizing: border-box;\r\n  ${props => !props.isCurr ? '' : css`\r\n      background-color: #e20000;\r\n      z-index: 10;\r\n  `}\r\n`;","import { useContext, useMemo, useState, useEffect } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport FuseList from \"./fuseList\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport StoryUtil from \"../../../contents/create/launcher/util/storyUtil\";\r\nimport FuseMainteDialog from \"./fuseMainteDialog\";\r\nimport { FuseBean } from \"../../../contents/create/launcher/storyTab\";\r\nimport LogicUtil from \"../../../contents/create/factory/util/logicUtil\";\r\nimport LogicElementUtil from \"../../../contents/create/factory/util/logicElementUtil\";\r\nimport BuildUtil from \"../../../contents/create/preview/buildUtil\";\r\nimport { AiOutlineAppstoreAdd } from \"react-icons/ai\";\r\nimport { FaSortAmountDownAlt } from \"react-icons/fa\";\r\nimport { VscPreview } from \"react-icons/vsc\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\nimport { IoSave } from \"react-icons/io5\";\r\n\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport FrameLine, { FRAME_LINE_WIDTH } from \"./frameLine\";\r\n\r\nconst SPEditStoryFrame = () => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [focus, setFocus] = useState<number>(-1);\r\n    const [isPreview, setPreview] = useState<boolean>(false);\r\n    const [seedId, setSeedId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [interval, setInterval] = useState<FormUtil.CheckableValue>({ value: '30', errors: [] });\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const seedList: FuseBean[] = useMemo(() => {\r\n        if (store.libraryData == null) return [];\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        const seedWrapList = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        return seedWrapList.map(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n\r\n            // 引数リストを取得\r\n            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const args = argMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n\r\n            // フォームグループリストを取得\r\n            const groupMng = LogicElementUtil.getInnerWrap(wrap, 'interface-mng', 'formgrp-mng');\r\n            let formgrps: LogicUtil.NodeFromGrpItem[] = [];\r\n            if (groupMng != null) {\r\n                formgrps = (groupMng.data as LogicUtil.NodeFromgrpManager).defines.map(wrap => wrap.data as LogicUtil.NodeFromGrpItem);\r\n            }\r\n\r\n            // プリセットリストを取得\r\n            const sampleMng = LogicElementUtil.getInnerWrap(wrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n            const presets = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n            return {\r\n                name: seed.name,\r\n                disp: seed.disp,\r\n                args, formgrps, presets\r\n            }\r\n        });\r\n    }, [store.libraryData]);\r\n\r\n    useEffect(() => {\r\n        const isLoad = fuseList.length > 0 && store.fuseCacheList.length === 0;\r\n        if (!isLoad) return;\r\n        fuseList.forEach(fuse => {\r\n            const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n            store.fuseCacheList.push(cache);\r\n            dispatcher.story.updateCache(fuse, cache);\r\n        });\r\n        storyData.fuseList = fuseList.slice();\r\n        dispatcher.updateStore();\r\n    }, [fuseList, store.fuseCacheList]);\r\n\r\n    const getNewFuseProps = (): {\r\n        newSeq: number;\r\n        newFrame: number;\r\n    } => {\r\n        const newSeq = fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n        const newFrame = fuseList.length === 0 ? 0 : fuseList[fuseList.length - 1].frame + Number(interval.value);\r\n        return { newSeq, newFrame };\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"left\"\r\n            isIconButton\r\n            buttons={[\r\n                {\r\n                    label: 'Preview',\r\n                    width: 140,\r\n                    icon: <VscPreview />,\r\n                    isEnable: fuseList.length > 0,\r\n                    callback: () => {\r\n                        fuseList.sort((a, b) => {\r\n                            return a.frame - b.frame;\r\n                        });\r\n                        storyData.fuseList = fuseList.slice();\r\n                        // dispatcher.updateStore();\r\n                        setPreview(true);\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Save',\r\n                    width: 140,\r\n                    icon: <IoSave />,\r\n                    callback: () => {\r\n                        alert('仕様検討中');\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"fuse\"\r\n            height={660}\r\n            backgroundColor=\"#c9d4dd\"\r\n            innerJsx={<>\r\n                <_SeedDiv>\r\n                    <FormUtil.ButtonItem\r\n                        button={\r\n                            {\r\n                                label: 'Add',\r\n                                width: 100,\r\n                                icon: <AiOutlineAppstoreAdd />,\r\n                                callback: () => {\r\n                                    if (seedId.value === '') {\r\n\r\n                                        store.system.dialog = <FuseMainteDialog\r\n                                            focus={-1}\r\n                                            seedList={seedList}\r\n                                            cancelAction={() => {\r\n                                            }}\r\n                                            modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                            }}\r\n                                        />;\r\n                                        setStore({ ...store });\r\n                                    } else {\r\n                                        const seed = seedList.find(seed => seed.name === seedId.value) as FuseBean;\r\n                                        const newFuseProps = getNewFuseProps();\r\n                                        const fuse: StoryUtil.Fuse = {\r\n                                            seq: newFuseProps.newSeq,\r\n                                            frame: newFuseProps.newFrame,\r\n                                            seedId: '',\r\n                                            values: []\r\n                                        };\r\n                                        const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n\r\n                                        fuseList.push(fuse);\r\n                                        store.fuseCacheList.push(cache);\r\n\r\n                                        fuse.seedId = seedId.value;\r\n                                        fuse.values = seed.args.map(arg => {\r\n                                            return (arg.defval ?? 0).toString();\r\n                                        });\r\n                                        dispatcher.story.updateCache(fuse, cache);\r\n                                        (store.storyData as StoryUtil.StoryData).fuseList = fuseList.slice();\r\n                                        store.system.dialog = null;\r\n                                        dispatcher.updateStore();\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        }\r\n                    />\r\n                    <_FormDiv>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Seed\"\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={seedId}\r\n                                    setCheckable={(checkable) => {\r\n                                        setSeedId({ ...checkable });\r\n                                    }}\r\n                                    list={seedList.map(seed => {\r\n                                        return { value: seed.name, labelText: seed.disp ?? seed.name }\r\n                                    })}\r\n                                    headBlank\r\n                                    width={340}\r\n                                // validates={\r\n                                //     [\r\n                                //         {\r\n                                //             checker: (value) => ValidateUtil.checkRequired(value),\r\n                                //             errorType: \"required\"\r\n                                //         }\r\n                                //     ]\r\n                                // }\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Interval\"\r\n                            jsx={\r\n                                <FormUtil.TextField\r\n                                    width={100}\r\n                                    isNumber\r\n                                    checkable={interval}\r\n                                    setCheckable={setInterval}\r\n                                    validates={[\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        },\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                            errorType: \"value\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            }\r\n                        />\r\n                    </_FormDiv>\r\n                </_SeedDiv>\r\n                <_MainDiv>\r\n                    <FrameLine\r\n                        focus={focus}\r\n                        setFocus={setFocus}\r\n                        seedList={seedList}\r\n                    />\r\n                    <_FuseListFrame>\r\n                        <FuseList\r\n                            focus={focus}\r\n                            setFocus={setFocus}\r\n                            seedList={seedList}\r\n                        />\r\n                    </_FuseListFrame>\r\n                </_MainDiv>\r\n            </>}\r\n        />\r\n        {!isPreview ? <></> : <BuildUtil.BuildFrame closeAction={() => {\r\n            setPreview(false);\r\n        }} />}\r\n    </>);\r\n}\r\n\r\nexport default SPEditStoryFrame;\r\n\r\n\r\nconst _SeedDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 84px;\r\n  /* background-color: #be97ca; */\r\n  vertical-align: top;\r\n`;\r\nconst _FormDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 492px;\r\n  vertical-align: top;\r\n  /* background-color: #09fc3e; */\r\n  margin: 0 0 0 4px;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: calc(100% - 84px);\r\n  /* background-color: #c2ca97; */\r\n`;\r\n\r\nconst _FuseListFrame = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: calc(100% - ${FRAME_LINE_WIDTH}px);\r\n  height: 100%;\r\n  /* background-color: #f80707; */\r\n  vertical-align: top;\r\n`;","import styled from \"styled-components\";\r\nimport PublishFrame from \"../../contents/home/publishFrame\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport SPManageFrame from \"./sPManageFrame\";\r\nimport SPEditStoryFrame from \"./edit/sPEditStoryFrame\";\r\nimport { GlobalContext } from \"../../contents/entry/systemEntry\";\r\n\r\nconst SPCreateChannel = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isEdit, setEdit] = useState<boolean>(false);\r\n    const hasData = store.libraryData != null;\r\n\r\n    return (<>\r\n        <FormUtil.Record jsx={<>\r\n            <FormUtil.SwitchTwoFace\r\n                label1=\"Manage\"\r\n                label2=\"Story\"\r\n                rate1={50}\r\n                rate2={50}\r\n                isUse={isEdit}\r\n                width={350}\r\n                isEditable={hasData}\r\n                callback={() => {\r\n                    setEdit(!isEdit);\r\n                }}\r\n            />\r\n        </>} />\r\n        <_MainDiv>\r\n            {!isEdit ? <SPManageFrame setEdit={setEdit} /> : <SPEditStoryFrame />}\r\n        </_MainDiv>\r\n    </>);\r\n}\r\n\r\nexport default SPCreateChannel;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #9fc99e; */\r\n  width: 100%;\r\n  height: calc(100% - 40px);\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport DirectLinkManager from \"./directLinkManager\";\r\nimport DataUtil from \"../utils/dataUtil\";\r\nimport { SPUtil } from \"./spUtil\";\r\nimport { initialStore } from \"../redux/store/store\";\r\nimport Splash from \"../contents/entry/splash\";\r\nimport { ChannelPane } from \"../base/components/tab/channelPane\";\r\n\r\nimport { VscGitPullRequestCreate } from \"react-icons/vsc\";\r\nimport { AiFillHome } from \"react-icons/ai\";\r\nimport SPTotalHeader from \"./sPTotalHeader\";\r\nimport SPHomeChannel from \"./contents/sPHomeChannel\";\r\nimport GloballDialog from \"../contents/dialog/globalDialog\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../utils/systemConst\";\r\nimport SPCreateChannel from \"./contents/sPCreateChannel\";\r\nimport TotalHeader from \"../contents/entry/totalHeader\";\r\ntype ScreenBean = {\r\n    adjLeft: number;\r\n    adjTop: number;\r\n    rate: number;\r\n}\r\n\r\n// export const CONTENTS_WIDTH = 576;\r\n// export const CONTENTS_HEIGHT = 1024;\r\n\r\n\r\nconst SPRoot = (props: {\r\n}) => {\r\n    const [store, setStore] = useState(initialStore);\r\n\r\n    const [isPermit, setPermit] = useState(true);\r\n    const [screen, setScreen] = useState<ScreenBean>({ adjLeft: 0, adjTop: 0, rate: 1 });\r\n    const ref = useRef<null | HTMLDivElement>(null);\r\n\r\n    const splashJsx = !store.system.isSplash ? <></> : (\r\n        <_SplashDiv>\r\n            <Splash\r\n                remove={() => {\r\n                    store.system.isSplash = false;\r\n                    setStore({ ...store });\r\n                }}\r\n            />\r\n        </_SplashDiv>\r\n    );\r\n\r\n    const update = () => {\r\n        if (ref.current != null) {\r\n            // const [clientWidth, clientHeight] = [window.innerWidth, window.innerHeight];\r\n\r\n            const rect = ref.current.getBoundingClientRect();\r\n            const [clientWidth, clientHeight] = [rect.width, rect.height];\r\n\r\n            const cw = SPUtil.SCREEN_WIDTH;\r\n            const ch = SPUtil.SCREEN_HEIGHT;\r\n\r\n            const isFitSide = clientHeight / ch > clientWidth / cw;\r\n\r\n            const rate = !isFitSide ? clientHeight / ch : clientWidth / cw;\r\n            const adjLeft = !isFitSide ? clientWidth / 2 - (cw * rate / 2) : 0;\r\n            const adjTop = !isFitSide ? 0 : clientHeight / 2 - (ch * rate / 2);\r\n\r\n            setScreen({ adjLeft, adjTop, rate });\r\n        }\r\n    }\r\n\r\n    // window.addEventListener('DOMContentLoaded', () => {\r\n    //     if (!isSmartPhone()) {\r\n    //         window.addEventListener('resize', update);\r\n    //     } else {\r\n    //         window.addEventListener('orientationchange resize', () => {\r\n    //             update();\r\n    //             setPermit(window.orientation === 0);\r\n    //         });\r\n    //     }\r\n    // });\r\n\r\n    // window.onorientationchange = () => {\r\n    //   setOrientation(window.orientation);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        store.system.isSPMode = true;\r\n        setStore({...store});\r\n        \r\n        update();\r\n        console.log(navigator.userAgent);\r\n        if (isSmartPhone()) {\r\n            setPermit(window.orientation === 0);\r\n        }\r\n        if (!isSmartPhone()) {\r\n            window.addEventListener('resize', () => {\r\n                update();\r\n            });\r\n        } else {\r\n            window.addEventListener('orientationchange resize', () => {\r\n                alert('change');\r\n                update();\r\n                setPermit(window.orientation === 0);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    let jsx = <_Error>Make your smartphone vertical!</_Error>;\r\n    if (isPermit) {\r\n        jsx = (\r\n            <_Contents>\r\n                {splashJsx}\r\n                <GloballDialog />\r\n                <TotalHeader />\r\n                <_ChannelWrap>\r\n                    <ChannelPane\r\n                        isLandscape={false}\r\n                        tabElements={[\r\n                            { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <SPHomeChannel /> },\r\n                            { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <SPCreateChannel /> },\r\n                        ]}\r\n                        activeNo={0}\r\n                    // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n                    />\r\n                </_ChannelWrap>\r\n            </_Contents>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap ref={ref}>\r\n            <_Frame left={screen.adjLeft} top={screen.adjTop} rate={screen.rate}>\r\n                {jsx}\r\n            </_Frame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SPRoot;\r\n\r\nconst isSmartPhone = () => {\r\n    // UserAgentからのスマホ判定\r\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 10px);\r\n  height: calc(100% - 10px);\r\n  background-color: #9eadc9;\r\n  margin: 5px 0 0 5px; */\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst _ChannelWrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #dbdfe7;\r\n  width: 100%;\r\n  height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst _Frame = styled.div<{\r\n    left: number;\r\n    top: number;\r\n    rate: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: ${props => props.top}px;\r\n  left: ${props => props.left}px;\r\n  transform-origin: top left;\r\n  /* width: 100%;\r\n  height: 100%; */\r\n  transform: scale(${props => props.rate});\r\n`;\r\n\r\nconst _Contents = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${SPUtil.SCREEN_WIDTH}px;\r\n  height: ${SPUtil.SCREEN_HEIGHT}px;\r\n  background-color: #929292;\r\n`;\r\n\r\nconst _Error = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #750000;\r\n    color: white;\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _SplashDiv = styled.div`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: 50%;\r\n    top: 400px;\r\n    transform-origin: center;\r\n    transform: scale(0.7);\r\n`;","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport BuildUtil from \"../../contents/create/preview/buildUtil\";\r\nimport PreviewLauncherFrame from \"../../contents/create/preview/previewLauncherFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport { Store } from \"../store/store\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private setStore: (store: Store) => void;\r\n\r\n    constructor(store: Store, setStore: (store: Store) => void) {\r\n        this.store = store;\r\n        this.setStore = setStore;\r\n    }\r\n\r\n    public updateStore = () => {\r\n        this.setStore({ ...this.store });\r\n    }\r\n\r\n    public system = {\r\n        // setUserEnv: (userEnv: UserEnv) => {\r\n        // },\r\n    }\r\n    public story = {\r\n\r\n        /**\r\n         * プレビューオールダイアログを表示する\r\n         */\r\n        openPreviewAllDialog: () => {\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const minFrame = fuseList[0].frame;\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n            const sceens: string[] = [];\r\n            let useFrame: number = 0;\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    fuseList.some(def => {\r\n                        if (def.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                        } else if (def.frame > frame) return 1;\r\n                    });\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    useFrame = frame;\r\n                }\r\n            });\r\n            this.store.system.dialog = (\r\n                <PreviewLauncherFrame.Component\r\n                    sceens={sceens}\r\n                    frameCnt={useFrame}\r\n                />\r\n            );\r\n            this.updateStore();\r\n        },\r\n\r\n        /**\r\n         * プレビューソロダイアログを表示する\r\n         */\r\n        openPreviewSoloDialog: (focus: number) => {\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n            const sceens: string[] = [];\r\n            let useFrame: number = 0;\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    const def = fuseList[focus];\r\n                    if (frame === 0) {\r\n                        LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                    }\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    useFrame = frame;\r\n                }\r\n            });\r\n            this.store.system.dialog = (\r\n                <PreviewLauncherFrame.Component\r\n                    sceens={sceens}\r\n                    frameCnt={useFrame}\r\n                />\r\n            );\r\n            this.updateStore();\r\n        },\r\n\r\n\r\n        updateCache: (fuse: StoryUtil.Fuse, cache: StoryUtil.Cache) => {\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            \r\n            cache.thumbList = [];\r\n            cache.useFrame = 0;\r\n            const seedProps = LogicElementUtil.getSeedProperties(logicData, fuse.seedId);\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                doIterate: (frame, owner) => {\r\n                    if (frame === 0) {\r\n                        LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                    }\r\n\r\n                    const thumb = seedProps.thumbnailList.find(thumb => thumb.frame === frame);\r\n                    if (thumb != undefined) {\r\n                        const url = CanvasUtil.createURL(550, 550, (ctx) => {\r\n                            // パーティクルの描画\r\n                            owner.forEach(par => {\r\n                                par.draw(ctx);\r\n                            });\r\n                            ctx.save();\r\n                        });\r\n                        cache.thumbList.push({ name: thumb.name, url });\r\n                    }\r\n                },\r\n                doEnd: (frame) => {\r\n                    cache.useFrame = frame;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","import { createContext, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport DirectLogin from './directLogin';\r\nimport MobileRoot from '../../sp/mobileRoot';\r\nimport PCRoot from './pCRoot';\r\nimport SPRoot from '../../sp/sPRoot';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    setStore: React.Dispatch<React.SetStateAction<Store>>;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    // const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const [store, setStore] = useState(initialStore);\r\n    const dispatcher = new Dispatcher(store, setStore);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{ store, setStore, dispatcher }}>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <PCRoot />\r\n                </Route>\r\n                <Route path=\"/sp\" exact >\r\n                    <SPRoot />\r\n                </Route>\r\n                <Route path=\"/library\" exact >\r\n                    <MobileRoot hashKey={str} />\r\n                </Route>\r\n                <Route path=\"/story\" exact >\r\n                    <MobileRoot hashKey={str} />\r\n                </Route>\r\n                <Route path=\"/user\" exact >\r\n                    <DirectLogin hashKey={str} />\r\n                </Route>\r\n            </Switch>\r\n        </GlobalContext.Provider>\r\n    );\r\n\r\n}","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport ValidateUtil from \"./validateUtil\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nnamespace FormUtil {\r\n\r\n    export type CheckableValue = {\r\n        value: string;\r\n        errors: ValidateUtil.ErrorType[];\r\n    }\r\n\r\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\r\n        let result = true;\r\n        checkables.forEach(checkable => {\r\n            if (checkable.errors.length > 0) {\r\n                result = false;\r\n                return 1;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    export const InputTextFormBak = (props: {\r\n        titleLabel?: string;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        isCenter?: boolean;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        marginTop?: number;\r\n        isReadOnly?: boolean;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const type = props.isPassword ?? false ? 'password' : 'text';\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency);\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\r\n                <_ItemnInputBak\r\n                    type={type}\r\n                    value={props.checkable.value}\r\n                    hasTitle={props.titleLabel != undefined}\r\n                    width={props.width}\r\n                    isCenter={props.isCenter ?? false}\r\n                    placeholder={props.placeholder}\r\n                    onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        props.checkable.value = value;\r\n                        props.checkable.errors = getErrors(value);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }}\r\n                    errorType={errors.length === 0 ? undefined : errors[0]}\r\n                    readOnly={props.isReadOnly}\r\n                />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n\r\n    export const Record = (props: {\r\n        isEnable?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    const DEFAULT_LABEL_WIDTH = 140;\r\n    export const FormRecord = (props: {\r\n        titleLabel?: string;\r\n        labelWidth?: number;\r\n        isEnabled?: boolean;\r\n        isVisible?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        const lablelWidth = props.labelWidth ?? DEFAULT_LABEL_WIDTH;\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnabled ?? true}\r\n                isVisible={props.isVisible ?? true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={lablelWidth}>{props.titleLabel}</_ItemnLabel>}\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FixedText = (props: {\r\n        value: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        marginLeft?: number;\r\n        isRecordItem?: boolean;\r\n    }) => {\r\n        let width: string | undefined = undefined;\r\n        if (props.isRecordItem) width = `calc(100% - ${DEFAULT_LABEL_WIDTH + 16}px)`;\r\n        if (props.width != undefined) width = props.width + 'px';\r\n        return (\r\n            <_FixedLabel width={width}>{props.value}</_FixedLabel>\r\n        );\r\n    }\r\n\r\n    export const TextField = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        isNumber?: boolean;\r\n        marginLeft?: number;\r\n        step?: number;\r\n    }) => {\r\n        const [isNaN, setNaN] = useState(false);\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        let type = props.isPassword ?? false ? 'password' : 'text';\r\n        if (props.isNumber ?? false) {\r\n            type = 'number';\r\n        }\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n        const step = props.step ?? 1;\r\n\r\n        const isEnable = props.isEnabled ?? true;\r\n        return (\r\n            <_ItemnInput\r\n                type={type}\r\n                value={value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                step={step}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                    if (type === 'number') {\r\n                        setNaN(Number.isNaN(e.target.valueAsNumber));\r\n                    }\r\n                }}\r\n                onBlur={() => {\r\n                    if (type === 'number') {\r\n                        if (isNaN) props.checkable.value = ' ';\r\n                        else props.checkable.value = Number(value).toString();\r\n                        // console.log(`[${props.checkable.value}]`);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }\r\n                }}\r\n                errorType={!isEnable || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\r\n\r\n    export const Combobox = (props: {\r\n        list: ComboboxItemProps[];\r\n        headBlank?: boolean;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n        const headBlank = props.headBlank ?? false;\r\n        const list = props.list.slice();\r\n        if (headBlank) list.unshift({ value: '', labelText: '' });\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n\r\n        useEffect(() => {\r\n            // console.log('value: ' + props.checkable.value);\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const isEnable = props.isEnabled ?? true;\r\n        return (\r\n            <_ItemCombobox\r\n                value={props.checkable.value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    props.checkable.value = value;\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n\r\n                }}\r\n                errorType={!isEnable || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            >{list.map((item, i) => {\r\n                return (\r\n                    <_Option key={i}\r\n                        value={item.value}\r\n                        disabled={item.isDisabled ?? false}\r\n                        isDisabled={item.isDisabled ?? false}\r\n                    >{item.labelText}</_Option>\r\n                );\r\n            })}</_ItemCombobox>\r\n        );\r\n    }\r\n\r\n    export const TextArea = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n    }) => {\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n\r\n        const isEnable = props.isEnabled ?? true;\r\n        return (\r\n            <_ItemnTextArea\r\n                value={value}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                }}\r\n                // errorType={!isEnable || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        label: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        icon?: JSX.Element;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ButtonRecord = (props: {\r\n        buttons: ButtonProps[],\r\n        align?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        isIconButton?: boolean;\r\n    }) => {\r\n        const align = props.align ?? 'right';\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={align}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n                height={!props.isIconButton ? 40 : 68}\r\n            >\r\n                {props.buttons.map((button, i) => {\r\n                    if (button.icon == undefined) {\r\n                        return (\r\n                            <_Button\r\n                                key={i}\r\n                                isCenter={align === 'center'}\r\n                                isEnable={button.isEnable ?? true}\r\n                                width={button.width}\r\n                                onClick={button.callback}\r\n                            >{button.label}</_Button>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <_IconButton\r\n                                key={i}\r\n                                isCenter={align === 'center'}\r\n                                isEnable={button.isEnable ?? true}\r\n                                width={button.width}\r\n                                onClick={button.callback}\r\n                            >{button.icon}<br />{button.label}</_IconButton>\r\n                        );\r\n                    }\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const ButtonItem = (props: {\r\n        button: ButtonProps\r\n    }) => {\r\n        const button = props.button;\r\n        if (button.icon == undefined) {\r\n            return (\r\n                <_Button\r\n                    isCenter={false}\r\n                    isEnable={button.isEnable ?? true}\r\n                    width={button.width}\r\n                    onClick={button.callback}\r\n                >{button.label}</_Button>\r\n            );\r\n        } else {\r\n            return (\r\n                <_IconButton\r\n                    isCenter={false}\r\n                    isEnable={button.isEnable ?? true}\r\n                    width={button.width}\r\n                    onClick={button.callback}\r\n                >{button.icon}<br />{button.label}</_IconButton>\r\n            );\r\n        }\r\n        // return (\r\n        //     <_Button\r\n        //         isCenter={false}\r\n        //         isEnable={props.button.isEnable ?? true}\r\n        //         width={props.button.width}\r\n        //         onClick={props.button.callback}\r\n        //     >{props.button.label}</_Button>\r\n        // );\r\n    }\r\n\r\n    export const Message = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const MessageLink = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        clickAction: () => void;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isLink={true}\r\n                    onClick={props.clickAction}\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        isDisable?: boolean;\r\n        height?: number;\r\n        backgroundColor?: string;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        // const title = props.title ?? 'title pl';\r\n        const isDisable = props.isDisable ?? false;\r\n        const isEnable = props.isEnable ?? true;\r\n        const backgroundColor = props.backgroundColor ?? '#dcddce';\r\n        return (<>\r\n            {isDisable ? <></> : <_BorderText>{props.title}</_BorderText>}\r\n            <_BorderPanel\r\n                isEnable={isEnable}\r\n                isDisable={isDisable}\r\n                height={props.height}\r\n                backgroundColor={backgroundColor}\r\n            >{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export const InfoFrame = (props: {\r\n        height?: number;\r\n        textRecords: string[];\r\n    }) => {\r\n        const height = props.height ?? 70;\r\n        const color = '#1a9900';\r\n        return (<>\r\n            <_InfoDiv height={height} color={color}>\r\n                {props.textRecords.map((text, i) => {\r\n                    return <span key={i}>{text}<br /></span>;\r\n                })}\r\n            </_InfoDiv>\r\n        </>);\r\n    };\r\n\r\n    export const Switch = (props: {\r\n        label: string;\r\n        isUse: boolean;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        isRelation?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isRelation = props.isRelation ?? false;\r\n        const callback = isRelation && props.isUse ? () => { } : props.callback;\r\n        return (\r\n            <_Switch\r\n                isRelation={isRelation}\r\n                isUse={props.isUse}\r\n                isEnable={props.isEnable ?? true}\r\n                width={props.width}\r\n                onClick={callback}\r\n            >{props.label}</_Switch>\r\n        );\r\n    }\r\n\r\n    export const SwitchTwoFace = (props: {\r\n        label1: string;\r\n        label2: string;\r\n        width: number;\r\n        rate1: number;\r\n        rate2: number;\r\n        isUse: boolean;\r\n        isEditable?: boolean;\r\n        isEnable?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isEnable = props.isEnable ?? true;\r\n        const isEditable = props.isEditable ?? true;\r\n        return (<_SwitchTwoFace\r\n            isEnable={isEnable}\r\n            isEditable={isEditable}\r\n            width={props.width}\r\n            onClick={props.callback}\r\n        >\r\n            <_SwitchItem\r\n                isUse={isEnable && !props.isUse}\r\n                rate={props.rate1}\r\n                isLeft={true}\r\n                isEditable={isEditable}\r\n            >{props.label1}</_SwitchItem>\r\n            <_SwitchItem\r\n                isUse={isEnable && props.isUse}\r\n                rate={props.rate2}\r\n                isLeft={false}\r\n                isEditable={isEditable}\r\n            >{props.label2}</_SwitchItem>\r\n        </_SwitchTwoFace>);\r\n    }\r\n\r\n    export const checkItems = (list: CheckableValue[]) => {\r\n        return list.find(item => item.errors.length > 0) == undefined;\r\n    }\r\n}\r\n\r\nexport default FormUtil;\r\n\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n    textAlign: 'left' | 'center' | 'right';\r\n    marginTop: number;\r\n    marginBottom: number;\r\n    height?: number;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    width: 100%;\r\n    height: ${props => props.height ?? '40'}px;\r\n    margin-top: ${props => props.marginTop}px;\r\n    margin-bottom: ${props => props.marginBottom}px;\r\n    /* background-color: #b3b4c4; */\r\n    /* border: 1px solid #000; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    text-align: ${props => props.textAlign};\r\n`;\r\n\r\nconst _ItemnLabel = styled.div<{\r\n    labelWidth?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.labelWidth}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #b4c0c7fa, #d8d8d8, #b4c0c7fa);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n`;\r\n\r\nconst _FixedLabel = styled.div<{\r\n    width?: string;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #0c0e86;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c51a;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n    overflow-x: hidden;\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width};\r\n    `}\r\n`;\r\n\r\nconst _ItemnInputBak = styled.input<{\r\n    readOnly?: boolean;\r\n    isCenter: boolean;\r\n    hasTitle: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${props => !props.hasTitle ? css`\r\n    ` : css`\r\n        width: calc(100% - 152px);\r\n    `}\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    margin-top: 2px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    /* ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    } */\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemCombobox = styled.select<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n        pointer-events: none;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _Option = styled.option<{\r\n    isDisabled: boolean;\r\n}>`\r\n    ${props => !props.isDisabled ? '' : css`\r\n        color: #0000004b;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n    isLink?: boolean;\r\n    isCenter: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #002c52;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => !props.isLink ? '' : css`\r\n        color: #0459a3;\r\n        user-select: none;\r\n        text-decoration: underline;\r\n        &:hover {\r\n            color: #68a4d8;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #c0ced6, #ebebeb, #c0ced6);\r\n    border: 1px solid #829bad;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        /* background: linear-gradient(to bottom, #989898, #b4b4b4, #989898); */\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst _IconButton = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    height: 58px;\r\n    padding: 4px 0 0 0;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #c0ced6, #ebebeb, #c0ced6);\r\n    border: 1px solid #829bad;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        /* background: linear-gradient(to bottom, #989898, #b4b4b4, #989898); */\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isUse: boolean;\r\n    isEnable: boolean;\r\n    width?: number;\r\n    isRelation: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    color: #515151;\r\n    border: 1px solid #747474;\r\n    ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\r\n    ` : css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#ddc1d979' : '#d898b3'};\r\n        color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n    `}\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\r\n        ` : css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#d3a1cb79' : '#d898b3'};\r\n            color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _SwitchTwoFace = styled.div<{\r\n    isEnable: boolean;\r\n    isEditable: boolean;\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEditable ? '' : css`    \r\n        pointer-events: none;\r\n    `}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* opacity: 0.7; */\r\n    }\r\n`;\r\n\r\nconst _SwitchItem = styled.div<{\r\n    isUse: boolean;\r\n    rate: number;\r\n    isLeft: boolean;\r\n    isEditable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* line-height: 25px; */\r\n    border-top: 1px solid #747474;\r\n    border-bottom: 1px solid #747474;\r\n    text-align: ${props => props.isLeft ? css`\r\n        border-left: 1px solid #747474;\r\n    ` : css`\r\n        border-right: 1px solid #747474;\r\n    `};\r\n    text-align: ${props => props.isLeft ? 'right' : 'left'};\r\n    border-radius: ${props => props.isLeft ? '8px 0 0 8px' : '0 8px 8px 0'};\r\n    padding: 0 10px;\r\n    box-sizing: border-box;\r\n    background-color: #8fa2aa;\r\n    color: #515151;\r\n    font-size: 16px;\r\n    ${props => props.isEditable ? css`\r\n        ${!props.isUse ? '' : css`\r\n            color: #b30000;\r\n            font-size: 22px;\r\n            background-color: #dae7ec;\r\n        `}\r\n    ` : css`\r\n        ${!props.isUse ? '' : css`\r\n            color: #110070;\r\n            font-size: 22px;\r\n            background-color: #dae7ec;\r\n        `};\r\n    `}\r\n    vertical-align: top;\r\n    transition: background-color 0.3s;\r\n`;\r\n\r\nconst _BorderText = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: #990000;\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n    isDisable: boolean;\r\n    height?: number;\r\n    backgroundColor: string;\r\n}>`\r\n    display: inline-block;\r\n    ${props => !props.isDisable ? '' : css`\r\n        display: none;\r\n    `}\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    ${props => props.height == undefined ? '' : css`\r\n        height: ${props.height}px;\r\n    `}\r\n    background-color: ${props => props.backgroundColor};\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    margin: 4px 0 0 0;\r\n    display: inline-block;\r\n    background-color: #e7e5e561;\r\n    border: solid 1px #949494;\r\n    width: 100%;\r\n    height: ${props => props.height}px;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: ${props => props.color};\r\n    overflow-y: auto;\r\n`;\r\n\r\n\r\nconst _ItemnTextArea = styled.textarea<{\r\n\r\n}>`\r\n   display: inline-block;\r\n   width: 100%;\r\n   height: 100%;\r\n   background-color: #ebf5f5;\r\n   font-size: 18px;\r\n   color: black;\r\n   border: none;\r\n   resize: none;\r\n   box-sizing: border-box;\r\n`;","import zlib from \"zlib\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport { sha256 } from 'js-sha256';\r\nimport Hashids from 'hashids';\r\nimport { ProjectType, Store } from \"../redux/store/store\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport ConfirmDialog from \"../contents/dialog/confirmDialog\";\r\nimport StoryUtil from \"../contents/create/launcher/util/storyUtil\";\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5001';\r\n    export const DB_SERVER_DOMAIN = 'https://hkdev-db.glitch.me';\r\n    // export const DB_SERVER_DOMAIN = 'https://crud-server001.glitch.me';\r\n\r\n    // export const APP_SERVER_DOMAIN = 'http://localhost:4333';\r\n    export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/pf_apps/v1.8.0';\r\n    // export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    const DATABASE_NAME = 'pf1';\r\n\r\n    const getUserHashBuilder = () => {\r\n        return new Hashids('pf-user', 8);\r\n    }\r\n\r\n    export const getHashedFromUserSeq = (seq: number) => {\r\n        const hashids = getUserHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\r\n        const hashids = getUserHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    const getScoreHashBuilder = () => {\r\n        return new Hashids('pf', 8);\r\n    }\r\n\r\n    export const getHashedFromProjectSeq = (seq: number) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedProjectSeq = (hashedSeq: string) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    export const getPreviewURL = (scoreSeq: number) => {\r\n        const hashedKey = getHashedFromProjectSeq(scoreSeq);\r\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql, databaseName: DATABASE_NAME })\r\n        }\r\n    }\r\n\r\n    export type SendMailParam = {\r\n        from: string,\r\n        to: string,\r\n        subject: string,\r\n        text: string\r\n    }\r\n\r\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(json)\r\n        }\r\n    }\r\n\r\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/mail',\r\n            createSendMailRequestInit(json)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserInfoList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\r\n        const results = await response.json();\r\n        return results as { id: string, email: string }[];\r\n    };\r\n\r\n    export const findUserIdList = async () => {\r\n        const results = await findUserInfoList();\r\n        return (results as { id: string }[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfoFromEmail = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserInfoFromSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoLogin = async (id: string, password: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const getNextUserSeq = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\r\n        const results = await response.json();\r\n        const nextSeq = (results[0]['seq'] as number) + 1;\r\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\r\n\r\n        return nextSeq;\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findScore = async (scoreSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT (select id from user_tbl where seq = score.user_seq) as owner, dispnam, data FROM scoretbl score WHERE seq = ${scoreSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const loadFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            store.fileHandle = fileHandle;\r\n            const text = DataUtil.unZip(fileContents);\r\n            const data = JSON.parse(text);\r\n            // シナリオであるかどうかの判定\r\n            if (!data.hasOwnProperty('scenarioData')) {\r\n                store.libraryData = data;\r\n            } else {\r\n                const scenarioProps = data as StoryUtil.ScenarioFileProps;\r\n                store.libraryData = scenarioProps.libraryData;\r\n                store.storyData = scenarioProps.scenarioData;\r\n            }\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Successfully file loaded!\" />;\r\n            setStore({ ...store });\r\n        })();\r\n    }\r\n\r\n    export const saveFileBak = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.libraryData as LogicUtil.WrapElement;\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        const plainData = JSON.stringify(rootData);\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const saveLibraryFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.libraryData as LogicUtil.WrapElement;\r\n        const plainData = JSON.stringify(rootData);\r\n        saveFile(store, setStore, plainData, 'plgc');\r\n    }\r\n\r\n    export const saveScenarioFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const data: StoryUtil.ScenarioFileProps = {\r\n            libraryData: store.libraryData as LogicUtil.WrapElement,\r\n            scenarioData: store.storyData as StoryUtil.StoryData\r\n        }\r\n        const plainData = JSON.stringify(data);\r\n        saveFile(store, setStore, plainData, 'pstr');\r\n    }\r\n\r\n    export const saveFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>, plainData: string, extension: string) => {\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': [`.${extension}`],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const getSHA256Hash = (original: string) => {\r\n        return sha256(original);\r\n    }\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n\r\n    export const getDirectUrl = (type: ProjectType, seq: number) => {\r\n        return `${APP_SERVER_DOMAIN}/#/${type}?v=${getHashedFromProjectSeq(seq)}`;\r\n    }\r\n}\r\n\r\nexport default DataUtil;"],"sourceRoot":""}