{"version":3,"sources":["system/base/design/styles.tsx","system/contents/dialog/confirmDialog.tsx","App.tsx","reportWebVitals.ts","index.tsx","system/redux/store/store.tsx","system/base/components/tab/tabbedPane.tsx","system/utils/systemConst.tsx","system/utils/canvasUtil.tsx","system/contents/graphic/particle.tsx","system/contents/graphic/drawUtil.tsx","system/contents/graphic/vectorUtil.tsx","system/contents/create/factory/util/paramUtil.tsx","system/contents/create/preview/modulateBuilder.tsx","system/contents/create/preview/previewUtil.tsx","system/utils/form/validateUtil.tsx","system/utils/treeUtil.tsx","system/contents/create/factory/detail/common/modifyOperations.tsx","system/contents/create/factory/logicMainteTab.tsx","system/contents/create/factory/detail/logic/editorArgumentMng.tsx","system/contents/create/factory/dialog/sendTemplateDialog.tsx","system/contents/create/factory/detail/logic/editorArgumentItem.tsx","system/contents/create/factory/detail/seed/editorSeedMng.tsx","system/contents/create/factory/detail/logic/editorLogicMng.tsx","system/contents/create/factory/detail/logic/editorLogicItem.tsx","system/contents/create/factory/detail/logic/editorParamItem.tsx","system/contents/create/factory/detail/logic/editorBehiviorMng.tsx","system/contents/create/factory/detail/logic/editorVisualMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnector.tsx","system/contents/create/factory/util/drawableVectorChooser.tsx","system/contents/create/factory/detail/logic/editorSendManager.tsx","system/contents/create/factory/detail/logic/editorFieldMng.tsx","system/contents/create/factory/detail/logic/editorExtendMng.tsx","system/contents/create/factory/detail/seed/editorSeedItem.tsx","system/contents/create/factory/detail/seed/editorThumbnailMng.tsx","system/contents/create/factory/detail/seed/editorThumbnailItem.tsx","system/contents/create/factory/util/logicFormUtil.tsx","system/contents/create/factory/util/logicUtil.tsx","system/contents/create/factory/detail/seed/editorSampleItem.tsx","system/contents/create/factory/detail/seed/editorSampleMng.tsx","system/contents/create/factory/detail/seed/editorInterfaceManager.tsx","system/contents/create/factory/detail/seed/editorSeedArgMng.tsx","system/contents/create/factory/detail/seed/editorSeedArgItem.tsx","system/contents/create/factory/detail/seed/editorSeedSendMng.tsx","system/contents/create/factory/detail/seed/editorFormgrpItem.tsx","system/contents/create/factory/detail/seed/editorFormgrpMng.tsx","system/contents/create/factory/util/logicElementUtil.tsx","system/sp/spUtil.tsx","system/contents/create/preview/inputForm/previewLogicInputForm.tsx","system/contents/create/preview/inputForm/previewSeedInputForm.tsx","system/contents/create/preview/previewLauncherFrameSp.tsx","system/contents/create/preview/buildUtil.tsx","system/contents/create/preview/previewLogicFrame.tsx","system/contents/create/preview/previewLauncherFrame.tsx","system/contents/create/manage/nameDefDialog.tsx","system/sp/directLinkManager.tsx","system/sp/mobileRoot.tsx","system/contents/dialog/globalDialog.tsx","system/contents/dialog/accountFrame.tsx","system/contents/dialog/login/loginCreateAccount.tsx","system/contents/dialog/login/loginLogin.tsx","system/contents/dialog/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/base/components/tab/channelPane.tsx","system/contents/create/launcher/tab/storyFuseAnalysis.tsx","system/contents/create/launcher/tab/storyProperty.tsx","system/contents/create/launcher/tab/storyEnvironment.tsx","system/contents/create/launcher/timelineFrame.tsx","system/contents/create/launcher/storyTab.tsx","system/contents/create/manage/newProjectDialog.tsx","system/contents/create/manage/newProjectDialogStoryOnly.tsx","system/sp/contents/etc/shareDialog.tsx","system/contents/create/manage/manageTab.tsx","system/contents/create/createChannel.tsx","system/contents/home/publishFrame.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/pCRoot.tsx","system/sp/contents/sPHomeChannel.tsx","system/sp/contents/sPManageFrame.tsx","system/sp/contents/edit/fuseMainteDialog.tsx","system/sp/contents/edit/fuseList.tsx","system/sp/contents/edit/frameLine.tsx","system/sp/contents/edit/sPEditStoryFrame.tsx","system/sp/contents/sPCreateChannel.tsx","system/sp/sPRoot.tsx","system/redux/dispatcher/dispatcher.tsx","system/contents/entry/systemEntry.tsx","system/utils/form/formUtiil.tsx","system/utils/dataUtil.tsx"],"names":["Styles","_Styles","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","FONT_LARGE","css","_templateObject7","_taggedTemplateLiteral","CSS_LABEL_SMALL","_templateObject8","CSS_LABEL_MIDIUM","_templateObject9","CSS_BUTTON_DISABLE","_templateObject10","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","ConfirmDialog","Component","props","_props$width","_props$height","_props$buttons","_useContext","useContext","GlobalContext","store","setStore","width","height","buttons","label","callback","system","dialog","_objectSpread","_jsxs","_Frame","children","_jsx","_Main","_Inner","message","split","map","msg","i","FormUtil","Message","isCenter","ButtonRecord","align","App","useEffect","document","oncontextmenu","onkeydown","e","ctrlKey","includes","key","SystemEntry","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","window","addEventListener","navigator","serviceWorker","register","concat","DataUtil","APP_VERSION","registration","console","log","catch","error","warn","documentElement","touches","length","preventDefault","passive","t","now","Date","getTime","ReactDOM","render","React","StrictMode","getElementById","ProjectTypes","initialStore","isSplash","user","canDialogClose","isSPMode","logoutActions","env","isEditLibrary","isUseLocalFile","screenRate","scrollLock","libraryData","storyData","fuseCacheList","cloud","fileHandle","TabbedPane","_props$tabRecordNum","_useState","useState","activeNo","_useState2","_slicedToArray","setActiveNo","tabRecordNum","_Fragment","_LabelList","tabElements","tab","index","TabLabel","name","isActive","isEnable","enable","selectTab","undefined","selectTabIndex","_ContList","TabContents","cont","_TabLabel","onClick","_Contents","SystemConst","AUTH_TEXT_WIDTH","_SystemConst","AUTH_TEXT_HEIGHT","SESSTION_KEY_LOGIN","CanvasUtil","_CanvasUtil","createURL","draw","canvas","createElement","ctx","getContext","toDataURL","getLogoURL","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillStyle","fillText","adjust","measureText","save","getAuthTextURL","text","WIDTH","SIZE","rotate","Math","PI","char","charAt","fontRand","random","alphaRand","Instance","_createClass","_this","_classCallCheck","owner","pos","prevPos","vec","frame","limit","isLive","drawer","extend","update","x","xy","y","forEach","this","_Particle","Particle","_DrawUtil","createGradDrawer","param","_param$radius","radiusBase","radius","self","_convertRgbaFromColor","flashAppearFrame","appearFrame","unitFrame","flashHideFrame","shrinkStartRate","start","floor","g","createRadialGradient","grads","rgba","convertRgbaFromColorCode","color","r","b","a","push","offset","convertColorCodeFromRgba","grad","addColorStop","globalAlpha","disappearStartRate","beginPath","arc","fill","code","value","Number","parseInt","substring","r1","g1","b1","a1","toString","slice","toWhite","rate","DrawUtil","Vector","rad","len","syncFromXY","sqrt","atan2","syncFromRad","cos","sin","_VectorUtil","VectorUtil","VisualParamType","_ParamUtil","VisualParams","Object","values","BehaviorParamType","BehaviorParams","SelfParamType","SelfParams","ExtendParamType","ExtendParams","EffectParamType","EffectParams","ModulateParamType","ModulateParams","ConstantType","Constants","ParamUtil","ModulateBuilder","build","extendList","decayRate","decayLimit","gravity","gravityLimit","PreviewUtil","_PreviewUtil","SCREEN_WIDTH","SCREEN_HEIGHT","searchElement","buildLogicProps","origin","rootData","initialValueMapList","initailArrayMapList","createParticleRec","cur","parentValueMapList","parentArrayMapList","_searchElement","_searchElement2","valueMapList","ConstantValueMap","arr","array","fieldMng","mngs","data","fields","field","paramItem","convertFormulaToValue","visualParams","params","behaviorParams","getVisualParam","convertParamsToValue","getBehaviorParam","LIMIT","POS_X","POS_Y","find","VEC_X","VEC_Y","VEC_RAD","VEC_LEN","connectMng","inherits","connect","_connector$disable","_searchElement3","connector","disable","logicItem","method","wrap","logicMng","defs","def","searchDependLogic","depend","_convertParamsToBoole","addValueMap","item","FRAME","itrfldValueMap","loopCnt","extendParams","loopCntVal","LOOP_COUNT","convertParamsToBoolean","INVOKE","_loop","_searchElement4","iterateValueMap","LOOP_ITERATE","iterateArrayMap","_arr$array$i","sendValueMapList","filter","isArray","_convertParamsToValue","sendArrayMapList","_convertParamsToArray","convertParamsToArray","DECAY_LIMIT","DECAY_RATE","GRAVITY_VAL","GRAVITY_LIMIT","RADIUS","colorR","COLOR_R","colorG","COLOR_G","colorB","COLOR_B","colorA","COLOR_A","disappearStart","DISAPPEAR_START","shrinkStart","SHRINK_START","FLASH_APPEAR_FRAME","FLASH_HIDE_FRAME","type","warpList","_warpList$find","formula","v","valueMap","m","formulaStr","varCnt","formulaItems","str","convertFormulaToBoolean","arrayMapList","RADIAN_ROUND","ValidateUtil","_ValidateUtil","checkRequired","checkStringLength","min","max","checkAsciiChars","checkIncludesChars","list","ch","indexOf","checkNumber","isNaN","checkNumberRange","num","checkAll","conditions","result","checkArrayNumber","TreeUtil","_TreeUtil","createNode","parent","depth","isOpen","getChildIndex","node","parentNode","Frame","_props$isDisable","_props$focusNode","isDisable","focusNode","ref","useRef","buildElementNodeFromData","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","jsxList","useMemo","buildJsxRecords","element","spaceList","isCurrent","_Record","current","scrollWidth","isRelation","tempNode","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","clickEvent","onDoubleClick","getLabelJsx","invalidate","_Wrap","ModifyOperations","_templateObject11","_templateObject12","FactoryTreeContext","createContext","LogicMainteTab","setFocusNode","_useState3","_useState4","isModify","setModify","_useState5","_useState6","setInvalidate","LogicUtil","getChildrenDataNode","masterNode","openPreviewDialog","PreviewLogicFrame","master","closeButtonAction","tabIndex","onKeyDown","n","_TreeDiv","_TreeHead","_TreeBody","getNodeDisplayJsx","_PropsDiv","_DetailDiv","_DetailHeader","_DetailHeaderLabel","getTypeName","Provider","setRootData","removeSelf","_node$parent","_node$parent2","_node$parent3","splice","parentWrap","listName","LogicElementUtil","getListParamName","_DetailMainDiv","getDetailComponent","EditorArgumentMng","isVisible","BorderPanel","title","innerJsx","newNode","addChild","_props$isInputOK","isComplete","isCompleteCheck","checkableFields","mappingForm","isInputOK","firstRegist","modifyRegist","SendTemplateDialog","EditorArgumentItem","_useContext2","logicNode","errors","setName","argType","setArgType","reservedList","_node$parent2$parent","getParamNameList","valueType","syncArgumentAdd","prevName","syncArgumentName","FormRecord","titleLabel","jsx","TextField","isReadOnly","checkable","setCheckable","validates","checker","errorType","checkFieldName","Combobox","ArgTypes","labelText","headBlank","refers","getArgumentRefers","syncArgumentDel","getSwapButtons","argName","searchVariableReferInFormula","varItem","newName","syncFormula","mng","visualMng","behaviorMng","inhMng","inh","_LogicElementUtil$get","_LogicElementUtil$get2","inhfld","getInnerWrap","syncParamName","_logicNode$parent","runRec","logic","conn","inhLogic","getInnerWrapFixed","sendMng","seedMng","interfaceWrap","_logicNode$parent2","connWrap","syncArgumentCallback","_logicNode$parent3","inhMngNode","getInnerNodeFixed","seedNode","interfaceNode","sendNode","entry","newArgName","paramWrap","createParamWrap","delArgName","delIndex","some","EditorSeedMng","itemWrap","EditorLogicMng","EditorLogicItem","_useMemo","el","_useMemo2","isConnect","hasArgNode","hasFieldNode","hasConnectNode","existNameList","getExistNameList","toggleElement","hasNode","listPos","wrapElement","removeChild","insertChild","getDefaultLogicMngs","syncLogicName","Record","textAlign","Switch","isUse","argumentNode","getInnerNode","hasArgument","args","fieldNode","hasField","inheritNode","hasInherit","getReplicateButton","getLocgicRefers","logicName","searchLogicReferInherit","id","logicMngNode","Level","EditorParamItem","setFormulaItems","varFormList","setVarFormList","isField","isCondition","inputType","level","FIELD","INITIAL","INHERIT_FIELD","INHERIT_EXTEND","INHERIT_SEND","SEED","argumentList","arrayArgList","fieldKeys","parentType","_getLogicNode","_node$parent4","_node$parent4$parent","_node$parent4$parent$","getLogicNode","argMng","arg","fieldName","_node$parent5","Error","_node$parent6","inhfldNode","_node$parent7","fieldKeyList","paramNameList","_node$parent8","_node$parent8$parent","addNum","delNum","parenthesisBalance","formJsxList","labelWidth","marginTop","ParamInputTypes","marginLeft","isNumber","getValueForm","isLastVar","isFormulaOK","hasFormError","varForm","getFormulaItem","syncFieldName","_Formula","isInvalid","_Var","_Sig","getFormulaJsx","getFieldRefers","mngNode","_mngNode$parent","_mngNode$parent2","_LogicElementUtil$get3","_LogicElementUtil$get4","inheritWrap","span","EditorBehiviorMng","isVector","hasDecayParam","hasGravityParam","exchangeVectorMethod","flag","trueParamElements","falseParamElements","size","exchangeElements","toggleElements","paramElements","EditorVisualMng","drawMethod","THICKNESS","hasDisappearParam","hasShrinkParam","hasFlashParam","EditorInheritConnMng","EditorInheritConnector","_disable","identify","setIdentify","setMethod","setDepend","defaultName","getNumberingOnPrefixName","isCreate","logicList","idList","initConnectorNode","syncTreeElementFromWrap","_newNode$parent","initSendParams","sendParamList","_sendNode$parent","dependItem","argWrap","getSendParamList","curParamList","isChange","ConnectTypes","isEnabled","dependency","dependLogic","inherit","newWrap","JSON","parse","stringify","getChildrenElementNode","rootNode","clone","_SendTemplateDialog","COMPONENT_WIDTH","ConnectParentPosition","xName","setXName","yName","setYName","_props$node$parent","checkItems","argNode","behaviorNode","setParamValue","prpName","targetParam","SetParentPosition","_useState7","_useState8","paramList","xParam","yParam","DrawableVectorChooser","_DrawableVectorChooser","EditorSendManager","isDepend","EditorFieldMng","EditorExtendMng","hasLoopParam","hasInvokeParam","EditorSeedItem","disp","setDisp","setEntry","permit","setPermit","_param$disp","logicNameList","seed","items","samples","PermitTypes","EditorThumbnailMng","LogicTreeContext","WND_SIZE","EditorThumbnailItem","_node$parent$parent","seedWrap","setFrame","urls","setUrls","setTimeout","sample","getThumbnailURL","targetFrame","sampleNo","frameCnt","_node$parent3$parent","argMap","sendParams","send","_PreviewUtil$convertP","getSeedValueMap","_LogicElementUtil$get5","_PreviewUtil$convertP2","getSeedArrayMap","par","_ret","pictureJsxList","_LogicElementUtil$get6","imgJsx","_IMG","src","_SampleDiv","_SampleName","_CanvasDiv","img","FRAME_WIDTH","ComponentNormal","isDraw","setDraw","pointJsxList","xList","yList","_Point","putAction","clientRect","getBoundingClientRect","posX","posY","addPoint","moveAction","subX","subY","releaseAction","FixedText","isRecordItem","onMouseDown","clientX","clientY","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","pageX","pageY","onTouchMove","onTouchEnd","onTouchCancel","_Center","clear","ComponentColorable","setR","setG","_useState9","_useState10","setB","rList","gList","bList","colorCode","_PointColorable","_Color","onChange","target","LogicFormUtil","input","buildPreviewForms","formgrpList","formList","setFormList","usedGrps","form","argument","formgrp","grp","targetForms","j","_Message","_Type","_Range","formIndex","disabled","xValue","yValue","join","rValue","gValue","bValue","labelName","step","_Tsumami","EditorSampleItem","paramForms","setParamForms","argInfoList","formgrpMng","defines","seedargList","defval","EditorSampleMng","EditorInterfaceManager","argMngNode","sendMngNode","sampleMngNode","hasGroupNode","execute","removeChildAll","newArgWrap","groupMngNode","hasGroup","EditorSeedArgMng","EditorSeedArgItem","setMin","setMax","setStep","_useState11","_useState12","setDefval","_useState13","_useState14","isPosX","setPosX","_useState15","_useState16","setArray","_param$isPosX","_param$isArray","curIndex","getCurrentIndex","getSwapButtonsCallback","isUpper","sampleMng","swapNode","sendMngWrap","_arg$defval","EditorSeedSendMng","EditorFormgrpItem","groupMethod","setGroupMethod","targetList","setTargetList","seedargs","Array","FromGrpMedhods","formName","EditorFormgrpMng","_LogicUtil","COLOR_METHOD","COLOR_MNG","COLOR_LIST","COLOR_ITEM","COLOR_FIELD","isFocus","_Category","backgroundColor","detailJsx","_Span","_Field","_EditableValue","_data2$disable","_Signature","_Detail","nameJsx","_ValueType","FactDetSeedMng","FactDetArgumentMng","FactDetBehiviorMng","wrapNode","get","elementNode","_LogicElementUtil","_len","arguments","typeList","_key","_len2","_key2","innerNode","apply","_len3","_key3","_len4","_key4","innerWrap","isHead","isTail","ownerChildren","findIndex","swapOrder","ownDataChildren","curNo","swapData","_len5","dependencyMngNodes","_key5","depNode","replicateSameLevel","cloneBase","cloneDest","namable","getNamableProps","targetElement","getIdentifyParamName","childWrap","createParamWrapList","paramDataList","createVisualParams","createBehaviorParams","findSeedWrap","getInitialData","nameList","curWrap","nameParam","mngWrap","listParam","getLogicNameList","curLogicOwner","prefix","_getLogicItem","mngType","_node$parent5$parent","_node$parent5$parent$","_node$parent5$parent$2","getLogicItem","seedId","doParticleJob","fuse","_logicMng$defs$find","getOrigin","seedargMng","seedarg","getSendingValueMap","getSendingArrayMap","getSeedProperties","seedsendList","thumbnailList","_logicMng$defs$find2","SPUtil","_SPUtil","PreviewLogicInputForm","logicWrap","setSendingValueMap","setSendingArrayMap","PreviewSeedInputForm","template","setTemplate","formgrpWrap","presetList","arrayMap","ButtonItem","button","selectedIndex","PreviewLauncherFrameSp","setCur","isPlay","setPlay","sceens","previewTabJsx","_ProgressDiv","clickX","left","pageXOffset","_ProgressVal","isIconButton","interval","icon","AiFillStepBackward","AiFillStepForward","IoStopOutline","VscDebugStart","RxReset","_CloseButton","closeAction","BuildUtil","_BuildUtil","run","_props$guaranteeFrame","minFrame","guaranteeFrame","doIterate","particle","limitFrame","limitParticle","doEnd","runPaging","beginFrame","advanceFrame","_props$guaranteeFrame2","BuildFrame","dispatcher","storyPreviewProps","setStoryPreviewProps","useFrame","curFrame","buildCache","setBuildCache","logicData","fuseList","updateStore","isStandby","_Blind","_ProgressBox","_RateVal","getJsx","setSceens","setFrameCnt","setTabIndex","isBuild","setBuild","sendingValueMap","_useState17","_useState18","sendingArrayMap","isSeed","buildTabJsx","_Msg","_FormDiv","PreviewLauncherFrame","NameDefDialog","DirectLinkManager","libData","setLibData","setStoryData","seedSeq","setSeedSeq","findProject","projectSeq","resList","res","ownerId","lastmod","unZip","source","hasOwnProperty","scenarioProps","scenarioData","seedList","argCount","_Header","_seed$disp","seedName","_Item","_SeedName","_ArgCnt","getBlindJsx","VscSettingsGear","_asyncToGenerator","_regeneratorRuntime","mark","_callee","conteseq","response","results","_context","prev","next","sendQueryRequestToAPI","sent","json","abrupt","stop","_x","MobileRoot","isPermit","adjLeft","adjTop","screen","setScreen","getDecryptionedProjectSeq","hashKey","rect","clientWidth","clientHeight","isFitSide","userAgent","isSmartPhone","orientation","alert","_Error","top","match","GloballDialog","AccountFrame","userId","setUserId","oldPass","setOldPass","newPass","setNewPass","newPassConfirm","setNewPassConfirm","email","setEmail","userIdList","setUserIdList","emailList","setEmailList","loginProps","reloadInfo","password","findUserInfoList","info","hash","getHashedFromUserSeq","seq","history","replaceState","userTabJsx","InputTextFormBak","isPassword","permitRegist","_Body","_Footer","passwordStr","updateUserInfo","LoginCreateAccount","isRegist","setRegist","setPassword","passwordConfirm","setPasswordConfirm","messageList","setMessageList","createAuthText","findUserIdList","authCollation","setAuthCollation","authInput","setAuthInput","authPicture","placeholder","InfoFrame","textRecords","_AuthText","nextSeq","cnt","getNextUserSeq","projects","MessageLink","clickAction","LoginLogin","isForget","setForget","resPrjList","findUserInfoLogin","localStorage","setItem","findUserProjectList","findUserInfoFromEmail","url","sendQueryRequestToMailAPI","from","to","subject","LoginFrame","setCreate","logo","_LogoDiv","_TypeSwitch","TotalHeader","authButtonJsx","_LoginButton","location","ImUser","_UserName","isEntry","removeItem","func","_Logo","_Menu","_Language","MdOutlineLanguage","_MenuItem","TOTAL_HEADER_WIDTH","ChannelPane","_props$isLandscape","isLandscape","ChannelLabel","ChannelContents","_Icon","_Label","_templateObject13","_templateObject14","_templateObject15","_templateObject16","StoryFuseAnalysis","divide","setDivide","peak","setPeak","total","setTotal","countList","setCountList","defList","itemJsxList","rateHeight","count","_AnalisisItem","divRate","pastRate","needPoint","_AnalisisDiv","StoryProperty","setSeed","newFrame","setNewFrame","mapping","curFuse","propertiesFormJsx","activeSeed","formgrps","presets","cancelAction","modifyAction","initFormList","StoryEnvironment","setParticle","maxLimit","reduce","ITEM_WIDTH","TimelineFrame","cacheList","fusePosJsxList","newFrameRate","newFrameValue","focus","sus","cache","_Line","_Sustain","memoriJsxList","DIV_CNT","_Memori","_MeasureDiv","setNewFrameValue","MEASURE_WIDTH","StoryTab","isFuseEdit","setFuseEdit","isEnvEdit","setEnvEdit","tabActiveIndex","setTabActiveIndex","setFocus","setFuseList","groupMng","scenarioCacheList","newCache","thumbList","updateCache","createSeq","fuseJsxList","thumbJsx","thumb","_ItemDiv","_ItemFrame","_PropRecord","_FrameRecord","_SeedRecord","_ThumbFrame","val","_Title","seedProps","_ListDiv","_ListHead","cloneFuse","newSeq","_ListBody","_Timeline","_ListMain","_RightDiv","_RightInner","sort","LIST_HEAD","_templateObject17","_templateObject18","_templateObject19","_templateObject20","_templateObject21","_templateObject22","_templateObject23","_templateObject24","_store$cloud","targetSeq","p","existNames","assert","findProjectMaxSeq","maxSeq","_store$system$user","newProject","insertProject","registCreate","targetItem","updateProjectName","registUpdate","marginBottom","NewProjectDialog","_ref2","_callee2","req","_context2","_x2","_ref3","_callee3","_context3","_x3","_x4","setType","selectedLib","setSelectedLib","localLib","setLocalLib","cloudLibs","setCloudLibs","getStoryLib","storyLib","lib","usingHash","getSHA256Hash","findAllReleaseProjectList","_callee4","_yield$window$showOpe","_yield$window$showOpe2","file","fileContents","_context4","showOpenFilePicker","getFile","fileName","NewProjectDialogStoryOnly","selectedType","setSelectedType","MdCancelPresentation","AiOutlineEnter","extendAction","ShareDialog","ManageTab","fcsListIdx","setFcsListIdx","listItemJsx","project","_ListItem","getHashedFromProjectSeq","onContextMenu","getDirectUrl","_Status","_Name","getProjectType","hasData","incrRec","root","developCnt","privateCnt","releaseCnt","fuseCnt","elementSize","logicCnt","getData","uploadCloud","gZip","overwriteCloudFile","curPrj","updateProjectSource","saveLocalFile","saveLibraryFile","saveScenarioFile","cloudJsx","_ContDiv","scenarioFileProps","deleteProject","localJsx","loadFile","_HeaderDiv","_BodyDiv","_LeftDiv","_RighttDiv","getNewSaveButton","getOverwriteButton","CreateChannel","projectType","SCORE_TAB_MARGIN","PublishFrame","libList","setLibList","setLibCnt","libListJsx","dispCnt","_Owner","_CName","plainData","showSaveFilePicker","types","accept","handle","writable","createWritable","write","close","_CDate","_DetailMain","_SeedItemFrame","_SeedItemInner","_SeedArgCnt","_DetailOpen","_CSummary","_ListFrame","ReleaseNote","setJsx","fetch","record","note","version","date","HOME_USER_DIV_HEIGHT","HomeChannel","userCount","setUserCount","artsCnt","setArtsCnt","countUsers","_Left","_MessageRecord","_Right","MainFrame","AiFillHome","VscGitPullRequestCreate","MAIN_FRAME_MARGIN","Splash","isSwitch","setSwitch","timerId","setTimerId","remove","clearTimeout","_VERSION","_NowLoading","_Copylight","fadeIn","keyframes","PCRoot","splashJsx","_MainDiv","SPHomeChannel","getURL","APP_SERVER_DOMAIN","setText","_TextAreaDiv","TextArea","_UrlDiv","readOnly","InstapaperShareButton","_SnsIconFrame","AiOutlineInstagram","TwitterShareButton","AiOutlineTwitter","MailruShareButton","AiOutlineMail","FacebookShareButton","AiOutlineFacebook","LineShareButton","about","BsLine","textarea","SPManageFrame","_Share","BsFillShareFill","MdClear","IoCreateOutline","setEdit","FiUpload","FaRegSave","FiDownload","MdOutlineDriveFileRenameOutline","RiDeleteBinLine","FuseMainteDialog","preset","setPreset","fuseSeq","dispName","story","COL_WIDTH_LIST","OPTION_BUTTON_WIDTH","FuseList","recordJsxList","_fuse$dispName","_Img","_RecordWrap","_RecordCont","_ColWrap","_TextItem","_ImageItem","_Option","FiEdit","ImCopy","focusSeq","cloneCache","GrView","openPreviewSoloDialog","_HeaderItem","_BodyScrollDiv","isEditable","FrameLine","startY","setStartY","startX","setStartX","frameRateJsxList","posXIndex","range","_FrameRate","isCurr","prevFocusSeq","nowFocusSeq","_FrameLineDiv","isEdit","SPEditStoryFrame","isPreview","setPreview","presetIndex","setPresetIndex","setInterval","seedWrapList","VscPreview","IoSave","_SeedDiv","AiOutlineAppstoreAdd","newFuseProps","_FuseListFrame","SPCreateChannel","SwitchTwoFace","label1","label2","rate1","rate2","SPRoot","_SplashDiv","cw","_ChannelWrap","Dispatcher","openPreviewAllDialog","RouterManage","HashRouter","basename","process","URLSearchParams","useLocation","search","login","getItem","findUserInfoSeq","Route","path","exact","_FormUtil","checkables","_props$isPassword","_props$validates","_props$dependency","_props$isEnable","_props$isCenter","_props$marginTop","_props$marginBottom","_props$isCenter2","validaters","dep","getErrors","validater","_ItemnLabel","_ItemnInputBak","hasTitle","_props$isEnable2","_props$textAlign","_props$marginTop2","_props$marginBottom2","_props$labelWidth","_props$isEnabled","_props$isVisible","_props$textAlign2","_props$marginTop3","_props$marginBottom3","lablelWidth","DEFAULT_LABEL_WIDTH","_FixedLabel","_props$isPassword2","_props$isNumber","_props$isEnabled2","_props$validates2","_props$dependency2","_props$step","setNaN","_ItemnInput","valueAsNumber","onBlur","_props$validates3","_props$dependency3","_props$headBlank","_props$isEnabled3","_props$width2","unshift","_ItemCombobox","_item$isDisabled","_item$isDisabled2","isDisabled","_props$validates4","_props$dependency4","_ItemnTextArea","_props$align","_props$interval","_props$marginTop4","_props$marginBottom4","_button$isEnable","_button$isEnable2","_Button","_IconButton","_button$interval","_button$isEnable3","_button$isEnable4","_props$isCenter3","_props$marginTop5","_props$marginBottom5","_props$isCenter4","_props$isCenter5","_props$marginTop6","_props$marginBottom6","_props$isCenter6","isLink","_props$isEnable3","_props$backgroundColo","_BorderText","_BorderPanel","_props$height2","_InfoDiv","_props$isRelation","_props$isEnable4","_Switch","_props$isEnable5","_props$isEditable","_SwitchTwoFace","_SwitchItem","isLeft","_props$marginLeft","select","_props$marginLeft2","option","_templateObject25","_templateObject26","_templateObject28","_templateObject27","_templateObject29","_templateObject30","_templateObject31","_templateObject33","_templateObject32","_templateObject34","_templateObject35","_templateObject36","_templateObject38","_templateObject37","_templateObject40","_templateObject39","_templateObject41","_templateObject42","_templateObject43","_templateObject44","_templateObject45","_templateObject46","_templateObject47","_templateObject48","_templateObject49","_templateObject50","_templateObject51","_templateObject52","_templateObject53","_templateObject54","_templateObject55","_DataUtil","DB_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","encode","Base64","getDecryptionedUserSeq","hashedSeq","hashids","decode","getPreviewURL","scoreSeq","hashedKey","mode","headers","Accept","body","createSendMailRequestInit","queryType","sql","databaseName","createQueryRequestInit","saveFile","findUserInfoFromSeq","_ref4","_ref5","_callee5","_context5","_ref6","_callee6","_context6","_x5","_callee7","_context7","findUserScoreList","_ref8","_callee8","userSeq","_context8","_x6","_ref9","_callee9","storyOnly","_context9","_x7","_x8","_callee10","_context10","saveFileBak","_callee11","_context11","_callee12","_context12","extension","options","_callee13","_context13","_callee14","_context14","original","sha256","content","encodeURIComponent","zlib","gzipSync","buffer","Buffer","unzipSync","decodeURIComponent","getStringFromDate","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace"],"mappings":"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","file":"static/js/main.02e10a48.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 18px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 22px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport { useContext } from \"react\";\r\n\r\nnamespace ConfirmDialog {\r\n\r\n    export const Component = (props: {\r\n        message: string;\r\n        width?: number;\r\n        height?: number;\r\n        buttons?: FormUtil.ButtonProps[];\r\n    }) => {\r\n\r\n        const {store,  setStore } = useContext(GlobalContext);\r\n\r\n        const width = props.width ?? 600;\r\n        const height = props.height ?? 150;\r\n        const buttons = props.buttons ?? [\r\n            {\r\n                label: 'OK',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({...store});\r\n                }\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main><_Inner>\r\n                    {props.message.split('\\n').map((msg, i) => {\r\n                        return <FormUtil.Message\r\n                            key={i}\r\n                            message={msg}\r\n                            isCenter\r\n                        />\r\n                    })}\r\n                </_Inner></_Main>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons} />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 110px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* background-color: #bb6868e1; */\r\n`;","import React, { useEffect } from 'react';\r\nimport SystemEntry from './system/contents/entry/systemEntry';\r\n\r\nconst App = () => {\r\n\r\n  useEffect(() => {\r\n    // 右クリック無効\r\n    document.oncontextmenu = function () { return false; }\r\n\r\n    // window.addEventListener(\"keydown\", function (e) {\r\n    //   // space and arrow keys\r\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n    //     e.preventDefault();\r\n    //   }\r\n    // }, false);\r\n\r\n    document.onkeydown = (e) => {\r\n      // if (!['F5'].includes(e.key)) {\r\n      //   return false;\r\n      // }\r\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n  }, []);\r\n  return (\r\n    <SystemEntry />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport DataUtil from './system/utils/dataUtil';\r\n\r\nwindow.addEventListener('load', function () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.register(`/pf_apps/${DataUtil.APP_VERSION}/serviceWorker.js`)\r\n      .then(function (registration) {\r\n        console.log(\"serviceWorker registed.\");\r\n      }).catch(function (error) {\r\n        console.warn(\"serviceWorker error.\", error);\r\n      });\r\n  }\r\n});\r\n\r\n/* ピッチインピッチアウトによる拡大縮小を禁止 */\r\ndocument.documentElement.addEventListener('touchstart', function (e) {\r\n  if (e.touches.length >= 2) { e.preventDefault(); }\r\n}, { passive: false });\r\n/* ダブルタップによる拡大を禁止 */\r\nvar t = 0;\r\ndocument.documentElement.addEventListener('touchend', function (e) {\r\n  var now = new Date().getTime();\r\n  if ((now - t) < 350) {\r\n    e.preventDefault();\r\n  }\r\n  t = now;\r\n}, false);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport StoreCloud from \"./storeCloud\";\r\nimport StoreSystem from \"./storeSystem\";\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    system: StoreSystem.Param;\r\n    env: StoreSystem.Env;\r\n    libraryData: LogicUtil.WrapElement | null;\r\n    storyData: StoryUtil.StoryData | null;\r\n    fuseCacheList: StoryUtil.Cache[];\r\n    cloud: StoreCloud.Props | null;\r\n    fileHandle: FileSystemFileHandle | null;\r\n}\r\n\r\n\r\nexport const ProjectTypes = ['library', 'story'] as const;\r\nexport type ProjectType = typeof ProjectTypes[number];\r\n\r\nexport const initialStore: Store = {\r\n    system: {\r\n        isSplash: true,\r\n        user: null,\r\n        dialog: null,\r\n        canDialogClose: false,\r\n        isSPMode: false,\r\n        logoutActions: []\r\n    },\r\n    env: {\r\n        isEditLibrary: true,\r\n        isUseLocalFile: true,\r\n        screenRate: 1,\r\n        scrollLock: false,\r\n    },\r\n    libraryData: null,\r\n    storyData: null,\r\n    fuseCacheList: [],\r\n    cloud: null,\r\n    fileHandle: null,\r\n}","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: (index: number)=>void;\r\n    tabRecordNum?: number;\r\n}\r\n\r\nexport type TabElements = {\r\n    name: string;\r\n    enable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabRecordNum = props.tabRecordNum ?? 1;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList tabRecordNum={tabRecordNum}>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isEnable={tab.enable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList tabRecordNum={tabRecordNum}>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={!tab.enable ? <></> : tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isEnable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: inline-block;\r\n    height: ${props => 35 * props.tabRecordNum}px;\r\n    text-align: left;\r\n    /* background-color: #ac3b3b; */\r\n    width: 100%;\r\n`;\r\nconst _ContList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\r\n    border-radius: 0 6px 6px 6px;\r\n    /* box-shadow: 0 2px 0 0 #000b3a48; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    \r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                margin-top: 5px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${props.isEnable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","\r\nnamespace SystemConst {\r\n    export const AUTH_TEXT_WIDTH = 350;\r\n    export const AUTH_TEXT_HEIGHT = 70;\r\n\r\n    export const SESSTION_KEY_LOGIN = 'pixelflare-login-sesq'; \r\n}\r\n\r\nexport default SystemConst;\r\n\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n\r\n// ホームチャンネル\r\nexport const HOME_USER_DIV_HEIGHT = 400;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import SystemConst from \"./systemConst\";\r\n\r\nnamespace CanvasUtil {\r\n\r\n    /**\r\n     * Canvasに任意の描画をし、画像のURLを取得する\r\n     * @param width 幅\r\n     * @param height 高さ\r\n     * @param draw 描画\r\n     * @returns 画像のURL\r\n     */\r\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        draw(ctx);\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    export const getLogoURL = () => {\r\n        return CanvasUtil.createURL(360, 80, (ctx) => {\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.fillRect(0, 0, 350, 80);\r\n\r\n            ctx.shadowColor = \"#555\";\r\n            ctx.shadowOffsetX = 2;\r\n            ctx.shadowOffsetY = 1;\r\n            ctx.shadowBlur = 5;\r\n            ctx.font = 'italic 50pt Arial';\r\n            ctx.fillStyle = '#c6dce2';\r\n            ctx.fillText('Pixel ', 14, 64);\r\n            const adjust = ctx.measureText('Pixel ').width;\r\n            ctx.fillStyle = '#768fc4';\r\n            ctx.fillText('Flare', 14 + adjust, 64);\r\n            ctx.save();\r\n        });\r\n    }\r\n\r\n    export const getAuthTextURL = (text: string) => {\r\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\r\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\r\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\r\n            ctx.rotate(1 * Math.PI / 180);\r\n            for (let i = 0; i < text.length; i++) {\r\n                const char = text.charAt(i);\r\n\r\n                const fontRand = Math.random() * 60;\r\n                const alphaRand = Math.random() * 60;\r\n                ctx.font = `${20 + fontRand}pt Arial`;\r\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\r\n                ctx.fillText(char, i * SIZE, 60);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CanvasUtil;","import VectorUtil from \"./vectorUtil\";\r\n\r\nnamespace Particle {\r\n\r\n    export type Props = {\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        limit: number;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n    }\r\n\r\n    export class Instance {\r\n\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        prevPos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        frame: number;\r\n        limit: number;\r\n        isLive: boolean;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n\r\n        constructor(props: Props) {\r\n            this.owner = props.owner;\r\n            this.pos = props.pos;\r\n            this.prevPos = props.pos;\r\n            this.vec = props.vec;\r\n\r\n            this.frame = 0;\r\n            this.limit = props.limit;\r\n            this.isLive = true;\r\n            this.drawer = props.drawer;\r\n            this.extend = props.extend;\r\n        }\r\n\r\n        update = () => {\r\n\r\n            this.pos.x += this.vec.xy.x;\r\n            this.pos.y += this.vec.xy.y;\r\n\r\n            this.extend.forEach(callback => callback(this));\r\n\r\n            if (this.frame === this.limit) {\r\n                this.isLive = false;\r\n            }\r\n            this.frame++;\r\n        }\r\n\r\n        draw = (ctx: CanvasRenderingContext2D) => {\r\n            this.drawer(this, ctx);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Particle;","import Particle from \"./particle\";\r\n\r\nnamespace DrawUtil {\r\n\r\n    export type Rgba = {\r\n        r: number;\r\n        g: number;\r\n        b: number;\r\n        a: number;\r\n    }\r\n\r\n    export type ColorStop = {\r\n        offset: number;\r\n        color: string;\r\n    }\r\n\r\n    export type DrawerParam = {\r\n        color: string;\r\n        radius?: number;\r\n        disappearStartRate?: number;\r\n        shrinkStartRate?: number;\r\n        flashAppearFrame?: number;\r\n        flashHideFrame?: number;\r\n    }\r\n\r\n    export const createGradDrawer = (param: DrawerParam) => {\r\n\r\n        /** 基準となる半径 */\r\n        const radiusBase = param.radius ?? 30;\r\n        return (self: Particle.Instance, ctx: CanvasRenderingContext2D) => {\r\n            if (param.flashAppearFrame != undefined) {\r\n                const appearFrame = param.flashAppearFrame;\r\n                const hideFrame = (param.flashHideFrame as number);\r\n                const unitFrame = appearFrame + hideFrame;\r\n                if ((self.frame % unitFrame) >= appearFrame) return;\r\n            }\r\n\r\n            let radius = radiusBase;\r\n            if (param.shrinkStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.shrinkStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    const rate = (limit - frame) / limit;\r\n                    radius *= rate;\r\n                }\r\n            }\r\n\r\n            const x = self.pos.x;\r\n            const y = self.pos.y;\r\n            const g = ctx.createRadialGradient(x, y, 1, x, y, radius);\r\n\r\n            const grads: ColorStop[] = [];\r\n            const rgba = convertRgbaFromColorCode(param.color) ?? { r: 255, g: 255, b: 255, a: 255 };\r\n            grads.push({ offset: 0, color: convertColorCodeFromRgba({ r: 255, g: 255, b: 255, a: Math.floor(rgba.a * 0.9) }) });\r\n            grads.push({ offset: 0.2, color: convertColorCodeFromRgba({ ...rgba, a: Math.floor(rgba.a * 0.15) }) });\r\n            grads.push({ offset: 1, color: convertColorCodeFromRgba({ ...rgba, a: 1 }) });\r\n\r\n            grads.forEach(grad => {\r\n                g.addColorStop(grad.offset, grad.color);\r\n            });\r\n\r\n            ctx.globalAlpha = 1;\r\n            if (param.disappearStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.disappearStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    ctx.globalAlpha = (limit - frame) / limit;\r\n                }\r\n            }\r\n\r\n            ctx.fillStyle = g;\r\n            // ctx.fillStyle = param.color;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n        };\r\n    }\r\n\r\n    export const convertRgbaFromColorCode = (code: string): Rgba | null => {\r\n        const div = code.split('#');\r\n        if (div.length !== 2 || div[1].length < 6) return null;\r\n\r\n        const value = div[1];\r\n        const r = Number.parseInt(value.substring(0, 2), 16);\r\n        const g = Number.parseInt(value.substring(2, 4), 16);\r\n        const b = Number.parseInt(value.substring(4, 6), 16);\r\n        let a = 1;\r\n        if (value.length === 8) {\r\n            a = Number.parseInt(value.substring(6, 8), 16);\r\n        }\r\n        return { r, g, b, a };\r\n    }\r\n\r\n    export const convertColorCodeFromRgba = (rgba: Rgba): string => {\r\n        const r1 = (Math.floor(rgba.r));\r\n        const g1 = (Math.floor(rgba.g));\r\n        const b1 = (Math.floor(rgba.b));\r\n        const a1 = (Math.floor(rgba.a));\r\n        const r = ('00' + r1.toString(16)).slice(-2);\r\n        const g = ('00' + g1.toString(16)).slice(-2);\r\n        const b = ('00' + b1.toString(16)).slice(-2);\r\n        const a = ('00' + a1.toString(16)).slice(-2);\r\n        return `#${r}${g}${b}${a}`;\r\n    }\r\n\r\n    export const toWhite = (color: string, rate: number): string => {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport default DrawUtil;","namespace VectorUtil {\r\n\r\n    export type XY = {\r\n        x: number, y: number;\r\n    }\r\n\r\n    export class Vector {\r\n\r\n        xy: XY;\r\n        rad: number;\r\n        len: number;\r\n\r\n        constructor(xy: XY) {\r\n            this.xy = xy;\r\n            this.rad = 0;\r\n            this.len = 0;\r\n            this.syncFromXY();\r\n        }\r\n\r\n        syncFromXY = () => {\r\n            this.len = Math.sqrt(this.xy.x * this.xy.x + this.xy.y * this.xy.y);\r\n            this.rad = Math.atan2(this.xy.y, this.xy.x);\r\n        }\r\n\r\n        syncFromRad = () => {\r\n            this.xy.x = Math.cos(this.rad) * this.len;\r\n            this.xy.y = Math.sin(this.rad) * this.len;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default VectorUtil;","\r\nnamespace ParamUtil {\r\n    export enum VisualParamType {\r\n        RADIUS = 'radius',\r\n        COLOR_R = 'color_r',\r\n        COLOR_G = 'color_g',\r\n        COLOR_B = 'color_b',\r\n        COLOR_A = 'color_a',\r\n        THICKNESS = 'thickness',\r\n    }\r\n    export const VisualParams = Object.values(VisualParamType);\r\n    export type VisualParam = typeof VisualParams[number];\r\n\r\n    export enum BehaviorParamType {\r\n        LIMIT = 'limit',\r\n        POS_X = 'pos_x',\r\n        POS_Y = 'pos_y',\r\n        VEC_X = 'vec_x',\r\n        VEC_Y = 'vec_y',\r\n        VEC_RAD = 'vec_radian',\r\n        VEC_LEN = 'vec_length',\r\n    }\r\n    export const BehaviorParams = Object.values(BehaviorParamType);\r\n    export type BehaviorParam = typeof BehaviorParams[number];\r\n\r\n    export enum SelfParamType {\r\n        FRAME = 'self_frame',\r\n        LIMIT = 'self_limit',\r\n        POS_X = 'self_pos_x',\r\n        POS_Y = 'self_pos_y',\r\n        VEC_X = 'self_vec_x',\r\n        VEC_Y = 'self_vec_y',\r\n        VEC_RAD = 'self_vec_radian',\r\n        VEC_LEN = 'self_vec_length',\r\n    }\r\n    export const SelfParams = Object.values(SelfParamType);\r\n    export type SelfParam = typeof SelfParams[number];\r\n\r\n    export enum ExtendParamType {\r\n        LOOP_COUNT = 'loop_count',\r\n        LOOP_ITERATE = 'loop_iterate',\r\n        INVOKE = 'invoke',\r\n    }\r\n    export const ExtendParams = Object.values(ExtendParamType);\r\n    export type ExtendParam = typeof ExtendParams[number];\r\n\r\n    export enum EffectParamType {\r\n        DISAPPEAR_START = 'disappear_start',\r\n        SHRINK_START = 'shrink_start',\r\n        FLASH_APPEAR_FRAME = 'flash_appear_frame',\r\n        FLASH_HIDE_FRAME = 'flash_hide_frame',\r\n    }\r\n    export const EffectParams = Object.values(EffectParamType);\r\n    export type EffectParam = typeof EffectParams[number];\r\n\r\n    export enum ModulateParamType {\r\n        DECAY_RATE = 'decay_rate',\r\n        DECAY_LIMIT = 'decay_limit',\r\n        GRAVITY_VAL = 'gravity_val',\r\n        GRAVITY_LIMIT = 'gravity_limit',\r\n    }\r\n    export const ModulateParams = Object.values(ModulateParamType);\r\n    export type ModulateParam = typeof ModulateParams[number];\r\n\r\n    export enum ConstantType {\r\n        SCREEN_WIDTH = 'screen_width',\r\n        SCREEN_HEIGHT = 'screen_height',\r\n        PI = 'pi',\r\n        RADIAN_ROUND = 'radian_round',\r\n    }\r\n    export const Constants = Object.values(ConstantType);\r\n    export type Constant = typeof Constants[number];\r\n\r\n}\r\n\r\nexport default ParamUtil;","import Particle from \"../../graphic/particle\";\r\n\r\nnamespace ModulateBuilder {\r\n\r\n    type ModulateParam = {\r\n        decayRate?: number;\r\n        decayLimit?: number;\r\n        gravity?: number;\r\n        gravityLimit?: number;\r\n    }\r\n\r\n    export const build = (extendList: ((self: Particle.Instance) => void)[], param: ModulateParam) => {\r\n        \r\n        // 減衰メソッド\r\n        if (param.decayRate != undefined && param.decayLimit != undefined) {\r\n            const decayLimit = param.decayLimit;\r\n            const decayRate = param.decayRate;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.len > decayLimit) {\r\n                    self.vec.len = self.vec.len * decayRate;\r\n                    self.vec.syncFromRad();\r\n                }\r\n            });\r\n        }\r\n        // 重力メソッド\r\n        if (param.gravity != undefined && param.gravityLimit != undefined) {\r\n            const gravityLimit = param.gravityLimit;\r\n            const gravity = param.gravity;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.xy.y < gravityLimit) {\r\n                    self.vec.xy.y += gravity;\r\n                    self.vec.syncFromXY();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModulateBuilder;","import DrawUtil from \"../../graphic/drawUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport ParamUtil from \"../factory/util/paramUtil\";\r\nimport ModulateBuilder from \"./modulateBuilder\";\r\n\r\nnamespace PreviewUtil {\r\n\r\n    export const SCREEN_WIDTH = 550;\r\n    export const SCREEN_HEIGHT = 550;\r\n\r\n    export type ValueMap = {\r\n        name: string;\r\n        value: number;\r\n    }\r\n\r\n    export type ArrayMap = {\r\n        name: string;\r\n        array: number[];\r\n    }\r\n\r\n    export const buildLogicProps = (\r\n        owner: Particle.Instance[],\r\n        origin: LogicUtil.NodeLogicItem,\r\n        rootData: LogicUtil.WrapElement,\r\n        initialValueMapList: ValueMap[],\r\n        initailArrayMapList: ArrayMap[]\r\n    ): Particle.Props => {\r\nconsole.log(initailArrayMapList);\r\n        /**\r\n         * ディペンドするロジック要素を識別名から探して返す。\r\n         * @param name ロジックの識別名\r\n         * @returns ロジック要素\r\n         */\r\n        const searchDependLogic = (name: string): LogicUtil.NodeLogicItem | null => {\r\n            const mng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n            const wrap = mng.defs.find(def => (def.data as LogicUtil.NodeLogicItem).name === name);\r\n            if (wrap == undefined) return null;\r\n            return wrap.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        /**\r\n         * 再帰的にパーティクルを生成する。\r\n         * @param cur ルートとなるロジック要素\r\n         * @param parentValueMapList 親要素から送られてきたValueMap\r\n         * @param parentArrayMapList 親要素から送られてきたArrayMap\r\n         * @returns パーティクルのプロパティ\r\n         */\r\n        const createParticleRec = (cur: LogicUtil.NodeLogicItem, parentValueMapList: ValueMap[], parentArrayMapList: ArrayMap[]): Particle.Props => {\r\n            const valueMapList: ValueMap[] = parentValueMapList.concat(ConstantValueMap);\r\n\r\n            // 配列Mapのプロパティ変数を生成\r\n            parentArrayMapList.forEach(arr => {\r\n                valueMapList.push({ name: arr.name + '.len', value: arr.array.length });\r\n            });\r\n\r\n            // フィールドのパラメータを取得\r\n            const fieldMng = searchElement('field-mng', cur.mngs);\r\n            if (fieldMng != null) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                    valueMapList.push({ name: paramItem.name, value });\r\n                });\r\n            }\r\n\r\n            const visualParams = (searchElement('visual-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n            const behaviorParams = (searchElement('behavior-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n\r\n            const getVisualParam = (name: string) => {\r\n                return convertParamsToValue(name, visualParams, valueMapList);\r\n            }\r\n            const getBehaviorParam = (name: string) => {\r\n                return convertParamsToValue(name, behaviorParams, valueMapList);\r\n            }\r\n\r\n            // Behaviorのパラメータを取得\r\n            const limit = Math.floor(getBehaviorParam(ParamUtil.BehaviorParamType.LIMIT) as number);\r\n            const pos = {\r\n                x: getBehaviorParam(ParamUtil.BehaviorParamType.POS_X) as number,\r\n                y: getBehaviorParam(ParamUtil.BehaviorParamType.POS_Y) as number\r\n            };\r\n            const vec = new VectorUtil.Vector({ x: 0, y: 0 });\r\n            const isVectorMethod = behaviorParams.find(param => param.name === ParamUtil.BehaviorParamType.VEC_X) != undefined;\r\n            if (isVectorMethod) {\r\n                vec.xy.x = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_X) as number;\r\n                vec.xy.y = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_Y) as number;\r\n                vec.syncFromXY();\r\n            } else {\r\n                vec.rad = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_RAD) as number;\r\n                vec.len = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_LEN) as number;\r\n                vec.syncFromRad();\r\n            }\r\n\r\n            /**\r\n             * 追加動作（子要素、エフェクト、モデュレート）\r\n             */\r\n            const extendList: ((self: Particle.Instance) => void)[] = [];\r\n\r\n            // 子要素を生成する\r\n            const connectMng = searchElement('inherit-mng', cur.mngs);\r\n            if (connectMng != null) {\r\n\r\n                // パーティクル情報のフィールド追加\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_X, value: pos.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_Y, value: pos.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_RAD, value: vec.rad });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_LEN, value: vec.len });\r\n\r\n                const connects = (connectMng.data as LogicUtil.NodeConnectManager).inherits;\r\n\r\n                connects.forEach(connect => {\r\n                    const connector = connect.data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.disable ?? false) return;\r\n\r\n                    const logicItem = connector.method === 'create' ?\r\n                        searchElement('inherit-logic', connector.mngs)?.data as LogicUtil.NodeLogicItem :\r\n                        searchDependLogic(connector.depend);\r\n\r\n                    if (logicItem != null) {\r\n\r\n                        extendList.push((self: Particle.Instance) => {\r\n\r\n                            const addValueMap = (item: ValueMap) => {\r\n                                const map = valueMapList.find(map => map.name === item.name);\r\n                                if (map != undefined) map.value = item.value;\r\n                                else valueMapList.push(item);\r\n                            }\r\n                            addValueMap({ name: ParamUtil.SelfParamType.FRAME, value: self.frame });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.LIMIT, value: self.limit });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_X, value: self.pos.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_Y, value: self.pos.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_X, value: self.vec.xy.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_Y, value: self.vec.xy.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_RAD, value: self.vec.rad });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_LEN, value: self.vec.len });\r\n\r\n                            // Inherit配下のフィールドのパラメータを取得\r\n                            const itrfldValueMap: ValueMap[] = [];\r\n                            const fieldMng = searchElement('inhfld-mng', connector.mngs);\r\n                            if (fieldMng != null) {\r\n                                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                                    itrfldValueMap.push({ name: paramItem.name, value });\r\n                                });\r\n                            }\r\n\r\n                            let loopCnt = 1;\r\n                            const extendItem = searchElement('extend-mng', connector.mngs) as LogicUtil.WrapElement;\r\n                            const extendParams = (extendItem.data as LogicUtil.NodeParamManager).params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                            const loopCntVal = convertParamsToValue(ParamUtil.ExtendParamType.LOOP_COUNT, extendParams, valueMapList.concat(itrfldValueMap));\r\n\r\n                            // 派生条件\r\n                            const isInvoke = convertParamsToBoolean(ParamUtil.ExtendParamType.INVOKE, extendParams, valueMapList) ?? true;\r\n\r\n                            // 条件を満たさない場合、以下の処理（パーティクルの生成）を行わない\r\n                            if (!isInvoke) return;\r\n\r\n                            // イテレータを利用している場合\r\n                            if (loopCntVal != undefined) {\r\n                                loopCnt = loopCntVal;\r\n                            }\r\n\r\n                            for (let i = 0; i < loopCnt; i++) {\r\n\r\n                                // イテレータ関連のパラメータを追加\r\n                                const iterateValueMap: ValueMap[] = [\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_COUNT, value: loopCnt },\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_ITERATE, value: i }\r\n                                ];\r\n\r\n                                // 配列Mapのイテレータ変数を追加\r\n                                const iterateArrayMap: ValueMap[] = parentArrayMapList.map(arr => {\r\n                                    return { name: arr.name + '.itr', value: arr.array[i] ?? 0 };\r\n                                });\r\n\r\n                                const sendItem = searchElement('send-mng', connector.mngs)?.data as LogicUtil.NodeParamManager;\r\n                                const params = sendItem.params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                                const sendValueMapList: ValueMap[] = params\r\n                                    .filter(item => !item.isArray)\r\n                                    .map(item => {\r\n                                        return {\r\n                                            name: item.name, value: convertParamsToValue(item.name, params, valueMapList\r\n                                                .concat(itrfldValueMap)\r\n                                                .concat(iterateValueMap)\r\n                                                .concat(iterateArrayMap)\r\n                                            ) ?? 0\r\n                                        };\r\n                                    });\r\n                                const sendArrayMapList: ArrayMap[] = params\r\n                                    .filter(item => item.isArray)\r\n                                    .map(item => {\r\n                                        return { name: item.name, array: convertParamsToArray(item.name, params, parentArrayMapList) ?? [] }\r\n                                    });\r\n\r\n                                const props = createParticleRec(\r\n                                    logicItem,\r\n                                    sendValueMapList,\r\n                                    sendArrayMapList\r\n                                );\r\n                                self.owner.push(new Particle.Instance(props));\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            // モデュレート（動きの変化）を付与\r\n            ModulateBuilder.build(extendList, {\r\n                decayLimit: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_LIMIT),\r\n                decayRate: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_RATE),\r\n                gravity: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_VAL),\r\n                gravityLimit: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_LIMIT),\r\n            });\r\n\r\n            // Visualのパラメータを取得\r\n            const radius = getVisualParam(ParamUtil.VisualParamType.RADIUS);\r\n            const colorR = getVisualParam(ParamUtil.VisualParamType.COLOR_R);\r\n            const colorG = getVisualParam(ParamUtil.VisualParamType.COLOR_G);\r\n            const colorB = getVisualParam(ParamUtil.VisualParamType.COLOR_B);\r\n            const colorA = getVisualParam(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // エフェクト付与\r\n            const disappearStart = getVisualParam(ParamUtil.EffectParamType.DISAPPEAR_START);\r\n            const shrinkStart = getVisualParam(ParamUtil.EffectParamType.SHRINK_START);\r\n            const flashAppearFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME);\r\n            const flashHideFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_HIDE_FRAME);\r\n\r\n            let drawer: (self: Particle.Instance, ctx: CanvasRenderingContext2D) => void = () => { };\r\n            if (radius != undefined) {\r\n                drawer = DrawUtil.createGradDrawer({\r\n                    radius: radius,\r\n                    color: DrawUtil.convertColorCodeFromRgba({\r\n                        r: colorR as number,\r\n                        g: colorG as number,\r\n                        b: colorB as number,\r\n                        a: colorA as number,\r\n                    }),\r\n                    disappearStartRate: disappearStart,\r\n                    shrinkStartRate: shrinkStart,\r\n                    flashAppearFrame,\r\n                    flashHideFrame,\r\n                });\r\n            }\r\n\r\n            return {\r\n                owner, pos, vec,\r\n                limit, drawer,\r\n                extend: extendList\r\n            };\r\n        }\r\n\r\n        return createParticleRec(origin, initialValueMapList, initailArrayMapList);\r\n    }\r\n\r\n    const searchElement = (type: LogicUtil.NodeType, warpList: LogicUtil.WrapElement[]) => {\r\n        return warpList.find(wrap => wrap.type === type) ?? null;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param valueMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToValue = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): number | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToValue(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToValue = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): number => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(ret);\r\n        return ret;\r\n    }\r\n\r\n    export const convertParamsToBoolean = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): boolean | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToBoolean(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToBoolean = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): boolean => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item, i) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            else if (item === '=') str = '==';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(formulaStr);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param arrayMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToArray = (name: string, params: LogicUtil.NodeParamItem[], arrayMapList: ArrayMap[]): number[] | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        const item = formula.values[0];\r\n        if (item.type === 'array') {\r\n            return item.value.split(',').map(v => Number(v));\r\n        } else if (item.type === 'argument') {\r\n            const map = arrayMapList.find(array => array.name === item.value);\r\n            return map == undefined ? [] : map.array;\r\n        }\r\n    }\r\n\r\n    export const ConstantValueMap: ValueMap[] = [\r\n        { name: ParamUtil.ConstantType.SCREEN_WIDTH, value: SCREEN_WIDTH },\r\n        { name: ParamUtil.ConstantType.SCREEN_HEIGHT, value: SCREEN_HEIGHT },\r\n        { name: ParamUtil.ConstantType.PI, value: 3.14159265359 },\r\n        { name: ParamUtil.ConstantType.RADIAN_ROUND, value: 3.14159265359 * 2 }\r\n    ];\r\n}\r\n\r\nexport default PreviewUtil;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\r\n\r\n    export type Validate = {\r\n        checker: (value: string) => boolean;\r\n        errorType: ErrorType;\r\n        message?: string;\r\n    }\r\n\r\n    /**\r\n     * 必須チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkRequired = (str: string) => {\r\n        return str.length > 0;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length === 0 || (str.length >= min && str.length <= max);\r\n    }\r\n\r\n    /**\r\n     * 半角英数時チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        return checkIncludesChars(str, list);\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列で構成されているかチェック\r\n     * @param str 検証する文字列\r\n     * @param list 入力を許す対象文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkIncludesChars = (str: string, list: string) => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            const ch = str.charAt(i);\r\n            if (list.indexOf(ch) === -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列が数値に変換できるかチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumber = (str: string) => {\r\n        return !isNaN(Number(str));\r\n    }\r\n\r\n    /**\r\n     * 数値の値の範囲をチェック\r\n     * @param str 検証する文字列\r\n     * @param min 下限\r\n     * @param max 上限\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumberRange = (str: string, min: number, max: number) => {\r\n        if (!isNaN(Number(str))) {\r\n            const num = Number(str);\r\n            return num >= min && num <= max;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    export const checkArrayNumber = (value: string) => value.split(',').find(v => isNaN(Number(v))) == undefined;\r\n}\r\nexport default ValidateUtil;\r\n","import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        // parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        const ref = useRef({} as HTMLDivElement);\r\n\r\n        /**\r\n         * データを元に再帰的に以下のツリーを構成する。\r\n         * @returns ツリー\r\n         */\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        useEffect(() => {\r\n            if (focusNode != null && focusNode.parent != null) {\r\n                focusNode.parent.isOpen = true;\r\n            }\r\n        }, [focusNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            // console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    // 親判定\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    // 兄弟判定\r\n                    if (result === false && focusNode != null && focusNode.parent != null) {\r\n                        result = focusNode.parent.children.find(node => node == element) != undefined;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        width={ref.current.scrollWidth}\r\n                        isActive={isCurrent}\r\n                        isRelation={!isDisable && isRelationNode()}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap\r\n                ref={ref}\r\n                isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #374a54;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #1f3642;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n    isRelation: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #459cff46;\r\n    `}\r\n    opacity: 0.3;\r\n    ${props => !props.isRelation ? '' : css`\r\n        background-color: #ffffff28;\r\n        opacity: 1;\r\n    `}\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #b4d9dd83;\r\n        opacity: 1;\r\n    `}\r\n    width: ${props => props.width}px;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import { useContext, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nnamespace ModifyOperations {\r\n\r\n    export type Props = {\r\n        mappingForm: () => void;\r\n        checkableFields: FormUtil.CheckableValue[];\r\n        isInputOK?: boolean;\r\n        firstRegist: () => void;\r\n        modifyRegist: () => void;\r\n    }\r\n\r\n    export const Component = (props: Props) => {\r\n        const { node, isModify, setModify, removeSelf } = useContext(FactoryTreeContext);\r\n\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n        const isComplete = FormUtil.isCompleteCheck(props.checkableFields);\r\n\r\n        return (<>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: isModify,\r\n                        callback: () => {\r\n                            if (wrap.data == null) {\r\n                                removeSelf();\r\n                            } else {\r\n                                props.mappingForm();\r\n                            }\r\n                            setModify(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !isModify || (props.isInputOK ?? isComplete),\r\n                        callback: () => {\r\n                            if (!isModify) {\r\n                                setModify(true);\r\n                            } else {\r\n                                if (wrap.data == null) {\r\n                                    props.firstRegist();\r\n                                } else {\r\n                                    props.modifyRegist();\r\n                                }\r\n                                setModify(false);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default ModifyOperations;","import { type } from \"os\";\r\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport Common from \"../common\";\r\nimport PreviewLogicFrame from \"../preview/previewLogicFrame\";\r\nimport LogicElementUtil from \"./util/logicElementUtil\";\r\nimport LogicUtil from \"./util/logicUtil\";\r\n\r\nexport const FactoryTreeContext = createContext({} as LogicUtil.DetailArgs);\r\n\r\nconst LogicMainteTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    // const [rootData, setRootData] = useState(LogicElementUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    // const [treeDisable, setTreeDisable] = useState(false);\r\n    const [isModify, setModify] = useState<boolean>(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    const rootData = store.libraryData as LogicUtil.WrapElement;\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: LogicUtil.getChildrenDataNode(rootData)\r\n        }\r\n    }, [rootData]);\r\n\r\n    // useEffect(()=> {\r\n    //     store.logicData = rootData;\r\n    //     setStore({...store});\r\n    // }, [rootData]);\r\n\r\n    const setRootData = (rootData: LogicUtil.WrapElement) => {\r\n        store.libraryData = rootData;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const masterNode = useMemo(() => {\r\n        let cur: TreeUtil.ElementNode | null = focusNode;\r\n        while (cur != null) {\r\n            const type = (cur.data as LogicUtil.WrapElement).type;\r\n            if (['logic-item', 'seed-item'].includes(type)) return cur;\r\n            cur = cur.parent;\r\n        };\r\n        return null;\r\n    }, [focusNode]);\r\n\r\n    /**\r\n     * プレビューダイアログを表示する\r\n     */\r\n    const openPreviewDialog = () => {\r\n        if (masterNode == null) return;\r\n        store.system.dialog = (\r\n            <PreviewLogicFrame.Component\r\n                master={masterNode.data as LogicUtil.WrapElement}\r\n                rootData={rootData}\r\n                closeButtonAction={() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n            onKeyDown={(e) => {\r\n                // console.log(e.key);\r\n                if (isModify || focusNode == null) return;\r\n                switch (e.key) {\r\n                    case 'ArrowRight': {\r\n                        if (focusNode.children.length > 0) {\r\n                            if (!focusNode.isOpen) focusNode.isOpen = true;\r\n                            else setFocusNode(focusNode.children[0]);\r\n                            setInvalidate({});\r\n                        }\r\n                    } break;\r\n                    case 'ArrowLeft': {\r\n                        if (focusNode.isOpen) focusNode.isOpen = false;\r\n                        else {\r\n                            if (focusNode.parent != null) setFocusNode(focusNode.parent);\r\n                        }\r\n                        setInvalidate({});\r\n                    } break;\r\n                    case 'ArrowUp': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n) {\r\n                                    if (i === 0) {\r\n                                        setFocusNode(focusNode.parent);\r\n                                        setInvalidate({});\r\n                                    } else {\r\n                                        setFocusNode(list[i - 1]);\r\n                                        setInvalidate({});\r\n                                    }\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case 'ArrowDown': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n && i < list.length - 1) {\r\n                                    setFocusNode(list[i + 1]);\r\n                                    setInvalidate({});\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case ' ': {\r\n                        if (masterNode != null) openPreviewDialog();\r\n                    } break;\r\n                }\r\n            }}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview',\r\n                                isEnable: masterNode != null,\r\n                                callback: openPreviewDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return LogicUtil.getNodeDisplayJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={isModify}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <_DetailDiv>\r\n                    <_DetailHeader>\r\n                        <_DetailHeaderLabel>{LogicUtil.getTypeName(focusNode)}</_DetailHeaderLabel>\r\n                    </_DetailHeader>\r\n                    <FactoryTreeContext.Provider value={{\r\n                        rootData,\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        isModify,\r\n                        setModify,\r\n                        // treeDisable,\r\n                        setRootData,\r\n                        removeSelf: () => {\r\n                            const node = focusNode as TreeUtil.ElementNode;\r\n                            let index = -1;\r\n                            node.parent?.children.forEach((n, i) => {\r\n                                if (n == node) index = i;\r\n                            });\r\n                            node.parent?.children.splice(index, 1);\r\n                            const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n                            const listName = LogicElementUtil.getListParamName(parentWrap.type);\r\n                            if (listName == null) return;\r\n                            const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n                            list.splice(index, 1);\r\n                            setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                            setInvalidate({});\r\n                        }\r\n                    }}>\r\n                        <_DetailMainDiv>{LogicUtil.getDetailComponent(focusNode)}</_DetailMainDiv>\r\n                    </FactoryTreeContext.Provider>\r\n                </_DetailDiv>\r\n            </_PropsDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default LogicMainteTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #6c8186;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d87b;\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _TreeHeadHalf = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    background-color: #7fbdb47a;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #9fa9b6;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _DetailDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c9;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\nconst _DetailHeader = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #b4b29e; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _DetailHeaderLabel = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #a10000;\r\n    /* background-color: #bbd0d3; */\r\n    border: solid 1px #a10000;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 20px);\r\n    margin: 5px 0 0 10px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DetailMainDiv = styled.div`\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 44px);\r\n    margin: 0 0 0 4px;\r\n    background-color: #ccd2d3;\r\n    border: solid 1px #0026a1;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorArgumentMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'argument-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentMng;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ParamUtil from \"../util/paramUtil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\n\r\nnamespace SendTemplateDialog {\r\n\r\n    const FRAME_WIDTH = 450;\r\n    const FRAME_HEIGHT = 160;\r\n    const COMPONENT_WIDTH = 296;\r\n\r\n    export const ConnectParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, input property name!';\r\n\r\n        /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n        const paramNameList = useMemo(() => {\r\n            const owner = (LogicElementUtil.getInnerWrap(props.node.parent?.data as LogicUtil.WrapElement, 'inherit-logic') as LogicUtil.WrapElement).data;\r\n            return LogicElementUtil.getParamNameList(owner);\r\n        }, [props.node]);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    // Sendにパラメータを追加\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: xName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }] }\r\n                    ), props.node);\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: yName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }] }\r\n                    ), props.node);\r\n\r\n                    // 派生ロジックに引数を追加\r\n                    const logicNode = LogicElementUtil.getInnerNode(props.node.parent as TreeUtil.ElementNode, 'inherit-logic') as TreeUtil.ElementNode;\r\n                    const hasArgNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') != undefined;\r\n                    if (!hasArgNode) {\r\n                        LogicElementUtil.insertChild({\r\n                            type: 'argument-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeArgumentManager\r\n                        }, logicNode, 0);\r\n                    }\r\n                    const argNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') as TreeUtil.ElementNode;\r\n\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: xName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: yName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n\r\n                    // 派生ロジックの座標に引数を設定\r\n                    const behaviorNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'behavior-mng') as TreeUtil.ElementNode;\r\n                    const setParamValue = (prpName: string, argName: string) => {\r\n                        const params = behaviorNode.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                        const targetParam = params.find(param => param.name === prpName) as LogicUtil.NodeParamItem;\r\n                        targetParam.formulaItems = ['var'];\r\n                        targetParam.values = [{ type: 'argument', value: argName }];\r\n                    }\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_X, xName.value);\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_Y, yName.value);\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (yName.value !== '') list.push(yName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[yName]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (xName.value !== '') list.push(xName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[xName]}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n\r\n    export const SetParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, select property name!';\r\n\r\n        const list = useMemo(() => {\r\n            return props.node.children.map(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                return (wrap.data as LogicUtil.NodeParamItem).name;\r\n            });\r\n        }, []);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    const paramList = props.node.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                    const xParam = paramList.find(param => param.name === xName.value) as LogicUtil.NodeParamItem;\r\n                    const yParam = paramList.find(param => param.name === yName.value) as LogicUtil.NodeParamItem;\r\n                    xParam.formulaItems = ['var'];\r\n                    xParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }];\r\n                    yParam.formulaItems = ['var'];\r\n                    yParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }];\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== yName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== xName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SendTemplateDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #d0e7e718;\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport GloballDialog from \"../../../../dialog/globalDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorArgumentItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const logicNode = node.parent?.parent as TreeUtil.ElementNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n        setName({ ...name, value: param.name });\r\n        setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, argType]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeArgumentItem = {\r\n                    name: name.value,\r\n                    valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n                syncArgumentAdd(logicNode, name.value, argType.value as LogicUtil.ArgumentType);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(logicNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = reservedList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeArgumentItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getArgumentRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    // DependしているInheritのSendパラメータを同期する\r\n                                    syncArgumentDel(logicNode, name.value);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentItem;\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param node 引数のノード\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param logicNode ロジックノード\r\n*/\r\nconst syncArgumentName = (logicNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n    const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n    if (fieldMng != undefined) {\r\n        syncFormula((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n    }\r\n    const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n    if (visualMng != undefined) {\r\n        syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n    if (behaviorMng != undefined) {\r\n        syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n    if (inhMng != undefined) {\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n            // Inherit配下のField要素のチェック\r\n            if (inhfld != null) {\r\n                syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n            // Extend要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            // Send要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        });\r\n    }\r\n\r\n    const syncParamName = (params: LogicUtil.WrapElement[]) => {\r\n        params.forEach(wrap => {\r\n            const item = wrap.data as LogicUtil.NodeParamItem;\r\n            if (item.name === prevName) {\r\n                item.name = newName;\r\n            }\r\n        });\r\n    }\r\n    if (wrap.type === 'logic-item') {\r\n\r\n        // dependしている箇所を全て反映するために再帰で洗う\r\n        const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n            const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n            if (inhMng == undefined) return;\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    const inhLogic = LogicElementUtil.getInnerWrapFixed(inh, 'inherit-logic').data as LogicUtil.NodeLogicItem;\r\n                    runRec(inhLogic);\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    const sendMng = LogicElementUtil.getInnerWrapFixed(inh, 'send-mng').data as LogicUtil.NodeParamManager;\r\n                    syncParamName(sendMng.params);\r\n                }\r\n            });\r\n        }\r\n        // ロジックを全て調査する\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(logic => {\r\n            runRec((logic.data as LogicUtil.WrapElement).data);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        const root = (rootNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeRoot;\r\n        const defs = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        console.log(defs.length);\r\n        defs.forEach(wrap => {\r\n            const interfaceWrap = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng');\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(interfaceWrap, 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            syncParamName(sendMng.params);\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const connWrap = logicNode.parent?.data as LogicUtil.WrapElement;\r\n        const sendMng = LogicElementUtil.getInnerWrapFixed(connWrap, 'send-mng').data as LogicUtil.NodeParamManager;\r\n        syncParamName(sendMng.params);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の更新に伴い、参照先のSend管理に処理（callback）を行う\r\n * @param logicNode ロジックノード\r\n * @param callback 処理\r\n */\r\nconst syncArgumentCallback = (\r\n    logicNode: TreeUtil.ElementNode,\r\n    callback: (sendNode: TreeUtil.ElementNode) => void\r\n) => {\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n\r\n    if (wrap.type === 'logic-item') {\r\n        const runRec = (logicNode: TreeUtil.ElementNode) => {\r\n            const inhMngNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'inherit-mng');\r\n            if (inhMngNode == undefined) return;\r\n            inhMngNode.children.forEach(child => {\r\n                const conn = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    runRec(LogicElementUtil.getInnerNodeFixed(child, 'inherit-logic'));\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    callback(LogicElementUtil.getInnerNodeFixed(child, 'send-mng'));\r\n                }\r\n            });\r\n        }\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(child => {\r\n            runRec(child);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        rootNode.children[0].children.forEach(seedNode => {\r\n            const interfaceNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'interface-mng');\r\n            const sendNode = LogicElementUtil.getInnerNodeFixed(interfaceNode, 'seedsend-mng');\r\n            const seed = (seedNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n            if (seed.entry === logicItem.name) {\r\n                callback(sendNode);\r\n            }\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const sendNode = LogicElementUtil.getInnerNodeFixed(logicNode.parent as TreeUtil.ElementNode, 'send-mng');\r\n        callback(sendNode);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentAdd = (logicNode: TreeUtil.ElementNode, newArgName: string, type: LogicUtil.ArgumentType) => {\r\n    const addNewParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const isArray = type === 'array';\r\n        const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n            {\r\n                name: newArgName,\r\n                formulaItems: ['var'],\r\n                values: !isArray ? [{ type:  'direct', value: '0' }] : [{ type:  'array', value: '' }],\r\n                isArray: isArray ? true : undefined\r\n            }\r\n        );\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        sendMng.params.push(paramWrap);\r\n        sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n    }\r\n    syncArgumentCallback(logicNode, addNewParam);\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentDel = (logicNode: TreeUtil.ElementNode, delArgName: string) => {\r\n    const delArgParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        let delIndex = -1;\r\n        sendMng.params.some((param, i) => {\r\n            if ((param.data as LogicUtil.NodeParamItem).name == delArgName) {\r\n                delIndex = i;\r\n                return 1;\r\n            }\r\n        });\r\n        sendMng.params.splice(delIndex, 1);\r\n        sendNode.children.splice(delIndex, 1);\r\n    }\r\n    syncArgumentCallback(logicNode, delArgParam);\r\n}","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Seed',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seed-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedManager).defs.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorLogicMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Logic',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'logic-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\n\r\nconst EditorLogicItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [isConnect, hasArgNode, hasFieldNode, hasConnectNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        return [\r\n            parentType === 'connector',\r\n            list.includes('argument-mng'),\r\n            list.includes('field-mng'),\r\n            list.includes('inherit-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        if (!isConnect) {\r\n            const param = wrap.data as LogicUtil.NodeLogicItem;\r\n            setName({ ...name, value: param.name });\r\n        }\r\n    };\r\n\r\n    /** 既存のロジック名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => {\r\n        // インヘリットの場合、名前を持たないため取得しない\r\n        if (wrap.type === 'inherit-logic') return [];\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node, isConnect]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 引数要素の有無を判定\r\n     */\r\n    const hasArgument = () => {\r\n        const argumentNode = LogicElementUtil.getInnerNode(node, 'argument-mng');\r\n        if (argumentNode == null) return false;\r\n        return argumentNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'field-mng');\r\n        if (fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 派生要素の有無を判定\r\n     */\r\n    const hasInherit = () => {\r\n        const inheritNode = LogicElementUtil.getInnerNode(node, 'inherit-mng');\r\n        if (inheritNode == null) return false;\r\n        return inheritNode.children.length > 0;\r\n    }\r\n\r\n    return (<>\r\n        {isConnect ? <></> : (<>\r\n            <ModifyOperations.Component\r\n                mappingForm={mappingForm}\r\n                checkableFields={[name]}\r\n                firstRegist={() => {\r\n                    const element: LogicUtil.NodeLogicItem = {\r\n                        name: name.value,\r\n                        mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                    };\r\n                    element.name = name.value;\r\n                    wrap.data = element;\r\n\r\n                    element.mngs.forEach(mng => {\r\n                        const newNode = TreeUtil.createNode(mng, node);\r\n                        const data = (newNode.data as LogicUtil.WrapElement).data;\r\n                        (data as LogicUtil.NodeParamManager).params.forEach(param => {\r\n                            newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                        });\r\n                        node.children.push(newNode);\r\n                    });\r\n                    invalidate();\r\n                    setStore({ ...store });\r\n                }}\r\n                modifyRegist={() => {\r\n                    const param = wrap.data as LogicUtil.NodeLogicItem;\r\n                    const prevName = param.name;\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n                    // 名前が変わった場合、参照箇所も修正する\r\n                    if (prevName !== param.name) {\r\n                        syncLogicName(node, prevName, param.name);\r\n                    }\r\n                }}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"param\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Name\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={200}\r\n                                isReadOnly={!isModify}\r\n                                checkable={name}\r\n                                setCheckable={setName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => !existNameList.includes(value),\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n        </>)}\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Argument'}\r\n                        width={300}\r\n                        isUse={hasArgNode}\r\n                        isEnable={!hasArgument()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasArgNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'argument-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as LogicUtil.NodeArgumentManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            if (hasArgNode) listPos++;\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'field-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Inherit'}\r\n                            width={300}\r\n                            isUse={hasConnectNode}\r\n                            isEnable={!hasInherit()}\r\n                            callback={() => {\r\n                                let listPos = 2;\r\n                                if (hasArgNode) listPos++;\r\n                                if (hasFieldNode) listPos++;\r\n                                toggleElement(\r\n                                    hasConnectNode,\r\n                                    listPos,\r\n                                    {\r\n                                        type: 'inherit-mng',\r\n                                        data: {\r\n                                            inherits: []\r\n                                        } as LogicUtil.NodeConnectManager\r\n                                    }\r\n                                );\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        {isConnect ? <></> : (\r\n            <FormUtil.BorderPanel\r\n                title=\"operation\"\r\n                isEnable={!isModify}\r\n                innerJsx={<>\r\n                    {LogicElementUtil.getReplicateButton(node, !isModify, 'logic', store, setStore, invalidate)}\r\n                    {/* <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Replicate',\r\n                                isEnable: !isModify,\r\n                                // isEnable: false,\r\n                                callback: () => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Replicate this logic.\"\r\n                                        buttons={[\r\n                                            {\r\n                                                label: 'Cancel',\r\n                                                callback: () => {\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                label: 'Enter',\r\n                                                callback: () => {\r\n                                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                                    const name = wrap.data[namable] as string;\r\n                                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                    // mappingForm();\r\n                                                    invalidate();\r\n                                                }\r\n                                            }\r\n                                        ]}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    /> */}\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Delete',\r\n                                callback: () => {\r\n                                    const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                    const refers = getLocgicRefers(node, param.name);\r\n                                    if (refers.length === 0) {\r\n                                        removeSelf();\r\n                                    } else {\r\n                                        store.system.dialog = <ConfirmDialog.Component\r\n                                            message={`[${param.name}] is referenced in the Inherit.\\n${refers}`}\r\n                                        />;\r\n                                        setStore({ ...store });\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                    {/* 並び順入れ替えボタン */}\r\n                    {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n                </>}\r\n            />\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicItem;\r\n\r\n/**\r\n * ロジックを参照しているInheritのリストを返す。\r\n * @param node 現在のノード\r\n * @param logicName ロジック名\r\n * @returns 参照Inheritリスト\r\n */\r\nexport const getLocgicRefers = (node: TreeUtil.ElementNode, logicName: string) => {\r\n\r\n    const refers: string[] = [];\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        refers.push(conn.id);\r\n    }\r\n    searchLogicReferInherit(node, logicName, callback);\r\n    return refers;\r\n}\r\n\r\n/**\r\n * ロジック名の変更に伴い、参照しているインヘリットを同期する\r\n * @param node ロジックノード\r\n */\r\nconst syncLogicName = (node: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        conn.depend = newName;\r\n    }\r\n    searchLogicReferInherit(node, prevName, callback);\r\n}\r\n\r\nconst searchLogicReferInherit = (\r\n    node: TreeUtil.ElementNode,\r\n    logicName: string,\r\n    callback: (conn: LogicUtil.NodeInheritConnector) => void\r\n) => {\r\n    const logicMngNode = node.parent as TreeUtil.ElementNode\r\n    const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng == undefined) return;\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n            if (conn.method === 'create') {\r\n                const inhLogic = LogicElementUtil.getInnerWrap(inh, 'inherit-logic');\r\n                runRec(inhLogic?.data);\r\n            } else {\r\n                if (conn.depend === logicName) {\r\n                    callback(conn);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    logicMngNode.children.forEach(logic => {\r\n        runRec((logic.data as LogicUtil.WrapElement).data);\r\n    });\r\n}","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype FormProps = {\r\n    inputType: FormUtil.CheckableValue;\r\n    value: FormUtil.CheckableValue;\r\n};\r\n\r\nenum Level {\r\n    FIELD = 0,\r\n    INITIAL,\r\n    INHERIT_FIELD,\r\n    INHERIT_EXTEND,\r\n    INHERIT_SEND,\r\n    SEED = -1,\r\n}\r\n\r\nconst EditorParamItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    /** 名前 */\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    /** 式 */\r\n    const [formulaItems, setFormulaItems] = useState<string[]>([]);\r\n    /** 変数の入力フォーム */\r\n    const [varFormList, setVarFormList] = useState<FormProps[]>([]);\r\n    // const [formJsxList, setFaormJsxList] = useState<JSX.Element[]>([]);\r\n\r\n    const isField = wrap.type === 'field-item';\r\n    const isCondition = wrap.type === 'condition-item';\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        setName({ value: param.name, errors: [] });\r\n        setFormulaItems(param.formulaItems.slice());\r\n        setVarFormList(param.values.map(v => {\r\n            return {\r\n                inputType: { value: v.type, errors: [] },\r\n                value: { value: v.value, errors: [] }\r\n            }\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const level: Level = useMemo(() => {\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        switch (parentType) {\r\n            case 'field-mng': return Level.FIELD;\r\n            case 'visual-mng':\r\n            case 'behavior-mng': return Level.INITIAL;\r\n            case 'inhfld-mng': return Level.INHERIT_FIELD;\r\n            case 'extend-mng': return Level.INHERIT_EXTEND;\r\n            case 'send-mng': return Level.INHERIT_SEND;\r\n        }\r\n        return Level.SEED;\r\n    }, [node]);\r\n\r\n    /**\r\n     * 引数とフィールド変数のキーリストを取得する。\r\n     */\r\n    const [argumentList, arrayArgList, fieldKeyList] = useMemo(() => {\r\n        let argumentList: string[] = [];\r\n        let arrayArgList: string[] = [];\r\n        const fieldKeys: string[] = [];\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const targetTypes: LogicUtil.NodeType[] = ['field-mng', 'behavior-mng', 'visual-mng', 'inhfld-mng', 'send-mng', 'extend-mng'];\r\n        if (targetTypes.includes(parentType)) {\r\n            const getLogicNode = () => {\r\n                switch (parentType) {\r\n                    case 'field-mng':\r\n                    case 'visual-mng':\r\n                    case 'behavior-mng': return node.parent?.parent;\r\n                    case 'inhfld-mng':\r\n                    case 'send-mng':\r\n                    case 'extend-mng': return node?.parent?.parent?.parent?.parent;\r\n                }\r\n            };\r\n            const logicItem = (getLogicNode()?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n            // 引数リストを追加\r\n            const argMng = logicItem.mngs.find(mng => mng.type === 'argument-mng');\r\n            if (argMng != undefined) {\r\n                argumentList = (argMng.data as LogicUtil.NodeArgumentManager).args\r\n                    .filter(arg => {\r\n                        const param = wrap.data as LogicUtil.NodeParamItem;\r\n                        const data = arg.data as LogicUtil.NodeArgumentItem;\r\n                        // return (param.isList && data.valueType === 'array') || (!param.isList && data.valueType !== 'array');\r\n                        return data.valueType === 'number';\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n                arrayArgList = (argMng.data as LogicUtil.NodeArgumentManager).args\r\n                    .filter(arg => {\r\n                        const param = wrap.data as LogicUtil.NodeParamItem;\r\n                        const data = arg.data as LogicUtil.NodeArgumentItem;\r\n                        // return (param.isList && data.valueType === 'array') || (!param.isList && data.valueType !== 'array');\r\n                        return data.valueType === 'array';\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n            }\r\n            // 変数リストを追加\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (level >= Level.INITIAL && fieldMng != undefined) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                    fieldKeys.push(fieldName);\r\n                });\r\n            }\r\n        } else if (parentType === 'seedsend-mng') {\r\n            // シード配下のSendは特別に扱う（どのレベルにも属さない）\r\n            const argMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'seedarg-mng');\r\n            if (argMng != null) {\r\n                argumentList = (argMng.data as LogicUtil.NodeSeedArgManager).args\r\n                    .filter(arg => {\r\n                        const data = arg.data as LogicUtil.NodeSeedArgItem;\r\n                        return !data.isArray;\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n                arrayArgList = (argMng.data as LogicUtil.NodeSeedArgManager).args\r\n                    .filter(arg => {\r\n                        const data = arg.data as LogicUtil.NodeSeedArgItem;\r\n                        return data.isArray;\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n            } else throw new Error('argMng is undefined.');\r\n        }\r\n        if (level >= Level.INHERIT_FIELD) {\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_RAD);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_LEN);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.RADIUS);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_R);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_G);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_B);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // フィールドキーにInherit配下のFieldパラメータを追加\r\n            if (level >= Level.INHERIT_EXTEND) {\r\n                const inhfldNode = LogicElementUtil.getInnerNode(node.parent?.parent as TreeUtil.ElementNode, 'inhfld-mng');\r\n                if (inhfldNode != null) {\r\n                    const fieldMng = (inhfldNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeFieldManager;\r\n                    fieldMng.fields.forEach(field => {\r\n                        const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                        fieldKeys.push(fieldName);\r\n                    });\r\n                }\r\n            }\r\n            // フィールドキーにExtendパラメータを追加\r\n            if (level === Level.INHERIT_SEND) {\r\n                const extendWrap = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'extend-mng') as LogicUtil.WrapElement;\r\n                const extendElement = extendWrap.data as LogicUtil.NodeParamManager;\r\n                //Extendにloop_countのパラメータがある場合\r\n                if (extendElement.params.find(\r\n                    param => (param.data as LogicUtil.NodeParamItem).name === ParamUtil.ExtendParamType.LOOP_COUNT\r\n                ) != undefined) {\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_COUNT);\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_ITERATE);\r\n                }\r\n            }\r\n        }\r\n        return [argumentList, arrayArgList, fieldKeys];\r\n    }, [node]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const paramNameList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (item === 'var') num++;\r\n        });\r\n\r\n        if (varFormList.length < num) {\r\n            const addNum = num - varFormList.length;\r\n            for (let i = 0; i < addNum; i++) varFormList.push({\r\n                inputType: { value: 'direct', errors: [] },\r\n                value: { value: '', errors: [] }\r\n            });\r\n            setVarFormList(varFormList.slice());\r\n        } else if (varFormList.length > num) {\r\n            const delNum = varFormList.length - num;\r\n            for (let i = 0; i < delNum; i++) varFormList.splice(varFormList.length - delNum, delNum);\r\n            setVarFormList(varFormList.slice());\r\n        }\r\n    }, [formulaItems]);\r\n\r\n    /** 「(」の数-「)」の数 */\r\n    const parenthesisBalance = useMemo(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (['(', 'rand(', 'integer('].includes(item)) num++;\r\n            else if (item === ')') num--;\r\n        });\r\n        return num;\r\n    }, [formulaItems]);\r\n\r\n    /** 値の入力フォームのJSX */\r\n    const formJsxList = useMemo(() => {\r\n        return varFormList.map((v, i) => {\r\n\r\n            const getValueForm = (): JSX.Element => {\r\n                const type = v.inputType.value as LogicUtil.ParamInputType;\r\n                if (type === 'direct') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isNumber\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else if (type === 'array') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkArrayNumber(value),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else {\r\n                    const isArray = (wrap.data as LogicUtil.NodeParamItem).isArray;\r\n                    let list: string[] = [];\r\n                    switch (type) {\r\n                        case 'argument': {\r\n                            list = !isArray ? argumentList : arrayArgList;\r\n                        } break;\r\n                        case 'field': {\r\n                            list = fieldKeyList;\r\n                        } break;\r\n                        case 'self': {\r\n                            list = ParamUtil.SelfParams;\r\n                        } break;\r\n                        case 'constant': {\r\n                            list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                        } break;\r\n                        case 'array.itr': {\r\n                            list = arrayArgList.map(name => name + '.itr');\r\n                        } break;\r\n                        case 'array.len': {\r\n                            list = arrayArgList.map(name => name + '.len');\r\n                        } break;\r\n                    }\r\n                    // if (type === 'argument') {\r\n                    //     list = argumentList;\r\n                    // } else if (type === 'field') {\r\n                    //     list = fieldKeyList;\r\n                    // } else if (type === 'self') {\r\n                    //     list = ParamUtil.SelfParams;\r\n                    // } else if (type === 'constant') {\r\n                    //     list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                    // }\r\n                    return (\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            list={list.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n            return <FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={`var_${i}`}\r\n                labelWidth={90}\r\n                marginTop={i === 0 ? 4 : 0}\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        checkable={v.inputType}\r\n                        width={142}\r\n                        isReadOnly={!isModify}\r\n                        setCheckable={(checkable) => {\r\n                            varFormList[i].inputType = checkable;\r\n                            if (isModify) {\r\n                                varFormList[i].value.value = checkable.value === 'direct' ? '0' : '';\r\n                            }\r\n                            setVarFormList(varFormList.slice());\r\n                        }}\r\n                        list={LogicUtil.ParamInputTypes.filter(item => {\r\n                            const param = wrap.data as LogicUtil.NodeParamItem;\r\n                            if (!param.isArray) {\r\n                                switch (item) {\r\n                                    case 'direct':\r\n                                    case 'constant':\r\n                                    case 'argument': return true;\r\n                                    case 'field': return level >= Level.INITIAL;\r\n                                    case 'array.len':\r\n                                    case 'self': return level >= Level.INHERIT_FIELD;\r\n                                    case 'array.itr': return level >= Level.INHERIT_SEND;\r\n                                    case 'array': return false;\r\n                                }\r\n                            } else {\r\n                                switch (item) {\r\n                                    case 'direct':\r\n                                    case 'constant':\r\n                                    case 'self':\r\n                                    case 'field': return false;\r\n                                    case 'array':\r\n                                    case 'argument': return true;\r\n                                }\r\n                            }\r\n                        }).map(item => {\r\n                            return { value: item, labelText: item };\r\n                        })}\r\n                    />\r\n                    {getValueForm()}\r\n                </>}\r\n            />;\r\n        });\r\n    }, [varFormList, isModify]);\r\n\r\n    const getFormulaJsx = () => {\r\n        let num = 0;\r\n        const jsxList: JSX.Element[] = [];\r\n        formulaItems.forEach((item) => {\r\n            if (jsxList.length > 0) {\r\n                jsxList.push(<span key={jsxList.length}>&nbsp;</span>);\r\n            }\r\n            if (item === 'var') {\r\n                jsxList.push(<_Var key={jsxList.length}>{`$\\{var_${num}}`}</_Var>);\r\n                num++;\r\n            } else {\r\n                jsxList.push(<_Sig key={jsxList.length}>{item}</_Sig>);\r\n            }\r\n        });\r\n        return jsxList;\r\n    }\r\n\r\n    const isLastVar = () => formulaItems.length > 0 && ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const isFormulaOK = parenthesisBalance === 0 && varFormList.length > 0 &&\r\n        ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const hasFormError = !isFormulaOK || varFormList.find(varForm => varForm.value.errors.length > 0) != undefined;\r\n\r\n\r\n    const getFormulaItem = (label: string, width: number, isEnable: boolean, value: string) => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        return {\r\n            label, width, isEnable: param.isArray ? false : isEnable,\r\n            callback: () => {\r\n                formulaItems.push(value);\r\n                setFormulaItems(formulaItems.slice());\r\n            }\r\n        };\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeParamItem = {\r\n                    name: name.value,\r\n                    formulaItems: formulaItems.slice(),\r\n                    values: varFormList.map(varForm => {\r\n                        return {\r\n                            type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                            value: varForm.value.value\r\n                        }\r\n                    })\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n            }}\r\n            isInputOK={parenthesisBalance === 0 && !hasFormError && name.errors.length === 0}\r\n            modifyRegist={() => {\r\n                const data = wrap.data as LogicUtil.NodeParamItem;\r\n                data.formulaItems = formulaItems.slice();\r\n                data.values = varFormList.map(varForm => {\r\n                    return {\r\n                        type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                        value: varForm.value.value\r\n                    }\r\n                });\r\n                if (isField) {\r\n                    const prevName = data.name;\r\n                    data.name = name.value;\r\n                    if (prevName !== name.value) {\r\n                        syncFieldName(node.parent as TreeUtil.ElementNode, prevName, name.value);\r\n                    }\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify || !isField}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = paramNameList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeParamItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('+', 50, isModify && isLastVar(), '+'),\r\n                        getFormulaItem('-', 50, isModify && isLastVar(), '-'),\r\n                        getFormulaItem('*', 50, isModify && isLastVar(), '*'),\r\n                        getFormulaItem('/', 50, isModify && isLastVar(), '/'),\r\n                        getFormulaItem('%', 50, isModify && isLastVar(), '%'),\r\n                        getFormulaItem('(', 35, isModify && !isLastVar(), '('),\r\n                        getFormulaItem(')', 35, isModify && isLastVar() && parenthesisBalance > 0, ')'),\r\n                        {\r\n                            label: 'del',\r\n                            width: 60,\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            callback: () => {\r\n                                formulaItems.splice(formulaItems.length - 1, 1);\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {!isCondition ? <></> : (\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            getFormulaItem('<', 50, isModify && isLastVar(), '<'),\r\n                            getFormulaItem('<=', 50, isModify && isLastVar(), '<='),\r\n                            getFormulaItem('=', 50, isModify && isLastVar(), '='),\r\n                            getFormulaItem('>=', 50, isModify && isLastVar(), '>='),\r\n                            getFormulaItem('>', 50, isModify && isLastVar(), '>'),\r\n                            getFormulaItem('&&', 50, isModify && isLastVar(), '&&'),\r\n                            getFormulaItem('||', 50, isModify && isLastVar(), '||'),\r\n                        ]}\r\n                    />\r\n                )}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('var', 70, isModify && !isLastVar(), 'var'),\r\n                        getFormulaItem('rand', 80, isModify && !isLastVar(), 'rand('),\r\n                        getFormulaItem('integer', 80, isModify && !isLastVar(), 'integer('),\r\n                        {\r\n                            label: 'clear',\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            width: 90,\r\n                            callback: () => {\r\n                                setFormulaItems([]);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_Formula\r\n                    isInvalid={!isFormulaOK}\r\n                >{getFormulaJsx()}</_Formula>\r\n                {formJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify && isField}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'field', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getFieldRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {!isField ? <></> : LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorParamItem;\r\n\r\n/**\r\n * ノードの変数を参照している箇所のリストを返す。\r\n * @param node 変数のノード\r\n * @param argName 変数名\r\n * @returns 参照パラメータリスト\r\n */\r\nexport const getFieldRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n * フィールド名の変更に伴い、式で参照している変数を同期する\r\n * @param mngNode ノード\r\n */\r\nexport const syncFieldName = (mngNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const type = (mngNode.data as LogicUtil.WrapElement).type;\r\n    if (type === 'field-mng') {\r\n        const logic = (mngNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n\r\n        const visualMng = logic.mngs.find(mng => mng.type === 'visual-mng');\r\n        if (visualMng != undefined) {\r\n            syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const behaviorMng = logic.mngs.find(mng => mng.type === 'behavior-mng');\r\n        if (behaviorMng != undefined) {\r\n            syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                // Inherit配下のField要素のチェック\r\n                if (inhfld != null) {\r\n                    syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                }\r\n                // Extend要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    } else if (type === 'inhfld-mng') {\r\n        const inheritWrap = mngNode.parent?.data as LogicUtil.WrapElement;\r\n\r\n        // Extend要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        // Send要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n}\r\n\r\nconst _Formula = styled.div<{\r\n    isInvalid: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 12px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    overflow-wrap: break-word;\r\n    height: 100px;//calc(100% - 4px);\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    background-color: #ffffff8b;\r\n    ${props => !props.isInvalid ? '' : css`\r\n        background-color: #ffe8628a;\r\n    `}\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    padding: 0 0 0 4px;\r\n    vertical-align: top;\r\n    margin: 5px 0 0 6px;\r\n`;\r\nconst _Var = styled.span`\r\n    color: #e70013;\r\n`;\r\nconst _Sig = styled.span`\r\n    color: #3333339d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorBehiviorMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [isVector, hasDecayParam, hasGravityParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.BehaviorParamType.VEC_X),\r\n            list.includes(ParamUtil.ModulateParamType.DECAY_RATE),\r\n            list.includes(ParamUtil.ModulateParamType.GRAVITY_VAL)\r\n        ]\r\n    }, [node]);\r\n\r\n    const exchangeElements = (flag: boolean, listPos: number,\r\n        trueParamElements: LogicUtil.NodeParamItem[],\r\n        falseParamElements: LogicUtil.NodeParamItem[]\r\n    ) => {\r\n        const size = (flag ? trueParamElements : falseParamElements).length;\r\n        LogicElementUtil.removeChild(node, listPos, size);\r\n\r\n        (flag ? trueParamElements : falseParamElements).forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    const exchangeVectorMethod = () => {\r\n        exchangeElements(!isVector, 3,\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_X, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_Y, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ],\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_RAD, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_LEN, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ]\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            mng.params.splice(listPos, size);\r\n            node.children.splice(listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                mng.params.splice(listPos + i, 0, wrap);\r\n                const newNode = TreeUtil.createNode(wrap, node);\r\n                node.children.splice(listPos + i, 0, newNode);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Vector method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Direction method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={!isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"modulate\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Decay'}\r\n                            width={300}\r\n                            isUse={hasDecayParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDecayParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_RATE,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.9' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Gravity'}\r\n                            width={300}\r\n                            isUse={hasGravityParam}\r\n                            callback={() => {\r\n                                toggleElements(hasGravityParam, !hasDecayParam ? 5 : 7, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_VAL,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.2' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorBehiviorMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype Medhod = 'blank' | 'particle' | 'snake'\r\n\r\nconst EditorVisualMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [drawMethod, hasDisappearParam, hasShrinkParam, hasFlashParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        let drawMethod: Medhod = 'blank';\r\n        if(list.length > 0) {\r\n            drawMethod = list.includes(ParamUtil.VisualParamType.THICKNESS) ? 'snake' : 'particle';\r\n        }\r\n        return [\r\n            drawMethod,\r\n            list.includes(ParamUtil.EffectParamType.DISAPPEAR_START),\r\n            list.includes(ParamUtil.EffectParamType.SHRINK_START),\r\n            list.includes(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME)\r\n        ]\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    const addElements = (paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        paramElements.forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n    const removeElements = (elementNameList: string[]) => {\r\n        const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        elementNameList.forEach((name) => {\r\n            mng.params.forEach((param, i) => {\r\n                if((param.data as LogicUtil.NodeParamItem).name === name) {\r\n                    LogicElementUtil.removeChild(node, i, 1);\r\n                }\r\n            });\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam || hasFlashParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'None'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'blank'}\r\n                            callback={() => {\r\n                                mng.params.length = 0;\r\n                                node.children.length = 0;\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Snake Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'snake'}\r\n                            callback={() => {\r\n                                removeElements([\r\n                                    ParamUtil.VisualParamType.RADIUS\r\n                                ]);\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.THICKNESS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Particle Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'particle'}\r\n                            callback={() => {\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.RADIUS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '20' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"effect\"\r\n            isEnable={!isModify && drawMethod !== 'blank'}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Disappear'}\r\n                            width={300}\r\n                            isUse={hasDisappearParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDisappearParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.DISAPPEAR_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Shrink'}\r\n                            width={300}\r\n                            isUse={hasShrinkParam}\r\n                            callback={() => {\r\n                                toggleElements(hasShrinkParam, !hasDisappearParam ? 5 : 6, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.SHRINK_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Flash'}\r\n                            width={300}\r\n                            isUse={hasFlashParam}\r\n                            callback={() => {\r\n                                toggleElements(hasFlashParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_APPEAR_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_HIDE_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorVisualMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInheritConnMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeConnectManager;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Inherit',\r\n                        callback: () => {\r\n                            const wrap: LogicUtil.WrapElement = {\r\n                                type: 'connector',\r\n                                data: null\r\n                            }\r\n                            mng.inherits.push(wrap);\r\n                            const newNode = TreeUtil.createNode(wrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorInheritConnector = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, invalidate, setModify, isModify, removeSelf, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const [condition, setCondition] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [identify, setIdentify] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [method, setMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [depend, setDepend] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n        setMethod({ ...method, value: param.method });\r\n        setDepend({ ...depend, value: param.depend });\r\n        setIdentify({ ...identify, value: param.id });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n            // 派生識別名（自動命名）の初期値を取得\r\n            const defaultName = LogicElementUtil.getNumberingOnPrefixName('id_', node.parent as TreeUtil.ElementNode);\r\n            setIdentify({ ...identify, value: defaultName });\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const isCreate = method.value === 'create';\r\n\r\n    const hasFieldNode = useMemo(() => {\r\n        return LogicElementUtil.getInnerNode(node, 'inhfld-mng') != null;\r\n    }, [node]);\r\n\r\n    /** 引用するロジックリスト */\r\n    const logicList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return inheritMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    /** 同階層の既存のインヘリットIDを取得（重複チェックに使用） */\r\n    const idList = useMemo(() => {\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    const initConnectorNode = (param: LogicUtil.NodeInheritConnector) => {\r\n        param.mngs = [];\r\n        node.children = [];\r\n        param.mngs.push({\r\n            type: 'extend-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        param.mngs.push({\r\n            type: 'send-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        if (isCreate) {\r\n            param.mngs.push({\r\n                type: 'inherit-logic',\r\n                data: {\r\n                    mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                } as LogicUtil.NodeInheritItem\r\n            });\r\n        }\r\n        wrap.data = param;\r\n\r\n        param.mngs.forEach(mng => {\r\n            const newNode = TreeUtil.createNode(mng, node);\r\n            const data = (newNode.data as LogicUtil.WrapElement);\r\n            switch (data.type) {\r\n                case 'inherit-logic': {\r\n                    LogicElementUtil.syncTreeElementFromWrap(newNode);\r\n                } break;\r\n                case 'send-mng': {\r\n                    const connector = (newNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.method === 'depend') {\r\n                        console.log('initSendParams');\r\n                        initSendParams(newNode, rootData);\r\n                    }\r\n                } break;\r\n            }\r\n            node.children.push(newNode);\r\n        });\r\n    }\r\n\r\n    const getSendParamList = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement): string[] => {\r\n        const connector = (sendNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = inheritMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement) => {\r\n        const sendParamList = getSendParamList(sendNode, rootData);\r\n        // console.log(sendParamList);\r\n        const wrap = sendNode.data as LogicUtil.WrapElement;\r\n        const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n                sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'inhfld-mng');\r\n        if(fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n\r\n    const isDisable = wrap.data == null ? false : (wrap.data as LogicUtil.NodeInheritConnector).disable ?? false;\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[identify, method, depend]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeInheritConnector = {\r\n                    method: method.value as LogicUtil.InheritMethod,\r\n                    depend: depend.value,\r\n                    id: identify.value,\r\n                    mngs: []\r\n                };\r\n                initConnectorNode(param);\r\n                invalidate();\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                const isChange = param.method !== method.value || param.depend !== depend.value;\r\n                param.method = method.value as LogicUtil.InheritMethod;\r\n                param.depend = depend.value;\r\n                param.id = identify.value;\r\n                wrap.data = param;\r\n\r\n                if (isChange) {\r\n                    initConnectorNode(param);\r\n                }\r\n                invalidate();\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={method}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                // createが選択されたらdependを空にする\r\n                                if (checkable.value === 'create') {\r\n                                    setDepend({ ...depend, value: '' });\r\n                                }\r\n                                setMethod(checkable);\r\n                            }}\r\n                            list={LogicUtil.ConnectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Depend\"\r\n                    isEnabled={method.value === 'depend'}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={depend}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setDepend}\r\n                            list={logicList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            dependency={[method]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => {\r\n                                        return method.value !== 'depend' || ValidateUtil.checkRequired(value);\r\n                                    },\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Identify\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={identify}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setIdentify}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !idList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                0,\r\n                                {\r\n                                    type: 'inhfld-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Disable'}\r\n                        width={300}\r\n                        isUse={isDisable}\r\n                        isEnable={!isModify}\r\n                        callback={() => {\r\n                            const data = (wrap.data as LogicUtil.NodeInheritConnector);\r\n                            if (isDisable) {\r\n                                data.disable = undefined;\r\n                            } else {\r\n                                data.disable = true;\r\n                            }\r\n                            invalidate();\r\n                        }}\r\n                    />}\r\n                />\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'inherit', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Edit local',\r\n                            isEnable: !isModify && !isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Create a clone from the depended inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                                                const logicList = logicMng.defs.map(def => def.data as LogicUtil.NodeLogicItem);\r\n                                                // ディペンドしているロジックを取得\r\n                                                const dependLogic = logicList.find(inherit => inherit.name === depend.value);\r\n                                                if (dependLogic != undefined) {\r\n                                                    const cloneLogic = JSON.parse(JSON.stringify(dependLogic)) as LogicUtil.NodeLogicItem;\r\n                                                    const connectItem: LogicUtil.NodeInheritItem = {\r\n                                                        mngs: cloneLogic.mngs\r\n                                                    };\r\n                                                    const newWrap: LogicUtil.WrapElement = {\r\n                                                        type: 'inherit-logic',\r\n                                                        data: connectItem\r\n                                                    };\r\n                                                    const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                                                    // 子要素の展開\r\n                                                    newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                    const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                    param.method = 'create';\r\n                                                    param.depend = '';\r\n                                                    mappingForm();\r\n                                                }\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Detach global',\r\n                            isEnable: !isModify && isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Detach a clone from the this inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                let rootNode = node;\r\n                                                while (rootNode.parent != null) rootNode = rootNode.parent;\r\n                                                const inheritNode = node.children.find(el => (el.data as LogicUtil.WrapElement).type === 'inherit-logic');\r\n                                                const logicMngNode = rootNode.children.find(el => (el.data as LogicUtil.WrapElement).type === 'logic-mng');\r\n                                                if (logicMngNode == undefined || inheritNode == undefined) return;\r\n                                                const inherit = (inheritNode.data as LogicUtil.WrapElement).data;\r\n                                                const clone = JSON.parse(JSON.stringify((inherit))) as LogicUtil.NodeInheritItem;\r\n                                                // ロジック名（自動命名）を取得\r\n                                                const defaultName = LogicElementUtil.getNumberingOnPrefixName('clone_inherit_', logicMngNode);\r\n                                                const logicItem: LogicUtil.NodeLogicItem = {\r\n                                                    ...clone,\r\n                                                    name: defaultName\r\n                                                };\r\n                                                const newWrap: LogicUtil.WrapElement = {\r\n                                                    type: 'logic-item',\r\n                                                    data: logicItem\r\n                                                };\r\n\r\n                                                // ロジックマネージャに追加\r\n                                                const newNode = LogicElementUtil.addChild(newWrap, logicMngNode);\r\n                                                // 子要素の展開\r\n                                                newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                // 自身（コネクタ）からインヘリット要素を削除\r\n                                                LogicElementUtil.removeChild(node, 2, 1);\r\n\r\n                                                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                param.method = 'depend';\r\n                                                param.depend = logicItem.name;\r\n                                                mappingForm();\r\n\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnector;","import styled, { css } from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport { useContext, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport DrawUtil from \"../../../graphic/drawUtil\";\r\n\r\nconst FRAME_WIDTH = 400;\r\nnamespace DrawableVectorChooser {\r\n\r\n    export const ComponentNormal = (props: {\r\n        addPoint: (x: number, y: number) => void;\r\n        clear: () => void;\r\n        xList: number[];\r\n        yList: number[];\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const screenRate = store.env.screenRate;\r\n\r\n        const [isDraw, setDraw] = useState(false);\r\n        const ref = useRef<HTMLDivElement>(null);\r\n\r\n        const pointJsxList = useMemo(() => {\r\n            return props.xList.map((x, i) => {\r\n                const y = props.yList[i];\r\n                return (\r\n                    <_Point key={i}\r\n                        x={x}\r\n                        y={y}\r\n                    />\r\n                );\r\n            });\r\n        }, [props.xList.length]);\r\n\r\n\r\n        const putAction = (x: number, y: number) => {\r\n            setDraw(true);\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2);\r\n            store.env.scrollLock = true;\r\n            setStore({...store});\r\n        }\r\n\r\n        const moveAction = (x: number, y: number) => {\r\n            if (!isDraw) return;\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            const subX = posX - (props.xList[props.xList.length - 1] + FRAME_WIDTH / 2);\r\n            const subY = posY - (props.yList[props.yList.length - 1] + FRAME_WIDTH / 2);\r\n            const distance = Math.sqrt(subX * subX + subY * subY);\r\n            if (distance > 10) props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2);\r\n        }\r\n\r\n        const releaseAction = () => {\r\n            setDraw(false);\r\n            store.env.scrollLock = false;\r\n            setStore({...store});\r\n        }\r\n\r\n        return (<>\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"Point\"\r\n                jsx={\r\n                    <FormUtil.FixedText\r\n                        value={props.xList.length.toString()}\r\n                        isRecordItem\r\n                    />\r\n                }\r\n            />\r\n            <_Frame\r\n                ref={ref}\r\n                onMouseDown={(e) => { putAction(e.clientX, e.clientY) }}\r\n                onMouseMove={(e) => { moveAction(e.clientX, e.clientY) }}\r\n                onMouseUp={releaseAction}\r\n                onMouseLeave={releaseAction}\r\n                onTouchStart={(e) => { putAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchMove={(e) => { moveAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchEnd={releaseAction}\r\n                onTouchCancel={releaseAction}\r\n                isDraw={store.env.scrollLock}\r\n            >\r\n                <_Center />\r\n                {pointJsxList}\r\n            </_Frame>\r\n            <FormUtil.ButtonRecord buttons={[\r\n                {\r\n                    label: 'Clear',\r\n                    isEnable: props.xList.length > 0,\r\n                    callback: props.clear,\r\n                }\r\n            ]} />\r\n        </>);\r\n    }\r\n\r\n    export const ComponentColorable = (props: {\r\n        addPoint: (x: number, y: number, r: number, g: number, b: number) => void;\r\n        clear: () => void;\r\n        xList: number[];\r\n        yList: number[];\r\n        rList: number[];\r\n        gList: number[];\r\n        bList: number[];\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const screenRate = store.env.screenRate;\r\n\r\n        const [isDraw, setDraw] = useState(false);\r\n\r\n        const [r, setR] = useState(255);\r\n        const [g, setG] = useState(255);\r\n        const [b, setB] = useState(255);\r\n\r\n        const ref = useRef<HTMLDivElement>(null);\r\n\r\n        const pointJsxList = useMemo(() => {\r\n            return props.xList.map((x, i) => {\r\n                const y = props.yList[i];\r\n                const r = props.rList[i];\r\n                const g = props.gList[i];\r\n                const b = props.bList[i];\r\n                const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                    r: Number(r),\r\n                    g: Number(g),\r\n                    b: Number(b),\r\n                    a: 255\r\n                }).substring(0, 7);\r\n                return (\r\n                    <_PointColorable key={i}\r\n                        x={x}\r\n                        y={y}\r\n                        color={colorCode}\r\n                    />\r\n                );\r\n            });\r\n        }, [props.xList.length]);\r\n\r\n\r\n        const putAction = (x: number, y: number) => {\r\n            setDraw(true);\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2, r, g, b);\r\n            store.env.scrollLock = true;\r\n            setStore({...store});\r\n        }\r\n\r\n        const moveAction = (x: number, y: number) => {\r\n            if (!isDraw) return;\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            const subX = posX - (props.xList[props.xList.length - 1] + FRAME_WIDTH / 2);\r\n            const subY = posY - (props.yList[props.yList.length - 1] + FRAME_WIDTH / 2);\r\n            const distance = Math.sqrt(subX * subX + subY * subY);\r\n            if (distance > 10) props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2, r, g, b);\r\n        }\r\n\r\n        const releaseAction = () => {\r\n            setDraw(false);\r\n            store.env.scrollLock = false;\r\n            setStore({...store});\r\n        }\r\n\r\n        const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n            r: Number(r),\r\n            g: Number(g),\r\n            b: Number(b),\r\n            a: 255\r\n        }).substring(0, 7);\r\n        return (<>\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"Point\"\r\n                jsx={\r\n                    <FormUtil.FixedText\r\n                        value={props.xList.length.toString()}\r\n                        isRecordItem\r\n                    />\r\n                }\r\n            />\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"Color\"\r\n                jsx={\r\n                    <_Color type=\"color\" value={colorCode}\r\n                        // disabled={isReadOnly}\r\n                        onChange={(value) => {\r\n                            const rgba = DrawUtil.convertRgbaFromColorCode(value.target.value + 'ff');\r\n                            if (rgba != null) {\r\n                                setR(rgba.r);\r\n                                setG(rgba.g);\r\n                                setB(rgba.b);\r\n                            }\r\n                        }}\r\n                    />\r\n                }\r\n            />\r\n            <_Frame\r\n                ref={ref}\r\n                onMouseDown={(e) => { putAction(e.clientX, e.clientY) }}\r\n                onMouseMove={(e) => { moveAction(e.clientX, e.clientY) }}\r\n                onMouseUp={releaseAction}\r\n                onMouseLeave={releaseAction}\r\n                onTouchStart={(e) => { putAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchMove={(e) => { moveAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchEnd={releaseAction}\r\n                onTouchCancel={releaseAction}\r\n                isDraw={store.env.scrollLock}\r\n            >\r\n                <_Center />\r\n                {pointJsxList}\r\n            </_Frame>\r\n            <FormUtil.ButtonRecord buttons={[\r\n                {\r\n                    label: 'Clear',\r\n                    isEnable: props.xList.length > 0,\r\n                    callback: props.clear,\r\n                }\r\n            ]} />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default DrawableVectorChooser;\r\n\r\nconst _Frame = styled.div<{\r\n    isDraw: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${FRAME_WIDTH}px;\r\n    height: 400px;\r\n    margin: 0 0 0 3px;\r\n    background-color: #2e7085;\r\n    ${props => !props.isDraw ? '' : css`\r\n        background-color: #5c9caf;\r\n    `}\r\n    border: 2px solid #800;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Point = styled.div<{\r\n    x: number;\r\n    y: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x + FRAME_WIDTH / 2 - 5}px;\r\n    top: ${props => props.y + FRAME_WIDTH / 2 - 5}px;\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 10px;\r\n    background-color: #fcfeff9d;\r\n    border: 1px solid #dfe5ff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _PointColorable = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    color: string;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x + FRAME_WIDTH / 2 - 5}px;\r\n    top: ${props => props.y + FRAME_WIDTH / 2 - 5}px;\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 10px;\r\n    background-color: ${props => props.color};\r\n    border: 1px solid #dfe5ff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Center = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${FRAME_WIDTH / 2 - 10}px;\r\n    top: ${FRAME_WIDTH / 2 - 10}px;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 20px;\r\n    background-color: #800;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Color = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 3px 0 0 6px;\r\n    width: 100px;\r\n    height: 34px;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSendManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const isDepend = () => {\r\n        const conn = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        return conn.method === 'depend';\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"template\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Connect Position',\r\n                            isEnable: !isDepend(),\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.ConnectParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Set Position',\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.SetParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSendManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFieldMng = () => {\r\n    const { invalidate, node, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Field',\r\n                        callback: () => {\r\n                            // const newWrap: FactoryUtil.WrapNode = FactoryUtil.createParamWrap('field-item',\r\n                            //     { name: '', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                            // );\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'field-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFieldMng;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorExtendMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [hasLoopParam, hasInvokeParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name as ParamUtil.ExtendParam;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.ExtendParamType.LOOP_COUNT),\r\n            list.includes(ParamUtil.ExtendParamType.INVOKE)\r\n        ]\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Loop'}\r\n                            width={300}\r\n                            isUse={hasLoopParam}\r\n                            callback={() => {\r\n                                toggleElement(hasLoopParam, 0, {\r\n                                    type: 'param-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.LOOP_COUNT,\r\n                                        formulaItems: ['var'],\r\n                                        values: [{ type: 'direct', value: '1' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Invoke'}\r\n                            width={300}\r\n                            isUse={hasInvokeParam}\r\n                            callback={() => {\r\n                                toggleElement(hasInvokeParam, hasLoopParam ? 1 : 0, {\r\n                                    type: 'condition-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.INVOKE,\r\n                                        formulaItems: ['var', '=', 'var'],\r\n                                        values: [{ type: 'direct', value: '0' }, { type: 'direct', value: '0' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorExtendMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\n\r\nconst EditorSeedItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [entry, setEntry] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [permit, setPermit] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setEntry({ ...entry, value: param.entry });\r\n        setPermit({ ...permit, value: param.permit })\r\n    };\r\n\r\n    /** 既存のシード名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    // 引用するロジックリスト\r\n    const logicNameList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const logicMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return logicMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    const getSendParamList = (): LogicUtil.NodeArgumentItem[] => {\r\n        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n        const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = logicMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return arg.data as LogicUtil.NodeArgumentItem;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = () => {\r\n        const sendParamList = getSendParamList();\r\n        const sendNode = LogicElementUtil.getInnerNode(node, 'interface-mng', 'seedsend-mng') as TreeUtil.ElementNode;\r\n        const params = ((sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param.name)) {\r\n                const isArray = param.valueType === 'array';\r\n                const paramWrap = LogicElementUtil.createParamWrap('seedsend-item',\r\n                    {\r\n                        name: param.name,\r\n                        formulaItems: ['var'],\r\n                        values: !isArray ? [{ type:  'direct', value: '0' }] : [{ type:  'array', value: '' }],\r\n                        isArray: isArray ? true : undefined\r\n                    }\r\n                );\r\n                params.push(paramWrap);\r\n            }\r\n        });\r\n        LogicElementUtil.syncTreeElementFromWrap(sendNode);\r\n    }\r\n\r\n    const getDefaultSeedMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'interface-mng',\r\n                data: {\r\n                    mngs: [\r\n                        {\r\n                            type: 'seedarg-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeSeedArgManager\r\n                        },\r\n                        {\r\n                            type: 'seedsend-mng',\r\n                            data: {\r\n                                params: []\r\n                            } as LogicUtil.NodeSeedSendManager\r\n                        },\r\n                    ]\r\n                } as LogicUtil.NodeInterfaceMng\r\n            },\r\n            {\r\n                type: 'thumbnail-mng',\r\n                data: {\r\n                    items: []\r\n                } as LogicUtil.NodeThumnailManager\r\n            },\r\n            {\r\n                type: 'sample-mng',\r\n                data: {\r\n                    samples: []\r\n                } as LogicUtil.NodeSampleManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, entry, permit]}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSeedItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    entry: entry.value,\r\n                    permit: permit.value as LogicUtil.PermitType,\r\n                    mngs: getDefaultSeedMngs()\r\n                };\r\n                wrap.data = element;\r\n\r\n                LogicElementUtil.syncTreeElementFromWrap(node);\r\n                // 参照しているロジックの引数をSendに設定\r\n                initSendParams();\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedItem;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.permit = permit.value as LogicUtil.PermitType;\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 24),\r\n                                    errorType: \"length\"\r\n                                },\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Entry\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={entry}\r\n                            width={200}\r\n                            // 更新時は編集できない\r\n                            isReadOnly={!isModify || wrap.data != null}\r\n                            setCheckable={setEntry}\r\n                            list={logicNameList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Permit\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={permit}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setPermit}\r\n                            list={LogicUtil.PermitTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'seed', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedItem;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext as LogicTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorThumbnailMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(LogicTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeThumnailManager;\r\n\r\n    const hasSample = useMemo(() => {\r\n        const sampleMngNode = LogicElementUtil.getInnerNode(node.parent as TreeUtil.ElementNode, 'sample-mng') as TreeUtil.ElementNode;\r\n        return sampleMngNode.children.length as number > 0;\r\n    }, []);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            // isEnable={hasSample}\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Thumbnail',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'thumbnail-item',\r\n                                data: null\r\n                            }\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport Particle from \"../../../../graphic/particle\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst WND_SIZE = 100;\r\n\r\nconst EditorThumbnailItem = () => {\r\n    const { rootData, node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n    const data = wrap.data as LogicUtil.NodeThumbnailItem;\r\n\r\n\r\n    const seedWrap = node.parent?.parent?.data as LogicUtil.WrapElement;\r\n    const sampleMng = LogicElementUtil.getInnerWrap(seedWrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n    const samples = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [urls, setUrls] = useState<string[]>([]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n        setName({ ...name, value: param.name });\r\n        setFrame({ ...frame, value: param.frame.toString() });\r\n    };\r\n    \r\n    /** 既存のサムネイル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n            setTimeout(() => {\r\n                const urls: string[] = [];\r\n                samples.forEach((sample, i) => {\r\n                    urls.push(getThumbnailURL(data.frame, i));\r\n                });\r\n                setUrls(urls);\r\n            }, 1);\r\n        }\r\n    }, [node]);\r\n\r\n    const getSeedValueMap = (sampleNo: number): PreviewUtil.ValueMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ValueMap[] = [];\r\n        argMng.args.forEach((wrap, i) => {\r\n            const item = wrap.data as LogicUtil.NodeSeedArgItem;\r\n            if(!item.isArray) {\r\n                const name = item.name;\r\n                const value = Number(samples[sampleNo].values[i]);\r\n                argMap.push( { name, value });\r\n            }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams\r\n        .filter(item => !item.isArray)\r\n        .map(item => {\r\n            return { name: item.name, value: PreviewUtil.convertParamsToValue(item.name, sendParams, argMap) ?? 0 }\r\n        });\r\n    }\r\n    const getSeedArrayMap = (sampleNo: number): PreviewUtil.ArrayMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ArrayMap[] = [];\r\n        argMng.args.forEach((wrap, i) => {\r\n            const item = wrap.data as LogicUtil.NodeSeedArgItem;\r\n            if(item.isArray) {\r\n                const name = item.name;\r\n                const array = samples[sampleNo].values[i].split(',').map(v => Number(v));\r\n                argMap.push( { name, array });\r\n            }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams\r\n        .filter(item => item.isArray)\r\n        .map(item => {\r\n            return { name: item.name, array: PreviewUtil.convertParamsToArray(item.name, sendParams, argMap) ?? [] }\r\n        });\r\n    }\r\n\r\n    const getThumbnailURL = (targetFrame: number, sampleNo: number) => {\r\n        console.log('create start!');\r\n        const owner: Particle.Instance[] = [];\r\n\r\n        let frameCnt = 0;\r\n        do {\r\n            if (frameCnt === 0) {\r\n                const seed = (node.parent?.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n                const logicManager = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                const logic = logicManager.defs.find(logic => (logic.data as LogicUtil.NodeLogicItem).name === seed.entry);\r\n                if (logic == undefined) break;\r\n\r\n                const sendValueMapList = getSeedValueMap(sampleNo);\r\n                const sendArrayMapList = getSeedArrayMap(sampleNo);\r\n                owner.push(new Particle.Instance(\r\n                    PreviewUtil.buildLogicProps(owner, logic.data, rootData, sendValueMapList, sendArrayMapList))\r\n                );\r\n            }\r\n\r\n            if (frameCnt === targetFrame) {\r\n                return CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                });\r\n            }\r\n\r\n            // パーティクルの更新\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                particle.update();\r\n            }\r\n\r\n            // 死滅したパーティクルの削除\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frameCnt > 500 || owner.length > 3000) break;\r\n            frameCnt++;\r\n        } while (owner.length > 0);\r\n        return '';\r\n    }\r\n\r\n    const pictureJsxList = useMemo(() => {\r\n        const sampleMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n        return sampleMng.samples.map((wrap, i) => {\r\n            const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n\r\n            const url = urls[i];\r\n            const imgJsx = url == undefined ? <></> : <_IMG src={urls[i]} />;\r\n            return (\r\n                <_SampleDiv key={i}>-\r\n                    <_SampleName>{sample.name}</_SampleName>\r\n                    <_CanvasDiv>\r\n                        {imgJsx}\r\n                    </_CanvasDiv>\r\n                </_SampleDiv>\r\n            );\r\n        });\r\n    }, [node, urls]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, frame]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeThumbnailItem = {\r\n                    name: name.value,\r\n                    frame: Number(frame.value),\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n                param.name = name.value;\r\n                param.frame = Number(frame.value);\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"preview\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {pictureJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailItem;\r\n\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport DrawUtil from \"../../../graphic/drawUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport DrawableVectorChooser from \"./drawableVectorChooser\";\r\n\r\nnamespace LogicFormUtil {\r\n\r\n    export const buildPreviewForms = (\r\n        isReadOnly: boolean,\r\n        argumentList: LogicUtil.NodeSeedArgItem[],\r\n        formgrpList: LogicUtil.NodeFromGrpItem[],\r\n        formList: FormUtil.CheckableValue[],\r\n        setFormList: ((formList: FormUtil.CheckableValue[]) => void)\r\n    ): JSX.Element[] => {\r\n        /** 入力フォームのJSX */\r\n        const formJsxList: JSX.Element[] = [];\r\n        const usedGrps: string[] = [];\r\n        formList.forEach((form, i) => {\r\n            const argument = argumentList[i];\r\n            const formgrp = formgrpList.find(grp => grp.args.includes(argument.name));\r\n\r\n            // フォームグループが設定されている場合、独自の入力UIを表示する\r\n            if (formgrp != undefined) {\r\n                // 設定済みであれば追加しない\r\n                if (usedGrps.includes(formgrp.name)) return 1;\r\n                // 利用済みリストに追加\r\n                usedGrps.push(formgrp.name);\r\n                const targetForms: number[] = [];\r\n                argumentList.forEach((arg, j) => {\r\n                    if (formgrp.args.includes(arg.name)) {\r\n                        targetForms.push(j);\r\n                    }\r\n                });\r\n                switch (formgrp.method) {\r\n                    case 'color': {\r\n                        const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                            r: Number(formList[targetForms[0]].value),\r\n                            g: Number(formList[targetForms[1]].value),\r\n                            b: Number(formList[targetForms[2]].value),\r\n                            a: 255\r\n                        }).substring(0, 7);\r\n                        // console.log(colorCode);\r\n                        formJsxList.push(<div key={i}>\r\n                            <FormUtil.Record\r\n                                jsx={\r\n                                    <_Message>{formgrp.name}: <_Type>color </_Type><_Range>({0} ～ {255} respectively)</_Range></_Message>\r\n                                }\r\n                            />\r\n                            <FormUtil.Record\r\n                                jsx={<>\r\n                                    {targetForms.map((formIndex, j) => {\r\n                                        return (\r\n                                            <FormUtil.TextField\r\n                                                key={formIndex}\r\n                                                width={72}\r\n                                                marginLeft={j === 0 ? 5 : 4}\r\n                                                isNumber\r\n                                                isReadOnly={isReadOnly}\r\n                                                checkable={formList[formIndex]}\r\n                                                setCheckable={() => {\r\n                                                    setFormList(formList.slice());\r\n                                                }}\r\n                                                validates={[\r\n                                                    {\r\n                                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                        errorType: \"required\"\r\n                                                    },\r\n                                                    {\r\n                                                        checker: (value) => ValidateUtil.checkNumberRange(value, argument.min as number, argument.max as number),\r\n                                                        errorType: 'value'\r\n                                                    }\r\n                                                ]}\r\n                                            />\r\n                                        );\r\n                                    })}\r\n                                    <_Color type=\"color\" value={colorCode}\r\n                                        disabled={isReadOnly}\r\n                                        onChange={(value) => {\r\n                                            const rgba = DrawUtil.convertRgbaFromColorCode(value.target.value + 'ff');\r\n                                            if (rgba != null) {\r\n                                                formList[targetForms[0]].value = rgba.r.toString();\r\n                                                formList[targetForms[1]].value = rgba.g.toString();\r\n                                                formList[targetForms[2]].value = rgba.b.toString();\r\n                                            }\r\n                                            setFormList(formList.slice());\r\n                                        }}\r\n                                    />\r\n                                </>}\r\n                            />\r\n                        </div>);\r\n                    } break;\r\n                    case 'draw': {\r\n                        const xValue = formList[targetForms[0]].value;\r\n                        const yValue = formList[targetForms[1]].value;\r\n                        const xList = (xValue === '' ? [] : xValue.split(',').map(v => Number(v)));\r\n                        const yList = (xValue === '' ? [] : yValue.split(',').map(v => Number(v)));\r\n                        formJsxList.push(<div key={i}>\r\n                            <FormUtil.Record\r\n                                jsx={\r\n                                    <_Message>{formgrp.name}: <_Type>point </_Type><_Range>(～ {255} drawing)</_Range></_Message>\r\n                                }\r\n                            />\r\n                            <DrawableVectorChooser.ComponentNormal\r\n                                addPoint={(x, y) => {\r\n                                    xList.push(x);\r\n                                    yList.push(y);\r\n                                    formList[targetForms[0]].value = xList.join(',');\r\n                                    formList[targetForms[1]].value = yList.join(',');\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                clear={() => {\r\n                                    formList[targetForms[0]].value = '';\r\n                                    formList[targetForms[1]].value = '';\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                xList={xList}\r\n                                yList={yList}\r\n                            />\r\n                        </div>);\r\n                    } break;\r\n                    case 'draw-colorable': {\r\n                        const xValue = formList[targetForms[0]].value;\r\n                        const yValue = formList[targetForms[1]].value;\r\n                        const rValue = formList[targetForms[2]].value;\r\n                        const gValue = formList[targetForms[3]].value;\r\n                        const bValue = formList[targetForms[4]].value;\r\n                        const xList = (xValue === '' ? [] : xValue.split(',').map(v => Number(v)));\r\n                        const yList = (xValue === '' ? [] : yValue.split(',').map(v => Number(v)));\r\n                        const rList = (rValue === '' ? [] : rValue.split(',').map(v => Number(v)));\r\n                        const gList = (gValue === '' ? [] : gValue.split(',').map(v => Number(v)));\r\n                        const bList = (bValue === '' ? [] : bValue.split(',').map(v => Number(v)));\r\n                        formJsxList.push(<div key={i}>\r\n                            <FormUtil.Record\r\n                                jsx={\r\n                                    <_Message>{formgrp.name}: <_Type>point </_Type><_Range>(～ {255} drawing)</_Range></_Message>\r\n                                }\r\n                            />\r\n                            <DrawableVectorChooser.ComponentColorable\r\n                                addPoint={(x, y, r, g, b) => {\r\n                                    xList.push(x);\r\n                                    yList.push(y);\r\n                                    rList.push(r);\r\n                                    gList.push(g);\r\n                                    bList.push(b);\r\n                                    formList[targetForms[0]].value = xList.join(',');\r\n                                    formList[targetForms[1]].value = yList.join(',');\r\n                                    formList[targetForms[2]].value = rList.join(',');\r\n                                    formList[targetForms[3]].value = gList.join(',');\r\n                                    formList[targetForms[4]].value = bList.join(',');\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                clear={() => {\r\n                                    formList[targetForms[0]].value = '';\r\n                                    formList[targetForms[1]].value = '';\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                xList={xList}\r\n                                yList={yList}\r\n                                rList={rList}\r\n                                gList={gList}\r\n                                bList={bList}\r\n                            />\r\n                        </div>);\r\n                    } break;\r\n                }\r\n            } else {\r\n                let labelName = argument.name;\r\n                if (argument.disp != undefined) labelName = argument.disp;\r\n                formJsxList.push(<div key={i}>\r\n                    <FormUtil.Record\r\n                        jsx={\r\n                            <_Message>{labelName}: <_Type>number </_Type><_Range>({argument.min} ～ {argument.max})</_Range></_Message>\r\n                        }\r\n                    />\r\n                    <FormUtil.Record\r\n                        jsx={<>\r\n                            <FormUtil.TextField\r\n                                width={142}\r\n                                marginLeft={6}\r\n                                isNumber\r\n                                isReadOnly={isReadOnly}\r\n                                step={argument.step}\r\n                                checkable={form}\r\n                                setCheckable={() => {\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, argument.min as number, argument.max as number),\r\n                                        errorType: 'value'\r\n                                    }\r\n                                ]}\r\n                            />\r\n                            <_Tsumami type=\"range\" value={Number(form.value)} min={argument.min} max={argument.max} step={argument.step}\r\n                                disabled={isReadOnly}\r\n                                onChange={(value) => {\r\n                                    formList[i] = { ...form, value: value.target.value };\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                            />\r\n                        </>}\r\n                    />\r\n                </div>);\r\n            }\r\n        });\r\n        return formJsxList;\r\n    }\r\n}\r\n\r\nexport default LogicFormUtil;\r\n\r\n\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    overflow: hidden;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Type = styled.span`\r\n    color: #c10000;\r\n    font-weight: 600;\r\n`;\r\nconst _Range = styled.span`\r\n    color: #423e84fb;\r\n`;\r\n\r\nconst _Tsumami = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 11px 0 0 6px;\r\n    width: calc(100% - 160px);\r\n`;\r\n\r\nconst _Color = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 3px 0 0 6px;\r\n    width: 100px;\r\n    height: 34px;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactDetArgumentMng from \"../detail/logic/editorArgumentMng\";\r\nimport EditorArgumentItem from \"../detail/logic/editorArgumentItem\";\r\nimport FactDetSeedMng from \"../detail/seed/editorSeedMng\";\r\nimport EditorLogicMng from \"../detail/logic/editorLogicMng\";\r\nimport EditorLogicItem from \"../detail/logic/editorLogicItem\";\r\nimport EditorParamItem from \"../detail/logic/editorParamItem\";\r\nimport FactDetBehiviorMng from \"../detail/logic/editorBehiviorMng\";\r\nimport EditorVisualMng from \"../detail/logic/editorVisualMng\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport EditorInheritConnMng from \"../detail/logic/editorInheritConnMng\";\r\nimport EditorInheritConnector from \"../detail/logic/editorInheritConnector\";\r\nimport EditorSendManager from \"../detail/logic/editorSendManager\";\r\nimport EditorFieldMng from \"../detail/logic/editorFieldMng\";\r\nimport EditorExtendMng from \"../detail/logic/editorExtendMng\";\r\nimport EditorSeedItem from \"../detail/seed/editorSeedItem\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"./logicElementUtil\";\r\nimport EditorThumbnailMng from \"../detail/seed/editorThumbnailMng\";\r\nimport EditorThumbnailItem from \"../detail/seed/editorThumbnailItem\";\r\nimport EditorSampleItem from \"../detail/seed/editorSampleItem\";\r\nimport EditorSampleMng from \"../detail/seed/editorSampleMng\";\r\nimport EditorInterfaceManager from \"../detail/seed/editorInterfaceManager\";\r\nimport EditorSeedArgMng from \"../detail/seed/editorSeedArgMng\";\r\nimport EditorSeedArgItem from \"../detail/seed/editorSeedArgItem\";\r\nimport EditorSeedSendMng from \"../detail/seed/editorSeedSendMng\";\r\nimport EditorFormgrpItem from \"../detail/seed/editorFormgrpItem\";\r\nimport EditorFormgrpMng from \"../detail/seed/editorFormgrpMng\";\r\n\r\nnamespace LogicUtil {\r\n\r\n    export type DetailArgs = {\r\n        rootData: LogicUtil.WrapElement;\r\n        node: TreeUtil.ElementNode;\r\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\r\n        invalidate: () => void;\r\n        isModify: boolean;\r\n        setModify: (isModify: boolean) => void;\r\n        // setRootData: React.Dispatch<React.SetStateAction<WrapElement>>;\r\n        setRootData: (rootData: WrapElement) => void;\r\n        removeSelf: () => void;\r\n    }\r\n\r\n    /**\r\n     * 変数名チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkFieldName = (str: string) => {\r\n        // 1文字目が数値でないこと\r\n        const isNoHeadNumber = !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].\r\n            includes(str.substring(0, 1));\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyz_';\r\n        return isNoHeadNumber && ValidateUtil.checkIncludesChars(str, list);\r\n    }\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'seed-mng' |\r\n        'logic-mng' |\r\n        'seed-item' |\r\n        'logic-item' |\r\n        'argument-mng' |\r\n        'argument-item' |\r\n        'field-mng' |\r\n        'field-item' |\r\n        'visual-mng' |\r\n        'behavior-mng' |\r\n        'inhfld-mng' |\r\n        'extend-mng' |\r\n        'inherit-mng' |\r\n        'connector' |\r\n        'inherit-logic' |\r\n        'send-mng' |\r\n        'send-item' |\r\n        'param-item' |\r\n        'condition-item' |\r\n        'interface-mng' |\r\n        'sample-mng' |\r\n        'sample-item' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-item' |\r\n        'seedarg-mng' |\r\n        'seedsend-mng' |\r\n        'seedarg-item' |\r\n        'seedsend-item' |\r\n        'formgrp-mng' |\r\n        'formgrp-item'\r\n        ;\r\n\r\n    export const ArgTypes = ['number', 'array'] as const;\r\n    export type ArgumentType = typeof ArgTypes[number];\r\n\r\n    export const ParamInputTypes = ['direct', 'array', 'constant', 'argument', 'self', 'field', 'array.len', 'array.itr'] as const;\r\n    export type ParamInputType = typeof ParamInputTypes[number];\r\n\r\n    export const ConnectTypes = ['create', 'depend'] as const;\r\n    export type InheritMethod = typeof ConnectTypes[number];\r\n\r\n    export const PermitTypes = ['develop', 'private', 'release'] as const;\r\n    export type PermitType = typeof PermitTypes[number];\r\n\r\n    export const FromGrpMedhods = ['color', 'draw', 'draw-colorable'] as const;\r\n    export type FromGrpMethod = typeof FromGrpMedhods[number];\r\n\r\n    export type ParamProps = {\r\n        type: ParamInputType;\r\n        value: string;\r\n    }\r\n\r\n    export type WrapElement = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        seedMng: WrapElement;\r\n        logicMng: WrapElement;\r\n    }\r\n    export type NodeSeedManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicItem = {\r\n        name: string;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInterfaceMng = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInheritItem = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeParamManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeParamItem = {\r\n        name: string;\r\n        formulaItems: string[];\r\n        values: ParamProps[];\r\n        isArray?: boolean;\r\n    }\r\n\r\n    export type NodeArgumentItem = {\r\n        name: string;\r\n        valueType: ArgumentType;\r\n    }\r\n    export type NodeThumbnailItem = {\r\n        name: string;\r\n        frame: number;\r\n    }\r\n    export type NodeArgumentManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeFieldManager = {\r\n        fields: WrapElement[];\r\n    }\r\n    export type NodeSampleManager = {\r\n        samples: WrapElement[];\r\n    }\r\n    export type NodeSampleItem = {\r\n        name: string;\r\n        values: string[];\r\n    }\r\n\r\n    // export type NodeExtendManager = {\r\n    //     mngs: WrapElement[];\r\n    // }\r\n    export type NodeConnectManager = {\r\n        inherits: WrapElement[];\r\n    }\r\n    export type NodeInheritConnector = {\r\n        method: InheritMethod;\r\n        depend: string;\r\n        id: string;\r\n        disable?: boolean;\r\n        mngs: WrapElement[];\r\n    }\r\n\r\n    export type NodeSeedItem = {\r\n        name: string;\r\n        disp?: string;\r\n        entry: string;\r\n        permit: PermitType;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeThumnailManager = {\r\n        items: WrapElement[];\r\n    }\r\n    export type NodeSeedArgManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeSeedSendManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeSeedArgItem = {\r\n        name: string;\r\n        disp?: string;\r\n        isArray?: boolean;\r\n        min?: number;\r\n        max?: number;\r\n        step?: number;\r\n        defval?: string;\r\n        isPosX?: boolean;\r\n    }\r\n    export type NodeFromgrpManager = {\r\n        defines: WrapElement[];\r\n    }\r\n    export type NodeFromGrpItem = {\r\n        name: string;\r\n        method: FromGrpMethod;\r\n        args: string[];\r\n    }\r\n\r\n    const COLOR_ROOT = '#a1a1a1';\r\n    const COLOR_METHOD = '#cca67b';\r\n    const COLOR_MNG = '#37a2bd';\r\n    const COLOR_LIST = '#b85f5f';\r\n    const COLOR_ITEM = '#ae628c';\r\n    const COLOR_DISABLE = '#685b79';\r\n    const COLOR_PARAM = '#8dae62';\r\n    const COLOR_FIELD = '#cec256';\r\n    const COLOR_THUMBNAIL = '#8283be';\r\n    const COLOR_CONDITION = '#56ce7e';\r\n\r\n    export const getNodeDisplayJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapElement;\r\n        switch (wrap.type) {\r\n            case 'root': {\r\n                return <_Category backgroundColor={COLOR_ROOT}>Library</_Category>;\r\n            }\r\n            case 'seed-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Seed Manager</_Category>;\r\n            }\r\n            case 'logic-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Logic Manager</_Category>;\r\n            }\r\n            case 'visual-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Visual</_Category>;\r\n            }\r\n            case 'extend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Extend</_Category>;\r\n            }\r\n            case 'seed-item': {\r\n                let detailJsx = <>...</>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedItem;\r\n                    detailJsx = <span>{data.name}&nbsp;<_Span color=\"#ffe89ba6\">entry:&nbsp;</_Span><_Field>{data.entry}</_Field></span>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Seed</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n\r\n                </>;\r\n            }\r\n            case 'logic-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Logic</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-logic': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Logic</_Category>;\r\n            }\r\n            case 'argument-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'inhfld-mng':\r\n            case 'field-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Field Manager</_Category>;\r\n            }\r\n            case 'behavior-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Behavior</_Category>;\r\n            }\r\n            case 'inherit-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Inherit Manager</_Category>;\r\n            }\r\n            case 'connector': {\r\n                let detailJsx = <span>...</span>;\r\n                let color = COLOR_ITEM;\r\n                let isDisable = false;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeInheritConnector;\r\n                    detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}</_Span></span>;\r\n                    if (data.method === 'depend') {\r\n                        detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}:&nbsp;</_Span><_Field>{data.depend}</_Field></span>;\r\n                    }\r\n                    if (data.disable ?? false) {\r\n                        color = COLOR_DISABLE;\r\n                        isDisable = true;\r\n                    }\r\n                }\r\n                return (<>\r\n                    <_Category backgroundColor={color} isDisable={isDisable}>Inherit</_Category>\r\n                    {detailJsx == undefined ? <></> : <_EditableValue>{detailJsx}</_EditableValue>}\r\n                </>);\r\n            }\r\n            // パラメータ要素\r\n            case 'param-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_PARAM}>Param<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 条件要素\r\n            case 'condition-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_CONDITION}>Condition<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 変数要素\r\n            case 'field-item': {\r\n                let nameJsx = <span>...</span>;\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeParamItem;\r\n                    nameJsx = <_Detail>&nbsp;[{data.name}]</_Detail>;\r\n                    let result: JSX.Element[] = [];\r\n                    let varCnt = 0;\r\n                    data.formulaItems.forEach((formula, i) => {\r\n                        let str = <_Signature key={i}>{formula}</_Signature>;\r\n                        if (formula === 'var') {\r\n                            const v = data.values[varCnt];\r\n                            if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                            else str = <span key={i}>{v.value}</span>;\r\n                            varCnt++;\r\n                        }\r\n                        result.push(str);\r\n                    });\r\n                    detailJsx = <>{result}</>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Field{nameJsx}</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'argument-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeArgumentItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.valueType})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'send-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'thumbnail-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Thumnail Manager</_Category>;\r\n            }\r\n            case 'thumbnail-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeThumbnailItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.frame})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_THUMBNAIL}>Thumbnail</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'sample-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Preset Manager</_Category>;\r\n            }\r\n            case 'sample-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSampleItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Preset</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'interface-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Interface</_Category>;\r\n            }\r\n            case 'seedarg-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'seedarg-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedArgItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.min}～{data.max})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'seedsend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'formgrp-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Group Manager</_Category>;\r\n            }\r\n            case 'formgrp-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeFromGrpItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.method})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Group<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n        }\r\n        return <_Category backgroundColor={'#ffffff'}>XXXXX</_Category>;\r\n    }\r\n\r\n    export const getTypeName = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return '';\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return 'Root';\r\n            case 'seed-mng': return 'Seed Manager';\r\n            case 'logic-mng': return 'Logic Manager';\r\n            case 'seed-item': return 'Seed Item';\r\n            case 'logic-item': return 'Logic Item';\r\n            case 'argument-mng': return 'Argument Manager';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'Field Manager';\r\n            case 'field-item': return 'Field Item';\r\n            case 'visual-mng': return 'Visual Manager';\r\n            case 'seedarg-item':\r\n            case 'argument-item': return 'Argument Item';\r\n            case 'extend-mng': return 'Extend Manager';\r\n            case 'behavior-mng': return 'Behavior Manager';\r\n            case 'inherit-mng': return 'Inherit Manager';\r\n            case 'connector': return 'Inherit Connector';\r\n            case 'inherit-logic': return 'Inherit Logic';\r\n            case 'send-mng': return 'Send Manager';\r\n            case 'seedsend-item':\r\n            case 'send-item': return 'Send Item';\r\n            case 'param-item': return 'Param Item';\r\n            case 'condition-item': return 'Condition Item';\r\n            case 'interface-mng': return 'Interface Manager';\r\n            case 'thumbnail-mng': return 'Thumbnail Manager';\r\n            case 'thumbnail-item': return 'Thumbnail Item';\r\n            case 'sample-mng': return 'Preset Manager';\r\n            case 'sample-item': return 'Preset Item';\r\n            case 'seedarg-mng': return 'Argument Manager';\r\n            case 'seedsend-mng': return 'Send';\r\n            case 'formgrp-mng': return 'Group Manager';\r\n            case 'formgrp-item': return 'Group Item';\r\n        }\r\n    }\r\n\r\n    export const getDetailComponent = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return <></>;\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return <></>;\r\n            case 'seed-mng': return <FactDetSeedMng />;\r\n            case 'logic-mng': return <EditorLogicMng />;\r\n            case 'seed-item': return <EditorSeedItem />;\r\n            case 'logic-item': return <EditorLogicItem />;\r\n            case 'argument-mng': return <FactDetArgumentMng />;\r\n            case 'argument-item': return <EditorArgumentItem />;\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return <EditorFieldMng />;\r\n            case 'visual-mng': return <EditorVisualMng />;\r\n            case 'extend-mng': return <EditorExtendMng />;\r\n            case 'behavior-mng': return <FactDetBehiviorMng />;\r\n            case 'inherit-mng': return <EditorInheritConnMng />;\r\n            case 'connector': return <EditorInheritConnector />;\r\n            case 'inherit-logic': return <EditorLogicItem />;\r\n            case 'send-mng': return <EditorSendManager />;\r\n            case 'field-item':\r\n            case 'param-item':\r\n            case 'condition-item':\r\n            case 'send-item':\r\n            case 'seedsend-item': return <EditorParamItem />;\r\n            case 'interface-mng': return <EditorInterfaceManager />;\r\n            case 'sample-mng': return <EditorSampleMng />;\r\n            case 'sample-item': return <EditorSampleItem />;\r\n            case 'thumbnail-mng': return <EditorThumbnailMng />;\r\n            case 'thumbnail-item': return <EditorThumbnailItem />;\r\n            case 'seedarg-mng': return <EditorSeedArgMng />;\r\n            case 'seedarg-item': return <EditorSeedArgItem />;\r\n            case 'seedsend-mng': return <EditorSeedSendMng />;\r\n            case 'formgrp-item': return <EditorFormgrpItem />;\r\n            case 'formgrp-mng': return <EditorFormgrpMng />;\r\n        }\r\n    }\r\n\r\n    export const getChildrenElementNode = (node: TreeUtil.ElementNode): TreeUtil.ElementNode[] => {\r\n        const wrapNode = node.data as WrapElement;\r\n        const get = (listName: string) => {\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const elementNode = TreeUtil.createNode(wrap, node);\r\n                elementNode.children = getChildrenElementNode(elementNode);\r\n                return elementNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n\r\n    export const getChildrenDataNode = (wrapNode: LogicUtil.WrapElement): TreeUtil.DataNode[] => {\r\n        const get = (listName: string) => {\r\n\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const treeNode: TreeUtil.DataNode = {\r\n                    data: wrap,\r\n                    children: getChildrenDataNode(wrap)\r\n                };\r\n                return treeNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as LogicUtil.NodeRoot;\r\n                return [\r\n                    { data: node.seedMng, children: getChildrenDataNode(node.seedMng) },\r\n                    { data: node.logicMng, children: getChildrenDataNode(node.logicMng) }\r\n                ];\r\n            }\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n}\r\n\r\nexport default LogicUtil;\r\n\r\nconst _Category = styled.div<{\r\n    backgroundColor: string;\r\n    isDisable?: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: ${props => props.backgroundColor};\r\n    /* width: 100%; */\r\n    ${props => !(props.isDisable ?? false) ? '' : css`\r\n        text-decoration: line-through;\r\n        color: #00054dac;\r\n    `}\r\n    border-radius: 4px 0 0 4px;\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n    border: solid 1px #000000d2;\r\n`;\r\nconst _Detail = styled.span`\r\n    color: #000b69bd;\r\n`;\r\n\r\nconst _EditableValue = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #0c0c0c;\r\n    color: #ebebeb;\r\n    border-radius: 0 4px 4px 0;\r\n    /* width: 100%; */\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n`;\r\nconst _Span = styled.span<{\r\n    color: string;\r\n}>`\r\n    color: ${props => props.color};\r\n`;\r\nconst _ValueType = styled.span`\r\n    color: #fff9d6b9;\r\n`;\r\nconst _Signature = styled.span`\r\n    color: #ffffff78;\r\n`;\r\nconst _Field = styled.span`\r\n    color: #ff2d2d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../util/logicFormUtil\";\r\n\r\nconst EditorSampleItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [paramForms, setParamForms] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSampleItem;\r\n        setName({ ...name, value: param.name });\r\n        setParamForms(param.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のサンプル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const [seedargList, formgrpList]: [LogicUtil.NodeSeedArgItem[], LogicUtil.NodeFromGrpItem[]] = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'seedarg-mng');\r\n        const argInfoList = (argMng.data as LogicUtil.NodeSeedArgManager).\r\n            args.map(arg => {\r\n                return arg.data as LogicUtil.NodeSeedArgItem;\r\n            });\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        const formgrpMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'formgrp-mng');\r\n        if (formgrpMng != null) {\r\n            formgrpList = (formgrpMng.data as LogicUtil.NodeFromgrpManager).\r\n                defines.map(arg => {\r\n                    return arg.data as LogicUtil.NodeFromGrpItem;\r\n                });\r\n        }\r\n        return [argInfoList, formgrpList];\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setParamForms(seedargList.map(arg => {\r\n                let defval = '';\r\n                if (arg.defval != undefined) defval = arg.defval.toString();\r\n                return { value: defval, errors: [] };\r\n            }));\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const formList = useMemo(() => {\r\n        return LogicFormUtil.buildPreviewForms(\r\n            !isModify, seedargList, formgrpList, paramForms, setParamForms\r\n        );\r\n        // return paramForms.map((paramForm, i) => {\r\n        //     const arg = argInfoList[i];\r\n        //     return <FormUtil.FormRecord key={i}\r\n        //         titleLabel={arg.name}\r\n        //         jsx={\r\n        //             <FormUtil.TextField\r\n        //                 width={150}\r\n        //                 isReadOnly={!isModify}\r\n        //                 checkable={paramForm}\r\n        //                 setCheckable={(checkable) => {\r\n        //                     paramForms[i] = checkable;\r\n        //                     setParamForms(paramForms.slice());\r\n        //                 }}\r\n        //                 isNumber\r\n        //                 step={arg.step}\r\n        //                 validates={[\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkRequired(value),\r\n        //                         errorType: \"required\"\r\n        //                     },\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkNumberRange(value, arg.min, arg.max),\r\n        //                         errorType: \"value\"\r\n        //                     },\r\n        //                 ]}\r\n        //             />\r\n        //         }\r\n        //     />\r\n        // });\r\n    }, [paramForms, isModify]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name].concat(paramForms)}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSampleItem = {\r\n                    name: name.value,\r\n                    values: []\r\n                };\r\n                paramForms.forEach((form, i) => {\r\n                    element.values[i] = form.value;\r\n                });\r\n                wrap.data = element;\r\n\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSampleItem;\r\n                param.name = name.value;\r\n                paramForms.forEach((form, i) => {\r\n                    param.values[i] = form.value;\r\n                });\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 22),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {formList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'preset', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSampleMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Preset',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'sample-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSampleManager).samples.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleMng;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInterfaceManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const argMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedarg-mng');\r\n    const sendMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedsend-mng');\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(node.parent as TreeUtil.ElementNode, 'sample-mng');\r\n\r\n    const [hasGroupNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        return [\r\n            list.includes('formgrp-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const hasArgument = (): boolean => {\r\n        return argMngNode.children.length > 0;\r\n    }\r\n\r\n    /**\r\n     * グループ要素の有無を判定\r\n     */\r\n    const hasGroup = () => {\r\n        const groupMngNode = LogicElementUtil.getInnerNode(node, 'formgrp-mng');\r\n        if (groupMngNode == null) return false;\r\n        return groupMngNode.children.length > 0;\r\n    }\r\n\r\n    const execute = () => {\r\n        // const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n        // 既存の引数を削除\r\n        if (hasArgument()) {\r\n\r\n            LogicElementUtil.removeChildAll(argMngNode);\r\n            LogicElementUtil.removeChildAll(sampleMngNode);\r\n        }\r\n\r\n        sendMngNode.children.forEach(child => {\r\n            const send = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem;\r\n            send.formulaItems = ['var'];\r\n            send.values = [{ type: 'argument', value: send.name }];\r\n\r\n            const newArgData: LogicUtil.NodeSeedArgItem = {\r\n                name: send.name,\r\n                step: 1,\r\n                min: -9999,\r\n                max: 9999,\r\n                defval: ''\r\n            }\r\n            const newArgWrap: LogicUtil.WrapElement = {\r\n                type: 'seedarg-item',\r\n                data: newArgData\r\n            };\r\n            const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n            argMng.args.push(newArgWrap);\r\n            argMngNode.children.push(TreeUtil.createNode(newArgWrap, argMngNode));\r\n            invalidate();\r\n        });\r\n    }\r\n\r\n    const initDefaultSetting = () => {\r\n        if (!hasArgument()) {\r\n            execute();\r\n        } else {\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Are you sure you want to delete the existing element?\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        callback: () => {\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Execute',\r\n                        callback: () => {\r\n                            execute();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            setStore({ ...store });\r\n        }\r\n        invalidate();\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Group'}\r\n                        width={300}\r\n                        isUse={hasGroupNode}\r\n                        isEnable={!hasGroup()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasGroupNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'formgrp-mng',\r\n                                    data: {\r\n                                        defines: []\r\n                                    } as LogicUtil.NodeFromgrpManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Initialize Params',\r\n                        callback: initDefaultSetting\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInterfaceManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedArgMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seedarg-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedArgManager).args.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedArgMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorSeedArgItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [min, setMin] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [max, setMax] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [step, setStep] = useState<FormUtil.CheckableValue>({ value: '1', errors: [] });\r\n    const [defval, setDefval] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [isPosX, setPosX] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [isArray, setArray] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    const seedNode = node.parent?.parent?.parent as TreeUtil.ElementNode;\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setMin({ ...min, value: (param.min != undefined) ? param.min.toString() : '' });\r\n        setMax({ ...max, value: (param.max != undefined) ? param.max.toString() : '' });\r\n        setStep({ ...step, value: (param.step != undefined) ? param.step.toString() : '' });\r\n        setDefval({ ...defval, value: (param.defval != undefined) ? param.defval.toString() : ''});\r\n        setPosX({ ...isPosX, value: (param.isPosX ?? false) ? '1' : '' });\r\n        setArray({ ...isArray, value: (param.isArray ?? false) ? '1' : '' });\r\n        // setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, min, max, step, defval]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeSeedArgItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    min: Number(min.value),\r\n                    max: Number(max.value),\r\n                    step: Number(step.value),\r\n                    defval: defval.value === '' ? undefined : defval.value,\r\n                    isPosX: isPosX.value === '' ? undefined : true,\r\n                    isArray: isArray.value === '' ? undefined : true,\r\n                    // valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                wrap.data = param;\r\n                syncArgumentAdd(seedNode as TreeUtil.ElementNode, param);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.min = Number(min.value === '' ? '0' : min.value);\r\n                param.max = Number(max.value === '' ? '0' : max.value);\r\n                param.step = Number(step.value === '' ? '0' : step.value);\r\n                param.defval = defval.value === '' ? undefined : defval.value;\r\n                param.isPosX = isPosX.value === '' ? undefined : true;\r\n                param.isArray = isArray.value === '' ? undefined : true;\r\n                // param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(seedNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 16),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Array\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={isArray}\r\n                            setCheckable={(checkable) => {\r\n                                setArray(checkable);\r\n                                setMin({ ...min, value: '' });\r\n                                setMax({ ...max, value: '' });\r\n                                setStep({ ...step, value: '' });\r\n                                setDefval({ ...defval, value: '' });\r\n                                setPosX({ ...isPosX, value: '' });\r\n                            }}\r\n                            headBlank\r\n                            list={[\r\n                                { labelText: 'Yes', value: '1' }\r\n                            ]}\r\n                        // dependency={[min, max, step, defval, isPosX]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Min\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={min}\r\n                            setCheckable={setMin}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[max, isArray]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) < Number(max.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Max\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={max}\r\n                            setCheckable={setMax}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[min, isArray]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) > Number(min.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Step\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={step}\r\n                            setCheckable={setStep}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[isArray]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Default\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={defval}\r\n                            setCheckable={setDefval}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[isArray]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Position\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={isPosX}\r\n                            setCheckable={setPosX}\r\n                            isEnabled={isArray.value === ''}\r\n                            headBlank\r\n                            list={[\r\n                                { labelText: 'Yes', value: '1' }\r\n                            ]}\r\n                            dependency={[isArray]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'argument', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                                const refers = getArgumentRefers(seedNode, param.name);\r\n                                if (refers.length === 0) {\r\n                                    const curIndex = LogicElementUtil.getCurrentIndex(node);\r\n                                    if (curIndex === -1) throw new Error('[curIndex] is -1.');\r\n                                    syncArgumentDel(seedNode, curIndex);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtonsCallback(node, invalidate, (index, isUpper) => {\r\n                    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n                    const offset = isUpper ? -1 : 1;\r\n                    sampleMng.samples.forEach(wrap => {\r\n                        const values = (wrap.data as LogicUtil.NodeSampleItem).values;\r\n                        const swapNode = values[index];\r\n                        values[index] = values[index + offset];\r\n                        values[index + offset] = swapNode;\r\n                    });\r\n                })}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (seedNode: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    const sendMng = sendMngWrap.data as LogicUtil.NodeSeedSendManager;\r\n    sendMng.params.forEach(wrap => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        param.values.forEach(varItem => {\r\n            if (varItem.type === 'argument' && varItem.value === argName) {\r\n                refers.push(param.name);\r\n            }\r\n        });\r\n    });\r\n    return refers;\r\n}\r\n\r\nexport default EditorSeedArgItem;\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param seedNode Seedノード\r\n*/\r\nconst syncArgumentName = (seedNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    syncFormula((sendMngWrap.data as LogicUtil.NodeParamManager).params);\r\n\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Sample管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentAdd = (seedNode: TreeUtil.ElementNode, arg: LogicUtil.NodeSeedArgItem) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.push((arg.defval ?? 0).toString());\r\n    });\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentDel = (seedNode: TreeUtil.ElementNode, delIndex: number) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.splice(delIndex, 1);\r\n    });\r\n}","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedSendMng = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const getSendParamList = (): string[] => {\r\n    //     const connector = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n    //     const isCreate = connector.method === 'create';\r\n    //     let targetWrap: LogicUtil.WrapElement | null = null;\r\n    //     if (!isCreate) {\r\n    //         const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n    //         const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n    //         const dependItem = inheritMng.defs.find(wrap => {\r\n    //             return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n    //         });\r\n    //         if (dependItem != undefined) targetWrap = dependItem;\r\n    //     } else {\r\n    //         targetWrap = (node.parent?.children[node.parent?.children.length - 1].data as LogicUtil.WrapElement)\r\n    //     }\r\n    //     if (targetWrap != null) {\r\n    //         const argWrap = (targetWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n    //         if (argWrap.type === 'argument-mng') {\r\n    //             return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n    //                 return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n    //             });\r\n    //         }\r\n    //     }\r\n    //     return [];\r\n    // }\r\n\r\n    // const update = () => {\r\n    //     const sendParamList = getSendParamList();\r\n    //     const curSize = node.children.length;\r\n    //     const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n    //     // 不要なパラメータを削除\r\n    //     for (let i = curSize - 1; i >= 0; i--) {\r\n    //         const name = (params[i].data as LogicUtil.NodeParamItem).name;\r\n    //         if (!sendParamList.includes(name)) {\r\n    //             node.children.splice(i, 1);\r\n    //             params.splice(i, 1);\r\n    //         }\r\n    //     }\r\n    //     // 必要な存在しないパラメータを追加\r\n    //     const curParamList = params.map(param => {\r\n    //         return (param.data as LogicUtil.NodeParamItem).name;\r\n    //     });\r\n    //     sendParamList.forEach(param => {\r\n    //         if (!curParamList.includes(param)) {\r\n    //             const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n    //                 { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n    //             );\r\n    //             params.push(paramWrap);\r\n    //             node.children.push(TreeUtil.createNode(paramWrap, node));\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    return (<>\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedSendMng;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorFormgrpItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [groupMethod, setGroupMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [targetList, setTargetList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n        setName({ ...name, value: param.name });\r\n        setGroupMethod({ ...groupMethod, value: param.method });\r\n        setTargetList(param.args.map(arg => {\r\n            return { value: arg, errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const seedargs = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed(node.parent?.parent?.data as LogicUtil.WrapElement, 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        return argMng.args.map(wrap => (wrap.data as LogicUtil.NodeSeedArgItem));\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, groupMethod].concat(targetList)}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeFromGrpItem = {\r\n                    name: name.value,\r\n                    method: groupMethod.value as LogicUtil.FromGrpMethod,\r\n                    args: targetList.map(form => form.value)\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n                param.name = name.value;\r\n                param.method = groupMethod.value as LogicUtil.FromGrpMethod;\r\n                param.args = targetList.map(form => form.value);\r\n                wrap.data = param;\r\n\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 24),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={groupMethod}\r\n                            setCheckable={(checkable) => {\r\n                                const type = checkable.value as LogicUtil.FromGrpMethod;\r\n                                if (type === 'color') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(3).fill({ value: '', errors: [] }));\r\n                                } else if (type === 'draw') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(2).fill({ value: '', errors: [] }));\r\n                                } else if (type === 'draw-colorable') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(5).fill({ value: '', errors: [] }));\r\n                                } else {\r\n                                    setTargetList([]);\r\n                                }\r\n                                setGroupMethod({ ...checkable });\r\n                            }}\r\n                            list={LogicUtil.FromGrpMedhods.map(type => {\r\n                                return { value: type, labelText: type }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n                {targetList.map((target, i) => {\r\n                    let formName = 'Target_';\r\n                    const method = groupMethod.value as LogicUtil.FromGrpMethod;\r\n                    if (method === 'color') {\r\n                        switch (i) {\r\n                            case 0: formName += 'R'; break;\r\n                            case 1: formName += 'G'; break;\r\n                            case 2: formName += 'B'; break;\r\n                        }\r\n                    } else if (method === 'draw') {\r\n                        switch (i) {\r\n                            case 0: formName += 'X'; break;\r\n                            case 1: formName += 'Y'; break;\r\n                        }\r\n                    } else if (method === 'draw-colorable') {\r\n                        switch (i) {\r\n                            case 0: formName += 'X'; break;\r\n                            case 1: formName += 'Y'; break;\r\n                            case 2: formName += 'R'; break;\r\n                            case 3: formName += 'G'; break;\r\n                            case 4: formName += 'B'; break;\r\n                        }\r\n                    } else {\r\n                        formName += `_${i}`;\r\n                    }\r\n                    return (\r\n                        <FormUtil.FormRecord\r\n                            key={i}\r\n                            titleLabel={formName}\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={target}\r\n                                    setCheckable={(checkable) => {\r\n                                        targetList[i] = checkable;\r\n                                        setTargetList(targetList.slice());\r\n                                    }}\r\n                                    list={seedargs\r\n                                        .filter(item => groupMethod.value === 'color' ? !item.isArray : item.isArray)\r\n                                        .map(item => {\r\n                                            return { value: item.name, labelText: item.name }\r\n                                        })}\r\n                                    headBlank\r\n                                    width={250}\r\n                                    isReadOnly={!isModify}\r\n                                    validates={\r\n                                        [\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            },\r\n                                            {\r\n                                                checker: (value) => targetList.find((target, j) => i !== j && target.value === value) == undefined,\r\n                                                errorType: \"relation\"\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                    dependency={targetList}\r\n                                />\r\n                            }\r\n                        />\r\n                    );\r\n                })}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: removeSelf\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFormgrpMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Group',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'formgrp-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeFromgrpManager).defines.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpMng;","import { assert } from \"console\";\r\nimport { Store } from \"../../../../redux/store/store\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../dialog/confirmDialog\";\r\nimport Particle from \"../../../graphic/particle\";\r\nimport StoryUtil from \"../../launcher/util/storyUtil\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport ParamUtil from \"./paramUtil\";\r\n\r\n\r\nnamespace LogicElementUtil {\r\n\r\n    export const getInnerNode = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode | null => {\r\n\r\n        let cur: TreeUtil.ElementNode | null = node;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const target = cur.children.find(child => (child.data as LogicUtil.WrapElement).type === type);\r\n            if (target == undefined) cur = null;\r\n            else cur = target;\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerNodeFixed = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode => {\r\n        const innerNode = getInnerNode(node, ...typeList);\r\n        if (innerNode == null) throw new Error('[innerNode] is null.');\r\n        return innerNode as TreeUtil.ElementNode;\r\n    }\r\n\r\n    export const getInnerWrap = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement | null => {\r\n\r\n        let cur: LogicUtil.WrapElement | null = wrap;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const listName = getListParamName(cur.type);\r\n            if (listName == null) cur = null;\r\n            else {\r\n                const list = cur.data[`${listName}`] as LogicUtil.WrapElement[];\r\n                const target = list.find(child => child.type === type);\r\n                if (target == undefined) cur = null;\r\n                else cur = target;\r\n            }\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerWrapFixed = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement => {\r\n        const innerWrap = getInnerWrap(wrap, ...typeList);\r\n        if (innerWrap == null) throw new Error('[innerWrap] is null.');\r\n        return innerWrap as LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const addChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode) => {\r\n        return insertChild(wrapElement, node, node.children.length);\r\n    }\r\n\r\n    export const insertChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode, listPos: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, 0, wrapElement);\r\n        const newNode = TreeUtil.createNode(wrapElement, node);\r\n        node.children.splice(listPos, 0, newNode);\r\n        return newNode;\r\n    }\r\n\r\n    export const removeChild = (node: TreeUtil.ElementNode, listPos: number, size: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, size);\r\n        node.children.splice(listPos, size);\r\n    }\r\n\r\n    export const removeChildAll = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].length = 0;\r\n        node.children.length = 0;\r\n    }\r\n\r\n    export const isHead = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[0] == node;\r\n    }\r\n\r\n    export const isTail = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[ownerChildren.length - 1] == node;\r\n    }\r\n\r\n    export const getCurrentIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(parentWrap.type);\r\n        if (listName == null || parentWrap.data == null) return -1;\r\n        const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n        const curIndex = list.findIndex(wrap => wrap == node.data);\r\n        return curIndex;\r\n    }\r\n\r\n    const swapOrder = (node: TreeUtil.ElementNode, offset: number) => {\r\n        if (node.parent == null) return;\r\n        const ownerChildren = node.parent.children;\r\n        const wrap = node.parent.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        const ownDataChildren = wrap.data[`${listName}`] as LogicUtil.WrapElement[];\r\n\r\n        let curNo = getCurrentIndex(node);\r\n        if (curNo === -1) return;\r\n\r\n        // ツリーノードの入れ替え\r\n        const swapNode = ownerChildren[curNo];\r\n        ownerChildren[curNo] = ownerChildren[curNo + offset];\r\n        ownerChildren[curNo + offset] = swapNode;\r\n        // データ要素の入れ替え\r\n        const swapData = ownDataChildren[curNo];\r\n        ownDataChildren[curNo] = ownDataChildren[curNo + offset];\r\n        ownDataChildren[curNo + offset] = swapData;\r\n    }\r\n\r\n    export const getSwapButtons = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        ...dependencyMngNodes: TreeUtil.ElementNode[]\r\n    ) => {\r\n        return getSwapButtonsCallback(node, invalidate, (curIndex, isUpper) => {\r\n            if (dependencyMngNodes.length > 0) {\r\n                dependencyMngNodes.forEach(depNode => {\r\n                    swapOrder(depNode.children[curIndex], isUpper ? -1 : 1);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    export const getSwapButtonsCallback = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        callback: (curIndex: number, isUpper: boolean) => void\r\n    ) => {\r\n        const curIndex = getCurrentIndex(node);\r\n        return <>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↑',\r\n                        isEnable: !LogicElementUtil.isHead(node),\r\n                        callback: () => {\r\n                            swapOrder(node, -1);\r\n                            callback(curIndex, true);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↓',\r\n                        isEnable: !LogicElementUtil.isTail(node),\r\n                        callback: () => {\r\n                            swapOrder(node, 1);\r\n                            callback(curIndex, false);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>;\r\n    }\r\n\r\n    /**\r\n     * 同レベル階層に自身ノードの複製を作成する\r\n     * @param node コピー対象のノード\r\n     * @param newName コピー後の名称\r\n     */\r\n    export const replicateSameLevel = (node: TreeUtil.ElementNode, newName: string) => {\r\n        if (node.parent == null) return;\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const cloneBase = wrap.data;\r\n        const cloneDest = JSON.parse(JSON.stringify((cloneBase)));\r\n\r\n        const newWrap: LogicUtil.WrapElement = {\r\n            type: wrap.type,\r\n            data: cloneDest\r\n        };\r\n        const namable = getNamableProps(wrap.type);\r\n        newWrap.data[namable] = newName;\r\n\r\n        // ロジックマネージャに追加\r\n        const newNode = LogicElementUtil.addChild(newWrap, node.parent);\r\n        // 子要素の展開\r\n        newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n    }\r\n\r\n    export const getReplicateButton = (\r\n        node: TreeUtil.ElementNode,\r\n        isEnable: boolean,\r\n        targetElement: string, store: Store,\r\n        setStore: (store: Store) => void,\r\n        invalidate: () => void\r\n    ): JSX.Element => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        return <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[{\r\n                label: 'Replicate',\r\n                isEnable,\r\n                // isEnable: false,\r\n                callback: () => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={`Replicate this ${targetElement}.`}\r\n                        buttons={[\r\n                            {\r\n                                label: 'Cancel',\r\n                                callback: () => {\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Enter',\r\n                                callback: () => {\r\n                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                    const name = wrap.data[namable] as string;\r\n                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                    // mappingForm();\r\n                                    invalidate();\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }\r\n            }]}\r\n        />;\r\n    }\r\n\r\n    export const getListParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return 'defs';\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            // case 'root':\r\n            case 'logic-item': return 'mngs';\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return 'params';\r\n            case 'inherit-mng': return 'inherits';\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return 'args';\r\n            case 'sample-mng': return 'samples';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'fields';\r\n            case 'thumbnail-mng': return 'items';\r\n            case 'formgrp-mng': return 'defines';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getIdentifyParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'argument-item':\r\n            case 'field-item':\r\n            case 'seed-item':\r\n            case 'thumbnail-item':\r\n            case 'seedarg-item':\r\n            case 'sample-item':\r\n            case 'formgrp-item':\r\n            case 'logic-item': return 'name';\r\n            case 'connector': return 'id';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getNamableProps = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'connector': return 'id';\r\n            case 'seed-item':\r\n            case 'argument-item':\r\n            case 'seedarg-item':\r\n            case 'field-item':\r\n            case 'sample-item':\r\n            case 'thumbnail-item':\r\n            case 'logic-item': return 'name';\r\n        }\r\n        throw new Error('Namable props not found.');\r\n    }\r\n\r\n    export const syncTreeElementFromWrap = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        if (listName == null) return;\r\n        (wrap.data[listName] as any[]).forEach(childWrap => {\r\n            const newNode = TreeUtil.createNode(childWrap, node);\r\n            node.children.push(newNode);\r\n            syncTreeElementFromWrap(newNode);\r\n        });\r\n    }\r\n\r\n    export const createParamWrap = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem): LogicUtil.WrapElement => {\r\n        return { type: type, data: paramDataList };\r\n    }\r\n    export const createParamWrapList = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem[]): LogicUtil.WrapElement[] => {\r\n        return paramDataList.map(data => {\r\n            return { type: type, data: data };\r\n        });\r\n    }\r\n\r\n    export const createVisualParams = (): LogicUtil.WrapElement[] => {\r\n        const type = ParamUtil.VisualParamType;\r\n        return createParamWrapList('param-item', [\r\n            { name: type.RADIUS, formulaItems: ['var'], values: [{ type: 'direct', value: '20' }] },\r\n            { name: type.COLOR_R, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_G, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_B, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_A, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n        ]);\r\n    }\r\n\r\n    export const createBehaviorParams = (): LogicUtil.WrapElement[] => {\r\n        const list: LogicUtil.NodeParamItem[] = [];\r\n        const type = ParamUtil.BehaviorParamType;\r\n        list.push({\r\n            name: type.LIMIT,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '30' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        return createParamWrapList('param-item', list);\r\n    }\r\n\r\n    export const getDefaultLogicMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'visual-mng',\r\n                data: {\r\n                    params: createVisualParams()\r\n                } as LogicUtil.NodeParamManager\r\n            },\r\n            {\r\n                type: 'behavior-mng',\r\n                data: {\r\n                    params: createBehaviorParams()\r\n                } as LogicUtil.NodeParamManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    export const getInitialData = (): LogicUtil.WrapElement => {\r\n        return {\r\n            type: 'root',\r\n            data: {\r\n                seedMng: {\r\n                    type: 'seed-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeSeedManager\r\n                } as LogicUtil.WrapElement,\r\n                logicMng: {\r\n                    type: 'logic-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeLogicManager\r\n                } as LogicUtil.WrapElement\r\n            } as LogicUtil.NodeRoot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 同階層の名前パラメータを持つ要素より、既存の名前一覧を取得する。\r\n     * @param node 現在のノード\r\n     * @returns 同階層の既存の名前一覧\r\n     */\r\n    export const getExistNameList = (node: TreeUtil.ElementNode) => {\r\n        const nameList: string[] = [];\r\n        const curWrap = node.data as LogicUtil.WrapElement;\r\n        const nameParam = getIdentifyParamName(curWrap.type);\r\n        const mngWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listParam = getListParamName(mngWrap.type);\r\n        if (listParam == null || nameParam == null) throw Error('List param or identifiy param not found.');\r\n        const list = mngWrap.data[listParam] as LogicUtil.WrapElement[];\r\n        list.forEach(wrap => {\r\n            if (wrap.data != null && curWrap != wrap) {\r\n                nameList.push(wrap.data[nameParam]);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getLogicNameList = (mng: LogicUtil.NodeLogicManager) => {\r\n        const nameList: string[] = [];\r\n        mng.defs.forEach(logic => {\r\n            if (logic.data != null) {\r\n                nameList.push((logic.data as LogicUtil.NodeLogicItem).name);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getParamNameList = (curLogicOwner: LogicUtil.NodeLogicItem) => {\r\n        const nameList: string[] = [];\r\n\r\n        // システム固有のパラメータ名を取得\r\n        ParamUtil.VisualParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.BehaviorParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.SelfParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ExtendParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.EffectParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ModulateParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.Constants.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n\r\n        // 引数のパラメータ名を取得\r\n        const argMng = curLogicOwner.mngs.find(mng => mng.type === 'argument-mng');\r\n        if (argMng != undefined) {\r\n            const args = (argMng.data as LogicUtil.NodeArgumentManager).args;\r\n            args.forEach(arg => {\r\n                if (arg.data != null) {\r\n                    nameList.push((arg.data as LogicUtil.NodeArgumentItem).name);\r\n                }\r\n            });\r\n        }\r\n        // フィールドのパラメータ名を取得\r\n        const fieldMng = curLogicOwner.mngs.find(mng => mng.type === 'field-mng');\r\n        if (fieldMng != undefined) {\r\n            const fields = (fieldMng.data as LogicUtil.NodeFieldManager).fields;\r\n            fields.forEach(field => {\r\n                if (field.data != null) {\r\n                    nameList.push((field.data as LogicUtil.NodeParamItem).name);\r\n                }\r\n            });\r\n        }\r\n        return nameList;\r\n    }\r\n\r\n    /**\r\n     * 子要素の接頭連番をチェックし、重複しない名称を返す。\r\n     * @param prefix 接頭語\r\n     * @param node 基準となるノード\r\n     */\r\n    export const getNumberingOnPrefixName = (prefix: string, node: TreeUtil.ElementNode) => {\r\n        let num = 0;\r\n        // 接頭番号を取得\r\n        while (true) {\r\n            const check = node.children.find(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                if (wrap.data == null) return false;\r\n                console.log(wrap);\r\n                return wrap.data[getNamableProps(wrap.type)] === `${prefix}${num}`;\r\n            });\r\n            if (check != undefined) num++;\r\n            else break;\r\n        }\r\n        return `${prefix}${num}`;\r\n    }\r\n\r\n    /**\r\n     * パラメータの式で参照されている変数を検索し、\r\n     * 任意の処理（callback）を実行する。\r\n     * @param node 現在のノード\r\n     * @param callback 処理\r\n     */\r\n    export const searchVariableReferInFormula = (node: TreeUtil.ElementNode, callback: Function) => {\r\n\r\n        const mngType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const getLogicItem = () => {\r\n            switch (mngType) {\r\n                case 'field-mng':\r\n                case 'argument-mng': return node.parent?.parent?.data as LogicUtil.WrapElement;\r\n                case 'inhfld-mng': return node.parent?.parent?.parent?.parent?.data as LogicUtil.WrapElement;\r\n            }\r\n        }\r\n        const logicItem = getLogicItem()?.data as LogicUtil.NodeLogicItem;\r\n        if (mngType === 'argument-mng') {\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (fieldMng != undefined) {\r\n                callback((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n        }\r\n        if (mngType !== 'inhfld-mng') {\r\n            const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n            if (visualMng != undefined) {\r\n                callback((visualMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n            const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n            if (behaviorMng != undefined) {\r\n                callback((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n        }\r\n        const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                if (mngType !== 'inhfld-mng') {\r\n                    const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                    // Inherit配下のField要素のチェック\r\n                    if (inhfld != null) {\r\n                        callback((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                    }\r\n                }\r\n                // Extend要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    }\r\n\r\n    export const findSeedWrap = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const root = rootData.data as LogicUtil.NodeRoot;\r\n        const seed = (root.seedMng.data as LogicUtil.NodeSeedManager).defs.find(def => {\r\n            const seedItem = def.data as LogicUtil.NodeSeedItem;\r\n            return seedItem.name === seedId;\r\n        });\r\n        if (seed == undefined) throw new Error();\r\n        return seed;\r\n    }\r\n\r\n    export const doParticleJob = (rootData: LogicUtil.WrapElement, fuse: StoryUtil.Fuse, owner: Particle.Instance[]) => {\r\n        const seedWrap = findSeedWrap(rootData, fuse.seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        const getSendingValueMap = () => {\r\n            const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const valueMapList: PreviewUtil.ValueMap[] = [];\r\n            seedargMng.args.forEach((wrap, i) => {\r\n                const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                if (!seedarg.isArray) {\r\n                    valueMapList.push({ name: seedarg.name, value: Number(fuse.values[i]) })\r\n                }\r\n            });\r\n\r\n            // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n            return sendParams\r\n                .filter(item => !item.isArray)\r\n                .map(item => {\r\n                    const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMapList);\r\n                    if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                    return { name: item.name, value };\r\n                });\r\n        }\r\n\r\n        const getSendingArrayMap = () => {\r\n            const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const arrayMapList: PreviewUtil.ArrayMap[] = [];\r\n            seedargMng.args.forEach((wrap, i) => {\r\n                const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                if (seedarg.isArray) {\r\n                    arrayMapList.push({ name: seedarg.name, array: fuse.values[i].split(',').map(v => Number(v)) })\r\n                }\r\n            });\r\n\r\n            // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n            return sendParams\r\n                .filter(item => item.isArray)\r\n                .map(item => {\r\n                    const array = PreviewUtil.convertParamsToArray(item.name, sendParams, arrayMapList);\r\n                    if (array == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                    return { name: item.name, array: array };\r\n                });\r\n        }\r\n\r\n        owner.push(new Particle.Instance(\r\n            PreviewUtil.buildLogicProps(owner, getOrigin(), rootData, getSendingValueMap(), getSendingArrayMap())\r\n        ));\r\n    }\r\n\r\n    export type SeedProps = {\r\n        seed: LogicUtil.NodeSeedItem;\r\n        logic: LogicUtil.NodeLogicItem;\r\n        seedargList: LogicUtil.NodeSeedArgItem[];\r\n        seedsendList: LogicUtil.NodeParamItem[];\r\n        thumbnailList: LogicUtil.NodeThumbnailItem[];\r\n    }\r\n    export const getSeedProperties = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const seedWrap = findSeedWrap(rootData, seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n        const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        const seedargList = seedargMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n        const seedsendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n        const seedsendList = seedsendMng.params.map(wrap => wrap.data as LogicUtil.NodeParamItem);\r\n        const thumbnailMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'thumbnail-mng').data as LogicUtil.NodeThumnailManager;\r\n        const thumbnailList = thumbnailMng.items.map(wrap => wrap.data as LogicUtil.NodeThumbnailItem);\r\n\r\n        return {\r\n            seed, logic: getOrigin(), seedargList, seedsendList, thumbnailList\r\n        }\r\n    }\r\n}\r\n\r\nexport default LogicElementUtil;","export namespace SPUtil {\r\n\r\n    export const SCREEN_WIDTH = 640;\r\n    export const SCREEN_HEIGHT = 960;\r\n}","import { useState, useMemo, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewLogicInputForm = (props: {\r\n    logicWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n    setSendingArrayMap: (sendingArrayMap: (() => PreviewUtil.ArrayMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const argumentList: LogicUtil.NodeArgumentItem[] = useMemo(() => {\r\n        let list: LogicUtil.NodeArgumentItem[] = [];\r\n        const argWrap = LogicElementUtil.getInnerWrap(props.logicWrap, 'argument-mng');\r\n        if (argWrap != null) {\r\n            list = (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                const argItem = arg.data as LogicUtil.NodeArgumentItem;\r\n                return argItem;\r\n            });\r\n        }\r\n        return list;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFormList(argumentList.map(arg => {\r\n            return { value: '', errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const isFormInputOK = formList.find(form => form.errors.length > 0) == undefined;\r\n        if (isFormInputOK) {\r\n            props.setSendingValueMap(() => {\r\n                return formList\r\n                    .filter((form, i) => {\r\n                        return argumentList[i].valueType === 'number';\r\n                    })\r\n                    .map((form, i) => {\r\n                        const argument = argumentList[i];\r\n                        return { name: argument.name, value: Number(form.value) } as PreviewUtil.ValueMap\r\n                    });\r\n            });\r\n            props.setSendingArrayMap(() => {\r\n                return formList\r\n                    .filter((form, i) => {\r\n                        return argumentList[i].valueType === 'array';\r\n                    })\r\n                    .map((form, i) => {\r\n                        const argument = argumentList[i];\r\n                        const array = form.value.split(',').map(v => Number(v));\r\n                        return { name: argument.name, array } as PreviewUtil.ArrayMap\r\n                    });\r\n            });\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n            props.setSendingArrayMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return <>{\r\n        formList.map((form, i) => {\r\n            const argument = argumentList[i];\r\n\r\n            const validates: ValidateUtil.Validate[] = [];\r\n            let isNumber = false;\r\n            if (argument.valueType === 'number') {\r\n                validates.push({\r\n                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                    errorType: \"required\"\r\n                });\r\n                isNumber = true;\r\n            } else {\r\n                validates.push({\r\n                    checker: (value) => ValidateUtil.checkArrayNumber(value),\r\n                    errorType: \"value\"\r\n                });\r\n            }\r\n            return (<FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={argument.name}\r\n                labelWidth={250}\r\n                jsx={\r\n                    <FormUtil.TextField\r\n                        width={312}\r\n                        isNumber={isNumber}\r\n                        checkable={form}\r\n                        setCheckable={() => {\r\n                            setFormList(formList.slice());\r\n                        }}\r\n                        validates={validates}\r\n                    />\r\n                }\r\n            />);\r\n        })\r\n    }</>\r\n}\r\n\r\nexport default PreviewLogicInputForm;","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../factory/util/logicFormUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewSeedInputForm = (props: {\r\n    seedWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n    setSendingArrayMap: (sendingArrayMap: (() => PreviewUtil.ArrayMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [formgrpList, seedargList, presetList]: [LogicUtil.NodeFromGrpItem[], LogicUtil.NodeSeedArgItem[], LogicUtil.NodeSampleItem[]] = useMemo(() => {\r\n        const formgrpWrap = LogicElementUtil.getInnerWrap(props.seedWrap, 'interface-mng', 'formgrp-mng');\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        if (formgrpWrap != null) {\r\n            formgrpList = (formgrpWrap.data as LogicUtil.NodeFromgrpManager).defines.map(def => def.data as LogicUtil.NodeFromGrpItem);\r\n        }\r\n\r\n        const argWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedarg-mng');\r\n        const seedargList = (argWrap.data as LogicUtil.NodeSeedArgManager).args.map(arg => arg.data as LogicUtil.NodeSeedArgItem);\r\n\r\n        const sampleWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'sample-mng');\r\n        const sampleList = (sampleWrap.data as LogicUtil.NodeSampleManager).samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n        return [formgrpList, seedargList, sampleList];\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        setFormList(seedargList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (formList.find(form => form.errors.length > 0) == undefined) {\r\n            props.setSendingValueMap(() => {\r\n                const valueMap: PreviewUtil.ValueMap[] = [];\r\n                formList.forEach((form, i) => {\r\n                    const seedarg = seedargList[i];\r\n                    if (!seedarg.isArray) {\r\n                        valueMap.push({ name: seedarg.name, value: Number(form.value) });\r\n                    }\r\n                });\r\n\r\n                // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                const sendMng = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                return sendParams\r\n                    .filter((item, i) => {\r\n                        return !item.isArray;\r\n                    })\r\n                    .map(item => {\r\n                        const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                        if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                        return { name: item.name, value };\r\n                    });\r\n            });\r\n            props.setSendingArrayMap(() => {\r\n                const arrayMap: PreviewUtil.ArrayMap[] = [];\r\n                formList.forEach((form, i) => {\r\n                    const seedarg = seedargList[i];\r\n                    if (seedarg.isArray) {\r\n                        const array = (form.value === '' ? [] : form.value.split(',').map(v => Number(v)));\r\n                        arrayMap.push({ name: seedarg.name, array });\r\n                    }\r\n                });\r\n\r\n                // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                const sendMng = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                return sendParams\r\n                    .filter((item, i) => {\r\n                        return item.isArray;\r\n                    })\r\n                    .map(item => {\r\n                        console.log(arrayMap);\r\n                        const array = PreviewUtil.convertParamsToArray(item.name, sendParams, arrayMap);\r\n                        if (array == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                        return { name: item.name, array };\r\n                    });\r\n            });\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n            props.setSendingArrayMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"Preset\"\r\n            innerJsx={<FormUtil.Record\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        width={402}\r\n                        checkable={template}\r\n                        setCheckable={setTemplate}\r\n                        headBlank\r\n                        list={presetList.map((sample, i) => {\r\n                            return {\r\n                                labelText: sample.name,\r\n                                value: i.toString()\r\n                            }\r\n                        })}\r\n                    />\r\n                    <FormUtil.ButtonItem\r\n                        button={{\r\n                            label: 'Apply',\r\n                            isEnable: template.value !== '',\r\n                            callback: () => {\r\n                                const selectedIndex = Number(template.value);\r\n                                const values = presetList[selectedIndex].values;\r\n                                values.forEach((value, i) => {\r\n                                    formList[i].value = value.toString();\r\n                                });\r\n                                setFormList(formList.slice());\r\n                            }\r\n                        }}\r\n                    />\r\n                </>}\r\n            />}\r\n        />\r\n        {LogicFormUtil.buildPreviewForms(\r\n            false, seedargList, formgrpList, formList, setFormList\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default PreviewSeedInputForm;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport { SPUtil } from \"../../../sp/spUtil\";\r\nimport { VscDebugStart } from \"react-icons/vsc\";\r\nimport { IoStopOutline } from \"react-icons/io5\";\r\nimport { RxReset } from \"react-icons/rx\";\r\nimport { AiFillStepBackward, AiFillStepForward } from \"react-icons/ai\";\r\n\r\nnamespace PreviewLauncherFrameSp {\r\n\r\n    export const Component = (props: {\r\n        sceens: string[];\r\n        frameCnt: number;\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const sceens = props.sceens;\r\n        const frameCnt = props.frameCnt;\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n\r\n        const previewTabJsx = (\r\n            <>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    // 再生中は変更できない\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    interval={12}\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 60,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            icon: <AiFillStepBackward />,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 60,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            icon: <AiFillStepForward />,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            width: 100,\r\n                            icon: !isPlay ? <VscDebugStart /> : <IoStopOutline />,\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            width: 100,\r\n                            isEnable: !isPlay,\r\n                            icon: <RxReset />,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={SPUtil.SCREEN_WIDTH - 1}\r\n                height={768}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                        } break;\r\n                        case 'ArrowRight': {\r\n                            if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                        } break;\r\n                        case ' ': {\r\n                            setPlay(!isPlay);\r\n                        } break;\r\n                    }\r\n                    if (e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }}\r\n            >\r\n                {previewTabJsx}\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                        if (props.closeAction != undefined) {\r\n                            props.closeAction();\r\n                        }\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLauncherFrameSp;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #575a61ce;\r\n    border: 1px solid #8f8f8f;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${SPUtil.SCREEN_WIDTH - 3}px;\r\n    height: ${SPUtil.SCREEN_WIDTH - 3}px;\r\n    margin: 35px 0 0 0;\r\n    background-color: #020202df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryUtil from \"../launcher/util/storyUtil\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport styled, { css } from \"styled-components\";\r\nimport PreviewLauncherFrame from \"./previewLauncherFrame\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PreviewLauncherFrameSp from \"./previewLauncherFrameSp\";\r\n\r\nnamespace BuildUtil {\r\n\r\n    export type RunParticleProps = {\r\n        /** フレームの上限（過ぎると停止） */\r\n        limitFrame: number,\r\n        /** パーティクル数の上限（超えると停止） */\r\n        limitParticle: number,\r\n        /** 最低保証フレーム */\r\n        guaranteeFrame?: number,\r\n        /** 1フレーム経過ごとに実行する処理のコールバック */\r\n        doIterate: (frame: number, owner: Particle.Instance[]) => void,\r\n        /** 最終フレーム（ループから抜けた直後）に実行する処理のコールバック */\r\n        doEnd?: (frame: number, owner: Particle.Instance[]) => void\r\n    };\r\n\r\n    export type DivideProps = {\r\n        num: number;\r\n        standbyEvent: () => void;\r\n        countUpEvent: () => void;\r\n    }\r\n\r\n    export const run = (props: RunParticleProps) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        const owner: Particle.Instance[] = [];\r\n        let frame = 0;\r\n\r\n        while (true) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frame > props.limitFrame ||\r\n                owner.length > props.limitParticle ||\r\n                frame > minFrame && owner.length === 0\r\n            ) break;\r\n            frame++;\r\n        };\r\n\r\n        if (props.doEnd != undefined) {\r\n            props.doEnd(frame, owner);\r\n        }\r\n    }\r\n\r\n    export const runPaging = (props: RunParticleProps, owner: Particle.Instance[], beginFrame: number, advanceFrame: number) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        // const owner: Particle.Instance[] = [];\r\n\r\n        let frame = beginFrame;\r\n        while (frame - beginFrame < advanceFrame) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            // if (frame > props.limitFrame ||\r\n            //     owner.length > props.limitParticle ||\r\n            //     frame > minFrame && owner.length === 0\r\n            // ) {\r\n            //     if (props.doEnd != undefined) {\r\n            //         props.doEnd(frame, owner);\r\n            //     }\r\n            //     break;\r\n            // }\r\n            frame++;\r\n        };\r\n    }\r\n\r\n    const PROGRESS_VAL = 1;\r\n\r\n    type StoryPreviewProps = {\r\n        sceens: string[];\r\n        useFrame: number;\r\n    }\r\n\r\n    export type PagingField = {\r\n        useFrame: number;\r\n        curFrame: number;\r\n        sceens: string[];\r\n        owner: Particle.Instance[];\r\n    }\r\n\r\n    export const BuildFrame = (props: {\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n        const [storyPreviewProps, setStoryPreviewProps] = useState<StoryPreviewProps | null>(null);\r\n        const [buildCache, setBuildCache] = useState<PagingField>({\r\n            useFrame: 0,\r\n            curFrame: 0,\r\n            owner: [],\r\n            sceens: []\r\n        });\r\n\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n        useEffect(() => {\r\n            // プログレスバーが100％になったら処理される\r\n            if (buildCache.useFrame != 0 && buildCache.curFrame == buildCache.useFrame) {\r\n                setStoryPreviewProps({\r\n                    sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                });\r\n                return;\r\n            }\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const minFrame = fuseList[0].frame;\r\n\r\n            if (buildCache.useFrame === 0) {\r\n                BuildUtil.run({\r\n                    limitFrame,\r\n                    limitParticle,\r\n                    guaranteeFrame: minFrame,\r\n                    doIterate: (frame, owner) => {\r\n                        fuseList.some(fuse => {\r\n                            if (fuse.frame === frame) {\r\n                                LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                            } else if (fuse.frame > frame) return 1;\r\n                        });\r\n                    },\r\n                    doEnd: (frame) => {\r\n                        buildCache.useFrame = frame;\r\n                    }\r\n                });\r\n                setBuildCache({ ...buildCache });\r\n            } else {\r\n                runPaging({\r\n                    limitFrame,\r\n                    limitParticle,\r\n                    guaranteeFrame: minFrame,\r\n                    doIterate: (frame, owner) => {\r\n\r\n                        fuseList.some(fuse => {\r\n                            if (fuse.frame === frame) {\r\n                                LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                            } else if (fuse.frame > frame) return 1;\r\n                        });\r\n\r\n                        buildCache.sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                            // パーティクルの描画\r\n                            owner.forEach(par => {\r\n                                par.draw(ctx);\r\n                            });\r\n                            ctx.save();\r\n                        }));\r\n                    },\r\n                    // doEnd: () => {\r\n                    //     setStoryPreviewProps({\r\n                    //         sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                    //     });\r\n                    // }\r\n                }, buildCache.owner, buildCache.curFrame, PROGRESS_VAL);\r\n                buildCache.curFrame += PROGRESS_VAL;\r\n                if (buildCache.curFrame > buildCache.useFrame) {\r\n                    buildCache.curFrame = buildCache.useFrame;\r\n                }\r\n                setBuildCache({ ...buildCache });\r\n            }\r\n        }, [buildCache]);\r\n\r\n        useEffect(() => {\r\n            if (storyPreviewProps != null) {\r\n                store.system.dialog = <PreviewLauncherFrameSp.Component\r\n                    sceens={storyPreviewProps.sceens}\r\n                    frameCnt={storyPreviewProps.useFrame}\r\n                    closeAction={props.closeAction}\r\n                />;\r\n                dispatcher.updateStore();\r\n            }\r\n        }, [storyPreviewProps]);\r\n\r\n\r\n        const getJsx = () => {\r\n            if (storyPreviewProps == null) {\r\n                if (buildCache == null) return <></>;\r\n                const rate = buildCache.curFrame / buildCache.useFrame * 100;\r\n                const isStandby = buildCache.useFrame === 0;\r\n                return (\r\n                    <_Blind>\r\n                        <_ProgressBox><_ProgressVal rate={rate} /></_ProgressBox>\r\n                        <_RateVal isStandby={isStandby}>{isStandby ? 'Calculating...' : `${Math.floor(rate)}%`}</_RateVal>\r\n                    </_Blind>\r\n                );\r\n            }\r\n            return <></>;\r\n        }\r\n\r\n        return getJsx();\r\n    }\r\n}\r\n\r\nexport default BuildUtil;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #002910c0;\r\n    z-index: 10;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _ProgressBox = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relaltive;\r\n    width: calc(100% - 20px);\r\n    height: 40px;\r\n    margin: 200px 0 0 10px;\r\n    background-color: #ffffff29;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    background-color: #ffffffc1;\r\n`;\r\n\r\nconst _RateVal = styled.div<{\r\n    isStandby: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #0000003b;\r\n\r\n    color: #ffffff;\r\n    ${props => !props.isStandby ? '' : css`\r\n        color: #f50000;\r\n    `}\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ReactLoading from 'react-loading';\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport PreviewLogicInputForm from \"./inputForm/previewLogicInputForm\";\r\nimport PreviewSeedInputForm from \"./inputForm/previewSeedInputForm\";\r\nimport BuildUtil from \"./buildUtil\";\r\n\r\nnamespace PreviewLogicFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        master: LogicUtil.WrapElement;\r\n        rootData: LogicUtil.WrapElement;\r\n        closeButtonAction: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n\r\n        const [sceens, setSceens] = useState<string[]>([]);\r\n        const [frameCnt, setFrameCnt] = useState<number>(-1);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isBuild, setBuild] = useState<boolean>(false);\r\n        const [progress, setProgress] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const [sendingValueMap, setSendingValueMap] = useState<((() => PreviewUtil.ValueMap[]) | null)>(null);\r\n        const [sendingArrayMap, setSendingArrayMap] = useState<((() => PreviewUtil.ArrayMap[]) | null)>(null);\r\n\r\n        const isSeed = props.master.type === 'seed-item';\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n        useEffect(() => {\r\n            if (isBuild) build();\r\n        }, [isBuild]);\r\n\r\n        const build = () => {\r\n            if (sendingValueMap == null) return;\r\n            setCur(0);\r\n            const sceens: string[] = [];\r\n            BuildUtil.run({\r\n                limitFrame: 500,\r\n                limitParticle: 3000,\r\n                doIterate: (frame, owner) => {\r\n                    if (frame === 0) {\r\n                        const getOrigin = () => {\r\n                            if (!isSeed) return props.master.data as LogicUtil.NodeLogicItem;\r\n                            else {\r\n                                const seed = props.master.data as LogicUtil.NodeSeedItem;\r\n                                const root = props.rootData.data as LogicUtil.NodeRoot;\r\n                                const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                                return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                            }\r\n                        }\r\n                        owner.push(new Particle.Instance(\r\n                            PreviewUtil.buildLogicProps(owner, getOrigin(), props.rootData, sendingValueMap as any, sendingArrayMap as any)\r\n                        ));\r\n                    }\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n\r\n                        // 経過フレーム、要素数の表示\r\n                        ctx.globalAlpha = 1;\r\n                        ctx.font = '16pt Arial';\r\n                        ctx.fillStyle = '#ffffff';\r\n                        ctx.fillText(`${frame}`, 6, 24);\r\n                        ctx.fillStyle = '#ffec5c';\r\n                        ctx.fillText(`${owner.length}`, 6, 44);\r\n\r\n                        // ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    setFrameCnt(frame);\r\n                    setSceens(sceens);\r\n\r\n                    setBuild(false);\r\n                    setTabIndex(1);\r\n                }\r\n            });\r\n        }\r\n\r\n        const isInputOK = sendingValueMap != null;\r\n\r\n        const buildTabJsx = (\r\n            <_Wrap>\r\n                <_Blind isEnable={isBuild}>\r\n                    {/* <ReactLoading type='spinningBubbles' /> */}\r\n                    <_Msg>Now building...</_Msg>\r\n                </_Blind>\r\n                <_FormDiv\r\n                    isSeed={props.master.type === 'seed-item'}\r\n                >\r\n                    {!isSeed ? (\r\n                        <PreviewLogicInputForm\r\n                            logicWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                            setSendingArrayMap={setSendingArrayMap}\r\n                        />\r\n                    ) : (\r\n                        <PreviewSeedInputForm\r\n                            seedWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                            setSendingArrayMap={setSendingArrayMap}\r\n                        />\r\n                    )}\r\n                </_FormDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Build',\r\n                            isEnable: isInputOK && !isBuild,\r\n                            callback: () => {\r\n                                setBuild(true);\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    // 再生中は変更できない\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    if (tabIndex === 0) {\r\n                        if (isInputOK && e.key === ' ') build();\r\n                    } else {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                            } break;\r\n                            case 'ArrowRight': {\r\n                                if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                            } break;\r\n                            case ' ': {\r\n                                setPlay(!isPlay);\r\n                            } break;\r\n                        }\r\n                    }\r\n                    if (!isPlay && e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }\r\n                }\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Build', enable: true, cont: buildTabJsx },\r\n                            { name: 'Play', enable: frameCnt !== -1, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={props.closeButtonAction}\r\n                >×</_CloseButton>\r\n            </_Frame >\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLogicFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _FormDiv = styled.div<{\r\n    isSeed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 580px;\r\n    background-color: #c5cfd6df;\r\n    ${props => !props.isSeed ? '' : css`\r\n        background-color: #c6d6c5df;\r\n    `}\r\n    overflow-y: auto;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #c5c5c5df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;\r\n\r\n\r\nconst _Blind = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: ${props => !props.isEnable ? 'none;' : 'inline-block;'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000552cd;\r\n    z-index: 99;\r\n`;\r\n\r\nconst _Msg = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    margin: 240px 0 0 110px;\r\n    /* background-color: #26f055cd; */\r\n    color: white;\r\n    font-size: 56px;\r\n    font-weight: 600;\r\n\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\n\r\nnamespace PreviewLauncherFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        sceens: string[];\r\n        frameCnt: number;\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const sceens = props.sceens;\r\n        const frameCnt = props.frameCnt;\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    // 再生中は変更できない\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                        } break;\r\n                        case 'ArrowRight': {\r\n                            if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                        } break;\r\n                        case ' ': {\r\n                            setPlay(!isPlay);\r\n                        } break;\r\n                    }\r\n                    if (e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }}\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Play', enable: true, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                        if (props.closeAction != undefined) {\r\n                            props.closeAction();\r\n                        }\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLauncherFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #aec7d8df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport assert from \"assert\";\r\n\r\nnamespace NameDefDialog {\r\n\r\n    export const Component = (props: {\r\n        targetSeq: number,\r\n        type?: ProjectType,\r\n        source?: string,\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const width = 500;\r\n        const height = 150;\r\n\r\n        const isCreate = props.targetSeq === -1;\r\n        const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n        const getDefaultName = () => {\r\n            return props.targetSeq === -1 ? '' : (projects.find(p => p.seq === props.targetSeq) as StoreCloud.Project).name;\r\n        }\r\n\r\n        useEffect(() => {\r\n            name.value = getDefaultName();\r\n            setName({ ...name });\r\n        }, []);\r\n\r\n        const [existNames] = useMemo(() => {\r\n            return [\r\n                projects.map(item => item.name)\r\n            ];\r\n        }, []);\r\n\r\n        const registCreate = () => {\r\n            if(props.type == undefined || props.source == undefined) throw assert;\r\n            const result = findProjectMaxSeq();\r\n            result.then((maxSeq) => {\r\n                const newProject: StoreCloud.Project = {\r\n                    seq: Number(maxSeq + 1),\r\n                    name: name.value,\r\n                    type: props.type as ProjectType,\r\n                    source: props.source as string,\r\n                    lastmod: ''\r\n                };\r\n                projects.push(newProject);\r\n                insertProject(store.system.user?.seq as number, newProject).then(() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            });\r\n        }\r\n\r\n        const registUpdate = () => {\r\n            const targetItem = projects.find(item => item.seq === props.targetSeq);\r\n            if (targetItem != undefined) {\r\n                updateProjectName(props.targetSeq, name.value).then(() => {\r\n                    targetItem.name = name.value;\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            }\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: isCreate ? 'Create' : 'Update',\r\n                isEnable: name.errors.length === 0,\r\n                callback: () => {\r\n                    if (isCreate) registCreate();\r\n                    else registUpdate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, input new name!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => LogicUtil.checkFieldName(value),\r\n                                //     errorType: \"value\"\r\n                                // },\r\n                                {\r\n                                    checker: (value) => !existNames.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NameDefDialog;\r\n\r\nconst findProjectMaxSeq = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT max(seq) m FROM prjcttbl`);\r\n    const results = await response.json();\r\n    return results[0].m;\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, type, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.type}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import DataUtil from \"../utils/dataUtil\";\r\nimport PreviewLogicFrame from \"../contents/create/preview/previewLogicFrame\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport LogicElementUtil from \"../contents/create/factory/util/logicElementUtil\";\r\nimport styled, { css } from \"styled-components\";\r\nimport StoryUtil from \"../contents/create/launcher/util/storyUtil\";\r\nimport FormUtil from \"../utils/form/formUtiil\";\r\nimport CanvasUtil from \"../utils/canvasUtil\";\r\nimport PreviewLauncherFrame from \"../contents/create/preview/previewLauncherFrame\";\r\nimport BuildUtil from \"../contents/create/preview/buildUtil\";\r\nimport Particle from \"../contents/graphic/particle\";\r\nimport { VscSettingsGear } from \"react-icons/vsc\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    seedList: SeedProps[];\r\n}\r\ntype StoryProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    libraryData: LogicUtil.WrapElement;\r\n    scenarioData: StoryUtil.StoryData;\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\ntype StoryPreviewProps = {\r\n    sceens: string[];\r\n    useFrame: number;\r\n}\r\n\r\nexport type PagingField = {\r\n    useFrame: number;\r\n    curFrame: number;\r\n    sceens: string[];\r\n    owner: Particle.Instance[];\r\n}\r\n\r\nconst PROGRESS_VAL = 1;\r\n\r\nconst DirectLinkManager = (props: {\r\n    projectSeq: number;\r\n}) => {\r\n    const [libData, setLibData] = useState<LibProps | null>(null);\r\n    const [storyData, setStoryData] = useState<StoryProps | null>(null);\r\n    const [storyPreviewProps, setStoryPreviewProps] = useState<StoryPreviewProps | null>(null);\r\n    const [buildCache, setBuildCache] = useState<null | PagingField>(null);\r\n\r\n    const [seedSeq, setSeedSeq] = useState(-1);\r\n\r\n    useEffect(() => {\r\n\r\n        findProject(props.projectSeq).then(resList => {\r\n            if (resList.length > 0) {\r\n                const res = resList[0];\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const data = JSON.parse(DataUtil.unZip(res.source));\r\n                // シナリオであるかどうかの判定\r\n                if (!data.hasOwnProperty('scenarioData')) {\r\n                    const rootData = data as LogicUtil.WrapElement;\r\n                    const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                    const seedList: SeedProps[] = seedMng.defs\r\n                        .filter(wrap => {\r\n                            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                            return seed.permit === 'release';\r\n                        })\r\n                        .map(wrap => {\r\n                            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                            const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                            return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                        });\r\n                    setLibData({\r\n                        name, ownerId, lastmod, rootData, seedList\r\n                    });\r\n                } else {\r\n                    const scenarioProps = data as StoryUtil.ScenarioFileProps;\r\n                    setStoryData({\r\n                        name, ownerId, lastmod, libraryData: scenarioProps.libraryData, scenarioData: scenarioProps.scenarioData\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (buildCache == null || storyData == null) return;\r\n        if (buildCache.useFrame != 0 && buildCache.curFrame == buildCache.useFrame) {\r\n            setStoryPreviewProps({\r\n                sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n            });\r\n            return;\r\n        }\r\n\r\n        const fuseList = storyData.scenarioData.fuseList;\r\n        const limitFrame = storyData.scenarioData.limitFrame;\r\n        const limitParticle = storyData.scenarioData.limitParticle;\r\n        const minFrame = fuseList[0].frame;\r\n        const logicData = storyData.libraryData;\r\n        if (buildCache.useFrame === 0) {\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n                    fuseList.some(fuse => {\r\n                        if (fuse.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                        } else if (fuse.frame > frame) return 1;\r\n                    });\r\n                },\r\n                doEnd: (frame) => {\r\n                    buildCache.useFrame = frame;\r\n                }\r\n            });\r\n            setBuildCache({ ...buildCache });\r\n        } else {\r\n\r\n            BuildUtil.runPaging({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    fuseList.some(fuse => {\r\n                        if (fuse.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                        } else if (fuse.frame > frame) return 1;\r\n                    });\r\n\r\n                    buildCache.sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                // doEnd: () => {\r\n                //     setStoryPreviewProps({\r\n                //         sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                //     });\r\n                // }\r\n            }, buildCache.owner, buildCache.curFrame, PROGRESS_VAL);\r\n            buildCache.curFrame += PROGRESS_VAL;\r\n            if (buildCache.curFrame > buildCache.useFrame) {\r\n                buildCache.curFrame = buildCache.useFrame;\r\n            }\r\n            setBuildCache({ ...buildCache });\r\n        }\r\n    }, [buildCache]);\r\n\r\n    /**\r\n     * プレビューオールダイアログを表示する\r\n     */\r\n    const openPreviewAllDialog = () => {\r\n        setBuildCache({\r\n            useFrame: 0,\r\n            curFrame: 0,\r\n            owner: [],\r\n            sceens: []\r\n        });\r\n    }\r\n\r\n    const getJsx = () => {\r\n        let jsx = <></>;\r\n        if (libData != null) {\r\n            if (seedSeq === -1) {\r\n                jsx = <>\r\n                    <_Header>{libData.name}</_Header>\r\n                    {libData.seedList.map((seed, i) => {\r\n                        const seedName = seed.disp ?? seed.name;\r\n                        return (<_Item key={i}\r\n                            onClick={() => {\r\n                                setSeedSeq(i);\r\n                            }}\r\n                        >\r\n                            <_SeedName>{seedName}</_SeedName>\r\n                            <_ArgCnt> [{seed.argCount} arguments]</_ArgCnt>\r\n                        </_Item>);\r\n                    })}\r\n                </>;\r\n            } else {\r\n                jsx = <PreviewLogicFrame.Component\r\n                    master={libData.seedList[seedSeq].master}\r\n                    rootData={libData.rootData}\r\n                    closeButtonAction={() => {\r\n                        setSeedSeq(-1);\r\n                    }}\r\n                />\r\n            }\r\n        } else if (storyData != null) {\r\n            if (storyPreviewProps == null) {\r\n                const getBlindJsx = () => {\r\n                    if (buildCache == null) return <></>;\r\n                    const rate = buildCache.curFrame / buildCache.useFrame * 100;\r\n                    const isStandby = buildCache.useFrame === 0;\r\n                    return (\r\n                        <_Blind>\r\n                            <_ProgressBox><_ProgressVal rate={rate} /></_ProgressBox>\r\n                            <_RateVal isStandby={isStandby}>{isStandby ? 'Calculating...' : `${Math.floor(rate)}%`}</_RateVal>\r\n                        </_Blind>\r\n                    );\r\n                }\r\n                jsx = <>\r\n                    {getBlindJsx()}\r\n                    <_Header>{storyData.name}</_Header>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        isIconButton\r\n                        buttons={[\r\n                            {\r\n                                label: 'Build',\r\n                                icon: <VscSettingsGear />,\r\n                                width: 200,\r\n                                callback() {\r\n                                    openPreviewAllDialog();\r\n                                },\r\n                            }\r\n                        ]} />\r\n                </>;\r\n            } else {\r\n                jsx = <PreviewLauncherFrame.Component\r\n                    sceens={storyPreviewProps.sceens}\r\n                    frameCnt={storyPreviewProps.useFrame}\r\n                />\r\n            }\r\n        }\r\n        return jsx;\r\n    }\r\n\r\n    return getJsx();\r\n}\r\n\r\nexport default DirectLinkManager;\r\n\r\n\r\nconst findProject = async (conteseq: number) => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE seq = ${conteseq}\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #002910c0;\r\n    z-index: 10;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _ProgressBox = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relaltive;\r\n    width: calc(100% - 20px);\r\n    height: 40px;\r\n    margin: 200px 0 0 10px;\r\n    background-color: #ffffff29;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    background-color: #ffffffc1;\r\n`;\r\n\r\nconst _RateVal = styled.div<{\r\n    isStandby: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #0000003b;\r\n\r\n    color: #ffffff;\r\n    ${props => !props.isStandby ? '' : css`\r\n        color: #f50000;\r\n    `}\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background: linear-gradient(to bottom, #00215e, #000000, #00215e);\r\n\r\n    color: #e0e0e0;\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #abc9e6;\r\n`;\r\n\r\nconst _ArgCnt = styled.span<{\r\n}>`\r\n    color: #fbffbf;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport DirectLinkManager from \"./directLinkManager\";\r\nimport DataUtil from \"../utils/dataUtil\";\r\n\r\ntype ScreenBean = {\r\n    adjLeft: number;\r\n    adjTop: number;\r\n    rate: number;\r\n}\r\n\r\n// export const CONTENTS_WIDTH = 576;\r\n// export const CONTENTS_HEIGHT = 1024;\r\n\r\n\r\nexport const CONTENTS_WIDTH = 600;\r\nexport const CONTENTS_HEIGHT = 660;\r\n\r\nconst MobileRoot = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const [isPermit, setPermit] = useState(true);\r\n    const [screen, setScreen] = useState<ScreenBean>({ adjLeft: 0, adjTop: 0, rate: 1 });\r\n    const ref = useRef<null | HTMLDivElement>(null);\r\n\r\n    const projectSeq = DataUtil.getDecryptionedProjectSeq(props.hashKey);\r\n\r\n    const update = () => {\r\n        if (ref.current != null) {\r\n            // const [clientWidth, clientHeight] = [window.innerWidth, window.innerHeight];\r\n\r\n            const rect = ref.current.getBoundingClientRect();\r\n            const [clientWidth, clientHeight] = [rect.width, rect.height];\r\n\r\n            const cw = CONTENTS_WIDTH;\r\n            const ch = CONTENTS_HEIGHT;\r\n\r\n            const isFitSide = clientHeight / ch > clientWidth / cw;\r\n\r\n            const rate = !isFitSide ? clientHeight / ch : clientWidth / cw;\r\n            const adjLeft = !isFitSide ? clientWidth / 2 - (cw * rate / 2) : 0;\r\n            const adjTop = !isFitSide ? 0 : clientHeight / 2 - (ch * rate / 2);\r\n\r\n            setScreen({ adjLeft, adjTop, rate });\r\n        }\r\n    }\r\n\r\n    // window.addEventListener('DOMContentLoaded', () => {\r\n    //     if (!isSmartPhone()) {\r\n    //         window.addEventListener('resize', update);\r\n    //     } else {\r\n    //         window.addEventListener('orientationchange resize', () => {\r\n    //             update();\r\n    //             setPermit(window.orientation === 0);\r\n    //         });\r\n    //     }\r\n    // });\r\n\r\n    // window.onorientationchange = () => {\r\n    //   setOrientation(window.orientation);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        update();\r\n        console.log(navigator.userAgent);\r\n        if (isSmartPhone()) {\r\n            setPermit(window.orientation === 0);\r\n        }\r\n        if (!isSmartPhone()) {\r\n            window.addEventListener('resize', ()=>{\r\n                update();\r\n            });\r\n        } else {\r\n            window.addEventListener('orientationchange resize', () => {\r\n                alert('change');\r\n                update();\r\n                setPermit(window.orientation === 0);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    let jsx = <_Error>Make your smartphone vertical!</_Error>;\r\n    if (isPermit) {\r\n        jsx = (\r\n            <_Contents>\r\n                <DirectLinkManager projectSeq={projectSeq} />\r\n            </_Contents>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap ref={ref}>\r\n            <_Frame left={screen.adjLeft} top={screen.adjTop} rate={screen.rate}>\r\n                {jsx}\r\n            </_Frame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MobileRoot;\r\n\r\nconst isSmartPhone = () => {\r\n    // UserAgentからのスマホ判定\r\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 10px);\r\n  height: calc(100% - 10px);\r\n  background-color: #9eadc9;\r\n  margin: 5px 0 0 5px; */\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst _Frame = styled.div<{\r\n    left: number;\r\n    top: number;\r\n    rate: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: ${props => props.top}px;\r\n  left: ${props => props.left}px;\r\n  transform-origin: top left;\r\n  /* width: 100%;\r\n  height: 100%; */\r\n  transform: scale(${props => props.rate});\r\n`;\r\n\r\nconst _Contents = styled.div`\r\n  display: inline-block;\r\n  width: ${CONTENTS_WIDTH}px;\r\n  height: ${CONTENTS_HEIGHT}px;\r\n  background-color: #929292;\r\n`;\r\n\r\nconst _Error = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #750000;\r\n    color: white;\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const dialog = store.system.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            if (!store.system.canDialogClose) return;\r\n            store.system.dialog = null;\r\n            store.system.canDialogClose = false;\r\n            setStore({ ...store });\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport StoreSystem from \"../../redux/store/storeSystem\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../utils/form/validateUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst WIDTH = 750;\r\nconst HEIGHT = 600;\r\n/**\r\n * アカウントフレームのコンポーネント\r\n * @returns \r\n */\r\nconst AccountFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [oldPass, setOldPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPass, setNewPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPassConfirm, setNewPassConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n    const [emailList, setEmailList] = useState<string[]>([]);\r\n\r\n    const [isModify, setModify] = useState(false);\r\n    const loginProps = store.system.user as StoreSystem.User;\r\n\r\n    const reloadInfo = () => {\r\n        setUserId({ ...userId, value: loginProps.id });\r\n        setNewPass({ ...newPass, value: '' });\r\n        setNewPassConfirm({ ...newPassConfirm, value: '' });\r\n        setEmail({ ...email, value: loginProps.email });\r\n        setOldPass({ ...oldPass, value: loginProps.password });\r\n    }\r\n\r\n    useEffect(() => {\r\n        DataUtil.findUserInfoList().then(list => {\r\n\r\n            const userIdList: string[] = [];\r\n            const emailList: string[] = [];\r\n            list.forEach(info => {\r\n                if (info.id !== loginProps.id) userIdList.push(info.id);\r\n                if (info.email !== '') emailList.push(info.email);\r\n            });\r\n            setUserIdList(userIdList);\r\n            setEmailList(emailList);\r\n        });\r\n\r\n        const hash = DataUtil.getHashedFromUserSeq(loginProps.seq);\r\n\r\n        // ユーザページのURLに変更する。\r\n        window.history.replaceState('', '', `/#/user?v=${hash}`);\r\n\r\n        reloadInfo();\r\n\r\n        // 閉じる際にURLを元に戻す\r\n        return () => {\r\n            // alert('destroy');\r\n            window.history.replaceState('', '', `/#/`);\r\n        }\r\n    }, []);\r\n\r\n    const userTabJsx: JSX.Element = (\r\n        <_Wrap>\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'user id'}\r\n                checkable={userId}\r\n                setCheckable={setUserId}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !userIdList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass'}\r\n                isPassword\r\n                checkable={newPass}\r\n                setCheckable={setNewPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPassConfirm.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPassConfirm]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass*'}\r\n                isPassword\r\n                checkable={newPassConfirm}\r\n                setCheckable={setNewPassConfirm}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPass.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPass]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'email'}\r\n                checkable={email}\r\n                setCheckable={setEmail}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => {\r\n                            return value.length === 0 || value.split('@').length === 2;\r\n                        },\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !emailList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                // width={500}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'old pass'}\r\n                isPassword\r\n                checkable={oldPass}\r\n                setCheckable={setOldPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => value === loginProps.password,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                // dependency={[passwordConfirm]}\r\n                width={300}\r\n                marginTop={55}\r\n                isReadOnly={!isModify}\r\n            />\r\n        </_Wrap>\r\n    );\r\n\r\n    // 登録ボタンの活性状態\r\n    const permitRegist = (\r\n        userId.errors.length === 0\r\n        && newPass.errors.length === 0\r\n        && newPassConfirm.errors.length === 0\r\n        && email.errors.length === 0\r\n        && oldPass.errors.length === 0\r\n    );\r\n\r\n    const updateUserInfo = () => {\r\n        const passwordStr = newPass.value.length === 0 ? '' : `,password = '${newPass.value}'`;\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `UPDATE user_tbl SET id = '${userId.value}', email = '${email.value}'${passwordStr}\r\n            WHERE seq = ${loginProps?.seq}`\r\n        ).then(() => {\r\n            loginProps.id = userId.value;\r\n            if (newPass.value.length > 0) {\r\n                loginProps.password = newPass.value;\r\n            }\r\n            loginProps.email = email.value;\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Modify successful!\" />;\r\n            setStore({...store});\r\n        });\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <FormUtil.Message\r\n                    message=\"If you bookmark this page, you can easily login by URL.\"\r\n                />\r\n            </_Header>\r\n            <_Body>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'User', enable: true, cont: userTabJsx },\r\n                        { name: 'Security', enable: false, cont: <></> },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_Body>\r\n            <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        {\r\n                            label: 'Close',\r\n                            callback: () => {\r\n                                // dispatcher.system.closeDialog();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Cancel',\r\n                            isEnable: isModify,\r\n                            callback: () => {\r\n                                setModify(false);\r\n                                reloadInfo();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isModify ? 'Modify' : 'Regist',\r\n                            isEnable: !isModify || permitRegist,\r\n                            callback: () => {\r\n                                if (!isModify) {\r\n                                    setModify(true);\r\n                                    setOldPass({ ...oldPass, value: '' });\r\n                                }\r\n                                else {\r\n                                    updateUserInfo();\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\n\r\nexport default AccountFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7eb;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    /* text-align: center; */\r\n`;\r\nconst _Body = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 100px);\r\n    padding: 4px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport AccountFrame from \"../accountFrame\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginCreateAccount = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isRegist, setRegist] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [passwordConfirm, setPasswordConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n\r\n    const createAuthText = () => {\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n        const list = '0123456789';\r\n        let text = '';\r\n        for (let i = 0; i < 6; i++) {\r\n            text += list.charAt(Math.random() * list.length);\r\n        }\r\n        return text;\r\n    };\r\n\r\n    /** 既存のユーザIDリストを格納 */\r\n    useEffect(() => {\r\n        DataUtil.findUserIdList().then(list => {\r\n            setUserIdList(list);\r\n        });\r\n\r\n        // fetch('https://api.ipify.org/?format=json').then(res => {\r\n        //     res.json().then(data => {\r\n        //         alert(data['ip']);\r\n        //     });\r\n        // });\r\n    }, []);\r\n\r\n    const [authCollation, setAuthCollation] = useState<string>(createAuthText());\r\n    const [authInput, setAuthInput] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    /** キャッシュした認証画像 */\r\n    const authPicture = useMemo(() => {\r\n        return CanvasUtil.getAuthTextURL(authCollation);\r\n\r\n    }, [authCollation]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n                case 'relation': list.push('[password] does not match confirm.'); break;\r\n            }\r\n        }\r\n        if (passwordConfirm.errors.length > 0) {\r\n            switch (passwordConfirm.errors[0]) {\r\n                case 'length': list.push('[password *] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    const registAction = () => {\r\n\r\n        (async () => {\r\n            let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n            let results = await response.json();\r\n            console.log(JSON.stringify(results[0].cnt));\r\n            const isExist = results[0].cnt > 0;\r\n            if (isExist) {\r\n                setMessageList(['That user id has already been recorded.']);\r\n            } else {\r\n                const nextSeq = await DataUtil.getNextUserSeq();\r\n                console.log(nextSeq);\r\n                await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(seq, id, password) VALUES(${nextSeq}, '${userId.value}', '${password.value}')`);\r\n                store.system.user = {\r\n                    seq: nextSeq,\r\n                    id: userId.value,\r\n                    password: password.value,\r\n                    email: '',\r\n                };\r\n                store.cloud = {\r\n                    projects: []\r\n                };\r\n                store.system.dialog = (<ConfirmDialog.Component\r\n                    message='You have successfully created an account!'\r\n                    buttons={[\r\n                        {\r\n                            label: 'OK',\r\n                            callback: () => {\r\n                                store.system.dialog = (<AccountFrame />);\r\n                                setStore({...store});\r\n                            }\r\n                        }\r\n                    ]}\r\n                />);\r\n                setStore({...store});\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0 && passwordConfirm.errors.length === 0;\r\n    }\r\n    const isAuthOK = () => {\r\n        return authInput.errors.length === 0 && authCollation === authInput.value;\r\n    }\r\n\r\n    return (<>\r\n\r\n        <_Frame isVisible={!isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass (Confirm).'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            },\r\n                            {\r\n                                checker: (value) => !userIdList.includes(value),\r\n                                errorType: \"relation\"\r\n                            },\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === passwordConfirm.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[passwordConfirm]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password*'}\r\n                        isPassword\r\n                        checkable={passwordConfirm}\r\n                        setCheckable={setPasswordConfirm}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === password.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[password]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Enter', isEnable: isLoginInfoOK(), callback: () => {\r\n                                    setRegist(true);\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Proof not a robot\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, input the same 6 number as the picture.'}\r\n                    />\r\n                    <_AuthText src={authPicture} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Change', callback: () => {\r\n                                    setAuthCollation(createAuthText());\r\n                                    setAuthInput({ value: '', errors: [] });\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                    {/* 照合する文字列 */}\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'6 numbers'}\r\n                        checkable={authInput}\r\n                        setCheckable={setAuthInput}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Regist', isEnable: isAuthOK(), callback: registAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setRegist(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginCreateAccount;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n\r\nconst _AuthText = styled.img<{\r\n}>`\r\n    display: block;\r\n    text-align: center;\r\n    margin: 4px auto;\r\n    background-color: #f7f0f0;\r\n    border: 1px solid #888888;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\nimport SystemConst from \"../../../utils/systemConst\";\r\n\r\nconst LoginLogin = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isForget, setForget] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        // alert(`Confirmation passwords don't match.`);\r\n        (async () => {\r\n            const results = await DataUtil.findUserInfoLogin(userId.value, password.value);\r\n            if (results.length > 0) {\r\n                localStorage.setItem(SystemConst.SESSTION_KEY_LOGIN, results[0].seq.toString());\r\n                store.system.user = {\r\n                    seq: results[0].seq,\r\n                    id: results[0].id,\r\n                    password: results[0].password,\r\n                    email: results[0].email,\r\n                };\r\n                const resPrjList = await DataUtil.findUserProjectList(results[0].seq, store.system.isSPMode);\r\n                store.cloud = {\r\n                    projects: resPrjList.map(res => ({\r\n                        source: res.source,\r\n                        type: res.type,\r\n                        name: res.name,\r\n                        seq: res.seq,\r\n                        lastmod: res.lastmod\r\n                    }))\r\n                };\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                    message=\"Login successful!\"\r\n                />;\r\n                setStore({ ...store });\r\n            } else {\r\n                setMessageList(['Incorrect user id or password.']);\r\n                // setPassword({ ...password, value: '' });\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0;\r\n    }\r\n\r\n    return (<>\r\n        <_Frame isVisible={!isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Enter', isEnable: isLoginInfoOK(), callback: enterAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Forgot your login information?\"\r\n                clickAction={() => {\r\n                    setForget(true);\r\n                }}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Email\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Submit login information to account address.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'email'}\r\n                        checkable={email}\r\n                        setCheckable={setEmail}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => {\r\n                                    return value.length === 0 || value.split('@').length === 2;\r\n                                },\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={500}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Send', isEnable: email.errors.length === 0, callback: () => {\r\n                                    DataUtil.findUserInfoFromEmail(email.value).then((list) => {\r\n                                        if (list.length > 0) {\r\n                                            const info = list[0];\r\n                                            const hash = DataUtil.getHashedFromUserSeq(info.seq);\r\n                                            const url = `https://demo-app.licresia.com/#/user?v=${hash}`;\r\n                                            DataUtil.sendQueryRequestToMailAPI({\r\n                                                from: 'info@licresia.com',\r\n                                                to: email.value,\r\n                                                subject: '【LiCreSia】support',\r\n                                                text: `Your login information is as follows.\\n\\nURL: ${url}\\nUSR ID: ${info.id}`\r\n                                            });\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"Your login information has been sent!\" />);\r\n                                        } else {\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"This email address is not registered.\" />);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setForget(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginLogin;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LoginCreateAccount from \"./loginCreateAccount\";\r\nimport LoginLogin from \"./loginLogin\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 500;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_LogoDiv>\r\n                <img src={logo} />\r\n            </_LogoDiv>\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {!isCreate ? <LoginLogin /> : <LoginCreateAccount />}\r\n            {/* <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        { name: 'Close', callback: closeAction },\r\n                        { name: 'Enter', callback: enterAction },\r\n                    ]}\r\n                />\r\n            </_Footer> */}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #bf808075;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n    background-color: #bf8080a2;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #c7a73e;\r\n        `}\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled, { css } from \"styled-components\";\r\nimport SystemConst, { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport LoginFrame from \"../dialog/login/loginFrame\";\r\nimport AccountFrame from \"../dialog/accountFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const user = store.system.user;\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (user != null) {\r\n            setUserId('@' + user.id);\r\n        }\r\n    }, [user]);\r\n\r\n    const authButtonJsx = user == null ? (\r\n        <_LoginButton onClick={() => {\r\n            store.system.canDialogClose = true;\r\n            store.system.dialog = <LoginFrame />;\r\n            setStore({ ...store });\r\n            console.log(window.location.origin);\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Login / Sign up\r\n        </_LoginButton>\r\n    ) : (<>\r\n        <_UserName\r\n            isEntry={user != null}\r\n            onClick={() => {\r\n                store.system.dialog = <AccountFrame />;\r\n                setStore({ ...store });\r\n            }}\r\n        >{userId}</_UserName>\r\n        <_LoginButton onClick={() => {\r\n            store.system.user = null;\r\n            store.cloud = null;\r\n            localStorage.removeItem(SystemConst.SESSTION_KEY_LOGIN);\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message={'Logout.\\nSee you next time!'}\r\n            />;\r\n            store.system.logoutActions.forEach(func => func());\r\n            setStore({ ...store });\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Logout\r\n        </_LoginButton>\r\n    </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Logo src={logo} />\r\n            <_Menu>\r\n                {authButtonJsx}\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #a6bdc7, #7895b1, #a6bdc7);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    border: 1px solid #7e7e7e;\r\n    box-sizing: border-box;\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #9afff292;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #ff393983;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 180px;\r\n    height: 100%;\r\n    padding: 3px 0;\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n    /** 横向き */\r\n    isLandscape?: boolean;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const isLandscape = props.isLandscape ?? true;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList isLandscape={isLandscape}>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList isLandscape={isLandscape}>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    isLandscape: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isLandscape ? css`\r\n        width: 100px;\r\n        height: 100%;\r\n    ` : css`\r\n        width: 100%;\r\n        height: 100px;\r\n    `}\r\n    margin-right: 5px;\r\n    background-color: #c0d3db;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div<{\r\n    isLandscape: boolean;\r\n}>`\r\n    display: inline-block;\r\n    background-color: #c0d3db;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    ${props => props.isLandscape ? css`\r\n        width: calc(100% - 105px);\r\n        height: 100%;\r\n    ` : css`\r\n        height: calc(100% - 105px);\r\n        width: 100%;\r\n    `}\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    border: 1px solid #8d9aaa7b;\r\n    box-sizing: border-box;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #d5dddf;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #cacecf;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\n\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport Particle from \"../../../graphic/particle\";\r\nimport StoryUtil from \"../util/storyUtil\";\r\nimport BuildUtil from \"../../preview/buildUtil\";\r\n\r\nconst StoryFuseAnalysis = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [divide, setDivide] = useState<FormUtil.CheckableValue>({ value: '20', errors: [] });\r\n    const [peak, setPeak] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n    const [total, setTotal] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n\r\n    const [countList, setCountList] = useState<number[]>([]);\r\n\r\n    const scenarioData = store.storyData as StoryUtil.StoryData;\r\n    const limitFrame = scenarioData.limitFrame;\r\n    const limitParticle = scenarioData.limitParticle;\r\n    const defList = scenarioData.fuseList;\r\n\r\n    const logicData = store.libraryData as LogicUtil.WrapElement;\r\n\r\n    const execute = () => {\r\n        const minFrame = defList[0].frame;\r\n        const divRate = 1 / Number(divide.value);\r\n        const countList: number[] = [];\r\n        let peak = 0;\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            guaranteeFrame: minFrame,\r\n            doIterate: (frame, owner) => {\r\n                const def = defList.find(def => def.frame === frame);\r\n                if (def != undefined) {\r\n                    const seedWrap = LogicElementUtil.findSeedWrap(logicData, def.seedId);\r\n                    const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n                    const getOrigin = () => {\r\n                        const root = logicData.data as LogicUtil.NodeRoot;\r\n                        const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                        return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                    }\r\n                    const getSendingValueMap = () => {\r\n                        const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n                        const valueMap = seedargMng.args.map((wrap, i) => {\r\n                            const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                            return { name: seedarg.name, value: Number(def.values[i]) }\r\n                        });\r\n\r\n                        // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                        const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                        return sendParams.map(item => {\r\n                            const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                            if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                            return { name: item.name, value }\r\n                        });\r\n                    }\r\n\r\n                    owner.push(new Particle.Instance(\r\n                        PreviewUtil.buildLogicProps(owner, getOrigin(), logicData, getSendingValueMap(), [])\r\n                    ));\r\n                }\r\n\r\n                const pastRate = frame / limitFrame;\r\n                const needPoint = (countList.length + 1);\r\n                const curPoint = pastRate / divRate;\r\n                if (curPoint >= needPoint) {\r\n                    countList.push(owner.length);\r\n                }\r\n\r\n                if (owner.length > peak) peak = owner.length;\r\n            },\r\n            doEnd: (frame) => {\r\n                setTotal({ ...total, value: frame.toString() })\r\n            }\r\n        });\r\n        setPeak({ ...total, value: peak.toString() })\r\n        setCountList(countList);\r\n        // console.log(countList);\r\n    };\r\n\r\n    const itemJsxList = useMemo(() => {\r\n        const divRate = 1 / Number(divide.value);\r\n        const rateHeight = divRate / 1;\r\n        return countList.map((count, i) => {\r\n            const rate = count / limitParticle;\r\n            return (\r\n                <_AnalisisItem key={i}\r\n                    rate={rate * 100}\r\n                    height={rateHeight * 100}\r\n                />\r\n            );\r\n        });\r\n    }, [countList]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <FormUtil.BorderPanel\r\n                title=\"Property\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Divide\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isNumber\r\n                                checkable={divide}\r\n                                setCheckable={setDivide}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 5, 200),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Analysis',\r\n                                isEnable: divide.errors.length === 0 && defList.length > 0,\r\n                                callback: execute\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Result\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Peak\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={150}\r\n                                isNumber\r\n                                checkable={peak}\r\n                                isReadOnly\r\n                                setCheckable={setPeak}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"End frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={150}\r\n                                isNumber\r\n                                checkable={total}\r\n                                isReadOnly\r\n                                setCheckable={setTotal}\r\n                            />\r\n                        }\r\n                    />\r\n                    <_AnalisisDiv>\r\n                        {itemJsxList}\r\n                    </_AnalisisDiv>\r\n                </>}\r\n            />\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default StoryFuseAnalysis;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _AnalisisDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #000000d3;\r\n    width: calc(100% - 16px);\r\n    height: 500px;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _AnalisisItem = styled.div<{\r\n    rate: number;\r\n    height: number;\r\n}>`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #ededed77; */\r\n    background: linear-gradient(to bottom, #d1ceda, #b3aec2, #d1ceda);\r\n    width: ${props => props.rate}%;\r\n    height: calc(${props => props.height}% - 1px);\r\n    margin: 1px 0 0 0;\r\n    /* height: 20px; */\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport LogicFormUtil from \"../../factory/util/logicFormUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport StoryUtil from \"../util/storyUtil\";\r\nimport { FuseBean } from \"../storyTab\";\r\n\r\n\r\nconst StoryProperty = (props: {\r\n    newFrame: FormUtil.CheckableValue;\r\n    setNewFrame: (newFrame: FormUtil.CheckableValue) => void;\r\n    curFuse: StoryUtil.Fuse;\r\n    seedList: FuseBean[];\r\n    isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: (frame: number, seedId: string, values: string[]) => void;\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const [seed, setSeed] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const newFrame = props.newFrame;\r\n    const setNewFrame = props.setNewFrame;\r\n    const isInputOK = seed.errors.length === 0 && newFrame.errors.length === 0 && formList.find(form => form.errors.length > 0) == undefined;\r\n\r\n\r\n    const mapping = () => {\r\n        setNewFrame({ ...newFrame, value: props.curFuse.frame.toString() });\r\n        setSeed({ ...seed, value: props.curFuse.seedId.toString() });\r\n        setFormList(props.curFuse.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.curFuse == undefined) return;\r\n        if (props.curFuse.seedId === '') {\r\n            setNewFrame({ ...newFrame, value: '' });\r\n            setSeed({ ...seed, value: '' });\r\n            setFormList([]);\r\n        } else {\r\n            mapping();\r\n        }\r\n    }, [props.curFuse]);\r\n\r\n    const initFormList = (seedId: string) => {\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seedId;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n        }\r\n        setFormList(argumentList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }\r\n\r\n    const propertiesFormJsx = useMemo(() => {\r\n        if (seed.value === '') return <></>;\r\n\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        let presetList: LogicUtil.NodeSampleItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seed.value;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n            formgrpList = activeSeed.formgrps;\r\n            presetList = activeSeed.presets;\r\n        }\r\n        return (<>\r\n            <FormUtil.BorderPanel\r\n                title=\"Preset\"\r\n                innerJsx={<FormUtil.Record\r\n                    jsx={<>\r\n                        <FormUtil.Combobox\r\n                            width={250}\r\n                            checkable={template}\r\n                            setCheckable={setTemplate}\r\n                            headBlank\r\n                            list={presetList.map((sample, i) => {\r\n                                return {\r\n                                    labelText: sample.name,\r\n                                    value: i.toString()\r\n                                }\r\n                            })}\r\n                            isReadOnly={!props.isModify}\r\n                        />\r\n                        <FormUtil.ButtonItem\r\n                            button={{\r\n                                label: 'Apply',\r\n                                isEnable: template.value !== '',\r\n                                callback: () => {\r\n                                    const selectedIndex = Number(template.value);\r\n                                    const values = presetList[selectedIndex].values;\r\n                                    values.forEach((value, i) => {\r\n                                        formList[i].value = value.toString();\r\n                                    });\r\n                                    setFormList(formList.slice());\r\n                                }\r\n                            }}\r\n                        />\r\n                    </>}\r\n                />}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Properties\"\r\n                innerJsx={<>{\r\n                    LogicFormUtil.buildPreviewForms(\r\n                        !props.isModify, argumentList, formgrpList, formList, setFormList\r\n                    )\r\n                }</>}\r\n            />\r\n        </>);\r\n    }, [template, formList, props.isModify]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: props.isModify,\r\n                        callback: () => {\r\n                            props.cancelAction();\r\n                            setTemplate({ ...template, value: '' });\r\n                            mapping();\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !props.isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !props.isModify || isInputOK,\r\n                        callback: () => {\r\n                            props.modifyAction(\r\n                                Number(newFrame.value),\r\n                                seed.value,\r\n                                formList.map(form => form.value)\r\n                            );\r\n                            setTemplate({ ...template, value: '' });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Base\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isReadOnly={!props.isModify}\r\n                                isNumber\r\n                                checkable={newFrame}\r\n                                setCheckable={setNewFrame}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Seed\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                checkable={seed}\r\n                                setCheckable={(checkable) => {\r\n                                    initFormList(checkable.value);\r\n                                    setSeed({ ...checkable });\r\n                                }}\r\n                                list={props.seedList.map(seed => {\r\n                                    return { value: seed.name, labelText: seed.disp ?? seed.name }\r\n                                })}\r\n                                headBlank\r\n                                width={250}\r\n                                isReadOnly={!props.isModify}\r\n                                validates={\r\n                                    [\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n            {propertiesFormJsx}\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default StoryProperty;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #dbebd6;\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport StoryUtil from \"../util/storyUtil\";\r\n\r\n\r\nconst StoryEnvironment = (props: {\r\n    isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: () => void;\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [particle, setParticle] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const data = store.storyData as StoryUtil.StoryData;\r\n\r\n    const mapping = () => {\r\n        setFrame({ ...frame, value: data.limitFrame.toString() });\r\n        setParticle({ ...particle, value: data.limitParticle.toString() });\r\n    }\r\n    useEffect(() => {\r\n        mapping();\r\n    }, []);\r\n\r\n    const isInputOK = particle.errors.length === 0 && frame.errors.length === 0;\r\n\r\n    const maxLimit = data.fuseList.map(def => def.frame).reduce((prev, cur) => {\r\n        return prev > cur ? prev : cur;\r\n    }, 0);\r\n\r\n    return (<_Wrap>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Cancel',\r\n                    isEnable: props.isModify,\r\n                    callback: () => {\r\n                        mapping();\r\n                        props.cancelAction();\r\n                    }\r\n                },\r\n                {\r\n                    label: !props.isModify ? 'Modify' : 'Regist',\r\n                    isEnable: !props.isModify || isInputOK,\r\n                    callback: () => {\r\n                        data.limitFrame = Number(frame.value);\r\n                        data.limitParticle = Number(particle.value);\r\n                        setStore({ ...store });\r\n                        props.modifyAction();\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Limit\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!props.isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkNumberRange(value, maxLimit, 1000),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Particle\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!props.isModify}\r\n                            isNumber\r\n                            checkable={particle}\r\n                            setCheckable={setParticle}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkNumberRange(value, 100, 5000),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </_Wrap>)\r\n}\r\n\r\nexport default StoryEnvironment;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import { useContext, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { JsxEmit } from \"typescript\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport { FuseBean } from \"./storyTab\";\r\nimport StoryUtil from \"./util/storyUtil\";\r\n\r\nconst ITEM_WIDTH = 10;\r\nconst DIV_CNT = 5;\r\n\r\nconst TimelineFrame = (props: {\r\n    newFrameValue: number;\r\n    setNewFrameValue: (num: number) => void;\r\n    isModify: boolean;\r\n    focus: number;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const scenarioData = store.storyData as StoryUtil.StoryData;\r\n    const fuseList = scenarioData.fuseList;\r\n    const cacheList = store.fuseCacheList;\r\n    const limitFrame = scenarioData.limitFrame;\r\n\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const fusePosJsxList = useMemo(() => {\r\n        if(cacheList.length !== fuseList.length) return [];\r\n        const newFrameRate = props.newFrameValue / limitFrame;\r\n        return fuseList.map((fuse, i) => {\r\n            const rate = props.isModify && props.focus === i ? newFrameRate : fuse.frame / limitFrame;\r\n            const x = rate * 100;\r\n            const y = 5 + i * (ITEM_WIDTH + 3);\r\n            const cache = store.fuseCacheList.find(cache => cache.seq === fuse.seq) as StoryUtil.Cache;\r\n            const sus = cache.useFrame / limitFrame * 100;\r\n            return (<div key={i}>\r\n                {props.isModify && props.focus === i ? (\r\n                    <_Line x={x} />\r\n                ) : <></>}\r\n                <_Item\r\n                    x={x} y={y}\r\n                    isFocus={i === props.focus}\r\n                />\r\n                <_Sustain\r\n                    x={x}\r\n                    y={y}\r\n                    sus={sus}\r\n                />\r\n            </div>);\r\n        });\r\n    }, [limitFrame, props.focus, fuseList, props.isModify, props.newFrameValue, cacheList]);\r\n\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i < DIV_CNT + 1; i++) {\r\n            const rate = i / DIV_CNT;\r\n            const value = Math.floor(limitFrame * rate);\r\n            jsxList.push(\r\n                <_Memori\r\n                    key={i}\r\n                    x={rate * 100}\r\n                >{value}</_Memori>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [limitFrame]);\r\n\r\n    return (<>\r\n        <_MeasureDiv>\r\n            {memoriJsxList}\r\n        </_MeasureDiv>\r\n        <_Wrap\r\n            ref={ref}\r\n            isModify={props.isModify}\r\n            onClick={(e) => {\r\n                if (!props.isModify) return;\r\n                if (ref != null) {\r\n                    const dom = ref.current as HTMLDivElement;\r\n                    const rect = dom.getBoundingClientRect();\r\n                    const pos = e.clientX - rect.x;\r\n                    const rate = pos / rect.width;\r\n                    const newFrame = Math.floor(limitFrame * rate);\r\n                    props.setNewFrameValue(newFrame);\r\n                }\r\n            }}>\r\n            {fusePosJsxList}\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default TimelineFrame;\r\n\r\nconst MEASURE_WIDTH = 40;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #f2d9341a;\r\n    /* border-bottom: 3px solid #fff; */\r\n    box-sizing: border-box;\r\n    width: calc(100% - 36px);\r\n    height: ${MEASURE_WIDTH}px;\r\n    margin: 2px 0 0 18px;\r\n`;\r\nconst _Memori = styled.div<{\r\n    x: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* background-color: #ffffff31; */\r\n    width: 30px;\r\n    height: 20px;\r\n    left: calc(${props => props.x}% - 18px);\r\n    bottom: 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Wrap = styled.div<{\r\n    isModify: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b3d0b937;\r\n    /* border: 1px solid #ffffff4c; */\r\n    ${props => !props.isModify ? '' : css`\r\n        background-color: #ff000049;\r\n    `}\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 36px);\r\n    height: calc(100% - ${MEASURE_WIDTH + 8}px);\r\n    margin: 2px 0 0 18px;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #ffffff8d;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #ffb222;\r\n    `}\r\n    /* border: solid 1px #000000; */\r\n    border-radius: ${ITEM_WIDTH}px;\r\n    width: ${ITEM_WIDTH}px;\r\n    height: ${ITEM_WIDTH}px;\r\n    left: calc(${props => props.x}% - ${ITEM_WIDTH / 2}px);\r\n    top: ${props => props.y}px;\r\n`;\r\nconst _Sustain = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    sus: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #bfffb324;\r\n    /* border: solid 1px #000000; */\r\n    /* border-radius: ${ITEM_WIDTH}px; */\r\n    width: ${props => props.sus}%;\r\n    height: ${ITEM_WIDTH / 2}px;\r\n    left: calc(${props => props.x}%);\r\n    top: calc(${props => props.y}px + ${ITEM_WIDTH / 4}px);\r\n`;\r\nconst _Line = styled.div<{\r\n    x: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #ff0000f0;\r\n    left: ${props => props.x}%;\r\n    top: 0;\r\n    width: 1px;\r\n    height: 100%;\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryFuseAnalysis from \"./tab/storyFuseAnalysis\";\r\nimport StoryProperty from \"./tab/storyProperty\";\r\nimport StoryEnvironment from \"./tab/storyEnvironment\";\r\nimport TimelineFrame from \"./timelineFrame\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport PreviewUtil from \"../preview/previewUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport PreviewLauncherFrame from \"../preview/previewLauncherFrame\";\r\nimport StoryUtil from \"./util/storyUtil\";\r\nimport BuildUtil from \"../preview/buildUtil\";\r\n\r\nexport type FuseBean = {\r\n    name: string;\r\n    disp?: string;\r\n    args: LogicUtil.NodeSeedArgItem[];\r\n    formgrps: LogicUtil.NodeFromGrpItem[];\r\n    presets: LogicUtil.NodeSampleItem[];\r\n};\r\n\r\nconst StoryTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const [newFrame, setNewFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [defList, setDefList] = useState<LaunchDef[]>([]);\r\n    const [isFuseEdit, setFuseEdit] = useState<boolean>(false);\r\n    const [isEnvEdit, setEnvEdit] = useState<boolean>(false);\r\n    const [tabActiveIndex, setTabActiveIndex] = useState<number>(0);\r\n    const [focus, setFocus] = useState<number>(-1);\r\n\r\n    const fuseList = storyData.fuseList;\r\n\r\n    const setFuseList = (fuseList: StoryUtil.Fuse[]) => {\r\n        storyData.fuseList = fuseList;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const seedList: FuseBean[] = useMemo(() => {\r\n        if (store.libraryData == null) return [];\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        const seedWrapList = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        return seedWrapList.map(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n\r\n            // 引数リストを取得\r\n            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const args = argMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n\r\n            // フォームグループリストを取得\r\n            const groupMng = LogicElementUtil.getInnerWrap(wrap, 'interface-mng', 'formgrp-mng');\r\n            let formgrps: LogicUtil.NodeFromGrpItem[] = [];\r\n            if (groupMng != null) {\r\n                formgrps = (groupMng.data as LogicUtil.NodeFromgrpManager).defines.map(wrap => wrap.data as LogicUtil.NodeFromGrpItem);\r\n            }\r\n\r\n            // プリセットリストを取得\r\n            const sampleMng = LogicElementUtil.getInnerWrap(wrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n            const presets = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n            return {\r\n                name: seed.name,\r\n                disp: seed.disp,\r\n                args, formgrps, presets\r\n            }\r\n        });\r\n    }, [store.libraryData]);\r\n\r\n    useEffect(() => {\r\n        if (storyData.fuseList.length > 0) {\r\n            const scenarioCacheList: StoryUtil.Cache[] = [];\r\n            storyData.fuseList.forEach((fuse) => {\r\n                const newCache: StoryUtil.Cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n                updateCache(fuse, newCache);\r\n                scenarioCacheList.push(newCache);\r\n            });\r\n            store.fuseCacheList = scenarioCacheList;\r\n            setStore({ ...store });\r\n        }\r\n    }, [storyData]);\r\n\r\n    const createSeq = () => {\r\n        return fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    const add = () => {\r\n        const seq = createSeq();\r\n        fuseList.push({ seq, frame: 0, seedId: '', values: [] });\r\n        setFuseList(fuseList.slice());\r\n        setFocus(fuseList.length - 1);\r\n        store.fuseCacheList.push({ seq, thumbList: [], useFrame: 0 });\r\n        setTabActiveIndex(2);\r\n        setFuseEdit(true);\r\n    }\r\n\r\n    const fuseJsxList = useMemo(() => {\r\n        return fuseList.map((fuse, i) => {\r\n\r\n            const cache = store.fuseCacheList.find(cache => cache.seq === fuse.seq);\r\n\r\n            let thumbJsx: JSX.Element[] = [];\r\n            if (cache != undefined) {\r\n                thumbJsx = cache.thumbList.slice(0, 3).map((thumb, j) => {\r\n                    const imgJsx = thumb == undefined ? <></> : <_IMG src={thumb.url} />;\r\n                    return (\r\n                        <_SampleDiv key={j}>-\r\n                            <_SampleName>{thumb.name}</_SampleName>\r\n                            <_CanvasDiv>\r\n                                {imgJsx}\r\n                            </_CanvasDiv>\r\n                        </_SampleDiv>\r\n                    );\r\n                });\r\n            };\r\n            return (\r\n                <_ItemDiv key={i}\r\n                    isEnable={!isFuseEdit || focus === i}\r\n                >\r\n                    <_ItemFrame isFocus={i === focus}\r\n                        onClick={() => {\r\n                            setFocus(i);\r\n                        }}\r\n                    >\r\n                        {fuse.seedId === '' ? (\r\n                            <_PropRecord>Creating...</_PropRecord>\r\n                        ) : (<>\r\n                            <_FrameRecord>{fuse.frame}</_FrameRecord>\r\n                            {/* <_SeedRecord>{def.seedName}: {def.seq}</_SeedRecord> */}\r\n                            <_SeedRecord>{fuse.seedId}</_SeedRecord>\r\n                            <_ThumbFrame>\r\n                                {thumbJsx}\r\n                            </_ThumbFrame>\r\n                            {fuse.values.map((val, j) => {\r\n                                const seedBean = seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n                                const name = seedBean.args[j].name;\r\n                                return (\r\n                                    <_PropRecord key={j}><_Title>{name}: </_Title>{val}</_PropRecord>\r\n                                );\r\n                            })}\r\n                        </>)}\r\n                    </_ItemFrame>\r\n                </_ItemDiv>\r\n            );\r\n        });\r\n    }, [fuseList, focus, isFuseEdit, store.fuseCacheList]);\r\n\r\n    /**\r\n     * プレビューオールダイアログを表示する\r\n     */\r\n    const openPreviewAllDialog = () => {\r\n        const minFrame = fuseList[0].frame;\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        const sceens: string[] = [];\r\n        let useFrame: number = 0;\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            guaranteeFrame: minFrame,\r\n            doIterate: (frame, owner) => {\r\n\r\n                fuseList.some(def => {\r\n                    if (def.frame === frame) {\r\n                        LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                    } else if (def.frame > frame) return 1;\r\n                });\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                }));\r\n            },\r\n            doEnd: (frame) => {\r\n                useFrame = frame;\r\n            }\r\n        });\r\n        store.system.dialog = (\r\n            <PreviewLauncherFrame.Component\r\n                sceens={sceens}\r\n                frameCnt={useFrame}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * プレビューソロダイアログを表示する\r\n     */\r\n    const openPreviewSoloDialog = () => {\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        const sceens: string[] = [];\r\n        let useFrame: number = 0;\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            doIterate: (frame, owner) => {\r\n\r\n                const def = fuseList[focus];\r\n                if (frame === 0) {\r\n                    LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                }\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                }));\r\n            },\r\n            doEnd: (frame) => {\r\n                useFrame = frame;\r\n            }\r\n        });\r\n        store.system.dialog = (\r\n            <PreviewLauncherFrame.Component\r\n                sceens={sceens}\r\n                frameCnt={useFrame}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const updateCache = (fuse: StoryUtil.Fuse, cache: StoryUtil.Cache) => {\r\n\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        cache.thumbList = [];\r\n        cache.useFrame = 0;\r\n        const seedProps = LogicElementUtil.getSeedProperties(logicData, fuse.seedId);\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            doIterate: (frame, owner) => {\r\n                if (frame === 0) {\r\n                    LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                }\r\n\r\n                const thumb = seedProps.thumbnailList.find(thumb => thumb.frame === frame);\r\n                if (thumb != undefined) {\r\n                    const url = CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    });\r\n                    cache.thumbList.push({ name: thumb.name, url });\r\n                }\r\n            },\r\n            doEnd: (frame) => {\r\n                cache.useFrame = frame;\r\n            }\r\n        });\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const isCreate = fuseList.length === 0 ? false : fuseList[fuseList.length - 1].seedId === '';\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n        >\r\n            <_ListDiv>\r\n                <_ListHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview All',\r\n                                isEnable: !isFuseEdit,\r\n                                callback: openPreviewAllDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_ListHead>\r\n                <_ListHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Add',\r\n                                isEnable: !isFuseEdit,\r\n                                callback: add\r\n                            },\r\n                            {\r\n                                label: 'Delete',\r\n                                isEnable: !isFuseEdit && focus != -1,\r\n                                callback: () => {\r\n                                    fuseList.splice(focus, 1);\r\n                                    setFuseList(fuseList.slice());\r\n                                    if (focus > 0) {\r\n                                        setFocus(focus - 1);\r\n                                    } else if (focus === 0 && fuseList.length === 0) {\r\n                                        setFocus(-1);\r\n                                        setTabActiveIndex(0);\r\n                                    }\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Replicate',\r\n                                isEnable: !isFuseEdit && focus != -1,\r\n                                callback: () => {\r\n                                    const cloneFuse = JSON.parse(JSON.stringify(fuseList[focus])) as StoryUtil.Fuse;\r\n                                    const newSeq = createSeq();\r\n                                    cloneFuse.seq = newSeq;\r\n                                    fuseList.splice(focus, 0, cloneFuse);\r\n                                    setFuseList(fuseList.slice());\r\n                                    setFocus(focus + 1);\r\n\r\n                                    // const baseCache = store.launchCacheList.find(cache => cache.seq === defList[focus].seq) as Cache;\r\n                                    // console.log(baseCache);\r\n                                    // const cloneCache = JSON.parse(JSON.stringify(baseCache)) as Cache;\r\n                                    // cloneCache.seq = newSeq;\r\n                                    const newCache: StoryUtil.Cache = { seq: newSeq, thumbList: [], useFrame: 0 };\r\n                                    updateCache(cloneFuse, newCache);\r\n                                    store.fuseCacheList.push(newCache);\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Preview Solo',\r\n                                isEnable: !isFuseEdit && focus != -1,\r\n                                callback: openPreviewSoloDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_ListHead>\r\n                <_ListBody>\r\n                    <_Timeline><TimelineFrame\r\n                        newFrameValue={Number(newFrame.value)}\r\n                        setNewFrameValue={(num: number) => {\r\n                            setNewFrame({ ...newFrame, value: num.toString() })\r\n                        }}\r\n                        isModify={isFuseEdit}\r\n                        focus={focus}\r\n                        seedList={seedList}\r\n                    /></_Timeline>\r\n                    <_ListMain>\r\n                        {fuseJsxList}\r\n                    </_ListMain>\r\n                </_ListBody>\r\n            </_ListDiv>\r\n            <_RightDiv>\r\n                <_RightInner>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            {\r\n                                name: 'Environment', enable: !isFuseEdit, cont: <StoryEnvironment\r\n                                    isModify={isEnvEdit}\r\n                                    cancelAction={() => {\r\n                                        setEnvEdit(false);\r\n                                    }}\r\n                                    modifyAction={() => {\r\n                                        if (!isEnvEdit) {\r\n                                            setEnvEdit(true);\r\n                                        } else {\r\n                                            setEnvEdit(false);\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            },\r\n                            { name: 'Analysis', enable: !isFuseEdit && !isEnvEdit, cont: <StoryFuseAnalysis /> },\r\n                            {\r\n                                name: 'Property', enable: !isEnvEdit && focus != -1, cont: <StoryProperty\r\n                                    newFrame={newFrame}\r\n                                    setNewFrame={setNewFrame}\r\n                                    curFuse={fuseList[focus]}\r\n                                    seedList={seedList}\r\n                                    isModify={isFuseEdit}\r\n                                    cancelAction={() => {\r\n                                        setFuseEdit(false);\r\n                                        if (isCreate) {\r\n                                            fuseList.splice(fuseList.length - 1, 1);\r\n                                            setFuseList(fuseList.slice());\r\n                                            setFocus(focus - 1);\r\n                                            if (fuseList.length === 0) {\r\n                                                setTabActiveIndex(0);\r\n                                            }\r\n                                        }\r\n                                    }}\r\n                                    modifyAction={(frame: number, seedId: string, values: string[]) => {\r\n                                        if (!isFuseEdit) {\r\n                                            setFuseEdit(true);\r\n                                        } else {\r\n                                            const fuse = fuseList[focus];\r\n                                            fuse.frame = frame;\r\n                                            fuse.seedId = seedId;\r\n                                            fuse.values = values;\r\n                                            const seq = fuse.seq;\r\n                                            const cache = store.fuseCacheList.find(cache => cache.seq === seq) as StoryUtil.Cache;\r\n                                            updateCache(fuse, cache);\r\n                                            fuseList.sort((a, b) => {\r\n                                                return a.frame - b.frame;\r\n                                            });\r\n                                            setFuseList(fuseList.slice());\r\n                                            setFocus(fuseList.findIndex(def => def.seq === seq));\r\n                                            setFuseEdit(false);\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            }\r\n                        ]}\r\n                        selectTabIndex={setTabActiveIndex}\r\n                        activeNo={tabActiveIndex}\r\n                    />\r\n                </_RightInner>\r\n            </_RightDiv>\r\n            {/* <_Blind isVisible={isBackingWnd}>\r\n                    <_Contents>{!isBackingWnd ? <></> : <BackingEditorFrame />}</_Contents>\r\n                </_Blind> */}\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default StoryTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #1e1c22;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _ListDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #653fd6; */\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst LIST_HEAD = 40;\r\nconst TIMELINE_WIDTH = 240;\r\n\r\nconst _ListHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d8;\r\n    width: 100%;\r\n    height: ${LIST_HEAD}px;\r\n`;\r\n\r\nconst _ListBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: calc(100% - ${LIST_HEAD * 2}px);\r\n`;\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #00071b;\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: ${TIMELINE_WIDTH}px;\r\n`;\r\nconst _ListMain = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #c551b6; */\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: calc(100% - ${TIMELINE_WIDTH}px);\r\n    overflow-x: auto;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _RightDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c1c0c4;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\nconst _RightInner = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n`;\r\n\r\nconst _TabContWrap = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 630px;\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    /* opacity: 0.9; */\r\n    overflow: hidden;\r\n`;\r\n\r\n\r\nconst _ItemDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    background: linear-gradient(to right, #3a383d, #8d8999, #3a383d);\r\n    vertical-align: top;\r\n    width: 220px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n    background: linear-gradient(to right, #66626b, #b7b2c7, #66626b);\r\n    }\r\n`;\r\n\r\nconst _ItemFrame = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #8997bd29;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #d7eb7d83;\r\n    `}\r\n    border: 1px solid #2c3577;\r\n    border-radius: 2px;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _PropRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    /* margin-top: 1px; */\r\n    height: 24px;\r\n    /* background: linear-gradient(to bottom, #aaaaaa89, #e1e1e18a, #aaaaaa89); */\r\n    /* font-size: 20px; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #555555;\r\n    font-style: italic;\r\n    line-height: 22px;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Title = styled.span`\r\n    color: #f00;\r\n`;\r\n\r\n\r\nconst _FrameRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    height: 35px;\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    color: #132693;\r\n    font-style: italic;\r\n    line-height: 34px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\nconst _SeedRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    height: 35px;\r\n    font-size: 26px;\r\n    font-style: italic;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    line-height: 34px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ThumbFrame = styled.div<{}>`\r\n    display: inline-block;\r\n    /* background-color: #4b09ff; */\r\n    width: 100%;\r\n`;\r\nconst WND_SIZE = 65;\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport { ProjectType, ProjectTypes } from \"../../../redux/store/store\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\n\r\nnamespace NewProjectDialog {\r\n\r\n    type CloudLibInfo = {\r\n        seq: number;\r\n        name: string;\r\n        ownerId: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    type LocalLibInfo = {\r\n        fileName: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const Component = (props: {\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [type, setType] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const [selectedLib, setSelectedLib] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [localLib, setLocalLib] = useState<null | LocalLibInfo>(null);\r\n\r\n        const [cloudLibs, setCloudLibs] = useState<null | CloudLibInfo[]>(null);\r\n\r\n        const width = 500;\r\n        const height = 340;\r\n\r\n        // useEffect(() => {\r\n        //     setType({ ...type });\r\n        // }, []);\r\n\r\n        const getStoryLib = () => {\r\n            let storyLib: LogicUtil.WrapElement | null = null;\r\n            if (cloudLibs != null) {\r\n                const lib = cloudLibs.find(lib => lib.seq === Number(selectedLib.value));\r\n                if (lib != undefined) {\r\n                    storyLib = lib.rootData;\r\n                }\r\n            } else if (localLib != null) {\r\n                storyLib = localLib.rootData;\r\n            }\r\n            return storyLib;\r\n        }\r\n\r\n        const usingHash = useMemo(() => {\r\n            let hash = '-';\r\n            const lib = getStoryLib();\r\n            if (lib != null) {\r\n                hash = DataUtil.getSHA256Hash(JSON.stringify(lib));\r\n            }\r\n            return hash;\r\n        }, [selectedLib, localLib]);\r\n\r\n        const isCreateEnabled = () => {\r\n            if (type.value === '') return false;\r\n            if ((type.value as ProjectType) === 'story') {\r\n                return usingHash !== '-';\r\n            }\r\n            return true;\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Create',\r\n                isEnable: isCreateEnabled(),\r\n                callback: () => {\r\n                    const projectType = type.value as ProjectType;\r\n                    if (projectType as ProjectType === 'library') {\r\n                        store.libraryData = LogicElementUtil.getInitialData();\r\n                    } else {\r\n                        store.libraryData = getStoryLib();\r\n                        store.storyData = {\r\n                            limitFrame: 300,\r\n                            limitParticle: 3000,\r\n                            fuseList: []\r\n                        };\r\n                    }\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, select project type!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={type}\r\n                            width={178}\r\n                            setCheckable={(checkable => {\r\n                                setType(checkable);\r\n                                if (checkable.value as ProjectType !== 'story') {\r\n                                    setCloudLibs(null);\r\n                                    setLocalLib(null);\r\n                                    setSelectedLib({ value: '', errors: [] });\r\n                                }\r\n                            })}\r\n                            list={ProjectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.BorderPanel\r\n                    title=\"Story\"\r\n                    isEnable={type.value as ProjectType === 'story'}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Source\"\r\n                            jsx={<>\r\n                                <FormUtil.ButtonItem\r\n                                    button={{\r\n                                        label: 'Cloud',\r\n                                        width: 120,\r\n                                        callback: () => {\r\n                                            findAllReleaseProjectList().then(resList => {\r\n                                                setCloudLibs(resList.map(res => {\r\n                                                    return {\r\n                                                        name: res.name,\r\n                                                        ownerId: res.owner,\r\n                                                        seq: res.seq,\r\n                                                        rootData: JSON.parse(DataUtil.unZip(res.source))\r\n                                                    }\r\n                                                }));\r\n                                                setLocalLib(null);\r\n                                            });\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                <FormUtil.ButtonItem\r\n                                    button={{\r\n                                        label: 'Local',\r\n                                        width: 120,\r\n                                        callback: () => {\r\n                                            (async () => {\r\n                                                const [fileHandle] = await window.showOpenFilePicker();\r\n                                                const file = await fileHandle.getFile();\r\n                                                const fileContents = await file.text();\r\n                                                const text = DataUtil.unZip(fileContents);\r\n                                                setLocalLib({\r\n                                                    fileName: file.name,\r\n                                                    rootData: JSON.parse(text)\r\n                                                });\r\n                                                setCloudLibs(null);\r\n                                                setSelectedLib({ value: '', errors: [] });\r\n                                            })();\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </>}\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Cloud\"\r\n                            isEnabled={cloudLibs != null}\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    marginLeft={2}\r\n                                    checkable={selectedLib}\r\n                                    width={278}\r\n                                    setCheckable={setSelectedLib}\r\n                                    list={(cloudLibs ?? []).map((item) => {\r\n                                        // const disp = `${item.ownerId}: ${item.name}`;\r\n                                        return { value: item.seq.toString(), labelText: item.name };\r\n                                    })}\r\n                                    headBlank\r\n                                    validates={[\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Local\"\r\n                            isEnabled={localLib != null}\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={localLib == null ? '' : localLib.fileName}\r\n                                    isRecordItem\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Hash\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={usingHash}\r\n                                    isRecordItem\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewProjectDialog;\r\n\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport { ProjectType, ProjectTypes } from \"../../../redux/store/store\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { AiOutlineEnter } from \"react-icons/ai\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\n\r\nnamespace NewProjectDialogStoryOnly {\r\n\r\n    type CloudLibInfo = {\r\n        seq: number;\r\n        name: string;\r\n        ownerId: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const Component = (props: {\r\n        extendAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [selectedType, setSelectedType] = useState<FormUtil.CheckableValue>({ value: 'official', errors: [] });\r\n        const [selectedLib, setSelectedLib] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [cloudLibs, setCloudLibs] = useState<null | CloudLibInfo[]>(null);\r\n\r\n        const width = 500;\r\n        const height = 210;\r\n\r\n        useEffect(() => {\r\n            findAllReleaseProjectList().then(resList => {\r\n                setCloudLibs(resList.map(res => {\r\n                    return {\r\n                        name: res.name,\r\n                        ownerId: res.owner,\r\n                        seq: res.seq,\r\n                        rootData: JSON.parse(DataUtil.unZip(res.source))\r\n                    }\r\n                }));\r\n            });\r\n        }, []);\r\n\r\n        const getStoryLib = () => {\r\n            let storyLib: LogicUtil.WrapElement | null = null;\r\n            if (cloudLibs != null) {\r\n                const lib = cloudLibs.find(lib => lib.seq === Number(selectedLib.value));\r\n                if (lib != undefined) {\r\n                    storyLib = lib.rootData;\r\n                }\r\n            }\r\n            return storyLib;\r\n        }\r\n\r\n        const usingHash = useMemo(() => {\r\n            let hash = '-';\r\n            const lib = getStoryLib();\r\n            if (lib != null) {\r\n                hash = DataUtil.getSHA256Hash(JSON.stringify(lib));\r\n            }\r\n            return hash;\r\n        }, [selectedLib]);\r\n\r\n        const isCreateEnabled = () => {\r\n            return usingHash !== '-';\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                icon: <MdCancelPresentation />,\r\n                width: 120,\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Create',\r\n                icon: <AiOutlineEnter />,\r\n                width: 120,\r\n                isEnable: isCreateEnabled(),\r\n                callback: () => {\r\n                    store.libraryData = getStoryLib();\r\n                    store.storyData = {\r\n                        limitFrame: 300,\r\n                        limitParticle: 3000,\r\n                        fuseList: []\r\n                    };\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    if (props.extendAction != undefined) props.extendAction();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, select library!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    isEnabled={true}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={selectedType}\r\n                            width={278}\r\n                            setCheckable={setSelectedType}\r\n                            list={['official','original'].map((item) => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Library\"\r\n                    isEnabled={cloudLibs != null}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={selectedLib}\r\n                            width={278}\r\n                            setCheckable={setSelectedLib}\r\n                            list={(cloudLibs ?? []).map((item) => {\r\n                                // const disp = `${item.ownerId}: ${item.name}`;\r\n                                return { value: item.seq.toString(), labelText: item.name };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.FormRecord\r\n                    titleLabel=\"Hash\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            value={usingHash}\r\n                            isRecordItem\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewProjectDialogStoryOnly;\r\n\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\n\r\nimport { AiOutlineInstagram, AiOutlineTwitter, AiOutlineMail, AiOutlineFacebook } from \"react-icons/ai\";\r\nimport { BsLine } from \"react-icons/bs\";\r\n\r\nimport {\r\n    EmailShareButton,\r\n    FacebookShareButton,\r\n    HatenaShareButton,\r\n    InstapaperShareButton,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    LivejournalShareButton,\r\n    MailruShareButton,\r\n    OKShareButton,\r\n    PinterestShareButton,\r\n    PocketShareButton,\r\n    RedditShareButton,\r\n    TelegramShareButton,\r\n    TumblrShareButton,\r\n    TwitterShareButton,\r\n    ViberShareButton,\r\n    VKShareButton,\r\n    WhatsappShareButton,\r\n    WorkplaceShareButton\r\n} from \"react-share\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\n\r\n\r\nnamespace ShareDialog {\r\n\r\n    export const Component = (props: {\r\n        hash: string;\r\n    }) => {\r\n        const width = 500;\r\n        const height = 326;\r\n\r\n        const getInitialText = () => {\r\n            let str = '';\r\n            str += 'I created digital art with the Pixel Flare!\\n\\n';\r\n            return str;\r\n        }\r\n\r\n        const getURL = () => `${DataUtil.APP_SERVER_DOMAIN}/#/story?v=${props.hash}`;\r\n\r\n        const [text, setText] = useState<FormUtil.CheckableValue>({ value: getInitialText(), errors: [] });\r\n\r\n        const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Share your digital art!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <_TextAreaDiv><FormUtil.TextArea\r\n                    checkable={text}\r\n                    setCheckable={setText}\r\n                /></_TextAreaDiv>\r\n                <_UrlDiv value={getURL()} readOnly/>\r\n                <_Record>\r\n                    <InstapaperShareButton\r\n                        url={getURL()}\r\n                        title={text.value}\r\n                        children={<_SnsIconFrame><AiOutlineInstagram /></_SnsIconFrame>}\r\n                    />\r\n                    <TwitterShareButton\r\n                        url={getURL()}\r\n                        title={text.value}\r\n                        children={<_SnsIconFrame><AiOutlineTwitter /></_SnsIconFrame>}\r\n                    />\r\n                    <MailruShareButton\r\n                        url={getURL()}\r\n                        title={text.value}\r\n                        children={<_SnsIconFrame><AiOutlineMail /></_SnsIconFrame>}\r\n                    />\r\n                    <FacebookShareButton\r\n                        url={getURL()}\r\n                        title={text.value}\r\n                        children={<_SnsIconFrame><AiOutlineFacebook /></_SnsIconFrame>}\r\n                    />\r\n                    <LineShareButton\r\n                        url={getURL()}\r\n                        title={text.value}\r\n                        about=\"aabb\"\r\n                        children={<_SnsIconFrame><BsLine /></_SnsIconFrame>}\r\n                    />\r\n                </_Record>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShareDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    margin: 8px 0 0 0;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextAreaDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 4px;\r\n    width: calc(100% - 8px);\r\n    height: 120px;\r\n    margin: 10px 0 0 4px;\r\n    border: 2px solid #3d3d3d;\r\n    box-sizing: border-box;\r\n`;\r\nconst _UrlDiv = styled.textarea<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 4px;\r\n    width: calc(100% - 8px);\r\n    height: 60px;\r\n    margin: 4px 0 0 4px;\r\n    border: 1px solid #3d3d3d;\r\n   background-color: #ebf5f557;\r\n   /* background-color: transparent; */\r\n   outline: none;\r\n   font-size: 18px;\r\n   color: #0041a3;\r\n   resize: none;\r\n   box-sizing: border-box;\r\n`;\r\n\r\nconst _SnsIconFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 8px;\r\n    width: 60px;\r\n    height: 60px;\r\n    border: 2px solid #555555;\r\n    background-color: #f0f0f0e1;\r\n    box-sizing: border-box;\r\n    font-size: 50px;\r\n    color: #666;\r\n    margin: 0 2px;\r\n`;","import assert from \"assert\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryUtil from \"../launcher/util/storyUtil\";\r\nimport NameDefDialog from \"./nameDefDialog\";\r\nimport NewProjectDialog from \"./newProjectDialog\";\r\nimport NewProjectDialogStoryOnly from \"./newProjectDialogStoryOnly\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n    const listItemJsx = store.cloud == null ? [] : store.cloud.projects.map((project, i) => {\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    setFcsListIdx(i);\r\n                    console.log(DataUtil.getHashedFromProjectSeq(project.seq));\r\n                }}\r\n                onContextMenu={() => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={DataUtil.getDirectUrl(project.type, project.seq)}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }}\r\n            >\r\n                <_Status type={project.type}>[{project.type}] </_Status>\r\n                <_Name>{project.name}</_Name>\r\n                {/* <_Date> -{item.lastmod}</_Date> */}\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    const getProjectType = () => {\r\n        let str = '-';\r\n        if (store.libraryData != null) str = 'library';\r\n        if (store.storyData != null) str = 'story';\r\n        return str;\r\n    }\r\n\r\n    const hasData = store.libraryData != null;\r\n    const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n    useEffect(() => {\r\n        if (store.cloud == null) {\r\n            setFcsListIdx(-1);\r\n        }\r\n    }, [store.cloud]);\r\n\r\n    const [elementSize, developCnt, privateCnt, releaseCnt, logicCnt, fuseCnt] = useMemo(() => {\r\n        if (store.libraryData == null) return [0, 0, 0, 0, 0, 0];\r\n        let size = 0;\r\n        const incrRec = (wrap: LogicUtil.WrapElement) => {\r\n            size++;\r\n            const listName = LogicElementUtil.getListParamName(wrap.type);\r\n            if (listName != null) {\r\n                const list = wrap.data[listName] as LogicUtil.WrapElement[];\r\n                list.forEach(wrap => incrRec(wrap));\r\n            }\r\n        }\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        incrRec(root.logicMng);\r\n        incrRec(root.seedMng);\r\n\r\n        let developCnt = 0;\r\n        let privateCnt = 0;\r\n        let releaseCnt = 0;\r\n        let fuseCnt = 0;\r\n        const seedMng = root.seedMng.data as LogicUtil.NodeSeedManager;\r\n        seedMng.defs.forEach(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n            switch (seed.permit) {\r\n                case 'develop': developCnt++; break;\r\n                case 'private': privateCnt++; break;\r\n                case 'release': releaseCnt++; break;\r\n            }\r\n        });\r\n\r\n        const logicMng = root.logicMng.data as LogicUtil.NodeLogicManager;\r\n\r\n        if (store.storyData != null) {\r\n            fuseCnt = store.storyData.fuseList.length;\r\n        }\r\n        return [size, developCnt, privateCnt, releaseCnt, logicMng.defs.length, fuseCnt];\r\n    }, [store.libraryData]);\r\n\r\n    \r\n    const getData = (type: ProjectType) => {\r\n        switch (type) {\r\n            case 'library': {\r\n                return store.libraryData;\r\n            }\r\n            case 'story': {\r\n                const data: StoryUtil.ScenarioFileProps = {\r\n                    libraryData: store.libraryData as LogicUtil.WrapElement,\r\n                    scenarioData: store.storyData as StoryUtil.StoryData\r\n                };\r\n                return data;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを新規アップロードする\r\n     */\r\n    const uploadCloud = () => {\r\n        const type = getProjectType() as ProjectType;\r\n        const source = DataUtil.gZip(JSON.stringify(getData(type)));\r\n        store.system.dialog = <NameDefDialog.Component\r\n            targetSeq={-1}\r\n            type={type}\r\n            source={source}\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを上書き更新する\r\n     */\r\n    const overwriteCloudFile = () => {\r\n        const type = getProjectType() as ProjectType;\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.gZip(JSON.stringify(getData(type)));\r\n        updateProjectSource(curPrj.seq, getProjectType(), source).then(() => {\r\n            curPrj.source = source;\r\n            curPrj.type = type;\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Update project succesful!\"\r\n            />;\r\n            setStore({ ...store });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 選択中のクラウド上のファイルを読み込む\r\n     */\r\n    const cloneCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.unZip(curPrj.source);\r\n        const data = JSON.parse(source);\r\n        switch (curPrj.type) {\r\n            case 'library': {\r\n                store.libraryData = data;\r\n            } break;\r\n            case 'story': {\r\n                const scenarioFileProps = data as StoryUtil.ScenarioFileProps;\r\n                store.libraryData = scenarioFileProps.libraryData;\r\n                store.storyData = scenarioFileProps.scenarioData;\r\n            } break;\r\n        }\r\n        store.system.dialog = <ConfirmDialog.Component\r\n            message=\"Clone project succesful!\"\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    const saveLocalFile = () => {\r\n        switch (getProjectType() as ProjectType) {\r\n            case 'library': DataUtil.saveLibraryFile(store, setStore); break;\r\n            case 'story': DataUtil.saveScenarioFile(store, setStore); break;\r\n        }\r\n    }\r\n\r\n    const getNewSaveButton = () => {\r\n        switch (tabIndex) {\r\n            // Cloud\r\n            case 0: return {\r\n                label: 'Upload cloud',\r\n                width: 210,\r\n                isEnable: hasData && store.cloud != null,\r\n                callback: uploadCloud\r\n            }\r\n            // Local\r\n            case 1: return {\r\n                label: 'Save file',\r\n                width: 210,\r\n                isEnable: hasData && store.fileHandle == null,\r\n                callback: () => {\r\n                    // store.fileHandle = null;\r\n                    // setStore({...store});\r\n                    saveLocalFile();\r\n                }\r\n            }\r\n        }\r\n        throw assert;\r\n    }\r\n\r\n    const getOverwriteButton = () => {\r\n        switch (tabIndex) {\r\n            // Cloud\r\n            case 0: return {\r\n                label: 'Overwrite',\r\n                width: 210,\r\n                isEnable: fcsListIdx != -1 && hasData,\r\n                callback: overwriteCloudFile\r\n            }\r\n            // Local\r\n            case 1: return {\r\n                label: 'Overwrite',\r\n                width: 210,\r\n                isEnable: hasData && store.fileHandle != null,\r\n                callback: () => {\r\n                    // store.fileHandle = null;\r\n                    // setStore({...store});\r\n                    saveLocalFile();\r\n                }\r\n            }\r\n        }\r\n        throw assert;\r\n    }\r\n\r\n    const cloudJsx = (<_ContDiv isEnable={store.cloud != null}>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Load',\r\n                    isEnable: !hasData && fcsListIdx !== -1 && projects[fcsListIdx].source !== '',\r\n                    callback: cloneCloudFile\r\n                },\r\n                {\r\n                    label: 'Rename',\r\n                    width: 110,\r\n                    isEnable: fcsListIdx != -1,\r\n                    callback: () => {\r\n                        store.system.dialog = <NameDefDialog.Component\r\n                            targetSeq={projects[fcsListIdx].seq}\r\n                        />;\r\n                        setStore({ ...store });\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Delete',\r\n                    width: 110,\r\n                    isEnable: fcsListIdx != -1,\r\n                    callback: () => {\r\n                        deleteProject(projects[fcsListIdx].seq).then(() => {\r\n                            store.system.dialog = <ConfirmDialog.Component\r\n                                message=\"Delete project succesful!\"\r\n                            />;\r\n                            projects.splice(fcsListIdx, 1);\r\n                            setFcsListIdx(fcsListIdx - 1);\r\n                            setStore({ ...store });\r\n                        });\r\n                    }\r\n                },\r\n            ]}\r\n        />\r\n        <_ListDiv>\r\n            {listItemJsx}\r\n        </_ListDiv>\r\n    </_ContDiv>);\r\n\r\n    const localJsx = (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Load',\r\n                    width: 100,\r\n                    isEnable: !hasData,\r\n                    callback: () => { DataUtil.loadFile(store, setStore) }\r\n                },\r\n                {\r\n                    label: 'Disconnect',\r\n                    width: 160,\r\n                    isEnable: store.fileHandle != null,\r\n                    callback: () => {\r\n                        store.fileHandle = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                },\r\n            ]}\r\n        />\r\n    </>);\r\n\r\n    return (<_Wrap>\r\n        <_HeaderDiv>\r\n            <FormUtil.ButtonRecord\r\n                align=\"left\"\r\n                buttons={[\r\n                    {\r\n                        label: 'New Project',\r\n                        isEnable: !hasData,\r\n                        callback: () => {\r\n\r\n                            store.system.dialog = store.env.isEditLibrary ? <NewProjectDialog.Component /> : <NewProjectDialogStoryOnly.Component />;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Clear',\r\n                        width: 100,\r\n                        isEnable: hasData,\r\n                        callback: () => {\r\n                            store.libraryData = null;\r\n                            store.storyData = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                ]}\r\n            />\r\n        </_HeaderDiv>\r\n        <_BodyDiv>\r\n            <_LeftDiv isEnable={true}>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'Cloud', enable: true, cont: cloudJsx },\r\n                        { name: 'Local', enable: true, cont: localJsx },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_LeftDiv>\r\n            <_RighttDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getNewSaveButton(),\r\n                        getOverwriteButton()\r\n                    ]}\r\n                />\r\n                <FormUtil.BorderPanel\r\n                    title=\"Project\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Type\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={getProjectType()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Private\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : privateCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Release\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : releaseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Logic\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Elements\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : elementSize.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Hash\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    // width={340}\r\n                                    isRecordItem\r\n                                    value={!hasData ? '-' : DataUtil.getSHA256Hash(JSON.stringify(store.libraryData))}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Fuses\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : fuseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n                {/* <FormUtil.BorderPanel\r\n                    title=\"File\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Type\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={getProjectType()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                /> */}\r\n            </_RighttDiv>\r\n        </_BodyDiv>\r\n\r\n    </_Wrap >);\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst updateProjectSource = async (seq: number, type: string, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set type = '${type}', source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from prjcttbl where seq = ${seq};`)\r\n}\r\n\r\nconst HEADER_WIDTH = 40;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    background-color: #ebebeb30;\r\n`;\r\n\r\nconst _HeaderDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_WIDTH}px;\r\n    background-color: #d1f5f32f;\r\n`;\r\n\r\nconst _BodyDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_WIDTH}px);\r\n    background-color: #221a212c;\r\n`;\r\n\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #ffe3fb53; */\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ContDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 38px);\r\n    box-sizing: border-box;\r\n    background-color: #f0ecd43d;\r\n    border: 1px solid #002c8a;\r\n    border-radius: 4px;\r\n`;\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    type: ProjectType | '';\r\n}>`\r\n    color: #0000006d;\r\n    ${props => props.type === 'library' ? css`color: #b90000be;` : ''}\r\n    ${props => props.type === 'story' ? css`color: #003bb9bd;` : ''}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\nconst _RighttDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #cbf7cd2d;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane, TabElements } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport LogicMainteTab from \"./factory/logicMainteTab\";\r\nimport StoryTab from \"./launcher/storyTab\";\r\nimport ManageTab from \"./manage/manageTab\";\r\n\r\nconst CreateChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const getProjectType = () => {\r\n        let str = '-';\r\n        if (store.libraryData != null) str = 'library';\r\n        if (store.storyData != null) str = 'scenario';\r\n        return str;\r\n    };\r\n    const projectType = getProjectType();\r\n\r\n    const tabElements: TabElements[] = [];\r\n    tabElements.push({ name: 'Manage', enable: true, cont: <ManageTab /> });\r\n    tabElements.push({ name: 'Story', enable: projectType === 'scenario', cont: projectType === 'scenario' ? <StoryTab /> : <></> });\r\n    if (store.env.isEditLibrary) {\r\n        tabElements.push({ name: 'Library', enable: projectType === 'library', cont: <LogicMainteTab /> });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={tabElements}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CreateChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport TreeUtil from \"../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../create/factory/util/logicUtil\";\r\nimport PreviewLogicFrame from \"../create/preview/previewLogicFrame\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    isOpen: boolean;\r\n    seedList: SeedProps[];\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\n\r\nconst PublishFrame = (props: {\r\n    setLibCnt: (artsCnt: number) => void;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [libList, setLibList] = useState<LibProps[]>([]);\r\n\r\n    useEffect(() => {\r\n        findAllReleaseProjectList().then((resList) => {\r\n            const libList: LibProps[] = [];\r\n            resList.forEach(res => {\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const rootData = JSON.parse(DataUtil.unZip(res.source)) as LogicUtil.WrapElement;\r\n                const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                const seedList: SeedProps[] = seedMng.defs\r\n                    .filter(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        return seed.permit === 'release';\r\n                    })\r\n                    .map(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                        const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                        return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                    });\r\n                libList.push({\r\n                    name, ownerId, lastmod, rootData, seedList, isOpen: false\r\n                });\r\n            });\r\n            setLibList(libList);\r\n            props.setLibCnt(libList.length);\r\n        });\r\n    }, []);\r\n\r\n    const download = (plainData: string) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        window.showSaveFilePicker(options).then((handle) => {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await handle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"Successfully download!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        }).catch(() => {\r\n            console.log('キャンセルされました');\r\n        });\r\n    }\r\n\r\n    const libListJsx = libList\r\n        .filter(lib => lib.seedList.length > 0).map((lib, i) => {\r\n            const dispCnt = !lib.isOpen ? 0 : lib.seedList.length;\r\n            return (<_Item key={i} count={dispCnt}>\r\n                <_Header onClick={() => {\r\n                    // window.open(DataUtil.getPreviewURL(score.seq), '_blank');\r\n                }}>\r\n                    <_Owner>{`${lib.ownerId}`}</_Owner>\r\n                    <_CName onClick={() => {\r\n                        download(JSON.stringify(lib.rootData));\r\n                    }}>{`${lib.name}`}</_CName><_CDate>{lib.lastmod}</_CDate>\r\n                </_Header>\r\n                <_DetailMain count={dispCnt}>\r\n                    {lib.seedList.map((seed, j) => {\r\n                        let labelName = seed.name;\r\n                        if (seed.disp != undefined) labelName = seed.disp;\r\n                        return (\r\n                            <_SeedItemFrame key={j} onClick={() => {\r\n                                store.system.dialog = (\r\n                                    <PreviewLogicFrame.Component\r\n                                        master={seed.master}\r\n                                        rootData={lib.rootData}\r\n                                        closeButtonAction={() => {\r\n                                            store.system.dialog = null;\r\n                                            setStore({ ...store });\r\n                                        }}\r\n                                    />\r\n                                );\r\n                                setStore({ ...store });\r\n                            }}>\r\n                                <_SeedItemInner>\r\n                                    <_SeedName>{labelName}</_SeedName>\r\n                                    <_SeedArgCnt>{` [${seed.argCount} arguments]`}</_SeedArgCnt>\r\n                                </_SeedItemInner>\r\n                            </_SeedItemFrame>\r\n                        );\r\n                    })}\r\n                </_DetailMain>\r\n                <_DetailOpen onClick={() => {\r\n                    libList[i].isOpen = !libList[i].isOpen;\r\n                    setLibList(libList.slice());\r\n                }}>\r\n                    <_CSummary>{` ${lib.seedList.length} seeds ▼`}</_CSummary>\r\n                </_DetailOpen>\r\n            </_Item>);\r\n        });\r\n\r\n    return (\r\n        <_ListFrame>{libListJsx}</_ListFrame>\r\n    );\r\n}\r\n\r\nexport default PublishFrame;\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #6d7a86;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst SEED_HEIGTH = 40;\r\nconst _Item = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${props => (props.count > 0 ? 8 : 0) + 89 + props.count * SEED_HEIGTH}px;\r\n    /* border-bottom: 1px solid #262626; */\r\n    /* background-color: #2e2e2e; */\r\n    /* background: linear-gradient(to bottom, transparent, #4f4f4f); */\r\n    margin: 2px 0 0 0;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    } */\r\n    transition: height 200ms;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100%);\r\n    height: 60px;\r\n    /* background-color: #c9e3df; */\r\n    background: linear-gradient(to bottom, #b9b9b9, #e2e2e2, #b9b9b9);\r\n    /* margin: 4px 0 0 4px; */\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff);\r\n    } */\r\n`;\r\nconst _DetailMain = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 40px);\r\n    height: ${props => (props.count > 0 ? 8 : 0) + props.count * SEED_HEIGTH}px;\r\n    background-color: #c7c7c7;\r\n    border-radius: 0 0 2px 2px;\r\n    margin: 0 0 0 20px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    transition: height 200ms;\r\n    overflow-y: hidden;\r\n`;\r\nconst _DetailOpen = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 60px);\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    margin: 0 0 0 30px;\r\n    background-color: #b1b1b1;\r\n    /* border-radius: 0 0 2px 2px; */\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    clip-path: polygon(7.5% 100%, 0% 0%, 100% 0%, 92.5% 100%);\r\n    \r\n    &:hover {\r\n        background-color: #c6d1a1;\r\n    }\r\n`;\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    \r\n    &:hover {\r\n        color: #db3333;\r\n    }\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CSummary = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 25px;\r\n    font-size: 22px;\r\n    line-height: 22px;\r\n    font-weight: 600;\r\n    color: #fffffad6;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _SeedItemFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${SEED_HEIGTH}px;\r\n    /* background-color: #a3b9c0; */\r\n    margin: 2px 0 0 0;\r\n    /* padding-left: 4px; */\r\n    text-align: left;\r\n`;\r\nconst _SeedItemInner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 2px;\r\n    border: 1px solid #0000002e;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    line-height: 29px;\r\n    font-weight: 600;\r\n    padding: 0 0 0 5px;\r\n    &:hover {\r\n        background-color: #bbd4dc;\r\n    }\r\n`;\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #000f74;\r\n`;\r\nconst _SeedArgCnt = styled.span<{\r\n}>`\r\n    color: #c7020265;\r\n`;","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\ntype NotePorp = {\r\n    version: string;\r\n    date: string;\r\n    note: string;\r\n}\r\n\r\nconst ReleaseNote = () => {\r\n    const { store } = useContext(GlobalContext);\r\n\r\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\r\n    useEffect(() => {\r\n        fetch('assets/release_note.json')\r\n            .then(response => response.json()) // (2) レスポンスデータを取得\r\n            .then(json => { // (3)レスポンスデータを処理\r\n                const list = json as NotePorp[];\r\n                setJsx(list.map((item, i) => {\r\n                    const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n                    return (\r\n                        <_Item key={i}>\r\n                            <_Header>v{item.version} ({item.date})</_Header>\r\n                            <_Detail>{record}</_Detail>\r\n                        </_Item>\r\n                    );\r\n                }));\r\n            });\r\n    }, []);\r\n    return (<_ListFrame>{jsx}</_ListFrame>);\r\n}\r\n\r\nexport default ReleaseNote;\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    /* height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px); */\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #bfcace;\r\n    border: 1px solid #9b9b9b;\r\n    border-radius: 6px;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    font-weight: 600;\r\n    /* background-color: #8bdbf8; */\r\n    color: #494975;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    /* background-color: #dafce4; */\r\n    color: #754949;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PublishFrame from \"./publishFrame\";\r\nimport ReleaseNote from \"./releaseNote\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [userCount, setUserCount] = useState(0);\r\n    const [artsCnt, setArtsCnt] = useState(0);\r\n\r\n    useEffect(() => {\r\n        countUsers().then(cnt => {\r\n            setUserCount(cnt);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <ReleaseNote />\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{artsCnt} libruary have been published.</_MessageRecord>\r\n            <PublishFrame setLibCnt={setArtsCnt}/>\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeChannel;\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nexport const findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT seq, (select id from user_tbl where seq = prj.seq) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { VscGitPullRequestCreate } from 'react-icons/vsc';\r\nimport CreateChannel from \"../create/createChannel\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <HomeChannel /> },\r\n                    { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <CreateChannel /> },\r\n                ]}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport CanvasUtil from '../../utils/canvasUtil';\r\nimport DataUtil from '../../utils/dataUtil';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <_Logo src={logo} />\r\n                </_Title>\r\n                <_VERSION>{DataUtil.APP_VERSION + 'b'}</_VERSION>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2023 Pixel Flare All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#858892, #8e99b6);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    /* color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-shadow: 1px 2px 22px #0000003d; */\r\n    text-align: center;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    /* & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    } */\r\n`;\r\n\r\nconst _VERSION = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 240px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #ebe7ab;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n    /* height: 200%; */\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { useState } from \"react\";\r\nimport { initialStore } from \"../../redux/store/store\";\r\nimport styled from \"styled-components\";\r\nimport GloballDialog from \"../dialog/globalDialog\";\r\nimport TotalHeader from \"./totalHeader\";\r\nimport MainFrame from \"./mainFrame\";\r\nimport ModeSelectDialog from \"./modeSelectDialog\";\r\nimport Splash from \"./splash\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\n\r\nconst PCRoot = () => {\r\n    const [store, setStore] = useState(initialStore);\r\n\r\n    const splashJsx = !store.system.isSplash ? <></> : (\r\n        <Splash\r\n            remove={() => {\r\n                store.system.isSplash = false;\r\n                // store.system.dialog = <ModeSelectDialog />\r\n                setStore({ ...store });\r\n            }}\r\n        />\r\n    );\r\n\r\n    return (<>\r\n        {splashJsx}\r\n        < _Wrap >\r\n            <GloballDialog />\r\n            <TotalHeader />\r\n            <_MainDiv>\r\n                <MainFrame />\r\n            </_MainDiv>\r\n        </_Wrap >\r\n    </>);\r\n}\r\n\r\nexport default PCRoot;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    min-width: 1200px;\r\n    min-height: 900px;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #a3c1c7;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import PublishFrame from \"../../contents/home/publishFrame\";\r\n\r\nconst SPHomeChannel = () => {\r\n\r\n    return (<PublishFrame setLibCnt={()=>{}}/>);\r\n}\r\n\r\nexport default SPHomeChannel;","import styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../contents/entry/systemEntry\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { ProjectType } from \"../../redux/store/store\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../../contents/dialog/confirmDialog\";\r\nimport NewProjectDialogStoryOnly from \"../../contents/create/manage/newProjectDialogStoryOnly\";\r\nimport NameDefDialog from \"../../contents/create/manage/nameDefDialog\";\r\nimport StoreCloud from \"../../redux/store/storeCloud\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport { BsFillShareFill } from 'react-icons/bs';\r\nimport { VscPreview } from \"react-icons/vsc\";\r\nimport { FiUpload, FiDownload } from \"react-icons/fi\";\r\nimport { IoCreateOutline } from \"react-icons/io5\";\r\nimport { FaRegSave } from \"react-icons/fa\";\r\nimport { MdClear, MdOutlineDriveFileRenameOutline } from \"react-icons/md\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\n\r\nimport ShareDialog from \"./etc/shareDialog\";\r\n\r\nconst SPManageFrame = (props: {\r\n    setEdit: (isEdit: boolean) => void;\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n    const hasData = store.libraryData != null;\r\n    const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n    useEffect(() => {\r\n        store.system.logoutActions.push(() => {\r\n            setFcsListIdx(-1);\r\n        });\r\n        // dispatcher.updateStore();\r\n    }, []);\r\n\r\n    const getData = () => {\r\n        if (!hasData) return null;\r\n        const data: StoryUtil.ScenarioFileProps = {\r\n            libraryData: store.libraryData as LogicUtil.WrapElement,\r\n            scenarioData: store.storyData as StoryUtil.StoryData\r\n        };\r\n        return data;\r\n    }\r\n\r\n    const listItemJsx = store.cloud == null ? [] : store.cloud.projects.map((project, i) => {\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    setFcsListIdx(i);\r\n                    console.log(DataUtil.getHashedFromProjectSeq(project.seq));\r\n                }}\r\n                onContextMenu={() => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={DataUtil.getDirectUrl(project.type, project.seq)}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }}\r\n            >\r\n                {/* <_Status type={project.type}>[{project.type}] </_Status> */}\r\n                <_Name>{project.name}</_Name>\r\n                {/* <LineShareButton\r\n                    url=\"hoge\"\r\n                    children={<_Icon><BsFillShareFill /></_Icon>}\r\n                /> */}\r\n                {/* <_Date> -{item.lastmod}</_Date> */}\r\n                <_Share\r\n                    onClick={() => {\r\n                        store.system.dialog = <ShareDialog.Component\r\n                            hash={DataUtil.getHashedFromProjectSeq(project.seq)}\r\n                        />;\r\n                        store.system.canDialogClose = true;\r\n                        dispatcher.updateStore();\r\n                    }}\r\n                ><_Icon><BsFillShareFill /></_Icon></_Share>\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを新規アップロードする\r\n     */\r\n    const uploadCloud = () => {\r\n        const source = DataUtil.gZip(JSON.stringify(getData()));\r\n        store.system.dialog = <NameDefDialog.Component\r\n            targetSeq={-1}\r\n            type={'story'}\r\n            source={source}\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを上書き更新する\r\n     */\r\n    const overwriteCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.gZip(JSON.stringify(getData()));\r\n        updateProjectSource(curPrj.seq, 'story', source).then(() => {\r\n            curPrj.source = source;\r\n            curPrj.type = 'story';\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Update project succesful!\"\r\n            />;\r\n            setStore({ ...store });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 選択中のクラウド上のファイルを読み込む\r\n     */\r\n    const cloneCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.unZip(curPrj.source);\r\n        const data = JSON.parse(source);\r\n        switch (curPrj.type) {\r\n            case 'library': {\r\n                store.libraryData = data;\r\n            } break;\r\n            case 'story': {\r\n                const scenarioFileProps = data as StoryUtil.ScenarioFileProps;\r\n                store.libraryData = scenarioFileProps.libraryData;\r\n                store.storyData = scenarioFileProps.scenarioData;\r\n            } break;\r\n        }\r\n        store.system.dialog = <ConfirmDialog.Component\r\n            message=\"Clone project succesful!\"\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"left\"\r\n            isIconButton\r\n            buttons={[\r\n                !hasData ? {\r\n                    label: 'New Project',\r\n                    width: 200,\r\n                    icon: <IoCreateOutline />,\r\n                    callback: () => {\r\n                        store.system.dialog = <NewProjectDialogStoryOnly.Component\r\n                            extendAction={() => { props.setEdit(true); }}\r\n                        />;\r\n                        setStore({ ...store });\r\n                    }\r\n                } : {\r\n                    label: 'Clear',\r\n                    width: 200,\r\n                    icon: <MdClear />,\r\n                    callback: () => {\r\n                        store.libraryData = null;\r\n                        store.storyData = null;\r\n                        store.fuseCacheList.length = 0;\r\n                        dispatcher.updateStore();\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Project\"\r\n            height={198}\r\n            // isDisable={!hasData}\r\n            isEnable={hasData}\r\n            backgroundColor=\"#ffffff26\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    buttons={[\r\n                        {\r\n                            label: 'Upload',\r\n                            width: 210,\r\n                            icon: <FiUpload />,\r\n                            isEnable: hasData && store.cloud != null,\r\n                            callback: uploadCloud\r\n                        },\r\n                        {\r\n                            label: 'Overwrite',\r\n                            width: 210,\r\n                            icon: <FaRegSave />,\r\n                            isEnable: fcsListIdx != -1 && hasData,\r\n                            callback: overwriteCloudFile\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Hash\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            // width={340}\r\n                            isRecordItem\r\n                            value={!hasData ? '-' : DataUtil.getSHA256Hash(JSON.stringify(store.libraryData))}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Fuses\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            value={!hasData ? '-' : '0'}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Size\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            value={!hasData ? '-' : '0'}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Cloud\"\r\n            height={434}\r\n            // isDisable={store.cloud == null}\r\n            isEnable={store.cloud != null}\r\n            backgroundColor=\"#ffffff26\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    buttons={[\r\n                        {\r\n                            label: 'Load',\r\n                            width: 140,\r\n                            icon: <FiDownload />,\r\n                            isEnable: !hasData && fcsListIdx !== -1 && projects[fcsListIdx].source !== '',\r\n                            callback: cloneCloudFile\r\n                        },\r\n                        {\r\n                            label: 'Rename',\r\n                            width: 140,\r\n                            icon: <MdOutlineDriveFileRenameOutline />,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                store.system.dialog = <NameDefDialog.Component\r\n                                    targetSeq={projects[fcsListIdx].seq}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Delete',\r\n                            width: 140,\r\n                            icon: <RiDeleteBinLine />,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                deleteProject(projects[fcsListIdx].seq).then(() => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Delete project succesful!\"\r\n                                    />;\r\n                                    projects.splice(fcsListIdx, 1);\r\n                                    setFcsListIdx(fcsListIdx - 1);\r\n                                    setStore({ ...store });\r\n                                });\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {listItemJsx}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default SPManageFrame;\r\n\r\nconst updateProjectSource = async (seq: number, type: string, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set type = '${type}', source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from prjcttbl where seq = ${seq};`)\r\n}\r\n\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 38px);\r\n    box-sizing: border-box;\r\n    background-color: #f0ecd43d;\r\n    border: 1px solid #002c8a;\r\n    border-radius: 4px;\r\n`;\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    type: ProjectType | '';\r\n}>`\r\n    color: #0000006d;\r\n    ${props => props.type === 'library' ? css`color: #b90000be;` : ''}\r\n    ${props => props.type === 'story' ? css`color: #003bb9bd;` : ''}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\n\r\nconst _Share = styled.span<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 1px;\r\n    /* background-color: #00eb6a76; */\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 30px;\r\n    /* background-color: #eb000076; */\r\n    font-size: 20px;\r\n    color: #757575;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport StoryUtil from \"../../../contents/create/launcher/util/storyUtil\";\r\nimport { FuseBean } from \"../../../contents/create/launcher/storyTab\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport LogicUtil from \"../../../contents/create/factory/util/logicUtil\";\r\nimport LogicFormUtil from \"../../../contents/create/factory/util/logicFormUtil\";\r\nimport LogicElementUtil from \"../../../contents/create/factory/util/logicElementUtil\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport BuildUtil from \"../../../contents/create/preview/buildUtil\";\r\nimport { AiOutlineEnter } from \"react-icons/ai\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\n\r\nconst FuseMainteDialog = (props: {\r\n    focus: number;\r\n    seedList: FuseBean[];\r\n    // isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: (frame: number, seedId: string, values: number[]) => void;\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const [newFrame, setNewFrame] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n    const [seed, setSeed] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [preset, setPreset] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const isInputOK = seed.errors.length === 0 && newFrame.errors.length === 0 && formList.find(form => form.errors.length > 0) == undefined;\r\n\r\n    const mapping = () => {\r\n        if (props.focus === -1) return;\r\n        const curFuse = fuseList[props.focus];\r\n        setNewFrame({ ...newFrame, value: curFuse.frame.toString() });\r\n        setSeed({ ...seed, value: curFuse.seedId.toString() });\r\n        setFormList(curFuse.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    }\r\n\r\n    const initFormList = (seedId: string) => {\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seedId;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n        }\r\n        setFormList(argumentList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }\r\n\r\n    const createSeq = () => {\r\n        return fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if(props.focus !== -1) mapping();\r\n    }, []);\r\n\r\n    const propertiesFormJsx = useMemo(() => {\r\n        if (seed.value === '') return <></>;\r\n\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        let presetList: LogicUtil.NodeSampleItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seed.value;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n            formgrpList = activeSeed.formgrps;\r\n            presetList = activeSeed.presets;\r\n        }\r\n        return (<>\r\n            <FormUtil.BorderPanel\r\n                title=\"Preset\"\r\n                innerJsx={<FormUtil.Record\r\n                    jsx={<>\r\n                        <FormUtil.Combobox\r\n                            width={250}\r\n                            checkable={preset}\r\n                            setCheckable={setPreset}\r\n                            headBlank\r\n                            list={presetList.map((sample, i) => {\r\n                                return {\r\n                                    labelText: sample.name,\r\n                                    value: i.toString()\r\n                                }\r\n                            })}\r\n                        />\r\n                        <FormUtil.ButtonItem\r\n                            button={{\r\n                                label: 'Apply',\r\n                                isEnable: preset.value !== '',\r\n                                callback: () => {\r\n                                    const selectedIndex = Number(preset.value);\r\n                                    const values = presetList[selectedIndex].values;\r\n                                    values.forEach((value, i) => {\r\n                                        formList[i].value = value.toString();\r\n                                    });\r\n                                    setFormList(formList.slice());\r\n                                }\r\n                            }}\r\n                        />\r\n                    </>}\r\n                />}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Properties\"\r\n                innerJsx={<>{\r\n                    LogicFormUtil.buildPreviewForms(\r\n                        false, argumentList, formgrpList, formList, setFormList\r\n                    )\r\n                }</>}\r\n            />\r\n        </>);\r\n    }, [preset, formList]);\r\n\r\n    return (\r\n        <_Frame\r\n            width={600}\r\n            height={872}\r\n            scrollLock={store.env.scrollLock}\r\n        >\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        icon: <MdCancelPresentation />,\r\n                        width: 120,\r\n                        // isEnable: props.isModify,\r\n                        callback: () => {\r\n                            props.cancelAction();\r\n                            // setPreset({ ...preset, value: '' });\r\n                            // mapping();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Regist',\r\n                        icon: <AiOutlineEnter />,\r\n                        width: 120,\r\n                        isEnable: isInputOK,\r\n                        callback: () => {\r\n\r\n\r\n                            let fuse: StoryUtil.Fuse | null = null;\r\n                            let cache: StoryUtil.Cache | null = null;\r\n                            if (props.focus === -1) {\r\n                                fuse = { seq: createSeq(), frame: 0, seedId: '', values: [] };\r\n                                fuseList.push(fuse);\r\n\r\n                                cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n                                store.fuseCacheList.push(cache);\r\n                            } else {\r\n                                fuse = fuseList[props.focus];\r\n                                const fuseSeq = fuse.seq;\r\n                                cache = store.fuseCacheList.find(cache => cache.seq === fuseSeq) as StoryUtil.Cache;\r\n                            }\r\n\r\n                            fuse.frame = Number(newFrame.value);\r\n                            fuse.seedId = seed.value;\r\n                            const activeSeed = props.seedList.find(item => {\r\n                                return item.name === seed.value;\r\n                            });\r\n                            fuse.dispName = activeSeed?.disp;\r\n                            fuse.values = formList.map(form => form.value);\r\n                            dispatcher.story.updateCache(fuse, cache);\r\n                            (store.storyData as StoryUtil.StoryData).fuseList = fuseList.slice();\r\n                            store.system.dialog = null;\r\n                            dispatcher.updateStore();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Base\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isNumber\r\n                                checkable={newFrame}\r\n                                setCheckable={setNewFrame}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Seed\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                checkable={seed}\r\n                                setCheckable={(checkable) => {\r\n                                    initFormList(checkable.value);\r\n                                    setSeed({ ...checkable });\r\n                                }}\r\n                                list={props.seedList.map(seed => {\r\n                                    return { value: seed.name, labelText: seed.disp ?? seed.name }\r\n                                })}\r\n                                headBlank\r\n                                width={250}\r\n                                validates={\r\n                                    [\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n            {propertiesFormJsx}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default FuseMainteDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    scrollLock: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #cfd7dae6;\r\n    border: 1px solid #474747;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n    overflow-y: ${props => !props.scrollLock ? 'auto' : 'hidden'};\r\n`;","import styled, { css, keyframes } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport StoryUtil from \"../../../contents/create/launcher/util/storyUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport FuseMainteDialog from \"./fuseMainteDialog\";\r\nimport { FuseBean } from \"../../../contents/create/launcher/storyTab\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\nimport { GrView } from \"react-icons/gr\";\r\nimport { ImCopy } from \"react-icons/im\";\r\n\r\nconst COL_WIDTH_LIST = [48, 252, 150];\r\n\r\nconst OPTION_BUTTON_WIDTH = 112;\r\n\r\nconst FuseList = (props: {\r\n    focus: number;\r\n    setFocus: (focus: number) => void;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const createSeq = () => {\r\n        return storyData.fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    const recordJsxList = useMemo(() => {\r\n        return storyData.fuseList.map((fuse, i) => {\r\n\r\n            const cache = store.fuseCacheList.find(cache => cache.seq === fuse.seq);\r\n\r\n            let thumbJsx: JSX.Element[] = [];\r\n            if (cache != undefined) {\r\n                thumbJsx = cache.thumbList.slice(0, 3).map((thumb, j) => {\r\n                    const imgJsx = thumb == undefined ? <></> : <_Img src={thumb.url} />;\r\n                    return (\r\n                        <_SampleDiv key={j}>\r\n                            {/* <_SampleName>{thumb.name}</_SampleName> */}\r\n                            <_CanvasDiv>\r\n                                {imgJsx}\r\n                            </_CanvasDiv>\r\n                        </_SampleDiv>\r\n                    );\r\n                });\r\n            };\r\n            const isFocus = props.focus === i;\r\n            return (<_RecordWrap key={i}\r\n                isFocus={isFocus}\r\n            >\r\n                <_RecordCont\r\n                    onClick={() => {\r\n                        if (props.focus !== i) {\r\n                            props.setFocus(i);\r\n                        } else if (props.focus === i) {\r\n                            props.setFocus(-1);\r\n                        }\r\n                    }}\r\n                >\r\n                    <_ColWrap width={COL_WIDTH_LIST[0]}><_TextItem>{fuse.frame}</_TextItem></_ColWrap>\r\n                    <_ColWrap width={COL_WIDTH_LIST[1]}>\r\n                        <_TextItem>[{fuse.seq}] {fuse.dispName ?? fuse.seedId}</_TextItem>\r\n                        {/* <_FrameForm\r\n                            type=\"number\"\r\n                            isEditable={isFocus}\r\n                            min={0} max={storyData.limitFrame}\r\n                            step={1}\r\n                            value={storyData.fuseList[i].frame}\r\n                            onChange={(e) => {\r\n                                storyData.fuseList[i].frame = e.currentTarget.valueAsNumber;\r\n                                storyData.fuseList = storyData.fuseList.slice();\r\n                                setStore({ ...store });\r\n                            }}\r\n                        />\r\n                        <_FrameSlider\r\n                            type=\"range\"\r\n                            isEditable={isFocus}\r\n                            min={0} max={storyData.limitFrame}\r\n                            step={1}\r\n                            value={storyData.fuseList[i].frame}\r\n                            onChange={(e) => {\r\n                                storyData.fuseList[i].frame = e.currentTarget.valueAsNumber;\r\n                                storyData.fuseList = storyData.fuseList.slice();\r\n                                setStore({ ...store });\r\n                            }}\r\n                        /> */}\r\n                    </_ColWrap>\r\n                    <_ColWrap width={COL_WIDTH_LIST[2]}><_ImageItem>{thumbJsx}</_ImageItem></_ColWrap>\r\n                </_RecordCont>\r\n                <_Option isFocus={isFocus}>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        isIconButton\r\n                        buttons={[\r\n                            {\r\n                                label: 'Edit',\r\n                                icon: <FiEdit />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                // isEnable: props.isModify,\r\n                                callback: () => {\r\n                                    store.system.dialog = <FuseMainteDialog\r\n                                        focus={props.focus}\r\n                                        seedList={props.seedList}\r\n                                        cancelAction={() => {\r\n                                        }}\r\n                                        modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                        }}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Copy',\r\n                                icon: <ImCopy />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    const cloneFuse = JSON.parse(JSON.stringify(storyData.fuseList[props.focus])) as StoryUtil.Fuse;\r\n                                    cloneFuse.seq = createSeq();\r\n                                    const focusSeq = storyData.fuseList[props.focus].seq;\r\n                                    const index = store.fuseCacheList.findIndex(cache => cache.seq === focusSeq);\r\n                                    const cloneCache = JSON.parse(JSON.stringify(store.fuseCacheList[index])) as StoryUtil.Cache;\r\n                                    cloneCache.seq = cloneFuse.seq;\r\n                                    storyData.fuseList.push(cloneFuse);\r\n                                    storyData.fuseList = storyData.fuseList.slice();\r\n                                    store.fuseCacheList.push(cloneCache);\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Delete',\r\n                                icon: <RiDeleteBinLine />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    const focusSeq = storyData.fuseList[props.focus].seq;\r\n                                    storyData.fuseList.splice(props.focus, 1);\r\n                                    const index = store.fuseCacheList.findIndex(cache => cache.seq === focusSeq);\r\n                                    store.fuseCacheList.splice(index, 1);\r\n                                    setStore({ ...store });\r\n                                    props.setFocus(props.focus - 1);\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Test',\r\n                                icon: <GrView />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    dispatcher.story.openPreviewSoloDialog(props.focus);\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_Option>\r\n            </_RecordWrap>);\r\n        });\r\n    }, [storyData.fuseList, props.focus]);\r\n\r\n    return (<>\r\n        <_HeaderDiv>\r\n            <_HeaderItem width={COL_WIDTH_LIST[0]}>F</_HeaderItem>\r\n            <_HeaderItem width={COL_WIDTH_LIST[1]}>[Seq] Seed</_HeaderItem>\r\n            <_HeaderItem width={COL_WIDTH_LIST[2]}>Snapshot</_HeaderItem>\r\n        </_HeaderDiv>\r\n        <_BodyScrollDiv>\r\n            {recordJsxList}\r\n        </_BodyScrollDiv>\r\n    </>);\r\n}\r\n\r\nexport default FuseList;\r\n\r\nconst _HeaderDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #0c0c0c44;\r\n  /* background: linear-gradient(to bottom, #99a5b9, #c3cee4, #99a5b9); */\r\n  width: calc(100% - 30px);\r\n  height: 36px;\r\n  margin: 0 0 0 5px;\r\n  padding: 3px;\r\n  box-sizing: border-box;\r\n  border-radius: 2px 2px 0 0;\r\n`;\r\n\r\nconst _HeaderItem = styled.div<{\r\n    width: number;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #feffff36;\r\n  width: ${props => props.width}px;\r\n  height: 30px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  font-size: 24px;\r\n  line-height: 26px;\r\n  font-weight: 600;\r\n  font-style: italic;\r\n  color: #ffffff;\r\n  text-align: center;\r\n  margin: 0 2px;\r\n`;\r\n\r\nconst _BodyScrollDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #4d6e854e;\r\n  width: calc(100% - 10px);\r\n  height: calc(100% - 36px);\r\n  margin: 0 0 0 5px;\r\n  overflow-y: auto;\r\n`;\r\nconst fadeIn = keyframes`\r\n  from {\r\n    background-color: #bb6f6fa0;\r\n  }\r\n  to {\r\n    background-color: #fabebe58;\r\n  }\r\n`;\r\nconst _RecordWrap = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffffff37;\r\n  ${props => !props.isFocus ? '' : css`\r\n      animation: ${fadeIn} 1.2s linear infinite;\r\n  `}\r\n  width: 100%;\r\n  margin: 1px 0 0 0;\r\n  border-radius: 0 0 8px 8px;\r\n`;\r\nconst _RecordCont = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 20px); */\r\n  width: 100%;\r\n  height: 56px;\r\n  margin: 1px 0 0 0;\r\n  padding: 3px;\r\n  box-sizing: border-box;\r\n`;\r\nconst _Option = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #ebffe6f9; */\r\n  width: 100%;\r\n  height: ${props => props.isFocus ? '68' : '0'}px;\r\n  /* height: 0; */\r\n  margin: 1px 0 0 0;\r\n  overflow-y: hidden;\r\n  transition: height 0.1s;\r\n`;\r\n\r\nconst _ColWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n  display: inline-block;\r\n  width: ${props => props.width}px;\r\n  margin: 0 2px;\r\n  /* background-color: #ff0000bb; */\r\n  vertical-align: middle;\r\n`;\r\nconst _TextItem = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffffffbc;\r\n  width: 100%;\r\n  height: 30px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  padding-left: 6px;\r\n  border-radius: 4px;\r\n  font-size: 24px;\r\n  line-height: 26px;\r\n  font-weight: 600;\r\n  /* font-style: italic; */\r\n  color: #7c0025;\r\n  text-align: left;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  /* margin: 8px 2px; */\r\n`;\r\nconst _FrameForm = styled.input<{\r\n    isEditable: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #628cffb9; */\r\n  border: 1px solid #242424;\r\n  border-radius: 2px;\r\n  width: 46px;\r\n  height: 20px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  ${props => props.isEditable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n  vertical-align: middle;\r\n  font-weight: 600;\r\n  color: #180085;\r\n`;\r\nconst _FrameSlider = styled.input<{\r\n    isEditable: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffd562ba;\r\n  width: calc(100% - 50px);\r\n  height: 20px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  ${props => props.isEditable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst _ImageItem = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #ffffffbc; */\r\n  width: 100%;\r\n  height: 50px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  /* border-radius: 4px; */\r\n  color: #000850;\r\n  text-align: center;\r\n  margin: 0 2px;\r\n  vertical-align: middle;\r\n  text-align: left;\r\n`;\r\n\r\nconst WND_SIZE = 50;\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    /* margin: 0 0 0 2px; */\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Img = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport { useContext, useMemo, useState, useRef } from \"react\";\r\nimport StoryUtil from \"../../../contents/create/launcher/util/storyUtil\";\r\nimport { FuseBean } from \"../../../contents/create/launcher/storyTab\";\r\n\r\nexport const FRAME_LINE_WIDTH = 107;\r\n\r\nconst FrameLine = (props: {\r\n    focus: number;\r\n    setFocus: (focus: number) => void;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n    const screenRate = store.env.screenRate;\r\n\r\n    const [startY, setStartY] = useState<null | number>(null);\r\n    const [startX, setStartX] = useState<null | number>(null);\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n\r\n    const frameRateJsxList = useMemo(() => {\r\n        if (ref.current == null) return <></>;\r\n        const clientWidth = ref.current.clientWidth - 10;\r\n        const clientHeight = ref.current.clientHeight - 10;\r\n        return fuseList.map((fuse, i) => {\r\n            let left: undefined | number = undefined;\r\n            const seed = props.seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n            const posXIndex = seed.args.findIndex(arg => arg.isPosX);\r\n            if (posXIndex !== -1) {\r\n                const arg = seed.args[posXIndex];\r\n                const min = arg.min as number;\r\n                const max = arg.max as number;\r\n                const range = max - min;\r\n                const val = Number(fuse.values[posXIndex]) - min;\r\n                const rate = val / range;\r\n                left = Math.floor(clientWidth * rate);\r\n            }\r\n            const top = Math.floor(fuse.frame / limitFrame * clientHeight);\r\n            return <_FrameRate key={i}\r\n                isCurr={i === props.focus}\r\n                top={top}\r\n                left={left}\r\n            />\r\n        });\r\n    }, [fuseList, props.focus]);\r\n\r\n    const putAction = (x: number, y: number) => {\r\n        if (props.focus === -1) return;\r\n        setStartY(y);\r\n        setStartX(x);\r\n    }\r\n\r\n    const moveAction = (x: number, y: number) => {\r\n        if (startY == null || startX == null || ref.current == null) return;\r\n        const clientHeight = ref.current.clientHeight - 10;\r\n        const fuse = fuseList[props.focus];\r\n\r\n        // フレームの移動\r\n        const rate = limitFrame / clientHeight * 2;\r\n        // console.log('read ' + start);\r\n        fuse.frame += Math.floor((y - startY)/screenRate * rate);\r\n        if (fuse.frame < 0) fuse.frame = 0;\r\n        else if (fuse.frame > limitFrame) fuse.frame = limitFrame;\r\n        const prevFocusSeq = fuseList[props.focus].seq;\r\n        fuseList.sort((a, b) => a.frame - b.frame);\r\n        const nowFocusSeq = fuseList[props.focus].seq;\r\n        if (prevFocusSeq !== nowFocusSeq) {\r\n            props.setFocus(fuseList.findIndex(fuse => fuse.seq === prevFocusSeq) as number);\r\n        }\r\n\r\n        // X座標の移動\r\n        const seed = props.seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n        const posXIndex = seed.args.findIndex(arg => arg.isPosX);\r\n        if (posXIndex !== -1) {\r\n            const arg = seed.args[posXIndex];\r\n            const min = arg.min as number;\r\n            const max = arg.max as number;\r\n            const range = max - min;\r\n            const clientWidth = (ref.current as HTMLDivElement).clientWidth - 10;\r\n            const rate = range / clientWidth * 2;\r\n            let value = Number(fuse.values[posXIndex]);\r\n            value += Math.floor((x - startX)/screenRate * rate);\r\n            // 範囲外に出た場合\r\n            if (value < min) value = min;\r\n            else if (value > max) value = max;\r\n            fuse.values[posXIndex] = value.toString();\r\n            setStartX(x);\r\n        }\r\n\r\n        storyData.fuseList = fuseList.slice();\r\n        setStartY(y);\r\n        // console.log('set ' + start);\r\n        dispatcher.updateStore();\r\n    }\r\n\r\n    const releaseAction = () => {\r\n        setStartY(null);\r\n        setStartX(null);\r\n    }\r\n\r\n    return (\r\n        <_FrameLineDiv ref={ref}\r\n            isEdit={startY != null}\r\n            onMouseDown={(e) => { putAction(e.clientX, e.clientY) }}\r\n            onMouseMove={(e) => { moveAction(e.clientX, e.clientY) }}\r\n            onMouseUp={releaseAction}\r\n            onMouseLeave={releaseAction}\r\n            onTouchStart={(e) => { putAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n            onTouchMove={(e) => { moveAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n            onTouchEnd={releaseAction}\r\n            onTouchCancel={releaseAction}\r\n        >\r\n            {frameRateJsxList}\r\n        </_FrameLineDiv>\r\n    );\r\n}\r\n\r\nexport default FrameLine;\r\n\r\n\r\n\r\nconst _FrameLineDiv = styled.div<{\r\n    isEdit: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${FRAME_LINE_WIDTH}px;\r\n  height: calc(100% - 36px);\r\n  background-color: #5995a790;\r\n  ${props => !props.isEdit ? '' : css`\r\n    background-color: #85b9c990;\r\n  `}\r\n  border: 1px solid #5a0000b8;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  vertical-align: top;\r\n  margin-top: 36px;\r\n`;\r\n\r\nconst _FrameRate = styled.div<{\r\n    isCurr: boolean;\r\n    top: number;\r\n    left?: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  left: 0;\r\n  top: ${props => props.top}px;\r\n  width: 100%;\r\n  ${props => props.left == undefined ? '' : css`\r\n      width: 10px;\r\n      left: ${props.left}px;\r\n  `}\r\n  height: 10px;\r\n  background-color: #627cc5;\r\n  border-radius: 4px;\r\n  border: 1px solid #00000061;\r\n  box-sizing: border-box;\r\n  ${props => !props.isCurr ? '' : css`\r\n      background-color: #e20000;\r\n      z-index: 10;\r\n  `}\r\n`;","import { useContext, useMemo, useState, useEffect } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport FuseList from \"./fuseList\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport StoryUtil from \"../../../contents/create/launcher/util/storyUtil\";\r\nimport FuseMainteDialog from \"./fuseMainteDialog\";\r\nimport { FuseBean } from \"../../../contents/create/launcher/storyTab\";\r\nimport LogicUtil from \"../../../contents/create/factory/util/logicUtil\";\r\nimport LogicElementUtil from \"../../../contents/create/factory/util/logicElementUtil\";\r\nimport BuildUtil from \"../../../contents/create/preview/buildUtil\";\r\nimport { AiOutlineAppstoreAdd } from \"react-icons/ai\";\r\nimport { FaSortAmountDownAlt } from \"react-icons/fa\";\r\nimport { VscPreview } from \"react-icons/vsc\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\nimport { IoSave } from \"react-icons/io5\";\r\n\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport FrameLine, { FRAME_LINE_WIDTH } from \"./frameLine\";\r\nimport assert from \"assert\";\r\n\r\nconst SPEditStoryFrame = () => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [focus, setFocus] = useState<number>(-1);\r\n    const [isPreview, setPreview] = useState<boolean>(false);\r\n    // const [seedId, setSeedId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [presetIndex, setPresetIndex] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [interval, setInterval] = useState<FormUtil.CheckableValue>({ value: '30', errors: [] });\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const [seedList, presetList]: [FuseBean[], StoryUtil.PresetBean[]] = useMemo(() => {\r\n        // if (store.libraryData == null) throw assert('store.libraryDataがnullです。');\r\n        assert(store.libraryData != null);\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        const seedWrapList = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n\r\n        const seedList: FuseBean[] = [];\r\n        const presetList: StoryUtil.PresetBean[] = [];\r\n        seedWrapList.forEach(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n\r\n            // 引数リストを取得\r\n            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const args = argMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n\r\n            // フォームグループリストを取得\r\n            const groupMng = LogicElementUtil.getInnerWrap(wrap, 'interface-mng', 'formgrp-mng');\r\n            let formgrps: LogicUtil.NodeFromGrpItem[] = [];\r\n            if (groupMng != null) {\r\n                formgrps = (groupMng.data as LogicUtil.NodeFromgrpManager).defines.map(wrap => wrap.data as LogicUtil.NodeFromGrpItem);\r\n            }\r\n\r\n            // プリセットリストを取得\r\n            const sampleMng = LogicElementUtil.getInnerWrap(wrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n            const presets = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n            seedList.push({\r\n                name: seed.name,\r\n                disp: seed.disp,\r\n                args, formgrps, presets\r\n            });\r\n\r\n            presets.forEach(preset => {\r\n                const dispName = (seed.disp ?? seed.name) + ': ' + preset.name;\r\n                presetList.push({\r\n                    seedId: seed.name,\r\n                    dispName,\r\n                    values: preset.values\r\n                });\r\n            });\r\n        });\r\n        return [seedList, presetList];\r\n    }, [store.libraryData]);\r\n\r\n    useEffect(() => {\r\n        const isLoad = fuseList.length > 0 && store.fuseCacheList.length === 0;\r\n        if (!isLoad) return;\r\n        fuseList.forEach(fuse => {\r\n            const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n            store.fuseCacheList.push(cache);\r\n            dispatcher.story.updateCache(fuse, cache);\r\n        });\r\n        storyData.fuseList = fuseList.slice();\r\n        dispatcher.updateStore();\r\n    }, [fuseList, store.fuseCacheList]);\r\n\r\n    const getNewFuseProps = (): {\r\n        newSeq: number;\r\n        newFrame: number;\r\n    } => {\r\n        const newSeq = fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n        const newFrame = fuseList.length === 0 ? 0 : fuseList[fuseList.length - 1].frame + Number(interval.value);\r\n        return { newSeq, newFrame };\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"left\"\r\n            isIconButton\r\n            buttons={[\r\n                {\r\n                    label: 'Preview',\r\n                    width: 140,\r\n                    icon: <VscPreview />,\r\n                    isEnable: fuseList.length > 0,\r\n                    callback: () => {\r\n                        fuseList.sort((a, b) => {\r\n                            return a.frame - b.frame;\r\n                        });\r\n                        storyData.fuseList = fuseList.slice();\r\n                        // dispatcher.updateStore();\r\n                        setPreview(true);\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Save',\r\n                    width: 140,\r\n                    icon: <IoSave />,\r\n                    callback: () => {\r\n                        alert('仕様検討中');\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"fuse\"\r\n            height={660}\r\n            backgroundColor=\"#c9d4dd\"\r\n            innerJsx={<>\r\n                <_SeedDiv>\r\n                    <FormUtil.ButtonItem\r\n                        button={\r\n                            {\r\n                                label: 'Add',\r\n                                width: 100,\r\n                                icon: <AiOutlineAppstoreAdd />,\r\n                                callback: () => {\r\n                                    if (presetIndex.value === '') {\r\n\r\n                                        store.system.dialog = <FuseMainteDialog\r\n                                            focus={-1}\r\n                                            seedList={seedList}\r\n                                            cancelAction={() => {\r\n                                            }}\r\n                                            modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                            }}\r\n                                        />;\r\n                                        setStore({ ...store });\r\n                                    } else {\r\n                                        const preset = presetList[Number(presetIndex.value)];\r\n                                        console.log(preset);\r\n                                        const seedId = preset.seedId;\r\n                                        const seed = seedList.find(seed => seed.name === seedId) as FuseBean;\r\n                                        const newFuseProps = getNewFuseProps();\r\n                                        const fuse: StoryUtil.Fuse = {\r\n                                            seq: newFuseProps.newSeq,\r\n                                            frame: newFuseProps.newFrame,\r\n                                            seedId: '',\r\n                                            values: []\r\n                                        };\r\n                                        const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n\r\n                                        fuseList.push(fuse);\r\n                                        store.fuseCacheList.push(cache);\r\n\r\n                                        fuse.seedId = seedId;\r\n                                        fuse.dispName = seed.disp;\r\n                                        fuse.values = preset.values.slice();\r\n                                        dispatcher.story.updateCache(fuse, cache);\r\n                                        (store.storyData as StoryUtil.StoryData).fuseList = fuseList.slice();\r\n                                        store.system.dialog = null;\r\n                                        dispatcher.updateStore();\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        }\r\n                    />\r\n                    <_FormDiv>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Preset\"\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={presetIndex}\r\n                                    setCheckable={setPresetIndex}\r\n                                    list={presetList.map((preset, i) => {\r\n                                        return { value: i.toString(), labelText: preset.dispName }\r\n                                    })}\r\n                                    headBlank\r\n                                    width={340}\r\n                                // validates={\r\n                                //     [\r\n                                //         {\r\n                                //             checker: (value) => ValidateUtil.checkRequired(value),\r\n                                //             errorType: \"required\"\r\n                                //         }\r\n                                //     ]\r\n                                // }\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Interval\"\r\n                            jsx={\r\n                                <FormUtil.TextField\r\n                                    width={100}\r\n                                    isNumber\r\n                                    checkable={interval}\r\n                                    setCheckable={setInterval}\r\n                                    validates={[\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        },\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                            errorType: \"value\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            }\r\n                        />\r\n                    </_FormDiv>\r\n                </_SeedDiv>\r\n                <_MainDiv>\r\n                    <FrameLine\r\n                        focus={focus}\r\n                        setFocus={setFocus}\r\n                        seedList={seedList}\r\n                    />\r\n                    <_FuseListFrame>\r\n                        <FuseList\r\n                            focus={focus}\r\n                            setFocus={setFocus}\r\n                            seedList={seedList}\r\n                        />\r\n                    </_FuseListFrame>\r\n                </_MainDiv>\r\n            </>}\r\n        />\r\n        {!isPreview ? <></> : <BuildUtil.BuildFrame closeAction={() => {\r\n            setPreview(false);\r\n        }} />}\r\n    </>);\r\n}\r\n\r\nexport default SPEditStoryFrame;\r\n\r\n\r\nconst _SeedDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 84px;\r\n  /* background-color: #be97ca; */\r\n  vertical-align: top;\r\n`;\r\nconst _FormDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 492px;\r\n  vertical-align: top;\r\n  /* background-color: #09fc3e; */\r\n  margin: 0 0 0 4px;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: calc(100% - 84px);\r\n  /* background-color: #c2ca97; */\r\n`;\r\n\r\nconst _FuseListFrame = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: calc(100% - ${FRAME_LINE_WIDTH}px);\r\n  height: 100%;\r\n  /* background-color: #f80707; */\r\n  vertical-align: top;\r\n`;","import styled from \"styled-components\";\r\nimport PublishFrame from \"../../contents/home/publishFrame\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport SPManageFrame from \"./sPManageFrame\";\r\nimport SPEditStoryFrame from \"./edit/sPEditStoryFrame\";\r\nimport { GlobalContext } from \"../../contents/entry/systemEntry\";\r\n\r\nconst SPCreateChannel = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isEdit, setEdit] = useState<boolean>(false);\r\n    const hasData = store.libraryData != null;\r\n\r\n    return (<>\r\n        <FormUtil.Record jsx={<>\r\n            <FormUtil.SwitchTwoFace\r\n                label1=\"Manage\"\r\n                label2=\"Story\"\r\n                rate1={50}\r\n                rate2={50}\r\n                isUse={isEdit}\r\n                width={350}\r\n                isEditable={hasData}\r\n                callback={() => {\r\n                    setEdit(!isEdit);\r\n                }}\r\n            />\r\n        </>} />\r\n        <_MainDiv>\r\n            {!isEdit ? <SPManageFrame setEdit={setEdit} /> : <SPEditStoryFrame />}\r\n        </_MainDiv>\r\n    </>);\r\n}\r\n\r\nexport default SPCreateChannel;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #9fc99e; */\r\n  width: 100%;\r\n  height: calc(100% - 40px);\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport DirectLinkManager from \"./directLinkManager\";\r\nimport DataUtil from \"../utils/dataUtil\";\r\nimport { SPUtil } from \"./spUtil\";\r\nimport { initialStore } from \"../redux/store/store\";\r\nimport Splash from \"../contents/entry/splash\";\r\nimport { ChannelPane } from \"../base/components/tab/channelPane\";\r\n\r\nimport { VscGitPullRequestCreate } from \"react-icons/vsc\";\r\nimport { AiFillHome } from \"react-icons/ai\";\r\nimport SPTotalHeader from \"./sPTotalHeader\";\r\nimport SPHomeChannel from \"./contents/sPHomeChannel\";\r\nimport GloballDialog from \"../contents/dialog/globalDialog\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../utils/systemConst\";\r\nimport SPCreateChannel from \"./contents/sPCreateChannel\";\r\nimport TotalHeader from \"../contents/entry/totalHeader\";\r\ntype ScreenBean = {\r\n    adjLeft: number;\r\n    adjTop: number;\r\n    rate: number;\r\n}\r\n\r\nconst SPRoot = (props: {\r\n}) => {\r\n    const [store, setStore] = useState(initialStore);\r\n\r\n    const [isPermit, setPermit] = useState(true);\r\n    const [screen, setScreen] = useState<ScreenBean>({ adjLeft: 0, adjTop: 0, rate: 1 });\r\n    const ref = useRef<null | HTMLDivElement>(null);\r\n\r\n    const splashJsx = !store.system.isSplash ? <></> : (\r\n        <_SplashDiv>\r\n            <Splash\r\n                remove={() => {\r\n                    store.system.isSplash = false;\r\n                    setStore({ ...store });\r\n                }}\r\n            />\r\n        </_SplashDiv>\r\n    );\r\n\r\n    const update = () => {\r\n        if (ref.current != null) {\r\n            // const [clientWidth, clientHeight] = [window.innerWidth, window.innerHeight];\r\n\r\n            const rect = ref.current.getBoundingClientRect();\r\n            const [clientWidth, clientHeight] = [rect.width, rect.height];\r\n\r\n            const cw = SPUtil.SCREEN_WIDTH;\r\n            const ch = SPUtil.SCREEN_HEIGHT;\r\n\r\n            const isFitSide = clientHeight / ch > clientWidth / cw;\r\n\r\n            const rate = !isFitSide ? clientHeight / ch : clientWidth / cw;\r\n            const adjLeft = !isFitSide ? clientWidth / 2 - (cw * rate / 2) : 0;\r\n            const adjTop = !isFitSide ? 0 : clientHeight / 2 - (ch * rate / 2);\r\n\r\n            setScreen({ adjLeft, adjTop, rate });\r\n            store.env.screenRate = rate;\r\n            setStore({...store});\r\n        }\r\n    }\r\n\r\n    // window.addEventListener('DOMContentLoaded', () => {\r\n    //     if (!isSmartPhone()) {\r\n    //         window.addEventListener('resize', update);\r\n    //     } else {\r\n    //         window.addEventListener('orientationchange resize', () => {\r\n    //             update();\r\n    //             setPermit(window.orientation === 0);\r\n    //         });\r\n    //     }\r\n    // });\r\n\r\n    // window.onorientationchange = () => {\r\n    //   setOrientation(window.orientation);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        store.system.isSPMode = true;\r\n        setStore({...store});\r\n        \r\n        update();\r\n        console.log(navigator.userAgent);\r\n        if (isSmartPhone()) {\r\n            setPermit(window.orientation === 0);\r\n        }\r\n        if (!isSmartPhone()) {\r\n            window.addEventListener('resize', () => {\r\n                update();\r\n            });\r\n        } else {\r\n            window.addEventListener('orientationchange resize', () => {\r\n                alert('change');\r\n                update();\r\n                setPermit(window.orientation === 0);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    let jsx = <_Error>Make your smartphone vertical!</_Error>;\r\n    if (isPermit) {\r\n        jsx = (\r\n            <_Contents>\r\n                {splashJsx}\r\n                <GloballDialog />\r\n                <TotalHeader />\r\n                <_ChannelWrap>\r\n                    <ChannelPane\r\n                        isLandscape={false}\r\n                        tabElements={[\r\n                            { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <SPHomeChannel /> },\r\n                            { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <SPCreateChannel /> },\r\n                        ]}\r\n                        activeNo={1}\r\n                    // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n                    />\r\n                </_ChannelWrap>\r\n            </_Contents>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap ref={ref}>\r\n            <_Frame left={screen.adjLeft} top={screen.adjTop} rate={screen.rate}>\r\n                {jsx}\r\n            </_Frame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SPRoot;\r\n\r\nconst isSmartPhone = () => {\r\n    // UserAgentからのスマホ判定\r\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 10px);\r\n  height: calc(100% - 10px);\r\n  background-color: #9eadc9;\r\n  margin: 5px 0 0 5px; */\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst _ChannelWrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #dbdfe7;\r\n  width: 100%;\r\n  height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst _Frame = styled.div<{\r\n    left: number;\r\n    top: number;\r\n    rate: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: ${props => props.top}px;\r\n  left: ${props => props.left}px;\r\n  transform-origin: top left;\r\n  /* width: 100%;\r\n  height: 100%; */\r\n  transform: scale(${props => props.rate});\r\n`;\r\n\r\nconst _Contents = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${SPUtil.SCREEN_WIDTH}px;\r\n  height: ${SPUtil.SCREEN_HEIGHT}px;\r\n  background-color: #929292;\r\n`;\r\n\r\nconst _Error = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #750000;\r\n    color: white;\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _SplashDiv = styled.div`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: 50%;\r\n    top: 400px;\r\n    transform-origin: center;\r\n    transform: scale(0.7);\r\n`;","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport BuildUtil from \"../../contents/create/preview/buildUtil\";\r\nimport PreviewLauncherFrame from \"../../contents/create/preview/previewLauncherFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport { Store } from \"../store/store\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private setStore: (store: Store) => void;\r\n\r\n    constructor(store: Store, setStore: (store: Store) => void) {\r\n        this.store = store;\r\n        this.setStore = setStore;\r\n    }\r\n\r\n    public updateStore = () => {\r\n        this.setStore({ ...this.store });\r\n    }\r\n\r\n    public system = {\r\n        // setUserEnv: (userEnv: UserEnv) => {\r\n        // },\r\n    }\r\n    public story = {\r\n\r\n        /**\r\n         * プレビューオールダイアログを表示する\r\n         */\r\n        openPreviewAllDialog: () => {\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const minFrame = fuseList[0].frame;\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n            const sceens: string[] = [];\r\n            let useFrame: number = 0;\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    fuseList.some(def => {\r\n                        if (def.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                        } else if (def.frame > frame) return 1;\r\n                    });\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    useFrame = frame;\r\n                }\r\n            });\r\n            this.store.system.dialog = (\r\n                <PreviewLauncherFrame.Component\r\n                    sceens={sceens}\r\n                    frameCnt={useFrame}\r\n                />\r\n            );\r\n            this.updateStore();\r\n        },\r\n\r\n        /**\r\n         * プレビューソロダイアログを表示する\r\n         */\r\n        openPreviewSoloDialog: (focus: number) => {\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n            const sceens: string[] = [];\r\n            let useFrame: number = 0;\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    const def = fuseList[focus];\r\n                    if (frame === 0) {\r\n                        LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                    }\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    useFrame = frame;\r\n                }\r\n            });\r\n            this.store.system.dialog = (\r\n                <PreviewLauncherFrame.Component\r\n                    sceens={sceens}\r\n                    frameCnt={useFrame}\r\n                />\r\n            );\r\n            this.updateStore();\r\n        },\r\n\r\n\r\n        updateCache: (fuse: StoryUtil.Fuse, cache: StoryUtil.Cache) => {\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            \r\n            cache.thumbList = [];\r\n            cache.useFrame = 0;\r\n            const seedProps = LogicElementUtil.getSeedProperties(logicData, fuse.seedId);\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                doIterate: (frame, owner) => {\r\n                    if (frame === 0) {\r\n                        LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                    }\r\n\r\n                    const thumb = seedProps.thumbnailList.find(thumb => thumb.frame === frame);\r\n                    if (thumb != undefined) {\r\n                        const url = CanvasUtil.createURL(550, 550, (ctx) => {\r\n                            // パーティクルの描画\r\n                            owner.forEach(par => {\r\n                                par.draw(ctx);\r\n                            });\r\n                            ctx.save();\r\n                        });\r\n                        cache.thumbList.push({ name: thumb.name, url });\r\n                    }\r\n                },\r\n                doEnd: (frame) => {\r\n                    cache.useFrame = frame;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","import { createContext, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport MobileRoot from '../../sp/mobileRoot';\r\nimport PCRoot from './pCRoot';\r\nimport SPRoot from '../../sp/sPRoot';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport DataUtil from '../../utils/dataUtil';\r\nimport SystemConst from '../../utils/systemConst';\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    setStore: React.Dispatch<React.SetStateAction<Store>>;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    // const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const [store, setStore] = useState(initialStore);\r\n    const dispatcher = new Dispatcher(store, setStore);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    if (store.system.user == null) {\r\n        const login = localStorage.getItem(SystemConst.SESSTION_KEY_LOGIN);\r\n        if (login != null) {\r\n            (async () => {\r\n                const results = await DataUtil.findUserInfoSeq(login);\r\n                if (results.length > 0) {\r\n                    store.system.user = {\r\n                        seq: results[0].seq,\r\n                        id: results[0].id,\r\n                        password: results[0].password,\r\n                        email: results[0].email,\r\n                    };\r\n                    const resPrjList = await DataUtil.findUserProjectList(results[0].seq, store.system.isSPMode);\r\n                    store.cloud = {\r\n                        projects: resPrjList.map(res => ({\r\n                            source: res.source,\r\n                            type: res.type,\r\n                            name: res.name,\r\n                            seq: res.seq,\r\n                            lastmod: res.lastmod\r\n                        }))\r\n                    };\r\n                    setStore({ ...store });\r\n                }\r\n            })();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{ store, setStore, dispatcher }}>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <PCRoot />\r\n                </Route>\r\n                <Route path=\"/sp\" exact >\r\n                    <SPRoot />\r\n                </Route>\r\n                <Route path=\"/library\" exact >\r\n                    <MobileRoot hashKey={str} />\r\n                </Route>\r\n                <Route path=\"/story\" exact >\r\n                    <MobileRoot hashKey={str} />\r\n                </Route>\r\n            </Switch>\r\n        </GlobalContext.Provider>\r\n    );\r\n\r\n}","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport ValidateUtil from \"./validateUtil\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nnamespace FormUtil {\r\n\r\n    export type CheckableValue = {\r\n        value: string;\r\n        errors: ValidateUtil.ErrorType[];\r\n    }\r\n\r\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\r\n        let result = true;\r\n        checkables.forEach(checkable => {\r\n            if (checkable.errors.length > 0) {\r\n                result = false;\r\n                return 1;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    export const InputTextFormBak = (props: {\r\n        titleLabel?: string;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        isCenter?: boolean;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        marginTop?: number;\r\n        isReadOnly?: boolean;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const type = props.isPassword ?? false ? 'password' : 'text';\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency);\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\r\n                <_ItemnInputBak\r\n                    type={type}\r\n                    value={props.checkable.value}\r\n                    hasTitle={props.titleLabel != undefined}\r\n                    width={props.width}\r\n                    isCenter={props.isCenter ?? false}\r\n                    placeholder={props.placeholder}\r\n                    onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        props.checkable.value = value;\r\n                        props.checkable.errors = getErrors(value);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }}\r\n                    errorType={errors.length === 0 ? undefined : errors[0]}\r\n                    readOnly={props.isReadOnly}\r\n                />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n\r\n    export const Record = (props: {\r\n        isEnable?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    const DEFAULT_LABEL_WIDTH = 140;\r\n    export const FormRecord = (props: {\r\n        titleLabel?: string;\r\n        labelWidth?: number;\r\n        isEnabled?: boolean;\r\n        isVisible?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        const lablelWidth = props.labelWidth ?? DEFAULT_LABEL_WIDTH;\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnabled ?? true}\r\n                isVisible={props.isVisible ?? true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={lablelWidth}>{props.titleLabel}</_ItemnLabel>}\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FixedText = (props: {\r\n        value: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        marginLeft?: number;\r\n        isRecordItem?: boolean;\r\n    }) => {\r\n        let width: string | undefined = undefined;\r\n        if (props.isRecordItem) width = `calc(100% - ${DEFAULT_LABEL_WIDTH + 16}px)`;\r\n        if (props.width != undefined) width = props.width + 'px';\r\n        return (\r\n            <_FixedLabel width={width}>{props.value}</_FixedLabel>\r\n        );\r\n    }\r\n\r\n    export const TextField = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        isNumber?: boolean;\r\n        marginLeft?: number;\r\n        step?: number;\r\n    }) => {\r\n        const [isNaN, setNaN] = useState(false);\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        let type = props.isPassword ?? false ? 'password' : 'text';\r\n        if (props.isNumber ?? false) {\r\n            type = 'number';\r\n        }\r\n\r\n        const isEnabled = props.isEnabled ?? true;\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            if (!isEnabled) props.checkable.errors.length = 0;\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n        const step = props.step ?? 1;\r\n\r\n        return (\r\n            <_ItemnInput\r\n                type={type}\r\n                value={value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                step={step}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                    if (type === 'number') {\r\n                        setNaN(Number.isNaN(e.target.valueAsNumber));\r\n                    }\r\n                }}\r\n                onBlur={() => {\r\n                    if (type === 'number') {\r\n                        if (isNaN) props.checkable.value = ' ';\r\n                        else props.checkable.value = Number(value).toString();\r\n                        // console.log(`[${props.checkable.value}]`);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }\r\n                }}\r\n                errorType={!isEnabled || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            // isEnable={isEnable}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\r\n\r\n    export const Combobox = (props: {\r\n        list: ComboboxItemProps[];\r\n        headBlank?: boolean;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n        const headBlank = props.headBlank ?? false;\r\n        const list = props.list.slice();\r\n        if (headBlank) list.unshift({ value: '', labelText: '' });\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n\r\n        const isEnabled = props.isEnabled ?? true;\r\n        useEffect(() => {\r\n            // console.log('value: ' + props.checkable.value);\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            if (!isEnabled) props.checkable.errors.length = 0;\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        return (\r\n            <_ItemCombobox\r\n                value={props.checkable.value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    props.checkable.value = value;\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n\r\n                }}\r\n                errorType={!isEnabled || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            >{list.map((item, i) => {\r\n                return (\r\n                    <_Option key={i}\r\n                        value={item.value}\r\n                        disabled={item.isDisabled ?? false}\r\n                        isDisabled={item.isDisabled ?? false}\r\n                    >{item.labelText}</_Option>\r\n                );\r\n            })}</_ItemCombobox>\r\n        );\r\n    }\r\n\r\n    export const TextArea = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n    }) => {\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n\r\n        const isEnable = props.isEnabled ?? true;\r\n        return (\r\n            <_ItemnTextArea\r\n                value={value}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                }}\r\n                // errorType={!isEnable || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        label: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        icon?: JSX.Element;\r\n        interval?: number;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ButtonRecord = (props: {\r\n        buttons: ButtonProps[],\r\n        align?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        isIconButton?: boolean;\r\n        interval?: number;\r\n    }) => {\r\n        const align = props.align ?? 'right';\r\n        const interval = props.interval ?? 4;\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={align}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n                height={!props.isIconButton ? 40 : 68}\r\n            >\r\n                {props.buttons.map((button, i) => {\r\n                    if (button.icon == undefined) {\r\n                        return (\r\n                            <_Button\r\n                                key={i}\r\n                                isCenter={align === 'center'}\r\n                                isEnable={button.isEnable ?? true}\r\n                                width={button.width}\r\n                                interval={interval}\r\n                                onClick={button.callback}\r\n                            >{button.label}</_Button>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <_IconButton\r\n                                key={i}\r\n                                isCenter={align === 'center'}\r\n                                isEnable={button.isEnable ?? true}\r\n                                width={button.width}\r\n                                interval={interval}\r\n                                onClick={button.callback}\r\n                            >{button.icon}<br />{button.label}</_IconButton>\r\n                        );\r\n                    }\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const ButtonItem = (props: {\r\n        button: ButtonProps\r\n    }) => {\r\n        const button = props.button;\r\n        const interval = button.interval ?? 4;\r\n        if (button.icon == undefined) {\r\n            return (\r\n                <_Button\r\n                    isCenter={false}\r\n                    isEnable={button.isEnable ?? true}\r\n                    width={button.width}\r\n                    interval={interval}\r\n                    onClick={button.callback}\r\n                >{button.label}</_Button>\r\n            );\r\n        } else {\r\n            return (\r\n                <_IconButton\r\n                    isCenter={false}\r\n                    isEnable={button.isEnable ?? true}\r\n                    width={button.width}\r\n                    interval={interval}\r\n                    onClick={button.callback}\r\n                >{button.icon}<br />{button.label}</_IconButton>\r\n            );\r\n        }\r\n        // return (\r\n        //     <_Button\r\n        //         isCenter={false}\r\n        //         isEnable={props.button.isEnable ?? true}\r\n        //         width={props.button.width}\r\n        //         onClick={props.button.callback}\r\n        //     >{props.button.label}</_Button>\r\n        // );\r\n    }\r\n\r\n    export const Message = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const MessageLink = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        clickAction: () => void;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isLink={true}\r\n                    onClick={props.clickAction}\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        isDisable?: boolean;\r\n        height?: number;\r\n        backgroundColor?: string;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        // const title = props.title ?? 'title pl';\r\n        const isDisable = props.isDisable ?? false;\r\n        const isEnable = props.isEnable ?? true;\r\n        const backgroundColor = props.backgroundColor ?? '#cedadd';\r\n        return (<>\r\n            {isDisable ? <></> : <_BorderText>{props.title}</_BorderText>}\r\n            <_BorderPanel\r\n                isEnable={isEnable}\r\n                isDisable={isDisable}\r\n                height={props.height}\r\n                backgroundColor={backgroundColor}\r\n            >{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export const InfoFrame = (props: {\r\n        height?: number;\r\n        textRecords: string[];\r\n    }) => {\r\n        const height = props.height ?? 70;\r\n        const color = '#1a9900';\r\n        return (<>\r\n            <_InfoDiv height={height} color={color}>\r\n                {props.textRecords.map((text, i) => {\r\n                    return <span key={i}>{text}<br /></span>;\r\n                })}\r\n            </_InfoDiv>\r\n        </>);\r\n    };\r\n\r\n    export const Switch = (props: {\r\n        label: string;\r\n        isUse: boolean;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        isRelation?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isRelation = props.isRelation ?? false;\r\n        const callback = isRelation && props.isUse ? () => { } : props.callback;\r\n        return (\r\n            <_Switch\r\n                isRelation={isRelation}\r\n                isUse={props.isUse}\r\n                isEnable={props.isEnable ?? true}\r\n                width={props.width}\r\n                onClick={callback}\r\n            >{props.label}</_Switch>\r\n        );\r\n    }\r\n\r\n    export const SwitchTwoFace = (props: {\r\n        label1: string;\r\n        label2: string;\r\n        width: number;\r\n        rate1: number;\r\n        rate2: number;\r\n        isUse: boolean;\r\n        isEditable?: boolean;\r\n        isEnable?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isEnable = props.isEnable ?? true;\r\n        const isEditable = props.isEditable ?? true;\r\n        return (<_SwitchTwoFace\r\n            isEnable={isEnable}\r\n            isEditable={isEditable}\r\n            width={props.width}\r\n            onClick={props.callback}\r\n        >\r\n            <_SwitchItem\r\n                isUse={isEnable && !props.isUse}\r\n                rate={props.rate1}\r\n                isLeft={true}\r\n                isEditable={isEditable}\r\n            >{props.label1}</_SwitchItem>\r\n            <_SwitchItem\r\n                isUse={isEnable && props.isUse}\r\n                rate={props.rate2}\r\n                isLeft={false}\r\n                isEditable={isEditable}\r\n            >{props.label2}</_SwitchItem>\r\n        </_SwitchTwoFace>);\r\n    }\r\n\r\n    export const checkItems = (list: CheckableValue[]) => {\r\n        return list.find(item => item.errors.length > 0) == undefined;\r\n    }\r\n}\r\n\r\nexport default FormUtil;\r\n\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n    textAlign: 'left' | 'center' | 'right';\r\n    marginTop: number;\r\n    marginBottom: number;\r\n    height?: number;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    width: 100%;\r\n    height: ${props => props.height ?? '40'}px;\r\n    margin-top: ${props => props.marginTop}px;\r\n    margin-bottom: ${props => props.marginBottom}px;\r\n    /* background-color: #b3b4c4; */\r\n    /* border: 1px solid #000; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    text-align: ${props => props.textAlign};\r\n`;\r\n\r\nconst _ItemnLabel = styled.div<{\r\n    labelWidth?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.labelWidth}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #b4c0c7fa, #d8d8d8, #b4c0c7fa);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n`;\r\n\r\nconst _FixedLabel = styled.div<{\r\n    width?: string;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #0c0e86;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c51a;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n    overflow-x: hidden;\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width};\r\n    `}\r\n`;\r\n\r\nconst _ItemnInputBak = styled.input<{\r\n    readOnly?: boolean;\r\n    isCenter: boolean;\r\n    hasTitle: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${props => !props.hasTitle ? css`\r\n    ` : css`\r\n        width: calc(100% - 152px);\r\n    `}\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    margin-top: 2px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    /* ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    } */\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n    // isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemCombobox = styled.select<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n        pointer-events: none;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _Option = styled.option<{\r\n    isDisabled: boolean;\r\n}>`\r\n    ${props => !props.isDisabled ? '' : css`\r\n        color: #0000004b;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n    isLink?: boolean;\r\n    isCenter: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #002c52;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => !props.isLink ? '' : css`\r\n        color: #0459a3;\r\n        user-select: none;\r\n        text-decoration: underline;\r\n        &:hover {\r\n            color: #68a4d8;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n    interval: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #c0ced6, #ebebeb, #c0ced6);\r\n    border: 1px solid #829bad;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 ${props => props.interval}px;\r\n    ${props => !props.isCenter ? css<{ interval: number }>`\r\n        margin-left: ${props => props.interval}px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        /* background: linear-gradient(to bottom, #989898, #b4b4b4, #989898); */\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst _IconButton = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n    interval: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    height: 58px;\r\n    padding: 4px 0 0 0;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #c0ced6, #ebebeb, #c0ced6);\r\n    border: 1px solid #829bad;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 ${props => props.interval}px;\r\n    ${props => !props.isCenter ? css<{ interval: number }>`\r\n        margin-left: ${props => props.interval}px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        /* background: linear-gradient(to bottom, #989898, #b4b4b4, #989898); */\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isUse: boolean;\r\n    isEnable: boolean;\r\n    width?: number;\r\n    isRelation: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    color: #515151;\r\n    border: 1px solid #747474;\r\n    ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\r\n    ` : css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#ddc1d979' : '#d898b3'};\r\n        color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n    `}\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\r\n        ` : css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#d3a1cb79' : '#d898b3'};\r\n            color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _SwitchTwoFace = styled.div<{\r\n    isEnable: boolean;\r\n    isEditable: boolean;\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEditable ? '' : css`    \r\n        pointer-events: none;\r\n    `}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* opacity: 0.7; */\r\n    }\r\n`;\r\n\r\nconst _SwitchItem = styled.div<{\r\n    isUse: boolean;\r\n    rate: number;\r\n    isLeft: boolean;\r\n    isEditable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* line-height: 25px; */\r\n    border-top: 1px solid #747474;\r\n    border-bottom: 1px solid #747474;\r\n    text-align: ${props => props.isLeft ? css`\r\n        border-left: 1px solid #747474;\r\n    ` : css`\r\n        border-right: 1px solid #747474;\r\n    `};\r\n    text-align: ${props => props.isLeft ? 'right' : 'left'};\r\n    border-radius: ${props => props.isLeft ? '8px 0 0 8px' : '0 8px 8px 0'};\r\n    padding: 0 10px;\r\n    box-sizing: border-box;\r\n    background-color: #8fa2aa;\r\n    color: #515151;\r\n    font-size: 16px;\r\n    ${props => props.isEditable ? css`\r\n        ${!props.isUse ? '' : css`\r\n            color: #b30000;\r\n            font-size: 22px;\r\n            background-color: #dae7ec;\r\n        `}\r\n    ` : css`\r\n        ${!props.isUse ? '' : css`\r\n            color: #110070;\r\n            font-size: 22px;\r\n            background-color: #dae7ec;\r\n        `};\r\n    `}\r\n    vertical-align: top;\r\n    transition: background-color 0.3s;\r\n`;\r\n\r\nconst _BorderText = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: #990000;\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n    isDisable: boolean;\r\n    height?: number;\r\n    backgroundColor: string;\r\n}>`\r\n    display: inline-block;\r\n    ${props => !props.isDisable ? '' : css`\r\n        display: none;\r\n    `}\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    ${props => props.height == undefined ? '' : css`\r\n        height: ${props.height}px;\r\n    `}\r\n    background-color: ${props => props.backgroundColor};\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    margin: 4px 0 0 0;\r\n    display: inline-block;\r\n    background-color: #e7e5e561;\r\n    border: solid 1px #949494;\r\n    width: 100%;\r\n    height: ${props => props.height}px;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: ${props => props.color};\r\n    overflow-y: auto;\r\n`;\r\n\r\n\r\nconst _ItemnTextArea = styled.textarea<{\r\n\r\n}>`\r\n   display: inline-block;\r\n   width: 100%;\r\n   height: 100%;\r\n   background-color: #ebf5f5;\r\n   font-size: 18px;\r\n   color: black;\r\n   border: none;\r\n   resize: none;\r\n   box-sizing: border-box;\r\n`;","import zlib from \"zlib\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport { sha256 } from 'js-sha256';\r\nimport Hashids from 'hashids';\r\nimport { ProjectType, Store } from \"../redux/store/store\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport ConfirmDialog from \"../contents/dialog/confirmDialog\";\r\nimport StoryUtil from \"../contents/create/launcher/util/storyUtil\";\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5001';\r\n    export const DB_SERVER_DOMAIN = 'https://hkdev-db.glitch.me';\r\n    // export const DB_SERVER_DOMAIN = 'https://crud-server001.glitch.me';\r\n\r\n    // export const APP_SERVER_DOMAIN = 'http://localhost:4333';\r\n    export const APP_VERSION = 'v1.8.5';\r\n    export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/pf_apps/' + APP_VERSION;\r\n    // export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    const DATABASE_NAME = 'pf1';\r\n\r\n    const getUserHashBuilder = () => {\r\n        return new Hashids('pf-user', 8);\r\n    }\r\n\r\n    export const getHashedFromUserSeq = (seq: number) => {\r\n        const hashids = getUserHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\r\n        const hashids = getUserHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    const getScoreHashBuilder = () => {\r\n        return new Hashids('pf', 8);\r\n    }\r\n\r\n    export const getHashedFromProjectSeq = (seq: number) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedProjectSeq = (hashedSeq: string) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    export const getPreviewURL = (scoreSeq: number) => {\r\n        const hashedKey = getHashedFromProjectSeq(scoreSeq);\r\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql, databaseName: DATABASE_NAME })\r\n        }\r\n    }\r\n\r\n    export type SendMailParam = {\r\n        from: string,\r\n        to: string,\r\n        subject: string,\r\n        text: string\r\n    }\r\n\r\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(json)\r\n        }\r\n    }\r\n\r\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/mail',\r\n            createSendMailRequestInit(json)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserInfoList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\r\n        const results = await response.json();\r\n        return results as { id: string, email: string }[];\r\n    };\r\n\r\n    export const findUserIdList = async () => {\r\n        const results = await findUserInfoList();\r\n        return (results as { id: string }[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfoFromEmail = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserInfoFromSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoLogin = async (id: string, password: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoSeq = async (seq: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const getNextUserSeq = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\r\n        const results = await response.json();\r\n        const nextSeq = (results[0]['seq'] as number) + 1;\r\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\r\n\r\n        return nextSeq;\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findUserProjectList = async (userSeq: number, isSPMode: boolean) => {\r\n        const storyOnly = !isSPMode ? '' : `and type = 'story'`;\r\n        const response = await DataUtil.sendQueryRequestToAPI(\r\n            'select',\r\n            `SELECT owner, seq, type, name, source, lastmod FROM prjcttbl WHERE owner = ${userSeq} ${storyOnly}order by seq`\r\n        );\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const loadFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            store.fileHandle = fileHandle;\r\n            const text = DataUtil.unZip(fileContents);\r\n            const data = JSON.parse(text);\r\n            // シナリオであるかどうかの判定\r\n            if (!data.hasOwnProperty('scenarioData')) {\r\n                store.libraryData = data;\r\n            } else {\r\n                const scenarioProps = data as StoryUtil.ScenarioFileProps;\r\n                store.libraryData = scenarioProps.libraryData;\r\n                store.storyData = scenarioProps.scenarioData;\r\n            }\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Successfully file loaded!\" />;\r\n            setStore({ ...store });\r\n        })();\r\n    }\r\n\r\n    export const saveFileBak = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.libraryData as LogicUtil.WrapElement;\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        const plainData = JSON.stringify(rootData);\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const saveLibraryFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.libraryData as LogicUtil.WrapElement;\r\n        const plainData = JSON.stringify(rootData);\r\n        saveFile(store, setStore, plainData, 'plgc');\r\n    }\r\n\r\n    export const saveScenarioFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const data: StoryUtil.ScenarioFileProps = {\r\n            libraryData: store.libraryData as LogicUtil.WrapElement,\r\n            scenarioData: store.storyData as StoryUtil.StoryData\r\n        }\r\n        const plainData = JSON.stringify(data);\r\n        saveFile(store, setStore, plainData, 'pstr');\r\n    }\r\n\r\n    export const saveFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>, plainData: string, extension: string) => {\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': [`.${extension}`],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const getSHA256Hash = (original: string) => {\r\n        return sha256(original);\r\n    }\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n\r\n    export const getDirectUrl = (type: ProjectType, seq: number) => {\r\n        return `${APP_SERVER_DOMAIN}/#/${type}?v=${getHashedFromProjectSeq(seq)}`;\r\n    }\r\n}\r\n\r\nexport default DataUtil;"],"sourceRoot":""}