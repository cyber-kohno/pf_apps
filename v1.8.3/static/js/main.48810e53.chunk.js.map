{"version":3,"sources":["system/base/design/styles.tsx","system/contents/dialog/confirmDialog.tsx","App.tsx","reportWebVitals.ts","index.tsx","system/redux/store/store.tsx","system/base/components/tab/tabbedPane.tsx","system/utils/systemConst.tsx","system/utils/canvasUtil.tsx","system/contents/graphic/particle.tsx","system/contents/graphic/drawUtil.tsx","system/contents/graphic/vectorUtil.tsx","system/contents/create/factory/util/paramUtil.tsx","system/contents/create/preview/modulateBuilder.tsx","system/contents/create/preview/previewUtil.tsx","system/utils/form/validateUtil.tsx","system/utils/treeUtil.tsx","system/contents/create/factory/detail/common/modifyOperations.tsx","system/contents/create/factory/logicMainteTab.tsx","system/contents/create/factory/detail/logic/editorArgumentMng.tsx","system/contents/create/factory/dialog/sendTemplateDialog.tsx","system/contents/create/factory/detail/logic/editorArgumentItem.tsx","system/contents/create/factory/detail/seed/editorSeedMng.tsx","system/contents/create/factory/detail/logic/editorLogicMng.tsx","system/contents/create/factory/detail/logic/editorLogicItem.tsx","system/contents/create/factory/detail/logic/editorParamItem.tsx","system/contents/create/factory/detail/logic/editorBehiviorMng.tsx","system/contents/create/factory/detail/logic/editorVisualMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnector.tsx","system/contents/create/factory/util/drawableVectorChooser.tsx","system/contents/create/factory/detail/logic/editorSendManager.tsx","system/contents/create/factory/detail/logic/editorFieldMng.tsx","system/contents/create/factory/detail/logic/editorExtendMng.tsx","system/contents/create/factory/detail/seed/editorSeedItem.tsx","system/contents/create/factory/detail/seed/editorThumbnailMng.tsx","system/contents/create/factory/detail/seed/editorThumbnailItem.tsx","system/contents/create/factory/util/logicFormUtil.tsx","system/contents/create/factory/util/logicUtil.tsx","system/contents/create/factory/detail/seed/editorSampleItem.tsx","system/contents/create/factory/detail/seed/editorSampleMng.tsx","system/contents/create/factory/detail/seed/editorInterfaceManager.tsx","system/contents/create/factory/detail/seed/editorSeedArgMng.tsx","system/contents/create/factory/detail/seed/editorSeedArgItem.tsx","system/contents/create/factory/detail/seed/editorSeedSendMng.tsx","system/contents/create/factory/detail/seed/editorFormgrpItem.tsx","system/contents/create/factory/detail/seed/editorFormgrpMng.tsx","system/contents/create/factory/util/logicElementUtil.tsx","system/sp/spUtil.tsx","system/contents/create/preview/inputForm/previewLogicInputForm.tsx","system/contents/create/preview/inputForm/previewSeedInputForm.tsx","system/contents/create/preview/previewLauncherFrameSp.tsx","system/contents/create/preview/buildUtil.tsx","system/contents/create/preview/previewLogicFrame.tsx","system/contents/create/preview/previewLauncherFrame.tsx","system/contents/create/manage/nameDefDialog.tsx","system/sp/directLinkManager.tsx","system/sp/mobileRoot.tsx","system/contents/dialog/globalDialog.tsx","system/contents/dialog/accountFrame.tsx","system/contents/dialog/login/loginCreateAccount.tsx","system/contents/dialog/login/loginLogin.tsx","system/contents/dialog/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/base/components/tab/channelPane.tsx","system/contents/create/launcher/tab/storyFuseAnalysis.tsx","system/contents/create/launcher/tab/storyProperty.tsx","system/contents/create/launcher/tab/storyEnvironment.tsx","system/contents/create/launcher/timelineFrame.tsx","system/contents/create/launcher/storyTab.tsx","system/contents/create/manage/newProjectDialog.tsx","system/contents/create/manage/newProjectDialogStoryOnly.tsx","system/sp/contents/etc/shareDialog.tsx","system/contents/create/manage/manageTab.tsx","system/contents/create/createChannel.tsx","system/contents/home/publishFrame.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/pCRoot.tsx","system/sp/contents/sPHomeChannel.tsx","system/sp/contents/sPManageFrame.tsx","system/sp/contents/edit/fuseMainteDialog.tsx","system/sp/contents/edit/fuseList.tsx","system/sp/contents/edit/frameLine.tsx","system/sp/contents/edit/sPEditStoryFrame.tsx","system/sp/contents/sPCreateChannel.tsx","system/sp/sPRoot.tsx","system/redux/dispatcher/dispatcher.tsx","system/contents/entry/systemEntry.tsx","system/utils/form/formUtiil.tsx","system/utils/dataUtil.tsx"],"names":["Styles","_Styles","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","FONT_LARGE","css","_templateObject7","_taggedTemplateLiteral","CSS_LABEL_SMALL","_templateObject8","CSS_LABEL_MIDIUM","_templateObject9","CSS_BUTTON_DISABLE","_templateObject10","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","ConfirmDialog","Component","props","_props$width","_props$height","_props$buttons","_useContext","useContext","GlobalContext","store","setStore","width","height","buttons","label","callback","system","dialog","_objectSpread","_jsxs","_Frame","children","_jsx","_Main","_Inner","message","split","map","msg","i","FormUtil","Message","isCenter","ButtonRecord","align","App","useEffect","document","oncontextmenu","onkeydown","e","ctrlKey","includes","key","SystemEntry","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","getElementById","ProjectTypes","initialStore","isSplash","user","canDialogClose","isSPMode","logoutActions","env","isEditLibrary","isUseLocalFile","screenRate","scrollLock","libraryData","storyData","fuseCacheList","cloud","fileHandle","TabbedPane","_props$tabRecordNum","_useState","useState","activeNo","_useState2","_slicedToArray","setActiveNo","tabRecordNum","_Fragment","_LabelList","tabElements","tab","index","TabLabel","name","isActive","isEnable","enable","selectTab","undefined","selectTabIndex","_ContList","TabContents","cont","_TabLabel","onClick","_Contents","SystemConst","AUTH_TEXT_WIDTH","_SystemConst","AUTH_TEXT_HEIGHT","SESSTION_KEY_LOGIN","CanvasUtil","_CanvasUtil","createURL","draw","canvas","createElement","ctx","getContext","toDataURL","getLogoURL","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillStyle","fillText","adjust","measureText","save","getAuthTextURL","text","WIDTH","SIZE","rotate","Math","PI","length","char","charAt","fontRand","random","alphaRand","concat","Instance","_createClass","_this","_classCallCheck","owner","pos","prevPos","vec","frame","limit","isLive","drawer","extend","update","x","xy","y","forEach","this","_Particle","Particle","_DrawUtil","createGradDrawer","param","_param$radius","radiusBase","radius","self","_convertRgbaFromColor","flashAppearFrame","appearFrame","unitFrame","flashHideFrame","shrinkStartRate","start","floor","g","createRadialGradient","grads","rgba","convertRgbaFromColorCode","color","r","b","a","push","offset","convertColorCodeFromRgba","grad","addColorStop","globalAlpha","disappearStartRate","beginPath","arc","fill","code","value","Number","parseInt","substring","r1","g1","b1","a1","toString","slice","toWhite","rate","DrawUtil","Vector","rad","len","syncFromXY","sqrt","atan2","syncFromRad","cos","sin","_VectorUtil","VectorUtil","VisualParamType","_ParamUtil","VisualParams","Object","values","BehaviorParamType","BehaviorParams","SelfParamType","SelfParams","ExtendParamType","ExtendParams","EffectParamType","EffectParams","ModulateParamType","ModulateParams","ConstantType","Constants","ParamUtil","ModulateBuilder","build","extendList","decayRate","decayLimit","gravity","gravityLimit","PreviewUtil","_PreviewUtil","SCREEN_WIDTH","SCREEN_HEIGHT","searchElement","buildLogicProps","origin","rootData","initialValueMapList","initailArrayMapList","console","log","createParticleRec","cur","parentValueMapList","parentArrayMapList","_searchElement","_searchElement2","valueMapList","ConstantValueMap","arr","array","fieldMng","mngs","data","fields","field","paramItem","convertFormulaToValue","visualParams","params","behaviorParams","getVisualParam","convertParamsToValue","getBehaviorParam","LIMIT","POS_X","POS_Y","find","VEC_X","VEC_Y","VEC_RAD","VEC_LEN","connectMng","inherits","connect","_connector$disable","_searchElement3","connector","disable","logicItem","method","wrap","logicMng","defs","def","searchDependLogic","depend","_convertParamsToBoole","addValueMap","item","FRAME","itrfldValueMap","loopCnt","extendParams","loopCntVal","LOOP_COUNT","convertParamsToBoolean","INVOKE","_loop","_searchElement4","iterateValueMap","LOOP_ITERATE","iterateArrayMap","_arr$array$i","sendValueMapList","filter","isArray","_convertParamsToValue","sendArrayMapList","_convertParamsToArray","convertParamsToArray","DECAY_LIMIT","DECAY_RATE","GRAVITY_VAL","GRAVITY_LIMIT","RADIUS","colorR","COLOR_R","colorG","COLOR_G","colorB","COLOR_B","colorA","COLOR_A","disappearStart","DISAPPEAR_START","shrinkStart","SHRINK_START","FLASH_APPEAR_FRAME","FLASH_HIDE_FRAME","type","warpList","_warpList$find","formula","v","valueMap","m","formulaStr","varCnt","formulaItems","str","convertFormulaToBoolean","arrayMapList","RADIAN_ROUND","ValidateUtil","_ValidateUtil","checkRequired","checkStringLength","min","max","checkAsciiChars","checkIncludesChars","list","ch","indexOf","checkNumber","isNaN","checkNumberRange","num","checkAll","conditions","result","checkArrayNumber","TreeUtil","_TreeUtil","createNode","parent","depth","isOpen","getChildIndex","node","parentNode","Frame","_props$isDisable","_props$focusNode","isDisable","focusNode","ref","useRef","buildElementNodeFromData","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","jsxList","useMemo","buildJsxRecords","element","spaceList","isCurrent","_Record","current","scrollWidth","isRelation","tempNode","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","clickEvent","onDoubleClick","getLabelJsx","invalidate","_Wrap","ModifyOperations","_templateObject11","_templateObject12","FactoryTreeContext","createContext","LogicMainteTab","setFocusNode","_useState3","_useState4","isModify","setModify","_useState5","_useState6","setInvalidate","LogicUtil","getChildrenDataNode","masterNode","openPreviewDialog","PreviewLogicFrame","master","closeButtonAction","tabIndex","onKeyDown","n","_TreeDiv","_TreeHead","_TreeBody","getNodeDisplayJsx","_PropsDiv","_DetailDiv","_DetailHeader","_DetailHeaderLabel","getTypeName","Provider","setRootData","removeSelf","_node$parent","_node$parent2","_node$parent3","splice","parentWrap","listName","LogicElementUtil","getListParamName","_DetailMainDiv","getDetailComponent","EditorArgumentMng","isVisible","BorderPanel","title","innerJsx","newNode","addChild","_props$isInputOK","isComplete","isCompleteCheck","checkableFields","mappingForm","isInputOK","firstRegist","modifyRegist","SendTemplateDialog","EditorArgumentItem","_useContext2","logicNode","errors","setName","argType","setArgType","reservedList","_node$parent2$parent","getParamNameList","valueType","syncArgumentAdd","prevName","syncArgumentName","FormRecord","titleLabel","jsx","TextField","isReadOnly","checkable","setCheckable","validates","checker","errorType","checkFieldName","Combobox","ArgTypes","labelText","headBlank","refers","getArgumentRefers","syncArgumentDel","getSwapButtons","argName","searchVariableReferInFormula","varItem","newName","syncFormula","mng","visualMng","behaviorMng","inhMng","inh","_LogicElementUtil$get","_LogicElementUtil$get2","inhfld","getInnerWrap","syncParamName","_logicNode$parent","runRec","logic","conn","inhLogic","getInnerWrapFixed","sendMng","seedMng","interfaceWrap","_logicNode$parent2","connWrap","syncArgumentCallback","_logicNode$parent3","inhMngNode","getInnerNodeFixed","seedNode","interfaceNode","sendNode","entry","newArgName","paramWrap","createParamWrap","delArgName","delIndex","some","EditorSeedMng","itemWrap","EditorLogicMng","EditorLogicItem","_useMemo","el","_useMemo2","isConnect","hasArgNode","hasFieldNode","hasConnectNode","existNameList","getExistNameList","toggleElement","hasNode","listPos","wrapElement","removeChild","insertChild","getDefaultLogicMngs","syncLogicName","Record","textAlign","Switch","isUse","argumentNode","getInnerNode","hasArgument","args","fieldNode","hasField","inheritNode","hasInherit","getReplicateButton","getLocgicRefers","logicName","searchLogicReferInherit","id","logicMngNode","Level","EditorParamItem","setFormulaItems","varFormList","setVarFormList","isField","isCondition","inputType","level","FIELD","INITIAL","INHERIT_FIELD","INHERIT_EXTEND","INHERIT_SEND","SEED","argumentList","arrayArgList","fieldKeys","parentType","_getLogicNode","_node$parent4","_node$parent4$parent","_node$parent4$parent$","getLogicNode","argMng","arg","fieldName","_node$parent5","Error","_node$parent6","inhfldNode","_node$parent7","fieldKeyList","paramNameList","_node$parent8","_node$parent8$parent","addNum","delNum","parenthesisBalance","formJsxList","labelWidth","marginTop","ParamInputTypes","marginLeft","isNumber","getValueForm","isLastVar","isFormulaOK","hasFormError","varForm","getFormulaItem","syncFieldName","_Formula","isInvalid","_Var","_Sig","getFormulaJsx","getFieldRefers","mngNode","_mngNode$parent","_mngNode$parent2","_LogicElementUtil$get3","_LogicElementUtil$get4","inheritWrap","span","EditorBehiviorMng","isVector","hasDecayParam","hasGravityParam","exchangeVectorMethod","flag","trueParamElements","falseParamElements","size","exchangeElements","toggleElements","paramElements","EditorVisualMng","drawMethod","THICKNESS","hasDisappearParam","hasShrinkParam","hasFlashParam","EditorInheritConnMng","EditorInheritConnector","_disable","identify","setIdentify","setMethod","setDepend","defaultName","getNumberingOnPrefixName","isCreate","logicList","idList","initConnectorNode","syncTreeElementFromWrap","_newNode$parent","initSendParams","sendParamList","_sendNode$parent","dependItem","argWrap","getSendParamList","curParamList","isChange","ConnectTypes","isEnabled","dependency","dependLogic","inherit","newWrap","JSON","parse","stringify","getChildrenElementNode","rootNode","clone","_SendTemplateDialog","COMPONENT_WIDTH","ConnectParentPosition","xName","setXName","yName","setYName","_props$node$parent","checkItems","argNode","behaviorNode","setParamValue","prpName","targetParam","SetParentPosition","_useState7","_useState8","paramList","xParam","yParam","DrawableVectorChooser","EditorSendManager","isDepend","EditorFieldMng","EditorExtendMng","hasLoopParam","hasInvokeParam","EditorSeedItem","disp","setDisp","setEntry","permit","setPermit","_param$disp","logicNameList","seed","items","samples","PermitTypes","EditorThumbnailMng","LogicTreeContext","WND_SIZE","EditorThumbnailItem","_node$parent$parent","seedWrap","setFrame","urls","setUrls","setTimeout","sample","getThumbnailURL","targetFrame","sampleNo","frameCnt","_node$parent3$parent","argMap","sendParams","send","_PreviewUtil$convertP","getSeedValueMap","_LogicElementUtil$get5","_PreviewUtil$convertP2","getSeedArrayMap","par","_ret","pictureJsxList","_LogicElementUtil$get6","imgJsx","_IMG","src","_SampleDiv","_SampleName","_CanvasDiv","img","FRAME_WIDTH","isDraw","setDraw","pointJsxList","xList","yList","_Point","putAction","clientRect","getBoundingClientRect","posX","posY","addPoint","moveAction","subX","subY","releaseAction","FixedText","isRecordItem","onMouseDown","clientX","clientY","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","touches","pageX","pageY","onTouchMove","onTouchEnd","onTouchCancel","_Center","clear","LogicFormUtil","buildPreviewForms","formgrpList","formList","setFormList","usedGrps","form","argument","formgrp","grp","targetForms","j","colorCode","_Message","_Type","_Range","formIndex","_Color","disabled","onChange","target","xValue","yValue","join","labelName","step","_Tsumami","input","EditorSampleItem","paramForms","setParamForms","argInfoList","formgrpMng","defines","seedargList","defval","EditorSampleMng","EditorInterfaceManager","argMngNode","sendMngNode","sampleMngNode","hasGroupNode","execute","removeChildAll","newArgWrap","groupMngNode","hasGroup","EditorSeedArgMng","EditorSeedArgItem","setMin","setMax","_useState9","_useState10","setStep","_useState11","_useState12","setDefval","_useState13","_useState14","isPosX","setPosX","_useState15","_useState16","setArray","_param$isPosX","_param$isArray","curIndex","getCurrentIndex","getSwapButtonsCallback","isUpper","sampleMng","swapNode","sendMngWrap","_arg$defval","EditorSeedSendMng","EditorFormgrpItem","groupMethod","setGroupMethod","targetList","setTargetList","seedargs","Array","FromGrpMedhods","formName","EditorFormgrpMng","_LogicUtil","COLOR_METHOD","COLOR_MNG","COLOR_LIST","COLOR_ITEM","COLOR_FIELD","isFocus","_Category","backgroundColor","detailJsx","_Span","_Field","_EditableValue","_data2$disable","_Signature","_Detail","nameJsx","_ValueType","FactDetSeedMng","FactDetArgumentMng","FactDetBehiviorMng","wrapNode","get","elementNode","_LogicElementUtil","_len","arguments","typeList","_key","_len2","_key2","innerNode","apply","_len3","_key3","_len4","_key4","innerWrap","isHead","isTail","ownerChildren","findIndex","swapOrder","ownDataChildren","curNo","swapData","_len5","dependencyMngNodes","_key5","depNode","replicateSameLevel","cloneBase","cloneDest","namable","getNamableProps","targetElement","getIdentifyParamName","childWrap","createParamWrapList","paramDataList","createVisualParams","createBehaviorParams","findSeedWrap","getInitialData","nameList","curWrap","nameParam","mngWrap","listParam","getLogicNameList","curLogicOwner","prefix","_getLogicItem","mngType","_node$parent5$parent","_node$parent5$parent$","_node$parent5$parent$2","getLogicItem","seedId","doParticleJob","fuse","_logicMng$defs$find","getOrigin","seedargMng","seedarg","getSendingValueMap","getSendingArrayMap","getSeedProperties","seedsendList","thumbnailList","_logicMng$defs$find2","SPUtil","_SPUtil","PreviewLogicInputForm","logicWrap","setSendingValueMap","setSendingArrayMap","PreviewSeedInputForm","template","setTemplate","formgrpWrap","presetList","arrayMap","ButtonItem","button","selectedIndex","PreviewLauncherFrameSp","setCur","isPlay","setPlay","sceens","previewTabJsx","_ProgressDiv","clickX","left","window","pageXOffset","_ProgressVal","isIconButton","interval","icon","AiFillStepBackward","AiFillStepForward","IoStopOutline","VscDebugStart","RxReset","_CloseButton","closeAction","BuildUtil","_BuildUtil","run","_props$guaranteeFrame","minFrame","guaranteeFrame","doIterate","particle","limitFrame","limitParticle","doEnd","runPaging","beginFrame","advanceFrame","_props$guaranteeFrame2","BuildFrame","dispatcher","storyPreviewProps","setStoryPreviewProps","useFrame","curFrame","buildCache","setBuildCache","logicData","fuseList","updateStore","isStandby","_Blind","_ProgressBox","_RateVal","getJsx","setSceens","setFrameCnt","setTabIndex","isBuild","setBuild","sendingValueMap","_useState17","_useState18","sendingArrayMap","isSeed","buildTabJsx","_Msg","_FormDiv","PreviewLauncherFrame","NameDefDialog","DirectLinkManager","libData","setLibData","setStoryData","seedSeq","setSeedSeq","findProject","projectSeq","resList","res","ownerId","lastmod","DataUtil","unZip","source","hasOwnProperty","scenarioProps","scenarioData","seedList","argCount","_Header","_seed$disp","seedName","_Item","_SeedName","_ArgCnt","getBlindJsx","VscSettingsGear","_asyncToGenerator","_regeneratorRuntime","mark","_callee","conteseq","response","results","_context","prev","next","sendQueryRequestToAPI","sent","json","abrupt","stop","_x","MobileRoot","isPermit","adjLeft","adjTop","screen","setScreen","getDecryptionedProjectSeq","hashKey","rect","clientWidth","clientHeight","isFitSide","navigator","userAgent","isSmartPhone","orientation","addEventListener","alert","_Error","top","match","GloballDialog","AccountFrame","userId","setUserId","oldPass","setOldPass","newPass","setNewPass","newPassConfirm","setNewPassConfirm","email","setEmail","userIdList","setUserIdList","emailList","setEmailList","loginProps","reloadInfo","password","findUserInfoList","info","hash","getHashedFromUserSeq","seq","history","replaceState","userTabJsx","InputTextFormBak","isPassword","permitRegist","_Body","_Footer","passwordStr","updateUserInfo","LoginCreateAccount","isRegist","setRegist","setPassword","passwordConfirm","setPasswordConfirm","messageList","setMessageList","createAuthText","findUserIdList","authCollation","setAuthCollation","authInput","setAuthInput","authPicture","placeholder","InfoFrame","textRecords","_AuthText","nextSeq","cnt","getNextUserSeq","projects","MessageLink","clickAction","LoginLogin","isForget","setForget","resPrjList","findUserInfoLogin","localStorage","setItem","findUserProjectList","findUserInfoFromEmail","url","sendQueryRequestToMailAPI","from","to","subject","LoginFrame","setCreate","logo","_LogoDiv","_TypeSwitch","TotalHeader","authButtonJsx","_LoginButton","location","ImUser","_UserName","isEntry","removeItem","func","_Logo","_Menu","_Language","MdOutlineLanguage","_MenuItem","TOTAL_HEADER_WIDTH","ChannelPane","_props$isLandscape","isLandscape","ChannelLabel","ChannelContents","_Icon","_Label","_templateObject13","_templateObject14","_templateObject15","_templateObject16","StoryFuseAnalysis","divide","setDivide","peak","setPeak","total","setTotal","countList","setCountList","defList","itemJsxList","rateHeight","count","_AnalisisItem","divRate","pastRate","needPoint","_AnalisisDiv","StoryProperty","setSeed","newFrame","setNewFrame","mapping","curFuse","propertiesFormJsx","activeSeed","formgrps","presets","cancelAction","modifyAction","initFormList","StoryEnvironment","setParticle","maxLimit","reduce","ITEM_WIDTH","TimelineFrame","cacheList","fusePosJsxList","newFrameRate","newFrameValue","focus","sus","cache","_Line","_Sustain","memoriJsxList","DIV_CNT","_Memori","_MeasureDiv","setNewFrameValue","MEASURE_WIDTH","StoryTab","isFuseEdit","setFuseEdit","isEnvEdit","setEnvEdit","tabActiveIndex","setTabActiveIndex","setFocus","setFuseList","groupMng","scenarioCacheList","newCache","thumbList","updateCache","createSeq","fuseJsxList","thumbJsx","thumb","_ItemDiv","_ItemFrame","_PropRecord","_FrameRecord","_SeedRecord","_ThumbFrame","val","_Title","seedProps","_ListDiv","_ListHead","cloneFuse","newSeq","_ListBody","_Timeline","_ListMain","_RightDiv","_RightInner","sort","LIST_HEAD","_templateObject17","_templateObject18","_templateObject19","_templateObject20","_templateObject21","_templateObject22","_templateObject23","_templateObject24","_store$cloud","targetSeq","p","existNames","assert","findProjectMaxSeq","maxSeq","_store$system$user","newProject","insertProject","registCreate","targetItem","updateProjectName","registUpdate","marginBottom","NewProjectDialog","_ref2","_callee2","req","_context2","_x2","_ref3","_callee3","_context3","_x3","_x4","setType","selectedLib","setSelectedLib","localLib","setLocalLib","cloudLibs","setCloudLibs","getStoryLib","storyLib","lib","usingHash","getSHA256Hash","findAllReleaseProjectList","_callee4","_yield$window$showOpe","_yield$window$showOpe2","file","fileContents","_context4","showOpenFilePicker","getFile","fileName","NewProjectDialogStoryOnly","selectedType","setSelectedType","MdCancelPresentation","AiOutlineEnter","extendAction","ShareDialog","ManageTab","fcsListIdx","setFcsListIdx","listItemJsx","project","_ListItem","getHashedFromProjectSeq","onContextMenu","getDirectUrl","_Status","_Name","getProjectType","hasData","incrRec","root","developCnt","privateCnt","releaseCnt","fuseCnt","elementSize","logicCnt","getData","uploadCloud","gZip","overwriteCloudFile","curPrj","updateProjectSource","saveLocalFile","saveLibraryFile","saveScenarioFile","cloudJsx","_ContDiv","scenarioFileProps","deleteProject","localJsx","loadFile","_HeaderDiv","_BodyDiv","_LeftDiv","_RighttDiv","getNewSaveButton","getOverwriteButton","CreateChannel","projectType","SCORE_TAB_MARGIN","PublishFrame","libList","setLibList","setLibCnt","libListJsx","dispCnt","_Owner","_CName","plainData","showSaveFilePicker","types","accept","handle","writable","createWritable","write","close","catch","_CDate","_DetailMain","_SeedItemFrame","_SeedItemInner","_SeedArgCnt","_DetailOpen","_CSummary","_ListFrame","ReleaseNote","setJsx","fetch","record","note","version","date","HOME_USER_DIV_HEIGHT","HomeChannel","userCount","setUserCount","artsCnt","setArtsCnt","countUsers","_Left","_MessageRecord","_Right","MainFrame","AiFillHome","VscGitPullRequestCreate","MAIN_FRAME_MARGIN","Splash","isSwitch","setSwitch","timerId","setTimerId","remove","clearTimeout","_NowLoading","_Copylight","fadeIn","keyframes","PCRoot","splashJsx","_MainDiv","SPHomeChannel","getURL","APP_SERVER_DOMAIN","setText","_TextAreaDiv","TextArea","_UrlDiv","readOnly","InstapaperShareButton","_SnsIconFrame","AiOutlineInstagram","TwitterShareButton","AiOutlineTwitter","MailruShareButton","AiOutlineMail","FacebookShareButton","AiOutlineFacebook","LineShareButton","about","BsLine","textarea","SPManageFrame","_Share","BsFillShareFill","MdClear","IoCreateOutline","setEdit","FiUpload","FaRegSave","FiDownload","MdOutlineDriveFileRenameOutline","RiDeleteBinLine","FuseMainteDialog","preset","setPreset","fuseSeq","dispName","story","COL_WIDTH_LIST","OPTION_BUTTON_WIDTH","FuseList","recordJsxList","_fuse$dispName","_Img","_RecordWrap","_RecordCont","_ColWrap","_TextItem","_ImageItem","_Option","FiEdit","ImCopy","focusSeq","cloneCache","GrView","openPreviewSoloDialog","_HeaderItem","_BodyScrollDiv","isEditable","FrameLine","startY","setStartY","startX","setStartX","frameRateJsxList","posXIndex","range","_FrameRate","isCurr","prevFocusSeq","nowFocusSeq","_FrameLineDiv","isEdit","SPEditStoryFrame","isPreview","setPreview","presetIndex","setPresetIndex","setInterval","seedWrapList","VscPreview","IoSave","_SeedDiv","AiOutlineAppstoreAdd","newFuseProps","_FuseListFrame","SPCreateChannel","SwitchTwoFace","label1","label2","rate1","rate2","SPRoot","_SplashDiv","cw","_ChannelWrap","Dispatcher","openPreviewAllDialog","RouterManage","HashRouter","basename","process","URLSearchParams","useLocation","search","login","getItem","findUserInfoSeq","Route","path","exact","_FormUtil","checkables","_props$isPassword","_props$validates","_props$dependency","_props$isEnable","_props$isCenter","_props$marginTop","_props$marginBottom","_props$isCenter2","validaters","dep","getErrors","validater","_ItemnLabel","_ItemnInputBak","hasTitle","_props$isEnable2","_props$textAlign","_props$marginTop2","_props$marginBottom2","_props$labelWidth","_props$isEnabled","_props$isVisible","_props$textAlign2","_props$marginTop3","_props$marginBottom3","lablelWidth","DEFAULT_LABEL_WIDTH","_FixedLabel","_props$isPassword2","_props$isNumber","_props$isEnabled2","_props$validates2","_props$dependency2","_props$step","setNaN","_ItemnInput","valueAsNumber","onBlur","_props$validates3","_props$dependency3","_props$headBlank","_props$isEnabled3","_props$width2","unshift","_ItemCombobox","_item$isDisabled","_item$isDisabled2","isDisabled","_props$validates4","_props$dependency4","_ItemnTextArea","_props$align","_props$interval","_props$marginTop4","_props$marginBottom4","_button$isEnable","_button$isEnable2","_Button","_IconButton","_button$interval","_button$isEnable3","_button$isEnable4","_props$isCenter3","_props$marginTop5","_props$marginBottom5","_props$isCenter4","_props$isCenter5","_props$marginTop6","_props$marginBottom6","_props$isCenter6","isLink","_props$isEnable3","_props$backgroundColo","_BorderText","_BorderPanel","_props$height2","_InfoDiv","_props$isRelation","_props$isEnable4","_Switch","_props$isEnable5","_props$isEditable","_SwitchTwoFace","_SwitchItem","isLeft","_props$marginLeft","select","_props$marginLeft2","option","_templateObject25","_templateObject26","_templateObject28","_templateObject27","_templateObject29","_templateObject30","_templateObject31","_templateObject33","_templateObject32","_templateObject34","_templateObject35","_templateObject36","_templateObject38","_templateObject37","_templateObject40","_templateObject39","_templateObject41","_templateObject42","_templateObject43","_templateObject44","_templateObject45","_templateObject46","_templateObject47","_templateObject48","_templateObject49","_templateObject50","_templateObject51","_templateObject52","_templateObject53","_templateObject54","_templateObject55","_DataUtil","DB_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","encode","Base64","getDecryptionedUserSeq","hashedSeq","hashids","decode","getPreviewURL","scoreSeq","hashedKey","mode","headers","Accept","body","createSendMailRequestInit","queryType","sql","databaseName","createQueryRequestInit","saveFile","findUserInfoFromSeq","_ref4","_ref5","_callee5","_context5","_ref6","_callee6","_context6","_x5","_callee7","_context7","findUserScoreList","_ref8","_callee8","userSeq","_context8","_x6","_ref9","_callee9","storyOnly","_context9","_x7","_x8","_callee10","_context10","saveFileBak","_callee11","_context11","_callee12","_context12","extension","options","_callee13","_context13","_callee14","_context14","original","sha256","content","encodeURIComponent","zlib","gzipSync","buffer","Buffer","unzipSync","decodeURIComponent","getStringFromDate","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace"],"mappings":"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","file":"static/js/main.48810e53.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 18px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 22px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport { useContext } from \"react\";\r\n\r\nnamespace ConfirmDialog {\r\n\r\n    export const Component = (props: {\r\n        message: string;\r\n        width?: number;\r\n        height?: number;\r\n        buttons?: FormUtil.ButtonProps[];\r\n    }) => {\r\n\r\n        const {store,  setStore } = useContext(GlobalContext);\r\n\r\n        const width = props.width ?? 600;\r\n        const height = props.height ?? 150;\r\n        const buttons = props.buttons ?? [\r\n            {\r\n                label: 'OK',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({...store});\r\n                }\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main><_Inner>\r\n                    {props.message.split('\\n').map((msg, i) => {\r\n                        return <FormUtil.Message\r\n                            key={i}\r\n                            message={msg}\r\n                            isCenter\r\n                        />\r\n                    })}\r\n                </_Inner></_Main>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons} />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 110px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* background-color: #bb6868e1; */\r\n`;","import React, { useEffect } from 'react';\r\nimport SystemEntry from './system/contents/entry/systemEntry';\r\n\r\nconst App = () => {\r\n\r\n  useEffect(() => {\r\n    // 右クリック無効\r\n    document.oncontextmenu = function () { return false; }\r\n\r\n    // window.addEventListener(\"keydown\", function (e) {\r\n    //   // space and arrow keys\r\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n    //     e.preventDefault();\r\n    //   }\r\n    // }, false);\r\n\r\n    document.onkeydown = (e) => {\r\n      // if (!['F5'].includes(e.key)) {\r\n      //   return false;\r\n      // }\r\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n  }, []);\r\n  return (\r\n    <SystemEntry />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport StoreCloud from \"./storeCloud\";\r\nimport StoreSystem from \"./storeSystem\";\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    system: StoreSystem.Param;\r\n    env: StoreSystem.Env;\r\n    libraryData: LogicUtil.WrapElement | null;\r\n    storyData: StoryUtil.StoryData | null;\r\n    fuseCacheList: StoryUtil.Cache[];\r\n    cloud: StoreCloud.Props | null;\r\n    fileHandle: FileSystemFileHandle | null;\r\n}\r\n\r\n\r\nexport const ProjectTypes = ['library', 'story'] as const;\r\nexport type ProjectType = typeof ProjectTypes[number];\r\n\r\nexport const initialStore: Store = {\r\n    system: {\r\n        isSplash: true,\r\n        user: null,\r\n        dialog: null,\r\n        canDialogClose: false,\r\n        isSPMode: false,\r\n        logoutActions: []\r\n    },\r\n    env: {\r\n        isEditLibrary: true,\r\n        isUseLocalFile: true,\r\n        screenRate: 1,\r\n        scrollLock: false,\r\n    },\r\n    libraryData: null,\r\n    storyData: null,\r\n    fuseCacheList: [],\r\n    cloud: null,\r\n    fileHandle: null,\r\n}","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: (index: number)=>void;\r\n    tabRecordNum?: number;\r\n}\r\n\r\nexport type TabElements = {\r\n    name: string;\r\n    enable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabRecordNum = props.tabRecordNum ?? 1;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList tabRecordNum={tabRecordNum}>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isEnable={tab.enable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList tabRecordNum={tabRecordNum}>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={!tab.enable ? <></> : tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isEnable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: inline-block;\r\n    height: ${props => 35 * props.tabRecordNum}px;\r\n    text-align: left;\r\n    /* background-color: #ac3b3b; */\r\n    width: 100%;\r\n`;\r\nconst _ContList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\r\n    border-radius: 0 6px 6px 6px;\r\n    /* box-shadow: 0 2px 0 0 #000b3a48; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    \r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                margin-top: 5px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${props.isEnable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","\r\nnamespace SystemConst {\r\n    export const AUTH_TEXT_WIDTH = 350;\r\n    export const AUTH_TEXT_HEIGHT = 70;\r\n\r\n    export const SESSTION_KEY_LOGIN = 'pixelflare-login-sesq'; \r\n}\r\n\r\nexport default SystemConst;\r\n\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n\r\n// ホームチャンネル\r\nexport const HOME_USER_DIV_HEIGHT = 400;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import SystemConst from \"./systemConst\";\r\n\r\nnamespace CanvasUtil {\r\n\r\n    /**\r\n     * Canvasに任意の描画をし、画像のURLを取得する\r\n     * @param width 幅\r\n     * @param height 高さ\r\n     * @param draw 描画\r\n     * @returns 画像のURL\r\n     */\r\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        draw(ctx);\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    export const getLogoURL = () => {\r\n        return CanvasUtil.createURL(360, 80, (ctx) => {\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.fillRect(0, 0, 350, 80);\r\n\r\n            ctx.shadowColor = \"#555\";\r\n            ctx.shadowOffsetX = 2;\r\n            ctx.shadowOffsetY = 1;\r\n            ctx.shadowBlur = 5;\r\n            ctx.font = 'italic 50pt Arial';\r\n            ctx.fillStyle = '#c6dce2';\r\n            ctx.fillText('Pixel ', 14, 64);\r\n            const adjust = ctx.measureText('Pixel ').width;\r\n            ctx.fillStyle = '#768fc4';\r\n            ctx.fillText('Flare', 14 + adjust, 64);\r\n            ctx.save();\r\n        });\r\n    }\r\n\r\n    export const getAuthTextURL = (text: string) => {\r\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\r\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\r\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\r\n            ctx.rotate(1 * Math.PI / 180);\r\n            for (let i = 0; i < text.length; i++) {\r\n                const char = text.charAt(i);\r\n\r\n                const fontRand = Math.random() * 60;\r\n                const alphaRand = Math.random() * 60;\r\n                ctx.font = `${20 + fontRand}pt Arial`;\r\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\r\n                ctx.fillText(char, i * SIZE, 60);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CanvasUtil;","import VectorUtil from \"./vectorUtil\";\r\n\r\nnamespace Particle {\r\n\r\n    export type Props = {\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        limit: number;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n    }\r\n\r\n    export class Instance {\r\n\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        prevPos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        frame: number;\r\n        limit: number;\r\n        isLive: boolean;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n\r\n        constructor(props: Props) {\r\n            this.owner = props.owner;\r\n            this.pos = props.pos;\r\n            this.prevPos = props.pos;\r\n            this.vec = props.vec;\r\n\r\n            this.frame = 0;\r\n            this.limit = props.limit;\r\n            this.isLive = true;\r\n            this.drawer = props.drawer;\r\n            this.extend = props.extend;\r\n        }\r\n\r\n        update = () => {\r\n\r\n            this.pos.x += this.vec.xy.x;\r\n            this.pos.y += this.vec.xy.y;\r\n\r\n            this.extend.forEach(callback => callback(this));\r\n\r\n            if (this.frame === this.limit) {\r\n                this.isLive = false;\r\n            }\r\n            this.frame++;\r\n        }\r\n\r\n        draw = (ctx: CanvasRenderingContext2D) => {\r\n            this.drawer(this, ctx);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Particle;","import Particle from \"./particle\";\r\n\r\nnamespace DrawUtil {\r\n\r\n    export type Rgba = {\r\n        r: number;\r\n        g: number;\r\n        b: number;\r\n        a: number;\r\n    }\r\n\r\n    export type ColorStop = {\r\n        offset: number;\r\n        color: string;\r\n    }\r\n\r\n    export type DrawerParam = {\r\n        color: string;\r\n        radius?: number;\r\n        disappearStartRate?: number;\r\n        shrinkStartRate?: number;\r\n        flashAppearFrame?: number;\r\n        flashHideFrame?: number;\r\n    }\r\n\r\n    export const createGradDrawer = (param: DrawerParam) => {\r\n\r\n        /** 基準となる半径 */\r\n        const radiusBase = param.radius ?? 30;\r\n        return (self: Particle.Instance, ctx: CanvasRenderingContext2D) => {\r\n            if (param.flashAppearFrame != undefined) {\r\n                const appearFrame = param.flashAppearFrame;\r\n                const hideFrame = (param.flashHideFrame as number);\r\n                const unitFrame = appearFrame + hideFrame;\r\n                if ((self.frame % unitFrame) >= appearFrame) return;\r\n            }\r\n\r\n            let radius = radiusBase;\r\n            if (param.shrinkStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.shrinkStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    const rate = (limit - frame) / limit;\r\n                    radius *= rate;\r\n                }\r\n            }\r\n\r\n            const x = self.pos.x;\r\n            const y = self.pos.y;\r\n            const g = ctx.createRadialGradient(x, y, 1, x, y, radius);\r\n\r\n            const grads: ColorStop[] = [];\r\n            const rgba = convertRgbaFromColorCode(param.color) ?? { r: 255, g: 255, b: 255, a: 255 };\r\n            grads.push({ offset: 0, color: convertColorCodeFromRgba({ r: 255, g: 255, b: 255, a: Math.floor(rgba.a * 0.9) }) });\r\n            grads.push({ offset: 0.2, color: convertColorCodeFromRgba({ ...rgba, a: Math.floor(rgba.a * 0.15) }) });\r\n            grads.push({ offset: 1, color: convertColorCodeFromRgba({ ...rgba, a: 1 }) });\r\n\r\n            grads.forEach(grad => {\r\n                g.addColorStop(grad.offset, grad.color);\r\n            });\r\n\r\n            ctx.globalAlpha = 1;\r\n            if (param.disappearStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.disappearStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    ctx.globalAlpha = (limit - frame) / limit;\r\n                }\r\n            }\r\n\r\n            ctx.fillStyle = g;\r\n            // ctx.fillStyle = param.color;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n        };\r\n    }\r\n\r\n    export const convertRgbaFromColorCode = (code: string): Rgba | null => {\r\n        const div = code.split('#');\r\n        if (div.length !== 2 || div[1].length < 6) return null;\r\n\r\n        const value = div[1];\r\n        const r = Number.parseInt(value.substring(0, 2), 16);\r\n        const g = Number.parseInt(value.substring(2, 4), 16);\r\n        const b = Number.parseInt(value.substring(4, 6), 16);\r\n        let a = 1;\r\n        if (value.length === 8) {\r\n            a = Number.parseInt(value.substring(6, 8), 16);\r\n        }\r\n        return { r, g, b, a };\r\n    }\r\n\r\n    export const convertColorCodeFromRgba = (rgba: Rgba): string => {\r\n        const r1 = (Math.floor(rgba.r));\r\n        const g1 = (Math.floor(rgba.g));\r\n        const b1 = (Math.floor(rgba.b));\r\n        const a1 = (Math.floor(rgba.a));\r\n        const r = ('00' + r1.toString(16)).slice(-2);\r\n        const g = ('00' + g1.toString(16)).slice(-2);\r\n        const b = ('00' + b1.toString(16)).slice(-2);\r\n        const a = ('00' + a1.toString(16)).slice(-2);\r\n        return `#${r}${g}${b}${a}`;\r\n    }\r\n\r\n    export const toWhite = (color: string, rate: number): string => {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport default DrawUtil;","namespace VectorUtil {\r\n\r\n    export type XY = {\r\n        x: number, y: number;\r\n    }\r\n\r\n    export class Vector {\r\n\r\n        xy: XY;\r\n        rad: number;\r\n        len: number;\r\n\r\n        constructor(xy: XY) {\r\n            this.xy = xy;\r\n            this.rad = 0;\r\n            this.len = 0;\r\n            this.syncFromXY();\r\n        }\r\n\r\n        syncFromXY = () => {\r\n            this.len = Math.sqrt(this.xy.x * this.xy.x + this.xy.y * this.xy.y);\r\n            this.rad = Math.atan2(this.xy.y, this.xy.x);\r\n        }\r\n\r\n        syncFromRad = () => {\r\n            this.xy.x = Math.cos(this.rad) * this.len;\r\n            this.xy.y = Math.sin(this.rad) * this.len;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default VectorUtil;","\r\nnamespace ParamUtil {\r\n    export enum VisualParamType {\r\n        RADIUS = 'radius',\r\n        COLOR_R = 'color_r',\r\n        COLOR_G = 'color_g',\r\n        COLOR_B = 'color_b',\r\n        COLOR_A = 'color_a',\r\n        THICKNESS = 'thickness',\r\n    }\r\n    export const VisualParams = Object.values(VisualParamType);\r\n    export type VisualParam = typeof VisualParams[number];\r\n\r\n    export enum BehaviorParamType {\r\n        LIMIT = 'limit',\r\n        POS_X = 'pos_x',\r\n        POS_Y = 'pos_y',\r\n        VEC_X = 'vec_x',\r\n        VEC_Y = 'vec_y',\r\n        VEC_RAD = 'vec_radian',\r\n        VEC_LEN = 'vec_length',\r\n    }\r\n    export const BehaviorParams = Object.values(BehaviorParamType);\r\n    export type BehaviorParam = typeof BehaviorParams[number];\r\n\r\n    export enum SelfParamType {\r\n        FRAME = 'self_frame',\r\n        LIMIT = 'self_limit',\r\n        POS_X = 'self_pos_x',\r\n        POS_Y = 'self_pos_y',\r\n        VEC_X = 'self_vec_x',\r\n        VEC_Y = 'self_vec_y',\r\n        VEC_RAD = 'self_vec_radian',\r\n        VEC_LEN = 'self_vec_length',\r\n    }\r\n    export const SelfParams = Object.values(SelfParamType);\r\n    export type SelfParam = typeof SelfParams[number];\r\n\r\n    export enum ExtendParamType {\r\n        LOOP_COUNT = 'loop_count',\r\n        LOOP_ITERATE = 'loop_iterate',\r\n        INVOKE = 'invoke',\r\n    }\r\n    export const ExtendParams = Object.values(ExtendParamType);\r\n    export type ExtendParam = typeof ExtendParams[number];\r\n\r\n    export enum EffectParamType {\r\n        DISAPPEAR_START = 'disappear_start',\r\n        SHRINK_START = 'shrink_start',\r\n        FLASH_APPEAR_FRAME = 'flash_appear_frame',\r\n        FLASH_HIDE_FRAME = 'flash_hide_frame',\r\n    }\r\n    export const EffectParams = Object.values(EffectParamType);\r\n    export type EffectParam = typeof EffectParams[number];\r\n\r\n    export enum ModulateParamType {\r\n        DECAY_RATE = 'decay_rate',\r\n        DECAY_LIMIT = 'decay_limit',\r\n        GRAVITY_VAL = 'gravity_val',\r\n        GRAVITY_LIMIT = 'gravity_limit',\r\n    }\r\n    export const ModulateParams = Object.values(ModulateParamType);\r\n    export type ModulateParam = typeof ModulateParams[number];\r\n\r\n    export enum ConstantType {\r\n        SCREEN_WIDTH = 'screen_width',\r\n        SCREEN_HEIGHT = 'screen_height',\r\n        PI = 'pi',\r\n        RADIAN_ROUND = 'radian_round',\r\n    }\r\n    export const Constants = Object.values(ConstantType);\r\n    export type Constant = typeof Constants[number];\r\n\r\n}\r\n\r\nexport default ParamUtil;","import Particle from \"../../graphic/particle\";\r\n\r\nnamespace ModulateBuilder {\r\n\r\n    type ModulateParam = {\r\n        decayRate?: number;\r\n        decayLimit?: number;\r\n        gravity?: number;\r\n        gravityLimit?: number;\r\n    }\r\n\r\n    export const build = (extendList: ((self: Particle.Instance) => void)[], param: ModulateParam) => {\r\n        \r\n        // 減衰メソッド\r\n        if (param.decayRate != undefined && param.decayLimit != undefined) {\r\n            const decayLimit = param.decayLimit;\r\n            const decayRate = param.decayRate;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.len > decayLimit) {\r\n                    self.vec.len = self.vec.len * decayRate;\r\n                    self.vec.syncFromRad();\r\n                }\r\n            });\r\n        }\r\n        // 重力メソッド\r\n        if (param.gravity != undefined && param.gravityLimit != undefined) {\r\n            const gravityLimit = param.gravityLimit;\r\n            const gravity = param.gravity;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.xy.y < gravityLimit) {\r\n                    self.vec.xy.y += gravity;\r\n                    self.vec.syncFromXY();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModulateBuilder;","import DrawUtil from \"../../graphic/drawUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport ParamUtil from \"../factory/util/paramUtil\";\r\nimport ModulateBuilder from \"./modulateBuilder\";\r\n\r\nnamespace PreviewUtil {\r\n\r\n    export const SCREEN_WIDTH = 550;\r\n    export const SCREEN_HEIGHT = 550;\r\n\r\n    export type ValueMap = {\r\n        name: string;\r\n        value: number;\r\n    }\r\n\r\n    export type ArrayMap = {\r\n        name: string;\r\n        array: number[];\r\n    }\r\n\r\n    export const buildLogicProps = (\r\n        owner: Particle.Instance[],\r\n        origin: LogicUtil.NodeLogicItem,\r\n        rootData: LogicUtil.WrapElement,\r\n        initialValueMapList: ValueMap[],\r\n        initailArrayMapList: ArrayMap[]\r\n    ): Particle.Props => {\r\nconsole.log(initailArrayMapList);\r\n        /**\r\n         * ディペンドするロジック要素を識別名から探して返す。\r\n         * @param name ロジックの識別名\r\n         * @returns ロジック要素\r\n         */\r\n        const searchDependLogic = (name: string): LogicUtil.NodeLogicItem | null => {\r\n            const mng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n            const wrap = mng.defs.find(def => (def.data as LogicUtil.NodeLogicItem).name === name);\r\n            if (wrap == undefined) return null;\r\n            return wrap.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        /**\r\n         * 再帰的にパーティクルを生成する。\r\n         * @param cur ルートとなるロジック要素\r\n         * @param parentValueMapList 親要素から送られてきたValueMap\r\n         * @param parentArrayMapList 親要素から送られてきたArrayMap\r\n         * @returns パーティクルのプロパティ\r\n         */\r\n        const createParticleRec = (cur: LogicUtil.NodeLogicItem, parentValueMapList: ValueMap[], parentArrayMapList: ArrayMap[]): Particle.Props => {\r\n            const valueMapList: ValueMap[] = parentValueMapList.concat(ConstantValueMap);\r\n\r\n            // 配列Mapのプロパティ変数を生成\r\n            parentArrayMapList.forEach(arr => {\r\n                valueMapList.push({ name: arr.name + '.len', value: arr.array.length });\r\n            });\r\n\r\n            // フィールドのパラメータを取得\r\n            const fieldMng = searchElement('field-mng', cur.mngs);\r\n            if (fieldMng != null) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                    valueMapList.push({ name: paramItem.name, value });\r\n                });\r\n            }\r\n\r\n            const visualParams = (searchElement('visual-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n            const behaviorParams = (searchElement('behavior-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n\r\n            const getVisualParam = (name: string) => {\r\n                return convertParamsToValue(name, visualParams, valueMapList);\r\n            }\r\n            const getBehaviorParam = (name: string) => {\r\n                return convertParamsToValue(name, behaviorParams, valueMapList);\r\n            }\r\n\r\n            // Behaviorのパラメータを取得\r\n            const limit = Math.floor(getBehaviorParam(ParamUtil.BehaviorParamType.LIMIT) as number);\r\n            const pos = {\r\n                x: getBehaviorParam(ParamUtil.BehaviorParamType.POS_X) as number,\r\n                y: getBehaviorParam(ParamUtil.BehaviorParamType.POS_Y) as number\r\n            };\r\n            const vec = new VectorUtil.Vector({ x: 0, y: 0 });\r\n            const isVectorMethod = behaviorParams.find(param => param.name === ParamUtil.BehaviorParamType.VEC_X) != undefined;\r\n            if (isVectorMethod) {\r\n                vec.xy.x = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_X) as number;\r\n                vec.xy.y = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_Y) as number;\r\n                vec.syncFromXY();\r\n            } else {\r\n                vec.rad = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_RAD) as number;\r\n                vec.len = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_LEN) as number;\r\n                vec.syncFromRad();\r\n            }\r\n\r\n            /**\r\n             * 追加動作（子要素、エフェクト、モデュレート）\r\n             */\r\n            const extendList: ((self: Particle.Instance) => void)[] = [];\r\n\r\n            // 子要素を生成する\r\n            const connectMng = searchElement('inherit-mng', cur.mngs);\r\n            if (connectMng != null) {\r\n\r\n                // パーティクル情報のフィールド追加\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_X, value: pos.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_Y, value: pos.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_RAD, value: vec.rad });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_LEN, value: vec.len });\r\n\r\n                const connects = (connectMng.data as LogicUtil.NodeConnectManager).inherits;\r\n\r\n                connects.forEach(connect => {\r\n                    const connector = connect.data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.disable ?? false) return;\r\n\r\n                    const logicItem = connector.method === 'create' ?\r\n                        searchElement('inherit-logic', connector.mngs)?.data as LogicUtil.NodeLogicItem :\r\n                        searchDependLogic(connector.depend);\r\n\r\n                    if (logicItem != null) {\r\n\r\n                        extendList.push((self: Particle.Instance) => {\r\n\r\n                            const addValueMap = (item: ValueMap) => {\r\n                                const map = valueMapList.find(map => map.name === item.name);\r\n                                if (map != undefined) map.value = item.value;\r\n                                else valueMapList.push(item);\r\n                            }\r\n                            addValueMap({ name: ParamUtil.SelfParamType.FRAME, value: self.frame });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.LIMIT, value: self.limit });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_X, value: self.pos.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_Y, value: self.pos.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_X, value: self.vec.xy.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_Y, value: self.vec.xy.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_RAD, value: self.vec.rad });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_LEN, value: self.vec.len });\r\n\r\n                            // Inherit配下のフィールドのパラメータを取得\r\n                            const itrfldValueMap: ValueMap[] = [];\r\n                            const fieldMng = searchElement('inhfld-mng', connector.mngs);\r\n                            if (fieldMng != null) {\r\n                                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                                    itrfldValueMap.push({ name: paramItem.name, value });\r\n                                });\r\n                            }\r\n\r\n                            let loopCnt = 1;\r\n                            const extendItem = searchElement('extend-mng', connector.mngs) as LogicUtil.WrapElement;\r\n                            const extendParams = (extendItem.data as LogicUtil.NodeParamManager).params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                            const loopCntVal = convertParamsToValue(ParamUtil.ExtendParamType.LOOP_COUNT, extendParams, valueMapList.concat(itrfldValueMap));\r\n\r\n                            // 派生条件\r\n                            const isInvoke = convertParamsToBoolean(ParamUtil.ExtendParamType.INVOKE, extendParams, valueMapList) ?? true;\r\n\r\n                            // 条件を満たさない場合、以下の処理（パーティクルの生成）を行わない\r\n                            if (!isInvoke) return;\r\n\r\n                            // イテレータを利用している場合\r\n                            if (loopCntVal != undefined) {\r\n                                loopCnt = loopCntVal;\r\n                            }\r\n\r\n                            for (let i = 0; i < loopCnt; i++) {\r\n\r\n                                // イテレータ関連のパラメータを追加\r\n                                const iterateValueMap: ValueMap[] = [\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_COUNT, value: loopCnt },\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_ITERATE, value: i }\r\n                                ];\r\n\r\n                                // 配列Mapのイテレータ変数を追加\r\n                                const iterateArrayMap: ValueMap[] = parentArrayMapList.map(arr => {\r\n                                    return { name: arr.name + '.itr', value: arr.array[i] ?? 0 };\r\n                                });\r\n\r\n                                const sendItem = searchElement('send-mng', connector.mngs)?.data as LogicUtil.NodeParamManager;\r\n                                const params = sendItem.params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                                const sendValueMapList: ValueMap[] = params\r\n                                    .filter(item => !item.isArray)\r\n                                    .map(item => {\r\n                                        return {\r\n                                            name: item.name, value: convertParamsToValue(item.name, params, valueMapList\r\n                                                .concat(itrfldValueMap)\r\n                                                .concat(iterateValueMap)\r\n                                                .concat(iterateArrayMap)\r\n                                            ) ?? 0\r\n                                        };\r\n                                    });\r\n                                const sendArrayMapList: ArrayMap[] = params\r\n                                    .filter(item => item.isArray)\r\n                                    .map(item => {\r\n                                        return { name: item.name, array: convertParamsToArray(item.name, params, parentArrayMapList) ?? [] }\r\n                                    });\r\n\r\n                                const props = createParticleRec(\r\n                                    logicItem,\r\n                                    sendValueMapList,\r\n                                    sendArrayMapList\r\n                                );\r\n                                self.owner.push(new Particle.Instance(props));\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            // モデュレート（動きの変化）を付与\r\n            ModulateBuilder.build(extendList, {\r\n                decayLimit: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_LIMIT),\r\n                decayRate: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_RATE),\r\n                gravity: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_VAL),\r\n                gravityLimit: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_LIMIT),\r\n            });\r\n\r\n            // Visualのパラメータを取得\r\n            const radius = getVisualParam(ParamUtil.VisualParamType.RADIUS);\r\n            const colorR = getVisualParam(ParamUtil.VisualParamType.COLOR_R);\r\n            const colorG = getVisualParam(ParamUtil.VisualParamType.COLOR_G);\r\n            const colorB = getVisualParam(ParamUtil.VisualParamType.COLOR_B);\r\n            const colorA = getVisualParam(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // エフェクト付与\r\n            const disappearStart = getVisualParam(ParamUtil.EffectParamType.DISAPPEAR_START);\r\n            const shrinkStart = getVisualParam(ParamUtil.EffectParamType.SHRINK_START);\r\n            const flashAppearFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME);\r\n            const flashHideFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_HIDE_FRAME);\r\n\r\n            let drawer: (self: Particle.Instance, ctx: CanvasRenderingContext2D) => void = () => { };\r\n            if (radius != undefined) {\r\n                drawer = DrawUtil.createGradDrawer({\r\n                    radius: radius,\r\n                    color: DrawUtil.convertColorCodeFromRgba({\r\n                        r: colorR as number,\r\n                        g: colorG as number,\r\n                        b: colorB as number,\r\n                        a: colorA as number,\r\n                    }),\r\n                    disappearStartRate: disappearStart,\r\n                    shrinkStartRate: shrinkStart,\r\n                    flashAppearFrame,\r\n                    flashHideFrame,\r\n                });\r\n            }\r\n\r\n            return {\r\n                owner, pos, vec,\r\n                limit, drawer,\r\n                extend: extendList\r\n            };\r\n        }\r\n\r\n        return createParticleRec(origin, initialValueMapList, initailArrayMapList);\r\n    }\r\n\r\n    const searchElement = (type: LogicUtil.NodeType, warpList: LogicUtil.WrapElement[]) => {\r\n        return warpList.find(wrap => wrap.type === type) ?? null;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param valueMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToValue = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): number | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToValue(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToValue = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): number => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(ret);\r\n        return ret;\r\n    }\r\n\r\n    export const convertParamsToBoolean = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): boolean | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToBoolean(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToBoolean = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): boolean => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item, i) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            else if (item === '=') str = '==';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(formulaStr);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param arrayMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToArray = (name: string, params: LogicUtil.NodeParamItem[], arrayMapList: ArrayMap[]): number[] | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        const item = formula.values[0];\r\n        if (item.type === 'array') {\r\n            return item.value.split(',').map(v => Number(v));\r\n        } else if (item.type === 'argument') {\r\n            const map = arrayMapList.find(array => array.name === item.value);\r\n            return map == undefined ? [] : map.array;\r\n        }\r\n    }\r\n\r\n    export const ConstantValueMap: ValueMap[] = [\r\n        { name: ParamUtil.ConstantType.SCREEN_WIDTH, value: SCREEN_WIDTH },\r\n        { name: ParamUtil.ConstantType.SCREEN_HEIGHT, value: SCREEN_HEIGHT },\r\n        { name: ParamUtil.ConstantType.PI, value: 3.14159265359 },\r\n        { name: ParamUtil.ConstantType.RADIAN_ROUND, value: 3.14159265359 * 2 }\r\n    ];\r\n}\r\n\r\nexport default PreviewUtil;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\r\n\r\n    export type Validate = {\r\n        checker: (value: string) => boolean;\r\n        errorType: ErrorType;\r\n        message?: string;\r\n    }\r\n\r\n    /**\r\n     * 必須チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkRequired = (str: string) => {\r\n        return str.length > 0;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length === 0 || (str.length >= min && str.length <= max);\r\n    }\r\n\r\n    /**\r\n     * 半角英数時チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        return checkIncludesChars(str, list);\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列で構成されているかチェック\r\n     * @param str 検証する文字列\r\n     * @param list 入力を許す対象文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkIncludesChars = (str: string, list: string) => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            const ch = str.charAt(i);\r\n            if (list.indexOf(ch) === -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列が数値に変換できるかチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumber = (str: string) => {\r\n        return !isNaN(Number(str));\r\n    }\r\n\r\n    /**\r\n     * 数値の値の範囲をチェック\r\n     * @param str 検証する文字列\r\n     * @param min 下限\r\n     * @param max 上限\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumberRange = (str: string, min: number, max: number) => {\r\n        if (!isNaN(Number(str))) {\r\n            const num = Number(str);\r\n            return num >= min && num <= max;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    export const checkArrayNumber = (value: string) => value.split(',').find(v => isNaN(Number(v))) == undefined;\r\n}\r\nexport default ValidateUtil;\r\n","import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        // parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        const ref = useRef({} as HTMLDivElement);\r\n\r\n        /**\r\n         * データを元に再帰的に以下のツリーを構成する。\r\n         * @returns ツリー\r\n         */\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        useEffect(() => {\r\n            if (focusNode != null && focusNode.parent != null) {\r\n                focusNode.parent.isOpen = true;\r\n            }\r\n        }, [focusNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            // console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    // 親判定\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    // 兄弟判定\r\n                    if (result === false && focusNode != null && focusNode.parent != null) {\r\n                        result = focusNode.parent.children.find(node => node == element) != undefined;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        width={ref.current.scrollWidth}\r\n                        isActive={isCurrent}\r\n                        isRelation={!isDisable && isRelationNode()}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap\r\n                ref={ref}\r\n                isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #374a54;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #1f3642;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n    isRelation: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #459cff46;\r\n    `}\r\n    opacity: 0.3;\r\n    ${props => !props.isRelation ? '' : css`\r\n        background-color: #ffffff28;\r\n        opacity: 1;\r\n    `}\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #b4d9dd83;\r\n        opacity: 1;\r\n    `}\r\n    width: ${props => props.width}px;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import { useContext, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nnamespace ModifyOperations {\r\n\r\n    export type Props = {\r\n        mappingForm: () => void;\r\n        checkableFields: FormUtil.CheckableValue[];\r\n        isInputOK?: boolean;\r\n        firstRegist: () => void;\r\n        modifyRegist: () => void;\r\n    }\r\n\r\n    export const Component = (props: Props) => {\r\n        const { node, isModify, setModify, removeSelf } = useContext(FactoryTreeContext);\r\n\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n        const isComplete = FormUtil.isCompleteCheck(props.checkableFields);\r\n\r\n        return (<>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: isModify,\r\n                        callback: () => {\r\n                            if (wrap.data == null) {\r\n                                removeSelf();\r\n                            } else {\r\n                                props.mappingForm();\r\n                            }\r\n                            setModify(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !isModify || (props.isInputOK ?? isComplete),\r\n                        callback: () => {\r\n                            if (!isModify) {\r\n                                setModify(true);\r\n                            } else {\r\n                                if (wrap.data == null) {\r\n                                    props.firstRegist();\r\n                                } else {\r\n                                    props.modifyRegist();\r\n                                }\r\n                                setModify(false);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default ModifyOperations;","import { type } from \"os\";\r\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport Common from \"../common\";\r\nimport PreviewLogicFrame from \"../preview/previewLogicFrame\";\r\nimport LogicElementUtil from \"./util/logicElementUtil\";\r\nimport LogicUtil from \"./util/logicUtil\";\r\n\r\nexport const FactoryTreeContext = createContext({} as LogicUtil.DetailArgs);\r\n\r\nconst LogicMainteTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    // const [rootData, setRootData] = useState(LogicElementUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    // const [treeDisable, setTreeDisable] = useState(false);\r\n    const [isModify, setModify] = useState<boolean>(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    const rootData = store.libraryData as LogicUtil.WrapElement;\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: LogicUtil.getChildrenDataNode(rootData)\r\n        }\r\n    }, [rootData]);\r\n\r\n    // useEffect(()=> {\r\n    //     store.logicData = rootData;\r\n    //     setStore({...store});\r\n    // }, [rootData]);\r\n\r\n    const setRootData = (rootData: LogicUtil.WrapElement) => {\r\n        store.libraryData = rootData;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const masterNode = useMemo(() => {\r\n        let cur: TreeUtil.ElementNode | null = focusNode;\r\n        while (cur != null) {\r\n            const type = (cur.data as LogicUtil.WrapElement).type;\r\n            if (['logic-item', 'seed-item'].includes(type)) return cur;\r\n            cur = cur.parent;\r\n        };\r\n        return null;\r\n    }, [focusNode]);\r\n\r\n    /**\r\n     * プレビューダイアログを表示する\r\n     */\r\n    const openPreviewDialog = () => {\r\n        if (masterNode == null) return;\r\n        store.system.dialog = (\r\n            <PreviewLogicFrame.Component\r\n                master={masterNode.data as LogicUtil.WrapElement}\r\n                rootData={rootData}\r\n                closeButtonAction={() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n            onKeyDown={(e) => {\r\n                // console.log(e.key);\r\n                if (isModify || focusNode == null) return;\r\n                switch (e.key) {\r\n                    case 'ArrowRight': {\r\n                        if (focusNode.children.length > 0) {\r\n                            if (!focusNode.isOpen) focusNode.isOpen = true;\r\n                            else setFocusNode(focusNode.children[0]);\r\n                            setInvalidate({});\r\n                        }\r\n                    } break;\r\n                    case 'ArrowLeft': {\r\n                        if (focusNode.isOpen) focusNode.isOpen = false;\r\n                        else {\r\n                            if (focusNode.parent != null) setFocusNode(focusNode.parent);\r\n                        }\r\n                        setInvalidate({});\r\n                    } break;\r\n                    case 'ArrowUp': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n) {\r\n                                    if (i === 0) {\r\n                                        setFocusNode(focusNode.parent);\r\n                                        setInvalidate({});\r\n                                    } else {\r\n                                        setFocusNode(list[i - 1]);\r\n                                        setInvalidate({});\r\n                                    }\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case 'ArrowDown': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n && i < list.length - 1) {\r\n                                    setFocusNode(list[i + 1]);\r\n                                    setInvalidate({});\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case ' ': {\r\n                        if (masterNode != null) openPreviewDialog();\r\n                    } break;\r\n                }\r\n            }}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview',\r\n                                isEnable: masterNode != null,\r\n                                callback: openPreviewDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return LogicUtil.getNodeDisplayJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={isModify}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <_DetailDiv>\r\n                    <_DetailHeader>\r\n                        <_DetailHeaderLabel>{LogicUtil.getTypeName(focusNode)}</_DetailHeaderLabel>\r\n                    </_DetailHeader>\r\n                    <FactoryTreeContext.Provider value={{\r\n                        rootData,\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        isModify,\r\n                        setModify,\r\n                        // treeDisable,\r\n                        setRootData,\r\n                        removeSelf: () => {\r\n                            const node = focusNode as TreeUtil.ElementNode;\r\n                            let index = -1;\r\n                            node.parent?.children.forEach((n, i) => {\r\n                                if (n == node) index = i;\r\n                            });\r\n                            node.parent?.children.splice(index, 1);\r\n                            const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n                            const listName = LogicElementUtil.getListParamName(parentWrap.type);\r\n                            if (listName == null) return;\r\n                            const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n                            list.splice(index, 1);\r\n                            setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                            setInvalidate({});\r\n                        }\r\n                    }}>\r\n                        <_DetailMainDiv>{LogicUtil.getDetailComponent(focusNode)}</_DetailMainDiv>\r\n                    </FactoryTreeContext.Provider>\r\n                </_DetailDiv>\r\n            </_PropsDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default LogicMainteTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #6c8186;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d87b;\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _TreeHeadHalf = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    background-color: #7fbdb47a;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #9fa9b6;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _DetailDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c9;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\nconst _DetailHeader = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #b4b29e; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _DetailHeaderLabel = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #a10000;\r\n    /* background-color: #bbd0d3; */\r\n    border: solid 1px #a10000;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 20px);\r\n    margin: 5px 0 0 10px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DetailMainDiv = styled.div`\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 44px);\r\n    margin: 0 0 0 4px;\r\n    background-color: #ccd2d3;\r\n    border: solid 1px #0026a1;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorArgumentMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'argument-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentMng;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ParamUtil from \"../util/paramUtil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\n\r\nnamespace SendTemplateDialog {\r\n\r\n    const FRAME_WIDTH = 450;\r\n    const FRAME_HEIGHT = 160;\r\n    const COMPONENT_WIDTH = 296;\r\n\r\n    export const ConnectParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, input property name!';\r\n\r\n        /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n        const paramNameList = useMemo(() => {\r\n            const owner = (LogicElementUtil.getInnerWrap(props.node.parent?.data as LogicUtil.WrapElement, 'inherit-logic') as LogicUtil.WrapElement).data;\r\n            return LogicElementUtil.getParamNameList(owner);\r\n        }, [props.node]);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    // Sendにパラメータを追加\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: xName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }] }\r\n                    ), props.node);\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: yName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }] }\r\n                    ), props.node);\r\n\r\n                    // 派生ロジックに引数を追加\r\n                    const logicNode = LogicElementUtil.getInnerNode(props.node.parent as TreeUtil.ElementNode, 'inherit-logic') as TreeUtil.ElementNode;\r\n                    const hasArgNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') != undefined;\r\n                    if (!hasArgNode) {\r\n                        LogicElementUtil.insertChild({\r\n                            type: 'argument-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeArgumentManager\r\n                        }, logicNode, 0);\r\n                    }\r\n                    const argNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') as TreeUtil.ElementNode;\r\n\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: xName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: yName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n\r\n                    // 派生ロジックの座標に引数を設定\r\n                    const behaviorNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'behavior-mng') as TreeUtil.ElementNode;\r\n                    const setParamValue = (prpName: string, argName: string) => {\r\n                        const params = behaviorNode.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                        const targetParam = params.find(param => param.name === prpName) as LogicUtil.NodeParamItem;\r\n                        targetParam.formulaItems = ['var'];\r\n                        targetParam.values = [{ type: 'argument', value: argName }];\r\n                    }\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_X, xName.value);\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_Y, yName.value);\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (yName.value !== '') list.push(yName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[yName]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (xName.value !== '') list.push(xName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[xName]}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n\r\n    export const SetParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, select property name!';\r\n\r\n        const list = useMemo(() => {\r\n            return props.node.children.map(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                return (wrap.data as LogicUtil.NodeParamItem).name;\r\n            });\r\n        }, []);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    const paramList = props.node.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                    const xParam = paramList.find(param => param.name === xName.value) as LogicUtil.NodeParamItem;\r\n                    const yParam = paramList.find(param => param.name === yName.value) as LogicUtil.NodeParamItem;\r\n                    xParam.formulaItems = ['var'];\r\n                    xParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }];\r\n                    yParam.formulaItems = ['var'];\r\n                    yParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }];\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== yName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== xName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SendTemplateDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #d0e7e718;\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport GloballDialog from \"../../../../dialog/globalDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorArgumentItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const logicNode = node.parent?.parent as TreeUtil.ElementNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n        setName({ ...name, value: param.name });\r\n        setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, argType]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeArgumentItem = {\r\n                    name: name.value,\r\n                    valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n                syncArgumentAdd(logicNode, name.value, argType.value as LogicUtil.ArgumentType);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(logicNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = reservedList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeArgumentItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getArgumentRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    // DependしているInheritのSendパラメータを同期する\r\n                                    syncArgumentDel(logicNode, name.value);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentItem;\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param node 引数のノード\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param logicNode ロジックノード\r\n*/\r\nconst syncArgumentName = (logicNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n    const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n    if (fieldMng != undefined) {\r\n        syncFormula((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n    }\r\n    const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n    if (visualMng != undefined) {\r\n        syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n    if (behaviorMng != undefined) {\r\n        syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n    if (inhMng != undefined) {\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n            // Inherit配下のField要素のチェック\r\n            if (inhfld != null) {\r\n                syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n            // Extend要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            // Send要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        });\r\n    }\r\n\r\n    const syncParamName = (params: LogicUtil.WrapElement[]) => {\r\n        params.forEach(wrap => {\r\n            const item = wrap.data as LogicUtil.NodeParamItem;\r\n            if (item.name === prevName) {\r\n                item.name = newName;\r\n            }\r\n        });\r\n    }\r\n    if (wrap.type === 'logic-item') {\r\n\r\n        // dependしている箇所を全て反映するために再帰で洗う\r\n        const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n            const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n            if (inhMng == undefined) return;\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    const inhLogic = LogicElementUtil.getInnerWrapFixed(inh, 'inherit-logic').data as LogicUtil.NodeLogicItem;\r\n                    runRec(inhLogic);\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    const sendMng = LogicElementUtil.getInnerWrapFixed(inh, 'send-mng').data as LogicUtil.NodeParamManager;\r\n                    syncParamName(sendMng.params);\r\n                }\r\n            });\r\n        }\r\n        // ロジックを全て調査する\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(logic => {\r\n            runRec((logic.data as LogicUtil.WrapElement).data);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        const root = (rootNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeRoot;\r\n        const defs = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        console.log(defs.length);\r\n        defs.forEach(wrap => {\r\n            const interfaceWrap = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng');\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(interfaceWrap, 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            syncParamName(sendMng.params);\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const connWrap = logicNode.parent?.data as LogicUtil.WrapElement;\r\n        const sendMng = LogicElementUtil.getInnerWrapFixed(connWrap, 'send-mng').data as LogicUtil.NodeParamManager;\r\n        syncParamName(sendMng.params);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の更新に伴い、参照先のSend管理に処理（callback）を行う\r\n * @param logicNode ロジックノード\r\n * @param callback 処理\r\n */\r\nconst syncArgumentCallback = (\r\n    logicNode: TreeUtil.ElementNode,\r\n    callback: (sendNode: TreeUtil.ElementNode) => void\r\n) => {\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n\r\n    if (wrap.type === 'logic-item') {\r\n        const runRec = (logicNode: TreeUtil.ElementNode) => {\r\n            const inhMngNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'inherit-mng');\r\n            if (inhMngNode == undefined) return;\r\n            inhMngNode.children.forEach(child => {\r\n                const conn = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    runRec(LogicElementUtil.getInnerNodeFixed(child, 'inherit-logic'));\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    callback(LogicElementUtil.getInnerNodeFixed(child, 'send-mng'));\r\n                }\r\n            });\r\n        }\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(child => {\r\n            runRec(child);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        rootNode.children[0].children.forEach(seedNode => {\r\n            const interfaceNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'interface-mng');\r\n            const sendNode = LogicElementUtil.getInnerNodeFixed(interfaceNode, 'seedsend-mng');\r\n            const seed = (seedNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n            if (seed.entry === logicItem.name) {\r\n                callback(sendNode);\r\n            }\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const sendNode = LogicElementUtil.getInnerNodeFixed(logicNode.parent as TreeUtil.ElementNode, 'send-mng');\r\n        callback(sendNode);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentAdd = (logicNode: TreeUtil.ElementNode, newArgName: string, type: LogicUtil.ArgumentType) => {\r\n    const addNewParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const isArray = type === 'array';\r\n        const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n            {\r\n                name: newArgName,\r\n                formulaItems: ['var'],\r\n                values: !isArray ? [{ type:  'direct', value: '0' }] : [{ type:  'array', value: '' }],\r\n                isArray: isArray ? true : undefined\r\n            }\r\n        );\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        sendMng.params.push(paramWrap);\r\n        sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n    }\r\n    syncArgumentCallback(logicNode, addNewParam);\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentDel = (logicNode: TreeUtil.ElementNode, delArgName: string) => {\r\n    const delArgParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        let delIndex = -1;\r\n        sendMng.params.some((param, i) => {\r\n            if ((param.data as LogicUtil.NodeParamItem).name == delArgName) {\r\n                delIndex = i;\r\n                return 1;\r\n            }\r\n        });\r\n        sendMng.params.splice(delIndex, 1);\r\n        sendNode.children.splice(delIndex, 1);\r\n    }\r\n    syncArgumentCallback(logicNode, delArgParam);\r\n}","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Seed',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seed-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedManager).defs.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorLogicMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Logic',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'logic-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\n\r\nconst EditorLogicItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [isConnect, hasArgNode, hasFieldNode, hasConnectNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        return [\r\n            parentType === 'connector',\r\n            list.includes('argument-mng'),\r\n            list.includes('field-mng'),\r\n            list.includes('inherit-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        if (!isConnect) {\r\n            const param = wrap.data as LogicUtil.NodeLogicItem;\r\n            setName({ ...name, value: param.name });\r\n        }\r\n    };\r\n\r\n    /** 既存のロジック名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => {\r\n        // インヘリットの場合、名前を持たないため取得しない\r\n        if (wrap.type === 'inherit-logic') return [];\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node, isConnect]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 引数要素の有無を判定\r\n     */\r\n    const hasArgument = () => {\r\n        const argumentNode = LogicElementUtil.getInnerNode(node, 'argument-mng');\r\n        if (argumentNode == null) return false;\r\n        return argumentNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'field-mng');\r\n        if (fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 派生要素の有無を判定\r\n     */\r\n    const hasInherit = () => {\r\n        const inheritNode = LogicElementUtil.getInnerNode(node, 'inherit-mng');\r\n        if (inheritNode == null) return false;\r\n        return inheritNode.children.length > 0;\r\n    }\r\n\r\n    return (<>\r\n        {isConnect ? <></> : (<>\r\n            <ModifyOperations.Component\r\n                mappingForm={mappingForm}\r\n                checkableFields={[name]}\r\n                firstRegist={() => {\r\n                    const element: LogicUtil.NodeLogicItem = {\r\n                        name: name.value,\r\n                        mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                    };\r\n                    element.name = name.value;\r\n                    wrap.data = element;\r\n\r\n                    element.mngs.forEach(mng => {\r\n                        const newNode = TreeUtil.createNode(mng, node);\r\n                        const data = (newNode.data as LogicUtil.WrapElement).data;\r\n                        (data as LogicUtil.NodeParamManager).params.forEach(param => {\r\n                            newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                        });\r\n                        node.children.push(newNode);\r\n                    });\r\n                    invalidate();\r\n                    setStore({ ...store });\r\n                }}\r\n                modifyRegist={() => {\r\n                    const param = wrap.data as LogicUtil.NodeLogicItem;\r\n                    const prevName = param.name;\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n                    // 名前が変わった場合、参照箇所も修正する\r\n                    if (prevName !== param.name) {\r\n                        syncLogicName(node, prevName, param.name);\r\n                    }\r\n                }}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"param\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Name\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={200}\r\n                                isReadOnly={!isModify}\r\n                                checkable={name}\r\n                                setCheckable={setName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => !existNameList.includes(value),\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n        </>)}\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Argument'}\r\n                        width={300}\r\n                        isUse={hasArgNode}\r\n                        isEnable={!hasArgument()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasArgNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'argument-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as LogicUtil.NodeArgumentManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            if (hasArgNode) listPos++;\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'field-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Inherit'}\r\n                            width={300}\r\n                            isUse={hasConnectNode}\r\n                            isEnable={!hasInherit()}\r\n                            callback={() => {\r\n                                let listPos = 2;\r\n                                if (hasArgNode) listPos++;\r\n                                if (hasFieldNode) listPos++;\r\n                                toggleElement(\r\n                                    hasConnectNode,\r\n                                    listPos,\r\n                                    {\r\n                                        type: 'inherit-mng',\r\n                                        data: {\r\n                                            inherits: []\r\n                                        } as LogicUtil.NodeConnectManager\r\n                                    }\r\n                                );\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        {isConnect ? <></> : (\r\n            <FormUtil.BorderPanel\r\n                title=\"operation\"\r\n                isEnable={!isModify}\r\n                innerJsx={<>\r\n                    {LogicElementUtil.getReplicateButton(node, !isModify, 'logic', store, setStore, invalidate)}\r\n                    {/* <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Replicate',\r\n                                isEnable: !isModify,\r\n                                // isEnable: false,\r\n                                callback: () => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Replicate this logic.\"\r\n                                        buttons={[\r\n                                            {\r\n                                                label: 'Cancel',\r\n                                                callback: () => {\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                label: 'Enter',\r\n                                                callback: () => {\r\n                                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                                    const name = wrap.data[namable] as string;\r\n                                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                    // mappingForm();\r\n                                                    invalidate();\r\n                                                }\r\n                                            }\r\n                                        ]}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    /> */}\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Delete',\r\n                                callback: () => {\r\n                                    const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                    const refers = getLocgicRefers(node, param.name);\r\n                                    if (refers.length === 0) {\r\n                                        removeSelf();\r\n                                    } else {\r\n                                        store.system.dialog = <ConfirmDialog.Component\r\n                                            message={`[${param.name}] is referenced in the Inherit.\\n${refers}`}\r\n                                        />;\r\n                                        setStore({ ...store });\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                    {/* 並び順入れ替えボタン */}\r\n                    {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n                </>}\r\n            />\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicItem;\r\n\r\n/**\r\n * ロジックを参照しているInheritのリストを返す。\r\n * @param node 現在のノード\r\n * @param logicName ロジック名\r\n * @returns 参照Inheritリスト\r\n */\r\nexport const getLocgicRefers = (node: TreeUtil.ElementNode, logicName: string) => {\r\n\r\n    const refers: string[] = [];\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        refers.push(conn.id);\r\n    }\r\n    searchLogicReferInherit(node, logicName, callback);\r\n    return refers;\r\n}\r\n\r\n/**\r\n * ロジック名の変更に伴い、参照しているインヘリットを同期する\r\n * @param node ロジックノード\r\n */\r\nconst syncLogicName = (node: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        conn.depend = newName;\r\n    }\r\n    searchLogicReferInherit(node, prevName, callback);\r\n}\r\n\r\nconst searchLogicReferInherit = (\r\n    node: TreeUtil.ElementNode,\r\n    logicName: string,\r\n    callback: (conn: LogicUtil.NodeInheritConnector) => void\r\n) => {\r\n    const logicMngNode = node.parent as TreeUtil.ElementNode\r\n    const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng == undefined) return;\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n            if (conn.method === 'create') {\r\n                const inhLogic = LogicElementUtil.getInnerWrap(inh, 'inherit-logic');\r\n                runRec(inhLogic?.data);\r\n            } else {\r\n                if (conn.depend === logicName) {\r\n                    callback(conn);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    logicMngNode.children.forEach(logic => {\r\n        runRec((logic.data as LogicUtil.WrapElement).data);\r\n    });\r\n}","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype FormProps = {\r\n    inputType: FormUtil.CheckableValue;\r\n    value: FormUtil.CheckableValue;\r\n};\r\n\r\nenum Level {\r\n    FIELD = 0,\r\n    INITIAL,\r\n    INHERIT_FIELD,\r\n    INHERIT_EXTEND,\r\n    INHERIT_SEND,\r\n    SEED = -1,\r\n}\r\n\r\nconst EditorParamItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    /** 名前 */\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    /** 式 */\r\n    const [formulaItems, setFormulaItems] = useState<string[]>([]);\r\n    /** 変数の入力フォーム */\r\n    const [varFormList, setVarFormList] = useState<FormProps[]>([]);\r\n    // const [formJsxList, setFaormJsxList] = useState<JSX.Element[]>([]);\r\n\r\n    const isField = wrap.type === 'field-item';\r\n    const isCondition = wrap.type === 'condition-item';\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        setName({ value: param.name, errors: [] });\r\n        setFormulaItems(param.formulaItems.slice());\r\n        setVarFormList(param.values.map(v => {\r\n            return {\r\n                inputType: { value: v.type, errors: [] },\r\n                value: { value: v.value, errors: [] }\r\n            }\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const level: Level = useMemo(() => {\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        switch (parentType) {\r\n            case 'field-mng': return Level.FIELD;\r\n            case 'visual-mng':\r\n            case 'behavior-mng': return Level.INITIAL;\r\n            case 'inhfld-mng': return Level.INHERIT_FIELD;\r\n            case 'extend-mng': return Level.INHERIT_EXTEND;\r\n            case 'send-mng': return Level.INHERIT_SEND;\r\n        }\r\n        return Level.SEED;\r\n    }, [node]);\r\n\r\n    /**\r\n     * 引数とフィールド変数のキーリストを取得する。\r\n     */\r\n    const [argumentList, arrayArgList, fieldKeyList] = useMemo(() => {\r\n        let argumentList: string[] = [];\r\n        let arrayArgList: string[] = [];\r\n        const fieldKeys: string[] = [];\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const targetTypes: LogicUtil.NodeType[] = ['field-mng', 'behavior-mng', 'visual-mng', 'inhfld-mng', 'send-mng', 'extend-mng'];\r\n        if (targetTypes.includes(parentType)) {\r\n            const getLogicNode = () => {\r\n                switch (parentType) {\r\n                    case 'field-mng':\r\n                    case 'visual-mng':\r\n                    case 'behavior-mng': return node.parent?.parent;\r\n                    case 'inhfld-mng':\r\n                    case 'send-mng':\r\n                    case 'extend-mng': return node?.parent?.parent?.parent?.parent;\r\n                }\r\n            };\r\n            const logicItem = (getLogicNode()?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n            // 引数リストを追加\r\n            const argMng = logicItem.mngs.find(mng => mng.type === 'argument-mng');\r\n            if (argMng != undefined) {\r\n                argumentList = (argMng.data as LogicUtil.NodeArgumentManager).args\r\n                    .filter(arg => {\r\n                        const param = wrap.data as LogicUtil.NodeParamItem;\r\n                        const data = arg.data as LogicUtil.NodeArgumentItem;\r\n                        // return (param.isList && data.valueType === 'array') || (!param.isList && data.valueType !== 'array');\r\n                        return data.valueType === 'number';\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n                arrayArgList = (argMng.data as LogicUtil.NodeArgumentManager).args\r\n                    .filter(arg => {\r\n                        const param = wrap.data as LogicUtil.NodeParamItem;\r\n                        const data = arg.data as LogicUtil.NodeArgumentItem;\r\n                        // return (param.isList && data.valueType === 'array') || (!param.isList && data.valueType !== 'array');\r\n                        return data.valueType === 'array';\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n            }\r\n            // 変数リストを追加\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (level >= Level.INITIAL && fieldMng != undefined) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                    fieldKeys.push(fieldName);\r\n                });\r\n            }\r\n        } else if (parentType === 'seedsend-mng') {\r\n            // シード配下のSendは特別に扱う（どのレベルにも属さない）\r\n            const argMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'seedarg-mng');\r\n            if (argMng != null) {\r\n                argumentList = (argMng.data as LogicUtil.NodeSeedArgManager).args\r\n                    .filter(arg => {\r\n                        const data = arg.data as LogicUtil.NodeSeedArgItem;\r\n                        return !data.isArray;\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n                arrayArgList = (argMng.data as LogicUtil.NodeSeedArgManager).args\r\n                    .filter(arg => {\r\n                        const data = arg.data as LogicUtil.NodeSeedArgItem;\r\n                        return data.isArray;\r\n                    })\r\n                    .map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n            } else throw new Error('argMng is undefined.');\r\n        }\r\n        if (level >= Level.INHERIT_FIELD) {\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_RAD);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_LEN);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.RADIUS);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_R);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_G);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_B);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // フィールドキーにInherit配下のFieldパラメータを追加\r\n            if (level >= Level.INHERIT_EXTEND) {\r\n                const inhfldNode = LogicElementUtil.getInnerNode(node.parent?.parent as TreeUtil.ElementNode, 'inhfld-mng');\r\n                if (inhfldNode != null) {\r\n                    const fieldMng = (inhfldNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeFieldManager;\r\n                    fieldMng.fields.forEach(field => {\r\n                        const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                        fieldKeys.push(fieldName);\r\n                    });\r\n                }\r\n            }\r\n            // フィールドキーにExtendパラメータを追加\r\n            if (level === Level.INHERIT_SEND) {\r\n                const extendWrap = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'extend-mng') as LogicUtil.WrapElement;\r\n                const extendElement = extendWrap.data as LogicUtil.NodeParamManager;\r\n                //Extendにloop_countのパラメータがある場合\r\n                if (extendElement.params.find(\r\n                    param => (param.data as LogicUtil.NodeParamItem).name === ParamUtil.ExtendParamType.LOOP_COUNT\r\n                ) != undefined) {\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_COUNT);\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_ITERATE);\r\n                }\r\n            }\r\n        }\r\n        return [argumentList, arrayArgList, fieldKeys];\r\n    }, [node]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const paramNameList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (item === 'var') num++;\r\n        });\r\n\r\n        if (varFormList.length < num) {\r\n            const addNum = num - varFormList.length;\r\n            for (let i = 0; i < addNum; i++) varFormList.push({\r\n                inputType: { value: 'direct', errors: [] },\r\n                value: { value: '', errors: [] }\r\n            });\r\n            setVarFormList(varFormList.slice());\r\n        } else if (varFormList.length > num) {\r\n            const delNum = varFormList.length - num;\r\n            for (let i = 0; i < delNum; i++) varFormList.splice(varFormList.length - delNum, delNum);\r\n            setVarFormList(varFormList.slice());\r\n        }\r\n    }, [formulaItems]);\r\n\r\n    /** 「(」の数-「)」の数 */\r\n    const parenthesisBalance = useMemo(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (['(', 'rand(', 'integer('].includes(item)) num++;\r\n            else if (item === ')') num--;\r\n        });\r\n        return num;\r\n    }, [formulaItems]);\r\n\r\n    /** 値の入力フォームのJSX */\r\n    const formJsxList = useMemo(() => {\r\n        return varFormList.map((v, i) => {\r\n\r\n            const getValueForm = (): JSX.Element => {\r\n                const type = v.inputType.value as LogicUtil.ParamInputType;\r\n                if (type === 'direct') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isNumber\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else if (type === 'array') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkArrayNumber(value),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else {\r\n                    const isArray = (wrap.data as LogicUtil.NodeParamItem).isArray;\r\n                    let list: string[] = [];\r\n                    switch (type) {\r\n                        case 'argument': {\r\n                            list = !isArray ? argumentList : arrayArgList;\r\n                        } break;\r\n                        case 'field': {\r\n                            list = fieldKeyList;\r\n                        } break;\r\n                        case 'self': {\r\n                            list = ParamUtil.SelfParams;\r\n                        } break;\r\n                        case 'constant': {\r\n                            list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                        } break;\r\n                        case 'array.itr': {\r\n                            list = arrayArgList.map(name => name + '.itr');\r\n                        } break;\r\n                        case 'array.len': {\r\n                            list = arrayArgList.map(name => name + '.len');\r\n                        } break;\r\n                    }\r\n                    // if (type === 'argument') {\r\n                    //     list = argumentList;\r\n                    // } else if (type === 'field') {\r\n                    //     list = fieldKeyList;\r\n                    // } else if (type === 'self') {\r\n                    //     list = ParamUtil.SelfParams;\r\n                    // } else if (type === 'constant') {\r\n                    //     list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                    // }\r\n                    return (\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            list={list.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n            return <FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={`var_${i}`}\r\n                labelWidth={90}\r\n                marginTop={i === 0 ? 4 : 0}\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        checkable={v.inputType}\r\n                        width={142}\r\n                        isReadOnly={!isModify}\r\n                        setCheckable={(checkable) => {\r\n                            varFormList[i].inputType = checkable;\r\n                            if (isModify) {\r\n                                varFormList[i].value.value = checkable.value === 'direct' ? '0' : '';\r\n                            }\r\n                            setVarFormList(varFormList.slice());\r\n                        }}\r\n                        list={LogicUtil.ParamInputTypes.filter(item => {\r\n                            const param = wrap.data as LogicUtil.NodeParamItem;\r\n                            if (!param.isArray) {\r\n                                switch (item) {\r\n                                    case 'direct':\r\n                                    case 'constant':\r\n                                    case 'argument': return true;\r\n                                    case 'field': return level >= Level.INITIAL;\r\n                                    case 'array.len':\r\n                                    case 'self': return level >= Level.INHERIT_FIELD;\r\n                                    case 'array.itr': return level >= Level.INHERIT_SEND;\r\n                                    case 'array': return false;\r\n                                }\r\n                            } else {\r\n                                switch (item) {\r\n                                    case 'direct':\r\n                                    case 'constant':\r\n                                    case 'self':\r\n                                    case 'field': return false;\r\n                                    case 'array':\r\n                                    case 'argument': return true;\r\n                                }\r\n                            }\r\n                        }).map(item => {\r\n                            return { value: item, labelText: item };\r\n                        })}\r\n                    />\r\n                    {getValueForm()}\r\n                </>}\r\n            />;\r\n        });\r\n    }, [varFormList, isModify]);\r\n\r\n    const getFormulaJsx = () => {\r\n        let num = 0;\r\n        const jsxList: JSX.Element[] = [];\r\n        formulaItems.forEach((item) => {\r\n            if (jsxList.length > 0) {\r\n                jsxList.push(<span key={jsxList.length}>&nbsp;</span>);\r\n            }\r\n            if (item === 'var') {\r\n                jsxList.push(<_Var key={jsxList.length}>{`$\\{var_${num}}`}</_Var>);\r\n                num++;\r\n            } else {\r\n                jsxList.push(<_Sig key={jsxList.length}>{item}</_Sig>);\r\n            }\r\n        });\r\n        return jsxList;\r\n    }\r\n\r\n    const isLastVar = () => formulaItems.length > 0 && ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const isFormulaOK = parenthesisBalance === 0 && varFormList.length > 0 &&\r\n        ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const hasFormError = !isFormulaOK || varFormList.find(varForm => varForm.value.errors.length > 0) != undefined;\r\n\r\n\r\n    const getFormulaItem = (label: string, width: number, isEnable: boolean, value: string) => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        return {\r\n            label, width, isEnable: param.isArray ? false : isEnable,\r\n            callback: () => {\r\n                formulaItems.push(value);\r\n                setFormulaItems(formulaItems.slice());\r\n            }\r\n        };\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeParamItem = {\r\n                    name: name.value,\r\n                    formulaItems: formulaItems.slice(),\r\n                    values: varFormList.map(varForm => {\r\n                        return {\r\n                            type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                            value: varForm.value.value\r\n                        }\r\n                    })\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n            }}\r\n            isInputOK={parenthesisBalance === 0 && !hasFormError && name.errors.length === 0}\r\n            modifyRegist={() => {\r\n                const data = wrap.data as LogicUtil.NodeParamItem;\r\n                data.formulaItems = formulaItems.slice();\r\n                data.values = varFormList.map(varForm => {\r\n                    return {\r\n                        type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                        value: varForm.value.value\r\n                    }\r\n                });\r\n                if (isField) {\r\n                    const prevName = data.name;\r\n                    data.name = name.value;\r\n                    if (prevName !== name.value) {\r\n                        syncFieldName(node.parent as TreeUtil.ElementNode, prevName, name.value);\r\n                    }\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify || !isField}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = paramNameList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeParamItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('+', 50, isModify && isLastVar(), '+'),\r\n                        getFormulaItem('-', 50, isModify && isLastVar(), '-'),\r\n                        getFormulaItem('*', 50, isModify && isLastVar(), '*'),\r\n                        getFormulaItem('/', 50, isModify && isLastVar(), '/'),\r\n                        getFormulaItem('%', 50, isModify && isLastVar(), '%'),\r\n                        getFormulaItem('(', 35, isModify && !isLastVar(), '('),\r\n                        getFormulaItem(')', 35, isModify && isLastVar() && parenthesisBalance > 0, ')'),\r\n                        {\r\n                            label: 'del',\r\n                            width: 60,\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            callback: () => {\r\n                                formulaItems.splice(formulaItems.length - 1, 1);\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {!isCondition ? <></> : (\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            getFormulaItem('<', 50, isModify && isLastVar(), '<'),\r\n                            getFormulaItem('<=', 50, isModify && isLastVar(), '<='),\r\n                            getFormulaItem('=', 50, isModify && isLastVar(), '='),\r\n                            getFormulaItem('>=', 50, isModify && isLastVar(), '>='),\r\n                            getFormulaItem('>', 50, isModify && isLastVar(), '>'),\r\n                            getFormulaItem('&&', 50, isModify && isLastVar(), '&&'),\r\n                            getFormulaItem('||', 50, isModify && isLastVar(), '||'),\r\n                        ]}\r\n                    />\r\n                )}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('var', 70, isModify && !isLastVar(), 'var'),\r\n                        getFormulaItem('rand', 80, isModify && !isLastVar(), 'rand('),\r\n                        getFormulaItem('integer', 80, isModify && !isLastVar(), 'integer('),\r\n                        {\r\n                            label: 'clear',\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            width: 90,\r\n                            callback: () => {\r\n                                setFormulaItems([]);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_Formula\r\n                    isInvalid={!isFormulaOK}\r\n                >{getFormulaJsx()}</_Formula>\r\n                {formJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify && isField}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'field', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getFieldRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {!isField ? <></> : LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorParamItem;\r\n\r\n/**\r\n * ノードの変数を参照している箇所のリストを返す。\r\n * @param node 変数のノード\r\n * @param argName 変数名\r\n * @returns 参照パラメータリスト\r\n */\r\nexport const getFieldRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n * フィールド名の変更に伴い、式で参照している変数を同期する\r\n * @param mngNode ノード\r\n */\r\nexport const syncFieldName = (mngNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const type = (mngNode.data as LogicUtil.WrapElement).type;\r\n    if (type === 'field-mng') {\r\n        const logic = (mngNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n\r\n        const visualMng = logic.mngs.find(mng => mng.type === 'visual-mng');\r\n        if (visualMng != undefined) {\r\n            syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const behaviorMng = logic.mngs.find(mng => mng.type === 'behavior-mng');\r\n        if (behaviorMng != undefined) {\r\n            syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                // Inherit配下のField要素のチェック\r\n                if (inhfld != null) {\r\n                    syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                }\r\n                // Extend要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    } else if (type === 'inhfld-mng') {\r\n        const inheritWrap = mngNode.parent?.data as LogicUtil.WrapElement;\r\n\r\n        // Extend要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        // Send要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n}\r\n\r\nconst _Formula = styled.div<{\r\n    isInvalid: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 12px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    overflow-wrap: break-word;\r\n    height: 100px;//calc(100% - 4px);\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    background-color: #ffffff8b;\r\n    ${props => !props.isInvalid ? '' : css`\r\n        background-color: #ffe8628a;\r\n    `}\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    padding: 0 0 0 4px;\r\n    vertical-align: top;\r\n    margin: 5px 0 0 6px;\r\n`;\r\nconst _Var = styled.span`\r\n    color: #e70013;\r\n`;\r\nconst _Sig = styled.span`\r\n    color: #3333339d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorBehiviorMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [isVector, hasDecayParam, hasGravityParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.BehaviorParamType.VEC_X),\r\n            list.includes(ParamUtil.ModulateParamType.DECAY_RATE),\r\n            list.includes(ParamUtil.ModulateParamType.GRAVITY_VAL)\r\n        ]\r\n    }, [node]);\r\n\r\n    const exchangeElements = (flag: boolean, listPos: number,\r\n        trueParamElements: LogicUtil.NodeParamItem[],\r\n        falseParamElements: LogicUtil.NodeParamItem[]\r\n    ) => {\r\n        const size = (flag ? trueParamElements : falseParamElements).length;\r\n        LogicElementUtil.removeChild(node, listPos, size);\r\n\r\n        (flag ? trueParamElements : falseParamElements).forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    const exchangeVectorMethod = () => {\r\n        exchangeElements(!isVector, 3,\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_X, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_Y, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ],\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_RAD, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_LEN, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ]\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            mng.params.splice(listPos, size);\r\n            node.children.splice(listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                mng.params.splice(listPos + i, 0, wrap);\r\n                const newNode = TreeUtil.createNode(wrap, node);\r\n                node.children.splice(listPos + i, 0, newNode);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Vector method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Direction method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={!isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"modulate\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Decay'}\r\n                            width={300}\r\n                            isUse={hasDecayParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDecayParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_RATE,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.9' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Gravity'}\r\n                            width={300}\r\n                            isUse={hasGravityParam}\r\n                            callback={() => {\r\n                                toggleElements(hasGravityParam, !hasDecayParam ? 5 : 7, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_VAL,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.2' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorBehiviorMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype Medhod = 'blank' | 'particle' | 'snake'\r\n\r\nconst EditorVisualMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [drawMethod, hasDisappearParam, hasShrinkParam, hasFlashParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        let drawMethod: Medhod = 'blank';\r\n        if(list.length > 0) {\r\n            drawMethod = list.includes(ParamUtil.VisualParamType.THICKNESS) ? 'snake' : 'particle';\r\n        }\r\n        return [\r\n            drawMethod,\r\n            list.includes(ParamUtil.EffectParamType.DISAPPEAR_START),\r\n            list.includes(ParamUtil.EffectParamType.SHRINK_START),\r\n            list.includes(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME)\r\n        ]\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    const addElements = (paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        paramElements.forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n    const removeElements = (elementNameList: string[]) => {\r\n        const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        elementNameList.forEach((name) => {\r\n            mng.params.forEach((param, i) => {\r\n                if((param.data as LogicUtil.NodeParamItem).name === name) {\r\n                    LogicElementUtil.removeChild(node, i, 1);\r\n                }\r\n            });\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam || hasFlashParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'None'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'blank'}\r\n                            callback={() => {\r\n                                mng.params.length = 0;\r\n                                node.children.length = 0;\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Snake Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'snake'}\r\n                            callback={() => {\r\n                                removeElements([\r\n                                    ParamUtil.VisualParamType.RADIUS\r\n                                ]);\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.THICKNESS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Particle Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'particle'}\r\n                            callback={() => {\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.RADIUS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '20' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"effect\"\r\n            isEnable={!isModify && drawMethod !== 'blank'}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Disappear'}\r\n                            width={300}\r\n                            isUse={hasDisappearParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDisappearParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.DISAPPEAR_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Shrink'}\r\n                            width={300}\r\n                            isUse={hasShrinkParam}\r\n                            callback={() => {\r\n                                toggleElements(hasShrinkParam, !hasDisappearParam ? 5 : 6, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.SHRINK_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Flash'}\r\n                            width={300}\r\n                            isUse={hasFlashParam}\r\n                            callback={() => {\r\n                                toggleElements(hasFlashParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_APPEAR_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_HIDE_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorVisualMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInheritConnMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeConnectManager;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Inherit',\r\n                        callback: () => {\r\n                            const wrap: LogicUtil.WrapElement = {\r\n                                type: 'connector',\r\n                                data: null\r\n                            }\r\n                            mng.inherits.push(wrap);\r\n                            const newNode = TreeUtil.createNode(wrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorInheritConnector = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, invalidate, setModify, isModify, removeSelf, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const [condition, setCondition] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [identify, setIdentify] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [method, setMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [depend, setDepend] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n        setMethod({ ...method, value: param.method });\r\n        setDepend({ ...depend, value: param.depend });\r\n        setIdentify({ ...identify, value: param.id });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n            // 派生識別名（自動命名）の初期値を取得\r\n            const defaultName = LogicElementUtil.getNumberingOnPrefixName('id_', node.parent as TreeUtil.ElementNode);\r\n            setIdentify({ ...identify, value: defaultName });\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const isCreate = method.value === 'create';\r\n\r\n    const hasFieldNode = useMemo(() => {\r\n        return LogicElementUtil.getInnerNode(node, 'inhfld-mng') != null;\r\n    }, [node]);\r\n\r\n    /** 引用するロジックリスト */\r\n    const logicList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return inheritMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    /** 同階層の既存のインヘリットIDを取得（重複チェックに使用） */\r\n    const idList = useMemo(() => {\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    const initConnectorNode = (param: LogicUtil.NodeInheritConnector) => {\r\n        param.mngs = [];\r\n        node.children = [];\r\n        param.mngs.push({\r\n            type: 'extend-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        param.mngs.push({\r\n            type: 'send-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        if (isCreate) {\r\n            param.mngs.push({\r\n                type: 'inherit-logic',\r\n                data: {\r\n                    mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                } as LogicUtil.NodeInheritItem\r\n            });\r\n        }\r\n        wrap.data = param;\r\n\r\n        param.mngs.forEach(mng => {\r\n            const newNode = TreeUtil.createNode(mng, node);\r\n            const data = (newNode.data as LogicUtil.WrapElement);\r\n            switch (data.type) {\r\n                case 'inherit-logic': {\r\n                    LogicElementUtil.syncTreeElementFromWrap(newNode);\r\n                } break;\r\n                case 'send-mng': {\r\n                    const connector = (newNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.method === 'depend') {\r\n                        console.log('initSendParams');\r\n                        initSendParams(newNode, rootData);\r\n                    }\r\n                } break;\r\n            }\r\n            node.children.push(newNode);\r\n        });\r\n    }\r\n\r\n    const getSendParamList = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement): string[] => {\r\n        const connector = (sendNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = inheritMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement) => {\r\n        const sendParamList = getSendParamList(sendNode, rootData);\r\n        // console.log(sendParamList);\r\n        const wrap = sendNode.data as LogicUtil.WrapElement;\r\n        const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n                sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'inhfld-mng');\r\n        if(fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n\r\n    const isDisable = wrap.data == null ? false : (wrap.data as LogicUtil.NodeInheritConnector).disable ?? false;\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[identify, method, depend]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeInheritConnector = {\r\n                    method: method.value as LogicUtil.InheritMethod,\r\n                    depend: depend.value,\r\n                    id: identify.value,\r\n                    mngs: []\r\n                };\r\n                initConnectorNode(param);\r\n                invalidate();\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                const isChange = param.method !== method.value || param.depend !== depend.value;\r\n                param.method = method.value as LogicUtil.InheritMethod;\r\n                param.depend = depend.value;\r\n                param.id = identify.value;\r\n                wrap.data = param;\r\n\r\n                if (isChange) {\r\n                    initConnectorNode(param);\r\n                }\r\n                invalidate();\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={method}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                // createが選択されたらdependを空にする\r\n                                if (checkable.value === 'create') {\r\n                                    setDepend({ ...depend, value: '' });\r\n                                }\r\n                                setMethod(checkable);\r\n                            }}\r\n                            list={LogicUtil.ConnectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Depend\"\r\n                    isEnabled={method.value === 'depend'}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={depend}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setDepend}\r\n                            list={logicList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            dependency={[method]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => {\r\n                                        return method.value !== 'depend' || ValidateUtil.checkRequired(value);\r\n                                    },\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Identify\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={identify}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setIdentify}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !idList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                0,\r\n                                {\r\n                                    type: 'inhfld-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Disable'}\r\n                        width={300}\r\n                        isUse={isDisable}\r\n                        isEnable={!isModify}\r\n                        callback={() => {\r\n                            const data = (wrap.data as LogicUtil.NodeInheritConnector);\r\n                            if (isDisable) {\r\n                                data.disable = undefined;\r\n                            } else {\r\n                                data.disable = true;\r\n                            }\r\n                            invalidate();\r\n                        }}\r\n                    />}\r\n                />\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'inherit', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Edit local',\r\n                            isEnable: !isModify && !isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Create a clone from the depended inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                                                const logicList = logicMng.defs.map(def => def.data as LogicUtil.NodeLogicItem);\r\n                                                // ディペンドしているロジックを取得\r\n                                                const dependLogic = logicList.find(inherit => inherit.name === depend.value);\r\n                                                if (dependLogic != undefined) {\r\n                                                    const cloneLogic = JSON.parse(JSON.stringify(dependLogic)) as LogicUtil.NodeLogicItem;\r\n                                                    const connectItem: LogicUtil.NodeInheritItem = {\r\n                                                        mngs: cloneLogic.mngs\r\n                                                    };\r\n                                                    const newWrap: LogicUtil.WrapElement = {\r\n                                                        type: 'inherit-logic',\r\n                                                        data: connectItem\r\n                                                    };\r\n                                                    const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                                                    // 子要素の展開\r\n                                                    newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                    const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                    param.method = 'create';\r\n                                                    param.depend = '';\r\n                                                    mappingForm();\r\n                                                }\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Detach global',\r\n                            isEnable: !isModify && isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Detach a clone from the this inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                let rootNode = node;\r\n                                                while (rootNode.parent != null) rootNode = rootNode.parent;\r\n                                                const inheritNode = node.children.find(el => (el.data as LogicUtil.WrapElement).type === 'inherit-logic');\r\n                                                const logicMngNode = rootNode.children.find(el => (el.data as LogicUtil.WrapElement).type === 'logic-mng');\r\n                                                if (logicMngNode == undefined || inheritNode == undefined) return;\r\n                                                const inherit = (inheritNode.data as LogicUtil.WrapElement).data;\r\n                                                const clone = JSON.parse(JSON.stringify((inherit))) as LogicUtil.NodeInheritItem;\r\n                                                // ロジック名（自動命名）を取得\r\n                                                const defaultName = LogicElementUtil.getNumberingOnPrefixName('clone_inherit_', logicMngNode);\r\n                                                const logicItem: LogicUtil.NodeLogicItem = {\r\n                                                    ...clone,\r\n                                                    name: defaultName\r\n                                                };\r\n                                                const newWrap: LogicUtil.WrapElement = {\r\n                                                    type: 'logic-item',\r\n                                                    data: logicItem\r\n                                                };\r\n\r\n                                                // ロジックマネージャに追加\r\n                                                const newNode = LogicElementUtil.addChild(newWrap, logicMngNode);\r\n                                                // 子要素の展開\r\n                                                newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                // 自身（コネクタ）からインヘリット要素を削除\r\n                                                LogicElementUtil.removeChild(node, 2, 1);\r\n\r\n                                                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                param.method = 'depend';\r\n                                                param.depend = logicItem.name;\r\n                                                mappingForm();\r\n\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnector;","import styled, { css } from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport { useContext, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\nconst FRAME_WIDTH = 400;\r\nnamespace DrawableVectorChooser {\r\n\r\n    export const Component = (props: {\r\n        addPoint: (x: number, y: number) => void;\r\n        clear: () => void;\r\n        xList: number[];\r\n        yList: number[];\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const screenRate = store.env.screenRate;\r\n\r\n        const [isDraw, setDraw] = useState(false);\r\n        const ref = useRef<HTMLDivElement>(null);\r\n\r\n        const pointJsxList = useMemo(() => {\r\n            return props.xList.map((x, i) => {\r\n                const y = props.yList[i];\r\n                return (\r\n                    <_Point key={i}\r\n                        x={x}\r\n                        y={y}\r\n                    />\r\n                );\r\n            });\r\n        }, [props.xList.length]);\r\n\r\n\r\n        const putAction = (x: number, y: number) => {\r\n            setDraw(true);\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2);\r\n            store.env.scrollLock = true;\r\n            setStore({...store});\r\n        }\r\n\r\n        const moveAction = (x: number, y: number) => {\r\n            if (!isDraw) return;\r\n            const clientRect = (ref.current as HTMLDivElement).getBoundingClientRect();\r\n            const posX = (x - clientRect.x) / screenRate;\r\n            const posY = (y - clientRect.y) / screenRate;\r\n            const subX = posX - (props.xList[props.xList.length - 1] + FRAME_WIDTH / 2);\r\n            const subY = posY - (props.yList[props.yList.length - 1] + FRAME_WIDTH / 2);\r\n            const distance = Math.sqrt(subX * subX + subY * subY);\r\n            if (distance > 10) props.addPoint(posX - FRAME_WIDTH / 2, posY - FRAME_WIDTH / 2);\r\n        }\r\n\r\n        const releaseAction = () => {\r\n            setDraw(false);\r\n            store.env.scrollLock = false;\r\n            setStore({...store});\r\n        }\r\n\r\n        return (<>\r\n            <FormUtil.FormRecord\r\n                titleLabel=\"Point\"\r\n                jsx={\r\n                    <FormUtil.FixedText\r\n                        value={props.xList.length.toString()}\r\n                        isRecordItem\r\n                    />\r\n                }\r\n            />\r\n            <_Frame\r\n                ref={ref}\r\n                onMouseDown={(e) => { putAction(e.clientX, e.clientY) }}\r\n                onMouseMove={(e) => { moveAction(e.clientX, e.clientY) }}\r\n                onMouseUp={releaseAction}\r\n                onMouseLeave={releaseAction}\r\n                onTouchStart={(e) => { putAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchMove={(e) => { moveAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n                onTouchEnd={releaseAction}\r\n                onTouchCancel={releaseAction}\r\n                isDraw={store.env.scrollLock}\r\n            >\r\n                <_Center />\r\n                {pointJsxList}\r\n            </_Frame>\r\n            <FormUtil.ButtonRecord buttons={[\r\n                {\r\n                    label: 'Clear',\r\n                    isEnable: props.xList.length > 0,\r\n                    callback: props.clear,\r\n                }\r\n            ]} />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default DrawableVectorChooser;\r\n\r\nconst _Frame = styled.div<{\r\n    isDraw: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${FRAME_WIDTH}px;\r\n    height: 400px;\r\n    margin: 0 0 0 3px;\r\n    background-color: #2e7085;\r\n    ${props => !props.isDraw ? '' : css`\r\n        background-color: #5c9caf;\r\n    `}\r\n    border: 2px solid #800;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Point = styled.div<{\r\n    x: number;\r\n    y: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${props => props.x + FRAME_WIDTH / 2 - 5}px;\r\n    top: ${props => props.y + FRAME_WIDTH / 2 - 5}px;\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 10px;\r\n    background-color: #fcfeff9d;\r\n    border: 1px solid #dfe5ff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Center = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: ${FRAME_WIDTH / 2 - 10}px;\r\n    top: ${FRAME_WIDTH / 2 - 10}px;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 20px;\r\n    background-color: #800;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSendManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const isDepend = () => {\r\n        const conn = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        return conn.method === 'depend';\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"template\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Connect Position',\r\n                            isEnable: !isDepend(),\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.ConnectParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Set Position',\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.SetParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSendManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFieldMng = () => {\r\n    const { invalidate, node, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Field',\r\n                        callback: () => {\r\n                            // const newWrap: FactoryUtil.WrapNode = FactoryUtil.createParamWrap('field-item',\r\n                            //     { name: '', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                            // );\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'field-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFieldMng;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorExtendMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [hasLoopParam, hasInvokeParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name as ParamUtil.ExtendParam;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.ExtendParamType.LOOP_COUNT),\r\n            list.includes(ParamUtil.ExtendParamType.INVOKE)\r\n        ]\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Loop'}\r\n                            width={300}\r\n                            isUse={hasLoopParam}\r\n                            callback={() => {\r\n                                toggleElement(hasLoopParam, 0, {\r\n                                    type: 'param-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.LOOP_COUNT,\r\n                                        formulaItems: ['var'],\r\n                                        values: [{ type: 'direct', value: '1' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Invoke'}\r\n                            width={300}\r\n                            isUse={hasInvokeParam}\r\n                            callback={() => {\r\n                                toggleElement(hasInvokeParam, hasLoopParam ? 1 : 0, {\r\n                                    type: 'condition-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.INVOKE,\r\n                                        formulaItems: ['var', '=', 'var'],\r\n                                        values: [{ type: 'direct', value: '0' }, { type: 'direct', value: '0' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorExtendMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\n\r\nconst EditorSeedItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [entry, setEntry] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [permit, setPermit] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setEntry({ ...entry, value: param.entry });\r\n        setPermit({ ...permit, value: param.permit })\r\n    };\r\n\r\n    /** 既存のシード名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    // 引用するロジックリスト\r\n    const logicNameList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const logicMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return logicMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    const getSendParamList = (): LogicUtil.NodeArgumentItem[] => {\r\n        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n        const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = logicMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return arg.data as LogicUtil.NodeArgumentItem;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = () => {\r\n        const sendParamList = getSendParamList();\r\n        const sendNode = LogicElementUtil.getInnerNode(node, 'interface-mng', 'seedsend-mng') as TreeUtil.ElementNode;\r\n        const params = ((sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param.name)) {\r\n                const isArray = param.valueType === 'array';\r\n                const paramWrap = LogicElementUtil.createParamWrap('seedsend-item',\r\n                    {\r\n                        name: param.name,\r\n                        formulaItems: ['var'],\r\n                        values: !isArray ? [{ type:  'direct', value: '0' }] : [{ type:  'array', value: '' }],\r\n                        isArray: isArray ? true : undefined\r\n                    }\r\n                );\r\n                params.push(paramWrap);\r\n            }\r\n        });\r\n        LogicElementUtil.syncTreeElementFromWrap(sendNode);\r\n    }\r\n\r\n    const getDefaultSeedMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'interface-mng',\r\n                data: {\r\n                    mngs: [\r\n                        {\r\n                            type: 'seedarg-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeSeedArgManager\r\n                        },\r\n                        {\r\n                            type: 'seedsend-mng',\r\n                            data: {\r\n                                params: []\r\n                            } as LogicUtil.NodeSeedSendManager\r\n                        },\r\n                    ]\r\n                } as LogicUtil.NodeInterfaceMng\r\n            },\r\n            {\r\n                type: 'thumbnail-mng',\r\n                data: {\r\n                    items: []\r\n                } as LogicUtil.NodeThumnailManager\r\n            },\r\n            {\r\n                type: 'sample-mng',\r\n                data: {\r\n                    samples: []\r\n                } as LogicUtil.NodeSampleManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, entry, permit]}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSeedItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    entry: entry.value,\r\n                    permit: permit.value as LogicUtil.PermitType,\r\n                    mngs: getDefaultSeedMngs()\r\n                };\r\n                wrap.data = element;\r\n\r\n                LogicElementUtil.syncTreeElementFromWrap(node);\r\n                // 参照しているロジックの引数をSendに設定\r\n                initSendParams();\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedItem;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.permit = permit.value as LogicUtil.PermitType;\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 24),\r\n                                    errorType: \"length\"\r\n                                },\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Entry\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={entry}\r\n                            width={200}\r\n                            // 更新時は編集できない\r\n                            isReadOnly={!isModify || wrap.data != null}\r\n                            setCheckable={setEntry}\r\n                            list={logicNameList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Permit\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={permit}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setPermit}\r\n                            list={LogicUtil.PermitTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'seed', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedItem;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext as LogicTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorThumbnailMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(LogicTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeThumnailManager;\r\n\r\n    const hasSample = useMemo(() => {\r\n        const sampleMngNode = LogicElementUtil.getInnerNode(node.parent as TreeUtil.ElementNode, 'sample-mng') as TreeUtil.ElementNode;\r\n        return sampleMngNode.children.length as number > 0;\r\n    }, []);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            // isEnable={hasSample}\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Thumbnail',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'thumbnail-item',\r\n                                data: null\r\n                            }\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport Particle from \"../../../../graphic/particle\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst WND_SIZE = 100;\r\n\r\nconst EditorThumbnailItem = () => {\r\n    const { rootData, node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n    const data = wrap.data as LogicUtil.NodeThumbnailItem;\r\n\r\n\r\n    const seedWrap = node.parent?.parent?.data as LogicUtil.WrapElement;\r\n    const sampleMng = LogicElementUtil.getInnerWrap(seedWrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n    const samples = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [urls, setUrls] = useState<string[]>([]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n        setName({ ...name, value: param.name });\r\n        setFrame({ ...frame, value: param.frame.toString() });\r\n    };\r\n    \r\n    /** 既存のサムネイル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n            setTimeout(() => {\r\n                const urls: string[] = [];\r\n                samples.forEach((sample, i) => {\r\n                    urls.push(getThumbnailURL(data.frame, i));\r\n                });\r\n                setUrls(urls);\r\n            }, 1);\r\n        }\r\n    }, [node]);\r\n\r\n    const getSeedValueMap = (sampleNo: number): PreviewUtil.ValueMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ValueMap[] = [];\r\n        argMng.args.forEach((wrap, i) => {\r\n            const item = wrap.data as LogicUtil.NodeSeedArgItem;\r\n            if(!item.isArray) {\r\n                const name = item.name;\r\n                const value = Number(samples[sampleNo].values[i]);\r\n                argMap.push( { name, value });\r\n            }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams\r\n        .filter(item => !item.isArray)\r\n        .map(item => {\r\n            return { name: item.name, value: PreviewUtil.convertParamsToValue(item.name, sendParams, argMap) ?? 0 }\r\n        });\r\n    }\r\n    const getSeedArrayMap = (sampleNo: number): PreviewUtil.ArrayMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ArrayMap[] = [];\r\n        argMng.args.forEach((wrap, i) => {\r\n            const item = wrap.data as LogicUtil.NodeSeedArgItem;\r\n            if(item.isArray) {\r\n                const name = item.name;\r\n                const array = samples[sampleNo].values[i].split(',').map(v => Number(v));\r\n                argMap.push( { name, array });\r\n            }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams\r\n        .filter(item => item.isArray)\r\n        .map(item => {\r\n            return { name: item.name, array: PreviewUtil.convertParamsToArray(item.name, sendParams, argMap) ?? [] }\r\n        });\r\n    }\r\n\r\n    const getThumbnailURL = (targetFrame: number, sampleNo: number) => {\r\n        console.log('create start!');\r\n        const owner: Particle.Instance[] = [];\r\n\r\n        let frameCnt = 0;\r\n        do {\r\n            if (frameCnt === 0) {\r\n                const seed = (node.parent?.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n                const logicManager = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                const logic = logicManager.defs.find(logic => (logic.data as LogicUtil.NodeLogicItem).name === seed.entry);\r\n                if (logic == undefined) break;\r\n\r\n                const sendValueMapList = getSeedValueMap(sampleNo);\r\n                const sendArrayMapList = getSeedArrayMap(sampleNo);\r\n                owner.push(new Particle.Instance(\r\n                    PreviewUtil.buildLogicProps(owner, logic.data, rootData, sendValueMapList, sendArrayMapList))\r\n                );\r\n            }\r\n\r\n            if (frameCnt === targetFrame) {\r\n                return CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                });\r\n            }\r\n\r\n            // パーティクルの更新\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                particle.update();\r\n            }\r\n\r\n            // 死滅したパーティクルの削除\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frameCnt > 500 || owner.length > 3000) break;\r\n            frameCnt++;\r\n        } while (owner.length > 0);\r\n        return '';\r\n    }\r\n\r\n    const pictureJsxList = useMemo(() => {\r\n        const sampleMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n        return sampleMng.samples.map((wrap, i) => {\r\n            const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n\r\n            const url = urls[i];\r\n            const imgJsx = url == undefined ? <></> : <_IMG src={urls[i]} />;\r\n            return (\r\n                <_SampleDiv key={i}>-\r\n                    <_SampleName>{sample.name}</_SampleName>\r\n                    <_CanvasDiv>\r\n                        {imgJsx}\r\n                    </_CanvasDiv>\r\n                </_SampleDiv>\r\n            );\r\n        });\r\n    }, [node, urls]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, frame]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeThumbnailItem = {\r\n                    name: name.value,\r\n                    frame: Number(frame.value),\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n                param.name = name.value;\r\n                param.frame = Number(frame.value);\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"preview\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {pictureJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailItem;\r\n\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport DrawUtil from \"../../../graphic/drawUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport DrawableVectorChooser from \"./drawableVectorChooser\";\r\n\r\nnamespace LogicFormUtil {\r\n\r\n    export const buildPreviewForms = (\r\n        isReadOnly: boolean,\r\n        argumentList: LogicUtil.NodeSeedArgItem[],\r\n        formgrpList: LogicUtil.NodeFromGrpItem[],\r\n        formList: FormUtil.CheckableValue[],\r\n        setFormList: ((formList: FormUtil.CheckableValue[]) => void)\r\n    ): JSX.Element[] => {\r\n        /** 入力フォームのJSX */\r\n        const formJsxList: JSX.Element[] = [];\r\n        const usedGrps: string[] = [];\r\n        formList.forEach((form, i) => {\r\n            const argument = argumentList[i];\r\n            const formgrp = formgrpList.find(grp => grp.args.includes(argument.name));\r\n\r\n            // フォームグループが設定されている場合、独自の入力UIを表示する\r\n            if (formgrp != undefined) {\r\n                // 設定済みであれば追加しない\r\n                if (usedGrps.includes(formgrp.name)) return 1;\r\n                // 利用済みリストに追加\r\n                usedGrps.push(formgrp.name);\r\n                const targetForms: number[] = [];\r\n                argumentList.forEach((arg, j) => {\r\n                    if (formgrp.args.includes(arg.name)) {\r\n                        targetForms.push(j);\r\n                    }\r\n                });\r\n                switch (formgrp.method) {\r\n                    case 'color': {\r\n                        const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                            r: Number(formList[targetForms[0]].value),\r\n                            g: Number(formList[targetForms[1]].value),\r\n                            b: Number(formList[targetForms[2]].value),\r\n                            a: 255\r\n                        }).substring(0, 7);\r\n                        // console.log(colorCode);\r\n                        formJsxList.push(<div key={i}>\r\n                            <FormUtil.Record\r\n                                jsx={\r\n                                    <_Message>{formgrp.name}: <_Type>color </_Type><_Range>({0} ～ {255} respectively)</_Range></_Message>\r\n                                }\r\n                            />\r\n                            <FormUtil.Record\r\n                                jsx={<>\r\n                                    {targetForms.map((formIndex, j) => {\r\n                                        return (\r\n                                            <FormUtil.TextField\r\n                                                key={formIndex}\r\n                                                width={72}\r\n                                                marginLeft={j === 0 ? 5 : 4}\r\n                                                isNumber\r\n                                                isReadOnly={isReadOnly}\r\n                                                checkable={formList[formIndex]}\r\n                                                setCheckable={() => {\r\n                                                    setFormList(formList.slice());\r\n                                                }}\r\n                                                validates={[\r\n                                                    {\r\n                                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                        errorType: \"required\"\r\n                                                    },\r\n                                                    {\r\n                                                        checker: (value) => ValidateUtil.checkNumberRange(value, argument.min as number, argument.max as number),\r\n                                                        errorType: 'value'\r\n                                                    }\r\n                                                ]}\r\n                                            />\r\n                                        );\r\n                                    })}\r\n                                    <_Color type=\"color\" value={colorCode}\r\n                                        disabled={isReadOnly}\r\n                                        onChange={(value) => {\r\n                                            const rgba = DrawUtil.convertRgbaFromColorCode(value.target.value + 'ff');\r\n                                            if (rgba != null) {\r\n                                                formList[targetForms[0]].value = rgba.r.toString();\r\n                                                formList[targetForms[1]].value = rgba.g.toString();\r\n                                                formList[targetForms[2]].value = rgba.b.toString();\r\n                                            }\r\n                                            setFormList(formList.slice());\r\n                                        }}\r\n                                    />\r\n                                </>}\r\n                            />\r\n                        </div>);\r\n                    } break;\r\n                    case 'draw': {\r\n                        const xValue = formList[targetForms[0]].value;\r\n                        const yValue = formList[targetForms[1]].value;\r\n                        const xList = (xValue === '' ? [] : xValue.split(',').map(v => Number(v)));\r\n                        const yList = (xValue === '' ? [] : yValue.split(',').map(v => Number(v)));\r\n                        formJsxList.push(<div key={i}>\r\n                            <FormUtil.Record\r\n                                jsx={\r\n                                    <_Message>{formgrp.name}: <_Type>point </_Type><_Range>(～ {255} drawing)</_Range></_Message>\r\n                                }\r\n                            />\r\n                            <DrawableVectorChooser.Component\r\n                                addPoint={(x, y) => {\r\n                                    xList.push(x);\r\n                                    yList.push(y);\r\n                                    formList[targetForms[0]].value = xList.join(',');\r\n                                    formList[targetForms[1]].value = yList.join(',');\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                clear={() => {\r\n                                    formList[targetForms[0]].value = '';\r\n                                    formList[targetForms[1]].value = '';\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                xList={xList}\r\n                                yList={yList}\r\n                            />\r\n                        </div>);\r\n                    } break;\r\n                }\r\n            } else {\r\n                let labelName = argument.name;\r\n                if (argument.disp != undefined) labelName = argument.disp;\r\n                formJsxList.push(<div key={i}>\r\n                    <FormUtil.Record\r\n                        jsx={\r\n                            <_Message>{labelName}: <_Type>number </_Type><_Range>({argument.min} ～ {argument.max})</_Range></_Message>\r\n                        }\r\n                    />\r\n                    <FormUtil.Record\r\n                        jsx={<>\r\n                            <FormUtil.TextField\r\n                                width={142}\r\n                                marginLeft={6}\r\n                                isNumber\r\n                                isReadOnly={isReadOnly}\r\n                                step={argument.step}\r\n                                checkable={form}\r\n                                setCheckable={() => {\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, argument.min as number, argument.max as number),\r\n                                        errorType: 'value'\r\n                                    }\r\n                                ]}\r\n                            />\r\n                            <_Tsumami type=\"range\" value={Number(form.value)} min={argument.min} max={argument.max} step={argument.step}\r\n                                disabled={isReadOnly}\r\n                                onChange={(value) => {\r\n                                    formList[i] = { ...form, value: value.target.value };\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                            />\r\n                        </>}\r\n                    />\r\n                </div>);\r\n            }\r\n        });\r\n        return formJsxList;\r\n    }\r\n}\r\n\r\nexport default LogicFormUtil;\r\n\r\n\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    overflow: hidden;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Type = styled.span`\r\n    color: #c10000;\r\n    font-weight: 600;\r\n`;\r\nconst _Range = styled.span`\r\n    color: #423e84fb;\r\n`;\r\n\r\nconst _Tsumami = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 11px 0 0 6px;\r\n    width: calc(100% - 160px);\r\n`;\r\n\r\nconst _Color = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 3px 0 0 6px;\r\n    width: 100px;\r\n    height: 34px;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactDetArgumentMng from \"../detail/logic/editorArgumentMng\";\r\nimport EditorArgumentItem from \"../detail/logic/editorArgumentItem\";\r\nimport FactDetSeedMng from \"../detail/seed/editorSeedMng\";\r\nimport EditorLogicMng from \"../detail/logic/editorLogicMng\";\r\nimport EditorLogicItem from \"../detail/logic/editorLogicItem\";\r\nimport EditorParamItem from \"../detail/logic/editorParamItem\";\r\nimport FactDetBehiviorMng from \"../detail/logic/editorBehiviorMng\";\r\nimport EditorVisualMng from \"../detail/logic/editorVisualMng\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport EditorInheritConnMng from \"../detail/logic/editorInheritConnMng\";\r\nimport EditorInheritConnector from \"../detail/logic/editorInheritConnector\";\r\nimport EditorSendManager from \"../detail/logic/editorSendManager\";\r\nimport EditorFieldMng from \"../detail/logic/editorFieldMng\";\r\nimport EditorExtendMng from \"../detail/logic/editorExtendMng\";\r\nimport EditorSeedItem from \"../detail/seed/editorSeedItem\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"./logicElementUtil\";\r\nimport EditorThumbnailMng from \"../detail/seed/editorThumbnailMng\";\r\nimport EditorThumbnailItem from \"../detail/seed/editorThumbnailItem\";\r\nimport EditorSampleItem from \"../detail/seed/editorSampleItem\";\r\nimport EditorSampleMng from \"../detail/seed/editorSampleMng\";\r\nimport EditorInterfaceManager from \"../detail/seed/editorInterfaceManager\";\r\nimport EditorSeedArgMng from \"../detail/seed/editorSeedArgMng\";\r\nimport EditorSeedArgItem from \"../detail/seed/editorSeedArgItem\";\r\nimport EditorSeedSendMng from \"../detail/seed/editorSeedSendMng\";\r\nimport EditorFormgrpItem from \"../detail/seed/editorFormgrpItem\";\r\nimport EditorFormgrpMng from \"../detail/seed/editorFormgrpMng\";\r\n\r\nnamespace LogicUtil {\r\n\r\n    export type DetailArgs = {\r\n        rootData: LogicUtil.WrapElement;\r\n        node: TreeUtil.ElementNode;\r\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\r\n        invalidate: () => void;\r\n        isModify: boolean;\r\n        setModify: (isModify: boolean) => void;\r\n        // setRootData: React.Dispatch<React.SetStateAction<WrapElement>>;\r\n        setRootData: (rootData: WrapElement) => void;\r\n        removeSelf: () => void;\r\n    }\r\n\r\n    /**\r\n     * 変数名チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkFieldName = (str: string) => {\r\n        // 1文字目が数値でないこと\r\n        const isNoHeadNumber = !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].\r\n            includes(str.substring(0, 1));\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyz_';\r\n        return isNoHeadNumber && ValidateUtil.checkIncludesChars(str, list);\r\n    }\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'seed-mng' |\r\n        'logic-mng' |\r\n        'seed-item' |\r\n        'logic-item' |\r\n        'argument-mng' |\r\n        'argument-item' |\r\n        'field-mng' |\r\n        'field-item' |\r\n        'visual-mng' |\r\n        'behavior-mng' |\r\n        'inhfld-mng' |\r\n        'extend-mng' |\r\n        'inherit-mng' |\r\n        'connector' |\r\n        'inherit-logic' |\r\n        'send-mng' |\r\n        'send-item' |\r\n        'param-item' |\r\n        'condition-item' |\r\n        'interface-mng' |\r\n        'sample-mng' |\r\n        'sample-item' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-item' |\r\n        'seedarg-mng' |\r\n        'seedsend-mng' |\r\n        'seedarg-item' |\r\n        'seedsend-item' |\r\n        'formgrp-mng' |\r\n        'formgrp-item'\r\n        ;\r\n\r\n    export const ArgTypes = ['number', 'array'] as const;\r\n    export type ArgumentType = typeof ArgTypes[number];\r\n\r\n    export const ParamInputTypes = ['direct', 'array', 'constant', 'argument', 'self', 'field', 'array.len', 'array.itr'] as const;\r\n    export type ParamInputType = typeof ParamInputTypes[number];\r\n\r\n    export const ConnectTypes = ['create', 'depend'] as const;\r\n    export type InheritMethod = typeof ConnectTypes[number];\r\n\r\n    export const PermitTypes = ['develop', 'private', 'release'] as const;\r\n    export type PermitType = typeof PermitTypes[number];\r\n\r\n    export const FromGrpMedhods = ['color', 'draw'] as const;\r\n    export type FromGrpMethod = typeof FromGrpMedhods[number];\r\n\r\n    export type ParamProps = {\r\n        type: ParamInputType;\r\n        value: string;\r\n    }\r\n\r\n    export type WrapElement = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        seedMng: WrapElement;\r\n        logicMng: WrapElement;\r\n    }\r\n    export type NodeSeedManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicItem = {\r\n        name: string;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInterfaceMng = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInheritItem = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeParamManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeParamItem = {\r\n        name: string;\r\n        formulaItems: string[];\r\n        values: ParamProps[];\r\n        isArray?: boolean;\r\n    }\r\n\r\n    export type NodeArgumentItem = {\r\n        name: string;\r\n        valueType: ArgumentType;\r\n    }\r\n    export type NodeThumbnailItem = {\r\n        name: string;\r\n        frame: number;\r\n    }\r\n    export type NodeArgumentManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeFieldManager = {\r\n        fields: WrapElement[];\r\n    }\r\n    export type NodeSampleManager = {\r\n        samples: WrapElement[];\r\n    }\r\n    export type NodeSampleItem = {\r\n        name: string;\r\n        values: string[];\r\n    }\r\n\r\n    // export type NodeExtendManager = {\r\n    //     mngs: WrapElement[];\r\n    // }\r\n    export type NodeConnectManager = {\r\n        inherits: WrapElement[];\r\n    }\r\n    export type NodeInheritConnector = {\r\n        method: InheritMethod;\r\n        depend: string;\r\n        id: string;\r\n        disable?: boolean;\r\n        mngs: WrapElement[];\r\n    }\r\n\r\n    export type NodeSeedItem = {\r\n        name: string;\r\n        disp?: string;\r\n        entry: string;\r\n        permit: PermitType;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeThumnailManager = {\r\n        items: WrapElement[];\r\n    }\r\n    export type NodeSeedArgManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeSeedSendManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeSeedArgItem = {\r\n        name: string;\r\n        disp?: string;\r\n        isArray?: boolean;\r\n        min?: number;\r\n        max?: number;\r\n        step?: number;\r\n        defval?: string;\r\n        isPosX?: boolean;\r\n    }\r\n    export type NodeFromgrpManager = {\r\n        defines: WrapElement[];\r\n    }\r\n    export type NodeFromGrpItem = {\r\n        name: string;\r\n        method: FromGrpMethod;\r\n        args: string[];\r\n    }\r\n\r\n    const COLOR_ROOT = '#a1a1a1';\r\n    const COLOR_METHOD = '#cca67b';\r\n    const COLOR_MNG = '#37a2bd';\r\n    const COLOR_LIST = '#b85f5f';\r\n    const COLOR_ITEM = '#ae628c';\r\n    const COLOR_DISABLE = '#685b79';\r\n    const COLOR_PARAM = '#8dae62';\r\n    const COLOR_FIELD = '#cec256';\r\n    const COLOR_THUMBNAIL = '#8283be';\r\n    const COLOR_CONDITION = '#56ce7e';\r\n\r\n    export const getNodeDisplayJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapElement;\r\n        switch (wrap.type) {\r\n            case 'root': {\r\n                return <_Category backgroundColor={COLOR_ROOT}>Library</_Category>;\r\n            }\r\n            case 'seed-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Seed Manager</_Category>;\r\n            }\r\n            case 'logic-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Logic Manager</_Category>;\r\n            }\r\n            case 'visual-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Visual</_Category>;\r\n            }\r\n            case 'extend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Extend</_Category>;\r\n            }\r\n            case 'seed-item': {\r\n                let detailJsx = <>...</>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedItem;\r\n                    detailJsx = <span>{data.name}&nbsp;<_Span color=\"#ffe89ba6\">entry:&nbsp;</_Span><_Field>{data.entry}</_Field></span>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Seed</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n\r\n                </>;\r\n            }\r\n            case 'logic-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Logic</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-logic': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Logic</_Category>;\r\n            }\r\n            case 'argument-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'inhfld-mng':\r\n            case 'field-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Field Manager</_Category>;\r\n            }\r\n            case 'behavior-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Behavior</_Category>;\r\n            }\r\n            case 'inherit-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Inherit Manager</_Category>;\r\n            }\r\n            case 'connector': {\r\n                let detailJsx = <span>...</span>;\r\n                let color = COLOR_ITEM;\r\n                let isDisable = false;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeInheritConnector;\r\n                    detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}</_Span></span>;\r\n                    if (data.method === 'depend') {\r\n                        detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}:&nbsp;</_Span><_Field>{data.depend}</_Field></span>;\r\n                    }\r\n                    if (data.disable ?? false) {\r\n                        color = COLOR_DISABLE;\r\n                        isDisable = true;\r\n                    }\r\n                }\r\n                return (<>\r\n                    <_Category backgroundColor={color} isDisable={isDisable}>Inherit</_Category>\r\n                    {detailJsx == undefined ? <></> : <_EditableValue>{detailJsx}</_EditableValue>}\r\n                </>);\r\n            }\r\n            // パラメータ要素\r\n            case 'param-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_PARAM}>Param<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 条件要素\r\n            case 'condition-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_CONDITION}>Condition<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 変数要素\r\n            case 'field-item': {\r\n                let nameJsx = <span>...</span>;\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeParamItem;\r\n                    nameJsx = <_Detail>&nbsp;[{data.name}]</_Detail>;\r\n                    let result: JSX.Element[] = [];\r\n                    let varCnt = 0;\r\n                    data.formulaItems.forEach((formula, i) => {\r\n                        let str = <_Signature key={i}>{formula}</_Signature>;\r\n                        if (formula === 'var') {\r\n                            const v = data.values[varCnt];\r\n                            if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                            else str = <span key={i}>{v.value}</span>;\r\n                            varCnt++;\r\n                        }\r\n                        result.push(str);\r\n                    });\r\n                    detailJsx = <>{result}</>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Field{nameJsx}</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'argument-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeArgumentItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.valueType})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'send-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'thumbnail-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Thumnail Manager</_Category>;\r\n            }\r\n            case 'thumbnail-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeThumbnailItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.frame})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_THUMBNAIL}>Thumbnail</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'sample-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Preset Manager</_Category>;\r\n            }\r\n            case 'sample-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSampleItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Preset</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'interface-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Interface</_Category>;\r\n            }\r\n            case 'seedarg-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'seedarg-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedArgItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.min}～{data.max})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'seedsend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'formgrp-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Group Manager</_Category>;\r\n            }\r\n            case 'formgrp-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeFromGrpItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.method})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Group<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n        }\r\n        return <_Category backgroundColor={'#ffffff'}>XXXXX</_Category>;\r\n    }\r\n\r\n    export const getTypeName = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return '';\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return 'Root';\r\n            case 'seed-mng': return 'Seed Manager';\r\n            case 'logic-mng': return 'Logic Manager';\r\n            case 'seed-item': return 'Seed Item';\r\n            case 'logic-item': return 'Logic Item';\r\n            case 'argument-mng': return 'Argument Manager';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'Field Manager';\r\n            case 'field-item': return 'Field Item';\r\n            case 'visual-mng': return 'Visual Manager';\r\n            case 'seedarg-item':\r\n            case 'argument-item': return 'Argument Item';\r\n            case 'extend-mng': return 'Extend Manager';\r\n            case 'behavior-mng': return 'Behavior Manager';\r\n            case 'inherit-mng': return 'Inherit Manager';\r\n            case 'connector': return 'Inherit Connector';\r\n            case 'inherit-logic': return 'Inherit Logic';\r\n            case 'send-mng': return 'Send Manager';\r\n            case 'seedsend-item':\r\n            case 'send-item': return 'Send Item';\r\n            case 'param-item': return 'Param Item';\r\n            case 'condition-item': return 'Condition Item';\r\n            case 'interface-mng': return 'Interface Manager';\r\n            case 'thumbnail-mng': return 'Thumbnail Manager';\r\n            case 'thumbnail-item': return 'Thumbnail Item';\r\n            case 'sample-mng': return 'Preset Manager';\r\n            case 'sample-item': return 'Preset Item';\r\n            case 'seedarg-mng': return 'Argument Manager';\r\n            case 'seedsend-mng': return 'Send';\r\n            case 'formgrp-mng': return 'Group Manager';\r\n            case 'formgrp-item': return 'Group Item';\r\n        }\r\n    }\r\n\r\n    export const getDetailComponent = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return <></>;\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return <></>;\r\n            case 'seed-mng': return <FactDetSeedMng />;\r\n            case 'logic-mng': return <EditorLogicMng />;\r\n            case 'seed-item': return <EditorSeedItem />;\r\n            case 'logic-item': return <EditorLogicItem />;\r\n            case 'argument-mng': return <FactDetArgumentMng />;\r\n            case 'argument-item': return <EditorArgumentItem />;\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return <EditorFieldMng />;\r\n            case 'visual-mng': return <EditorVisualMng />;\r\n            case 'extend-mng': return <EditorExtendMng />;\r\n            case 'behavior-mng': return <FactDetBehiviorMng />;\r\n            case 'inherit-mng': return <EditorInheritConnMng />;\r\n            case 'connector': return <EditorInheritConnector />;\r\n            case 'inherit-logic': return <EditorLogicItem />;\r\n            case 'send-mng': return <EditorSendManager />;\r\n            case 'field-item':\r\n            case 'param-item':\r\n            case 'condition-item':\r\n            case 'send-item':\r\n            case 'seedsend-item': return <EditorParamItem />;\r\n            case 'interface-mng': return <EditorInterfaceManager />;\r\n            case 'sample-mng': return <EditorSampleMng />;\r\n            case 'sample-item': return <EditorSampleItem />;\r\n            case 'thumbnail-mng': return <EditorThumbnailMng />;\r\n            case 'thumbnail-item': return <EditorThumbnailItem />;\r\n            case 'seedarg-mng': return <EditorSeedArgMng />;\r\n            case 'seedarg-item': return <EditorSeedArgItem />;\r\n            case 'seedsend-mng': return <EditorSeedSendMng />;\r\n            case 'formgrp-item': return <EditorFormgrpItem />;\r\n            case 'formgrp-mng': return <EditorFormgrpMng />;\r\n        }\r\n    }\r\n\r\n    export const getChildrenElementNode = (node: TreeUtil.ElementNode): TreeUtil.ElementNode[] => {\r\n        const wrapNode = node.data as WrapElement;\r\n        const get = (listName: string) => {\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const elementNode = TreeUtil.createNode(wrap, node);\r\n                elementNode.children = getChildrenElementNode(elementNode);\r\n                return elementNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n\r\n    export const getChildrenDataNode = (wrapNode: LogicUtil.WrapElement): TreeUtil.DataNode[] => {\r\n        const get = (listName: string) => {\r\n\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const treeNode: TreeUtil.DataNode = {\r\n                    data: wrap,\r\n                    children: getChildrenDataNode(wrap)\r\n                };\r\n                return treeNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as LogicUtil.NodeRoot;\r\n                return [\r\n                    { data: node.seedMng, children: getChildrenDataNode(node.seedMng) },\r\n                    { data: node.logicMng, children: getChildrenDataNode(node.logicMng) }\r\n                ];\r\n            }\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n}\r\n\r\nexport default LogicUtil;\r\n\r\nconst _Category = styled.div<{\r\n    backgroundColor: string;\r\n    isDisable?: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: ${props => props.backgroundColor};\r\n    /* width: 100%; */\r\n    ${props => !(props.isDisable ?? false) ? '' : css`\r\n        text-decoration: line-through;\r\n        color: #00054dac;\r\n    `}\r\n    border-radius: 4px 0 0 4px;\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n    border: solid 1px #000000d2;\r\n`;\r\nconst _Detail = styled.span`\r\n    color: #000b69bd;\r\n`;\r\n\r\nconst _EditableValue = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #0c0c0c;\r\n    color: #ebebeb;\r\n    border-radius: 0 4px 4px 0;\r\n    /* width: 100%; */\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n`;\r\nconst _Span = styled.span<{\r\n    color: string;\r\n}>`\r\n    color: ${props => props.color};\r\n`;\r\nconst _ValueType = styled.span`\r\n    color: #fff9d6b9;\r\n`;\r\nconst _Signature = styled.span`\r\n    color: #ffffff78;\r\n`;\r\nconst _Field = styled.span`\r\n    color: #ff2d2d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../util/logicFormUtil\";\r\n\r\nconst EditorSampleItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [paramForms, setParamForms] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSampleItem;\r\n        setName({ ...name, value: param.name });\r\n        setParamForms(param.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のサンプル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const [seedargList, formgrpList]: [LogicUtil.NodeSeedArgItem[], LogicUtil.NodeFromGrpItem[]] = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'seedarg-mng');\r\n        const argInfoList = (argMng.data as LogicUtil.NodeSeedArgManager).\r\n            args.map(arg => {\r\n                return arg.data as LogicUtil.NodeSeedArgItem;\r\n            });\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        const formgrpMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'formgrp-mng');\r\n        if (formgrpMng != null) {\r\n            formgrpList = (formgrpMng.data as LogicUtil.NodeFromgrpManager).\r\n                defines.map(arg => {\r\n                    return arg.data as LogicUtil.NodeFromGrpItem;\r\n                });\r\n        }\r\n        return [argInfoList, formgrpList];\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setParamForms(seedargList.map(arg => {\r\n                let defval = '';\r\n                if (arg.defval != undefined) defval = arg.defval.toString();\r\n                return { value: defval, errors: [] };\r\n            }));\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const formList = useMemo(() => {\r\n        return LogicFormUtil.buildPreviewForms(\r\n            !isModify, seedargList, formgrpList, paramForms, setParamForms\r\n        );\r\n        // return paramForms.map((paramForm, i) => {\r\n        //     const arg = argInfoList[i];\r\n        //     return <FormUtil.FormRecord key={i}\r\n        //         titleLabel={arg.name}\r\n        //         jsx={\r\n        //             <FormUtil.TextField\r\n        //                 width={150}\r\n        //                 isReadOnly={!isModify}\r\n        //                 checkable={paramForm}\r\n        //                 setCheckable={(checkable) => {\r\n        //                     paramForms[i] = checkable;\r\n        //                     setParamForms(paramForms.slice());\r\n        //                 }}\r\n        //                 isNumber\r\n        //                 step={arg.step}\r\n        //                 validates={[\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkRequired(value),\r\n        //                         errorType: \"required\"\r\n        //                     },\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkNumberRange(value, arg.min, arg.max),\r\n        //                         errorType: \"value\"\r\n        //                     },\r\n        //                 ]}\r\n        //             />\r\n        //         }\r\n        //     />\r\n        // });\r\n    }, [paramForms, isModify]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name].concat(paramForms)}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSampleItem = {\r\n                    name: name.value,\r\n                    values: []\r\n                };\r\n                paramForms.forEach((form, i) => {\r\n                    element.values[i] = form.value;\r\n                });\r\n                wrap.data = element;\r\n\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSampleItem;\r\n                param.name = name.value;\r\n                paramForms.forEach((form, i) => {\r\n                    param.values[i] = form.value;\r\n                });\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 22),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {formList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'preset', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSampleMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Preset',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'sample-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSampleManager).samples.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleMng;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInterfaceManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const argMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedarg-mng');\r\n    const sendMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedsend-mng');\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(node.parent as TreeUtil.ElementNode, 'sample-mng');\r\n\r\n    const [hasGroupNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        return [\r\n            list.includes('formgrp-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const hasArgument = (): boolean => {\r\n        return argMngNode.children.length > 0;\r\n    }\r\n\r\n    /**\r\n     * グループ要素の有無を判定\r\n     */\r\n    const hasGroup = () => {\r\n        const groupMngNode = LogicElementUtil.getInnerNode(node, 'formgrp-mng');\r\n        if (groupMngNode == null) return false;\r\n        return groupMngNode.children.length > 0;\r\n    }\r\n\r\n    const execute = () => {\r\n        // const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n        // 既存の引数を削除\r\n        if (hasArgument()) {\r\n\r\n            LogicElementUtil.removeChildAll(argMngNode);\r\n            LogicElementUtil.removeChildAll(sampleMngNode);\r\n        }\r\n\r\n        sendMngNode.children.forEach(child => {\r\n            const send = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem;\r\n            send.formulaItems = ['var'];\r\n            send.values = [{ type: 'argument', value: send.name }];\r\n\r\n            const newArgData: LogicUtil.NodeSeedArgItem = {\r\n                name: send.name,\r\n                step: 1,\r\n                min: -9999,\r\n                max: 9999,\r\n                defval: ''\r\n            }\r\n            const newArgWrap: LogicUtil.WrapElement = {\r\n                type: 'seedarg-item',\r\n                data: newArgData\r\n            };\r\n            const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n            argMng.args.push(newArgWrap);\r\n            argMngNode.children.push(TreeUtil.createNode(newArgWrap, argMngNode));\r\n            invalidate();\r\n        });\r\n    }\r\n\r\n    const initDefaultSetting = () => {\r\n        if (!hasArgument()) {\r\n            execute();\r\n        } else {\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Are you sure you want to delete the existing element?\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        callback: () => {\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Execute',\r\n                        callback: () => {\r\n                            execute();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            setStore({ ...store });\r\n        }\r\n        invalidate();\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Group'}\r\n                        width={300}\r\n                        isUse={hasGroupNode}\r\n                        isEnable={!hasGroup()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasGroupNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'formgrp-mng',\r\n                                    data: {\r\n                                        defines: []\r\n                                    } as LogicUtil.NodeFromgrpManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Initialize Params',\r\n                        callback: initDefaultSetting\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInterfaceManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedArgMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seedarg-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedArgManager).args.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedArgMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorSeedArgItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [min, setMin] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [max, setMax] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [step, setStep] = useState<FormUtil.CheckableValue>({ value: '1', errors: [] });\r\n    const [defval, setDefval] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [isPosX, setPosX] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [isArray, setArray] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    const seedNode = node.parent?.parent?.parent as TreeUtil.ElementNode;\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setMin({ ...min, value: (param.min != undefined) ? param.min.toString() : '' });\r\n        setMax({ ...max, value: (param.max != undefined) ? param.max.toString() : '' });\r\n        setStep({ ...step, value: (param.step != undefined) ? param.step.toString() : '' });\r\n        setDefval({ ...defval, value: (param.defval != undefined) ? param.defval.toString() : ''});\r\n        setPosX({ ...isPosX, value: (param.isPosX ?? false) ? '1' : '' });\r\n        setArray({ ...isArray, value: (param.isArray ?? false) ? '1' : '' });\r\n        // setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, min, max, step, defval]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeSeedArgItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    min: Number(min.value),\r\n                    max: Number(max.value),\r\n                    step: Number(step.value),\r\n                    defval: defval.value === '' ? undefined : defval.value,\r\n                    isPosX: isPosX.value === '' ? undefined : true,\r\n                    isArray: isArray.value === '' ? undefined : true,\r\n                    // valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                wrap.data = param;\r\n                syncArgumentAdd(seedNode as TreeUtil.ElementNode, param);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.min = Number(min.value === '' ? '0' : min.value);\r\n                param.max = Number(max.value === '' ? '0' : max.value);\r\n                param.step = Number(step.value === '' ? '0' : step.value);\r\n                param.defval = defval.value === '' ? undefined : defval.value;\r\n                param.isPosX = isPosX.value === '' ? undefined : true;\r\n                param.isArray = isArray.value === '' ? undefined : true;\r\n                // param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(seedNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 16),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Array\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={isArray}\r\n                            setCheckable={(checkable) => {\r\n                                setArray(checkable);\r\n                                setMin({ ...min, value: '' });\r\n                                setMax({ ...max, value: '' });\r\n                                setStep({ ...step, value: '' });\r\n                                setDefval({ ...defval, value: '' });\r\n                                setPosX({ ...isPosX, value: '' });\r\n                            }}\r\n                            headBlank\r\n                            list={[\r\n                                { labelText: 'Yes', value: '1' }\r\n                            ]}\r\n                        // dependency={[min, max, step, defval, isPosX]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Min\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={min}\r\n                            setCheckable={setMin}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[max, isArray]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) < Number(max.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Max\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={max}\r\n                            setCheckable={setMax}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[min, isArray]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) > Number(min.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Step\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={step}\r\n                            setCheckable={setStep}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[isArray]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Default\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={defval}\r\n                            setCheckable={setDefval}\r\n                            isNumber\r\n                            isEnabled={isArray.value === ''}\r\n                            dependency={[isArray]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Position\"\r\n                    isEnabled={isArray.value === ''}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={isPosX}\r\n                            setCheckable={setPosX}\r\n                            isEnabled={isArray.value === ''}\r\n                            headBlank\r\n                            list={[\r\n                                { labelText: 'Yes', value: '1' }\r\n                            ]}\r\n                            dependency={[isArray]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'argument', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                                const refers = getArgumentRefers(seedNode, param.name);\r\n                                if (refers.length === 0) {\r\n                                    const curIndex = LogicElementUtil.getCurrentIndex(node);\r\n                                    if (curIndex === -1) throw new Error('[curIndex] is -1.');\r\n                                    syncArgumentDel(seedNode, curIndex);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtonsCallback(node, invalidate, (index, isUpper) => {\r\n                    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n                    const offset = isUpper ? -1 : 1;\r\n                    sampleMng.samples.forEach(wrap => {\r\n                        const values = (wrap.data as LogicUtil.NodeSampleItem).values;\r\n                        const swapNode = values[index];\r\n                        values[index] = values[index + offset];\r\n                        values[index + offset] = swapNode;\r\n                    });\r\n                })}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (seedNode: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    const sendMng = sendMngWrap.data as LogicUtil.NodeSeedSendManager;\r\n    sendMng.params.forEach(wrap => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        param.values.forEach(varItem => {\r\n            if (varItem.type === 'argument' && varItem.value === argName) {\r\n                refers.push(param.name);\r\n            }\r\n        });\r\n    });\r\n    return refers;\r\n}\r\n\r\nexport default EditorSeedArgItem;\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param seedNode Seedノード\r\n*/\r\nconst syncArgumentName = (seedNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    syncFormula((sendMngWrap.data as LogicUtil.NodeParamManager).params);\r\n\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Sample管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentAdd = (seedNode: TreeUtil.ElementNode, arg: LogicUtil.NodeSeedArgItem) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.push((arg.defval ?? 0).toString());\r\n    });\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentDel = (seedNode: TreeUtil.ElementNode, delIndex: number) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.splice(delIndex, 1);\r\n    });\r\n}","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedSendMng = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const getSendParamList = (): string[] => {\r\n    //     const connector = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n    //     const isCreate = connector.method === 'create';\r\n    //     let targetWrap: LogicUtil.WrapElement | null = null;\r\n    //     if (!isCreate) {\r\n    //         const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n    //         const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n    //         const dependItem = inheritMng.defs.find(wrap => {\r\n    //             return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n    //         });\r\n    //         if (dependItem != undefined) targetWrap = dependItem;\r\n    //     } else {\r\n    //         targetWrap = (node.parent?.children[node.parent?.children.length - 1].data as LogicUtil.WrapElement)\r\n    //     }\r\n    //     if (targetWrap != null) {\r\n    //         const argWrap = (targetWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n    //         if (argWrap.type === 'argument-mng') {\r\n    //             return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n    //                 return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n    //             });\r\n    //         }\r\n    //     }\r\n    //     return [];\r\n    // }\r\n\r\n    // const update = () => {\r\n    //     const sendParamList = getSendParamList();\r\n    //     const curSize = node.children.length;\r\n    //     const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n    //     // 不要なパラメータを削除\r\n    //     for (let i = curSize - 1; i >= 0; i--) {\r\n    //         const name = (params[i].data as LogicUtil.NodeParamItem).name;\r\n    //         if (!sendParamList.includes(name)) {\r\n    //             node.children.splice(i, 1);\r\n    //             params.splice(i, 1);\r\n    //         }\r\n    //     }\r\n    //     // 必要な存在しないパラメータを追加\r\n    //     const curParamList = params.map(param => {\r\n    //         return (param.data as LogicUtil.NodeParamItem).name;\r\n    //     });\r\n    //     sendParamList.forEach(param => {\r\n    //         if (!curParamList.includes(param)) {\r\n    //             const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n    //                 { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n    //             );\r\n    //             params.push(paramWrap);\r\n    //             node.children.push(TreeUtil.createNode(paramWrap, node));\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    return (<>\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedSendMng;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorFormgrpItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [groupMethod, setGroupMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [targetList, setTargetList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n        setName({ ...name, value: param.name });\r\n        setGroupMethod({ ...groupMethod, value: param.method });\r\n        setTargetList(param.args.map(arg => {\r\n            return { value: arg, errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const seedargs = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed(node.parent?.parent?.data as LogicUtil.WrapElement, 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        return argMng.args.map(wrap => (wrap.data as LogicUtil.NodeSeedArgItem));\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, groupMethod].concat(targetList)}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeFromGrpItem = {\r\n                    name: name.value,\r\n                    method: groupMethod.value as LogicUtil.FromGrpMethod,\r\n                    args: targetList.map(form => form.value)\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n                param.name = name.value;\r\n                param.method = groupMethod.value as LogicUtil.FromGrpMethod;\r\n                param.args = targetList.map(form => form.value);\r\n                wrap.data = param;\r\n\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 24),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={groupMethod}\r\n                            setCheckable={(checkable) => {\r\n                                const type = checkable.value as LogicUtil.FromGrpMethod;\r\n                                if (type === 'color') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(3).fill({ value: '', errors: [] }));\r\n                                } else if (type === 'draw') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(2).fill({ value: '', errors: [] }));\r\n                                } else {\r\n                                    setTargetList([]);\r\n                                }\r\n                                setGroupMethod({ ...checkable });\r\n                            }}\r\n                            list={LogicUtil.FromGrpMedhods.map(type => {\r\n                                return { value: type, labelText: type }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n                {targetList.map((target, i) => {\r\n                    let formName = 'Target_';\r\n                    const method = groupMethod.value as LogicUtil.FromGrpMethod;\r\n                    if (method === 'color') {\r\n                        switch (i) {\r\n                            case 0: formName += 'R'; break;\r\n                            case 1: formName += 'G'; break;\r\n                            case 2: formName += 'B'; break;\r\n                        }\r\n                    } else if (method === 'draw') {\r\n                        switch (i) {\r\n                            case 0: formName += 'X'; break;\r\n                            case 1: formName += 'Y'; break;\r\n                        }\r\n                    } else {\r\n                        formName += `_${i}`;\r\n                    }\r\n                    return (\r\n                        <FormUtil.FormRecord\r\n                            key={i}\r\n                            titleLabel={formName}\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={target}\r\n                                    setCheckable={(checkable) => {\r\n                                        targetList[i] = checkable;\r\n                                        setTargetList(targetList.slice());\r\n                                    }}\r\n                                    list={seedargs\r\n                                        .filter(item => groupMethod.value === 'color' ? !item.isArray : item.isArray)\r\n                                        .map(item => {\r\n                                            return { value: item.name, labelText: item.name }\r\n                                        })}\r\n                                    headBlank\r\n                                    width={250}\r\n                                    isReadOnly={!isModify}\r\n                                    validates={\r\n                                        [\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            },\r\n                                            {\r\n                                                checker: (value) => targetList.find((target, j) => i !== j && target.value === value) == undefined,\r\n                                                errorType: \"relation\"\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                    dependency={targetList}\r\n                                />\r\n                            }\r\n                        />\r\n                    );\r\n                })}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: removeSelf\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFormgrpMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Group',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'formgrp-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeFromgrpManager).defines.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpMng;","import { assert } from \"console\";\r\nimport { Store } from \"../../../../redux/store/store\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../dialog/confirmDialog\";\r\nimport Particle from \"../../../graphic/particle\";\r\nimport StoryUtil from \"../../launcher/util/storyUtil\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport ParamUtil from \"./paramUtil\";\r\n\r\n\r\nnamespace LogicElementUtil {\r\n\r\n    export const getInnerNode = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode | null => {\r\n\r\n        let cur: TreeUtil.ElementNode | null = node;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const target = cur.children.find(child => (child.data as LogicUtil.WrapElement).type === type);\r\n            if (target == undefined) cur = null;\r\n            else cur = target;\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerNodeFixed = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode => {\r\n        const innerNode = getInnerNode(node, ...typeList);\r\n        if (innerNode == null) throw new Error('[innerNode] is null.');\r\n        return innerNode as TreeUtil.ElementNode;\r\n    }\r\n\r\n    export const getInnerWrap = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement | null => {\r\n\r\n        let cur: LogicUtil.WrapElement | null = wrap;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const listName = getListParamName(cur.type);\r\n            if (listName == null) cur = null;\r\n            else {\r\n                const list = cur.data[`${listName}`] as LogicUtil.WrapElement[];\r\n                const target = list.find(child => child.type === type);\r\n                if (target == undefined) cur = null;\r\n                else cur = target;\r\n            }\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerWrapFixed = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement => {\r\n        const innerWrap = getInnerWrap(wrap, ...typeList);\r\n        if (innerWrap == null) throw new Error('[innerWrap] is null.');\r\n        return innerWrap as LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const addChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode) => {\r\n        return insertChild(wrapElement, node, node.children.length);\r\n    }\r\n\r\n    export const insertChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode, listPos: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, 0, wrapElement);\r\n        const newNode = TreeUtil.createNode(wrapElement, node);\r\n        node.children.splice(listPos, 0, newNode);\r\n        return newNode;\r\n    }\r\n\r\n    export const removeChild = (node: TreeUtil.ElementNode, listPos: number, size: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, size);\r\n        node.children.splice(listPos, size);\r\n    }\r\n\r\n    export const removeChildAll = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].length = 0;\r\n        node.children.length = 0;\r\n    }\r\n\r\n    export const isHead = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[0] == node;\r\n    }\r\n\r\n    export const isTail = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[ownerChildren.length - 1] == node;\r\n    }\r\n\r\n    export const getCurrentIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(parentWrap.type);\r\n        if (listName == null || parentWrap.data == null) return -1;\r\n        const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n        const curIndex = list.findIndex(wrap => wrap == node.data);\r\n        return curIndex;\r\n    }\r\n\r\n    const swapOrder = (node: TreeUtil.ElementNode, offset: number) => {\r\n        if (node.parent == null) return;\r\n        const ownerChildren = node.parent.children;\r\n        const wrap = node.parent.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        const ownDataChildren = wrap.data[`${listName}`] as LogicUtil.WrapElement[];\r\n\r\n        let curNo = getCurrentIndex(node);\r\n        if (curNo === -1) return;\r\n\r\n        // ツリーノードの入れ替え\r\n        const swapNode = ownerChildren[curNo];\r\n        ownerChildren[curNo] = ownerChildren[curNo + offset];\r\n        ownerChildren[curNo + offset] = swapNode;\r\n        // データ要素の入れ替え\r\n        const swapData = ownDataChildren[curNo];\r\n        ownDataChildren[curNo] = ownDataChildren[curNo + offset];\r\n        ownDataChildren[curNo + offset] = swapData;\r\n    }\r\n\r\n    export const getSwapButtons = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        ...dependencyMngNodes: TreeUtil.ElementNode[]\r\n    ) => {\r\n        return getSwapButtonsCallback(node, invalidate, (curIndex, isUpper) => {\r\n            if (dependencyMngNodes.length > 0) {\r\n                dependencyMngNodes.forEach(depNode => {\r\n                    swapOrder(depNode.children[curIndex], isUpper ? -1 : 1);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    export const getSwapButtonsCallback = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        callback: (curIndex: number, isUpper: boolean) => void\r\n    ) => {\r\n        const curIndex = getCurrentIndex(node);\r\n        return <>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↑',\r\n                        isEnable: !LogicElementUtil.isHead(node),\r\n                        callback: () => {\r\n                            swapOrder(node, -1);\r\n                            callback(curIndex, true);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↓',\r\n                        isEnable: !LogicElementUtil.isTail(node),\r\n                        callback: () => {\r\n                            swapOrder(node, 1);\r\n                            callback(curIndex, false);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>;\r\n    }\r\n\r\n    /**\r\n     * 同レベル階層に自身ノードの複製を作成する\r\n     * @param node コピー対象のノード\r\n     * @param newName コピー後の名称\r\n     */\r\n    export const replicateSameLevel = (node: TreeUtil.ElementNode, newName: string) => {\r\n        if (node.parent == null) return;\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const cloneBase = wrap.data;\r\n        const cloneDest = JSON.parse(JSON.stringify((cloneBase)));\r\n\r\n        const newWrap: LogicUtil.WrapElement = {\r\n            type: wrap.type,\r\n            data: cloneDest\r\n        };\r\n        const namable = getNamableProps(wrap.type);\r\n        newWrap.data[namable] = newName;\r\n\r\n        // ロジックマネージャに追加\r\n        const newNode = LogicElementUtil.addChild(newWrap, node.parent);\r\n        // 子要素の展開\r\n        newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n    }\r\n\r\n    export const getReplicateButton = (\r\n        node: TreeUtil.ElementNode,\r\n        isEnable: boolean,\r\n        targetElement: string, store: Store,\r\n        setStore: (store: Store) => void,\r\n        invalidate: () => void\r\n    ): JSX.Element => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        return <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[{\r\n                label: 'Replicate',\r\n                isEnable,\r\n                // isEnable: false,\r\n                callback: () => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={`Replicate this ${targetElement}.`}\r\n                        buttons={[\r\n                            {\r\n                                label: 'Cancel',\r\n                                callback: () => {\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Enter',\r\n                                callback: () => {\r\n                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                    const name = wrap.data[namable] as string;\r\n                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                    // mappingForm();\r\n                                    invalidate();\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }\r\n            }]}\r\n        />;\r\n    }\r\n\r\n    export const getListParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return 'defs';\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            // case 'root':\r\n            case 'logic-item': return 'mngs';\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return 'params';\r\n            case 'inherit-mng': return 'inherits';\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return 'args';\r\n            case 'sample-mng': return 'samples';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'fields';\r\n            case 'thumbnail-mng': return 'items';\r\n            case 'formgrp-mng': return 'defines';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getIdentifyParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'argument-item':\r\n            case 'field-item':\r\n            case 'seed-item':\r\n            case 'thumbnail-item':\r\n            case 'seedarg-item':\r\n            case 'sample-item':\r\n            case 'formgrp-item':\r\n            case 'logic-item': return 'name';\r\n            case 'connector': return 'id';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getNamableProps = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'connector': return 'id';\r\n            case 'seed-item':\r\n            case 'argument-item':\r\n            case 'seedarg-item':\r\n            case 'field-item':\r\n            case 'sample-item':\r\n            case 'thumbnail-item':\r\n            case 'logic-item': return 'name';\r\n        }\r\n        throw new Error('Namable props not found.');\r\n    }\r\n\r\n    export const syncTreeElementFromWrap = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        if (listName == null) return;\r\n        (wrap.data[listName] as any[]).forEach(childWrap => {\r\n            const newNode = TreeUtil.createNode(childWrap, node);\r\n            node.children.push(newNode);\r\n            syncTreeElementFromWrap(newNode);\r\n        });\r\n    }\r\n\r\n    export const createParamWrap = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem): LogicUtil.WrapElement => {\r\n        return { type: type, data: paramDataList };\r\n    }\r\n    export const createParamWrapList = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem[]): LogicUtil.WrapElement[] => {\r\n        return paramDataList.map(data => {\r\n            return { type: type, data: data };\r\n        });\r\n    }\r\n\r\n    export const createVisualParams = (): LogicUtil.WrapElement[] => {\r\n        const type = ParamUtil.VisualParamType;\r\n        return createParamWrapList('param-item', [\r\n            { name: type.RADIUS, formulaItems: ['var'], values: [{ type: 'direct', value: '20' }] },\r\n            { name: type.COLOR_R, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_G, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_B, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_A, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n        ]);\r\n    }\r\n\r\n    export const createBehaviorParams = (): LogicUtil.WrapElement[] => {\r\n        const list: LogicUtil.NodeParamItem[] = [];\r\n        const type = ParamUtil.BehaviorParamType;\r\n        list.push({\r\n            name: type.LIMIT,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '30' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        return createParamWrapList('param-item', list);\r\n    }\r\n\r\n    export const getDefaultLogicMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'visual-mng',\r\n                data: {\r\n                    params: createVisualParams()\r\n                } as LogicUtil.NodeParamManager\r\n            },\r\n            {\r\n                type: 'behavior-mng',\r\n                data: {\r\n                    params: createBehaviorParams()\r\n                } as LogicUtil.NodeParamManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    export const getInitialData = (): LogicUtil.WrapElement => {\r\n        return {\r\n            type: 'root',\r\n            data: {\r\n                seedMng: {\r\n                    type: 'seed-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeSeedManager\r\n                } as LogicUtil.WrapElement,\r\n                logicMng: {\r\n                    type: 'logic-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeLogicManager\r\n                } as LogicUtil.WrapElement\r\n            } as LogicUtil.NodeRoot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 同階層の名前パラメータを持つ要素より、既存の名前一覧を取得する。\r\n     * @param node 現在のノード\r\n     * @returns 同階層の既存の名前一覧\r\n     */\r\n    export const getExistNameList = (node: TreeUtil.ElementNode) => {\r\n        const nameList: string[] = [];\r\n        const curWrap = node.data as LogicUtil.WrapElement;\r\n        const nameParam = getIdentifyParamName(curWrap.type);\r\n        const mngWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listParam = getListParamName(mngWrap.type);\r\n        if (listParam == null || nameParam == null) throw Error('List param or identifiy param not found.');\r\n        const list = mngWrap.data[listParam] as LogicUtil.WrapElement[];\r\n        list.forEach(wrap => {\r\n            if (wrap.data != null && curWrap != wrap) {\r\n                nameList.push(wrap.data[nameParam]);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getLogicNameList = (mng: LogicUtil.NodeLogicManager) => {\r\n        const nameList: string[] = [];\r\n        mng.defs.forEach(logic => {\r\n            if (logic.data != null) {\r\n                nameList.push((logic.data as LogicUtil.NodeLogicItem).name);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getParamNameList = (curLogicOwner: LogicUtil.NodeLogicItem) => {\r\n        const nameList: string[] = [];\r\n\r\n        // システム固有のパラメータ名を取得\r\n        ParamUtil.VisualParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.BehaviorParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.SelfParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ExtendParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.EffectParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ModulateParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.Constants.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n\r\n        // 引数のパラメータ名を取得\r\n        const argMng = curLogicOwner.mngs.find(mng => mng.type === 'argument-mng');\r\n        if (argMng != undefined) {\r\n            const args = (argMng.data as LogicUtil.NodeArgumentManager).args;\r\n            args.forEach(arg => {\r\n                if (arg.data != null) {\r\n                    nameList.push((arg.data as LogicUtil.NodeArgumentItem).name);\r\n                }\r\n            });\r\n        }\r\n        // フィールドのパラメータ名を取得\r\n        const fieldMng = curLogicOwner.mngs.find(mng => mng.type === 'field-mng');\r\n        if (fieldMng != undefined) {\r\n            const fields = (fieldMng.data as LogicUtil.NodeFieldManager).fields;\r\n            fields.forEach(field => {\r\n                if (field.data != null) {\r\n                    nameList.push((field.data as LogicUtil.NodeParamItem).name);\r\n                }\r\n            });\r\n        }\r\n        return nameList;\r\n    }\r\n\r\n    /**\r\n     * 子要素の接頭連番をチェックし、重複しない名称を返す。\r\n     * @param prefix 接頭語\r\n     * @param node 基準となるノード\r\n     */\r\n    export const getNumberingOnPrefixName = (prefix: string, node: TreeUtil.ElementNode) => {\r\n        let num = 0;\r\n        // 接頭番号を取得\r\n        while (true) {\r\n            const check = node.children.find(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                if (wrap.data == null) return false;\r\n                console.log(wrap);\r\n                return wrap.data[getNamableProps(wrap.type)] === `${prefix}${num}`;\r\n            });\r\n            if (check != undefined) num++;\r\n            else break;\r\n        }\r\n        return `${prefix}${num}`;\r\n    }\r\n\r\n    /**\r\n     * パラメータの式で参照されている変数を検索し、\r\n     * 任意の処理（callback）を実行する。\r\n     * @param node 現在のノード\r\n     * @param callback 処理\r\n     */\r\n    export const searchVariableReferInFormula = (node: TreeUtil.ElementNode, callback: Function) => {\r\n\r\n        const mngType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const getLogicItem = () => {\r\n            switch (mngType) {\r\n                case 'field-mng':\r\n                case 'argument-mng': return node.parent?.parent?.data as LogicUtil.WrapElement;\r\n                case 'inhfld-mng': return node.parent?.parent?.parent?.parent?.data as LogicUtil.WrapElement;\r\n            }\r\n        }\r\n        const logicItem = getLogicItem()?.data as LogicUtil.NodeLogicItem;\r\n        if (mngType === 'argument-mng') {\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (fieldMng != undefined) {\r\n                callback((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n        }\r\n        if (mngType !== 'inhfld-mng') {\r\n            const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n            if (visualMng != undefined) {\r\n                callback((visualMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n            const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n            if (behaviorMng != undefined) {\r\n                callback((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n        }\r\n        const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                if (mngType !== 'inhfld-mng') {\r\n                    const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                    // Inherit配下のField要素のチェック\r\n                    if (inhfld != null) {\r\n                        callback((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                    }\r\n                }\r\n                // Extend要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    }\r\n\r\n    export const findSeedWrap = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const root = rootData.data as LogicUtil.NodeRoot;\r\n        const seed = (root.seedMng.data as LogicUtil.NodeSeedManager).defs.find(def => {\r\n            const seedItem = def.data as LogicUtil.NodeSeedItem;\r\n            return seedItem.name === seedId;\r\n        });\r\n        if (seed == undefined) throw new Error();\r\n        return seed;\r\n    }\r\n\r\n    export const doParticleJob = (rootData: LogicUtil.WrapElement, fuse: StoryUtil.Fuse, owner: Particle.Instance[]) => {\r\n        const seedWrap = findSeedWrap(rootData, fuse.seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        const getSendingValueMap = () => {\r\n            const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const valueMapList: PreviewUtil.ValueMap[] = [];\r\n            seedargMng.args.forEach((wrap, i) => {\r\n                const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                if (!seedarg.isArray) {\r\n                    valueMapList.push({ name: seedarg.name, value: Number(fuse.values[i]) })\r\n                }\r\n            });\r\n\r\n            // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n            return sendParams\r\n                .filter(item => !item.isArray)\r\n                .map(item => {\r\n                    const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMapList);\r\n                    if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                    return { name: item.name, value };\r\n                });\r\n        }\r\n\r\n        const getSendingArrayMap = () => {\r\n            const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const arrayMapList: PreviewUtil.ArrayMap[] = [];\r\n            seedargMng.args.forEach((wrap, i) => {\r\n                const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                if (seedarg.isArray) {\r\n                    arrayMapList.push({ name: seedarg.name, array: fuse.values[i].split(',').map(v => Number(v)) })\r\n                }\r\n            });\r\n\r\n            // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n            return sendParams\r\n                .filter(item => item.isArray)\r\n                .map(item => {\r\n                    const array = PreviewUtil.convertParamsToArray(item.name, sendParams, arrayMapList);\r\n                    if (array == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                    return { name: item.name, array: array };\r\n                });\r\n        }\r\n\r\n        owner.push(new Particle.Instance(\r\n            PreviewUtil.buildLogicProps(owner, getOrigin(), rootData, getSendingValueMap(), getSendingArrayMap())\r\n        ));\r\n    }\r\n\r\n    export type SeedProps = {\r\n        seed: LogicUtil.NodeSeedItem;\r\n        logic: LogicUtil.NodeLogicItem;\r\n        seedargList: LogicUtil.NodeSeedArgItem[];\r\n        seedsendList: LogicUtil.NodeParamItem[];\r\n        thumbnailList: LogicUtil.NodeThumbnailItem[];\r\n    }\r\n    export const getSeedProperties = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const seedWrap = findSeedWrap(rootData, seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n        const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        const seedargList = seedargMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n        const seedsendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n        const seedsendList = seedsendMng.params.map(wrap => wrap.data as LogicUtil.NodeParamItem);\r\n        const thumbnailMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'thumbnail-mng').data as LogicUtil.NodeThumnailManager;\r\n        const thumbnailList = thumbnailMng.items.map(wrap => wrap.data as LogicUtil.NodeThumbnailItem);\r\n\r\n        return {\r\n            seed, logic: getOrigin(), seedargList, seedsendList, thumbnailList\r\n        }\r\n    }\r\n}\r\n\r\nexport default LogicElementUtil;","export namespace SPUtil {\r\n\r\n    export const SCREEN_WIDTH = 640;\r\n    export const SCREEN_HEIGHT = 960;\r\n}","import { useState, useMemo, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewLogicInputForm = (props: {\r\n    logicWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n    setSendingArrayMap: (sendingArrayMap: (() => PreviewUtil.ArrayMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const argumentList: LogicUtil.NodeArgumentItem[] = useMemo(() => {\r\n        let list: LogicUtil.NodeArgumentItem[] = [];\r\n        const argWrap = LogicElementUtil.getInnerWrap(props.logicWrap, 'argument-mng');\r\n        if (argWrap != null) {\r\n            list = (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                const argItem = arg.data as LogicUtil.NodeArgumentItem;\r\n                return argItem;\r\n            });\r\n        }\r\n        return list;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFormList(argumentList.map(arg => {\r\n            return { value: '', errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const isFormInputOK = formList.find(form => form.errors.length > 0) == undefined;\r\n        if (isFormInputOK) {\r\n            props.setSendingValueMap(() => {\r\n                return formList\r\n                    .filter((form, i) => {\r\n                        return argumentList[i].valueType === 'number';\r\n                    })\r\n                    .map((form, i) => {\r\n                        const argument = argumentList[i];\r\n                        return { name: argument.name, value: Number(form.value) } as PreviewUtil.ValueMap\r\n                    });\r\n            });\r\n            props.setSendingArrayMap(() => {\r\n                return formList\r\n                    .filter((form, i) => {\r\n                        return argumentList[i].valueType === 'array';\r\n                    })\r\n                    .map((form, i) => {\r\n                        const argument = argumentList[i];\r\n                        const array = form.value.split(',').map(v => Number(v));\r\n                        return { name: argument.name, array } as PreviewUtil.ArrayMap\r\n                    });\r\n            });\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n            props.setSendingArrayMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return <>{\r\n        formList.map((form, i) => {\r\n            const argument = argumentList[i];\r\n\r\n            const validates: ValidateUtil.Validate[] = [];\r\n            let isNumber = false;\r\n            if (argument.valueType === 'number') {\r\n                validates.push({\r\n                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                    errorType: \"required\"\r\n                });\r\n                isNumber = true;\r\n            } else {\r\n                validates.push({\r\n                    checker: (value) => ValidateUtil.checkArrayNumber(value),\r\n                    errorType: \"value\"\r\n                });\r\n            }\r\n            return (<FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={argument.name}\r\n                labelWidth={250}\r\n                jsx={\r\n                    <FormUtil.TextField\r\n                        width={312}\r\n                        isNumber={isNumber}\r\n                        checkable={form}\r\n                        setCheckable={() => {\r\n                            setFormList(formList.slice());\r\n                        }}\r\n                        validates={validates}\r\n                    />\r\n                }\r\n            />);\r\n        })\r\n    }</>\r\n}\r\n\r\nexport default PreviewLogicInputForm;","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../factory/util/logicFormUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewSeedInputForm = (props: {\r\n    seedWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n    setSendingArrayMap: (sendingArrayMap: (() => PreviewUtil.ArrayMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [formgrpList, seedargList, presetList]: [LogicUtil.NodeFromGrpItem[], LogicUtil.NodeSeedArgItem[], LogicUtil.NodeSampleItem[]] = useMemo(() => {\r\n        const formgrpWrap = LogicElementUtil.getInnerWrap(props.seedWrap, 'interface-mng', 'formgrp-mng');\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        if (formgrpWrap != null) {\r\n            formgrpList = (formgrpWrap.data as LogicUtil.NodeFromgrpManager).defines.map(def => def.data as LogicUtil.NodeFromGrpItem);\r\n        }\r\n\r\n        const argWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedarg-mng');\r\n        const seedargList = (argWrap.data as LogicUtil.NodeSeedArgManager).args.map(arg => arg.data as LogicUtil.NodeSeedArgItem);\r\n\r\n        const sampleWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'sample-mng');\r\n        const sampleList = (sampleWrap.data as LogicUtil.NodeSampleManager).samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n        return [formgrpList, seedargList, sampleList];\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        setFormList(seedargList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (formList.find(form => form.errors.length > 0) == undefined) {\r\n            props.setSendingValueMap(() => {\r\n                const valueMap: PreviewUtil.ValueMap[] = [];\r\n                formList.forEach((form, i) => {\r\n                    const seedarg = seedargList[i];\r\n                    if (!seedarg.isArray) {\r\n                        valueMap.push({ name: seedarg.name, value: Number(form.value) });\r\n                    }\r\n                });\r\n\r\n                // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                const sendMng = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                return sendParams\r\n                    .filter((item, i) => {\r\n                        return !item.isArray;\r\n                    })\r\n                    .map(item => {\r\n                        const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                        if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                        return { name: item.name, value };\r\n                    });\r\n            });\r\n            props.setSendingArrayMap(() => {\r\n                const arrayMap: PreviewUtil.ArrayMap[] = [];\r\n                formList.forEach((form, i) => {\r\n                    const seedarg = seedargList[i];\r\n                    if (seedarg.isArray) {\r\n                        const array = (form.value === '' ? [] : form.value.split(',').map(v => Number(v)));\r\n                        arrayMap.push({ name: seedarg.name, array });\r\n                    }\r\n                });\r\n\r\n                // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                const sendMng = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                return sendParams\r\n                    .filter((item, i) => {\r\n                        return item.isArray;\r\n                    })\r\n                    .map(item => {\r\n                        console.log(arrayMap);\r\n                        const array = PreviewUtil.convertParamsToArray(item.name, sendParams, arrayMap);\r\n                        if (array == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                        return { name: item.name, array };\r\n                    });\r\n            });\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n            props.setSendingArrayMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"Preset\"\r\n            innerJsx={<FormUtil.Record\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        width={402}\r\n                        checkable={template}\r\n                        setCheckable={setTemplate}\r\n                        headBlank\r\n                        list={presetList.map((sample, i) => {\r\n                            return {\r\n                                labelText: sample.name,\r\n                                value: i.toString()\r\n                            }\r\n                        })}\r\n                    />\r\n                    <FormUtil.ButtonItem\r\n                        button={{\r\n                            label: 'Apply',\r\n                            isEnable: template.value !== '',\r\n                            callback: () => {\r\n                                const selectedIndex = Number(template.value);\r\n                                const values = presetList[selectedIndex].values;\r\n                                values.forEach((value, i) => {\r\n                                    formList[i].value = value.toString();\r\n                                });\r\n                                setFormList(formList.slice());\r\n                            }\r\n                        }}\r\n                    />\r\n                </>}\r\n            />}\r\n        />\r\n        {LogicFormUtil.buildPreviewForms(\r\n            false, seedargList, formgrpList, formList, setFormList\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default PreviewSeedInputForm;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport { SPUtil } from \"../../../sp/spUtil\";\r\nimport { VscDebugStart } from \"react-icons/vsc\";\r\nimport { IoStopOutline } from \"react-icons/io5\";\r\nimport { RxReset } from \"react-icons/rx\";\r\nimport { AiFillStepBackward, AiFillStepForward } from \"react-icons/ai\";\r\n\r\nnamespace PreviewLauncherFrameSp {\r\n\r\n    export const Component = (props: {\r\n        sceens: string[];\r\n        frameCnt: number;\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const sceens = props.sceens;\r\n        const frameCnt = props.frameCnt;\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n\r\n        const previewTabJsx = (\r\n            <>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    // 再生中は変更できない\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    interval={12}\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 60,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            icon: <AiFillStepBackward />,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 60,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            icon: <AiFillStepForward />,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            width: 100,\r\n                            icon: !isPlay ? <VscDebugStart /> : <IoStopOutline />,\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            width: 100,\r\n                            isEnable: !isPlay,\r\n                            icon: <RxReset />,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={SPUtil.SCREEN_WIDTH - 1}\r\n                height={768}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                        } break;\r\n                        case 'ArrowRight': {\r\n                            if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                        } break;\r\n                        case ' ': {\r\n                            setPlay(!isPlay);\r\n                        } break;\r\n                    }\r\n                    if (e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }}\r\n            >\r\n                {previewTabJsx}\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                        if (props.closeAction != undefined) {\r\n                            props.closeAction();\r\n                        }\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLauncherFrameSp;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #575a61ce;\r\n    border: 1px solid #8f8f8f;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${SPUtil.SCREEN_WIDTH - 3}px;\r\n    height: ${SPUtil.SCREEN_WIDTH - 3}px;\r\n    margin: 35px 0 0 0;\r\n    background-color: #020202df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryUtil from \"../launcher/util/storyUtil\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport styled, { css } from \"styled-components\";\r\nimport PreviewLauncherFrame from \"./previewLauncherFrame\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport PreviewLauncherFrameSp from \"./previewLauncherFrameSp\";\r\n\r\nnamespace BuildUtil {\r\n\r\n    export type RunParticleProps = {\r\n        /** フレームの上限（過ぎると停止） */\r\n        limitFrame: number,\r\n        /** パーティクル数の上限（超えると停止） */\r\n        limitParticle: number,\r\n        /** 最低保証フレーム */\r\n        guaranteeFrame?: number,\r\n        /** 1フレーム経過ごとに実行する処理のコールバック */\r\n        doIterate: (frame: number, owner: Particle.Instance[]) => void,\r\n        /** 最終フレーム（ループから抜けた直後）に実行する処理のコールバック */\r\n        doEnd?: (frame: number, owner: Particle.Instance[]) => void\r\n    };\r\n\r\n    export type DivideProps = {\r\n        num: number;\r\n        standbyEvent: () => void;\r\n        countUpEvent: () => void;\r\n    }\r\n\r\n    export const run = (props: RunParticleProps) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        const owner: Particle.Instance[] = [];\r\n        let frame = 0;\r\n\r\n        while (true) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frame > props.limitFrame ||\r\n                owner.length > props.limitParticle ||\r\n                frame > minFrame && owner.length === 0\r\n            ) break;\r\n            frame++;\r\n        };\r\n\r\n        if (props.doEnd != undefined) {\r\n            props.doEnd(frame, owner);\r\n        }\r\n    }\r\n\r\n    export const runPaging = (props: RunParticleProps, owner: Particle.Instance[], beginFrame: number, advanceFrame: number) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        // const owner: Particle.Instance[] = [];\r\n\r\n        let frame = beginFrame;\r\n        while (frame - beginFrame < advanceFrame) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            // if (frame > props.limitFrame ||\r\n            //     owner.length > props.limitParticle ||\r\n            //     frame > minFrame && owner.length === 0\r\n            // ) {\r\n            //     if (props.doEnd != undefined) {\r\n            //         props.doEnd(frame, owner);\r\n            //     }\r\n            //     break;\r\n            // }\r\n            frame++;\r\n        };\r\n    }\r\n\r\n    const PROGRESS_VAL = 1;\r\n\r\n    type StoryPreviewProps = {\r\n        sceens: string[];\r\n        useFrame: number;\r\n    }\r\n\r\n    export type PagingField = {\r\n        useFrame: number;\r\n        curFrame: number;\r\n        sceens: string[];\r\n        owner: Particle.Instance[];\r\n    }\r\n\r\n    export const BuildFrame = (props: {\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n        const [storyPreviewProps, setStoryPreviewProps] = useState<StoryPreviewProps | null>(null);\r\n        const [buildCache, setBuildCache] = useState<PagingField>({\r\n            useFrame: 0,\r\n            curFrame: 0,\r\n            owner: [],\r\n            sceens: []\r\n        });\r\n\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n        useEffect(() => {\r\n            // プログレスバーが100％になったら処理される\r\n            if (buildCache.useFrame != 0 && buildCache.curFrame == buildCache.useFrame) {\r\n                setStoryPreviewProps({\r\n                    sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                });\r\n                return;\r\n            }\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const minFrame = fuseList[0].frame;\r\n\r\n            if (buildCache.useFrame === 0) {\r\n                BuildUtil.run({\r\n                    limitFrame,\r\n                    limitParticle,\r\n                    guaranteeFrame: minFrame,\r\n                    doIterate: (frame, owner) => {\r\n                        fuseList.some(fuse => {\r\n                            if (fuse.frame === frame) {\r\n                                LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                            } else if (fuse.frame > frame) return 1;\r\n                        });\r\n                    },\r\n                    doEnd: (frame) => {\r\n                        buildCache.useFrame = frame;\r\n                    }\r\n                });\r\n                setBuildCache({ ...buildCache });\r\n            } else {\r\n                runPaging({\r\n                    limitFrame,\r\n                    limitParticle,\r\n                    guaranteeFrame: minFrame,\r\n                    doIterate: (frame, owner) => {\r\n\r\n                        fuseList.some(fuse => {\r\n                            if (fuse.frame === frame) {\r\n                                LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                            } else if (fuse.frame > frame) return 1;\r\n                        });\r\n\r\n                        buildCache.sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                            // パーティクルの描画\r\n                            owner.forEach(par => {\r\n                                par.draw(ctx);\r\n                            });\r\n                            ctx.save();\r\n                        }));\r\n                    },\r\n                    // doEnd: () => {\r\n                    //     setStoryPreviewProps({\r\n                    //         sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                    //     });\r\n                    // }\r\n                }, buildCache.owner, buildCache.curFrame, PROGRESS_VAL);\r\n                buildCache.curFrame += PROGRESS_VAL;\r\n                if (buildCache.curFrame > buildCache.useFrame) {\r\n                    buildCache.curFrame = buildCache.useFrame;\r\n                }\r\n                setBuildCache({ ...buildCache });\r\n            }\r\n        }, [buildCache]);\r\n\r\n        useEffect(() => {\r\n            if (storyPreviewProps != null) {\r\n                store.system.dialog = <PreviewLauncherFrameSp.Component\r\n                    sceens={storyPreviewProps.sceens}\r\n                    frameCnt={storyPreviewProps.useFrame}\r\n                    closeAction={props.closeAction}\r\n                />;\r\n                dispatcher.updateStore();\r\n            }\r\n        }, [storyPreviewProps]);\r\n\r\n\r\n        const getJsx = () => {\r\n            if (storyPreviewProps == null) {\r\n                if (buildCache == null) return <></>;\r\n                const rate = buildCache.curFrame / buildCache.useFrame * 100;\r\n                const isStandby = buildCache.useFrame === 0;\r\n                return (\r\n                    <_Blind>\r\n                        <_ProgressBox><_ProgressVal rate={rate} /></_ProgressBox>\r\n                        <_RateVal isStandby={isStandby}>{isStandby ? 'Calculating...' : `${Math.floor(rate)}%`}</_RateVal>\r\n                    </_Blind>\r\n                );\r\n            }\r\n            return <></>;\r\n        }\r\n\r\n        return getJsx();\r\n    }\r\n}\r\n\r\nexport default BuildUtil;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #002910c0;\r\n    z-index: 10;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _ProgressBox = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relaltive;\r\n    width: calc(100% - 20px);\r\n    height: 40px;\r\n    margin: 200px 0 0 10px;\r\n    background-color: #ffffff29;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    background-color: #ffffffc1;\r\n`;\r\n\r\nconst _RateVal = styled.div<{\r\n    isStandby: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #0000003b;\r\n\r\n    color: #ffffff;\r\n    ${props => !props.isStandby ? '' : css`\r\n        color: #f50000;\r\n    `}\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ReactLoading from 'react-loading';\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport PreviewLogicInputForm from \"./inputForm/previewLogicInputForm\";\r\nimport PreviewSeedInputForm from \"./inputForm/previewSeedInputForm\";\r\nimport BuildUtil from \"./buildUtil\";\r\n\r\nnamespace PreviewLogicFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        master: LogicUtil.WrapElement;\r\n        rootData: LogicUtil.WrapElement;\r\n        closeButtonAction: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n\r\n        const [sceens, setSceens] = useState<string[]>([]);\r\n        const [frameCnt, setFrameCnt] = useState<number>(-1);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isBuild, setBuild] = useState<boolean>(false);\r\n        const [progress, setProgress] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const [sendingValueMap, setSendingValueMap] = useState<((() => PreviewUtil.ValueMap[]) | null)>(null);\r\n        const [sendingArrayMap, setSendingArrayMap] = useState<((() => PreviewUtil.ArrayMap[]) | null)>(null);\r\n\r\n        const isSeed = props.master.type === 'seed-item';\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n        useEffect(() => {\r\n            if (isBuild) build();\r\n        }, [isBuild]);\r\n\r\n        const build = () => {\r\n            if (sendingValueMap == null) return;\r\n            setCur(0);\r\n            const sceens: string[] = [];\r\n            BuildUtil.run({\r\n                limitFrame: 500,\r\n                limitParticle: 3000,\r\n                doIterate: (frame, owner) => {\r\n                    if (frame === 0) {\r\n                        const getOrigin = () => {\r\n                            if (!isSeed) return props.master.data as LogicUtil.NodeLogicItem;\r\n                            else {\r\n                                const seed = props.master.data as LogicUtil.NodeSeedItem;\r\n                                const root = props.rootData.data as LogicUtil.NodeRoot;\r\n                                const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                                return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                            }\r\n                        }\r\n                        owner.push(new Particle.Instance(\r\n                            PreviewUtil.buildLogicProps(owner, getOrigin(), props.rootData, sendingValueMap as any, sendingArrayMap as any)\r\n                        ));\r\n                    }\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n\r\n                        // 経過フレーム、要素数の表示\r\n                        ctx.globalAlpha = 1;\r\n                        ctx.font = '16pt Arial';\r\n                        ctx.fillStyle = '#ffffff';\r\n                        ctx.fillText(`${frame}`, 6, 24);\r\n                        ctx.fillStyle = '#ffec5c';\r\n                        ctx.fillText(`${owner.length}`, 6, 44);\r\n\r\n                        // ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    setFrameCnt(frame);\r\n                    setSceens(sceens);\r\n\r\n                    setBuild(false);\r\n                    setTabIndex(1);\r\n                }\r\n            });\r\n        }\r\n\r\n        const isInputOK = sendingValueMap != null;\r\n\r\n        const buildTabJsx = (\r\n            <_Wrap>\r\n                <_Blind isEnable={isBuild}>\r\n                    {/* <ReactLoading type='spinningBubbles' /> */}\r\n                    <_Msg>Now building...</_Msg>\r\n                </_Blind>\r\n                <_FormDiv\r\n                    isSeed={props.master.type === 'seed-item'}\r\n                >\r\n                    {!isSeed ? (\r\n                        <PreviewLogicInputForm\r\n                            logicWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                            setSendingArrayMap={setSendingArrayMap}\r\n                        />\r\n                    ) : (\r\n                        <PreviewSeedInputForm\r\n                            seedWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                            setSendingArrayMap={setSendingArrayMap}\r\n                        />\r\n                    )}\r\n                </_FormDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Build',\r\n                            isEnable: isInputOK && !isBuild,\r\n                            callback: () => {\r\n                                setBuild(true);\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    // 再生中は変更できない\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    if (tabIndex === 0) {\r\n                        if (isInputOK && e.key === ' ') build();\r\n                    } else {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                            } break;\r\n                            case 'ArrowRight': {\r\n                                if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                            } break;\r\n                            case ' ': {\r\n                                setPlay(!isPlay);\r\n                            } break;\r\n                        }\r\n                    }\r\n                    if (!isPlay && e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }\r\n                }\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Build', enable: true, cont: buildTabJsx },\r\n                            { name: 'Play', enable: frameCnt !== -1, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={props.closeButtonAction}\r\n                >×</_CloseButton>\r\n            </_Frame >\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLogicFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _FormDiv = styled.div<{\r\n    isSeed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 580px;\r\n    background-color: #c5cfd6df;\r\n    ${props => !props.isSeed ? '' : css`\r\n        background-color: #c6d6c5df;\r\n    `}\r\n    overflow-y: auto;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #c5c5c5df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;\r\n\r\n\r\nconst _Blind = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: ${props => !props.isEnable ? 'none;' : 'inline-block;'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000552cd;\r\n    z-index: 99;\r\n`;\r\n\r\nconst _Msg = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    margin: 240px 0 0 110px;\r\n    /* background-color: #26f055cd; */\r\n    color: white;\r\n    font-size: 56px;\r\n    font-weight: 600;\r\n\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\n\r\nnamespace PreviewLauncherFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        sceens: string[];\r\n        frameCnt: number;\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const sceens = props.sceens;\r\n        const frameCnt = props.frameCnt;\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    // 再生中は変更できない\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                        } break;\r\n                        case 'ArrowRight': {\r\n                            if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                        } break;\r\n                        case ' ': {\r\n                            setPlay(!isPlay);\r\n                        } break;\r\n                    }\r\n                    if (e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }}\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Play', enable: true, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                        if (props.closeAction != undefined) {\r\n                            props.closeAction();\r\n                        }\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLauncherFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #aec7d8df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport assert from \"assert\";\r\n\r\nnamespace NameDefDialog {\r\n\r\n    export const Component = (props: {\r\n        targetSeq: number,\r\n        type?: ProjectType,\r\n        source?: string,\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const width = 500;\r\n        const height = 150;\r\n\r\n        const isCreate = props.targetSeq === -1;\r\n        const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n        const getDefaultName = () => {\r\n            return props.targetSeq === -1 ? '' : (projects.find(p => p.seq === props.targetSeq) as StoreCloud.Project).name;\r\n        }\r\n\r\n        useEffect(() => {\r\n            name.value = getDefaultName();\r\n            setName({ ...name });\r\n        }, []);\r\n\r\n        const [existNames] = useMemo(() => {\r\n            return [\r\n                projects.map(item => item.name)\r\n            ];\r\n        }, []);\r\n\r\n        const registCreate = () => {\r\n            if(props.type == undefined || props.source == undefined) throw assert;\r\n            const result = findProjectMaxSeq();\r\n            result.then((maxSeq) => {\r\n                const newProject: StoreCloud.Project = {\r\n                    seq: Number(maxSeq + 1),\r\n                    name: name.value,\r\n                    type: props.type as ProjectType,\r\n                    source: props.source as string,\r\n                    lastmod: ''\r\n                };\r\n                projects.push(newProject);\r\n                insertProject(store.system.user?.seq as number, newProject).then(() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            });\r\n        }\r\n\r\n        const registUpdate = () => {\r\n            const targetItem = projects.find(item => item.seq === props.targetSeq);\r\n            if (targetItem != undefined) {\r\n                updateProjectName(props.targetSeq, name.value).then(() => {\r\n                    targetItem.name = name.value;\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            }\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: isCreate ? 'Create' : 'Update',\r\n                isEnable: name.errors.length === 0,\r\n                callback: () => {\r\n                    if (isCreate) registCreate();\r\n                    else registUpdate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, input new name!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => LogicUtil.checkFieldName(value),\r\n                                //     errorType: \"value\"\r\n                                // },\r\n                                {\r\n                                    checker: (value) => !existNames.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NameDefDialog;\r\n\r\nconst findProjectMaxSeq = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT max(seq) m FROM prjcttbl`);\r\n    const results = await response.json();\r\n    return results[0].m;\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, type, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.type}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import DataUtil from \"../utils/dataUtil\";\r\nimport PreviewLogicFrame from \"../contents/create/preview/previewLogicFrame\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport LogicElementUtil from \"../contents/create/factory/util/logicElementUtil\";\r\nimport styled, { css } from \"styled-components\";\r\nimport StoryUtil from \"../contents/create/launcher/util/storyUtil\";\r\nimport FormUtil from \"../utils/form/formUtiil\";\r\nimport CanvasUtil from \"../utils/canvasUtil\";\r\nimport PreviewLauncherFrame from \"../contents/create/preview/previewLauncherFrame\";\r\nimport BuildUtil from \"../contents/create/preview/buildUtil\";\r\nimport Particle from \"../contents/graphic/particle\";\r\nimport { VscSettingsGear } from \"react-icons/vsc\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    seedList: SeedProps[];\r\n}\r\ntype StoryProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    libraryData: LogicUtil.WrapElement;\r\n    scenarioData: StoryUtil.StoryData;\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\ntype StoryPreviewProps = {\r\n    sceens: string[];\r\n    useFrame: number;\r\n}\r\n\r\nexport type PagingField = {\r\n    useFrame: number;\r\n    curFrame: number;\r\n    sceens: string[];\r\n    owner: Particle.Instance[];\r\n}\r\n\r\nconst PROGRESS_VAL = 1;\r\n\r\nconst DirectLinkManager = (props: {\r\n    projectSeq: number;\r\n}) => {\r\n    const [libData, setLibData] = useState<LibProps | null>(null);\r\n    const [storyData, setStoryData] = useState<StoryProps | null>(null);\r\n    const [storyPreviewProps, setStoryPreviewProps] = useState<StoryPreviewProps | null>(null);\r\n    const [buildCache, setBuildCache] = useState<null | PagingField>(null);\r\n\r\n    const [seedSeq, setSeedSeq] = useState(-1);\r\n\r\n    useEffect(() => {\r\n\r\n        findProject(props.projectSeq).then(resList => {\r\n            if (resList.length > 0) {\r\n                const res = resList[0];\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const data = JSON.parse(DataUtil.unZip(res.source));\r\n                // シナリオであるかどうかの判定\r\n                if (!data.hasOwnProperty('scenarioData')) {\r\n                    const rootData = data as LogicUtil.WrapElement;\r\n                    const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                    const seedList: SeedProps[] = seedMng.defs\r\n                        .filter(wrap => {\r\n                            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                            return seed.permit === 'release';\r\n                        })\r\n                        .map(wrap => {\r\n                            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                            const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                            return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                        });\r\n                    setLibData({\r\n                        name, ownerId, lastmod, rootData, seedList\r\n                    });\r\n                } else {\r\n                    const scenarioProps = data as StoryUtil.ScenarioFileProps;\r\n                    setStoryData({\r\n                        name, ownerId, lastmod, libraryData: scenarioProps.libraryData, scenarioData: scenarioProps.scenarioData\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (buildCache == null || storyData == null) return;\r\n        if (buildCache.useFrame != 0 && buildCache.curFrame == buildCache.useFrame) {\r\n            setStoryPreviewProps({\r\n                sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n            });\r\n            return;\r\n        }\r\n\r\n        const fuseList = storyData.scenarioData.fuseList;\r\n        const limitFrame = storyData.scenarioData.limitFrame;\r\n        const limitParticle = storyData.scenarioData.limitParticle;\r\n        const minFrame = fuseList[0].frame;\r\n        const logicData = storyData.libraryData;\r\n        if (buildCache.useFrame === 0) {\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n                    fuseList.some(fuse => {\r\n                        if (fuse.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                        } else if (fuse.frame > frame) return 1;\r\n                    });\r\n                },\r\n                doEnd: (frame) => {\r\n                    buildCache.useFrame = frame;\r\n                }\r\n            });\r\n            setBuildCache({ ...buildCache });\r\n        } else {\r\n\r\n            BuildUtil.runPaging({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    fuseList.some(fuse => {\r\n                        if (fuse.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                        } else if (fuse.frame > frame) return 1;\r\n                    });\r\n\r\n                    buildCache.sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                // doEnd: () => {\r\n                //     setStoryPreviewProps({\r\n                //         sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                //     });\r\n                // }\r\n            }, buildCache.owner, buildCache.curFrame, PROGRESS_VAL);\r\n            buildCache.curFrame += PROGRESS_VAL;\r\n            if (buildCache.curFrame > buildCache.useFrame) {\r\n                buildCache.curFrame = buildCache.useFrame;\r\n            }\r\n            setBuildCache({ ...buildCache });\r\n        }\r\n    }, [buildCache]);\r\n\r\n    /**\r\n     * プレビューオールダイアログを表示する\r\n     */\r\n    const openPreviewAllDialog = () => {\r\n        setBuildCache({\r\n            useFrame: 0,\r\n            curFrame: 0,\r\n            owner: [],\r\n            sceens: []\r\n        });\r\n    }\r\n\r\n    const getJsx = () => {\r\n        let jsx = <></>;\r\n        if (libData != null) {\r\n            if (seedSeq === -1) {\r\n                jsx = <>\r\n                    <_Header>{libData.name}</_Header>\r\n                    {libData.seedList.map((seed, i) => {\r\n                        const seedName = seed.disp ?? seed.name;\r\n                        return (<_Item key={i}\r\n                            onClick={() => {\r\n                                setSeedSeq(i);\r\n                            }}\r\n                        >\r\n                            <_SeedName>{seedName}</_SeedName>\r\n                            <_ArgCnt> [{seed.argCount} arguments]</_ArgCnt>\r\n                        </_Item>);\r\n                    })}\r\n                </>;\r\n            } else {\r\n                jsx = <PreviewLogicFrame.Component\r\n                    master={libData.seedList[seedSeq].master}\r\n                    rootData={libData.rootData}\r\n                    closeButtonAction={() => {\r\n                        setSeedSeq(-1);\r\n                    }}\r\n                />\r\n            }\r\n        } else if (storyData != null) {\r\n            if (storyPreviewProps == null) {\r\n                const getBlindJsx = () => {\r\n                    if (buildCache == null) return <></>;\r\n                    const rate = buildCache.curFrame / buildCache.useFrame * 100;\r\n                    const isStandby = buildCache.useFrame === 0;\r\n                    return (\r\n                        <_Blind>\r\n                            <_ProgressBox><_ProgressVal rate={rate} /></_ProgressBox>\r\n                            <_RateVal isStandby={isStandby}>{isStandby ? 'Calculating...' : `${Math.floor(rate)}%`}</_RateVal>\r\n                        </_Blind>\r\n                    );\r\n                }\r\n                jsx = <>\r\n                    {getBlindJsx()}\r\n                    <_Header>{storyData.name}</_Header>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        isIconButton\r\n                        buttons={[\r\n                            {\r\n                                label: 'Build',\r\n                                icon: <VscSettingsGear />,\r\n                                width: 200,\r\n                                callback() {\r\n                                    openPreviewAllDialog();\r\n                                },\r\n                            }\r\n                        ]} />\r\n                </>;\r\n            } else {\r\n                jsx = <PreviewLauncherFrame.Component\r\n                    sceens={storyPreviewProps.sceens}\r\n                    frameCnt={storyPreviewProps.useFrame}\r\n                />\r\n            }\r\n        }\r\n        return jsx;\r\n    }\r\n\r\n    return getJsx();\r\n}\r\n\r\nexport default DirectLinkManager;\r\n\r\n\r\nconst findProject = async (conteseq: number) => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE seq = ${conteseq}\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #002910c0;\r\n    z-index: 10;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _ProgressBox = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relaltive;\r\n    width: calc(100% - 20px);\r\n    height: 40px;\r\n    margin: 200px 0 0 10px;\r\n    background-color: #ffffff29;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    background-color: #ffffffc1;\r\n`;\r\n\r\nconst _RateVal = styled.div<{\r\n    isStandby: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #0000003b;\r\n\r\n    color: #ffffff;\r\n    ${props => !props.isStandby ? '' : css`\r\n        color: #f50000;\r\n    `}\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background: linear-gradient(to bottom, #00215e, #000000, #00215e);\r\n\r\n    color: #e0e0e0;\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #abc9e6;\r\n`;\r\n\r\nconst _ArgCnt = styled.span<{\r\n}>`\r\n    color: #fbffbf;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport DirectLinkManager from \"./directLinkManager\";\r\nimport DataUtil from \"../utils/dataUtil\";\r\n\r\ntype ScreenBean = {\r\n    adjLeft: number;\r\n    adjTop: number;\r\n    rate: number;\r\n}\r\n\r\n// export const CONTENTS_WIDTH = 576;\r\n// export const CONTENTS_HEIGHT = 1024;\r\n\r\n\r\nexport const CONTENTS_WIDTH = 600;\r\nexport const CONTENTS_HEIGHT = 660;\r\n\r\nconst MobileRoot = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const [isPermit, setPermit] = useState(true);\r\n    const [screen, setScreen] = useState<ScreenBean>({ adjLeft: 0, adjTop: 0, rate: 1 });\r\n    const ref = useRef<null | HTMLDivElement>(null);\r\n\r\n    const projectSeq = DataUtil.getDecryptionedProjectSeq(props.hashKey);\r\n\r\n    const update = () => {\r\n        if (ref.current != null) {\r\n            // const [clientWidth, clientHeight] = [window.innerWidth, window.innerHeight];\r\n\r\n            const rect = ref.current.getBoundingClientRect();\r\n            const [clientWidth, clientHeight] = [rect.width, rect.height];\r\n\r\n            const cw = CONTENTS_WIDTH;\r\n            const ch = CONTENTS_HEIGHT;\r\n\r\n            const isFitSide = clientHeight / ch > clientWidth / cw;\r\n\r\n            const rate = !isFitSide ? clientHeight / ch : clientWidth / cw;\r\n            const adjLeft = !isFitSide ? clientWidth / 2 - (cw * rate / 2) : 0;\r\n            const adjTop = !isFitSide ? 0 : clientHeight / 2 - (ch * rate / 2);\r\n\r\n            setScreen({ adjLeft, adjTop, rate });\r\n        }\r\n    }\r\n\r\n    // window.addEventListener('DOMContentLoaded', () => {\r\n    //     if (!isSmartPhone()) {\r\n    //         window.addEventListener('resize', update);\r\n    //     } else {\r\n    //         window.addEventListener('orientationchange resize', () => {\r\n    //             update();\r\n    //             setPermit(window.orientation === 0);\r\n    //         });\r\n    //     }\r\n    // });\r\n\r\n    // window.onorientationchange = () => {\r\n    //   setOrientation(window.orientation);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        update();\r\n        console.log(navigator.userAgent);\r\n        if (isSmartPhone()) {\r\n            setPermit(window.orientation === 0);\r\n        }\r\n        if (!isSmartPhone()) {\r\n            window.addEventListener('resize', ()=>{\r\n                update();\r\n            });\r\n        } else {\r\n            window.addEventListener('orientationchange resize', () => {\r\n                alert('change');\r\n                update();\r\n                setPermit(window.orientation === 0);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    let jsx = <_Error>Make your smartphone vertical!</_Error>;\r\n    if (isPermit) {\r\n        jsx = (\r\n            <_Contents>\r\n                <DirectLinkManager projectSeq={projectSeq} />\r\n            </_Contents>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap ref={ref}>\r\n            <_Frame left={screen.adjLeft} top={screen.adjTop} rate={screen.rate}>\r\n                {jsx}\r\n            </_Frame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MobileRoot;\r\n\r\nconst isSmartPhone = () => {\r\n    // UserAgentからのスマホ判定\r\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 10px);\r\n  height: calc(100% - 10px);\r\n  background-color: #9eadc9;\r\n  margin: 5px 0 0 5px; */\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst _Frame = styled.div<{\r\n    left: number;\r\n    top: number;\r\n    rate: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: ${props => props.top}px;\r\n  left: ${props => props.left}px;\r\n  transform-origin: top left;\r\n  /* width: 100%;\r\n  height: 100%; */\r\n  transform: scale(${props => props.rate});\r\n`;\r\n\r\nconst _Contents = styled.div`\r\n  display: inline-block;\r\n  width: ${CONTENTS_WIDTH}px;\r\n  height: ${CONTENTS_HEIGHT}px;\r\n  background-color: #929292;\r\n`;\r\n\r\nconst _Error = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #750000;\r\n    color: white;\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const dialog = store.system.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            if (!store.system.canDialogClose) return;\r\n            store.system.dialog = null;\r\n            store.system.canDialogClose = false;\r\n            setStore({ ...store });\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport StoreSystem from \"../../redux/store/storeSystem\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../utils/form/validateUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst WIDTH = 750;\r\nconst HEIGHT = 600;\r\n/**\r\n * アカウントフレームのコンポーネント\r\n * @returns \r\n */\r\nconst AccountFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [oldPass, setOldPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPass, setNewPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPassConfirm, setNewPassConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n    const [emailList, setEmailList] = useState<string[]>([]);\r\n\r\n    const [isModify, setModify] = useState(false);\r\n    const loginProps = store.system.user as StoreSystem.User;\r\n\r\n    const reloadInfo = () => {\r\n        setUserId({ ...userId, value: loginProps.id });\r\n        setNewPass({ ...newPass, value: '' });\r\n        setNewPassConfirm({ ...newPassConfirm, value: '' });\r\n        setEmail({ ...email, value: loginProps.email });\r\n        setOldPass({ ...oldPass, value: loginProps.password });\r\n    }\r\n\r\n    useEffect(() => {\r\n        DataUtil.findUserInfoList().then(list => {\r\n\r\n            const userIdList: string[] = [];\r\n            const emailList: string[] = [];\r\n            list.forEach(info => {\r\n                if (info.id !== loginProps.id) userIdList.push(info.id);\r\n                if (info.email !== '') emailList.push(info.email);\r\n            });\r\n            setUserIdList(userIdList);\r\n            setEmailList(emailList);\r\n        });\r\n\r\n        const hash = DataUtil.getHashedFromUserSeq(loginProps.seq);\r\n\r\n        // ユーザページのURLに変更する。\r\n        window.history.replaceState('', '', `/#/user?v=${hash}`);\r\n\r\n        reloadInfo();\r\n\r\n        // 閉じる際にURLを元に戻す\r\n        return () => {\r\n            // alert('destroy');\r\n            window.history.replaceState('', '', `/#/`);\r\n        }\r\n    }, []);\r\n\r\n    const userTabJsx: JSX.Element = (\r\n        <_Wrap>\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'user id'}\r\n                checkable={userId}\r\n                setCheckable={setUserId}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !userIdList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass'}\r\n                isPassword\r\n                checkable={newPass}\r\n                setCheckable={setNewPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPassConfirm.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPassConfirm]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass*'}\r\n                isPassword\r\n                checkable={newPassConfirm}\r\n                setCheckable={setNewPassConfirm}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPass.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPass]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'email'}\r\n                checkable={email}\r\n                setCheckable={setEmail}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => {\r\n                            return value.length === 0 || value.split('@').length === 2;\r\n                        },\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !emailList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                // width={500}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'old pass'}\r\n                isPassword\r\n                checkable={oldPass}\r\n                setCheckable={setOldPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => value === loginProps.password,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                // dependency={[passwordConfirm]}\r\n                width={300}\r\n                marginTop={55}\r\n                isReadOnly={!isModify}\r\n            />\r\n        </_Wrap>\r\n    );\r\n\r\n    // 登録ボタンの活性状態\r\n    const permitRegist = (\r\n        userId.errors.length === 0\r\n        && newPass.errors.length === 0\r\n        && newPassConfirm.errors.length === 0\r\n        && email.errors.length === 0\r\n        && oldPass.errors.length === 0\r\n    );\r\n\r\n    const updateUserInfo = () => {\r\n        const passwordStr = newPass.value.length === 0 ? '' : `,password = '${newPass.value}'`;\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `UPDATE user_tbl SET id = '${userId.value}', email = '${email.value}'${passwordStr}\r\n            WHERE seq = ${loginProps?.seq}`\r\n        ).then(() => {\r\n            loginProps.id = userId.value;\r\n            if (newPass.value.length > 0) {\r\n                loginProps.password = newPass.value;\r\n            }\r\n            loginProps.email = email.value;\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Modify successful!\" />;\r\n            setStore({...store});\r\n        });\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <FormUtil.Message\r\n                    message=\"If you bookmark this page, you can easily login by URL.\"\r\n                />\r\n            </_Header>\r\n            <_Body>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'User', enable: true, cont: userTabJsx },\r\n                        { name: 'Security', enable: false, cont: <></> },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_Body>\r\n            <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        {\r\n                            label: 'Close',\r\n                            callback: () => {\r\n                                // dispatcher.system.closeDialog();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Cancel',\r\n                            isEnable: isModify,\r\n                            callback: () => {\r\n                                setModify(false);\r\n                                reloadInfo();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isModify ? 'Modify' : 'Regist',\r\n                            isEnable: !isModify || permitRegist,\r\n                            callback: () => {\r\n                                if (!isModify) {\r\n                                    setModify(true);\r\n                                    setOldPass({ ...oldPass, value: '' });\r\n                                }\r\n                                else {\r\n                                    updateUserInfo();\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\n\r\nexport default AccountFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7eb;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    /* text-align: center; */\r\n`;\r\nconst _Body = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 100px);\r\n    padding: 4px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport AccountFrame from \"../accountFrame\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginCreateAccount = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isRegist, setRegist] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [passwordConfirm, setPasswordConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n\r\n    const createAuthText = () => {\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n        const list = '0123456789';\r\n        let text = '';\r\n        for (let i = 0; i < 6; i++) {\r\n            text += list.charAt(Math.random() * list.length);\r\n        }\r\n        return text;\r\n    };\r\n\r\n    /** 既存のユーザIDリストを格納 */\r\n    useEffect(() => {\r\n        DataUtil.findUserIdList().then(list => {\r\n            setUserIdList(list);\r\n        });\r\n\r\n        // fetch('https://api.ipify.org/?format=json').then(res => {\r\n        //     res.json().then(data => {\r\n        //         alert(data['ip']);\r\n        //     });\r\n        // });\r\n    }, []);\r\n\r\n    const [authCollation, setAuthCollation] = useState<string>(createAuthText());\r\n    const [authInput, setAuthInput] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    /** キャッシュした認証画像 */\r\n    const authPicture = useMemo(() => {\r\n        return CanvasUtil.getAuthTextURL(authCollation);\r\n\r\n    }, [authCollation]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n                case 'relation': list.push('[password] does not match confirm.'); break;\r\n            }\r\n        }\r\n        if (passwordConfirm.errors.length > 0) {\r\n            switch (passwordConfirm.errors[0]) {\r\n                case 'length': list.push('[password *] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    const registAction = () => {\r\n\r\n        (async () => {\r\n            let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n            let results = await response.json();\r\n            console.log(JSON.stringify(results[0].cnt));\r\n            const isExist = results[0].cnt > 0;\r\n            if (isExist) {\r\n                setMessageList(['That user id has already been recorded.']);\r\n            } else {\r\n                const nextSeq = await DataUtil.getNextUserSeq();\r\n                console.log(nextSeq);\r\n                await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(seq, id, password) VALUES(${nextSeq}, '${userId.value}', '${password.value}')`);\r\n                store.system.user = {\r\n                    seq: nextSeq,\r\n                    id: userId.value,\r\n                    password: password.value,\r\n                    email: '',\r\n                };\r\n                store.cloud = {\r\n                    projects: []\r\n                };\r\n                store.system.dialog = (<ConfirmDialog.Component\r\n                    message='You have successfully created an account!'\r\n                    buttons={[\r\n                        {\r\n                            label: 'OK',\r\n                            callback: () => {\r\n                                store.system.dialog = (<AccountFrame />);\r\n                                setStore({...store});\r\n                            }\r\n                        }\r\n                    ]}\r\n                />);\r\n                setStore({...store});\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0 && passwordConfirm.errors.length === 0;\r\n    }\r\n    const isAuthOK = () => {\r\n        return authInput.errors.length === 0 && authCollation === authInput.value;\r\n    }\r\n\r\n    return (<>\r\n\r\n        <_Frame isVisible={!isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass (Confirm).'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            },\r\n                            {\r\n                                checker: (value) => !userIdList.includes(value),\r\n                                errorType: \"relation\"\r\n                            },\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === passwordConfirm.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[passwordConfirm]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password*'}\r\n                        isPassword\r\n                        checkable={passwordConfirm}\r\n                        setCheckable={setPasswordConfirm}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === password.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[password]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Enter', isEnable: isLoginInfoOK(), callback: () => {\r\n                                    setRegist(true);\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Proof not a robot\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, input the same 6 number as the picture.'}\r\n                    />\r\n                    <_AuthText src={authPicture} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Change', callback: () => {\r\n                                    setAuthCollation(createAuthText());\r\n                                    setAuthInput({ value: '', errors: [] });\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                    {/* 照合する文字列 */}\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'6 numbers'}\r\n                        checkable={authInput}\r\n                        setCheckable={setAuthInput}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Regist', isEnable: isAuthOK(), callback: registAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setRegist(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginCreateAccount;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n\r\nconst _AuthText = styled.img<{\r\n}>`\r\n    display: block;\r\n    text-align: center;\r\n    margin: 4px auto;\r\n    background-color: #f7f0f0;\r\n    border: 1px solid #888888;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\nimport SystemConst from \"../../../utils/systemConst\";\r\n\r\nconst LoginLogin = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isForget, setForget] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        // alert(`Confirmation passwords don't match.`);\r\n        (async () => {\r\n            const results = await DataUtil.findUserInfoLogin(userId.value, password.value);\r\n            if (results.length > 0) {\r\n                localStorage.setItem(SystemConst.SESSTION_KEY_LOGIN, results[0].seq.toString());\r\n                store.system.user = {\r\n                    seq: results[0].seq,\r\n                    id: results[0].id,\r\n                    password: results[0].password,\r\n                    email: results[0].email,\r\n                };\r\n                const resPrjList = await DataUtil.findUserProjectList(results[0].seq, store.system.isSPMode);\r\n                store.cloud = {\r\n                    projects: resPrjList.map(res => ({\r\n                        source: res.source,\r\n                        type: res.type,\r\n                        name: res.name,\r\n                        seq: res.seq,\r\n                        lastmod: res.lastmod\r\n                    }))\r\n                };\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                    message=\"Login successful!\"\r\n                />;\r\n                setStore({ ...store });\r\n            } else {\r\n                setMessageList(['Incorrect user id or password.']);\r\n                // setPassword({ ...password, value: '' });\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0;\r\n    }\r\n\r\n    return (<>\r\n        <_Frame isVisible={!isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Enter', isEnable: isLoginInfoOK(), callback: enterAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Forgot your login information?\"\r\n                clickAction={() => {\r\n                    setForget(true);\r\n                }}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Email\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Submit login information to account address.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'email'}\r\n                        checkable={email}\r\n                        setCheckable={setEmail}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => {\r\n                                    return value.length === 0 || value.split('@').length === 2;\r\n                                },\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={500}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Send', isEnable: email.errors.length === 0, callback: () => {\r\n                                    DataUtil.findUserInfoFromEmail(email.value).then((list) => {\r\n                                        if (list.length > 0) {\r\n                                            const info = list[0];\r\n                                            const hash = DataUtil.getHashedFromUserSeq(info.seq);\r\n                                            const url = `https://demo-app.licresia.com/#/user?v=${hash}`;\r\n                                            DataUtil.sendQueryRequestToMailAPI({\r\n                                                from: 'info@licresia.com',\r\n                                                to: email.value,\r\n                                                subject: '【LiCreSia】support',\r\n                                                text: `Your login information is as follows.\\n\\nURL: ${url}\\nUSR ID: ${info.id}`\r\n                                            });\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"Your login information has been sent!\" />);\r\n                                        } else {\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"This email address is not registered.\" />);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setForget(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginLogin;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LoginCreateAccount from \"./loginCreateAccount\";\r\nimport LoginLogin from \"./loginLogin\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 500;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_LogoDiv>\r\n                <img src={logo} />\r\n            </_LogoDiv>\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {!isCreate ? <LoginLogin /> : <LoginCreateAccount />}\r\n            {/* <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        { name: 'Close', callback: closeAction },\r\n                        { name: 'Enter', callback: enterAction },\r\n                    ]}\r\n                />\r\n            </_Footer> */}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #bf808075;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n    background-color: #bf8080a2;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #c7a73e;\r\n        `}\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled, { css } from \"styled-components\";\r\nimport SystemConst, { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport LoginFrame from \"../dialog/login/loginFrame\";\r\nimport AccountFrame from \"../dialog/accountFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const user = store.system.user;\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (user != null) {\r\n            setUserId('@' + user.id);\r\n        }\r\n    }, [user]);\r\n\r\n    const authButtonJsx = user == null ? (\r\n        <_LoginButton onClick={() => {\r\n            store.system.canDialogClose = true;\r\n            store.system.dialog = <LoginFrame />;\r\n            setStore({ ...store });\r\n            console.log(window.location.origin);\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Login / Sign up\r\n        </_LoginButton>\r\n    ) : (<>\r\n        <_UserName\r\n            isEntry={user != null}\r\n            onClick={() => {\r\n                store.system.dialog = <AccountFrame />;\r\n                setStore({ ...store });\r\n            }}\r\n        >{userId}</_UserName>\r\n        <_LoginButton onClick={() => {\r\n            store.system.user = null;\r\n            store.cloud = null;\r\n            localStorage.removeItem(SystemConst.SESSTION_KEY_LOGIN);\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message={'Logout.\\nSee you next time!'}\r\n            />;\r\n            store.system.logoutActions.forEach(func => func());\r\n            setStore({ ...store });\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Logout\r\n        </_LoginButton>\r\n    </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Logo src={logo} />\r\n            <_Menu>\r\n                {authButtonJsx}\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #a6bdc7, #7895b1, #a6bdc7);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    border: 1px solid #7e7e7e;\r\n    box-sizing: border-box;\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #9afff292;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #ff393983;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 180px;\r\n    height: 100%;\r\n    padding: 3px 0;\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n    /** 横向き */\r\n    isLandscape?: boolean;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const isLandscape = props.isLandscape ?? true;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList isLandscape={isLandscape}>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList isLandscape={isLandscape}>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    isLandscape: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isLandscape ? css`\r\n        width: 100px;\r\n        height: 100%;\r\n    ` : css`\r\n        width: 100%;\r\n        height: 100px;\r\n    `}\r\n    margin-right: 5px;\r\n    background-color: #c0d3db;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div<{\r\n    isLandscape: boolean;\r\n}>`\r\n    display: inline-block;\r\n    background-color: #c0d3db;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    ${props => props.isLandscape ? css`\r\n        width: calc(100% - 105px);\r\n        height: 100%;\r\n    ` : css`\r\n        height: calc(100% - 105px);\r\n        width: 100%;\r\n    `}\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    border: 1px solid #8d9aaa7b;\r\n    box-sizing: border-box;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #d5dddf;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #cacecf;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\n\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport Particle from \"../../../graphic/particle\";\r\nimport StoryUtil from \"../util/storyUtil\";\r\nimport BuildUtil from \"../../preview/buildUtil\";\r\n\r\nconst StoryFuseAnalysis = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [divide, setDivide] = useState<FormUtil.CheckableValue>({ value: '20', errors: [] });\r\n    const [peak, setPeak] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n    const [total, setTotal] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n\r\n    const [countList, setCountList] = useState<number[]>([]);\r\n\r\n    const scenarioData = store.storyData as StoryUtil.StoryData;\r\n    const limitFrame = scenarioData.limitFrame;\r\n    const limitParticle = scenarioData.limitParticle;\r\n    const defList = scenarioData.fuseList;\r\n\r\n    const logicData = store.libraryData as LogicUtil.WrapElement;\r\n\r\n    const execute = () => {\r\n        const minFrame = defList[0].frame;\r\n        const divRate = 1 / Number(divide.value);\r\n        const countList: number[] = [];\r\n        let peak = 0;\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            guaranteeFrame: minFrame,\r\n            doIterate: (frame, owner) => {\r\n                const def = defList.find(def => def.frame === frame);\r\n                if (def != undefined) {\r\n                    const seedWrap = LogicElementUtil.findSeedWrap(logicData, def.seedId);\r\n                    const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n                    const getOrigin = () => {\r\n                        const root = logicData.data as LogicUtil.NodeRoot;\r\n                        const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                        return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                    }\r\n                    const getSendingValueMap = () => {\r\n                        const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n                        const valueMap = seedargMng.args.map((wrap, i) => {\r\n                            const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                            return { name: seedarg.name, value: Number(def.values[i]) }\r\n                        });\r\n\r\n                        // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                        const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                        return sendParams.map(item => {\r\n                            const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                            if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                            return { name: item.name, value }\r\n                        });\r\n                    }\r\n\r\n                    owner.push(new Particle.Instance(\r\n                        PreviewUtil.buildLogicProps(owner, getOrigin(), logicData, getSendingValueMap(), [])\r\n                    ));\r\n                }\r\n\r\n                const pastRate = frame / limitFrame;\r\n                const needPoint = (countList.length + 1);\r\n                const curPoint = pastRate / divRate;\r\n                if (curPoint >= needPoint) {\r\n                    countList.push(owner.length);\r\n                }\r\n\r\n                if (owner.length > peak) peak = owner.length;\r\n            },\r\n            doEnd: (frame) => {\r\n                setTotal({ ...total, value: frame.toString() })\r\n            }\r\n        });\r\n        setPeak({ ...total, value: peak.toString() })\r\n        setCountList(countList);\r\n        // console.log(countList);\r\n    };\r\n\r\n    const itemJsxList = useMemo(() => {\r\n        const divRate = 1 / Number(divide.value);\r\n        const rateHeight = divRate / 1;\r\n        return countList.map((count, i) => {\r\n            const rate = count / limitParticle;\r\n            return (\r\n                <_AnalisisItem key={i}\r\n                    rate={rate * 100}\r\n                    height={rateHeight * 100}\r\n                />\r\n            );\r\n        });\r\n    }, [countList]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <FormUtil.BorderPanel\r\n                title=\"Property\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Divide\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isNumber\r\n                                checkable={divide}\r\n                                setCheckable={setDivide}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 5, 200),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Analysis',\r\n                                isEnable: divide.errors.length === 0 && defList.length > 0,\r\n                                callback: execute\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Result\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Peak\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={150}\r\n                                isNumber\r\n                                checkable={peak}\r\n                                isReadOnly\r\n                                setCheckable={setPeak}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"End frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={150}\r\n                                isNumber\r\n                                checkable={total}\r\n                                isReadOnly\r\n                                setCheckable={setTotal}\r\n                            />\r\n                        }\r\n                    />\r\n                    <_AnalisisDiv>\r\n                        {itemJsxList}\r\n                    </_AnalisisDiv>\r\n                </>}\r\n            />\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default StoryFuseAnalysis;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _AnalisisDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #000000d3;\r\n    width: calc(100% - 16px);\r\n    height: 500px;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _AnalisisItem = styled.div<{\r\n    rate: number;\r\n    height: number;\r\n}>`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #ededed77; */\r\n    background: linear-gradient(to bottom, #d1ceda, #b3aec2, #d1ceda);\r\n    width: ${props => props.rate}%;\r\n    height: calc(${props => props.height}% - 1px);\r\n    margin: 1px 0 0 0;\r\n    /* height: 20px; */\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport LogicFormUtil from \"../../factory/util/logicFormUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport StoryUtil from \"../util/storyUtil\";\r\nimport { FuseBean } from \"../storyTab\";\r\n\r\n\r\nconst StoryProperty = (props: {\r\n    newFrame: FormUtil.CheckableValue;\r\n    setNewFrame: (newFrame: FormUtil.CheckableValue) => void;\r\n    curFuse: StoryUtil.Fuse;\r\n    seedList: FuseBean[];\r\n    isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: (frame: number, seedId: string, values: string[]) => void;\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const [seed, setSeed] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const newFrame = props.newFrame;\r\n    const setNewFrame = props.setNewFrame;\r\n    const isInputOK = seed.errors.length === 0 && newFrame.errors.length === 0 && formList.find(form => form.errors.length > 0) == undefined;\r\n\r\n\r\n    const mapping = () => {\r\n        setNewFrame({ ...newFrame, value: props.curFuse.frame.toString() });\r\n        setSeed({ ...seed, value: props.curFuse.seedId.toString() });\r\n        setFormList(props.curFuse.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.curFuse == undefined) return;\r\n        if (props.curFuse.seedId === '') {\r\n            setNewFrame({ ...newFrame, value: '' });\r\n            setSeed({ ...seed, value: '' });\r\n            setFormList([]);\r\n        } else {\r\n            mapping();\r\n        }\r\n    }, [props.curFuse]);\r\n\r\n    const initFormList = (seedId: string) => {\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seedId;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n        }\r\n        setFormList(argumentList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }\r\n\r\n    const propertiesFormJsx = useMemo(() => {\r\n        if (seed.value === '') return <></>;\r\n\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        let presetList: LogicUtil.NodeSampleItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seed.value;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n            formgrpList = activeSeed.formgrps;\r\n            presetList = activeSeed.presets;\r\n        }\r\n        return (<>\r\n            <FormUtil.BorderPanel\r\n                title=\"Preset\"\r\n                innerJsx={<FormUtil.Record\r\n                    jsx={<>\r\n                        <FormUtil.Combobox\r\n                            width={250}\r\n                            checkable={template}\r\n                            setCheckable={setTemplate}\r\n                            headBlank\r\n                            list={presetList.map((sample, i) => {\r\n                                return {\r\n                                    labelText: sample.name,\r\n                                    value: i.toString()\r\n                                }\r\n                            })}\r\n                            isReadOnly={!props.isModify}\r\n                        />\r\n                        <FormUtil.ButtonItem\r\n                            button={{\r\n                                label: 'Apply',\r\n                                isEnable: template.value !== '',\r\n                                callback: () => {\r\n                                    const selectedIndex = Number(template.value);\r\n                                    const values = presetList[selectedIndex].values;\r\n                                    values.forEach((value, i) => {\r\n                                        formList[i].value = value.toString();\r\n                                    });\r\n                                    setFormList(formList.slice());\r\n                                }\r\n                            }}\r\n                        />\r\n                    </>}\r\n                />}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Properties\"\r\n                innerJsx={<>{\r\n                    LogicFormUtil.buildPreviewForms(\r\n                        !props.isModify, argumentList, formgrpList, formList, setFormList\r\n                    )\r\n                }</>}\r\n            />\r\n        </>);\r\n    }, [template, formList, props.isModify]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: props.isModify,\r\n                        callback: () => {\r\n                            props.cancelAction();\r\n                            setTemplate({ ...template, value: '' });\r\n                            mapping();\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !props.isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !props.isModify || isInputOK,\r\n                        callback: () => {\r\n                            props.modifyAction(\r\n                                Number(newFrame.value),\r\n                                seed.value,\r\n                                formList.map(form => form.value)\r\n                            );\r\n                            setTemplate({ ...template, value: '' });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Base\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isReadOnly={!props.isModify}\r\n                                isNumber\r\n                                checkable={newFrame}\r\n                                setCheckable={setNewFrame}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Seed\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                checkable={seed}\r\n                                setCheckable={(checkable) => {\r\n                                    initFormList(checkable.value);\r\n                                    setSeed({ ...checkable });\r\n                                }}\r\n                                list={props.seedList.map(seed => {\r\n                                    return { value: seed.name, labelText: seed.disp ?? seed.name }\r\n                                })}\r\n                                headBlank\r\n                                width={250}\r\n                                isReadOnly={!props.isModify}\r\n                                validates={\r\n                                    [\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n            {propertiesFormJsx}\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default StoryProperty;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #dbebd6;\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport StoryUtil from \"../util/storyUtil\";\r\n\r\n\r\nconst StoryEnvironment = (props: {\r\n    isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: () => void;\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [particle, setParticle] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const data = store.storyData as StoryUtil.StoryData;\r\n\r\n    const mapping = () => {\r\n        setFrame({ ...frame, value: data.limitFrame.toString() });\r\n        setParticle({ ...particle, value: data.limitParticle.toString() });\r\n    }\r\n    useEffect(() => {\r\n        mapping();\r\n    }, []);\r\n\r\n    const isInputOK = particle.errors.length === 0 && frame.errors.length === 0;\r\n\r\n    const maxLimit = data.fuseList.map(def => def.frame).reduce((prev, cur) => {\r\n        return prev > cur ? prev : cur;\r\n    }, 0);\r\n\r\n    return (<_Wrap>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Cancel',\r\n                    isEnable: props.isModify,\r\n                    callback: () => {\r\n                        mapping();\r\n                        props.cancelAction();\r\n                    }\r\n                },\r\n                {\r\n                    label: !props.isModify ? 'Modify' : 'Regist',\r\n                    isEnable: !props.isModify || isInputOK,\r\n                    callback: () => {\r\n                        data.limitFrame = Number(frame.value);\r\n                        data.limitParticle = Number(particle.value);\r\n                        setStore({ ...store });\r\n                        props.modifyAction();\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Limit\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!props.isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkNumberRange(value, maxLimit, 1000),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Particle\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!props.isModify}\r\n                            isNumber\r\n                            checkable={particle}\r\n                            setCheckable={setParticle}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkNumberRange(value, 100, 5000),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </_Wrap>)\r\n}\r\n\r\nexport default StoryEnvironment;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import { useContext, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { JsxEmit } from \"typescript\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport { FuseBean } from \"./storyTab\";\r\nimport StoryUtil from \"./util/storyUtil\";\r\n\r\nconst ITEM_WIDTH = 10;\r\nconst DIV_CNT = 5;\r\n\r\nconst TimelineFrame = (props: {\r\n    newFrameValue: number;\r\n    setNewFrameValue: (num: number) => void;\r\n    isModify: boolean;\r\n    focus: number;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const scenarioData = store.storyData as StoryUtil.StoryData;\r\n    const fuseList = scenarioData.fuseList;\r\n    const cacheList = store.fuseCacheList;\r\n    const limitFrame = scenarioData.limitFrame;\r\n\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const fusePosJsxList = useMemo(() => {\r\n        if(cacheList.length !== fuseList.length) return [];\r\n        const newFrameRate = props.newFrameValue / limitFrame;\r\n        return fuseList.map((fuse, i) => {\r\n            const rate = props.isModify && props.focus === i ? newFrameRate : fuse.frame / limitFrame;\r\n            const x = rate * 100;\r\n            const y = 5 + i * (ITEM_WIDTH + 3);\r\n            const cache = store.fuseCacheList.find(cache => cache.seq === fuse.seq) as StoryUtil.Cache;\r\n            const sus = cache.useFrame / limitFrame * 100;\r\n            return (<div key={i}>\r\n                {props.isModify && props.focus === i ? (\r\n                    <_Line x={x} />\r\n                ) : <></>}\r\n                <_Item\r\n                    x={x} y={y}\r\n                    isFocus={i === props.focus}\r\n                />\r\n                <_Sustain\r\n                    x={x}\r\n                    y={y}\r\n                    sus={sus}\r\n                />\r\n            </div>);\r\n        });\r\n    }, [limitFrame, props.focus, fuseList, props.isModify, props.newFrameValue, cacheList]);\r\n\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i < DIV_CNT + 1; i++) {\r\n            const rate = i / DIV_CNT;\r\n            const value = Math.floor(limitFrame * rate);\r\n            jsxList.push(\r\n                <_Memori\r\n                    key={i}\r\n                    x={rate * 100}\r\n                >{value}</_Memori>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [limitFrame]);\r\n\r\n    return (<>\r\n        <_MeasureDiv>\r\n            {memoriJsxList}\r\n        </_MeasureDiv>\r\n        <_Wrap\r\n            ref={ref}\r\n            isModify={props.isModify}\r\n            onClick={(e) => {\r\n                if (!props.isModify) return;\r\n                if (ref != null) {\r\n                    const dom = ref.current as HTMLDivElement;\r\n                    const rect = dom.getBoundingClientRect();\r\n                    const pos = e.clientX - rect.x;\r\n                    const rate = pos / rect.width;\r\n                    const newFrame = Math.floor(limitFrame * rate);\r\n                    props.setNewFrameValue(newFrame);\r\n                }\r\n            }}>\r\n            {fusePosJsxList}\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default TimelineFrame;\r\n\r\nconst MEASURE_WIDTH = 40;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #f2d9341a;\r\n    /* border-bottom: 3px solid #fff; */\r\n    box-sizing: border-box;\r\n    width: calc(100% - 36px);\r\n    height: ${MEASURE_WIDTH}px;\r\n    margin: 2px 0 0 18px;\r\n`;\r\nconst _Memori = styled.div<{\r\n    x: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* background-color: #ffffff31; */\r\n    width: 30px;\r\n    height: 20px;\r\n    left: calc(${props => props.x}% - 18px);\r\n    bottom: 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Wrap = styled.div<{\r\n    isModify: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b3d0b937;\r\n    /* border: 1px solid #ffffff4c; */\r\n    ${props => !props.isModify ? '' : css`\r\n        background-color: #ff000049;\r\n    `}\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 36px);\r\n    height: calc(100% - ${MEASURE_WIDTH + 8}px);\r\n    margin: 2px 0 0 18px;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #ffffff8d;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #ffb222;\r\n    `}\r\n    /* border: solid 1px #000000; */\r\n    border-radius: ${ITEM_WIDTH}px;\r\n    width: ${ITEM_WIDTH}px;\r\n    height: ${ITEM_WIDTH}px;\r\n    left: calc(${props => props.x}% - ${ITEM_WIDTH / 2}px);\r\n    top: ${props => props.y}px;\r\n`;\r\nconst _Sustain = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    sus: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #bfffb324;\r\n    /* border: solid 1px #000000; */\r\n    /* border-radius: ${ITEM_WIDTH}px; */\r\n    width: ${props => props.sus}%;\r\n    height: ${ITEM_WIDTH / 2}px;\r\n    left: calc(${props => props.x}%);\r\n    top: calc(${props => props.y}px + ${ITEM_WIDTH / 4}px);\r\n`;\r\nconst _Line = styled.div<{\r\n    x: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #ff0000f0;\r\n    left: ${props => props.x}%;\r\n    top: 0;\r\n    width: 1px;\r\n    height: 100%;\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryFuseAnalysis from \"./tab/storyFuseAnalysis\";\r\nimport StoryProperty from \"./tab/storyProperty\";\r\nimport StoryEnvironment from \"./tab/storyEnvironment\";\r\nimport TimelineFrame from \"./timelineFrame\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport PreviewUtil from \"../preview/previewUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport PreviewLauncherFrame from \"../preview/previewLauncherFrame\";\r\nimport StoryUtil from \"./util/storyUtil\";\r\nimport BuildUtil from \"../preview/buildUtil\";\r\n\r\nexport type FuseBean = {\r\n    name: string;\r\n    disp?: string;\r\n    args: LogicUtil.NodeSeedArgItem[];\r\n    formgrps: LogicUtil.NodeFromGrpItem[];\r\n    presets: LogicUtil.NodeSampleItem[];\r\n};\r\n\r\nconst StoryTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const [newFrame, setNewFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [defList, setDefList] = useState<LaunchDef[]>([]);\r\n    const [isFuseEdit, setFuseEdit] = useState<boolean>(false);\r\n    const [isEnvEdit, setEnvEdit] = useState<boolean>(false);\r\n    const [tabActiveIndex, setTabActiveIndex] = useState<number>(0);\r\n    const [focus, setFocus] = useState<number>(-1);\r\n\r\n    const fuseList = storyData.fuseList;\r\n\r\n    const setFuseList = (fuseList: StoryUtil.Fuse[]) => {\r\n        storyData.fuseList = fuseList;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const seedList: FuseBean[] = useMemo(() => {\r\n        if (store.libraryData == null) return [];\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        const seedWrapList = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        return seedWrapList.map(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n\r\n            // 引数リストを取得\r\n            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const args = argMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n\r\n            // フォームグループリストを取得\r\n            const groupMng = LogicElementUtil.getInnerWrap(wrap, 'interface-mng', 'formgrp-mng');\r\n            let formgrps: LogicUtil.NodeFromGrpItem[] = [];\r\n            if (groupMng != null) {\r\n                formgrps = (groupMng.data as LogicUtil.NodeFromgrpManager).defines.map(wrap => wrap.data as LogicUtil.NodeFromGrpItem);\r\n            }\r\n\r\n            // プリセットリストを取得\r\n            const sampleMng = LogicElementUtil.getInnerWrap(wrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n            const presets = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n            return {\r\n                name: seed.name,\r\n                disp: seed.disp,\r\n                args, formgrps, presets\r\n            }\r\n        });\r\n    }, [store.libraryData]);\r\n\r\n    useEffect(() => {\r\n        if (storyData.fuseList.length > 0) {\r\n            const scenarioCacheList: StoryUtil.Cache[] = [];\r\n            storyData.fuseList.forEach((fuse) => {\r\n                const newCache: StoryUtil.Cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n                updateCache(fuse, newCache);\r\n                scenarioCacheList.push(newCache);\r\n            });\r\n            store.fuseCacheList = scenarioCacheList;\r\n            setStore({ ...store });\r\n        }\r\n    }, [storyData]);\r\n\r\n    const createSeq = () => {\r\n        return fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    const add = () => {\r\n        const seq = createSeq();\r\n        fuseList.push({ seq, frame: 0, seedId: '', values: [] });\r\n        setFuseList(fuseList.slice());\r\n        setFocus(fuseList.length - 1);\r\n        store.fuseCacheList.push({ seq, thumbList: [], useFrame: 0 });\r\n        setTabActiveIndex(2);\r\n        setFuseEdit(true);\r\n    }\r\n\r\n    const fuseJsxList = useMemo(() => {\r\n        return fuseList.map((fuse, i) => {\r\n\r\n            const cache = store.fuseCacheList.find(cache => cache.seq === fuse.seq);\r\n\r\n            let thumbJsx: JSX.Element[] = [];\r\n            if (cache != undefined) {\r\n                thumbJsx = cache.thumbList.slice(0, 3).map((thumb, j) => {\r\n                    const imgJsx = thumb == undefined ? <></> : <_IMG src={thumb.url} />;\r\n                    return (\r\n                        <_SampleDiv key={j}>-\r\n                            <_SampleName>{thumb.name}</_SampleName>\r\n                            <_CanvasDiv>\r\n                                {imgJsx}\r\n                            </_CanvasDiv>\r\n                        </_SampleDiv>\r\n                    );\r\n                });\r\n            };\r\n            return (\r\n                <_ItemDiv key={i}\r\n                    isEnable={!isFuseEdit || focus === i}\r\n                >\r\n                    <_ItemFrame isFocus={i === focus}\r\n                        onClick={() => {\r\n                            setFocus(i);\r\n                        }}\r\n                    >\r\n                        {fuse.seedId === '' ? (\r\n                            <_PropRecord>Creating...</_PropRecord>\r\n                        ) : (<>\r\n                            <_FrameRecord>{fuse.frame}</_FrameRecord>\r\n                            {/* <_SeedRecord>{def.seedName}: {def.seq}</_SeedRecord> */}\r\n                            <_SeedRecord>{fuse.seedId}</_SeedRecord>\r\n                            <_ThumbFrame>\r\n                                {thumbJsx}\r\n                            </_ThumbFrame>\r\n                            {fuse.values.map((val, j) => {\r\n                                const seedBean = seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n                                const name = seedBean.args[j].name;\r\n                                return (\r\n                                    <_PropRecord key={j}><_Title>{name}: </_Title>{val}</_PropRecord>\r\n                                );\r\n                            })}\r\n                        </>)}\r\n                    </_ItemFrame>\r\n                </_ItemDiv>\r\n            );\r\n        });\r\n    }, [fuseList, focus, isFuseEdit, store.fuseCacheList]);\r\n\r\n    /**\r\n     * プレビューオールダイアログを表示する\r\n     */\r\n    const openPreviewAllDialog = () => {\r\n        const minFrame = fuseList[0].frame;\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        const sceens: string[] = [];\r\n        let useFrame: number = 0;\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            guaranteeFrame: minFrame,\r\n            doIterate: (frame, owner) => {\r\n\r\n                fuseList.some(def => {\r\n                    if (def.frame === frame) {\r\n                        LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                    } else if (def.frame > frame) return 1;\r\n                });\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                }));\r\n            },\r\n            doEnd: (frame) => {\r\n                useFrame = frame;\r\n            }\r\n        });\r\n        store.system.dialog = (\r\n            <PreviewLauncherFrame.Component\r\n                sceens={sceens}\r\n                frameCnt={useFrame}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * プレビューソロダイアログを表示する\r\n     */\r\n    const openPreviewSoloDialog = () => {\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        const sceens: string[] = [];\r\n        let useFrame: number = 0;\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            doIterate: (frame, owner) => {\r\n\r\n                const def = fuseList[focus];\r\n                if (frame === 0) {\r\n                    LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                }\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                }));\r\n            },\r\n            doEnd: (frame) => {\r\n                useFrame = frame;\r\n            }\r\n        });\r\n        store.system.dialog = (\r\n            <PreviewLauncherFrame.Component\r\n                sceens={sceens}\r\n                frameCnt={useFrame}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const updateCache = (fuse: StoryUtil.Fuse, cache: StoryUtil.Cache) => {\r\n\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        cache.thumbList = [];\r\n        cache.useFrame = 0;\r\n        const seedProps = LogicElementUtil.getSeedProperties(logicData, fuse.seedId);\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            doIterate: (frame, owner) => {\r\n                if (frame === 0) {\r\n                    LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                }\r\n\r\n                const thumb = seedProps.thumbnailList.find(thumb => thumb.frame === frame);\r\n                if (thumb != undefined) {\r\n                    const url = CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    });\r\n                    cache.thumbList.push({ name: thumb.name, url });\r\n                }\r\n            },\r\n            doEnd: (frame) => {\r\n                cache.useFrame = frame;\r\n            }\r\n        });\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const isCreate = fuseList.length === 0 ? false : fuseList[fuseList.length - 1].seedId === '';\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n        >\r\n            <_ListDiv>\r\n                <_ListHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview All',\r\n                                isEnable: !isFuseEdit,\r\n                                callback: openPreviewAllDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_ListHead>\r\n                <_ListHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Add',\r\n                                isEnable: !isFuseEdit,\r\n                                callback: add\r\n                            },\r\n                            {\r\n                                label: 'Delete',\r\n                                isEnable: !isFuseEdit && focus != -1,\r\n                                callback: () => {\r\n                                    fuseList.splice(focus, 1);\r\n                                    setFuseList(fuseList.slice());\r\n                                    if (focus > 0) {\r\n                                        setFocus(focus - 1);\r\n                                    } else if (focus === 0 && fuseList.length === 0) {\r\n                                        setFocus(-1);\r\n                                        setTabActiveIndex(0);\r\n                                    }\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Replicate',\r\n                                isEnable: !isFuseEdit && focus != -1,\r\n                                callback: () => {\r\n                                    const cloneFuse = JSON.parse(JSON.stringify(fuseList[focus])) as StoryUtil.Fuse;\r\n                                    const newSeq = createSeq();\r\n                                    cloneFuse.seq = newSeq;\r\n                                    fuseList.splice(focus, 0, cloneFuse);\r\n                                    setFuseList(fuseList.slice());\r\n                                    setFocus(focus + 1);\r\n\r\n                                    // const baseCache = store.launchCacheList.find(cache => cache.seq === defList[focus].seq) as Cache;\r\n                                    // console.log(baseCache);\r\n                                    // const cloneCache = JSON.parse(JSON.stringify(baseCache)) as Cache;\r\n                                    // cloneCache.seq = newSeq;\r\n                                    const newCache: StoryUtil.Cache = { seq: newSeq, thumbList: [], useFrame: 0 };\r\n                                    updateCache(cloneFuse, newCache);\r\n                                    store.fuseCacheList.push(newCache);\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Preview Solo',\r\n                                isEnable: !isFuseEdit && focus != -1,\r\n                                callback: openPreviewSoloDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_ListHead>\r\n                <_ListBody>\r\n                    <_Timeline><TimelineFrame\r\n                        newFrameValue={Number(newFrame.value)}\r\n                        setNewFrameValue={(num: number) => {\r\n                            setNewFrame({ ...newFrame, value: num.toString() })\r\n                        }}\r\n                        isModify={isFuseEdit}\r\n                        focus={focus}\r\n                        seedList={seedList}\r\n                    /></_Timeline>\r\n                    <_ListMain>\r\n                        {fuseJsxList}\r\n                    </_ListMain>\r\n                </_ListBody>\r\n            </_ListDiv>\r\n            <_RightDiv>\r\n                <_RightInner>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            {\r\n                                name: 'Environment', enable: !isFuseEdit, cont: <StoryEnvironment\r\n                                    isModify={isEnvEdit}\r\n                                    cancelAction={() => {\r\n                                        setEnvEdit(false);\r\n                                    }}\r\n                                    modifyAction={() => {\r\n                                        if (!isEnvEdit) {\r\n                                            setEnvEdit(true);\r\n                                        } else {\r\n                                            setEnvEdit(false);\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            },\r\n                            { name: 'Analysis', enable: !isFuseEdit && !isEnvEdit, cont: <StoryFuseAnalysis /> },\r\n                            {\r\n                                name: 'Property', enable: !isEnvEdit && focus != -1, cont: <StoryProperty\r\n                                    newFrame={newFrame}\r\n                                    setNewFrame={setNewFrame}\r\n                                    curFuse={fuseList[focus]}\r\n                                    seedList={seedList}\r\n                                    isModify={isFuseEdit}\r\n                                    cancelAction={() => {\r\n                                        setFuseEdit(false);\r\n                                        if (isCreate) {\r\n                                            fuseList.splice(fuseList.length - 1, 1);\r\n                                            setFuseList(fuseList.slice());\r\n                                            setFocus(focus - 1);\r\n                                            if (fuseList.length === 0) {\r\n                                                setTabActiveIndex(0);\r\n                                            }\r\n                                        }\r\n                                    }}\r\n                                    modifyAction={(frame: number, seedId: string, values: string[]) => {\r\n                                        if (!isFuseEdit) {\r\n                                            setFuseEdit(true);\r\n                                        } else {\r\n                                            const fuse = fuseList[focus];\r\n                                            fuse.frame = frame;\r\n                                            fuse.seedId = seedId;\r\n                                            fuse.values = values;\r\n                                            const seq = fuse.seq;\r\n                                            const cache = store.fuseCacheList.find(cache => cache.seq === seq) as StoryUtil.Cache;\r\n                                            updateCache(fuse, cache);\r\n                                            fuseList.sort((a, b) => {\r\n                                                return a.frame - b.frame;\r\n                                            });\r\n                                            setFuseList(fuseList.slice());\r\n                                            setFocus(fuseList.findIndex(def => def.seq === seq));\r\n                                            setFuseEdit(false);\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            }\r\n                        ]}\r\n                        selectTabIndex={setTabActiveIndex}\r\n                        activeNo={tabActiveIndex}\r\n                    />\r\n                </_RightInner>\r\n            </_RightDiv>\r\n            {/* <_Blind isVisible={isBackingWnd}>\r\n                    <_Contents>{!isBackingWnd ? <></> : <BackingEditorFrame />}</_Contents>\r\n                </_Blind> */}\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default StoryTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #1e1c22;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _ListDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #653fd6; */\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst LIST_HEAD = 40;\r\nconst TIMELINE_WIDTH = 240;\r\n\r\nconst _ListHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d8;\r\n    width: 100%;\r\n    height: ${LIST_HEAD}px;\r\n`;\r\n\r\nconst _ListBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: calc(100% - ${LIST_HEAD * 2}px);\r\n`;\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #00071b;\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: ${TIMELINE_WIDTH}px;\r\n`;\r\nconst _ListMain = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #c551b6; */\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: calc(100% - ${TIMELINE_WIDTH}px);\r\n    overflow-x: auto;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _RightDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c1c0c4;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\nconst _RightInner = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n`;\r\n\r\nconst _TabContWrap = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 630px;\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    /* opacity: 0.9; */\r\n    overflow: hidden;\r\n`;\r\n\r\n\r\nconst _ItemDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    background: linear-gradient(to right, #3a383d, #8d8999, #3a383d);\r\n    vertical-align: top;\r\n    width: 220px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n    background: linear-gradient(to right, #66626b, #b7b2c7, #66626b);\r\n    }\r\n`;\r\n\r\nconst _ItemFrame = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #8997bd29;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #d7eb7d83;\r\n    `}\r\n    border: 1px solid #2c3577;\r\n    border-radius: 2px;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _PropRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    /* margin-top: 1px; */\r\n    height: 24px;\r\n    /* background: linear-gradient(to bottom, #aaaaaa89, #e1e1e18a, #aaaaaa89); */\r\n    /* font-size: 20px; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #555555;\r\n    font-style: italic;\r\n    line-height: 22px;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Title = styled.span`\r\n    color: #f00;\r\n`;\r\n\r\n\r\nconst _FrameRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    height: 35px;\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    color: #132693;\r\n    font-style: italic;\r\n    line-height: 34px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\nconst _SeedRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    height: 35px;\r\n    font-size: 26px;\r\n    font-style: italic;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    line-height: 34px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ThumbFrame = styled.div<{}>`\r\n    display: inline-block;\r\n    /* background-color: #4b09ff; */\r\n    width: 100%;\r\n`;\r\nconst WND_SIZE = 65;\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport { ProjectType, ProjectTypes } from \"../../../redux/store/store\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\n\r\nnamespace NewProjectDialog {\r\n\r\n    type CloudLibInfo = {\r\n        seq: number;\r\n        name: string;\r\n        ownerId: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    type LocalLibInfo = {\r\n        fileName: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const Component = (props: {\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [type, setType] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const [selectedLib, setSelectedLib] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [localLib, setLocalLib] = useState<null | LocalLibInfo>(null);\r\n\r\n        const [cloudLibs, setCloudLibs] = useState<null | CloudLibInfo[]>(null);\r\n\r\n        const width = 500;\r\n        const height = 340;\r\n\r\n        // useEffect(() => {\r\n        //     setType({ ...type });\r\n        // }, []);\r\n\r\n        const getStoryLib = () => {\r\n            let storyLib: LogicUtil.WrapElement | null = null;\r\n            if (cloudLibs != null) {\r\n                const lib = cloudLibs.find(lib => lib.seq === Number(selectedLib.value));\r\n                if (lib != undefined) {\r\n                    storyLib = lib.rootData;\r\n                }\r\n            } else if (localLib != null) {\r\n                storyLib = localLib.rootData;\r\n            }\r\n            return storyLib;\r\n        }\r\n\r\n        const usingHash = useMemo(() => {\r\n            let hash = '-';\r\n            const lib = getStoryLib();\r\n            if (lib != null) {\r\n                hash = DataUtil.getSHA256Hash(JSON.stringify(lib));\r\n            }\r\n            return hash;\r\n        }, [selectedLib, localLib]);\r\n\r\n        const isCreateEnabled = () => {\r\n            if (type.value === '') return false;\r\n            if ((type.value as ProjectType) === 'story') {\r\n                return usingHash !== '-';\r\n            }\r\n            return true;\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Create',\r\n                isEnable: isCreateEnabled(),\r\n                callback: () => {\r\n                    const projectType = type.value as ProjectType;\r\n                    if (projectType as ProjectType === 'library') {\r\n                        store.libraryData = LogicElementUtil.getInitialData();\r\n                    } else {\r\n                        store.libraryData = getStoryLib();\r\n                        store.storyData = {\r\n                            limitFrame: 300,\r\n                            limitParticle: 3000,\r\n                            fuseList: []\r\n                        };\r\n                    }\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, select project type!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={type}\r\n                            width={178}\r\n                            setCheckable={(checkable => {\r\n                                setType(checkable);\r\n                                if (checkable.value as ProjectType !== 'story') {\r\n                                    setCloudLibs(null);\r\n                                    setLocalLib(null);\r\n                                    setSelectedLib({ value: '', errors: [] });\r\n                                }\r\n                            })}\r\n                            list={ProjectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.BorderPanel\r\n                    title=\"Story\"\r\n                    isEnable={type.value as ProjectType === 'story'}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Source\"\r\n                            jsx={<>\r\n                                <FormUtil.ButtonItem\r\n                                    button={{\r\n                                        label: 'Cloud',\r\n                                        width: 120,\r\n                                        callback: () => {\r\n                                            findAllReleaseProjectList().then(resList => {\r\n                                                setCloudLibs(resList.map(res => {\r\n                                                    return {\r\n                                                        name: res.name,\r\n                                                        ownerId: res.owner,\r\n                                                        seq: res.seq,\r\n                                                        rootData: JSON.parse(DataUtil.unZip(res.source))\r\n                                                    }\r\n                                                }));\r\n                                                setLocalLib(null);\r\n                                            });\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                <FormUtil.ButtonItem\r\n                                    button={{\r\n                                        label: 'Local',\r\n                                        width: 120,\r\n                                        callback: () => {\r\n                                            (async () => {\r\n                                                const [fileHandle] = await window.showOpenFilePicker();\r\n                                                const file = await fileHandle.getFile();\r\n                                                const fileContents = await file.text();\r\n                                                const text = DataUtil.unZip(fileContents);\r\n                                                setLocalLib({\r\n                                                    fileName: file.name,\r\n                                                    rootData: JSON.parse(text)\r\n                                                });\r\n                                                setCloudLibs(null);\r\n                                                setSelectedLib({ value: '', errors: [] });\r\n                                            })();\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </>}\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Cloud\"\r\n                            isEnabled={cloudLibs != null}\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    marginLeft={2}\r\n                                    checkable={selectedLib}\r\n                                    width={278}\r\n                                    setCheckable={setSelectedLib}\r\n                                    list={(cloudLibs ?? []).map((item) => {\r\n                                        // const disp = `${item.ownerId}: ${item.name}`;\r\n                                        return { value: item.seq.toString(), labelText: item.name };\r\n                                    })}\r\n                                    headBlank\r\n                                    validates={[\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Local\"\r\n                            isEnabled={localLib != null}\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={localLib == null ? '' : localLib.fileName}\r\n                                    isRecordItem\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Hash\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={usingHash}\r\n                                    isRecordItem\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewProjectDialog;\r\n\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport { ProjectType, ProjectTypes } from \"../../../redux/store/store\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { AiOutlineEnter } from \"react-icons/ai\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\n\r\nnamespace NewProjectDialogStoryOnly {\r\n\r\n    type CloudLibInfo = {\r\n        seq: number;\r\n        name: string;\r\n        ownerId: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const Component = (props: {\r\n        extendAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [selectedType, setSelectedType] = useState<FormUtil.CheckableValue>({ value: 'official', errors: [] });\r\n        const [selectedLib, setSelectedLib] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [cloudLibs, setCloudLibs] = useState<null | CloudLibInfo[]>(null);\r\n\r\n        const width = 500;\r\n        const height = 210;\r\n\r\n        useEffect(() => {\r\n            findAllReleaseProjectList().then(resList => {\r\n                setCloudLibs(resList.map(res => {\r\n                    return {\r\n                        name: res.name,\r\n                        ownerId: res.owner,\r\n                        seq: res.seq,\r\n                        rootData: JSON.parse(DataUtil.unZip(res.source))\r\n                    }\r\n                }));\r\n            });\r\n        }, []);\r\n\r\n        const getStoryLib = () => {\r\n            let storyLib: LogicUtil.WrapElement | null = null;\r\n            if (cloudLibs != null) {\r\n                const lib = cloudLibs.find(lib => lib.seq === Number(selectedLib.value));\r\n                if (lib != undefined) {\r\n                    storyLib = lib.rootData;\r\n                }\r\n            }\r\n            return storyLib;\r\n        }\r\n\r\n        const usingHash = useMemo(() => {\r\n            let hash = '-';\r\n            const lib = getStoryLib();\r\n            if (lib != null) {\r\n                hash = DataUtil.getSHA256Hash(JSON.stringify(lib));\r\n            }\r\n            return hash;\r\n        }, [selectedLib]);\r\n\r\n        const isCreateEnabled = () => {\r\n            return usingHash !== '-';\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                icon: <MdCancelPresentation />,\r\n                width: 120,\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Create',\r\n                icon: <AiOutlineEnter />,\r\n                width: 120,\r\n                isEnable: isCreateEnabled(),\r\n                callback: () => {\r\n                    store.libraryData = getStoryLib();\r\n                    store.storyData = {\r\n                        limitFrame: 300,\r\n                        limitParticle: 3000,\r\n                        fuseList: []\r\n                    };\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    if (props.extendAction != undefined) props.extendAction();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, select library!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    isEnabled={true}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={selectedType}\r\n                            width={278}\r\n                            setCheckable={setSelectedType}\r\n                            list={['official','original'].map((item) => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Library\"\r\n                    isEnabled={cloudLibs != null}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={selectedLib}\r\n                            width={278}\r\n                            setCheckable={setSelectedLib}\r\n                            list={(cloudLibs ?? []).map((item) => {\r\n                                // const disp = `${item.ownerId}: ${item.name}`;\r\n                                return { value: item.seq.toString(), labelText: item.name };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.FormRecord\r\n                    titleLabel=\"Hash\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            value={usingHash}\r\n                            isRecordItem\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewProjectDialogStoryOnly;\r\n\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\n\r\nimport { AiOutlineInstagram, AiOutlineTwitter, AiOutlineMail, AiOutlineFacebook } from \"react-icons/ai\";\r\nimport { BsLine } from \"react-icons/bs\";\r\n\r\nimport {\r\n    EmailShareButton,\r\n    FacebookShareButton,\r\n    HatenaShareButton,\r\n    InstapaperShareButton,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    LivejournalShareButton,\r\n    MailruShareButton,\r\n    OKShareButton,\r\n    PinterestShareButton,\r\n    PocketShareButton,\r\n    RedditShareButton,\r\n    TelegramShareButton,\r\n    TumblrShareButton,\r\n    TwitterShareButton,\r\n    ViberShareButton,\r\n    VKShareButton,\r\n    WhatsappShareButton,\r\n    WorkplaceShareButton\r\n} from \"react-share\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\n\r\n\r\nnamespace ShareDialog {\r\n\r\n    export const Component = (props: {\r\n        hash: string;\r\n    }) => {\r\n        const width = 500;\r\n        const height = 326;\r\n\r\n        const getInitialText = () => {\r\n            let str = '';\r\n            str += 'I created digital art with the Pixel Flare!\\n\\n';\r\n            return str;\r\n        }\r\n\r\n        const getURL = () => `${DataUtil.APP_SERVER_DOMAIN}/#/story?v=${props.hash}`;\r\n\r\n        const [text, setText] = useState<FormUtil.CheckableValue>({ value: getInitialText(), errors: [] });\r\n\r\n        const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Share your digital art!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <_TextAreaDiv><FormUtil.TextArea\r\n                    checkable={text}\r\n                    setCheckable={setText}\r\n                /></_TextAreaDiv>\r\n                <_UrlDiv value={getURL()} readOnly/>\r\n                <_Record>\r\n                    <InstapaperShareButton\r\n                        url={getURL()}\r\n                        title={text.value}\r\n                        children={<_SnsIconFrame><AiOutlineInstagram /></_SnsIconFrame>}\r\n                    />\r\n                    <TwitterShareButton\r\n                        url={getURL()}\r\n                        title={text.value}\r\n                        children={<_SnsIconFrame><AiOutlineTwitter /></_SnsIconFrame>}\r\n                    />\r\n                    <MailruShareButton\r\n                        url={getURL()}\r\n                        title={text.value}\r\n                        children={<_SnsIconFrame><AiOutlineMail /></_SnsIconFrame>}\r\n                    />\r\n                    <FacebookShareButton\r\n                        url={getURL()}\r\n                        title={text.value}\r\n                        children={<_SnsIconFrame><AiOutlineFacebook /></_SnsIconFrame>}\r\n                    />\r\n                    <LineShareButton\r\n                        url={getURL()}\r\n                        title={text.value}\r\n                        about=\"aabb\"\r\n                        children={<_SnsIconFrame><BsLine /></_SnsIconFrame>}\r\n                    />\r\n                </_Record>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShareDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    margin: 8px 0 0 0;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextAreaDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 4px;\r\n    width: calc(100% - 8px);\r\n    height: 120px;\r\n    margin: 10px 0 0 4px;\r\n    border: 2px solid #3d3d3d;\r\n    box-sizing: border-box;\r\n`;\r\nconst _UrlDiv = styled.textarea<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 4px;\r\n    width: calc(100% - 8px);\r\n    height: 60px;\r\n    margin: 4px 0 0 4px;\r\n    border: 1px solid #3d3d3d;\r\n   background-color: #ebf5f557;\r\n   /* background-color: transparent; */\r\n   outline: none;\r\n   font-size: 18px;\r\n   color: #0041a3;\r\n   resize: none;\r\n   box-sizing: border-box;\r\n`;\r\n\r\nconst _SnsIconFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 8px;\r\n    width: 60px;\r\n    height: 60px;\r\n    border: 2px solid #555555;\r\n    background-color: #f0f0f0e1;\r\n    box-sizing: border-box;\r\n    font-size: 50px;\r\n    color: #666;\r\n    margin: 0 2px;\r\n`;","import assert from \"assert\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryUtil from \"../launcher/util/storyUtil\";\r\nimport NameDefDialog from \"./nameDefDialog\";\r\nimport NewProjectDialog from \"./newProjectDialog\";\r\nimport NewProjectDialogStoryOnly from \"./newProjectDialogStoryOnly\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n    const listItemJsx = store.cloud == null ? [] : store.cloud.projects.map((project, i) => {\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    setFcsListIdx(i);\r\n                    console.log(DataUtil.getHashedFromProjectSeq(project.seq));\r\n                }}\r\n                onContextMenu={() => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={DataUtil.getDirectUrl(project.type, project.seq)}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }}\r\n            >\r\n                <_Status type={project.type}>[{project.type}] </_Status>\r\n                <_Name>{project.name}</_Name>\r\n                {/* <_Date> -{item.lastmod}</_Date> */}\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    const getProjectType = () => {\r\n        let str = '-';\r\n        if (store.libraryData != null) str = 'library';\r\n        if (store.storyData != null) str = 'story';\r\n        return str;\r\n    }\r\n\r\n    const hasData = store.libraryData != null;\r\n    const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n    useEffect(() => {\r\n        if (store.cloud == null) {\r\n            setFcsListIdx(-1);\r\n        }\r\n    }, [store.cloud]);\r\n\r\n    const [elementSize, developCnt, privateCnt, releaseCnt, logicCnt, fuseCnt] = useMemo(() => {\r\n        if (store.libraryData == null) return [0, 0, 0, 0, 0, 0];\r\n        let size = 0;\r\n        const incrRec = (wrap: LogicUtil.WrapElement) => {\r\n            size++;\r\n            const listName = LogicElementUtil.getListParamName(wrap.type);\r\n            if (listName != null) {\r\n                const list = wrap.data[listName] as LogicUtil.WrapElement[];\r\n                list.forEach(wrap => incrRec(wrap));\r\n            }\r\n        }\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        incrRec(root.logicMng);\r\n        incrRec(root.seedMng);\r\n\r\n        let developCnt = 0;\r\n        let privateCnt = 0;\r\n        let releaseCnt = 0;\r\n        let fuseCnt = 0;\r\n        const seedMng = root.seedMng.data as LogicUtil.NodeSeedManager;\r\n        seedMng.defs.forEach(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n            switch (seed.permit) {\r\n                case 'develop': developCnt++; break;\r\n                case 'private': privateCnt++; break;\r\n                case 'release': releaseCnt++; break;\r\n            }\r\n        });\r\n\r\n        const logicMng = root.logicMng.data as LogicUtil.NodeLogicManager;\r\n\r\n        if (store.storyData != null) {\r\n            fuseCnt = store.storyData.fuseList.length;\r\n        }\r\n        return [size, developCnt, privateCnt, releaseCnt, logicMng.defs.length, fuseCnt];\r\n    }, [store.libraryData]);\r\n\r\n    \r\n    const getData = (type: ProjectType) => {\r\n        switch (type) {\r\n            case 'library': {\r\n                return store.libraryData;\r\n            }\r\n            case 'story': {\r\n                const data: StoryUtil.ScenarioFileProps = {\r\n                    libraryData: store.libraryData as LogicUtil.WrapElement,\r\n                    scenarioData: store.storyData as StoryUtil.StoryData\r\n                };\r\n                return data;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを新規アップロードする\r\n     */\r\n    const uploadCloud = () => {\r\n        const type = getProjectType() as ProjectType;\r\n        const source = DataUtil.gZip(JSON.stringify(getData(type)));\r\n        store.system.dialog = <NameDefDialog.Component\r\n            targetSeq={-1}\r\n            type={type}\r\n            source={source}\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを上書き更新する\r\n     */\r\n    const overwriteCloudFile = () => {\r\n        const type = getProjectType() as ProjectType;\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.gZip(JSON.stringify(getData(type)));\r\n        updateProjectSource(curPrj.seq, getProjectType(), source).then(() => {\r\n            curPrj.source = source;\r\n            curPrj.type = type;\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Update project succesful!\"\r\n            />;\r\n            setStore({ ...store });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 選択中のクラウド上のファイルを読み込む\r\n     */\r\n    const cloneCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.unZip(curPrj.source);\r\n        const data = JSON.parse(source);\r\n        switch (curPrj.type) {\r\n            case 'library': {\r\n                store.libraryData = data;\r\n            } break;\r\n            case 'story': {\r\n                const scenarioFileProps = data as StoryUtil.ScenarioFileProps;\r\n                store.libraryData = scenarioFileProps.libraryData;\r\n                store.storyData = scenarioFileProps.scenarioData;\r\n            } break;\r\n        }\r\n        store.system.dialog = <ConfirmDialog.Component\r\n            message=\"Clone project succesful!\"\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    const saveLocalFile = () => {\r\n        switch (getProjectType() as ProjectType) {\r\n            case 'library': DataUtil.saveLibraryFile(store, setStore); break;\r\n            case 'story': DataUtil.saveScenarioFile(store, setStore); break;\r\n        }\r\n    }\r\n\r\n    const getNewSaveButton = () => {\r\n        switch (tabIndex) {\r\n            // Cloud\r\n            case 0: return {\r\n                label: 'Upload cloud',\r\n                width: 210,\r\n                isEnable: hasData && store.cloud != null,\r\n                callback: uploadCloud\r\n            }\r\n            // Local\r\n            case 1: return {\r\n                label: 'Save file',\r\n                width: 210,\r\n                isEnable: hasData && store.fileHandle == null,\r\n                callback: () => {\r\n                    // store.fileHandle = null;\r\n                    // setStore({...store});\r\n                    saveLocalFile();\r\n                }\r\n            }\r\n        }\r\n        throw assert;\r\n    }\r\n\r\n    const getOverwriteButton = () => {\r\n        switch (tabIndex) {\r\n            // Cloud\r\n            case 0: return {\r\n                label: 'Overwrite',\r\n                width: 210,\r\n                isEnable: fcsListIdx != -1 && hasData,\r\n                callback: overwriteCloudFile\r\n            }\r\n            // Local\r\n            case 1: return {\r\n                label: 'Overwrite',\r\n                width: 210,\r\n                isEnable: hasData && store.fileHandle != null,\r\n                callback: () => {\r\n                    // store.fileHandle = null;\r\n                    // setStore({...store});\r\n                    saveLocalFile();\r\n                }\r\n            }\r\n        }\r\n        throw assert;\r\n    }\r\n\r\n    const cloudJsx = (<_ContDiv isEnable={store.cloud != null}>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Load',\r\n                    isEnable: !hasData && fcsListIdx !== -1 && projects[fcsListIdx].source !== '',\r\n                    callback: cloneCloudFile\r\n                },\r\n                {\r\n                    label: 'Rename',\r\n                    width: 110,\r\n                    isEnable: fcsListIdx != -1,\r\n                    callback: () => {\r\n                        store.system.dialog = <NameDefDialog.Component\r\n                            targetSeq={projects[fcsListIdx].seq}\r\n                        />;\r\n                        setStore({ ...store });\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Delete',\r\n                    width: 110,\r\n                    isEnable: fcsListIdx != -1,\r\n                    callback: () => {\r\n                        deleteProject(projects[fcsListIdx].seq).then(() => {\r\n                            store.system.dialog = <ConfirmDialog.Component\r\n                                message=\"Delete project succesful!\"\r\n                            />;\r\n                            projects.splice(fcsListIdx, 1);\r\n                            setFcsListIdx(fcsListIdx - 1);\r\n                            setStore({ ...store });\r\n                        });\r\n                    }\r\n                },\r\n            ]}\r\n        />\r\n        <_ListDiv>\r\n            {listItemJsx}\r\n        </_ListDiv>\r\n    </_ContDiv>);\r\n\r\n    const localJsx = (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Load',\r\n                    width: 100,\r\n                    isEnable: !hasData,\r\n                    callback: () => { DataUtil.loadFile(store, setStore) }\r\n                },\r\n                {\r\n                    label: 'Disconnect',\r\n                    width: 160,\r\n                    isEnable: store.fileHandle != null,\r\n                    callback: () => {\r\n                        store.fileHandle = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                },\r\n            ]}\r\n        />\r\n    </>);\r\n\r\n    return (<_Wrap>\r\n        <_HeaderDiv>\r\n            <FormUtil.ButtonRecord\r\n                align=\"left\"\r\n                buttons={[\r\n                    {\r\n                        label: 'New Project',\r\n                        isEnable: !hasData,\r\n                        callback: () => {\r\n\r\n                            store.system.dialog = store.env.isEditLibrary ? <NewProjectDialog.Component /> : <NewProjectDialogStoryOnly.Component />;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Clear',\r\n                        width: 100,\r\n                        isEnable: hasData,\r\n                        callback: () => {\r\n                            store.libraryData = null;\r\n                            store.storyData = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                ]}\r\n            />\r\n        </_HeaderDiv>\r\n        <_BodyDiv>\r\n            <_LeftDiv isEnable={true}>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'Cloud', enable: true, cont: cloudJsx },\r\n                        { name: 'Local', enable: true, cont: localJsx },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_LeftDiv>\r\n            <_RighttDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getNewSaveButton(),\r\n                        getOverwriteButton()\r\n                    ]}\r\n                />\r\n                <FormUtil.BorderPanel\r\n                    title=\"Project\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Type\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={getProjectType()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Private\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : privateCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Release\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : releaseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Logic\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Elements\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : elementSize.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Hash\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    // width={340}\r\n                                    isRecordItem\r\n                                    value={!hasData ? '-' : DataUtil.getSHA256Hash(JSON.stringify(store.libraryData))}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Fuses\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : fuseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n                {/* <FormUtil.BorderPanel\r\n                    title=\"File\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Type\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={getProjectType()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                /> */}\r\n            </_RighttDiv>\r\n        </_BodyDiv>\r\n\r\n    </_Wrap >);\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst updateProjectSource = async (seq: number, type: string, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set type = '${type}', source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from prjcttbl where seq = ${seq};`)\r\n}\r\n\r\nconst HEADER_WIDTH = 40;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    background-color: #ebebeb30;\r\n`;\r\n\r\nconst _HeaderDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_WIDTH}px;\r\n    background-color: #d1f5f32f;\r\n`;\r\n\r\nconst _BodyDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_WIDTH}px);\r\n    background-color: #221a212c;\r\n`;\r\n\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #ffe3fb53; */\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ContDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 38px);\r\n    box-sizing: border-box;\r\n    background-color: #f0ecd43d;\r\n    border: 1px solid #002c8a;\r\n    border-radius: 4px;\r\n`;\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    type: ProjectType | '';\r\n}>`\r\n    color: #0000006d;\r\n    ${props => props.type === 'library' ? css`color: #b90000be;` : ''}\r\n    ${props => props.type === 'story' ? css`color: #003bb9bd;` : ''}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\nconst _RighttDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #cbf7cd2d;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane, TabElements } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport LogicMainteTab from \"./factory/logicMainteTab\";\r\nimport StoryTab from \"./launcher/storyTab\";\r\nimport ManageTab from \"./manage/manageTab\";\r\n\r\nconst CreateChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const getProjectType = () => {\r\n        let str = '-';\r\n        if (store.libraryData != null) str = 'library';\r\n        if (store.storyData != null) str = 'scenario';\r\n        return str;\r\n    };\r\n    const projectType = getProjectType();\r\n\r\n    const tabElements: TabElements[] = [];\r\n    tabElements.push({ name: 'Manage', enable: true, cont: <ManageTab /> });\r\n    tabElements.push({ name: 'Story', enable: projectType === 'scenario', cont: projectType === 'scenario' ? <StoryTab /> : <></> });\r\n    if (store.env.isEditLibrary) {\r\n        tabElements.push({ name: 'Library', enable: projectType === 'library', cont: <LogicMainteTab /> });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={tabElements}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CreateChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport TreeUtil from \"../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../create/factory/util/logicUtil\";\r\nimport PreviewLogicFrame from \"../create/preview/previewLogicFrame\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    isOpen: boolean;\r\n    seedList: SeedProps[];\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\n\r\nconst PublishFrame = (props: {\r\n    setLibCnt: (artsCnt: number) => void;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [libList, setLibList] = useState<LibProps[]>([]);\r\n\r\n    useEffect(() => {\r\n        findAllReleaseProjectList().then((resList) => {\r\n            const libList: LibProps[] = [];\r\n            resList.forEach(res => {\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const rootData = JSON.parse(DataUtil.unZip(res.source)) as LogicUtil.WrapElement;\r\n                const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                const seedList: SeedProps[] = seedMng.defs\r\n                    .filter(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        return seed.permit === 'release';\r\n                    })\r\n                    .map(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                        const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                        return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                    });\r\n                libList.push({\r\n                    name, ownerId, lastmod, rootData, seedList, isOpen: false\r\n                });\r\n            });\r\n            setLibList(libList);\r\n            props.setLibCnt(libList.length);\r\n        });\r\n    }, []);\r\n\r\n    const download = (plainData: string) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        window.showSaveFilePicker(options).then((handle) => {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await handle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"Successfully download!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        }).catch(() => {\r\n            console.log('キャンセルされました');\r\n        });\r\n    }\r\n\r\n    const libListJsx = libList\r\n        .filter(lib => lib.seedList.length > 0).map((lib, i) => {\r\n            const dispCnt = !lib.isOpen ? 0 : lib.seedList.length;\r\n            return (<_Item key={i} count={dispCnt}>\r\n                <_Header onClick={() => {\r\n                    // window.open(DataUtil.getPreviewURL(score.seq), '_blank');\r\n                }}>\r\n                    <_Owner>{`${lib.ownerId}`}</_Owner>\r\n                    <_CName onClick={() => {\r\n                        download(JSON.stringify(lib.rootData));\r\n                    }}>{`${lib.name}`}</_CName><_CDate>{lib.lastmod}</_CDate>\r\n                </_Header>\r\n                <_DetailMain count={dispCnt}>\r\n                    {lib.seedList.map((seed, j) => {\r\n                        let labelName = seed.name;\r\n                        if (seed.disp != undefined) labelName = seed.disp;\r\n                        return (\r\n                            <_SeedItemFrame key={j} onClick={() => {\r\n                                store.system.dialog = (\r\n                                    <PreviewLogicFrame.Component\r\n                                        master={seed.master}\r\n                                        rootData={lib.rootData}\r\n                                        closeButtonAction={() => {\r\n                                            store.system.dialog = null;\r\n                                            setStore({ ...store });\r\n                                        }}\r\n                                    />\r\n                                );\r\n                                setStore({ ...store });\r\n                            }}>\r\n                                <_SeedItemInner>\r\n                                    <_SeedName>{labelName}</_SeedName>\r\n                                    <_SeedArgCnt>{` [${seed.argCount} arguments]`}</_SeedArgCnt>\r\n                                </_SeedItemInner>\r\n                            </_SeedItemFrame>\r\n                        );\r\n                    })}\r\n                </_DetailMain>\r\n                <_DetailOpen onClick={() => {\r\n                    libList[i].isOpen = !libList[i].isOpen;\r\n                    setLibList(libList.slice());\r\n                }}>\r\n                    <_CSummary>{` ${lib.seedList.length} seeds ▼`}</_CSummary>\r\n                </_DetailOpen>\r\n            </_Item>);\r\n        });\r\n\r\n    return (\r\n        <_ListFrame>{libListJsx}</_ListFrame>\r\n    );\r\n}\r\n\r\nexport default PublishFrame;\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #6d7a86;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst SEED_HEIGTH = 40;\r\nconst _Item = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${props => (props.count > 0 ? 8 : 0) + 89 + props.count * SEED_HEIGTH}px;\r\n    /* border-bottom: 1px solid #262626; */\r\n    /* background-color: #2e2e2e; */\r\n    /* background: linear-gradient(to bottom, transparent, #4f4f4f); */\r\n    margin: 2px 0 0 0;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    } */\r\n    transition: height 200ms;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100%);\r\n    height: 60px;\r\n    /* background-color: #c9e3df; */\r\n    background: linear-gradient(to bottom, #b9b9b9, #e2e2e2, #b9b9b9);\r\n    /* margin: 4px 0 0 4px; */\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff);\r\n    } */\r\n`;\r\nconst _DetailMain = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 40px);\r\n    height: ${props => (props.count > 0 ? 8 : 0) + props.count * SEED_HEIGTH}px;\r\n    background-color: #c7c7c7;\r\n    border-radius: 0 0 2px 2px;\r\n    margin: 0 0 0 20px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    transition: height 200ms;\r\n    overflow-y: hidden;\r\n`;\r\nconst _DetailOpen = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 60px);\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    margin: 0 0 0 30px;\r\n    background-color: #b1b1b1;\r\n    /* border-radius: 0 0 2px 2px; */\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    clip-path: polygon(7.5% 100%, 0% 0%, 100% 0%, 92.5% 100%);\r\n    \r\n    &:hover {\r\n        background-color: #c6d1a1;\r\n    }\r\n`;\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    \r\n    &:hover {\r\n        color: #db3333;\r\n    }\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CSummary = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 25px;\r\n    font-size: 22px;\r\n    line-height: 22px;\r\n    font-weight: 600;\r\n    color: #fffffad6;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _SeedItemFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${SEED_HEIGTH}px;\r\n    /* background-color: #a3b9c0; */\r\n    margin: 2px 0 0 0;\r\n    /* padding-left: 4px; */\r\n    text-align: left;\r\n`;\r\nconst _SeedItemInner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 2px;\r\n    border: 1px solid #0000002e;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    line-height: 29px;\r\n    font-weight: 600;\r\n    padding: 0 0 0 5px;\r\n    &:hover {\r\n        background-color: #bbd4dc;\r\n    }\r\n`;\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #000f74;\r\n`;\r\nconst _SeedArgCnt = styled.span<{\r\n}>`\r\n    color: #c7020265;\r\n`;","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\ntype NotePorp = {\r\n    version: string;\r\n    date: string;\r\n    note: string;\r\n}\r\n\r\nconst ReleaseNote = () => {\r\n    const { store } = useContext(GlobalContext);\r\n\r\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\r\n    useEffect(() => {\r\n        fetch('assets/release_note.json')\r\n            .then(response => response.json()) // (2) レスポンスデータを取得\r\n            .then(json => { // (3)レスポンスデータを処理\r\n                const list = json as NotePorp[];\r\n                setJsx(list.map((item, i) => {\r\n                    const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n                    return (\r\n                        <_Item key={i}>\r\n                            <_Header>v{item.version} ({item.date})</_Header>\r\n                            <_Detail>{record}</_Detail>\r\n                        </_Item>\r\n                    );\r\n                }));\r\n            });\r\n    }, []);\r\n    return (<_ListFrame>{jsx}</_ListFrame>);\r\n}\r\n\r\nexport default ReleaseNote;\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    /* height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px); */\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #bfcace;\r\n    border: 1px solid #9b9b9b;\r\n    border-radius: 6px;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    font-weight: 600;\r\n    /* background-color: #8bdbf8; */\r\n    color: #494975;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    /* background-color: #dafce4; */\r\n    color: #754949;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PublishFrame from \"./publishFrame\";\r\nimport ReleaseNote from \"./releaseNote\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [userCount, setUserCount] = useState(0);\r\n    const [artsCnt, setArtsCnt] = useState(0);\r\n\r\n    useEffect(() => {\r\n        countUsers().then(cnt => {\r\n            setUserCount(cnt);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <ReleaseNote />\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{artsCnt} libruary have been published.</_MessageRecord>\r\n            <PublishFrame setLibCnt={setArtsCnt}/>\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeChannel;\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nexport const findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT seq, (select id from user_tbl where seq = prj.seq) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { VscGitPullRequestCreate } from 'react-icons/vsc';\r\nimport CreateChannel from \"../create/createChannel\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <HomeChannel /> },\r\n                    { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <CreateChannel /> },\r\n                ]}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport CanvasUtil from '../../utils/canvasUtil';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <_Logo src={logo} />\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2023 Pixel Flare All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#858892, #8e99b6);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    /* color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-shadow: 1px 2px 22px #0000003d; */\r\n    text-align: center;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    /* & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    } */\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #ebe7ab;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n    /* height: 200%; */\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { useState } from \"react\";\r\nimport { initialStore } from \"../../redux/store/store\";\r\nimport styled from \"styled-components\";\r\nimport GloballDialog from \"../dialog/globalDialog\";\r\nimport TotalHeader from \"./totalHeader\";\r\nimport MainFrame from \"./mainFrame\";\r\nimport ModeSelectDialog from \"./modeSelectDialog\";\r\nimport Splash from \"./splash\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\n\r\nconst PCRoot = () => {\r\n    const [store, setStore] = useState(initialStore);\r\n\r\n    const splashJsx = !store.system.isSplash ? <></> : (\r\n        <Splash\r\n            remove={() => {\r\n                store.system.isSplash = false;\r\n                // store.system.dialog = <ModeSelectDialog />\r\n                setStore({ ...store });\r\n            }}\r\n        />\r\n    );\r\n\r\n    return (<>\r\n        {splashJsx}\r\n        < _Wrap >\r\n            <GloballDialog />\r\n            <TotalHeader />\r\n            <_MainDiv>\r\n                <MainFrame />\r\n            </_MainDiv>\r\n        </_Wrap >\r\n    </>);\r\n}\r\n\r\nexport default PCRoot;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    min-width: 1200px;\r\n    min-height: 900px;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #a3c1c7;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import PublishFrame from \"../../contents/home/publishFrame\";\r\n\r\nconst SPHomeChannel = () => {\r\n\r\n    return (<PublishFrame setLibCnt={()=>{}}/>);\r\n}\r\n\r\nexport default SPHomeChannel;","import styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../contents/entry/systemEntry\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { ProjectType } from \"../../redux/store/store\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../../contents/dialog/confirmDialog\";\r\nimport NewProjectDialogStoryOnly from \"../../contents/create/manage/newProjectDialogStoryOnly\";\r\nimport NameDefDialog from \"../../contents/create/manage/nameDefDialog\";\r\nimport StoreCloud from \"../../redux/store/storeCloud\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport { BsFillShareFill } from 'react-icons/bs';\r\nimport { VscPreview } from \"react-icons/vsc\";\r\nimport { FiUpload, FiDownload } from \"react-icons/fi\";\r\nimport { IoCreateOutline } from \"react-icons/io5\";\r\nimport { FaRegSave } from \"react-icons/fa\";\r\nimport { MdClear, MdOutlineDriveFileRenameOutline } from \"react-icons/md\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\n\r\nimport ShareDialog from \"./etc/shareDialog\";\r\n\r\nconst SPManageFrame = (props: {\r\n    setEdit: (isEdit: boolean) => void;\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n    const hasData = store.libraryData != null;\r\n    const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n    useEffect(() => {\r\n        store.system.logoutActions.push(() => {\r\n            setFcsListIdx(-1);\r\n        });\r\n        // dispatcher.updateStore();\r\n    }, []);\r\n\r\n    const getData = () => {\r\n        if (!hasData) return null;\r\n        const data: StoryUtil.ScenarioFileProps = {\r\n            libraryData: store.libraryData as LogicUtil.WrapElement,\r\n            scenarioData: store.storyData as StoryUtil.StoryData\r\n        };\r\n        return data;\r\n    }\r\n\r\n    const listItemJsx = store.cloud == null ? [] : store.cloud.projects.map((project, i) => {\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    setFcsListIdx(i);\r\n                    console.log(DataUtil.getHashedFromProjectSeq(project.seq));\r\n                }}\r\n                onContextMenu={() => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={DataUtil.getDirectUrl(project.type, project.seq)}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }}\r\n            >\r\n                {/* <_Status type={project.type}>[{project.type}] </_Status> */}\r\n                <_Name>{project.name}</_Name>\r\n                {/* <LineShareButton\r\n                    url=\"hoge\"\r\n                    children={<_Icon><BsFillShareFill /></_Icon>}\r\n                /> */}\r\n                {/* <_Date> -{item.lastmod}</_Date> */}\r\n                <_Share\r\n                    onClick={() => {\r\n                        store.system.dialog = <ShareDialog.Component\r\n                            hash={DataUtil.getHashedFromProjectSeq(project.seq)}\r\n                        />;\r\n                        store.system.canDialogClose = true;\r\n                        dispatcher.updateStore();\r\n                    }}\r\n                ><_Icon><BsFillShareFill /></_Icon></_Share>\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを新規アップロードする\r\n     */\r\n    const uploadCloud = () => {\r\n        const source = DataUtil.gZip(JSON.stringify(getData()));\r\n        store.system.dialog = <NameDefDialog.Component\r\n            targetSeq={-1}\r\n            type={'story'}\r\n            source={source}\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを上書き更新する\r\n     */\r\n    const overwriteCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.gZip(JSON.stringify(getData()));\r\n        updateProjectSource(curPrj.seq, 'story', source).then(() => {\r\n            curPrj.source = source;\r\n            curPrj.type = 'story';\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Update project succesful!\"\r\n            />;\r\n            setStore({ ...store });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 選択中のクラウド上のファイルを読み込む\r\n     */\r\n    const cloneCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.unZip(curPrj.source);\r\n        const data = JSON.parse(source);\r\n        switch (curPrj.type) {\r\n            case 'library': {\r\n                store.libraryData = data;\r\n            } break;\r\n            case 'story': {\r\n                const scenarioFileProps = data as StoryUtil.ScenarioFileProps;\r\n                store.libraryData = scenarioFileProps.libraryData;\r\n                store.storyData = scenarioFileProps.scenarioData;\r\n            } break;\r\n        }\r\n        store.system.dialog = <ConfirmDialog.Component\r\n            message=\"Clone project succesful!\"\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"left\"\r\n            isIconButton\r\n            buttons={[\r\n                !hasData ? {\r\n                    label: 'New Project',\r\n                    width: 200,\r\n                    icon: <IoCreateOutline />,\r\n                    callback: () => {\r\n                        store.system.dialog = <NewProjectDialogStoryOnly.Component\r\n                            extendAction={() => { props.setEdit(true); }}\r\n                        />;\r\n                        setStore({ ...store });\r\n                    }\r\n                } : {\r\n                    label: 'Clear',\r\n                    width: 200,\r\n                    icon: <MdClear />,\r\n                    callback: () => {\r\n                        store.libraryData = null;\r\n                        store.storyData = null;\r\n                        store.fuseCacheList.length = 0;\r\n                        dispatcher.updateStore();\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Project\"\r\n            height={198}\r\n            // isDisable={!hasData}\r\n            isEnable={hasData}\r\n            backgroundColor=\"#ffffff26\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    buttons={[\r\n                        {\r\n                            label: 'Upload',\r\n                            width: 210,\r\n                            icon: <FiUpload />,\r\n                            isEnable: hasData && store.cloud != null,\r\n                            callback: uploadCloud\r\n                        },\r\n                        {\r\n                            label: 'Overwrite',\r\n                            width: 210,\r\n                            icon: <FaRegSave />,\r\n                            isEnable: fcsListIdx != -1 && hasData,\r\n                            callback: overwriteCloudFile\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Hash\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            // width={340}\r\n                            isRecordItem\r\n                            value={!hasData ? '-' : DataUtil.getSHA256Hash(JSON.stringify(store.libraryData))}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Fuses\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            value={!hasData ? '-' : '0'}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Size\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            value={!hasData ? '-' : '0'}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Cloud\"\r\n            height={434}\r\n            // isDisable={store.cloud == null}\r\n            isEnable={store.cloud != null}\r\n            backgroundColor=\"#ffffff26\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    buttons={[\r\n                        {\r\n                            label: 'Load',\r\n                            width: 140,\r\n                            icon: <FiDownload />,\r\n                            isEnable: !hasData && fcsListIdx !== -1 && projects[fcsListIdx].source !== '',\r\n                            callback: cloneCloudFile\r\n                        },\r\n                        {\r\n                            label: 'Rename',\r\n                            width: 140,\r\n                            icon: <MdOutlineDriveFileRenameOutline />,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                store.system.dialog = <NameDefDialog.Component\r\n                                    targetSeq={projects[fcsListIdx].seq}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Delete',\r\n                            width: 140,\r\n                            icon: <RiDeleteBinLine />,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                deleteProject(projects[fcsListIdx].seq).then(() => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Delete project succesful!\"\r\n                                    />;\r\n                                    projects.splice(fcsListIdx, 1);\r\n                                    setFcsListIdx(fcsListIdx - 1);\r\n                                    setStore({ ...store });\r\n                                });\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {listItemJsx}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default SPManageFrame;\r\n\r\nconst updateProjectSource = async (seq: number, type: string, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set type = '${type}', source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from prjcttbl where seq = ${seq};`)\r\n}\r\n\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 38px);\r\n    box-sizing: border-box;\r\n    background-color: #f0ecd43d;\r\n    border: 1px solid #002c8a;\r\n    border-radius: 4px;\r\n`;\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    type: ProjectType | '';\r\n}>`\r\n    color: #0000006d;\r\n    ${props => props.type === 'library' ? css`color: #b90000be;` : ''}\r\n    ${props => props.type === 'story' ? css`color: #003bb9bd;` : ''}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\n\r\nconst _Share = styled.span<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 1px;\r\n    /* background-color: #00eb6a76; */\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 30px;\r\n    /* background-color: #eb000076; */\r\n    font-size: 20px;\r\n    color: #757575;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport StoryUtil from \"../../../contents/create/launcher/util/storyUtil\";\r\nimport { FuseBean } from \"../../../contents/create/launcher/storyTab\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport LogicUtil from \"../../../contents/create/factory/util/logicUtil\";\r\nimport LogicFormUtil from \"../../../contents/create/factory/util/logicFormUtil\";\r\nimport LogicElementUtil from \"../../../contents/create/factory/util/logicElementUtil\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport BuildUtil from \"../../../contents/create/preview/buildUtil\";\r\nimport { AiOutlineEnter } from \"react-icons/ai\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\n\r\nconst FuseMainteDialog = (props: {\r\n    focus: number;\r\n    seedList: FuseBean[];\r\n    // isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: (frame: number, seedId: string, values: number[]) => void;\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const [newFrame, setNewFrame] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n    const [seed, setSeed] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [preset, setPreset] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const isInputOK = seed.errors.length === 0 && newFrame.errors.length === 0 && formList.find(form => form.errors.length > 0) == undefined;\r\n\r\n    const mapping = () => {\r\n        if (props.focus === -1) return;\r\n        const curFuse = fuseList[props.focus];\r\n        setNewFrame({ ...newFrame, value: curFuse.frame.toString() });\r\n        setSeed({ ...seed, value: curFuse.seedId.toString() });\r\n        setFormList(curFuse.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    }\r\n\r\n    const initFormList = (seedId: string) => {\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seedId;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n        }\r\n        setFormList(argumentList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }\r\n\r\n    const createSeq = () => {\r\n        return fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if(props.focus !== -1) mapping();\r\n    }, []);\r\n\r\n    const propertiesFormJsx = useMemo(() => {\r\n        if (seed.value === '') return <></>;\r\n\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        let presetList: LogicUtil.NodeSampleItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seed.value;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n            formgrpList = activeSeed.formgrps;\r\n            presetList = activeSeed.presets;\r\n        }\r\n        return (<>\r\n            <FormUtil.BorderPanel\r\n                title=\"Preset\"\r\n                innerJsx={<FormUtil.Record\r\n                    jsx={<>\r\n                        <FormUtil.Combobox\r\n                            width={250}\r\n                            checkable={preset}\r\n                            setCheckable={setPreset}\r\n                            headBlank\r\n                            list={presetList.map((sample, i) => {\r\n                                return {\r\n                                    labelText: sample.name,\r\n                                    value: i.toString()\r\n                                }\r\n                            })}\r\n                        />\r\n                        <FormUtil.ButtonItem\r\n                            button={{\r\n                                label: 'Apply',\r\n                                isEnable: preset.value !== '',\r\n                                callback: () => {\r\n                                    const selectedIndex = Number(preset.value);\r\n                                    const values = presetList[selectedIndex].values;\r\n                                    values.forEach((value, i) => {\r\n                                        formList[i].value = value.toString();\r\n                                    });\r\n                                    setFormList(formList.slice());\r\n                                }\r\n                            }}\r\n                        />\r\n                    </>}\r\n                />}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Properties\"\r\n                innerJsx={<>{\r\n                    LogicFormUtil.buildPreviewForms(\r\n                        false, argumentList, formgrpList, formList, setFormList\r\n                    )\r\n                }</>}\r\n            />\r\n        </>);\r\n    }, [preset, formList]);\r\n\r\n    return (\r\n        <_Frame\r\n            width={600}\r\n            height={872}\r\n            scrollLock={store.env.scrollLock}\r\n        >\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        icon: <MdCancelPresentation />,\r\n                        width: 120,\r\n                        // isEnable: props.isModify,\r\n                        callback: () => {\r\n                            props.cancelAction();\r\n                            // setPreset({ ...preset, value: '' });\r\n                            // mapping();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Regist',\r\n                        icon: <AiOutlineEnter />,\r\n                        width: 120,\r\n                        isEnable: isInputOK,\r\n                        callback: () => {\r\n\r\n\r\n                            let fuse: StoryUtil.Fuse | null = null;\r\n                            let cache: StoryUtil.Cache | null = null;\r\n                            if (props.focus === -1) {\r\n                                fuse = { seq: createSeq(), frame: 0, seedId: '', values: [] };\r\n                                fuseList.push(fuse);\r\n\r\n                                cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n                                store.fuseCacheList.push(cache);\r\n                            } else {\r\n                                fuse = fuseList[props.focus];\r\n                                const fuseSeq = fuse.seq;\r\n                                cache = store.fuseCacheList.find(cache => cache.seq === fuseSeq) as StoryUtil.Cache;\r\n                            }\r\n\r\n                            fuse.frame = Number(newFrame.value);\r\n                            fuse.seedId = seed.value;\r\n                            const activeSeed = props.seedList.find(item => {\r\n                                return item.name === seed.value;\r\n                            });\r\n                            fuse.dispName = activeSeed?.disp;\r\n                            fuse.values = formList.map(form => form.value);\r\n                            dispatcher.story.updateCache(fuse, cache);\r\n                            (store.storyData as StoryUtil.StoryData).fuseList = fuseList.slice();\r\n                            store.system.dialog = null;\r\n                            dispatcher.updateStore();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Base\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isNumber\r\n                                checkable={newFrame}\r\n                                setCheckable={setNewFrame}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Seed\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                checkable={seed}\r\n                                setCheckable={(checkable) => {\r\n                                    initFormList(checkable.value);\r\n                                    setSeed({ ...checkable });\r\n                                }}\r\n                                list={props.seedList.map(seed => {\r\n                                    return { value: seed.name, labelText: seed.disp ?? seed.name }\r\n                                })}\r\n                                headBlank\r\n                                width={250}\r\n                                validates={\r\n                                    [\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n            {propertiesFormJsx}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default FuseMainteDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n    scrollLock: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #cfd7dae6;\r\n    border: 1px solid #474747;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n    overflow-y: ${props => !props.scrollLock ? 'auto' : 'hidden'};\r\n`;","import styled, { css, keyframes } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport StoryUtil from \"../../../contents/create/launcher/util/storyUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport FuseMainteDialog from \"./fuseMainteDialog\";\r\nimport { FuseBean } from \"../../../contents/create/launcher/storyTab\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\nimport { GrView } from \"react-icons/gr\";\r\nimport { ImCopy } from \"react-icons/im\";\r\n\r\nconst COL_WIDTH_LIST = [48, 252, 150];\r\n\r\nconst OPTION_BUTTON_WIDTH = 112;\r\n\r\nconst FuseList = (props: {\r\n    focus: number;\r\n    setFocus: (focus: number) => void;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const createSeq = () => {\r\n        return storyData.fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    const recordJsxList = useMemo(() => {\r\n        return storyData.fuseList.map((fuse, i) => {\r\n\r\n            const cache = store.fuseCacheList.find(cache => cache.seq === fuse.seq);\r\n\r\n            let thumbJsx: JSX.Element[] = [];\r\n            if (cache != undefined) {\r\n                thumbJsx = cache.thumbList.slice(0, 3).map((thumb, j) => {\r\n                    const imgJsx = thumb == undefined ? <></> : <_Img src={thumb.url} />;\r\n                    return (\r\n                        <_SampleDiv key={j}>\r\n                            {/* <_SampleName>{thumb.name}</_SampleName> */}\r\n                            <_CanvasDiv>\r\n                                {imgJsx}\r\n                            </_CanvasDiv>\r\n                        </_SampleDiv>\r\n                    );\r\n                });\r\n            };\r\n            const isFocus = props.focus === i;\r\n            return (<_RecordWrap key={i}\r\n                isFocus={isFocus}\r\n            >\r\n                <_RecordCont\r\n                    onClick={() => {\r\n                        if (props.focus !== i) {\r\n                            props.setFocus(i);\r\n                        } else if (props.focus === i) {\r\n                            props.setFocus(-1);\r\n                        }\r\n                    }}\r\n                >\r\n                    <_ColWrap width={COL_WIDTH_LIST[0]}><_TextItem>{fuse.frame}</_TextItem></_ColWrap>\r\n                    <_ColWrap width={COL_WIDTH_LIST[1]}>\r\n                        <_TextItem>[{fuse.seq}] {fuse.dispName ?? fuse.seedId}</_TextItem>\r\n                        {/* <_FrameForm\r\n                            type=\"number\"\r\n                            isEditable={isFocus}\r\n                            min={0} max={storyData.limitFrame}\r\n                            step={1}\r\n                            value={storyData.fuseList[i].frame}\r\n                            onChange={(e) => {\r\n                                storyData.fuseList[i].frame = e.currentTarget.valueAsNumber;\r\n                                storyData.fuseList = storyData.fuseList.slice();\r\n                                setStore({ ...store });\r\n                            }}\r\n                        />\r\n                        <_FrameSlider\r\n                            type=\"range\"\r\n                            isEditable={isFocus}\r\n                            min={0} max={storyData.limitFrame}\r\n                            step={1}\r\n                            value={storyData.fuseList[i].frame}\r\n                            onChange={(e) => {\r\n                                storyData.fuseList[i].frame = e.currentTarget.valueAsNumber;\r\n                                storyData.fuseList = storyData.fuseList.slice();\r\n                                setStore({ ...store });\r\n                            }}\r\n                        /> */}\r\n                    </_ColWrap>\r\n                    <_ColWrap width={COL_WIDTH_LIST[2]}><_ImageItem>{thumbJsx}</_ImageItem></_ColWrap>\r\n                </_RecordCont>\r\n                <_Option isFocus={isFocus}>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        isIconButton\r\n                        buttons={[\r\n                            {\r\n                                label: 'Edit',\r\n                                icon: <FiEdit />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                // isEnable: props.isModify,\r\n                                callback: () => {\r\n                                    store.system.dialog = <FuseMainteDialog\r\n                                        focus={props.focus}\r\n                                        seedList={props.seedList}\r\n                                        cancelAction={() => {\r\n                                        }}\r\n                                        modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                        }}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Copy',\r\n                                icon: <ImCopy />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    const cloneFuse = JSON.parse(JSON.stringify(storyData.fuseList[props.focus])) as StoryUtil.Fuse;\r\n                                    cloneFuse.seq = createSeq();\r\n                                    const focusSeq = storyData.fuseList[props.focus].seq;\r\n                                    const index = store.fuseCacheList.findIndex(cache => cache.seq === focusSeq);\r\n                                    const cloneCache = JSON.parse(JSON.stringify(store.fuseCacheList[index])) as StoryUtil.Cache;\r\n                                    cloneCache.seq = cloneFuse.seq;\r\n                                    storyData.fuseList.push(cloneFuse);\r\n                                    storyData.fuseList = storyData.fuseList.slice();\r\n                                    store.fuseCacheList.push(cloneCache);\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Delete',\r\n                                icon: <RiDeleteBinLine />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    const focusSeq = storyData.fuseList[props.focus].seq;\r\n                                    storyData.fuseList.splice(props.focus, 1);\r\n                                    const index = store.fuseCacheList.findIndex(cache => cache.seq === focusSeq);\r\n                                    store.fuseCacheList.splice(index, 1);\r\n                                    setStore({ ...store });\r\n                                    props.setFocus(props.focus - 1);\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Test',\r\n                                icon: <GrView />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    dispatcher.story.openPreviewSoloDialog(props.focus);\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_Option>\r\n            </_RecordWrap>);\r\n        });\r\n    }, [storyData.fuseList, props.focus]);\r\n\r\n    return (<>\r\n        <_HeaderDiv>\r\n            <_HeaderItem width={COL_WIDTH_LIST[0]}>F</_HeaderItem>\r\n            <_HeaderItem width={COL_WIDTH_LIST[1]}>[Seq] Seed</_HeaderItem>\r\n            <_HeaderItem width={COL_WIDTH_LIST[2]}>Snapshot</_HeaderItem>\r\n        </_HeaderDiv>\r\n        <_BodyScrollDiv>\r\n            {recordJsxList}\r\n        </_BodyScrollDiv>\r\n    </>);\r\n}\r\n\r\nexport default FuseList;\r\n\r\nconst _HeaderDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #0c0c0c44;\r\n  /* background: linear-gradient(to bottom, #99a5b9, #c3cee4, #99a5b9); */\r\n  width: calc(100% - 30px);\r\n  height: 36px;\r\n  margin: 0 0 0 5px;\r\n  padding: 3px;\r\n  box-sizing: border-box;\r\n  border-radius: 2px 2px 0 0;\r\n`;\r\n\r\nconst _HeaderItem = styled.div<{\r\n    width: number;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #feffff36;\r\n  width: ${props => props.width}px;\r\n  height: 30px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  font-size: 24px;\r\n  line-height: 26px;\r\n  font-weight: 600;\r\n  font-style: italic;\r\n  color: #ffffff;\r\n  text-align: center;\r\n  margin: 0 2px;\r\n`;\r\n\r\nconst _BodyScrollDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #4d6e854e;\r\n  width: calc(100% - 10px);\r\n  height: calc(100% - 36px);\r\n  margin: 0 0 0 5px;\r\n  overflow-y: auto;\r\n`;\r\nconst fadeIn = keyframes`\r\n  from {\r\n    background-color: #bb6f6fa0;\r\n  }\r\n  to {\r\n    background-color: #fabebe58;\r\n  }\r\n`;\r\nconst _RecordWrap = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffffff37;\r\n  ${props => !props.isFocus ? '' : css`\r\n      animation: ${fadeIn} 1.2s linear infinite;\r\n  `}\r\n  width: 100%;\r\n  margin: 1px 0 0 0;\r\n  border-radius: 0 0 8px 8px;\r\n`;\r\nconst _RecordCont = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 20px); */\r\n  width: 100%;\r\n  height: 56px;\r\n  margin: 1px 0 0 0;\r\n  padding: 3px;\r\n  box-sizing: border-box;\r\n`;\r\nconst _Option = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #ebffe6f9; */\r\n  width: 100%;\r\n  height: ${props => props.isFocus ? '68' : '0'}px;\r\n  /* height: 0; */\r\n  margin: 1px 0 0 0;\r\n  overflow-y: hidden;\r\n  transition: height 0.1s;\r\n`;\r\n\r\nconst _ColWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n  display: inline-block;\r\n  width: ${props => props.width}px;\r\n  margin: 0 2px;\r\n  /* background-color: #ff0000bb; */\r\n  vertical-align: middle;\r\n`;\r\nconst _TextItem = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffffffbc;\r\n  width: 100%;\r\n  height: 30px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  padding-left: 6px;\r\n  border-radius: 4px;\r\n  font-size: 24px;\r\n  line-height: 26px;\r\n  font-weight: 600;\r\n  /* font-style: italic; */\r\n  color: #7c0025;\r\n  text-align: left;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  /* margin: 8px 2px; */\r\n`;\r\nconst _FrameForm = styled.input<{\r\n    isEditable: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #628cffb9; */\r\n  border: 1px solid #242424;\r\n  border-radius: 2px;\r\n  width: 46px;\r\n  height: 20px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  ${props => props.isEditable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n  vertical-align: middle;\r\n  font-weight: 600;\r\n  color: #180085;\r\n`;\r\nconst _FrameSlider = styled.input<{\r\n    isEditable: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffd562ba;\r\n  width: calc(100% - 50px);\r\n  height: 20px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  ${props => props.isEditable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst _ImageItem = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #ffffffbc; */\r\n  width: 100%;\r\n  height: 50px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  /* border-radius: 4px; */\r\n  color: #000850;\r\n  text-align: center;\r\n  margin: 0 2px;\r\n  vertical-align: middle;\r\n  text-align: left;\r\n`;\r\n\r\nconst WND_SIZE = 50;\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    /* margin: 0 0 0 2px; */\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Img = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport { useContext, useMemo, useState, useRef } from \"react\";\r\nimport StoryUtil from \"../../../contents/create/launcher/util/storyUtil\";\r\nimport { FuseBean } from \"../../../contents/create/launcher/storyTab\";\r\n\r\nexport const FRAME_LINE_WIDTH = 107;\r\n\r\nconst FrameLine = (props: {\r\n    focus: number;\r\n    setFocus: (focus: number) => void;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n    const screenRate = store.env.screenRate;\r\n\r\n    const [startY, setStartY] = useState<null | number>(null);\r\n    const [startX, setStartX] = useState<null | number>(null);\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n\r\n    const frameRateJsxList = useMemo(() => {\r\n        if (ref.current == null) return <></>;\r\n        const clientWidth = ref.current.clientWidth - 10;\r\n        const clientHeight = ref.current.clientHeight - 10;\r\n        return fuseList.map((fuse, i) => {\r\n            let left: undefined | number = undefined;\r\n            const seed = props.seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n            const posXIndex = seed.args.findIndex(arg => arg.isPosX);\r\n            if (posXIndex !== -1) {\r\n                const arg = seed.args[posXIndex];\r\n                const min = arg.min as number;\r\n                const max = arg.max as number;\r\n                const range = max - min;\r\n                const val = Number(fuse.values[posXIndex]) - min;\r\n                const rate = val / range;\r\n                left = Math.floor(clientWidth * rate);\r\n            }\r\n            const top = Math.floor(fuse.frame / limitFrame * clientHeight);\r\n            return <_FrameRate key={i}\r\n                isCurr={i === props.focus}\r\n                top={top}\r\n                left={left}\r\n            />\r\n        });\r\n    }, [fuseList, props.focus]);\r\n\r\n    const putAction = (x: number, y: number) => {\r\n        if (props.focus === -1) return;\r\n        setStartY(y);\r\n        setStartX(x);\r\n    }\r\n\r\n    const moveAction = (x: number, y: number) => {\r\n        if (startY == null || startX == null || ref.current == null) return;\r\n        const clientHeight = ref.current.clientHeight - 10;\r\n        const fuse = fuseList[props.focus];\r\n\r\n        // フレームの移動\r\n        const rate = limitFrame / clientHeight * 2;\r\n        // console.log('read ' + start);\r\n        fuse.frame += Math.floor((y - startY)/screenRate * rate);\r\n        if (fuse.frame < 0) fuse.frame = 0;\r\n        else if (fuse.frame > limitFrame) fuse.frame = limitFrame;\r\n        const prevFocusSeq = fuseList[props.focus].seq;\r\n        fuseList.sort((a, b) => a.frame - b.frame);\r\n        const nowFocusSeq = fuseList[props.focus].seq;\r\n        if (prevFocusSeq !== nowFocusSeq) {\r\n            props.setFocus(fuseList.findIndex(fuse => fuse.seq === prevFocusSeq) as number);\r\n        }\r\n\r\n        // X座標の移動\r\n        const seed = props.seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n        const posXIndex = seed.args.findIndex(arg => arg.isPosX);\r\n        if (posXIndex !== -1) {\r\n            const arg = seed.args[posXIndex];\r\n            const min = arg.min as number;\r\n            const max = arg.max as number;\r\n            const range = max - min;\r\n            const clientWidth = (ref.current as HTMLDivElement).clientWidth - 10;\r\n            const rate = range / clientWidth * 2;\r\n            let value = Number(fuse.values[posXIndex]);\r\n            value += Math.floor((x - startX)/screenRate * rate);\r\n            // 範囲外に出た場合\r\n            if (value < min) value = min;\r\n            else if (value > max) value = max;\r\n            fuse.values[posXIndex] = value.toString();\r\n            setStartX(x);\r\n        }\r\n\r\n        storyData.fuseList = fuseList.slice();\r\n        setStartY(y);\r\n        // console.log('set ' + start);\r\n        dispatcher.updateStore();\r\n    }\r\n\r\n    const releaseAction = () => {\r\n        setStartY(null);\r\n        setStartX(null);\r\n    }\r\n\r\n    return (\r\n        <_FrameLineDiv ref={ref}\r\n            isEdit={startY != null}\r\n            onMouseDown={(e) => { putAction(e.clientX, e.clientY) }}\r\n            onMouseMove={(e) => { moveAction(e.clientX, e.clientY) }}\r\n            onMouseUp={releaseAction}\r\n            onMouseLeave={releaseAction}\r\n            onTouchStart={(e) => { putAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n            onTouchMove={(e) => { moveAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n            onTouchEnd={releaseAction}\r\n            onTouchCancel={releaseAction}\r\n        >\r\n            {frameRateJsxList}\r\n        </_FrameLineDiv>\r\n    );\r\n}\r\n\r\nexport default FrameLine;\r\n\r\n\r\n\r\nconst _FrameLineDiv = styled.div<{\r\n    isEdit: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${FRAME_LINE_WIDTH}px;\r\n  height: calc(100% - 36px);\r\n  background-color: #5995a790;\r\n  ${props => !props.isEdit ? '' : css`\r\n    background-color: #85b9c990;\r\n  `}\r\n  border: 1px solid #5a0000b8;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  vertical-align: top;\r\n  margin-top: 36px;\r\n`;\r\n\r\nconst _FrameRate = styled.div<{\r\n    isCurr: boolean;\r\n    top: number;\r\n    left?: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  left: 0;\r\n  top: ${props => props.top}px;\r\n  width: 100%;\r\n  ${props => props.left == undefined ? '' : css`\r\n      width: 10px;\r\n      left: ${props.left}px;\r\n  `}\r\n  height: 10px;\r\n  background-color: #627cc5;\r\n  border-radius: 4px;\r\n  border: 1px solid #00000061;\r\n  box-sizing: border-box;\r\n  ${props => !props.isCurr ? '' : css`\r\n      background-color: #e20000;\r\n      z-index: 10;\r\n  `}\r\n`;","import { useContext, useMemo, useState, useEffect } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport FuseList from \"./fuseList\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport StoryUtil from \"../../../contents/create/launcher/util/storyUtil\";\r\nimport FuseMainteDialog from \"./fuseMainteDialog\";\r\nimport { FuseBean } from \"../../../contents/create/launcher/storyTab\";\r\nimport LogicUtil from \"../../../contents/create/factory/util/logicUtil\";\r\nimport LogicElementUtil from \"../../../contents/create/factory/util/logicElementUtil\";\r\nimport BuildUtil from \"../../../contents/create/preview/buildUtil\";\r\nimport { AiOutlineAppstoreAdd } from \"react-icons/ai\";\r\nimport { FaSortAmountDownAlt } from \"react-icons/fa\";\r\nimport { VscPreview } from \"react-icons/vsc\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\nimport { IoSave } from \"react-icons/io5\";\r\n\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport FrameLine, { FRAME_LINE_WIDTH } from \"./frameLine\";\r\nimport assert from \"assert\";\r\n\r\nconst SPEditStoryFrame = () => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [focus, setFocus] = useState<number>(-1);\r\n    const [isPreview, setPreview] = useState<boolean>(false);\r\n    // const [seedId, setSeedId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [presetIndex, setPresetIndex] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [interval, setInterval] = useState<FormUtil.CheckableValue>({ value: '30', errors: [] });\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const [seedList, presetList]: [FuseBean[], StoryUtil.PresetBean[]] = useMemo(() => {\r\n        // if (store.libraryData == null) throw assert('store.libraryDataがnullです。');\r\n        assert(store.libraryData != null);\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        const seedWrapList = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n\r\n        const seedList: FuseBean[] = [];\r\n        const presetList: StoryUtil.PresetBean[] = [];\r\n        seedWrapList.forEach(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n\r\n            // 引数リストを取得\r\n            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const args = argMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n\r\n            // フォームグループリストを取得\r\n            const groupMng = LogicElementUtil.getInnerWrap(wrap, 'interface-mng', 'formgrp-mng');\r\n            let formgrps: LogicUtil.NodeFromGrpItem[] = [];\r\n            if (groupMng != null) {\r\n                formgrps = (groupMng.data as LogicUtil.NodeFromgrpManager).defines.map(wrap => wrap.data as LogicUtil.NodeFromGrpItem);\r\n            }\r\n\r\n            // プリセットリストを取得\r\n            const sampleMng = LogicElementUtil.getInnerWrap(wrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n            const presets = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n            seedList.push({\r\n                name: seed.name,\r\n                disp: seed.disp,\r\n                args, formgrps, presets\r\n            });\r\n\r\n            presets.forEach(preset => {\r\n                const dispName = (seed.disp ?? seed.name) + ': ' + preset.name;\r\n                presetList.push({\r\n                    seedId: seed.name,\r\n                    dispName,\r\n                    values: preset.values\r\n                });\r\n            });\r\n        });\r\n        return [seedList, presetList];\r\n    }, [store.libraryData]);\r\n\r\n    useEffect(() => {\r\n        const isLoad = fuseList.length > 0 && store.fuseCacheList.length === 0;\r\n        if (!isLoad) return;\r\n        fuseList.forEach(fuse => {\r\n            const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n            store.fuseCacheList.push(cache);\r\n            dispatcher.story.updateCache(fuse, cache);\r\n        });\r\n        storyData.fuseList = fuseList.slice();\r\n        dispatcher.updateStore();\r\n    }, [fuseList, store.fuseCacheList]);\r\n\r\n    const getNewFuseProps = (): {\r\n        newSeq: number;\r\n        newFrame: number;\r\n    } => {\r\n        const newSeq = fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n        const newFrame = fuseList.length === 0 ? 0 : fuseList[fuseList.length - 1].frame + Number(interval.value);\r\n        return { newSeq, newFrame };\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"left\"\r\n            isIconButton\r\n            buttons={[\r\n                {\r\n                    label: 'Preview',\r\n                    width: 140,\r\n                    icon: <VscPreview />,\r\n                    isEnable: fuseList.length > 0,\r\n                    callback: () => {\r\n                        fuseList.sort((a, b) => {\r\n                            return a.frame - b.frame;\r\n                        });\r\n                        storyData.fuseList = fuseList.slice();\r\n                        // dispatcher.updateStore();\r\n                        setPreview(true);\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Save',\r\n                    width: 140,\r\n                    icon: <IoSave />,\r\n                    callback: () => {\r\n                        alert('仕様検討中');\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"fuse\"\r\n            height={660}\r\n            backgroundColor=\"#c9d4dd\"\r\n            innerJsx={<>\r\n                <_SeedDiv>\r\n                    <FormUtil.ButtonItem\r\n                        button={\r\n                            {\r\n                                label: 'Add',\r\n                                width: 100,\r\n                                icon: <AiOutlineAppstoreAdd />,\r\n                                callback: () => {\r\n                                    if (presetIndex.value === '') {\r\n\r\n                                        store.system.dialog = <FuseMainteDialog\r\n                                            focus={-1}\r\n                                            seedList={seedList}\r\n                                            cancelAction={() => {\r\n                                            }}\r\n                                            modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                            }}\r\n                                        />;\r\n                                        setStore({ ...store });\r\n                                    } else {\r\n                                        const preset = presetList[Number(presetIndex.value)];\r\n                                        console.log(preset);\r\n                                        const seedId = preset.seedId;\r\n                                        const seed = seedList.find(seed => seed.name === seedId) as FuseBean;\r\n                                        const newFuseProps = getNewFuseProps();\r\n                                        const fuse: StoryUtil.Fuse = {\r\n                                            seq: newFuseProps.newSeq,\r\n                                            frame: newFuseProps.newFrame,\r\n                                            seedId: '',\r\n                                            values: []\r\n                                        };\r\n                                        const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n\r\n                                        fuseList.push(fuse);\r\n                                        store.fuseCacheList.push(cache);\r\n\r\n                                        fuse.seedId = seedId;\r\n                                        fuse.dispName = seed.disp;\r\n                                        fuse.values = preset.values.slice();\r\n                                        dispatcher.story.updateCache(fuse, cache);\r\n                                        (store.storyData as StoryUtil.StoryData).fuseList = fuseList.slice();\r\n                                        store.system.dialog = null;\r\n                                        dispatcher.updateStore();\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        }\r\n                    />\r\n                    <_FormDiv>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Preset\"\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={presetIndex}\r\n                                    setCheckable={setPresetIndex}\r\n                                    list={presetList.map((preset, i) => {\r\n                                        return { value: i.toString(), labelText: preset.dispName }\r\n                                    })}\r\n                                    headBlank\r\n                                    width={340}\r\n                                // validates={\r\n                                //     [\r\n                                //         {\r\n                                //             checker: (value) => ValidateUtil.checkRequired(value),\r\n                                //             errorType: \"required\"\r\n                                //         }\r\n                                //     ]\r\n                                // }\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Interval\"\r\n                            jsx={\r\n                                <FormUtil.TextField\r\n                                    width={100}\r\n                                    isNumber\r\n                                    checkable={interval}\r\n                                    setCheckable={setInterval}\r\n                                    validates={[\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        },\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                            errorType: \"value\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            }\r\n                        />\r\n                    </_FormDiv>\r\n                </_SeedDiv>\r\n                <_MainDiv>\r\n                    <FrameLine\r\n                        focus={focus}\r\n                        setFocus={setFocus}\r\n                        seedList={seedList}\r\n                    />\r\n                    <_FuseListFrame>\r\n                        <FuseList\r\n                            focus={focus}\r\n                            setFocus={setFocus}\r\n                            seedList={seedList}\r\n                        />\r\n                    </_FuseListFrame>\r\n                </_MainDiv>\r\n            </>}\r\n        />\r\n        {!isPreview ? <></> : <BuildUtil.BuildFrame closeAction={() => {\r\n            setPreview(false);\r\n        }} />}\r\n    </>);\r\n}\r\n\r\nexport default SPEditStoryFrame;\r\n\r\n\r\nconst _SeedDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 84px;\r\n  /* background-color: #be97ca; */\r\n  vertical-align: top;\r\n`;\r\nconst _FormDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 492px;\r\n  vertical-align: top;\r\n  /* background-color: #09fc3e; */\r\n  margin: 0 0 0 4px;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: calc(100% - 84px);\r\n  /* background-color: #c2ca97; */\r\n`;\r\n\r\nconst _FuseListFrame = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: calc(100% - ${FRAME_LINE_WIDTH}px);\r\n  height: 100%;\r\n  /* background-color: #f80707; */\r\n  vertical-align: top;\r\n`;","import styled from \"styled-components\";\r\nimport PublishFrame from \"../../contents/home/publishFrame\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport SPManageFrame from \"./sPManageFrame\";\r\nimport SPEditStoryFrame from \"./edit/sPEditStoryFrame\";\r\nimport { GlobalContext } from \"../../contents/entry/systemEntry\";\r\n\r\nconst SPCreateChannel = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isEdit, setEdit] = useState<boolean>(false);\r\n    const hasData = store.libraryData != null;\r\n\r\n    return (<>\r\n        <FormUtil.Record jsx={<>\r\n            <FormUtil.SwitchTwoFace\r\n                label1=\"Manage\"\r\n                label2=\"Story\"\r\n                rate1={50}\r\n                rate2={50}\r\n                isUse={isEdit}\r\n                width={350}\r\n                isEditable={hasData}\r\n                callback={() => {\r\n                    setEdit(!isEdit);\r\n                }}\r\n            />\r\n        </>} />\r\n        <_MainDiv>\r\n            {!isEdit ? <SPManageFrame setEdit={setEdit} /> : <SPEditStoryFrame />}\r\n        </_MainDiv>\r\n    </>);\r\n}\r\n\r\nexport default SPCreateChannel;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #9fc99e; */\r\n  width: 100%;\r\n  height: calc(100% - 40px);\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport DirectLinkManager from \"./directLinkManager\";\r\nimport DataUtil from \"../utils/dataUtil\";\r\nimport { SPUtil } from \"./spUtil\";\r\nimport { initialStore } from \"../redux/store/store\";\r\nimport Splash from \"../contents/entry/splash\";\r\nimport { ChannelPane } from \"../base/components/tab/channelPane\";\r\n\r\nimport { VscGitPullRequestCreate } from \"react-icons/vsc\";\r\nimport { AiFillHome } from \"react-icons/ai\";\r\nimport SPTotalHeader from \"./sPTotalHeader\";\r\nimport SPHomeChannel from \"./contents/sPHomeChannel\";\r\nimport GloballDialog from \"../contents/dialog/globalDialog\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../utils/systemConst\";\r\nimport SPCreateChannel from \"./contents/sPCreateChannel\";\r\nimport TotalHeader from \"../contents/entry/totalHeader\";\r\ntype ScreenBean = {\r\n    adjLeft: number;\r\n    adjTop: number;\r\n    rate: number;\r\n}\r\n\r\n// export const CONTENTS_WIDTH = 576;\r\n// export const CONTENTS_HEIGHT = 1024;\r\n\r\n\r\nconst SPRoot = (props: {\r\n}) => {\r\n    const [store, setStore] = useState(initialStore);\r\n\r\n    const [isPermit, setPermit] = useState(true);\r\n    const [screen, setScreen] = useState<ScreenBean>({ adjLeft: 0, adjTop: 0, rate: 1 });\r\n    const ref = useRef<null | HTMLDivElement>(null);\r\n\r\n    const splashJsx = !store.system.isSplash ? <></> : (\r\n        <_SplashDiv>\r\n            <Splash\r\n                remove={() => {\r\n                    store.system.isSplash = false;\r\n                    setStore({ ...store });\r\n                }}\r\n            />\r\n        </_SplashDiv>\r\n    );\r\n\r\n    const update = () => {\r\n        if (ref.current != null) {\r\n            // const [clientWidth, clientHeight] = [window.innerWidth, window.innerHeight];\r\n\r\n            const rect = ref.current.getBoundingClientRect();\r\n            const [clientWidth, clientHeight] = [rect.width, rect.height];\r\n\r\n            const cw = SPUtil.SCREEN_WIDTH;\r\n            const ch = SPUtil.SCREEN_HEIGHT;\r\n\r\n            const isFitSide = clientHeight / ch > clientWidth / cw;\r\n\r\n            const rate = !isFitSide ? clientHeight / ch : clientWidth / cw;\r\n            const adjLeft = !isFitSide ? clientWidth / 2 - (cw * rate / 2) : 0;\r\n            const adjTop = !isFitSide ? 0 : clientHeight / 2 - (ch * rate / 2);\r\n\r\n            setScreen({ adjLeft, adjTop, rate });\r\n            store.env.screenRate = rate;\r\n            setStore({...store});\r\n        }\r\n    }\r\n\r\n    // window.addEventListener('DOMContentLoaded', () => {\r\n    //     if (!isSmartPhone()) {\r\n    //         window.addEventListener('resize', update);\r\n    //     } else {\r\n    //         window.addEventListener('orientationchange resize', () => {\r\n    //             update();\r\n    //             setPermit(window.orientation === 0);\r\n    //         });\r\n    //     }\r\n    // });\r\n\r\n    // window.onorientationchange = () => {\r\n    //   setOrientation(window.orientation);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        store.system.isSPMode = true;\r\n        setStore({...store});\r\n        \r\n        update();\r\n        console.log(navigator.userAgent);\r\n        if (isSmartPhone()) {\r\n            setPermit(window.orientation === 0);\r\n        }\r\n        if (!isSmartPhone()) {\r\n            window.addEventListener('resize', () => {\r\n                update();\r\n            });\r\n        } else {\r\n            window.addEventListener('orientationchange resize', () => {\r\n                alert('change');\r\n                update();\r\n                setPermit(window.orientation === 0);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    let jsx = <_Error>Make your smartphone vertical!</_Error>;\r\n    if (isPermit) {\r\n        jsx = (\r\n            <_Contents>\r\n                {splashJsx}\r\n                <GloballDialog />\r\n                <TotalHeader />\r\n                <_ChannelWrap>\r\n                    <ChannelPane\r\n                        isLandscape={false}\r\n                        tabElements={[\r\n                            { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <SPHomeChannel /> },\r\n                            { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <SPCreateChannel /> },\r\n                        ]}\r\n                        activeNo={0}\r\n                    // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n                    />\r\n                </_ChannelWrap>\r\n            </_Contents>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap ref={ref}>\r\n            <_Frame left={screen.adjLeft} top={screen.adjTop} rate={screen.rate}>\r\n                {jsx}\r\n            </_Frame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SPRoot;\r\n\r\nconst isSmartPhone = () => {\r\n    // UserAgentからのスマホ判定\r\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 10px);\r\n  height: calc(100% - 10px);\r\n  background-color: #9eadc9;\r\n  margin: 5px 0 0 5px; */\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst _ChannelWrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #dbdfe7;\r\n  width: 100%;\r\n  height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst _Frame = styled.div<{\r\n    left: number;\r\n    top: number;\r\n    rate: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: ${props => props.top}px;\r\n  left: ${props => props.left}px;\r\n  transform-origin: top left;\r\n  /* width: 100%;\r\n  height: 100%; */\r\n  transform: scale(${props => props.rate});\r\n`;\r\n\r\nconst _Contents = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${SPUtil.SCREEN_WIDTH}px;\r\n  height: ${SPUtil.SCREEN_HEIGHT}px;\r\n  background-color: #929292;\r\n`;\r\n\r\nconst _Error = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #750000;\r\n    color: white;\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _SplashDiv = styled.div`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: 50%;\r\n    top: 400px;\r\n    transform-origin: center;\r\n    transform: scale(0.7);\r\n`;","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport BuildUtil from \"../../contents/create/preview/buildUtil\";\r\nimport PreviewLauncherFrame from \"../../contents/create/preview/previewLauncherFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport { Store } from \"../store/store\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private setStore: (store: Store) => void;\r\n\r\n    constructor(store: Store, setStore: (store: Store) => void) {\r\n        this.store = store;\r\n        this.setStore = setStore;\r\n    }\r\n\r\n    public updateStore = () => {\r\n        this.setStore({ ...this.store });\r\n    }\r\n\r\n    public system = {\r\n        // setUserEnv: (userEnv: UserEnv) => {\r\n        // },\r\n    }\r\n    public story = {\r\n\r\n        /**\r\n         * プレビューオールダイアログを表示する\r\n         */\r\n        openPreviewAllDialog: () => {\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const minFrame = fuseList[0].frame;\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n            const sceens: string[] = [];\r\n            let useFrame: number = 0;\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    fuseList.some(def => {\r\n                        if (def.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                        } else if (def.frame > frame) return 1;\r\n                    });\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    useFrame = frame;\r\n                }\r\n            });\r\n            this.store.system.dialog = (\r\n                <PreviewLauncherFrame.Component\r\n                    sceens={sceens}\r\n                    frameCnt={useFrame}\r\n                />\r\n            );\r\n            this.updateStore();\r\n        },\r\n\r\n        /**\r\n         * プレビューソロダイアログを表示する\r\n         */\r\n        openPreviewSoloDialog: (focus: number) => {\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n            const sceens: string[] = [];\r\n            let useFrame: number = 0;\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    const def = fuseList[focus];\r\n                    if (frame === 0) {\r\n                        LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                    }\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    useFrame = frame;\r\n                }\r\n            });\r\n            this.store.system.dialog = (\r\n                <PreviewLauncherFrame.Component\r\n                    sceens={sceens}\r\n                    frameCnt={useFrame}\r\n                />\r\n            );\r\n            this.updateStore();\r\n        },\r\n\r\n\r\n        updateCache: (fuse: StoryUtil.Fuse, cache: StoryUtil.Cache) => {\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            \r\n            cache.thumbList = [];\r\n            cache.useFrame = 0;\r\n            const seedProps = LogicElementUtil.getSeedProperties(logicData, fuse.seedId);\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                doIterate: (frame, owner) => {\r\n                    if (frame === 0) {\r\n                        LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                    }\r\n\r\n                    const thumb = seedProps.thumbnailList.find(thumb => thumb.frame === frame);\r\n                    if (thumb != undefined) {\r\n                        const url = CanvasUtil.createURL(550, 550, (ctx) => {\r\n                            // パーティクルの描画\r\n                            owner.forEach(par => {\r\n                                par.draw(ctx);\r\n                            });\r\n                            ctx.save();\r\n                        });\r\n                        cache.thumbList.push({ name: thumb.name, url });\r\n                    }\r\n                },\r\n                doEnd: (frame) => {\r\n                    cache.useFrame = frame;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","import { createContext, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport MobileRoot from '../../sp/mobileRoot';\r\nimport PCRoot from './pCRoot';\r\nimport SPRoot from '../../sp/sPRoot';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\nimport DataUtil from '../../utils/dataUtil';\r\nimport SystemConst from '../../utils/systemConst';\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    setStore: React.Dispatch<React.SetStateAction<Store>>;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    // const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const [store, setStore] = useState(initialStore);\r\n    const dispatcher = new Dispatcher(store, setStore);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    if (store.system.user == null) {\r\n        const login = localStorage.getItem(SystemConst.SESSTION_KEY_LOGIN);\r\n        if (login != null) {\r\n            (async () => {\r\n                const results = await DataUtil.findUserInfoSeq(login);\r\n                if (results.length > 0) {\r\n                    store.system.user = {\r\n                        seq: results[0].seq,\r\n                        id: results[0].id,\r\n                        password: results[0].password,\r\n                        email: results[0].email,\r\n                    };\r\n                    const resPrjList = await DataUtil.findUserProjectList(results[0].seq, store.system.isSPMode);\r\n                    store.cloud = {\r\n                        projects: resPrjList.map(res => ({\r\n                            source: res.source,\r\n                            type: res.type,\r\n                            name: res.name,\r\n                            seq: res.seq,\r\n                            lastmod: res.lastmod\r\n                        }))\r\n                    };\r\n                    setStore({ ...store });\r\n                }\r\n            })();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{ store, setStore, dispatcher }}>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <PCRoot />\r\n                </Route>\r\n                <Route path=\"/sp\" exact >\r\n                    <SPRoot />\r\n                </Route>\r\n                <Route path=\"/library\" exact >\r\n                    <MobileRoot hashKey={str} />\r\n                </Route>\r\n                <Route path=\"/story\" exact >\r\n                    <MobileRoot hashKey={str} />\r\n                </Route>\r\n            </Switch>\r\n        </GlobalContext.Provider>\r\n    );\r\n\r\n}","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport ValidateUtil from \"./validateUtil\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nnamespace FormUtil {\r\n\r\n    export type CheckableValue = {\r\n        value: string;\r\n        errors: ValidateUtil.ErrorType[];\r\n    }\r\n\r\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\r\n        let result = true;\r\n        checkables.forEach(checkable => {\r\n            if (checkable.errors.length > 0) {\r\n                result = false;\r\n                return 1;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    export const InputTextFormBak = (props: {\r\n        titleLabel?: string;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        isCenter?: boolean;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        marginTop?: number;\r\n        isReadOnly?: boolean;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const type = props.isPassword ?? false ? 'password' : 'text';\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency);\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\r\n                <_ItemnInputBak\r\n                    type={type}\r\n                    value={props.checkable.value}\r\n                    hasTitle={props.titleLabel != undefined}\r\n                    width={props.width}\r\n                    isCenter={props.isCenter ?? false}\r\n                    placeholder={props.placeholder}\r\n                    onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        props.checkable.value = value;\r\n                        props.checkable.errors = getErrors(value);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }}\r\n                    errorType={errors.length === 0 ? undefined : errors[0]}\r\n                    readOnly={props.isReadOnly}\r\n                />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n\r\n    export const Record = (props: {\r\n        isEnable?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    const DEFAULT_LABEL_WIDTH = 140;\r\n    export const FormRecord = (props: {\r\n        titleLabel?: string;\r\n        labelWidth?: number;\r\n        isEnabled?: boolean;\r\n        isVisible?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        const lablelWidth = props.labelWidth ?? DEFAULT_LABEL_WIDTH;\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnabled ?? true}\r\n                isVisible={props.isVisible ?? true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={lablelWidth}>{props.titleLabel}</_ItemnLabel>}\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FixedText = (props: {\r\n        value: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        marginLeft?: number;\r\n        isRecordItem?: boolean;\r\n    }) => {\r\n        let width: string | undefined = undefined;\r\n        if (props.isRecordItem) width = `calc(100% - ${DEFAULT_LABEL_WIDTH + 16}px)`;\r\n        if (props.width != undefined) width = props.width + 'px';\r\n        return (\r\n            <_FixedLabel width={width}>{props.value}</_FixedLabel>\r\n        );\r\n    }\r\n\r\n    export const TextField = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        isNumber?: boolean;\r\n        marginLeft?: number;\r\n        step?: number;\r\n    }) => {\r\n        const [isNaN, setNaN] = useState(false);\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        let type = props.isPassword ?? false ? 'password' : 'text';\r\n        if (props.isNumber ?? false) {\r\n            type = 'number';\r\n        }\r\n\r\n        const isEnabled = props.isEnabled ?? true;\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            if (!isEnabled) props.checkable.errors.length = 0;\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n        const step = props.step ?? 1;\r\n\r\n        return (\r\n            <_ItemnInput\r\n                type={type}\r\n                value={value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                step={step}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                    if (type === 'number') {\r\n                        setNaN(Number.isNaN(e.target.valueAsNumber));\r\n                    }\r\n                }}\r\n                onBlur={() => {\r\n                    if (type === 'number') {\r\n                        if (isNaN) props.checkable.value = ' ';\r\n                        else props.checkable.value = Number(value).toString();\r\n                        // console.log(`[${props.checkable.value}]`);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }\r\n                }}\r\n                errorType={!isEnabled || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            // isEnable={isEnable}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\r\n\r\n    export const Combobox = (props: {\r\n        list: ComboboxItemProps[];\r\n        headBlank?: boolean;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n        const headBlank = props.headBlank ?? false;\r\n        const list = props.list.slice();\r\n        if (headBlank) list.unshift({ value: '', labelText: '' });\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n\r\n        const isEnabled = props.isEnabled ?? true;\r\n        useEffect(() => {\r\n            // console.log('value: ' + props.checkable.value);\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            if (!isEnabled) props.checkable.errors.length = 0;\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        return (\r\n            <_ItemCombobox\r\n                value={props.checkable.value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    props.checkable.value = value;\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n\r\n                }}\r\n                errorType={!isEnabled || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            >{list.map((item, i) => {\r\n                return (\r\n                    <_Option key={i}\r\n                        value={item.value}\r\n                        disabled={item.isDisabled ?? false}\r\n                        isDisabled={item.isDisabled ?? false}\r\n                    >{item.labelText}</_Option>\r\n                );\r\n            })}</_ItemCombobox>\r\n        );\r\n    }\r\n\r\n    export const TextArea = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n    }) => {\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n\r\n        const isEnable = props.isEnabled ?? true;\r\n        return (\r\n            <_ItemnTextArea\r\n                value={value}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                }}\r\n                // errorType={!isEnable || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        label: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        icon?: JSX.Element;\r\n        interval?: number;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ButtonRecord = (props: {\r\n        buttons: ButtonProps[],\r\n        align?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        isIconButton?: boolean;\r\n        interval?: number;\r\n    }) => {\r\n        const align = props.align ?? 'right';\r\n        const interval = props.interval ?? 4;\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={align}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n                height={!props.isIconButton ? 40 : 68}\r\n            >\r\n                {props.buttons.map((button, i) => {\r\n                    if (button.icon == undefined) {\r\n                        return (\r\n                            <_Button\r\n                                key={i}\r\n                                isCenter={align === 'center'}\r\n                                isEnable={button.isEnable ?? true}\r\n                                width={button.width}\r\n                                interval={interval}\r\n                                onClick={button.callback}\r\n                            >{button.label}</_Button>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <_IconButton\r\n                                key={i}\r\n                                isCenter={align === 'center'}\r\n                                isEnable={button.isEnable ?? true}\r\n                                width={button.width}\r\n                                interval={interval}\r\n                                onClick={button.callback}\r\n                            >{button.icon}<br />{button.label}</_IconButton>\r\n                        );\r\n                    }\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const ButtonItem = (props: {\r\n        button: ButtonProps\r\n    }) => {\r\n        const button = props.button;\r\n        const interval = button.interval ?? 4;\r\n        if (button.icon == undefined) {\r\n            return (\r\n                <_Button\r\n                    isCenter={false}\r\n                    isEnable={button.isEnable ?? true}\r\n                    width={button.width}\r\n                    interval={interval}\r\n                    onClick={button.callback}\r\n                >{button.label}</_Button>\r\n            );\r\n        } else {\r\n            return (\r\n                <_IconButton\r\n                    isCenter={false}\r\n                    isEnable={button.isEnable ?? true}\r\n                    width={button.width}\r\n                    interval={interval}\r\n                    onClick={button.callback}\r\n                >{button.icon}<br />{button.label}</_IconButton>\r\n            );\r\n        }\r\n        // return (\r\n        //     <_Button\r\n        //         isCenter={false}\r\n        //         isEnable={props.button.isEnable ?? true}\r\n        //         width={props.button.width}\r\n        //         onClick={props.button.callback}\r\n        //     >{props.button.label}</_Button>\r\n        // );\r\n    }\r\n\r\n    export const Message = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const MessageLink = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        clickAction: () => void;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isLink={true}\r\n                    onClick={props.clickAction}\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        isDisable?: boolean;\r\n        height?: number;\r\n        backgroundColor?: string;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        // const title = props.title ?? 'title pl';\r\n        const isDisable = props.isDisable ?? false;\r\n        const isEnable = props.isEnable ?? true;\r\n        const backgroundColor = props.backgroundColor ?? '#cedadd';\r\n        return (<>\r\n            {isDisable ? <></> : <_BorderText>{props.title}</_BorderText>}\r\n            <_BorderPanel\r\n                isEnable={isEnable}\r\n                isDisable={isDisable}\r\n                height={props.height}\r\n                backgroundColor={backgroundColor}\r\n            >{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export const InfoFrame = (props: {\r\n        height?: number;\r\n        textRecords: string[];\r\n    }) => {\r\n        const height = props.height ?? 70;\r\n        const color = '#1a9900';\r\n        return (<>\r\n            <_InfoDiv height={height} color={color}>\r\n                {props.textRecords.map((text, i) => {\r\n                    return <span key={i}>{text}<br /></span>;\r\n                })}\r\n            </_InfoDiv>\r\n        </>);\r\n    };\r\n\r\n    export const Switch = (props: {\r\n        label: string;\r\n        isUse: boolean;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        isRelation?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isRelation = props.isRelation ?? false;\r\n        const callback = isRelation && props.isUse ? () => { } : props.callback;\r\n        return (\r\n            <_Switch\r\n                isRelation={isRelation}\r\n                isUse={props.isUse}\r\n                isEnable={props.isEnable ?? true}\r\n                width={props.width}\r\n                onClick={callback}\r\n            >{props.label}</_Switch>\r\n        );\r\n    }\r\n\r\n    export const SwitchTwoFace = (props: {\r\n        label1: string;\r\n        label2: string;\r\n        width: number;\r\n        rate1: number;\r\n        rate2: number;\r\n        isUse: boolean;\r\n        isEditable?: boolean;\r\n        isEnable?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isEnable = props.isEnable ?? true;\r\n        const isEditable = props.isEditable ?? true;\r\n        return (<_SwitchTwoFace\r\n            isEnable={isEnable}\r\n            isEditable={isEditable}\r\n            width={props.width}\r\n            onClick={props.callback}\r\n        >\r\n            <_SwitchItem\r\n                isUse={isEnable && !props.isUse}\r\n                rate={props.rate1}\r\n                isLeft={true}\r\n                isEditable={isEditable}\r\n            >{props.label1}</_SwitchItem>\r\n            <_SwitchItem\r\n                isUse={isEnable && props.isUse}\r\n                rate={props.rate2}\r\n                isLeft={false}\r\n                isEditable={isEditable}\r\n            >{props.label2}</_SwitchItem>\r\n        </_SwitchTwoFace>);\r\n    }\r\n\r\n    export const checkItems = (list: CheckableValue[]) => {\r\n        return list.find(item => item.errors.length > 0) == undefined;\r\n    }\r\n}\r\n\r\nexport default FormUtil;\r\n\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n    textAlign: 'left' | 'center' | 'right';\r\n    marginTop: number;\r\n    marginBottom: number;\r\n    height?: number;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    width: 100%;\r\n    height: ${props => props.height ?? '40'}px;\r\n    margin-top: ${props => props.marginTop}px;\r\n    margin-bottom: ${props => props.marginBottom}px;\r\n    /* background-color: #b3b4c4; */\r\n    /* border: 1px solid #000; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    text-align: ${props => props.textAlign};\r\n`;\r\n\r\nconst _ItemnLabel = styled.div<{\r\n    labelWidth?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.labelWidth}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #b4c0c7fa, #d8d8d8, #b4c0c7fa);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n`;\r\n\r\nconst _FixedLabel = styled.div<{\r\n    width?: string;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #0c0e86;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c51a;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n    overflow-x: hidden;\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width};\r\n    `}\r\n`;\r\n\r\nconst _ItemnInputBak = styled.input<{\r\n    readOnly?: boolean;\r\n    isCenter: boolean;\r\n    hasTitle: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${props => !props.hasTitle ? css`\r\n    ` : css`\r\n        width: calc(100% - 152px);\r\n    `}\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    margin-top: 2px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    /* ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    } */\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n    // isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemCombobox = styled.select<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n        pointer-events: none;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _Option = styled.option<{\r\n    isDisabled: boolean;\r\n}>`\r\n    ${props => !props.isDisabled ? '' : css`\r\n        color: #0000004b;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n    isLink?: boolean;\r\n    isCenter: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #002c52;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => !props.isLink ? '' : css`\r\n        color: #0459a3;\r\n        user-select: none;\r\n        text-decoration: underline;\r\n        &:hover {\r\n            color: #68a4d8;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n    interval: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #c0ced6, #ebebeb, #c0ced6);\r\n    border: 1px solid #829bad;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 ${props => props.interval}px;\r\n    ${props => !props.isCenter ? css<{ interval: number }>`\r\n        margin-left: ${props => props.interval}px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        /* background: linear-gradient(to bottom, #989898, #b4b4b4, #989898); */\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst _IconButton = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n    interval: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    height: 58px;\r\n    padding: 4px 0 0 0;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #c0ced6, #ebebeb, #c0ced6);\r\n    border: 1px solid #829bad;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 ${props => props.interval}px;\r\n    ${props => !props.isCenter ? css<{ interval: number }>`\r\n        margin-left: ${props => props.interval}px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        /* background: linear-gradient(to bottom, #989898, #b4b4b4, #989898); */\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isUse: boolean;\r\n    isEnable: boolean;\r\n    width?: number;\r\n    isRelation: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    color: #515151;\r\n    border: 1px solid #747474;\r\n    ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\r\n    ` : css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#ddc1d979' : '#d898b3'};\r\n        color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n    `}\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\r\n        ` : css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#d3a1cb79' : '#d898b3'};\r\n            color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _SwitchTwoFace = styled.div<{\r\n    isEnable: boolean;\r\n    isEditable: boolean;\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEditable ? '' : css`    \r\n        pointer-events: none;\r\n    `}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* opacity: 0.7; */\r\n    }\r\n`;\r\n\r\nconst _SwitchItem = styled.div<{\r\n    isUse: boolean;\r\n    rate: number;\r\n    isLeft: boolean;\r\n    isEditable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* line-height: 25px; */\r\n    border-top: 1px solid #747474;\r\n    border-bottom: 1px solid #747474;\r\n    text-align: ${props => props.isLeft ? css`\r\n        border-left: 1px solid #747474;\r\n    ` : css`\r\n        border-right: 1px solid #747474;\r\n    `};\r\n    text-align: ${props => props.isLeft ? 'right' : 'left'};\r\n    border-radius: ${props => props.isLeft ? '8px 0 0 8px' : '0 8px 8px 0'};\r\n    padding: 0 10px;\r\n    box-sizing: border-box;\r\n    background-color: #8fa2aa;\r\n    color: #515151;\r\n    font-size: 16px;\r\n    ${props => props.isEditable ? css`\r\n        ${!props.isUse ? '' : css`\r\n            color: #b30000;\r\n            font-size: 22px;\r\n            background-color: #dae7ec;\r\n        `}\r\n    ` : css`\r\n        ${!props.isUse ? '' : css`\r\n            color: #110070;\r\n            font-size: 22px;\r\n            background-color: #dae7ec;\r\n        `};\r\n    `}\r\n    vertical-align: top;\r\n    transition: background-color 0.3s;\r\n`;\r\n\r\nconst _BorderText = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: #990000;\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n    isDisable: boolean;\r\n    height?: number;\r\n    backgroundColor: string;\r\n}>`\r\n    display: inline-block;\r\n    ${props => !props.isDisable ? '' : css`\r\n        display: none;\r\n    `}\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    ${props => props.height == undefined ? '' : css`\r\n        height: ${props.height}px;\r\n    `}\r\n    background-color: ${props => props.backgroundColor};\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    margin: 4px 0 0 0;\r\n    display: inline-block;\r\n    background-color: #e7e5e561;\r\n    border: solid 1px #949494;\r\n    width: 100%;\r\n    height: ${props => props.height}px;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: ${props => props.color};\r\n    overflow-y: auto;\r\n`;\r\n\r\n\r\nconst _ItemnTextArea = styled.textarea<{\r\n\r\n}>`\r\n   display: inline-block;\r\n   width: 100%;\r\n   height: 100%;\r\n   background-color: #ebf5f5;\r\n   font-size: 18px;\r\n   color: black;\r\n   border: none;\r\n   resize: none;\r\n   box-sizing: border-box;\r\n`;","import zlib from \"zlib\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport { sha256 } from 'js-sha256';\r\nimport Hashids from 'hashids';\r\nimport { ProjectType, Store } from \"../redux/store/store\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport ConfirmDialog from \"../contents/dialog/confirmDialog\";\r\nimport StoryUtil from \"../contents/create/launcher/util/storyUtil\";\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5001';\r\n    export const DB_SERVER_DOMAIN = 'https://hkdev-db.glitch.me';\r\n    // export const DB_SERVER_DOMAIN = 'https://crud-server001.glitch.me';\r\n\r\n    // export const APP_SERVER_DOMAIN = 'http://localhost:4333';\r\n    export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/pf_apps/v1.8.3';\r\n    // export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    const DATABASE_NAME = 'pf1';\r\n\r\n    const getUserHashBuilder = () => {\r\n        return new Hashids('pf-user', 8);\r\n    }\r\n\r\n    export const getHashedFromUserSeq = (seq: number) => {\r\n        const hashids = getUserHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\r\n        const hashids = getUserHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    const getScoreHashBuilder = () => {\r\n        return new Hashids('pf', 8);\r\n    }\r\n\r\n    export const getHashedFromProjectSeq = (seq: number) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedProjectSeq = (hashedSeq: string) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    export const getPreviewURL = (scoreSeq: number) => {\r\n        const hashedKey = getHashedFromProjectSeq(scoreSeq);\r\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql, databaseName: DATABASE_NAME })\r\n        }\r\n    }\r\n\r\n    export type SendMailParam = {\r\n        from: string,\r\n        to: string,\r\n        subject: string,\r\n        text: string\r\n    }\r\n\r\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(json)\r\n        }\r\n    }\r\n\r\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/mail',\r\n            createSendMailRequestInit(json)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserInfoList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\r\n        const results = await response.json();\r\n        return results as { id: string, email: string }[];\r\n    };\r\n\r\n    export const findUserIdList = async () => {\r\n        const results = await findUserInfoList();\r\n        return (results as { id: string }[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfoFromEmail = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserInfoFromSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoLogin = async (id: string, password: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoSeq = async (seq: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const getNextUserSeq = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\r\n        const results = await response.json();\r\n        const nextSeq = (results[0]['seq'] as number) + 1;\r\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\r\n\r\n        return nextSeq;\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findUserProjectList = async (userSeq: number, isSPMode: boolean) => {\r\n        const storyOnly = !isSPMode ? '' : `and type = 'story'`;\r\n        const response = await DataUtil.sendQueryRequestToAPI(\r\n            'select',\r\n            `SELECT owner, seq, type, name, source, lastmod FROM prjcttbl WHERE owner = ${userSeq} ${storyOnly}order by seq`\r\n        );\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const loadFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            store.fileHandle = fileHandle;\r\n            const text = DataUtil.unZip(fileContents);\r\n            const data = JSON.parse(text);\r\n            // シナリオであるかどうかの判定\r\n            if (!data.hasOwnProperty('scenarioData')) {\r\n                store.libraryData = data;\r\n            } else {\r\n                const scenarioProps = data as StoryUtil.ScenarioFileProps;\r\n                store.libraryData = scenarioProps.libraryData;\r\n                store.storyData = scenarioProps.scenarioData;\r\n            }\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Successfully file loaded!\" />;\r\n            setStore({ ...store });\r\n        })();\r\n    }\r\n\r\n    export const saveFileBak = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.libraryData as LogicUtil.WrapElement;\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        const plainData = JSON.stringify(rootData);\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const saveLibraryFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.libraryData as LogicUtil.WrapElement;\r\n        const plainData = JSON.stringify(rootData);\r\n        saveFile(store, setStore, plainData, 'plgc');\r\n    }\r\n\r\n    export const saveScenarioFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const data: StoryUtil.ScenarioFileProps = {\r\n            libraryData: store.libraryData as LogicUtil.WrapElement,\r\n            scenarioData: store.storyData as StoryUtil.StoryData\r\n        }\r\n        const plainData = JSON.stringify(data);\r\n        saveFile(store, setStore, plainData, 'pstr');\r\n    }\r\n\r\n    export const saveFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>, plainData: string, extension: string) => {\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': [`.${extension}`],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const getSHA256Hash = (original: string) => {\r\n        return sha256(original);\r\n    }\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n\r\n    export const getDirectUrl = (type: ProjectType, seq: number) => {\r\n        return `${APP_SERVER_DOMAIN}/#/${type}?v=${getHashedFromProjectSeq(seq)}`;\r\n    }\r\n}\r\n\r\nexport default DataUtil;"],"sourceRoot":""}