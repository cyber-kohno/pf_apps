{"version":3,"sources":["system/base/design/styles.tsx","system/utils/form/formUtiil.tsx","system/utils/systemUtil.tsx","system/utils/canvasUtil.tsx","system/contents/entry/editDialog.tsx","system/contents/entry/setterFrame.tsx","system/contents/entry/playerFrame.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Styles","_Styles","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","FONT_LARGE","css","_templateObject7","_taggedTemplateLiteral","CSS_LABEL_SMALL","_templateObject8","CSS_LABEL_MIDIUM","_templateObject9","CSS_BUTTON_DISABLE","_templateObject10","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","FormUtil","_FormUtil","isCompleteCheck","checkables","result","forEach","checkable","errors","length","InputTextFormBak","props","_props$isPassword","_props$validates","_props$dependency","_props$isEnable","_props$isCenter","_props$marginTop","_props$isCenter2","type","isPassword","validaters","validates","dependency","map","dep","value","getErrors","validater","checker","push","errorType","useEffect","setCheckable","_jsxs","_Record","isEnable","isVisible","textAlign","isCenter","marginTop","children","undefined","titleLabel","_jsx","_Fragment","_ItemnLabel","_ItemnInputBak","hasTitle","width","placeholder","onChange","e","target","readOnly","isReadOnly","Record","_props$isEnable2","_props$textAlign","_props$marginTop2","jsx","FormRecord","_props$isEnable3","_props$isVisible","_props$textAlign2","_props$marginTop3","labelWidth","TextField","_props$isPassword2","_props$isNumber","_props$validates2","_props$dependency2","_props$width","isNumber","concat","_ItemnInput","Number","toString","marginLeft","Combobox","_props$validates3","_props$dependency3","_props$headBlank","_props$width2","headBlank","list","slice","unshift","labelText","_ItemCombobox","item","i","_item$isDisabled","_item$isDisabled2","_Option","disabled","isDisabled","ButtonRecord","_props$textAlign3","_props$marginTop4","buttons","button","_button$isEnable","_Button","onClick","callback","label","Message","_props$isCenter3","_props$marginTop5","_props$isCenter4","_Message","message","MessageLink","_props$isCenter5","_props$marginTop6","_props$isCenter6","isLink","clickAction","BorderPanel","_props$isEnable4","_BorderText","title","_BorderPanel","innerJsx","InfoFrame","_props$height","height","_InfoDiv","color","textRecords","text","Switch","_props$isRelation","_props$isEnable5","isRelation","isUse","_Switch","_props$labelWidth","input","_templateObject11","_props$marginLeft","_templateObject12","select","_templateObject13","_props$marginLeft2","_templateObject14","option","_templateObject15","_templateObject16","_templateObject17","_templateObject19","_templateObject18","_templateObject20","_templateObject21","_templateObject22","_templateObject23","_templateObject24","_templateObject26","_templateObject25","_templateObject27","_templateObject28","_templateObject29","_templateObject31","_templateObject30","_templateObject33","_templateObject32","_templateObject34","_templateObject35","_templateObject36","_SystemUtil","CONTENTS_WIDTH","CONTENTS_HEIGHT","USER_INFO","FIELD_MARGIN","MAX_CELL_WIDTH","isSmartPhone","navigator","userAgent","match","SystemUtil","CanvasUtil","createURL","draw","canvas","document","createElement","ctx","getContext","toDataURL","EditDialog","_EditDialog","CANVAS_WIDTH","Component","ps","ls","curSeed","units","focusUnit","seeds","focusSeed","curLayer","layers","focusLayer","setLs","useState","startX","startY","circle","invalidate","useMemo","method","radX","radY","dir","divNum","mode","deligatePoint","clientRect","clientX","clientY","WIDTH","rate","left","top","drawPoint","x","y","pars","setStartPoint","assert","cir","Math","abs","release","console","log","calcCircle","floor","rad","PI","cos","sin","_Wnd","onMouseDown","rect","currentTarget","getClientRects","onMouseMove","onMouseUp","onTouchStart","t","touches","onTouchMove","onTouchEnd","Sketch","setup","p5","canvasParentRef","createCanvas","parent","background","frameRate","noStroke","fill","layer","par","barrColor","ellipse","SetterFrame","isDetail","thumbs","getNextTime","time","u","reduce","prev","cur","curUnit","getCurSeed","getCurLayer","_Wrap","unit","seed","j","_Box","isFocus","onContextMenu","getThumbJsx","thumb","_Thumb","src","rising","seedColor","spread","delay","splice","JSON","parse","stringify","start","_Blind","_ParamRecord","_ParamLabel","_InputRange","min","max","step","_InputColor","bgColor","_WndWrap","beginPath","arc","strokeStyle","stroke","img","PlayerFrame","_PlayerFrame","getRgbFromColorCode","code","parseInt","substring","Vec","constructor","dirRad","len","v","this","syncVecToRad","atan2","sqrt","Color","r","g","b","a","getRGBA","Particle","pos","vec","radius","extend","prevPos","timer","isLive","histories","nextUnitIndex","req","createTracer","ext","limit","random","startColor","endColor","rangeRad","modulate","self","radRate","createBarrage","sr","sg","sb","er","eg","eb","barrExt","radian","lenRate","rSub","gSub","bSub","limitRate","createEmbers","createDust","randNum","secondRate","shadeNum","interval","seedExt","textSize","back","SystemEntry","screen","setScreen","adjLeft","adjTop","ref","useRef","update","current","getBoundingClientRect","clientWidth","clientHeight","cw","ch","isFitSide","window","addEventListener","setterFrame","_Frame","_Contents","App","oncontextmenu","onkeydown","ctrlKey","includes","key","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"8NAAgD,IAAAA,GAAA,SAAAC,GAIrC,MAAMC,EAAUD,EAAAC,WAAG,GACbC,EAAWF,EAAAE,YAAG,GAGdC,GAFUH,EAAAI,WAAG,GAEJJ,EAAAG,UAAGE,YAAGC,MAAAC,YAAA,+JAQAP,EAAAQ,gBAAGH,YAAGI,MAAAF,YAAA,wGAC5BJ,EAEWF,GAIYD,EAAAU,iBAAGL,YAAGM,MAAAJ,YAAA,wGAC7BJ,EAEWD,GAIcF,EAAAY,mBAAGP,YAAGQ,MAAAN,YAAA,mEAGnC,CAjC0C,CAEtCR,MAAM,KAiCDA,QAEce,IAAOC,IAAGC,MAAAT,YAAA,2EAMhBO,IAAOC,IAAGE,MAAAV,YAAA,sCAIVO,IAAOC,IAAGG,MAAAX,YAAA,wDAKDF,YAAGc,MAAAZ,YAAA,iJAUFF,YAAGe,MAAAb,YAAA,uMAGnBR,EAAOG,aAQIG,YAAGgB,MAAAd,YAAA,wD,uFCtEG,IAAAe,GAAA,IAAAC,OAExBD,QAAQ,KAOcE,gBAAIC,IAC5B,IAAIC,GAAS,EAOb,OANAD,EAAWE,SAAQC,IACf,GAAIA,EAAUC,OAAOC,OAAS,EAE1B,OADAJ,GAAS,EACF,CACX,IAEGA,CAAM,EAGYH,GAAAQ,iBAAIC,IAc1B,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACF,MAAMC,EAAuB,QAAhBP,EAAAD,EAAMS,kBAAU,IAAAR,KAAY,WAAa,OAEhDS,EAA4B,QAAlBR,EAAGF,EAAMW,iBAAS,IAAAT,IAAI,GAChCL,EAASG,EAAMJ,UAAUC,OACzBe,GAA8B,QAAjBT,EAACH,EAAMY,kBAAU,IAAAT,IAAI,IAAIU,KAAIC,GAAOA,EAAIC,QAErDC,EAAaD,IACf,MAAMlB,EAAmC,GAMzC,OALAa,EAAWf,SAAQsB,IACVA,EAAUC,QAAQH,IACnBlB,EAAOsB,KAAKF,EAAUG,UAC1B,IAEGvB,CAAM,EAMjB,OAJAwB,qBAAU,KACNrB,EAAMJ,UAAUC,OAASmB,EAAUhB,EAAMJ,UAAUmB,OACnDf,EAAMsB,aAAa,IAAKtB,EAAMJ,WAAY,GAC3CgB,GAECW,gBAACC,GAAO,CACJC,SAAwB,QAAhBrB,EAAEJ,EAAMyB,gBAAQ,IAAArB,KACxBsB,WAAW,EACXC,UAA0B,QAAftB,EAACL,EAAM4B,gBAAQ,IAAAvB,KAAa,SAAW,OAClDwB,UAA0B,QAAjBvB,EAAEN,EAAM6B,iBAAS,IAAAvB,IAAI,EAAEwB,SAAA,MAEXC,GAApB/B,EAAMgC,WAA0BC,eAAAC,YAAA,IAAQD,eAACE,GAAW,CAAAL,SAAE9B,EAAMgC,aAC7DC,eAACG,GAAc,CACX5B,KAAMA,EACNO,MAAOf,EAAMJ,UAAUmB,MACvBsB,cAA8BN,GAApB/B,EAAMgC,WAChBM,MAAOtC,EAAMsC,MACbV,SAAwB,QAAhBrB,EAAEP,EAAM4B,gBAAQ,IAAArB,KACxBgC,YAAavC,EAAMuC,YACnBC,SAAWC,IACP,MAAM1B,EAAQ0B,EAAEC,OAAO3B,MACvBf,EAAMJ,UAAUmB,MAAQA,EACxBf,EAAMJ,UAAUC,OAASmB,EAAUD,GACnCf,EAAMsB,aAAa,IAAKtB,EAAMJ,WAAY,EAE9CwB,UAA6B,IAAlBvB,EAAOC,YAAeiC,EAAYlC,EAAO,GACpD8C,SAAU3C,EAAM4C,eAEd,EAKCrD,GAAAsD,OAAI7C,IAKhB,IAAD8C,EAAAC,EAAAC,EACF,OACIf,eAACT,GAAO,CACJC,SAAwB,QAAhBqB,EAAE9C,EAAMyB,gBAAQ,IAAAqB,KACxBpB,WAAW,EACXC,UAA0B,QAAjBoB,EAAE/C,EAAM2B,iBAAS,IAAAoB,IAAI,OAC9BlB,UAA0B,QAAjBmB,EAAEhD,EAAM6B,iBAAS,IAAAmB,IAAI,EAAElB,SAE/B9B,EAAMiD,KACD,EAIK1D,GAAA2D,WAAIlD,IAQpB,IAADmD,EAAAC,EAAAC,EAAAC,EACF,OACI/B,gBAACC,GAAO,CACJC,SAAwB,QAAhB0B,EAAEnD,EAAMyB,gBAAQ,IAAA0B,KACxBzB,UAA0B,QAAjB0B,EAAEpD,EAAM0B,iBAAS,IAAA0B,KAC1BzB,UAA0B,QAAjB0B,EAAErD,EAAM2B,iBAAS,IAAA0B,IAAI,OAC9BxB,UAA0B,QAAjByB,EAAEtD,EAAM6B,iBAAS,IAAAyB,IAAI,EAAExB,SAAA,MAEXC,GAApB/B,EAAMgC,WAA0BC,eAAAC,YAAA,IAAQD,eAACE,GAAW,CAACoB,WAAYvD,EAAMuD,WAAWzB,SAAE9B,EAAMgC,aAC1FhC,EAAMiD,MACD,EAII1D,GAAAiE,UAAIxD,IAYnB,IAADyD,EAAAC,EAAAC,EAAAC,EAAAC,EACF,IAAIrD,EAAuB,QAAhBiD,EAAAzD,EAAMS,kBAAU,IAAAgD,KAAY,WAAa,OAClC,QAAlBC,EAAI1D,EAAM8D,gBAAQ,IAAAJ,OACdlD,EAAO,UAGX,MAAME,EAA4B,QAAlBiD,EAAG3D,EAAMW,iBAAS,IAAAgD,IAAI,GAChC9D,EAASG,EAAMJ,UAAUC,OACzBe,GAA8B,QAAjBgD,EAAC5D,EAAMY,kBAAU,IAAAgD,IAAI,IAAI/C,KAAIC,GAAOA,EAAIC,QAW3DM,qBAAU,KACNrB,EAAMJ,UAAUC,OAVDkB,KACf,MAAMlB,EAAmC,GAMzC,OALAa,EAAWf,SAAQsB,IACVA,EAAUC,QAAQH,IACnBlB,EAAOsB,KAAKF,EAAUG,UAC1B,IAEGvB,CAAM,EAGYmB,CAAUhB,EAAMJ,UAAUmB,OACnDf,EAAMsB,aAAa,IAAKtB,EAAMJ,WAAY,GAC3CgB,EAAWmD,OAAO/D,EAAMJ,UAAUmB,QAErC,IAAIA,EAAQf,EAAMJ,UAAUmB,MAE5B,OACIkB,eAAC+B,GAAW,CACRxD,KAAMA,EACNO,MAAOA,EACPuB,MAAkB,QAAbuB,EAAE7D,EAAMsC,aAAK,IAAAuB,IAAI,IACtBtB,YAAavC,EAAMuC,YACnBC,SAAWC,IACP,IAAI1B,EAAQ0B,EAAEC,OAAO3B,MAErBf,EAAMJ,UAAUmB,MAAiB,WAATP,EAAoBO,EAAQkD,OAAOlD,GAAOmD,WAElElE,EAAMsB,aAAa,IAAKtB,EAAMJ,WAAY,EAE9CwB,UAA6B,IAAlBvB,EAAOC,YAAeiC,EAAYlC,EAAO,GACpD8C,SAAU3C,EAAM4C,WAChBuB,WAAYnE,EAAMmE,YACpB,EAKW5E,GAAA6E,SAAIpE,IAYlB,IAADqE,EAAAC,EAAAC,EAAAC,EACF,MAAM9D,EAA4B,QAAlB2D,EAAGrE,EAAMW,iBAAS,IAAA0D,IAAI,GAChCxE,EAASG,EAAMJ,UAAUC,OACzBe,GAA8B,QAAjB0D,EAACtE,EAAMY,kBAAU,IAAA0D,IAAI,IAAIzD,KAAIC,GAAOA,EAAIC,QACrD0D,EAA2B,QAAlBF,EAAGvE,EAAMyE,iBAAS,IAAAF,KAC3BG,EAAO1E,EAAM0E,KAAKC,QAmBxB,OAlBIF,GAAWC,EAAKE,QAAQ,CAAE7D,MAAO,GAAI8D,UAAW,KAYpDxD,qBAAU,KAENrB,EAAMJ,UAAUC,OAZDkB,KACf,MAAMlB,EAAmC,GAMzC,OALAa,EAAWf,SAAQsB,IACVA,EAAUC,QAAQH,IACnBlB,EAAOsB,KAAKF,EAAUG,UAC1B,IAEGvB,CAAM,EAKYmB,CAAUhB,EAAMJ,UAAUmB,OACnDf,EAAMsB,aAAa,IAAKtB,EAAMJ,WAAY,GAC3CgB,EAAWmD,OAAO/D,EAAMJ,UAAUmB,QAGjCkB,eAAC6C,GAAa,CACV/D,MAAOf,EAAMJ,UAAUmB,MACvBuB,MAAkB,QAAbkC,EAAExE,EAAMsC,aAAK,IAAAkC,IAAI,IACtBjC,YAAavC,EAAMuC,YACnBC,SAAWC,IACP,MAAM1B,EAAQ0B,EAAEC,OAAO3B,MACvBf,EAAMJ,UAAUmB,MAAQA,EAExBf,EAAMsB,aAAa,IAAKtB,EAAMJ,WAAY,EAG9CwB,UAA6B,IAAlBvB,EAAOC,YAAeiC,EAAYlC,EAAO,GACpD8C,SAAU3C,EAAM4C,WAChBuB,WAAYnE,EAAMmE,WAAWrC,SAC/B4C,EAAK7D,KAAI,CAACkE,EAAMC,KAAO,IAADC,EAAAC,EACpB,OACIjD,eAACkD,GAAO,CACJpE,MAAOgE,EAAKhE,MACZqE,SAAyB,QAAjBH,EAAEF,EAAKM,kBAAU,IAAAJ,KACzBI,WAA2B,QAAjBH,EAAEH,EAAKM,kBAAU,IAAAH,KAAUpD,SACvCiD,EAAKF,WAJOG,EAIa,KAEhB,EAWFzF,GAAA+F,aAAItF,IAKtB,IAADuF,EAAAC,EACF,OACIvD,eAACT,GAAO,CACJC,UAAU,EACVC,WAAW,EACXC,UAA0B,QAAjB4D,EAAEvF,EAAM2B,iBAAS,IAAA4D,IAAI,QAC9B1D,UAA0B,QAAjB2D,EAAExF,EAAM6B,iBAAS,IAAA2D,IAAI,EAAE1D,SAE/B9B,EAAMyF,QAAQ5E,KAAI,CAAC6E,EAAQV,KAAO,IAADW,EAC9B,OACI1D,eAAC2D,GAAO,CAEJhE,SAA8B,WAApB5B,EAAM2B,UAChBF,SAAyB,QAAjBkE,EAAED,EAAOjE,gBAAQ,IAAAkE,KACzBrD,MAAOoD,EAAOpD,MACduD,QAASH,EAAOI,SAAShE,SAC3B4D,EAAOK,OALAf,EAKgB,KAG3B,EAIEzF,GAAAyG,QAAIhG,IAKjB,IAADiG,EAAAC,EAAAC,EACF,OACIlE,eAACT,GAAO,CACJC,UAAU,EACVC,WAAW,EACXC,UAA0B,QAAfsE,EAACjG,EAAM4B,gBAAQ,IAAAqE,KAAa,SAAW,OAClDpE,UAA0B,QAAjBqE,EAAElG,EAAM6B,iBAAS,IAAAqE,IAAI,EAAEpE,SAEhCG,eAACmE,GAAQ,CACLxE,SAAwB,QAAhBuE,EAAEnG,EAAM4B,gBAAQ,IAAAuE,KAAUrE,SACpC9B,EAAMqG,WACF,EAIM9G,GAAA+G,YAAItG,IAMrB,IAADuG,EAAAC,EAAAC,EACF,OACIxE,eAACT,GAAO,CACJC,UAAU,EACVC,WAAW,EACXC,UAA0B,QAAf4E,EAACvG,EAAM4B,gBAAQ,IAAA2E,KAAa,SAAW,OAClD1E,UAA0B,QAAjB2E,EAAExG,EAAM6B,iBAAS,IAAA2E,IAAI,EAAE1E,SAEhCG,eAACmE,GAAQ,CACLM,QAAQ,EACRb,QAAS7F,EAAM2G,YACf/E,SAAwB,QAAhB6E,EAAEzG,EAAM4B,gBAAQ,IAAA6E,KAAU3E,SACpC9B,EAAMqG,WACF,EAIM9G,GAAAqH,YAAI5G,IAIrB,IAAD6G,EAEF,OAAQtF,gBAAAW,YAAA,CAAAJ,SAAA,CACJG,eAAC6E,GAAW,CAAAhF,SAAE9B,EAAM+G,QACpB9E,eAAC+E,GAAY,CAACvF,SAAwB,QAAhBoF,EAAE7G,EAAMyB,gBAAQ,IAAAoF,KAAS/E,SAAE9B,EAAMiH,aACxD,EAGe1H,GAAA2H,UAAIlH,IAGnB,IAADmH,EACF,MAAMC,EAAqB,QAAfD,EAAGnH,EAAMoH,cAAM,IAAAD,IAAI,GAE/B,OAAQlF,eAAAC,YAAA,CAAAJ,SACJG,eAACoF,GAAQ,CAACD,OAAQA,EAAQE,MAFhB,UAE6BxF,SAClC9B,EAAMuH,YAAY1G,KAAI,CAAC2G,EAAMxC,IACnBzD,gBAAA,QAAAO,SAAA,CAAe0F,EAAKvF,eAAA,WAAT+C,QAG3B,EAGYzF,GAAAkI,OAAIzH,IAOhB,IAAD0H,EAAAC,EACF,MAAMC,EAA6B,QAAnBF,EAAG1H,EAAM4H,kBAAU,IAAAF,KAC7B5B,EAAW8B,GAAc5H,EAAM6H,MAAQ,OAAY7H,EAAM8F,SAC/D,OACI7D,eAAC6F,GAAO,CACJF,WAAYA,EACZC,MAAO7H,EAAM6H,MACbpG,SAAwB,QAAhBkG,EAAE3H,EAAMyB,gBAAQ,IAAAkG,KACxBrF,MAAOtC,EAAMsC,MACbuD,QAASC,EAAShE,SACpB9B,EAAM+F,OAAgB,EAKrBzG,UAGf,MAAMkC,GAAU1C,IAAOC,IAAGC,MAAAT,YAAA,oNAOpByB,GAASA,EAAM0B,UAAY,GAAKrD,YAAGY,MAAAV,YAAA,wCAKvByB,GAASA,EAAM6B,YAG3B7B,GAASA,EAAMyB,SAAW,GAAK1D,EAAOa,qBAC1BoB,GAASA,EAAM2B,YAG3BQ,GAAcrD,IAAOC,IAAGG,MAAAX,YAAA,+YAKjByB,IAAK,IAAA+H,EAAA,OAAoB,QAApBA,EAAI/H,EAAMuD,kBAAU,IAAAwE,IAAI,GAAG,GACvChK,EAAOW,kBAYP0D,GAAiBtD,IAAOkJ,MAAK7I,MAAAZ,YAAA,ygBAS7ByB,GAAUA,EAAMqC,SACdhE,YAAGgB,MAAAd,YAAA,kDADsBF,YAAGe,MAAAb,YAAA,gBAI9ByB,QAAwB+B,GAAf/B,EAAMsC,MAAqB,GAAKjE,YAAGC,MAAAC,YAAA,oCACjCyB,EAAMsC,SAWCtC,IAChB,QAAuB+B,GAAnB/B,EAAMoB,UAAwB,MAAO,UAErC,OAAQpB,EAAMoB,WACV,IAAK,WAAY,MAAO,UACxB,IAAK,SAAU,MAAO,UACtB,IAAK,QAAS,MAAO,UACrB,IAAK,WAAY,MAAO,UAEhC,IAKCpB,GAAUA,EAAM4B,SAEjBvD,YAAGM,MAAAJ,YAAA,QAFyBF,YAAGI,MAAAF,YAAA,2CAIjCyB,GAAUA,EAAM2C,SAAgBtE,YAAGQ,MAAAN,YAAA,oIAAR,KAY3ByF,GAAclF,IAAOkJ,MAAKC,MAAA1J,YAAA,ohBAQnByB,GAASA,EAAMsC,QAETtC,IAAK,IAAAkI,EAAA,OAAoB,QAApBA,EAAIlI,EAAMmE,kBAAU,IAAA+D,IAAI,CAAC,IASzBlI,IAChB,QAAuB+B,GAAnB/B,EAAMoB,UAAwB,MAAO,UAErC,OAAQpB,EAAMoB,WACV,IAAK,WAAY,MAAO,UACxB,IAAK,SAAU,MAAO,UACtB,IAAK,QAAS,MAAO,UACrB,IAAK,WAAY,MAAO,UAEhC,IAKFpB,GAAUA,EAAM2C,SAAgBtE,YAAG8J,MAAA5J,YAAA,oIAAR,KAY3BuG,GAAgBhG,IAAOsJ,OAAMC,MAAA9J,YAAA,ohBAQtByB,GAASA,EAAMsC,QAETtC,IAAK,IAAAsI,EAAA,OAAoB,QAApBA,EAAItI,EAAMmE,kBAAU,IAAAmE,IAAI,CAAC,IASzBtI,IAChB,QAAuB+B,GAAnB/B,EAAMoB,UAAwB,MAAO,UAErC,OAAQpB,EAAMoB,WACV,IAAK,WAAY,MAAO,UACxB,IAAK,SAAU,MAAO,UACtB,IAAK,QAAS,MAAO,UACrB,IAAK,WAAY,MAAO,UAEhC,IAKFpB,GAAUA,EAAM2C,SAAgBtE,YAAGkK,MAAAhK,YAAA,mKAAR,KAa3B4G,GAAUrG,IAAO0J,OAAMC,MAAAlK,YAAA,mBAGvByB,GAAUA,EAAMqF,WAAkBhH,YAAGqK,MAAAnK,YAAA,yCAAR,KAK7B6H,GAAWtH,IAAOC,IAAG4J,MAAApK,YAAA,uYAOVR,EAAOG,aAWlB8B,GAAUA,EAAM4B,SAEdvD,YAAGuK,MAAArK,YAAA,QAFsBF,YAAGwK,MAAAtK,YAAA,2CAI9ByB,GAAUA,EAAM0G,OAAcrI,YAAGyK,MAAAvK,YAAA,mKAAR,KAoBzBqH,IAVc9G,IAAOC,IAAGgK,MAAAxK,YAAA,+LAUdO,IAAOC,IAAGiK,MAAAzK,YAAA,0cAKpBR,EAAOW,kBACPsB,QAAwB+B,GAAf/B,EAAMsC,MAAqBjE,YAAG4K,MAAA1K,YAAA,wCAErCF,YAAG6K,MAAA3K,YAAA,oCACMyB,EAAMsC,SASjBtC,GAAUA,EAAM4B,SAEdvD,YAAG8K,MAAA5K,YAAA,QAFsBF,YAAG+K,MAAA7K,YAAA,2CAK9ByB,GAASA,EAAMyB,SAAW,GAAK1D,EAAOa,sBAOtCkJ,GAAUhJ,IAAOC,IAAGsK,MAAA9K,YAAA,mRAMpBR,EAAOW,kBACPsB,QAAwB+B,GAAf/B,EAAMsC,MAAqBjE,YAAGiL,MAAA/K,YAAA,wCAErCF,YAAGkL,MAAAhL,YAAA,oCACMyB,EAAMsC,SAOjBtC,GAAUA,EAAM4H,WAEdvJ,YAAGmL,MAAAjL,YAAA,mEACiByB,GAAUA,EAAM6H,MAAsB,UAAd,cACnC7H,GAAUA,EAAM6H,MAAoB,UAAZ,YAJNxJ,YAAGoL,MAAAlL,YAAA,8CACVyB,GAAUA,EAAM6H,MAAsB,UAAd,gBAO9C7H,GAASA,EAAMyB,SAAW,GAAK1D,EAAOa,qBAElCoB,GAAUA,EAAM4H,WAEdvJ,YAAGqL,MAAAnL,YAAA,+EACiByB,GAAUA,EAAM6H,MAAsB,UAAd,cACnC7H,GAAUA,EAAM6H,MAAoB,UAAZ,YAJNxJ,YAAGsL,MAAApL,YAAA,sDACVyB,GAAUA,EAAM6H,MAAsB,UAAd,gBAQlDf,GAAchI,IAAOC,IAAG6K,QAAArL,YAAA,kIAExBR,EAAOS,iBAMPwI,GAAelI,IAAOC,IAAG8K,QAAAtL,YAAA,mQAYzByB,GAASA,EAAMyB,SAAW,GAAK1D,EAAOa,qBAGtCyI,GAAWvI,IAAOC,IAAG+K,QAAAvL,YAAA,4SASbyB,GAASA,EAAMoH,QAIZrJ,EAAOE,YACX+B,GAASA,EAAMsH,Q,oBCrsBCyC,EAAAC,eAAG,IACFD,EAAAE,gBAAG,KACTF,EAAAG,UAAG,GAEAH,EAAAI,aAAG,GACDJ,EAAAK,eAAG,IAS7BL,EAAAM,aAPM,WAEL,QAAIC,UAAUC,UAAUC,MAAM,yBAKhC,CAAC,C,CAhBOC,QAAU,KAmBLA,U,QCtBLC,QAAU,KASMC,UAAG,CAACrI,EAAe8E,EAAgBwD,KACrD,MAAMC,EAASC,SAASC,cAAc,UAChCC,EAAMH,EAAOI,WAAW,MAI9B,OAHAJ,EAAOvI,MAAQA,EACfuI,EAAOzD,OAASA,EAChBwD,EAAKI,GACEH,EAAOK,WAAW,EAIlBR,I,GAAAA,M,sCCde,IAAAS,IAAA,SAAAC,GAmB1B,MAAMC,EAAeZ,GAAWT,eAAiB,GAE3BoB,EAAAE,UAAItL,IAItB,MAAMuL,EAAKvL,EAAMwL,GAEXC,EADUF,EAAGG,MAAMH,EAAGI,WACJC,MAAML,EAAGM,WAC3BC,EAAWL,EAAQM,OAAOR,EAAGS,aAI5BR,EAAIS,GAASC,mBAAsB,CACtCC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,OAGNC,EAAaA,IAAML,EAAM,IAAKT,IAGpCe,mBAAQ,KACJf,EAAGa,OAA6B,WAApBP,EAASU,OAAsB,KAAO,CAC9CC,KAAM,IACNC,KAAM,IACNC,IAAK,EACLC,OAAQ,EACRC,KAAM,OACT,GACF,CAACf,EAASU,SAEb,MAAMM,EAAgBA,CAACC,EAAqBC,EAAiBC,EAAiBnH,KAC1E,MAAMoH,EAAQzC,GAAWT,eAAiB,GACpCmD,EAAOD,EAAQH,EAAWzK,MAMhCwD,GAFcoH,EAAQ,IAFVH,EAAWK,KAAOJ,GAAWG,GAG3BD,EAAQ,IAFVH,EAAWM,IAAMJ,GAAWE,EAGpB,EAElBG,EAAYA,CAACP,EAAqBC,EAAiBC,KACrDH,EAAcC,EAAYC,EAASC,GAAS,CAACM,EAAWC,KACvC1B,EAAS2B,KACjBtM,KAAK,CAAEoM,IAAGC,MACflB,GAAY,GACd,EAGAoB,EAAgBA,CAACX,EAAqBC,EAAiBC,KACzDH,EAAcC,EAAYC,EAASC,GAAS,CAACM,EAAWC,KACpDhC,EAAGW,OAASoB,EACZ/B,EAAGY,OAASoB,EACZG,KAAoB,MAAbnC,EAAGa,OAAgB,mFAC1B,MAAMuB,EAAMpC,EAAGa,OACfb,EAAGW,OAASoB,EACZ/B,EAAGY,OAASoB,EACRK,KAAKC,IAAIF,EAAInB,KAAOc,IAAM,IAAMM,KAAKC,IAAIF,EAAIlB,KAAOc,IAAM,GAC1DI,EAAIf,KAAO,MAEXe,EAAIf,KAAO,MAEfP,GAAY,GACd,EAGAyB,EAAUA,CAAChB,EAAqBC,EAAiBC,KACnDH,EAAcC,EAAYC,EAASC,GAAS,CAACM,EAAWC,KACpDhC,EAAGW,OAASoB,EACZ/B,EAAGY,OAASoB,EACZG,KAAoB,MAAbnC,EAAGa,OAAgB,mFAC1B,MAAMuB,EAAMpC,EAAGa,OACf2B,QAAQC,IAAI,WACZL,EAAIf,KAAO,OACXP,GAAY,GACd,EAGA4B,EAAaA,CAACnB,EAAqBC,EAAiBC,KACtDH,EAAcC,EAAYC,EAASC,GAAS,CAACM,EAAWC,KACpDG,KAAoB,MAAbnC,EAAGa,OAAgB,mFAC1B,MAAMuB,EAAMpC,EAAGa,OACE,QAAbuB,EAAIf,MACJrB,EAAGa,OAAOI,MAASc,EAAI/B,EAAGW,OAC1BX,EAAGa,OAAOK,MAASc,EAAIhC,EAAGY,OAC1BZ,EAAGW,OAASoB,EACZ/B,EAAGY,OAASoB,GACQ,QAAbI,EAAIf,OACXrB,EAAGa,OAAOO,OAASiB,KAAKM,MAAgC,GAA1BN,KAAKC,IAAItC,EAAGW,OAASoB,IACnD/B,EAAGa,OAAOM,IAAMnB,EAAGY,OAAa,IAAJoB,EACxBhC,EAAGa,OAAOO,QAAU,IAAGpB,EAAGa,OAAOO,OAAS,IAIlDd,EAAS2B,KAAK3N,OAAS,EACvB,IAAK,IAAIkF,EAAI,EAAGA,EAAIwG,EAAGa,OAAOO,OAAQ5H,IAAK,CACvC,MAAMoJ,EAAMpJ,EAAI6I,KAAKQ,GAAK,EAAI7C,EAAGa,OAAOO,OAASpB,EAAGa,OAAOM,IACrDY,EAAIM,KAAKS,IAAIF,GAAO5C,EAAGa,OAAOI,KAC9Be,EAAIK,KAAKU,IAAIH,GAAO5C,EAAGa,OAAOK,KACpCZ,EAAS2B,KAAKtM,KAAK,CAAEoM,IAAGC,KAC5B,CACAlB,GAAY,GACd,EAGN,OACIrK,eAACuM,GAAI,CACDC,YAAchM,IACV,MAAMiM,EAAOjM,EAAEkM,cAAcC,iBAAiB,GAC9C,OAAQ9C,EAASU,QACb,IAAK,OACDc,EAAUoB,EAAMjM,EAAEuK,QAASvK,EAAEwK,SAC/B,MACF,IAAK,SACDS,EAAcgB,EAAMjM,EAAEuK,QAASvK,EAAEwK,SAEzC,EAEJ4B,YAAcpM,IACV,IAAKA,EAAEgD,QAAS,OAChB,MAAMiJ,EAAOjM,EAAEkM,cAAcC,iBAAiB,GAC9C,OAAQ9C,EAASU,QACb,IAAK,OACDc,EAAUoB,EAAMjM,EAAEuK,QAASvK,EAAEwK,SAC/B,MACF,IAAK,SACDiB,EAAWQ,EAAMjM,EAAEuK,QAASvK,EAAEwK,SAEtC,EAEJ6B,UAAYrM,IACR,MAAMiM,EAAOjM,EAAEkM,cAAcC,iBAAiB,GAC9C,OAAQ9C,EAASU,QACb,IAAK,OACH,MACF,IAAK,SACDuB,EAAQW,EAAMjM,EAAEuK,QAASvK,EAAEwK,SAEnC,EAEJ8B,aAAetM,IACX,MAAMiM,EAAOjM,EAAEkM,cAAcC,iBAAiB,GACxCI,EAAIvM,EAAEwM,QAAQ,GACpB,OAAQnD,EAASU,QACb,IAAK,OACH,MACF,IAAK,SACDkB,EAAcgB,EAAMM,EAAEhC,QAASgC,EAAE/B,SAEzC,EAEJiC,YAAczM,IACV,MAAMiM,EAAOjM,EAAEkM,cAAcC,iBAAiB,GACxCI,EAAIvM,EAAEwM,QAAQ,GACpB,OAAQnD,EAASU,QACb,IAAK,OACDc,EAAUoB,EAAMM,EAAEhC,QAASgC,EAAE/B,SAC/B,MACF,IAAK,SACDiB,EAAWQ,EAAMM,EAAEhC,QAASgC,EAAE/B,SAEtC,EAEJkC,WAAa1M,IACT,MAAMiM,EAAOjM,EAAEkM,cAAcC,iBAAiB,GACxCI,EAAIvM,EAAEwM,QAAQ,GACpB,OAAQnD,EAASU,QACb,IAAK,OACH,MACF,IAAK,SACDuB,EAAQW,EAAMM,EAAEhC,QAASgC,EAAE/B,SAEnC,EACFnL,SAEFG,eAACmN,KAAM,CAACC,MAAOA,CAACC,EAAaC,KACzBD,EAAGE,aAAanE,EAAcA,GAAcoE,OAAOF,GACnDD,EAAGI,WAAW,WAEdJ,EAAGK,UAAU,GAAG,EACjB/E,KAAO0E,IAON,GANAA,EAAGI,WAAW,WACdJ,EAAGM,WAEHN,EAAGO,KAAK,QACRP,EAAGZ,KAAKrD,EAAe,EAAI,GAAIA,EAAe,EAAI,GAAI,GAAI,IAEzC,MAAbG,EAAGa,OAAgB,CACnB,MAAMuB,EAAMpC,EAAGa,OACf,OAAQuB,EAAIf,MACR,IAAK,OAAUyC,EAAGO,KAAK,aAAgB,MACvC,IAAK,MAASP,EAAGO,KAAK,aAAgB,MACtC,IAAK,MAASP,EAAGO,KAAK,aAAgB,MACtC,IAAK,OAAUP,EAAGO,KAAK,aAE3BP,EAAGZ,KAAKrD,EAAe,EAAIuC,EAAInB,KAAMpB,EAAe,EAAIuC,EAAIlB,KAAiB,EAAXkB,EAAInB,KAAqB,EAAXmB,EAAIlB,MAEpF4C,EAAGO,KAAK,WACRP,EAAGZ,KAAKrD,EAAe,EAAIuC,EAAInB,KAAO,GAAIpB,EAAe,EAAIuC,EAAIlB,KAAO,GAAI,GAAI,GACpF,CAEAjB,EAAQM,OAAOpM,SAAQmQ,IACnBA,EAAMrC,KAAK5M,KAAKkP,IACZ,MAAMxC,EAAIlC,EAAe,EAAI0E,EAAIxC,EAC3BC,EAAInC,EAAe,EAAI0E,EAAIvC,EAEjC8B,EAAGO,KAAKC,EAAME,UAAU,IACxBV,EAAGW,QAAQ1C,EAAGC,EAAG,GAAI,GAAG,GAC1B,GACJ,KAEH,CAEd,CAzOyB,CAGpBrC,QAAU,KAyOLA,UAIf,MAAMqD,GAAO1P,IAAOC,IAAGC,QAAAT,YAAA,gM,wCC5OD,IAAA2R,IACZA,QAAW,KAuCK5E,UAAItL,IAKtB,MAAOwL,EAAIS,GAASC,mBAAqB,CACrCR,MAAO,GACPC,WAAY,EACZE,WAAY,EACZG,WAAY,EACZmE,UAAU,EACVC,OAAQ,KAEN9D,EAAaA,IAAML,EAAM,IAAKT,IAE9B6E,EAAcA,KAChB,IAAIC,EAAO,EAMX,OALwB,IAApB9E,EAAGE,MAAM5L,SACTwQ,EAAO9E,EAAGE,MACL7K,KAAI0P,GAAKA,EAAED,OACXE,QAAO,CAACC,EAAMC,IAAQD,EAAOC,EAAMA,EAAMD,GAAM,GAAK,KAEtDH,CAAI,EAGf,IAAKtQ,EAAM0B,UAAW,OAAOO,eAAAC,YAAA,IAE7B,MAAMyO,GAA4B,IAAlBnF,EAAGG,UAAmB,KAAOH,EAAGE,MAAMF,EAAGG,WACnDF,EAAqB,MAAXkF,EAAkB,KAAOA,EAAQ/E,MAAMJ,EAAGK,WACpDC,EAAsB,MAAXL,EAAkB,KAAOA,EAAQM,OAAOP,EAAGQ,YAMtD4E,EAAaA,KACfjD,KAAkB,MAAXlC,EAAiB,iFACjBA,GAELoF,EAAcA,KAChBlD,KAAmB,MAAZ7B,EAAkB,kFAClBA,GASX,OACIvK,gBAACuP,GAAK,CAAAhP,SAAA,CACD0J,EAAGE,MAAM7K,KAAI,CAACkQ,EAAM/L,IAGb/C,eAACT,GAAO,CAAAM,SACHiP,EAAKnF,MAAM/K,KAAI,CAACmQ,EAAMC,IAOfhP,eAACiP,GAAI,CACDC,QAAS3F,EAAGG,YAAc3G,GAAKwG,EAAGK,YAAcoF,EAChDpL,QAASA,KACL2F,EAAGG,UAAY3G,EACfwG,EAAGK,UAAYoF,EACf3E,GAAY,EAEhB8E,cAAeA,KACX5F,EAAG2E,UAAW,EACd7D,GAAY,EACdxK,SAfUuP,MAChB,MAAMC,EAAQ9F,EAAG4E,OAAOpL,GAAGiM,GAC3B,MAAiB,KAAVK,EAAerP,eAAAC,YAAA,IAAQD,eAACsP,GAAM,CAACC,IAAKF,GAAS,EAe/CD,IAZMJ,MARTjM,KA2BtB/C,eAAC3C,GAASgG,aAAY,CAAC3D,UAAU,OAAO8D,QAAS,CAC7C,CACIM,MAAO,QAASzD,MAAO,IAAKb,SAAU+J,EAAGE,MAAM5L,OAAS,EAAGgG,SAAUA,KACjE0F,EAAGE,MAAMvK,KAAK,CACVyK,MAAO,CACH,CACI6F,OAAQ,EAAGC,UAAW,UAAW3F,OAAQ,CA3C9D,CACHS,OAAQ,OAAQmF,OAAQ,IAAM3B,UAAW,CAAC,UAAW,WAAYvC,KAAM,OA6CvDmE,MAAO,EACPtB,KAAMD,MAEV7E,EAAG4E,OAAOjP,KAAK,CAAC,KAChBqK,EAAGG,UAAYH,EAAGE,MAAM5L,OAAS,EACjC0L,EAAGK,UAAY,EACfS,GAAY,GAGpB,CACIvG,MAAO,QAASzD,MAAO,IAAKb,UAA4B,IAAlB+J,EAAGG,UAAkB7F,SAAUA,KACjE0F,EAAGE,MAAMmG,OAAOrG,EAAGG,UAAW,GAC9BH,EAAG4E,OAAOyB,OAAOrG,EAAGG,UAAW,GAC/BH,EAAGG,WAAa,EAChBH,EAAGK,WAAa,EAChBS,GAAY,GAGpB,CACIvG,MAAO,QAASzD,MAAO,IAAKb,UAA4B,IAAlB+J,EAAGG,WAAoBH,EAAGE,MAAMF,EAAGG,WAAWC,MAAM9L,OAAS,EACnGgG,SAAUA,KACN0F,EAAGE,MAAMF,EAAGG,WAAWC,MAAMzK,KACzB2Q,KAAKC,MAAMD,KAAKE,UAAUxG,EAAGE,MAAMF,EAAGG,WAAWC,MAAMJ,EAAGK,cAE9DL,EAAG4E,OAAO5E,EAAGG,WAAWxK,KAAK,IAC7BqK,EAAGK,UAAYL,EAAGE,MAAMF,EAAGG,WAAWC,MAAM9L,OAAS,EACrDwM,GAAY,GAGpB,CACIvG,MAAO,QAASzD,MAAO,IAAKb,UAA4B,IAAlB+J,EAAGG,WAAoBH,EAAGE,MAAMF,EAAGG,WAAWC,MAAM9L,OAAS,EACnGgG,SAAUA,KACQ0F,EAAGE,MAAMF,EAAGG,WAAWC,MAC/BiG,OAAOrG,EAAGK,UAAW,GAC3BL,EAAG4E,OAAOyB,OAAOrG,EAAGK,UAAW,GAC/BS,GAAY,MAIxBrK,eAAC3C,GAASgG,aAAY,CAAC3D,UAAU,OAAO8D,QAAS,CAC7C,CACIM,MAAO,QAASzD,MAAO,IAAKb,SAAU+J,EAAGE,MAAM5L,OAAS,EAAGgG,SAAUA,KACjE9F,EAAMiS,MAAM,CACRvG,MAAOF,EAAGE,QAEdY,GAAY,MAKtBd,EAAG2E,SACD5O,gBAAC2Q,GAAM,CAAApQ,SAAA,CAYHP,gBAAC4Q,GAAY,CAAArQ,SAAA,CACTG,eAACmQ,GAAW,CAAAtQ,SAAC,iBACbG,eAACoQ,GAAW,CAAC7R,KAAK,QAAQ8R,IAAK,EAAGC,IAAK,EAAGC,KAAM,GAAKzR,MAAO6P,IAAaa,OAAQjP,SAAWC,IACxFmO,IAAaa,OAASxN,OAAOxB,EAAEC,OAAO3B,OACtCuL,GAAY,OAGpB/K,gBAAC4Q,GAAY,CAAArQ,SAAA,CACTG,eAACmQ,GAAW,CAAAtQ,SAAC,eACbG,eAACwQ,GAAW,CAACjS,KAAK,QAAQO,MAAO6P,IAAac,UAAWlP,SAAWC,IAChE+I,EAAGE,MAAMF,EAAGG,WAAWC,MAAMJ,EAAGK,WAAW6F,UAAYjP,EAAEC,OAAO3B,MAChEuL,GAAY,OAGpB/K,gBAAC4Q,GAAY,CAAArQ,SAAA,CACTG,eAACmQ,GAAW,CAAAtQ,SAAC,UACZ8O,IAAa7E,OAAOlL,KAAI,CAACiP,EAAO9K,IAGzB/C,eAAC2D,GAAO,CAAStD,MAAO,GAAIoQ,QAASlH,EAAGQ,aAAehH,EAAI,UAAY,UAAWa,QAASA,KACvF2F,EAAGQ,WAAahH,EAChBsH,GAAY,EACdxK,SAAA,SAAAiC,OAAWiB,EAAI,IAHHA,KAMtB/C,eAAC2D,GAAO,CAACtD,MAAO,GAAIoQ,QAAQ,UAAU7M,QAASA,KAC3C+K,IAAa7E,OAAO5K,KAvIjC,CACHqL,OAAQ,OAAQmF,OAAQ,IAAM3B,UAAW,CAAC,UAAW,WAAYvC,KAAM,KAuIvDnB,GAAY,EACdxK,SAAA,MACFG,eAAC2D,GAAO,CAACtD,MAAO,GAAIoQ,QAAQ,UAAU7M,QAASA,KAC3C+K,IAAa7E,OAAO8F,OAAOrG,EAAGQ,WAAY,GAC1CR,EAAGQ,aACHM,GAAY,EACdxK,SAAA,SAENP,gBAAC4Q,GAAY,CAAArQ,SAAA,CACTG,eAACmQ,GAAW,CAAAtQ,SAAC,WACbG,eAAC2D,GAAO,CAACtD,MAAO,IAAKoQ,QAAkC,SAAzB7B,IAAcrE,OAAoB,UAAY,UAAW3G,QAASA,KAC5F,MAAMmL,EAAOH,IACbG,EAAKxE,OAAS,OACdwE,EAAKvD,KAAK3N,OAAS,EACnBwM,GAAY,EACdxK,SAAC,SACHG,eAAC2D,GAAO,CAACtD,MAAO,IAAKoQ,QAAkC,WAAzB7B,IAAcrE,OAAsB,UAAY,UAAW3G,QAASA,KAC9F,MAAMmL,EAAOH,IACbG,EAAKxE,OAAS,SACdwE,EAAKvD,KAAK3N,OAAS,EACnBwM,GAAY,EACdxK,SAAC,cAEPP,gBAAC4Q,GAAY,CAAArQ,SAAA,CACTG,eAACmQ,GAAW,CAAAtQ,SAAC,iBACbG,eAACoQ,GAAW,CAAC7R,KAAK,QAAQ8R,IAAK,IAAMC,IAAK,GAAKC,KAAM,IAAMzR,MAAO8P,IAAcc,OAAQnP,SAAWC,IAC/FoO,IAAcc,OAAS1N,OAAOxB,EAAEC,OAAO3B,OACvCuL,GAAY,OAGpB/K,gBAAC4Q,GAAY,CAAArQ,SAAA,CACTG,eAACmQ,GAAW,CAAAtQ,SAAC,kBACbG,eAACwQ,GAAW,CAACjS,KAAK,QAAQO,MAAO8P,IAAcb,UAAU,GAAIxN,SAAWC,IACpEoO,IAAcb,UAAU,GAAKvN,EAAEC,OAAO3B,MACtCuL,GAAY,IAEhBrK,eAACwQ,GAAW,CAACjS,KAAK,QAAQO,MAAO8P,IAAcb,UAAU,GAAIxN,SAAWC,IACpEoO,IAAcb,UAAU,GAAKvN,EAAEC,OAAO3B,MACtCuL,GAAY,OAGpBrK,eAAC0Q,GAAQ,CAAA7Q,SACLG,eAACkJ,GAAWG,UAAS,CAACE,GAAIA,EAAIc,WAAYA,MAE9CrK,eAAC3C,GAASgG,aAAY,CAAC3D,UAAU,OAAO8D,QAAS,CAC7C,CACIM,MAAO,QAASzD,MAAO,IAAKwD,SAAUA,KAClC+K,IAAcpD,KAAK3N,OAAS,EAC5BwM,GAAY,GAGpB,CACIvG,MAAO,QAASzD,MAAO,IAAKwD,SAAUA,KAClC0F,EAAG2E,UAAW,EAEd,MAAMjD,EAAQzC,GAAWT,eAAiB,GAC1CwB,EAAG4E,OAAO5E,EAAGG,WAAWH,EAAGK,WAAanB,GAAWC,UAAUuC,EAAOA,GAAQlC,IACxE4F,IAAa7E,OAAOpM,SAAQmQ,IACxBA,EAAMrC,KAAK9N,SAAQoQ,IACf,MAAMxC,EAAIL,EAAQ,EAAI6C,EAAIxC,EACpBC,EAAIN,EAAQ,EAAI6C,EAAIvC,EAC1BxC,EAAI4H,YACJ5H,EAAI6H,IAAItF,EAAGC,EAAG,EAAG,EAAa,EAAVK,KAAKQ,IAAQ,GACjCrD,EAAI8H,YAAchD,EAAME,UAAU,GAClChF,EAAI+H,QAAQ,GACd,GACJ,IAENzG,GAAY,SA5GhBrK,eAAAC,YAAA,MAkHZ,EAKLgO,UAGf,MAAMY,GAAQhS,IAAOC,IAAGC,QAAAT,YAAA,wGAOlBiD,GAAU1C,IAAOC,IAAGE,QAAAV,YAAA,iNAWpB2S,GAAOpS,IAAOC,IAAGG,QAAAX,YAAA,+LAKjByB,GAAUA,EAAMmR,QAAe9S,YAAGc,QAAAZ,YAAA,kDAAR,IAtUd,SAiVZgT,GAASzS,IAAOkU,IAAG5T,QAAAb,YAAA,yEAOnB2T,GAASpT,IAAOC,IAAGM,QAAAd,YAAA,2NAanB4T,GAAerT,IAAOC,IAAGT,QAAAC,YAAA,mLAUzB6T,GAActT,IAAOC,IAAGN,QAAAF,YAAA,kOAYxBqH,GAAU9G,IAAOC,IAAGJ,QAAAJ,YAAA,qXAebyB,GAASA,EAAMsC,QAEJtC,GAASA,EAAM0S,UAMjCL,GAAcvT,IAAOkJ,MAAKnJ,QAAAN,YAAA,wKAS1BkU,GAAc3T,IAAOkJ,MAAKC,QAAA1J,YAAA,mIAQ1BoU,GAAW7T,IAAOC,IAAGoJ,QAAA5J,YAAA,sLAMdkM,GAAWT,eACVS,GAAWT,gBC9ayB,IAAAiJ,IAAA,SAAAC,GAK9C,MAAMC,EAAuBC,GAIlB,CAHCC,SAASD,EAAKE,UAAU,EAAG,GAAI,IAC/BD,SAASD,EAAKE,UAAU,EAAG,GAAI,IAC/BD,SAASD,EAAKE,UAAU,EAAG,GAAI,KAGrCjI,EAAeZ,GAAWT,eAKhC,MAAMuJ,EAIFC,YAAYC,EAAgBC,GAAc,KAH1CC,OAAC,OACDD,SAAG,OACHtF,SAAG,EAECwF,KAAKD,EAAI,CACLpG,EAAGM,KAAKS,IAAImF,GAAUC,EACtBlG,EAAGK,KAAKU,IAAIkF,GAAUC,GAE1BE,KAAKxF,IAAMqF,EACXG,KAAKF,IAAMA,CACf,CACAG,eACID,KAAKxF,IAAMP,KAAKiG,MAAMF,KAAKD,EAAEnG,EAAGoG,KAAKD,EAAEpG,GACvCqG,KAAKF,IAAM7F,KAAKkG,KAAKlG,KAAKC,IAAI8F,KAAKD,EAAEpG,GAAKM,KAAKC,IAAI8F,KAAKD,EAAEpG,GAAKM,KAAKC,IAAI8F,KAAKD,EAAEnG,GAAKK,KAAKC,IAAI8F,KAAKD,EAAEnG,GACxG,EAWJ,MAAMwG,EAMFR,YAAYS,EAAWC,EAAWC,GAAY,KAL9CF,OAAC,OACDC,OAAC,OACDC,OAAC,OACDC,OAAC,EAGGR,KAAKK,EAAIA,EACTL,KAAKM,EAAIA,EACTN,KAAKO,EAAIA,EACTP,KAAKQ,EAAI,GACb,CAEAC,UACI,MAtBS/M,KACb,MAAM2M,GAAK,KAAO3M,EAAM2M,EAAE/P,SAAS,KAAKS,OAAO,GACzCuP,GAAK,KAAO5M,EAAM4M,EAAEhQ,SAAS,KAAKS,OAAO,GACzCwP,GAAK,KAAO7M,EAAM6M,EAAEjQ,SAAS,KAAKS,OAAO,GACzCyP,GAAK,KAAO9M,EAAM8M,EAAElQ,SAAS,KAAKS,OAAO,GAC/C,MAAM,IAANZ,OAAWkQ,GAAClQ,OAAGmQ,GAACnQ,OAAGoQ,GAACpQ,OAAGqQ,EAAC,EAiBbC,CAAQ,CAAEJ,EAAGL,KAAKK,EAAGC,EAAGN,KAAKM,EAAGC,EAAGP,KAAKO,EAAGC,EAAGR,KAAKQ,GAC9D,EAEJ,MAAME,EAgBFd,YAAYe,EAASC,EAAUC,EAAgBC,GAAiB,KAdhEH,SAAG,OACHI,aAAO,OACPH,SAAG,OACHC,YAAM,OAENnN,WAAK,OACLsN,WAAK,OAELC,YAAM,OAENC,eAAS,OAETJ,YAAM,EAGFd,KAAKW,IAAMX,KAAKe,QAAUJ,EAC1BX,KAAKY,IAAMA,EACXZ,KAAKa,OAASA,EACdb,KAAKtM,MAAQ,IAAI0M,EAAM,IAAK,IAAK,KACjCJ,KAAKc,OAASA,EAEdd,KAAKgB,MAAQ,EACbhB,KAAKiB,QAAS,EACdjB,KAAKkB,UAAY,EACrB,EAwBkB5B,EAAA5H,UAAItL,IAItB,MAAOwL,EAAIS,GAASC,mBAIjB,CACCoE,KAAM,EACN5L,KAAM,GACNqQ,eAAgB,IAEdzI,EAAaA,IAAML,EAAM,IAAKT,IAUpCnK,qBAAU,KACFrB,EAAMgV,IAAItJ,MAAM5L,OAAS,IACzB0L,EAAGuJ,cAAgB,EACnBzI,IACJ,GACD,IAiWH,OAAQ/K,gBAAAW,YAAA,CAAAJ,SAAA,CACJG,eAACmN,KAAM,CAACC,MAhWEA,CAACC,EAAaC,KACxBD,EAAGE,aAAanE,EAAcA,GAAcoE,OAAOF,GACnDD,EAAGI,WAAW,QAEdJ,EAAGK,UAAU,GAAG,EA4VM/E,KAzVZ0E,IAGV,GAFAA,EAAGI,WAAW,YAEY,IAAtBlE,EAAGuJ,cAAsB,OAC7B,MAAMhE,EAAO/Q,EAAMgV,IAAItJ,MAAMF,EAAGuJ,eA6D1BE,EAAeA,CAACxF,EAAkBnI,KACpC,MACM4N,EAAoB,CACtBC,MAAOtH,KAAKM,MAAM,GAAqB,GAAhBN,KAAKuH,UAC5BC,WAAY,IAAIrB,EAAM,IAAK,IAAK,KAChCsB,SAAU,IAAItB,EAAM,IAAK,IAAK,MAElC,IAAK,IAAIhP,EAAI,EAAGA,EAND,EAMaA,IAAK,CAC7B,MAAMuQ,EAAW,IACjB/J,EAAG9G,KAAKvD,KAAK,IAAImT,EACb,CAAE/G,EAAGkC,EAAO8E,IAAIhH,EAAGC,EAAGiC,EAAO8E,IAAI/G,GACjC,IAAI+F,EACA1F,KAAKQ,GAAK,EAAIkH,EAAW,EAAI1H,KAAKuH,SAAWG,EAC5C1H,KAAKuH,SAAWvH,KAAKC,IAAI2B,EAAO+E,IAAIb,EAAEnG,GAAM,GAEjD,EAAoB,EAAhBK,KAAKuH,SAET,CACII,SAAWC,IACP,MAAMP,EAAoBO,EAAKf,OAAO1U,MAChCmV,EAAQD,EAAIC,MACC,IAAfM,EAAKb,QACLa,EAAKnO,MAAQ4N,EAAIG,YAEjBI,EAAKb,QAAUO,IAAOM,EAAKZ,QAAS,GAGrB,IAAfY,EAAKb,QAAaa,EAAKnO,MAAQA,GAG/BmO,EAAKjB,IAAId,IAAM,IACf+B,EAAKjB,IAAIb,EAAEpG,GAAK,IAChBkI,EAAKjB,IAAIb,EAAEnG,GAAK,IAChBiI,EAAKjB,IAAIX,eACb,EAGJjJ,KAAO6K,IACH,MACMN,EADoBM,EAAKf,OAAO1U,MACpBmV,MAGZO,GAAYP,EAAQM,EAAKb,OAASO,EAClCV,EAASgB,EAAKhB,OAASiB,EAC7BpG,EAAGM,WAEHN,EAAGO,KAAK4F,EAAKnO,MAAM+M,WACnB/E,EAAGW,QAAQwF,EAAKlB,IAAIhH,EAAGkI,EAAKlB,IAAI/G,EAAGiH,EAAQA,EAAO,EAEtDzU,MAAOkV,IAGnB,GAGES,EAAgBA,CAAC3E,EAAwByE,KAE3CzE,EAAKjF,OAAOpM,SAAQmQ,IAEhB,MAAO8F,EAAIC,EAAIC,GAAM3C,EAAoBrD,EAAME,UAAU,KAClD+F,EAAIC,EAAIC,GAAM9C,EAAoBrD,EAAME,UAAU,IACzDF,EAAMrC,KAAK9N,SAASoQ,IAChB,MAAMmG,EAAwB,CAC1Bf,MAAOtH,KAAKM,MAAM,GAAqB,IAAhBN,KAAKuH,UAC5BC,WAAY,IAAIrB,EAAM4B,EAAIC,EAAIC,GAC9BR,SAAU,IAAItB,EAAM+B,EAAIC,EAAIC,IAG1BE,EAAStI,KAAKiG,MAAM/D,EAAIvC,EAAGuC,EAAIxC,GAC/B6I,EAAUtG,EAAM6B,OAChB+B,EAAM7F,KAAKkG,KAAKlG,KAAKC,IAAIiC,EAAIxC,GAAKM,KAAKC,IAAIiC,EAAIxC,GAAKM,KAAKC,IAAIiC,EAAIvC,GAAKK,KAAKC,IAAIiC,EAAIvC,IAAM4I,EAC/F5K,EAAG9G,KAAKvD,KAAK,IAAImT,EACb,CAAE/G,EAAGkI,EAAKlB,IAAIhH,EAAGC,EAAGiI,EAAKlB,IAAI/G,GAC7B,IAAI+F,EACA4C,EACAzC,GAEJ,EAAoB,EAAhB7F,KAAKuH,SACT,CACII,SAAWC,IACP,MAAMP,EAAoBO,EAAKf,OAAO1U,MAChCmV,EAAgBD,EAAIC,MAEpBkB,EAAOnB,EAAII,SAASrB,EAAIiB,EAAIG,WAAWpB,EACvCqC,EAAOpB,EAAII,SAASpB,EAAIgB,EAAIG,WAAWnB,EACvCqC,EAAOrB,EAAII,SAASnB,EAAIe,EAAIG,WAAWlB,EACvCqC,EAAYf,EAAKb,MAAQO,EAC/BM,EAAKnO,MAAM2M,EAAIiB,EAAIG,WAAWpB,EAAIpG,KAAKM,MAAMkI,EAAOG,GACpDf,EAAKnO,MAAM4M,EAAIgB,EAAIG,WAAWnB,EAAIrG,KAAKM,MAAMmI,EAAOE,GACpDf,EAAKnO,MAAM6M,EAAIe,EAAIG,WAAWlB,EAAItG,KAAKM,MAAMoI,EAAOC,GAEhDf,EAAKb,QAAUO,IACfM,EAAKZ,QAAS,EAEd4B,EAAahB,EAAMP,EAAII,WAOvBG,EAAKjB,IAAId,IAAM,KACf+B,EAAKjB,IAAIb,EAAEpG,GAAK,IAChBkI,EAAKjB,IAAIb,EAAEnG,GAAK,IAChBiI,EAAKjB,IAAIX,eAEb,EAEJjJ,KAAO6K,IACH,MAAMN,EAAgBM,EAAKf,OAAO1U,MAAMmV,MACxC,IAAIhI,EAAO,EAEPgI,EAAQM,EAAKb,MADH,KAEVzH,GAAQgI,EAAQM,EAAKb,OAFX,IAKdtF,EAAGM,WAOH,MAAMtI,EAAQmO,EAAKnO,MAQnBgI,EAAGO,KAAKvI,EAAM+M,WAEd,MAAMI,EAASgB,EAAKhB,OAAStH,EAE7BmC,EAAGW,QAAQwF,EAAKlB,IAAIhH,EAAGkI,EAAKlB,IAAI/G,EAAGiH,EAAQA,EAAO,EAGtDzU,MAAOkW,KAIfQ,EAAWjB,EAAMS,EAAQb,WAAYc,EAAQzC,EAAI,GACnD,GACJ,EAOA+C,EAAeA,CAAChH,EAAkBnI,KAEpCkE,EAAG9G,KAAKvD,KAAK,IAAImT,EACb,CAAE/G,EAAGkC,EAAO8E,IAAIhH,EAAGC,EAAGiC,EAAO8E,IAAI/G,GACjC,IAAI+F,EACA1F,KAAKQ,GAAK,EACV,IAEJ,EACA,CACImH,SAAWC,IAEPA,EAAKjB,IAAIb,EAAEnG,GAAK,KAChB,MAAM2H,EAAgBM,EAAKf,OAAO1U,MAAMmV,MACrB,IAAfM,EAAKb,QACLa,EAAKnO,MAAQA,GAEbmO,EAAKb,QAAUO,IACfM,EAAKZ,QAAS,EAClB,EAEJjK,KAAO6K,IACCA,EAAKb,MAAQ,IAAM,IACvBa,EAAKnO,MAAM8M,EAAI,IAGf9E,EAAGO,KAAK4F,EAAKnO,MAAM+M,WACnB/E,EAAGW,QAAQwF,EAAKlB,IAAIhH,EAAGkI,EAAKlB,IAAI/G,EAAGiI,EAAKhB,OAAQgB,EAAKhB,QAAO,EAEhEzU,MAAO,CACHmV,MAAOtH,KAAKM,MAAM,GAAqB,GAAhBN,KAAKuH,aAGtC,EAUAsB,EAAaA,CAACjH,EAAkBnI,EAAc6O,EAAgBzC,KAChE,MAAMiD,EAAU9I,KAAKM,MAAsB,EAAhBN,KAAKuH,UAChC,IAAK,IAAInE,EAAI,EAAGA,EAAI0F,EAAS1F,IAAK,CAC9B,MAAM2F,EAA6B,IAAhB/I,KAAKuH,SACxB5J,EAAG9G,KAAKvD,KAAK,IAAImT,EACb,CAAE/G,EAAGkC,EAAO8E,IAAIhH,EAAGC,EAAGiC,EAAO8E,IAAI/G,GACjC,IAAI+F,EACA4C,EACAzC,EAAMkD,GAEV,EAAoB,EAAhB/I,KAAKuH,SAET,CACII,SAAWC,IACP,MAAMN,EAAgBM,EAAKf,OAAO1U,MAAMmV,MACpCM,EAAKb,QAAUO,IAAOM,EAAKZ,QAAS,GAErB,IAAfY,EAAKb,QAAaa,EAAKnO,MAAQA,GAG/BmO,EAAKjB,IAAId,IAAM,IACf+B,EAAKjB,IAAIb,EAAEpG,GAAK,IAChBkI,EAAKjB,IAAIb,EAAEnG,GAAK,IAChBiI,EAAKjB,IAAIX,eACb,EAGJjJ,KAAO6K,IACH,MAAMN,EAAgBM,EAAKf,OAAO1U,MAAMmV,MACxCM,EAAKnO,MAAM8M,EAAIvG,KAAKM,OAAcgH,EAAQM,EAAKb,OAASO,EAA9B,KAC1B7F,EAAGM,WAEHN,EAAGO,KAAK4F,EAAKnO,MAAM+M,WACnB/E,EAAGW,QAAQwF,EAAKlB,IAAIhH,EAAGkI,EAAKlB,IAAI/G,EAAGiI,EAAKhB,OAAQgB,EAAKhB,OAAO,EAEhEzU,MAAO,CACHmV,MAAOtH,KAAKM,MAAM,GAAqB,GAAhBN,KAAKuH,UAC5ByB,SAAU,KAI1B,GAGArL,EAAG8E,OAASS,EAAKT,OAvSjBS,EAAKnF,MAAMjM,SAAQ,CAACqR,EAAMhM,KACtB,MAAM8R,EAAWzL,GAAgB0F,EAAKnF,MAAM9L,OAAS,GAC/CyN,EAAIuJ,EAAWA,EAAW9R,GAEzBiP,EAAGC,EAAGC,GAAKhB,EAAoBnC,EAAKU,WACrCqF,EAAoB,CACtBzP,MAAO,IAAI0M,EAAMC,EAAGC,EAAGC,GACvB0C,SAAU,IAEdrL,EAAG9G,KAAKvD,KAAK,IAAImT,EACb,CAAE/G,IAAGC,EAAGnC,GACR,IAAIkI,EAAc,IAAV1F,KAAKQ,GAAU2C,EAAKS,QAC5B,GACA,CACI+D,SAAWC,IACP,MAAMP,EAAgBO,EAAKf,OAAO1U,MAElCyV,EAAKjB,IAAIb,EAAEnG,GAAK,IAKG,IAAfiI,EAAKb,QACLa,EAAKnO,MAAQ4N,EAAI5N,OAGjBmO,EAAKjB,IAAIb,EAAEnG,EAAI,GACfyH,EAAaQ,EAAMP,EAAI5N,OAEvBmO,EAAKjB,IAAIb,EAAEnG,EAAI,IACfiI,EAAKZ,QAAS,EAEdc,EAAc3E,EAAMyE,GACxB,EAIJ7K,KAAO6K,MAcPzV,MAAO+W,IAEb,IAsPF/W,EAAMgV,IAAItJ,MAAM5L,OAAS0L,EAAGuJ,cAAgB,IAC5CvJ,EAAGuJ,gBACHzI,MAIR,IAAK,IAAItH,EAAIwG,EAAG9G,KAAK5E,OAAS,EAAGkF,GAAK,EAAGA,IAAK,CAC1C,MAAM+K,EAAMvE,EAAG9G,KAAKM,GAEpBsK,EAAGM,WAEHG,EAAIwE,IAAIhH,GAAKwC,EAAIyE,IAAIb,EAAEpG,EACvBwC,EAAIwE,IAAI/G,GAAKuC,EAAIyE,IAAIb,EAAEnG,EAEvBuC,EAAI2E,OAAOc,SAASzF,GAEpBA,EAAI2E,OAAO9J,KAAKmF,GAEhBA,EAAI6E,QACC7E,EAAI8E,QACLrJ,EAAG9G,KAAKmN,OAAO7M,EAAG,EAE1B,EAEIwG,EAAGuJ,cAAgB/U,EAAMgV,IAAItJ,MAAM5L,OAAS,GAAK0L,EAAG9G,KAAK5E,OAAS,IAClE0L,EAAG8E,OAIPhB,EAAG0H,SAAS,IACZ1H,EAAGO,KAAK,WACRP,EAAG9H,KAAK,UAADzD,OAAWyH,EAAG8E,MAAQ,EAAG,IAChChB,EAAG9H,KAAK,WAADzD,OAAY8J,KAAKM,MAAM3C,EAAG8E,KAAO,KAAO,EAAG,IAClDhB,EAAGO,KAAK,WACRP,EAAG9H,KAAK,aAADzD,OAAcyH,EAAG9G,KAAK5E,QAAU,EAAG,GAAG,IAK7CmC,eAAC3C,GAASgG,aAAY,CAAC3D,UAAU,OAAO8D,QAAS,CAC7C,CACIM,MAAO,UAAWzD,MAAO,IAAKwD,SAAUA,KACpC0F,EAAG8E,KAAO,EACV9E,EAAGuJ,cAAgB,EACnBvJ,EAAG9G,KAAK5E,OAAS,EACjBwM,GAAY,GAGpB,CACIvG,MAAO,OAAQzD,MAAO,IAAKwD,SAAUA,KACjC9F,EAAMiX,MAAM,QAIzB,CACN,CA5f6C,CAGxChE,QAAW,KA4fNA,I,SAAAA,MC/fa,IAAAiE,IAGlBA,QAAW,KAaK5L,UAAG,KAErB,MAAOE,EAAIS,GAASC,mBAAqB,CACrCW,KAAM,MACNmI,IAAK,OAEH1I,EAAaA,IAAML,EAAM,IAAKT,KAE7B2L,EAAQC,GAAalL,mBAAqB,CAAEmL,QAAS,EAAGC,OAAQ,EAAGnK,KAAM,IAC1EoK,EAAMC,iBAA8B,MAEpCC,EAASA,KACX,GAAmB,MAAfF,EAAIG,QAAiB,CAGrB,MAAMhJ,EAAO6I,EAAIG,QAAQC,yBAClBC,EAAaC,GAAgB,CAACnJ,EAAKpM,MAAOoM,EAAKtH,QAEhD0Q,EAAKrN,GAAWT,eAChB+N,EAAKtN,GAAWR,gBAEhB+N,EAAYH,EAAeE,EAAKH,EAAcE,EAE9C3K,EAAQ6K,EAAgCJ,EAAcE,EAAlCD,EAAeE,EAIzCX,EAAU,CAAEC,QAHKW,EAAgD,EAApCJ,EAAc,EAAKE,EAAK3K,EAAO,EAGvCmK,OAFLU,EAAgBH,EAAe,EAAKE,EAAK5K,EAAO,EAApC,EAECA,QACjC,GAGJ8K,OAAOC,iBAAiB,oBAAoB,KACnCzN,GAAWJ,eAGZ4N,OAAOC,iBAAiB,2BAA4BT,GAFpDQ,OAAOC,iBAAiB,SAAUT,EAGtC,IAOJpW,qBAAU,IAAMoW,KAAU,IAE1B,MAAMU,EACFlW,eAACiO,GAAY5E,UAAS,CAAC5J,UAAuB,QAAZ8J,EAAGqB,KAAgBoF,MAAQ+C,IACzDxJ,EAAGwJ,IAAMA,EACTxJ,EAAGqB,KAAO,OACVP,GAAY,IAIpB,OACIrK,eAAC6O,GAAK,CAACyG,IAAKA,EAAIzV,SACZG,eAACmW,GAAM,CAAChL,KAAM+J,EAAOE,QAAShK,IAAK8J,EAAOG,OAAQnK,KAAMgK,EAAOhK,KAAKrL,SAChEG,eAACoW,GAAS,CAAAvW,SACL,MACG,OAAQ0J,EAAGqB,MACP,IAAK,MAAO,OAAOsL,EACnB,IAAK,OAED,OADAxK,KAAiB,MAAVnC,EAAGwJ,IAAa,gFAChBzT,gBAAAW,YAAA,CAAAJ,SAAA,CAAGqW,EAAYlW,eAACgR,GAAY3H,UAAS,CAAC0J,IAAKxJ,EAAGwJ,IAAKiC,KAAMA,KAC5DzL,EAAGqB,KAAO,MACVP,GAAY,OAI3B,EAXA,QAcL,EAML4K,UAGf,MAAMpG,GAAQhS,IAAOC,IAAGC,QAAAT,YAAA,mNAWlB6Z,GAAStZ,IAAOC,IAAGE,QAAAV,YAAA,0LAOhByB,GAASA,EAAMqN,MACdrN,GAASA,EAAMoN,OAIJpN,GAASA,EAAMmN,OAG9BkL,GAAYvZ,IAAOC,IAAGG,QAAAX,YAAA,oGAEjBkM,GAAWT,eACVS,GAAWR,iBCnGRqO,OA5Bf,WAuBE,OArBAjX,qBAAU,KAERyJ,SAASyN,cAAgB,WAAc,OAAO,CAAO,EASrDzN,SAAS0N,UAAa/V,IAIpB,GAAIA,EAAEgW,SAAW,CAAC,IAAK,KAAKC,SAASjW,EAAEkW,KACrC,OAAO,CACT,CACD,GAEA,IAED1W,eAACiV,GAAY5L,UAAS,GAE1B,ECfesN,OAZUC,IACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,EAAY,GAExB,ECJFS,IAASC,OACLtX,eAACuX,IAAMC,WAAU,CAAA3X,SACfG,eAACqW,GAAG,MAGRxN,SAAS4O,eAAe,SAM1Bd,I","file":"static/js/main.f510a80a.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\n\nnamespace Styles {\n\n    export const FONT_SMALL = 16;\n    export const FONT_MIDIUM = 22;\n    export const FONT_LARGE = 32;\n\n    export const CSS_LABEL = css`\n        display: inline-block;\n        font-weight: 600;\n        text-align: center;\n        color: black;\n        box-sizing: border-box;\n    `;\n\n    export const CSS_LABEL_SMALL = css`\n        ${CSS_LABEL}\n        height: 22px;\n        font-size: ${FONT_SMALL}px;\n        line-height: 18px;\n    `;\n\n    export const CSS_LABEL_MIDIUM = css`\n        ${CSS_LABEL}\n        height: 30px;\n        font-size: ${FONT_MIDIUM}px;\n        line-height: 26px;\n    `;\n\n    export const CSS_BUTTON_DISABLE = css`\n        pointer-events: none;\n        opacity: 0.5;\n    `;\n}\nexport default Styles;\n\nexport const _WrapperFrame = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n`;\n\nexport const _Object = styled.div`\n    display: inline-block;\n`;\n\nexport const _Record = styled.div`\n    display: inline-block;\n    width: 100%;\n`;\n\nexport const _CSS_LABEL_SMALL = css`\n    display: inline-block;\n    height: 22px;\n    font-size: 18px;\n    font-weight: 600;\n    color: black;\n    line-height: 18px;\n`;\n\n\nexport const _CSS_LABEL_MIDIUM = css`\n    display: inline-block;\n    height: 30px;\n    font-size: ${Styles.FONT_MIDIUM}px;\n    font-weight: 600;\n    text-align: center;\n    color: black;\n    line-height: 24px;\n    box-sizing: border-box;\n`;\n\nexport const _CSS_DISABLE = css`\n    opacity: 0.6;\n    pointer-events: none;\n`;\n\n","import styled, { css } from \"styled-components\";\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\nimport ValidateUtil from \"./validateUtil\";\nimport { useEffect } from \"react\";\n\nnamespace FormUtil {\n\n    export type CheckableValue = {\n        value: string;\n        errors: ValidateUtil.ErrorType[];\n    }\n\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\n        let result = true;\n        checkables.forEach(checkable => {\n            if (checkable.errors.length > 0) {\n                result = false;\n                return 1;\n            }\n        });\n        return result;\n    }\n\n    export const InputTextFormBak = (props: {\n        titleLabel?: string;\n        checkable: CheckableValue;\n        setCheckable: (value: CheckableValue) => void;\n        isEnable?: boolean;\n        placeholder?: string;\n        isCenter?: boolean;\n        width?: number;\n        isPassword?: boolean;\n        validates?: ValidateUtil.Validate[];\n        dependency?: CheckableValue[];\n        marginTop?: number;\n        isReadOnly?: boolean;\n        marginBottom?: number;\n    }) => {\n        const type = props.isPassword ?? false ? 'password' : 'text';\n\n        const validaters = props.validates ?? [];\n        const errors = props.checkable.errors;\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\n\n        const getErrors = (value: string) => {\n            const errors: ValidateUtil.ErrorType[] = [];\n            validaters.forEach(validater => {\n                if (!validater.checker(value)) {\n                    errors.push(validater.errorType);\n                }\n            });\n            return errors;\n        }\n        useEffect(() => {\n            props.checkable.errors = getErrors(props.checkable.value);\n            props.setCheckable({ ...props.checkable });\n        }, dependency);\n        return (\n            <_Record\n                isEnable={props.isEnable ?? true}\n                isVisible={true}\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\n                marginTop={props.marginTop ?? 0}\n            >\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\n                <_ItemnInputBak\n                    type={type}\n                    value={props.checkable.value}\n                    hasTitle={props.titleLabel != undefined}\n                    width={props.width}\n                    isCenter={props.isCenter ?? false}\n                    placeholder={props.placeholder}\n                    onChange={(e) => {\n                        const value = e.target.value;\n                        props.checkable.value = value;\n                        props.checkable.errors = getErrors(value);\n                        props.setCheckable({ ...props.checkable });\n                    }}\n                    errorType={errors.length === 0 ? undefined : errors[0]}\n                    readOnly={props.isReadOnly}\n                />\n            </_Record>\n        );\n    }\n\n\n    export const Record = (props: {\n        isEnable?: boolean;\n        textAlign?: 'left' | 'center' | 'right';\n        marginTop?: number;\n        jsx: JSX.Element;\n    }) => {\n        return (\n            <_Record\n                isEnable={props.isEnable ?? true}\n                isVisible={true}\n                textAlign={props.textAlign ?? 'left'}\n                marginTop={props.marginTop ?? 0}\n            >\n                {props.jsx}\n            </_Record>\n        );\n    }\n\n    export const FormRecord = (props: {\n        titleLabel?: string;\n        labelWidth?: number;\n        isEnable?: boolean;\n        isVisible?: boolean;\n        textAlign?: 'left' | 'center' | 'right';\n        marginTop?: number;\n        jsx: JSX.Element;\n    }) => {\n        return (\n            <_Record\n                isEnable={props.isEnable ?? true}\n                isVisible={props.isVisible ?? true}\n                textAlign={props.textAlign ?? 'left'}\n                marginTop={props.marginTop ?? 0}\n            >\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={props.labelWidth}>{props.titleLabel}</_ItemnLabel>}\n                {props.jsx}\n            </_Record>\n        );\n    }\n\n    export const TextField = (props: {\n        checkable: CheckableValue;\n        setCheckable: (value: CheckableValue) => void;\n        isEnable?: boolean;\n        placeholder?: string;\n        width?: number;\n        isPassword?: boolean;\n        validates?: ValidateUtil.Validate[];\n        dependency?: CheckableValue[];\n        isReadOnly?: boolean;\n        isNumber?: boolean;\n        marginLeft?: number;\n    }) => {\n        let type = props.isPassword ?? false ? 'password' : 'text';\n        if (props.isNumber ?? false) {\n            type = 'number';\n        }\n\n        const validaters = props.validates ?? [];\n        const errors = props.checkable.errors;\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\n\n        const getErrors = (value: string) => {\n            const errors: ValidateUtil.ErrorType[] = [];\n            validaters.forEach(validater => {\n                if (!validater.checker(value)) {\n                    errors.push(validater.errorType);\n                }\n            });\n            return errors;\n        }\n        useEffect(() => {\n            props.checkable.errors = getErrors(props.checkable.value);\n            props.setCheckable({ ...props.checkable });\n        }, dependency.concat(props.checkable.value));\n\n        let value = props.checkable.value;\n        // if (type === 'number' && value === '') value = '0';\n        return (\n            <_ItemnInput\n                type={type}\n                value={value}\n                width={props.width ?? 100}\n                placeholder={props.placeholder}\n                onChange={(e) => {\n                    let value = e.target.value;\n                    // if (type === 'number' && value === '') value = '0';\n                    props.checkable.value = type !== 'number' ? value : Number(value).toString();\n                    // props.checkable.errors = getErrors(value);\n                    props.setCheckable({ ...props.checkable });\n                }}\n                errorType={errors.length === 0 ? undefined : errors[0]}\n                readOnly={props.isReadOnly}\n                marginLeft={props.marginLeft}\n            />\n        );\n    }\n\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\n    export const Combobox = (props: {\n        list: ComboboxItemProps[];\n        headBlank?: boolean;\n        checkable: CheckableValue;\n        setCheckable: (value: CheckableValue) => void;\n        isEnabled?: boolean;\n        placeholder?: string;\n        width?: number;\n        validates?: ValidateUtil.Validate[];\n        dependency?: CheckableValue[];\n        isReadOnly?: boolean;\n        marginLeft?: number;\n    }) => {\n        const validaters = props.validates ?? [];\n        const errors = props.checkable.errors;\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\n        const headBlank = props.headBlank ?? false;\n        const list = props.list.slice();\n        if (headBlank) list.unshift({ value: '', labelText: '' });\n\n        const getErrors = (value: string) => {\n            const errors: ValidateUtil.ErrorType[] = [];\n            validaters.forEach(validater => {\n                if (!validater.checker(value)) {\n                    errors.push(validater.errorType);\n                }\n            });\n            return errors;\n        }\n\n        useEffect(() => {\n            // console.log('value: ' + props.checkable.value);\n            props.checkable.errors = getErrors(props.checkable.value);\n            props.setCheckable({ ...props.checkable });\n        }, dependency.concat(props.checkable.value));\n\n        return (\n            <_ItemCombobox\n                value={props.checkable.value}\n                width={props.width ?? 100}\n                placeholder={props.placeholder}\n                onChange={(e) => {\n                    const value = e.target.value;\n                    props.checkable.value = value;\n                    // props.checkable.errors = getErrors(value);\n                    props.setCheckable({ ...props.checkable });\n\n                }}\n                errorType={errors.length === 0 ? undefined : errors[0]}\n                readOnly={props.isReadOnly}\n                marginLeft={props.marginLeft}\n            >{list.map((item, i) => {\n                return (\n                    <_Option key={i}\n                        value={item.value}\n                        disabled={item.isDisabled ?? false}\n                        isDisabled={item.isDisabled ?? false}\n                    >{item.labelText}</_Option>\n                );\n            })}</_ItemCombobox>\n        );\n    }\n\n    export type ButtonProps = {\n        label: string;\n        isEnable?: boolean;\n        width?: number;\n        callback: () => void;\n    }\n\n    export const ButtonRecord = (props: {\n        buttons: ButtonProps[],\n        textAlign?: 'left' | 'center' | 'right';\n        marginTop?: number;\n        marginBottom?: number;\n    }) => {\n        return (\n            <_Record\n                isEnable={true}\n                isVisible={true}\n                textAlign={props.textAlign ?? 'right'}\n                marginTop={props.marginTop ?? 0}\n            >\n                {props.buttons.map((button, i) => {\n                    return (\n                        <_Button\n                            key={i}\n                            isCenter={props.textAlign === 'center'}\n                            isEnable={button.isEnable ?? true}\n                            width={button.width}\n                            onClick={button.callback}\n                        >{button.label}</_Button>\n                    );\n                })}\n            </_Record>\n        );\n    }\n\n    export const Message = (props: {\n        message: string,\n        isCenter?: boolean;\n        marginTop?: number;\n        marginBottom?: number;\n    }) => {\n        return (\n            <_Record\n                isEnable={true}\n                isVisible={true}\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\n                marginTop={props.marginTop ?? 0}\n            >\n                <_Message\n                    isCenter={props.isCenter ?? false}\n                >{props.message}</_Message>\n            </_Record>\n        );\n    }\n\n    export const MessageLink = (props: {\n        message: string,\n        isCenter?: boolean;\n        clickAction: () => void;\n        marginTop?: number;\n        marginBottom?: number;\n    }) => {\n        return (\n            <_Record\n                isEnable={true}\n                isVisible={true}\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\n                marginTop={props.marginTop ?? 0}\n            >\n                <_Message\n                    isLink={true}\n                    onClick={props.clickAction}\n                    isCenter={props.isCenter ?? false}\n                >{props.message}</_Message>\n            </_Record>\n        );\n    }\n\n    export const BorderPanel = (props: {\n        title: string;\n        isEnable?: boolean;\n        innerJsx: JSX.Element;\n    }) => {\n        // const title = props.title ?? 'title pl';\n        return (<>\n            <_BorderText>{props.title}</_BorderText>\n            <_BorderPanel isEnable={props.isEnable ?? true}>{props.innerJsx}</_BorderPanel>\n        </>);\n    }\n\n    export const InfoFrame = (props: {\n        height?: number;\n        textRecords: string[];\n    }) => {\n        const height = props.height ?? 70;\n        const color = '#1a9900';\n        return (<>\n            <_InfoDiv height={height} color={color}>\n                {props.textRecords.map((text, i) => {\n                    return <span key={i}>{text}<br /></span>;\n                })}\n            </_InfoDiv>\n        </>);\n    };\n\n    export const Switch = (props: {\n        label: string;\n        isUse: boolean;\n        isEnable?: boolean;\n        width?: number;\n        isRelation?: boolean;\n        callback: () => void;\n    }) => {\n        const isRelation = props.isRelation ?? false;\n        const callback = isRelation && props.isUse ? () => { } : props.callback;\n        return (\n            <_Switch\n                isRelation={isRelation}\n                isUse={props.isUse}\n                isEnable={props.isEnable ?? true}\n                width={props.width}\n                onClick={callback}\n            >{props.label}</_Switch>\n        );\n    }\n}\n\nexport default FormUtil;\n\n\nconst _Record = styled.div<{\n    isEnable: boolean;\n    isVisible: boolean;\n    textAlign: 'left' | 'center' | 'right';\n    marginTop: number;\n}>`\n    display: inline-block;\n    ${props => props.isVisible ? '' : css`\n        display: none;\n    `}\n    width: 100%;\n    height: 40px;\n    margin-top: ${props => props.marginTop}px;\n    /* background-color: #b3b4c4; */\n    /* border: 1px solid #000; */\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    text-align: ${props => props.textAlign};\n`;\n\nconst _ItemnLabel = styled.div<{\n    labelWidth?: number;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: ${props => props.labelWidth ?? 140}px;\n    ${Styles.CSS_LABEL_MIDIUM}\n    color: #585858;\n    border: solid 1px #7a7a7abf;\n    box-sizing: border-box;\n    /* background-color: #85a2c5; */\n    background: linear-gradient(to bottom, #c3c3c3fc, #d8d8d8, #c3c3c3fc);\n    border-radius: 4px;\n    text-align: center;\n    vertical-align: top;\n    margin: 5px 4px 0 4px;\n`;\n\nconst _ItemnInputBak = styled.input<{\n    readOnly?: boolean;\n    isCenter: boolean;\n    hasTitle: boolean;\n    width?: number;\n    errorType?: ValidateUtil.ErrorType;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    ${props => !props.hasTitle ? css`\n    ` : css`\n        width: calc(100% - 152px);\n    `}\n    ${props => props.width == undefined ? '' : css`\n        width: ${props.width}px;\n    `}\n    margin-top: 2px;\n    font-size: 24px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #3d3d3d;\n    border: solid 1px #959595;\n    border-radius: 4px;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: ${props => {\n        if (props.errorType == undefined) return '#ececec';\n        else {\n            switch (props.errorType) {\n                case 'required': return '#dbd7b3';\n                case 'length': return '#dbb3b3';\n                case 'value': return '#b3b3db';\n                case 'relation': return '#b3dbb3';\n            }\n        }\n    }};\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n    /* ${props => !props.isCenter ? css`\n        margin-left: 4px;\n    ` : css``\n    } */\n    ${props => !props.readOnly ? '' : css`\n        color: #020075;\n        /* border: none; */\n        outline: none;\n        background-color: transparent;\n    `}\n    ::placeholder {\n        color: #00000050;\n        font-style: italic;\n    }\n`;\n\nconst _ItemnInput = styled.input<{\n    readOnly?: boolean;\n    width?: number;\n    errorType?: ValidateUtil.ErrorType;\n    marginLeft?: number;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: ${props => props.width}px;\n    margin-top: 2px;\n    margin-left: ${props => props.marginLeft ?? 0}px;\n    font-size: 24px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #3d3d3d;\n    border: solid 1px #959595;\n    border-radius: 4px;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: ${props => {\n        if (props.errorType == undefined) return '#ececec';\n        else {\n            switch (props.errorType) {\n                case 'required': return '#dbd7b3';\n                case 'length': return '#dbb3b3';\n                case 'value': return '#b3b3db';\n                case 'relation': return '#b3dbb3';\n            }\n        }\n    }};\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n    ${props => !props.readOnly ? '' : css`\n        color: #020075;\n        /* border: none; */\n        outline: none;\n        background-color: transparent;\n    `}\n    ::placeholder {\n        color: #00000050;\n        font-style: italic;\n    }\n`;\n\nconst _ItemCombobox = styled.select<{\n    readOnly?: boolean;\n    width?: number;\n    errorType?: ValidateUtil.ErrorType;\n    marginLeft?: number;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: ${props => props.width}px;\n    margin-top: 2px;\n    margin-left: ${props => props.marginLeft ?? 0}px;\n    font-size: 24px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #3d3d3d;\n    border: solid 1px #959595;\n    border-radius: 4px;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: ${props => {\n        if (props.errorType == undefined) return '#ececec';\n        else {\n            switch (props.errorType) {\n                case 'required': return '#dbd7b3';\n                case 'length': return '#dbb3b3';\n                case 'value': return '#b3b3db';\n                case 'relation': return '#b3dbb3';\n            }\n        }\n    }};\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n    ${props => !props.readOnly ? '' : css`\n        color: #020075;\n        /* border: none; */\n        outline: none;\n        background-color: transparent;\n        pointer-events: none;\n    `}\n    ::placeholder {\n        color: #00000050;\n        font-style: italic;\n    }\n`;\n\nconst _Option = styled.option<{\n    isDisabled: boolean;\n}>`\n    ${props => !props.isDisabled ? '' : css`\n        color: #0000004b;\n    `}\n`;\n\nconst _Message = styled.div<{\n    isLink?: boolean;\n    isCenter: boolean;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    margin-top: 2px;\n    font-size: ${Styles.FONT_MIDIUM}px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #002c52;\n    border-radius: 4px;\n    padding: 0 5px;\n    box-sizing: border-box;\n    /* background-color: #d37878; */\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n    ${props => !props.isCenter ? css`\n        margin-left: 4px;\n    ` : css``\n    }\n    ${props => !props.isLink ? '' : css`\n        color: #0459a3;\n        user-select: none;\n        text-decoration: underline;\n        &:hover {\n            color: #68a4d8;\n        }\n    `}\n`;\n\nconst _ButtonsDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 40px;\n    /* background-color: #888888; */\n    box-sizing: border-box;\n    text-align: left;\n    white-space: nowrap;\n`;\n\nconst _Button = styled.div<{\n    isEnable: boolean;\n    isCenter: boolean;\n    width?: number;\n}>`\n    ${Styles.CSS_LABEL_MIDIUM}\n    ${props => props.width == undefined ? css`\n        padding: 0 40px;\n    ` : css`\n        width: ${props.width}px;\n    `}\n    /* line-height: 25px; */\n    box-sizing: border-box;\n    /* background-color: #a8a8a8; */\n    background: linear-gradient(to bottom, #cdcdcd, #ebebeb, #cdcdcd);\n    border: 1px solid #747474;\n    color: #515151;\n    border-radius: 4px;\n    ${props => !props.isCenter ? css`\n        margin-left: 4px;\n    ` : css``\n    }\n    margin: 5px 0 0 4px;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    &:hover {\n        /* background-color: #98bfc2; */\n        background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\n    }\n`;\n\nconst _Switch = styled.div<{\n    isUse: boolean;\n    isEnable: boolean;\n    width?: number;\n    isRelation: boolean;\n}>`\n    ${Styles.CSS_LABEL_MIDIUM}\n    ${props => props.width == undefined ? css`\n        padding: 0 40px;\n    ` : css`\n        width: ${props.width}px;\n    `}\n    /* line-height: 25px; */\n    box-sizing: border-box;\n    background-color: #a8a8a8;\n    color: #515151;\n    border: 1px solid #747474;\n    ${props => !props.isRelation ? css<{ isUse: boolean }>`\n        background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\n    ` : css<{ isUse: boolean }>`\n        background-color: ${props => !props.isUse ? '#ddc1d979' : '#d898b3'};\n        color: ${props => !props.isUse ? '#515151' : '#9c2626'};\n    `}\n    border-radius: 4px;\n    margin: 5px 0 0 4px;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    &:hover {\n        ${props => !props.isRelation ? css<{ isUse: boolean }>`\n            background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\n        ` : css<{ isUse: boolean }>`\n            background-color: ${props => !props.isUse ? '#d3a1cb79' : '#d898b3'};\n            color: ${props => !props.isUse ? '#515151' : '#9c2626'};\n        `}\n    }\n`;\n\nconst _BorderText = styled.div<{\n}>`\n    ${Styles.CSS_LABEL_SMALL}\n    color: #990000;\n    /* background-color: #0a0a0a40; */\n    font-style: italic;\n    margin: 4px 0 0 8px;\n`;\nconst _BorderPanel = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    margin: 0 0 0 6px;\n    padding: 4px;\n    width: calc(100% - 12px);\n    background-color: #dcddce;\n    border: 1px solid #000;\n    box-sizing: border-box;\n    border-radius: 4px;\n    text-align: left;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n`;\n\nconst _InfoDiv = styled.div<{\n    height: number;\n    color: string;\n}>`\n    margin: 4px 0 0 0;\n    display: inline-block;\n    background-color: #e7e5e561;\n    border: solid 1px #949494;\n    width: 100%;\n    height: ${props => props.height}px;\n    padding: 2px;\n    box-sizing: border-box;\n    text-align: left;\n    font-size: ${Styles.FONT_SMALL}px;\n    color: ${props => props.color};\n    overflow-y: auto;\n`;","\r\n\r\n\r\nnamespace SystemUtil {\r\n\r\n  export const CONTENTS_WIDTH = 576;\r\n  export const CONTENTS_HEIGHT = 1024;\r\n  export const USER_INFO = 30;\r\n\r\n  export const FIELD_MARGIN = 10;\r\n  export const MAX_CELL_WIDTH = 100;\r\n\r\n  export function isSmartPhone() {\r\n    // UserAgentからのスマホ判定\r\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default SystemUtil;","namespace CanvasUtil {\n\n    /**\n     * Canvasに任意の描画をし、画像のURLを取得する\n     * @param width 幅\n     * @param height 高さ\n     * @param draw 描画\n     * @returns 画像のURL\n     */\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n        canvas.width = width;\n        canvas.height = height;\n        draw(ctx);\n        return canvas.toDataURL();\n    }\n}\n\nexport default CanvasUtil;","import styled from \"styled-components\";\r\nimport SystemUtil from \"../../utils/systemUtil\";\r\nimport SetterFrame from \"./setterFrame\";\r\nimport { useMemo, useState } from \"react\";\r\nimport assert from \"assert\";\r\nimport Sketch from \"react-p5\";\r\nimport p5Types from \"p5\";\r\n\r\nnamespace EditDialog {\r\n\r\n    type LocalSatate = {\r\n        startX: number;\r\n        startY: number;\r\n        circle: CircleInfo | null;\r\n    }\r\n    type Mode = 'none' | 'rad' | 'num' | 'dir'\r\n    type CircleInfo = {\r\n        dir: number;\r\n        divNum: number;\r\n        radX: number;\r\n        radY: number;\r\n        mode: Mode;\r\n    }\r\n\r\n    const CANVAS_WIDTH = SystemUtil.CONTENTS_WIDTH - 16;\r\n\r\n    export const Component = (props: {\r\n        ls: SetterFrame.LocalState;\r\n        invalidate: () => void;\r\n    }) => {\r\n        const ps = props.ls;\r\n        const curUnit = ps.units[ps.focusUnit];\r\n        const curSeed = curUnit.seeds[ps.focusSeed];\r\n        const curLayer = curSeed.layers[ps.focusLayer];\r\n\r\n        // const invalidate = props.invalidate;\r\n\r\n        const [ls, setLs] = useState<LocalSatate>({\r\n            startX: 0,\r\n            startY: 0,\r\n            circle: null\r\n        });\r\n\r\n        const invalidate = () => setLs({ ...ls });\r\n\r\n\r\n        useMemo(() => {\r\n            ls.circle = curLayer.method !== 'circle' ? null : {\r\n                radX: 100,\r\n                radY: 100,\r\n                dir: 0,\r\n                divNum: 4,\r\n                mode: 'none'\r\n            }\r\n        }, [curLayer.method]);\r\n\r\n        const deligatePoint = (clientRect: DOMRect, clientX: number, clientY: number, callback: (x: number, y: number) => void) => {\r\n            const WIDTH = SystemUtil.CONTENTS_WIDTH - 16;\r\n            const rate = WIDTH / clientRect.width;\r\n            // console.log(`RATE:${rate}`);\r\n            const x = (-clientRect.left + clientX) * rate;\r\n            const y = (-clientRect.top + clientY) * rate;\r\n            const subX = -WIDTH / 2 + x;\r\n            const subY = -WIDTH / 2 + y;\r\n            callback(subX, subY)\r\n        }\r\n        const drawPoint = (clientRect: DOMRect, clientX: number, clientY: number) => {\r\n            deligatePoint(clientRect, clientX, clientY, (x: number, y: number) => {\r\n                const pars = curLayer.pars;\r\n                pars.push({ x, y });\r\n                invalidate();\r\n            });\r\n        }\r\n\r\n        const setStartPoint = (clientRect: DOMRect, clientX: number, clientY: number) => {\r\n            deligatePoint(clientRect, clientX, clientY, (x: number, y: number) => {\r\n                ls.startX = x;\r\n                ls.startY = y;\r\n                assert(ls.circle != null, 'ls.circleがnullであってはならない。');\r\n                const cir = ls.circle;\r\n                ls.startX = x;\r\n                ls.startY = y;\r\n                if (Math.abs(cir.radX - x) <= 10 && Math.abs(cir.radY - y) <= 10) {\r\n                    cir.mode = 'rad';\r\n                } else {\r\n                    cir.mode = 'num';\r\n                }\r\n                invalidate();\r\n            });\r\n        }\r\n\r\n        const release = (clientRect: DOMRect, clientX: number, clientY: number) => {\r\n            deligatePoint(clientRect, clientX, clientY, (x: number, y: number) => {\r\n                ls.startX = x;\r\n                ls.startY = y;\r\n                assert(ls.circle != null, 'ls.circleがnullであってはならない。');\r\n                const cir = ls.circle;\r\n                console.log('release');\r\n                cir.mode = 'none';\r\n                invalidate();\r\n            });\r\n        }\r\n\r\n        const calcCircle = (clientRect: DOMRect, clientX: number, clientY: number) => {\r\n            deligatePoint(clientRect, clientX, clientY, (x: number, y: number) => {\r\n                assert(ls.circle != null, 'ls.circleがnullであってはならない。');\r\n                const cir = ls.circle;\r\n                if (cir.mode === 'rad') {\r\n                    ls.circle.radX += (x - ls.startX);\r\n                    ls.circle.radY += (y - ls.startY);\r\n                    ls.startX = x;\r\n                    ls.startY = y;\r\n                } else if (cir.mode === 'num') {\r\n                    ls.circle.divNum = Math.floor(Math.abs(ls.startX - x) * 0.2);\r\n                    ls.circle.dir = ls.startY - y * 0.01;\r\n                    if (ls.circle.divNum <= 2) ls.circle.divNum = 2;\r\n                }\r\n\r\n                // console.log('update');\r\n                curLayer.pars.length = 0;\r\n                for (let i = 0; i < ls.circle.divNum; i++) {\r\n                    const rad = i * Math.PI * 2 / ls.circle.divNum + ls.circle.dir;\r\n                    const x = Math.cos(rad) * ls.circle.radX;\r\n                    const y = Math.sin(rad) * ls.circle.radY;\r\n                    curLayer.pars.push({ x, y });\r\n                }\r\n                invalidate();\r\n            });\r\n        }\r\n\r\n        return (\r\n            <_Wnd\r\n                onMouseDown={(e) => {\r\n                    const rect = e.currentTarget.getClientRects()[0];\r\n                    switch (curLayer.method) {\r\n                        case 'draw': {\r\n                            drawPoint(rect, e.clientX, e.clientY);\r\n                        } break;\r\n                        case 'circle': {\r\n                            setStartPoint(rect, e.clientX, e.clientY);\r\n                        } break;\r\n                    }\r\n                }}\r\n                onMouseMove={(e) => {\r\n                    if (!e.buttons) return;\r\n                    const rect = e.currentTarget.getClientRects()[0];\r\n                    switch (curLayer.method) {\r\n                        case 'draw': {\r\n                            drawPoint(rect, e.clientX, e.clientY);\r\n                        } break;\r\n                        case 'circle': {\r\n                            calcCircle(rect, e.clientX, e.clientY);\r\n                        } break;\r\n                    }\r\n                }}\r\n                onMouseUp={(e) => {\r\n                    const rect = e.currentTarget.getClientRects()[0];\r\n                    switch (curLayer.method) {\r\n                        case 'draw': {\r\n                        } break;\r\n                        case 'circle': {\r\n                            release(rect, e.clientX, e.clientY);\r\n                        } break;\r\n                    }\r\n                }}\r\n                onTouchStart={(e) => {\r\n                    const rect = e.currentTarget.getClientRects()[0];\r\n                    const t = e.touches[0];\r\n                    switch (curLayer.method) {\r\n                        case 'draw': {\r\n                        } break;\r\n                        case 'circle': {\r\n                            setStartPoint(rect, t.clientX, t.clientY);\r\n                        } break;\r\n                    }\r\n                }}\r\n                onTouchMove={(e) => {\r\n                    const rect = e.currentTarget.getClientRects()[0];\r\n                    const t = e.touches[0];\r\n                    switch (curLayer.method) {\r\n                        case 'draw': {\r\n                            drawPoint(rect, t.clientX, t.clientY);\r\n                        } break;\r\n                        case 'circle': {\r\n                            calcCircle(rect, t.clientX, t.clientY);\r\n                        } break;\r\n                    }\r\n                }}\r\n                onTouchEnd={(e) => {\r\n                    const rect = e.currentTarget.getClientRects()[0];\r\n                    const t = e.touches[0];\r\n                    switch (curLayer.method) {\r\n                        case 'draw': {\r\n                        } break;\r\n                        case 'circle': {\r\n                            release(rect, t.clientX, t.clientY);\r\n                        } break;\r\n                    }\r\n                }}\r\n            >\r\n                <Sketch setup={(p5: p5Types, canvasParentRef: Element) => {\r\n                    p5.createCanvas(CANVAS_WIDTH, CANVAS_WIDTH).parent(canvasParentRef);\r\n                    p5.background('#0b0336');\r\n                    // p5.filter(p5.BLUR, 4);\r\n                    p5.frameRate(60);\r\n                }} draw={(p5: p5Types) => {\r\n                    p5.background('#0b0336');\r\n                    p5.noStroke();\r\n\r\n                    p5.fill('#fff');\r\n                    p5.rect(CANVAS_WIDTH / 2 - 10, CANVAS_WIDTH / 2 - 10, 20, 20);\r\n\r\n                    if (ls.circle != null) {\r\n                        const cir = ls.circle;\r\n                        switch (cir.mode) {\r\n                            case 'none': { p5.fill('#99f0ff1c'); } break;\r\n                            case 'rad': { p5.fill('#ffffff65'); } break;\r\n                            case 'num': { p5.fill('#fcff5d6a'); } break;\r\n                            case 'none': { p5.fill('#99f0ff5e'); } break;\r\n                        }\r\n                        p5.rect(CANVAS_WIDTH / 2 - cir.radX, CANVAS_WIDTH / 2 - cir.radY, cir.radX * 2, cir.radY * 2);\r\n\r\n                        p5.fill('#eeff00');\r\n                        p5.rect(CANVAS_WIDTH / 2 + cir.radX - 10, CANVAS_WIDTH / 2 + cir.radY - 10, 20, 20);\r\n                    }\r\n\r\n                    curSeed.layers.forEach(layer => {\r\n                        layer.pars.map((par) => {\r\n                            const x = CANVAS_WIDTH / 2 + par.x;\r\n                            const y = CANVAS_WIDTH / 2 + par.y;\r\n\r\n                            p5.fill(layer.barrColor[0]);\r\n                            p5.ellipse(x, y, 10, 10);\r\n                        });\r\n                    });\r\n                }} />\r\n            </_Wnd>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditDialog;\r\n\r\n\r\n\r\nconst _Wnd = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    \r\n    background-color: #000000d2;\r\n    width: calc(100% - 16px);\r\n    height: calc(100% - 16px);\r\n    margin: 8px 0 0 8px;\r\n`;","import { useEffect, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport SystemUtil from \"../../utils/systemUtil\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport EditDialog from \"./editDialog\";\r\nimport assert from \"assert\";\r\n\r\n\r\nconst BOX_WIDTH = 112;\r\nnamespace SetterFrame {\r\n\r\n    type Unit = {\r\n        time: number;\r\n        delay: number;\r\n        seeds: Seed[];\r\n    }\r\n    type ParDef = {\r\n        x: number;\r\n        y: number;\r\n    }\r\n    export type SeedMethod = 'draw' | 'circle';\r\n\r\n    export type Seed = {\r\n        rising: number;\r\n        seedColor: string;\r\n        layers: BarrLayer[];\r\n    }\r\n\r\n    export type BarrLayer = {\r\n        method: SeedMethod;\r\n        spread: number;\r\n        barrColor: string[];\r\n        pars: ParDef[];\r\n    }\r\n\r\n\r\n    export type LocalState = {\r\n        units: Unit[];\r\n        focusUnit: number;\r\n        focusSeed: number;\r\n        focusLayer: number;\r\n        isDetail: boolean;\r\n        thumbs: string[][];\r\n    }\r\n\r\n    export type Request = {\r\n        units: Unit[];\r\n    }\r\n    export const Component = (props: {\r\n        isVisible: boolean;\r\n        start: (req: Request) => void;\r\n    }) => {\r\n\r\n        const [ls, setLs] = useState<LocalState>({\r\n            units: [],\r\n            focusUnit: -1,\r\n            focusSeed: -1,\r\n            focusLayer: 0,\r\n            isDetail: false,\r\n            thumbs: []\r\n        });\r\n        const invalidate = () => setLs({ ...ls });\r\n\r\n        const getNextTime = () => {\r\n            let time = 0;\r\n            if (ls.units.length !== 0) {\r\n                time = ls.units\r\n                    .map(u => u.time)\r\n                    .reduce((prev, cur) => prev < cur ? cur : prev, 0) + 110;\r\n            }\r\n            return time;\r\n        }\r\n\r\n        if (!props.isVisible) return <></>;\r\n\r\n        const curUnit = ls.focusUnit === -1 ? null : ls.units[ls.focusUnit];\r\n        const curSeed = curUnit == null ? null : curUnit.seeds[ls.focusSeed];\r\n        const curLayer = curSeed == null ? null : curSeed.layers[ls.focusLayer];\r\n\r\n        const getCurUnit = () => {\r\n            assert(curUnit != null, 'curUnitがnullであってはならない。');\r\n            return curUnit;\r\n        }\r\n        const getCurSeed = () => {\r\n            assert(curSeed != null, 'curSeedがnullであってはならない。');\r\n            return curSeed;\r\n        }\r\n        const getCurLayer = () => {\r\n            assert(curLayer != null, 'curLayerがnullであってはならない。');\r\n            return curLayer;\r\n        }\r\n\r\n        const createInitialLayer = (): BarrLayer => {\r\n            return {\r\n                method: 'draw', spread: 0.08, barrColor: ['#ff0000', '#0000ff'], pars: []\r\n            };\r\n        }\r\n\r\n        return (\r\n            <_Wrap>\r\n                {ls.units.map((unit, i) => {\r\n\r\n                    return (\r\n                        <_Record key={i}>\r\n                            {unit.seeds.map((seed, j) => {\r\n\r\n                                const getThumbJsx = () => {\r\n                                    const thumb = ls.thumbs[i][j];\r\n                                    return thumb === '' ? <></> : <_Thumb src={thumb} />;\r\n                                }\r\n                                return (\r\n                                    <_Box key={j}\r\n                                        isFocus={ls.focusUnit === i && ls.focusSeed === j}\r\n                                        onClick={() => {\r\n                                            ls.focusUnit = i;\r\n                                            ls.focusSeed = j;\r\n                                            invalidate();\r\n                                        }}\r\n                                        onContextMenu={() => {\r\n                                            ls.isDetail = true;\r\n                                            invalidate();\r\n                                        }}\r\n                                    >\r\n                                        {getThumbJsx()}\r\n                                    </_Box>\r\n                                );\r\n                            })}\r\n                        </_Record>\r\n                    );\r\n                })}\r\n                <FormUtil.ButtonRecord textAlign=\"left\" buttons={[\r\n                    {\r\n                        label: '+Unit', width: 100, isEnable: ls.units.length < 7, callback: () => {\r\n                            ls.units.push({\r\n                                seeds: [\r\n                                    {\r\n                                        rising: 5, seedColor: '#ffff99', layers: [createInitialLayer()]\r\n                                    }\r\n                                ],\r\n                                delay: 0,\r\n                                time: getNextTime()\r\n                            });\r\n                            ls.thumbs.push(['']);\r\n                            ls.focusUnit = ls.units.length - 1;\r\n                            ls.focusSeed = 0;\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                    {\r\n                        label: '-Unit', width: 100, isEnable: ls.focusUnit !== -1, callback: () => {\r\n                            ls.units.splice(ls.focusUnit, 1);\r\n                            ls.thumbs.splice(ls.focusUnit, 1);\r\n                            ls.focusUnit = -1;\r\n                            ls.focusSeed = -1;\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                    {\r\n                        label: '+Seed', width: 100, isEnable: ls.focusUnit !== -1 && ls.units[ls.focusUnit].seeds.length < 5,\r\n                        callback: () => {\r\n                            ls.units[ls.focusUnit].seeds.push(\r\n                                JSON.parse(JSON.stringify(ls.units[ls.focusUnit].seeds[ls.focusSeed]))\r\n                            );\r\n                            ls.thumbs[ls.focusUnit].push('');\r\n                            ls.focusSeed = ls.units[ls.focusUnit].seeds.length - 1;\r\n                            invalidate();\r\n                        }\r\n                    },\r\n                    {\r\n                        label: '-Seed', width: 100, isEnable: ls.focusUnit !== -1 && ls.units[ls.focusUnit].seeds.length > 1,\r\n                        callback: () => {\r\n                            const seeds = ls.units[ls.focusUnit].seeds;\r\n                            seeds.splice(ls.focusSeed, 1);\r\n                            ls.thumbs.splice(ls.focusSeed, 1);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]} />\r\n                <FormUtil.ButtonRecord textAlign=\"left\" buttons={[\r\n                    {\r\n                        label: 'Start', width: 130, isEnable: ls.units.length > 0, callback: () => {\r\n                            props.start({\r\n                                units: ls.units\r\n                            })\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]} />\r\n\r\n                {!ls.isDetail ? <></> : (\r\n                    <_Blind>\r\n                        {/* <_ParamRecord>\r\n                            <_ParamLabel>Unit Interval</_ParamLabel>\r\n                            <_InputRange type=\"range\" min={0} max={20} />\r\n                        </_ParamRecord> */}\r\n                        {/* <_ParamRecord>\r\n                            <_ParamLabel>Seed Delay</_ParamLabel>\r\n                            <_InputRange type=\"range\" min={0} max={10} value={ls.units[ls.focusUnit].delay} onChange={(e) => {\r\n                                ls.units[ls.focusUnit].delay = Number(e.target.value);\r\n                                invalidate();\r\n                            }} />\r\n                        </_ParamRecord> */}\r\n                        <_ParamRecord>\r\n                            <_ParamLabel>Rising Speed</_ParamLabel>\r\n                            <_InputRange type=\"range\" min={3} max={8} step={0.1} value={getCurSeed().rising} onChange={(e) => {\r\n                                getCurSeed().rising = Number(e.target.value);\r\n                                invalidate();\r\n                            }} />\r\n                        </_ParamRecord>\r\n                        <_ParamRecord>\r\n                            <_ParamLabel>Seed Color</_ParamLabel>\r\n                            <_InputColor type=\"color\" value={getCurSeed().seedColor} onChange={(e) => {\r\n                                ls.units[ls.focusUnit].seeds[ls.focusSeed].seedColor = e.target.value;\r\n                                invalidate();\r\n                            }} />\r\n                        </_ParamRecord>\r\n                        <_ParamRecord>\r\n                            <_ParamLabel>Layer</_ParamLabel>\r\n                            {getCurSeed().layers.map((layer, i) => {\r\n\r\n                                return (\r\n                                    <_Button key={i} width={80} bgColor={ls.focusLayer === i ? '#e7ee8d' : '#e5e6dc'} onClick={() => {\r\n                                        ls.focusLayer = i;\r\n                                        invalidate();\r\n                                    }}>{`layer ${i + 1}`}</_Button>\r\n                                );\r\n                            })}\r\n                            <_Button width={30} bgColor='#d5e6e9' onClick={() => {\r\n                                getCurSeed().layers.push(createInitialLayer());\r\n                                invalidate();\r\n                            }}>{`+`}</_Button>\r\n                            <_Button width={30} bgColor='#d5e6e9' onClick={() => {\r\n                                getCurSeed().layers.splice(ls.focusLayer, 1);\r\n                                ls.focusLayer --;\r\n                                invalidate();\r\n                            }}>{`-`}</_Button>\r\n                        </_ParamRecord>\r\n                        <_ParamRecord>\r\n                            <_ParamLabel>Method</_ParamLabel>\r\n                            <_Button width={100} bgColor={getCurLayer().method === 'draw' ? '#e7ee8d' : '#e5e6dc'} onClick={() => {\r\n                                const seed = getCurLayer();\r\n                                seed.method = 'draw';\r\n                                seed.pars.length = 0;\r\n                                invalidate();\r\n                            }}>Draw</_Button>\r\n                            <_Button width={100} bgColor={getCurLayer().method === 'circle' ? '#e7ee8d' : '#e5e6dc'} onClick={() => {\r\n                                const seed = getCurLayer();\r\n                                seed.method = 'circle';\r\n                                seed.pars.length = 0;\r\n                                invalidate();\r\n                            }}>Circle</_Button>\r\n                        </_ParamRecord>\r\n                        <_ParamRecord>\r\n                            <_ParamLabel>Spread Speed</_ParamLabel>\r\n                            <_InputRange type=\"range\" min={0.04} max={0.2} step={0.01} value={getCurLayer().spread} onChange={(e) => {\r\n                                getCurLayer().spread = Number(e.target.value);\r\n                                invalidate();\r\n                            }} />\r\n                        </_ParamRecord>\r\n                        <_ParamRecord>\r\n                            <_ParamLabel>Barrage Color</_ParamLabel>\r\n                            <_InputColor type=\"color\" value={getCurLayer().barrColor[0]} onChange={(e) => {\r\n                                getCurLayer().barrColor[0] = e.target.value;\r\n                                invalidate();\r\n                            }} />\r\n                            <_InputColor type=\"color\" value={getCurLayer().barrColor[1]} onChange={(e) => {\r\n                                getCurLayer().barrColor[1] = e.target.value;\r\n                                invalidate();\r\n                            }} />\r\n                        </_ParamRecord>\r\n                        <_WndWrap>\r\n                            <EditDialog.Component ls={ls} invalidate={invalidate} />\r\n                        </_WndWrap>\r\n                        <FormUtil.ButtonRecord textAlign=\"left\" buttons={[\r\n                            {\r\n                                label: 'Clear', width: 130, callback: () => {\r\n                                    getCurLayer().pars.length = 0;\r\n                                    invalidate();\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Enter', width: 130, callback: () => {\r\n                                    ls.isDetail = false;\r\n\r\n                                    const WIDTH = SystemUtil.CONTENTS_WIDTH - 16;\r\n                                    ls.thumbs[ls.focusUnit][ls.focusSeed] = CanvasUtil.createURL(WIDTH, WIDTH, (ctx => {\r\n                                        getCurSeed().layers.forEach(layer => {\r\n                                            layer.pars.forEach(par => {\r\n                                                const x = WIDTH / 2 + par.x;\r\n                                                const y = WIDTH / 2 + par.y;\r\n                                                ctx.beginPath();\r\n                                                ctx.arc(x, y, 5, 0, Math.PI * 2, true);\r\n                                                ctx.strokeStyle = layer.barrColor[0];\r\n                                                ctx.stroke();\r\n                                            });\r\n                                        });\r\n                                    }));\r\n                                    invalidate();\r\n                                }\r\n                            }\r\n                        ]} />\r\n                    </_Blind>\r\n                )}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SetterFrame;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    background-color: #004;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    background-color: #9696a1;\r\n    width: 100%;\r\n    height: 117px;\r\n    margin-top: 2px;\r\n    text-align: center;\r\n    padding: 0 0 0 2px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Box = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    background-color: #27272b;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #42525a;\r\n    `}\r\n    width: ${BOX_WIDTH}px;\r\n    height: ${BOX_WIDTH}px;\r\n    margin: 2px 0 0 2px;\r\n\r\n    &:hover {\r\n        opacity: 0.7;\r\n    }\r\n`;\r\nconst _Thumb = styled.img<{\r\n}>`\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;  \r\n`;\r\n\r\nconst _Blind = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    background-color: #005c5f;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: left;\r\n    z-index: 2;\r\n    opacity: 0.99;\r\n`;\r\n\r\nconst _ParamRecord = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n\r\n    background-color: #d4d6d6;\r\n    margin-top: 2px;\r\n    width: 100%;\r\n    height: 50px;\r\n    text-align: left;\r\n`;\r\nconst _ParamLabel = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n\r\n    font-weight: 600;\r\n    font-size: 18px;\r\n    line-height: 18px;\r\n    color: #810303;\r\n    width: 100%;\r\n    height: 20px;\r\n    background-color: #d3d31760;\r\n`;\r\nconst _Button = styled.div<{\r\n    width: number;\r\n    bgColor: string;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n\r\n    margin: 2px 0 0 2px;\r\n    font-weight: 600;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    text-align: center;\r\n    color: #000000;\r\n    border: 1px #000 solid;\r\n    border-radius: 4px;\r\n    width: ${props => props.width}px;\r\n    height: 25px;\r\n    background-color: ${props => props.bgColor};\r\n\r\n    &:hover {\r\n        opacity: 0.6;\r\n    }\r\n`;\r\nconst _InputRange = styled.input`\r\n    display: inline-block;\r\n    position: relative;\r\n\r\n    margin-left: 20px;\r\n    width: calc(100% - 40px);\r\n    height: 30px;\r\n    box-sizing: border-box;\r\n`;\r\nconst _InputColor = styled.input`\r\n    display: inline-block;\r\n    position: relative;\r\n\r\n    width: 50px;\r\n    height: 30px;\r\n    box-sizing: border-box;\r\n`;\r\nconst _WndWrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 2px;\r\n\r\n    background-color: #c72020d2;\r\n    width: ${SystemUtil.CONTENTS_WIDTH}px;\r\n    height: ${SystemUtil.CONTENTS_WIDTH}px;\r\n    text-align: left;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport Sketch from \"react-p5\";\r\nimport p5Types from \"p5\";\r\nimport SystemUtil from \"../../utils/systemUtil\";\r\nimport SetterFrame from \"./setterFrame\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\n\r\nnamespace PlayerFrame {\r\n\r\n    const getRgbFromColorCode = (code: string) => {\r\n        var r = parseInt(code.substring(1, 3), 16);\r\n        var g = parseInt(code.substring(3, 5), 16);\r\n        var b = parseInt(code.substring(5, 7), 16);\r\n        return [r, g, b];\r\n    }\r\n    const CANVAS_WIDTH = SystemUtil.CONTENTS_WIDTH;\r\n    type XY = {\r\n        x: number;\r\n        y: number;\r\n    }\r\n    class Vec {\r\n        v: XY;\r\n        len: number;\r\n        rad: number;\r\n        constructor(dirRad: number, len: number) {\r\n            this.v = {\r\n                x: Math.cos(dirRad) * len,\r\n                y: Math.sin(dirRad) * len\r\n            };\r\n            this.rad = dirRad;\r\n            this.len = len;\r\n        }\r\n        syncVecToRad() {\r\n            this.rad = Math.atan2(this.v.y, this.v.x);\r\n            this.len = Math.sqrt(Math.abs(this.v.x) * Math.abs(this.v.x) + Math.abs(this.v.y) * Math.abs(this.v.y));\r\n        }\r\n    }\r\n\r\n    const getRGBA = (color: { r: number, g: number, b: number, a: number }) => {\r\n        const r = ('00' + color.r.toString(16)).slice(-2);\r\n        const g = ('00' + color.g.toString(16)).slice(-2);\r\n        const b = ('00' + color.b.toString(16)).slice(-2);\r\n        const a = ('00' + color.a.toString(16)).slice(-2);\r\n        return `#${r}${g}${b}${a}`;\r\n    }\r\n\r\n    class Color {\r\n        r: number;\r\n        g: number;\r\n        b: number;\r\n        a: number;\r\n\r\n        constructor(r: number, g: number, b: number) {\r\n            this.r = r;\r\n            this.g = g;\r\n            this.b = b;\r\n            this.a = 255;\r\n        }\r\n\r\n        getRGBA() {\r\n            return getRGBA({ r: this.r, g: this.g, b: this.b, a: this.a });\r\n        }\r\n    }\r\n    class Particle {\r\n\r\n        pos: XY;\r\n        prevPos: XY;\r\n        vec: Vec;\r\n        radius: number;\r\n\r\n        color: Color;\r\n        timer: number;\r\n\r\n        isLive: boolean;\r\n\r\n        histories: XY[];\r\n\r\n        extend: Extend;\r\n\r\n        constructor(pos: XY, vec: Vec, radius: number, extend: Extend) {\r\n            this.pos = this.prevPos = pos;\r\n            this.vec = vec;\r\n            this.radius = radius;\r\n            this.color = new Color(255, 255, 255);\r\n            this.extend = extend;\r\n\r\n            this.timer = 0;\r\n            this.isLive = true;\r\n            this.histories = [];\r\n        }\r\n    }\r\n\r\n    type Extend = {\r\n        modulate: (self: Particle) => void;\r\n        draw: (self: Particle) => void;\r\n        props: any;\r\n    }\r\n\r\n    type MainBarrProp = {\r\n        limit: number;\r\n        startColor: Color;\r\n        endColor: Color;\r\n    }\r\n\r\n    type EmbersProp = {\r\n        limit: number;\r\n        color: Color;\r\n    }\r\n    type SeedProp = {\r\n        color: Color;\r\n        shadeNum: number;\r\n    }\r\n\r\n    export const Component = (props: {\r\n        req: SetterFrame.Request;\r\n        back: () => void;\r\n    }) => {\r\n        const [ls, setLs] = useState<{\r\n            time: number;\r\n            list: Particle[];\r\n            nextUnitIndex: number;\r\n        }>({\r\n            time: 0,\r\n            list: [],\r\n            nextUnitIndex: -1\r\n        });\r\n        const invalidate = () => setLs({ ...ls });\r\n\r\n        // const updateNextTime = () => {\r\n        //     const nextUnit = props.req.units.find(u => u.time > ls.nextTime);\r\n        //     if (nextUnit != undefined) {\r\n        //         ls.nextTime = nextUnit.time;\r\n        //         invalidate();\r\n        //     }\r\n        // }\r\n\r\n        useEffect(() => {\r\n            if (props.req.units.length > 0) {\r\n                ls.nextUnitIndex = 0;\r\n                invalidate();\r\n            }\r\n        }, []);\r\n\r\n        const setup = (p5: p5Types, canvasParentRef: Element) => {\r\n            p5.createCanvas(CANVAS_WIDTH, CANVAS_WIDTH).parent(canvasParentRef);\r\n            p5.background('#000');\r\n            // p5.filter(p5.BLUR, 4);\r\n            p5.frameRate(60);\r\n        };\r\n\r\n        const draw = (p5: p5Types) => {\r\n            p5.background('#000000');\r\n\r\n            if (ls.nextUnitIndex === -1) return;\r\n            const unit = props.req.units[ls.nextUnitIndex];\r\n\r\n            const createSeed = () => {\r\n\r\n                unit.seeds.forEach((seed, i) => {\r\n                    const interval = CANVAS_WIDTH / (unit.seeds.length + 1);\r\n                    const x = interval + interval * i;\r\n\r\n                    const [r, g, b] = getRgbFromColorCode(seed.seedColor);\r\n                    const seedExt: SeedProp = {\r\n                        color: new Color(r, g, b),\r\n                        shadeNum: 10\r\n                    };\r\n                    ls.list.push(new Particle(\r\n                        { x, y: CANVAS_WIDTH },\r\n                        new Vec(Math.PI * 1.5, seed.rising),\r\n                        13,\r\n                        {\r\n                            modulate: (self) => {\r\n                                const ext: SeedProp = self.extend.props;\r\n                                // 重力\r\n                                self.vec.v.y += 0.05;\r\n\r\n                                // self.histories.unshift({ ...self.pos });\r\n                                // if (self.histories.length > self.extend.props.shadeNum) self.histories.splice(self.histories.length - 1, 1);\r\n\r\n                                if (self.timer === 0) {\r\n                                    self.color = ext.color;\r\n                                }\r\n\r\n                                if (self.vec.v.y < 0) {\r\n                                    createTracer(self, ext.color);\r\n                                }\r\n                                if (self.vec.v.y > 2) {\r\n                                    self.isLive = false;\r\n\r\n                                    createBarrage(seed, self);\r\n                                }\r\n                                // self.histories.unshift({ ...self.pos });\r\n                                // if (self.histories.length > ext.shadeNum) self.histories.splice(self.histories.length - 1, 1);\r\n                            },\r\n                            draw: (self) => {\r\n                                // const limit: number = self.extend.props.limit;\r\n                                // // self.color.a = Math.floor(255 * ((limit - self.timer) / limit));\r\n\r\n                                // p5.noStroke();\r\n                                // p5.fill(self.color.getRGBA());\r\n                                // p5.ellipse(self.pos.x, self.pos.y, self.radius, self.radius);\r\n\r\n                                // self.histories.forEach(pos => {\r\n                                //     const subA = Math.floor(self.color.a * ((limit - self.timer) / limit));\r\n                                //     p5.fill(getRGBA({ ...self.color, a: subA }));\r\n                                //     p5.ellipse(pos.x, pos.y, self.radius, self.radius);\r\n                                // });\r\n                            },\r\n                            props: seedExt\r\n                        }\r\n                    ));\r\n                });\r\n            }\r\n\r\n            const createTracer = (parent: Particle, color: Color) => {\r\n                const parNum = 2;\r\n                const ext: MainBarrProp = {\r\n                    limit: Math.floor(21 + Math.random() * 42),\r\n                    startColor: new Color(255, 110, 110),\r\n                    endColor: new Color(120, 110, 255)\r\n                }\r\n                for (let i = 0; i < parNum; i++) {\r\n                    const rangeRad = 0.12;\r\n                    ls.list.push(new Particle(\r\n                        { x: parent.pos.x, y: parent.pos.y },\r\n                        new Vec(\r\n                            Math.PI / 2 - rangeRad / 2 + Math.random() * rangeRad,\r\n                            (Math.random() * Math.abs(parent.vec.v.y)) * 2\r\n                        ),\r\n                        3 + Math.random() * 5,\r\n                        // new Color(255, Math.floor(Math.random() * 155), 0),\r\n                        {\r\n                            modulate: (self) => {\r\n                                const ext: MainBarrProp = self.extend.props;\r\n                                const limit = ext.limit;\r\n                                if (self.timer === 0) {\r\n                                    self.color = ext.startColor;\r\n                                }\r\n                                if (self.timer === limit) self.isLive = false;\r\n\r\n\r\n                                if (self.timer === 0) self.color = color;\r\n\r\n                                // 長さが1になるまで減速\r\n                                if (self.vec.len > 1) {\r\n                                    self.vec.v.x *= 0.91;\r\n                                    self.vec.v.y *= 0.91;\r\n                                    self.vec.syncVecToRad();\r\n                                }\r\n\r\n                            },\r\n                            draw: (self) => {\r\n                                const ext: MainBarrProp = self.extend.props;\r\n                                const limit = ext.limit;\r\n\r\n                                // self.color.a = Math.floor(255 * ((limit - self.timer) / limit));\r\n                                const radRate = ((limit - self.timer) / limit);\r\n                                const radius = self.radius * radRate;\r\n                                p5.noStroke();\r\n\r\n                                p5.fill(self.color.getRGBA());\r\n                                p5.ellipse(self.pos.x, self.pos.y, radius, radius);\r\n                            },\r\n                            props: ext\r\n                        }\r\n                    ));\r\n                }\r\n            }\r\n\r\n            const createBarrage = (seed: SetterFrame.Seed, self: Particle) => {\r\n\r\n                seed.layers.forEach(layer => {\r\n\r\n                    const [sr, sg, sb] = getRgbFromColorCode(layer.barrColor[0]);\r\n                    const [er, eg, eb] = getRgbFromColorCode(layer.barrColor[1]);\r\n                    layer.pars.forEach((par) => {\r\n                        const barrExt: MainBarrProp = {\r\n                            limit: Math.floor(80 + Math.random() * 120),\r\n                            startColor: new Color(sr, sg, sb),\r\n                            endColor: new Color(er, eg, eb)\r\n                        };\r\n\r\n                        const radian = Math.atan2(par.y, par.x);\r\n                        const lenRate = layer.spread;\r\n                        const len = Math.sqrt(Math.abs(par.x) * Math.abs(par.x) + Math.abs(par.y) * Math.abs(par.y)) * lenRate;\r\n                        ls.list.push(new Particle(\r\n                            { x: self.pos.x, y: self.pos.y },\r\n                            new Vec(\r\n                                radian,\r\n                                len\r\n                            ),\r\n                            4 + Math.random() * 6,\r\n                            {\r\n                                modulate: (self) => {\r\n                                    const ext: MainBarrProp = self.extend.props;\r\n                                    const limit: number = ext.limit;\r\n\r\n                                    const rSub = ext.endColor.r - ext.startColor.r;\r\n                                    const gSub = ext.endColor.g - ext.startColor.g;\r\n                                    const bSub = ext.endColor.b - ext.startColor.b;\r\n                                    const limitRate = self.timer / limit;\r\n                                    self.color.r = ext.startColor.r + Math.floor(rSub * limitRate);\r\n                                    self.color.g = ext.startColor.g + Math.floor(gSub * limitRate);\r\n                                    self.color.b = ext.startColor.b + Math.floor(bSub * limitRate);\r\n\r\n                                    if (self.timer === limit) {\r\n                                        self.isLive = false;\r\n\r\n                                        createEmbers(self, ext.endColor);\r\n                                    }\r\n\r\n                                    // self.histories.unshift({ ...self.pos });\r\n                                    // if (self.histories.length > self.extend.props.shadeNum) self.histories.splice(self.histories.length - 1, 1);\r\n\r\n                                    // 長さが1になるまで減速\r\n                                    if (self.vec.len > 0.4) {\r\n                                        self.vec.v.x *= 0.91;\r\n                                        self.vec.v.y *= 0.91;\r\n                                        self.vec.syncVecToRad();\r\n                                        // console.log(`len: ${self.vec.len}`);\r\n                                    }\r\n                                },\r\n                                draw: (self) => {\r\n                                    const limit: number = self.extend.props.limit;\r\n                                    let rate = 1;\r\n                                    const start = 60;\r\n                                    if (limit - self.timer < start) {\r\n                                        rate = (limit - self.timer) / start;\r\n                                    }\r\n                                    // self.color.a = Math.floor(255 * rate);\r\n                                    p5.noStroke();\r\n\r\n                                    // self.histories.forEach(pos => {\r\n                                    //     const subA = Math.floor(self.color.a * ((limit - self.timer) / limit));\r\n                                    //     p5.fill(getRGBA({ ...self.color, a: subA }));\r\n                                    //     p5.ellipse(pos.x, pos.y, self.radius, self.radius);\r\n                                    // });\r\n                                    const color = self.color;\r\n                                    // p5.strokeWeight(2);\r\n                                    // p5.stroke('#ffffff33')\r\n                                    // p5.stroke(color.getRGBA());\r\n                                    // color.a = 255 * rate;\r\n                                    // color.g = Math.random() * 100;\r\n                                    // p5.drawingContext.shadowBlur = 20;\r\n                                    // p5.drawingContext.shadowColor = '#ff0000e1';\r\n                                    p5.fill(color.getRGBA());\r\n                                    // p5.fill('#ffffff36')\r\n                                    const radius = self.radius * rate;\r\n                                    // const radius = Math.floor(self.radius * (-0.7 + Math.random() * 0.6));\r\n                                    p5.ellipse(self.pos.x, self.pos.y, radius, radius);\r\n                                    // p5.ellipse(self.pos.x, self.pos.y, self.radius, self.radius);\r\n                                },\r\n                                props: barrExt\r\n                            }\r\n                        ));\r\n\r\n                        createDust(self, barrExt.startColor, radian, len);\r\n                    });\r\n                });\r\n            }\r\n\r\n            /**\r\n             * 残り火を生成\r\n             * @param parent \r\n             */\r\n            const createEmbers = (parent: Particle, color: Color) => {\r\n\r\n                ls.list.push(new Particle(\r\n                    { x: parent.pos.x, y: parent.pos.y },\r\n                    new Vec(\r\n                        Math.PI / 2,\r\n                        0.5\r\n                    ),\r\n                    4,\r\n                    {\r\n                        modulate: (self) => {\r\n\r\n                            self.vec.v.y += 0.006;\r\n                            const limit: number = self.extend.props.limit;\r\n                            if (self.timer === 0) {\r\n                                self.color = color;\r\n                            }\r\n                            if (self.timer === limit) {\r\n                                self.isLive = false;\r\n                            }\r\n                        },\r\n                        draw: (self) => {\r\n                            if (self.timer % 12 >= 6) return;\r\n                            self.color.a = 160;\r\n                            // p5.drawingContext.shadowColor = '#fff';\r\n                            // p5.drawingContext.shadowBlur = 50;\r\n                            p5.fill(self.color.getRGBA());\r\n                            p5.ellipse(self.pos.x, self.pos.y, self.radius, self.radius);\r\n                        },\r\n                        props: {\r\n                            limit: Math.floor(20 + Math.random() * 40),\r\n                        }\r\n                    }\r\n                ));\r\n            }\r\n\r\n            /**\r\n             * 粉塵を生成\r\n             * @param parent \r\n             * @param color \r\n             * @param radian \r\n             * @param len \r\n             */\r\n            const createDust = (parent: Particle, color: Color, radian: number, len: number) => {\r\n                const randNum = Math.floor(Math.random() * 3);\r\n                for (let j = 0; j < randNum; j++) {\r\n                    const secondRate = Math.random() * 2.3;\r\n                    ls.list.push(new Particle(\r\n                        { x: parent.pos.x, y: parent.pos.y },\r\n                        new Vec(\r\n                            radian,\r\n                            len * secondRate\r\n                        ),\r\n                        2 + Math.random() * 3,\r\n                        // new Color(255, Math.floor(Math.random() * 155), 0),\r\n                        {\r\n                            modulate: (self) => {\r\n                                const limit: number = self.extend.props.limit;\r\n                                if (self.timer === limit) self.isLive = false;\r\n\r\n                                if (self.timer === 0) self.color = color;\r\n\r\n                                // 長さが1になるまで減速\r\n                                if (self.vec.len > 1) {\r\n                                    self.vec.v.x *= 0.91;\r\n                                    self.vec.v.y *= 0.91;\r\n                                    self.vec.syncVecToRad();\r\n                                }\r\n\r\n                            },\r\n                            draw: (self) => {\r\n                                const limit: number = self.extend.props.limit;\r\n                                self.color.a = Math.floor(255 * ((limit - self.timer) / limit));\r\n                                p5.noStroke();\r\n\r\n                                p5.fill(self.color.getRGBA());\r\n                                p5.ellipse(self.pos.x, self.pos.y, self.radius, self.radius);\r\n                            },\r\n                            props: {\r\n                                limit: Math.floor(30 + Math.random() * 77),\r\n                                shadeNum: 0\r\n                            }\r\n                        }\r\n                    ));\r\n                }\r\n            }\r\n\r\n            if (ls.time === unit.time) {\r\n\r\n                createSeed();\r\n\r\n                if (props.req.units.length > ls.nextUnitIndex + 1) {\r\n                    ls.nextUnitIndex++;\r\n                    invalidate();\r\n                }\r\n            }\r\n\r\n            for (let i = ls.list.length - 1; i >= 0; i--) {\r\n                const par = ls.list[i];\r\n\r\n                p5.noStroke();\r\n\r\n                par.pos.x += par.vec.v.x;\r\n                par.pos.y += par.vec.v.y;\r\n\r\n                par.extend.modulate(par);\r\n\r\n                par.extend.draw(par);\r\n\r\n                par.timer++;\r\n                if (!par.isLive) {\r\n                    ls.list.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (ls.nextUnitIndex < props.req.units.length - 1 || ls.list.length > 0) {\r\n                ls.time++;\r\n            }\r\n            // invalidate();\r\n\r\n            p5.textSize(20);\r\n            p5.fill('#f5cdcd')\r\n            p5.text(`Frame: ${ls.time}`, 5, 20);\r\n            p5.text(`Second: ${Math.floor(ls.time / 60)}`, 5, 40);\r\n            p5.fill('#d8f5cd')\r\n            p5.text(`Particle: ${ls.list.length}`, 5, 60);\r\n        };\r\n\r\n        return (<>\r\n            <Sketch setup={setup} draw={draw} />\r\n            <FormUtil.ButtonRecord textAlign=\"left\" buttons={[\r\n                {\r\n                    label: 'Restart', width: 130, callback: () => {\r\n                        ls.time = 0;\r\n                        ls.nextUnitIndex = 0;\r\n                        ls.list.length = 0;\r\n                        invalidate();\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Back', width: 130, callback: () => {\r\n                        props.back();\r\n                    }\r\n                }\r\n            ]} />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default PlayerFrame;","import { Ref, useEffect, useMemo, useRef, useState } from \"react\";\nimport SetterFrame from \"./setterFrame\";\nimport PlayerFrame from \"./playerFrame\";\nimport SystemUtil from \"../../utils/systemUtil\";\nimport styled from \"styled-components\";\nimport assert from \"assert\";\n\n\nnamespace SystemEntry {\n\n    type Mode = 'set' | 'play'\n    type LocalState = {\n        mode: Mode;\n        req: SetterFrame.Request | null;\n    }\n    type ScreenBean = {\n        adjLeft: number;\n        adjTop: number;\n        rate: number;\n    }\n\n    export const Component = () => {\n\n        const [ls, setLs] = useState<LocalState>({\n            mode: 'set',\n            req: null,\n        });\n        const invalidate = () => setLs({ ...ls });\n\n        const [screen, setScreen] = useState<ScreenBean>({ adjLeft: 0, adjTop: 0, rate: 1 });\n        const ref = useRef<null | HTMLDivElement>(null);\n\n        const update = () => {\n            if (ref.current != null) {\n                // const [clientWidth, clientHeight] = [window.innerWidth, window.innerHeight];\n\n                const rect = ref.current.getBoundingClientRect();\n                const [clientWidth, clientHeight] = [rect.width, rect.height];\n\n                const cw = SystemUtil.CONTENTS_WIDTH;\n                const ch = SystemUtil.CONTENTS_HEIGHT;\n\n                const isFitSide = clientHeight / ch > clientWidth / cw;\n\n                const rate = !isFitSide ? clientHeight / ch : clientWidth / cw;\n                const adjLeft = !isFitSide ? clientWidth / 2 - (cw * rate / 2) : 0;\n                const adjTop = !isFitSide ? 0 : clientHeight / 2 - (ch * rate / 2);\n\n                setScreen({ adjLeft, adjTop, rate });\n            }\n        }\n\n        window.addEventListener('DOMContentLoaded', () => {\n            if (!SystemUtil.isSmartPhone()) {\n                window.addEventListener('resize', update);\n            } else {\n                window.addEventListener('orientationchange resize', update);\n            }\n        });\n\n        // window.onorientationchange = () => {\n        //   setOrientation(window.orientation);\n        // }\n\n        useEffect(() => update(), []);\n\n        const setterFrame = (\n            <SetterFrame.Component isVisible={ls.mode === 'set'} start={(req) => {\n                ls.req = req;\n                ls.mode = 'play';\n                invalidate();\n            }} />\n        );\n\n        return (\n            <_Wrap ref={ref}>\n                <_Frame left={screen.adjLeft} top={screen.adjTop} rate={screen.rate}>\n                    <_Contents>\n                        {(() => {\n                            switch (ls.mode) {\n                                case 'set': return setterFrame\n                                case 'play': {\n                                    assert(ls.req != null, 'ls.reqがnullであってはならない。');\n                                    return <>{setterFrame}<PlayerFrame.Component req={ls.req} back={() => {\n                                        ls.mode = 'set';\n                                        invalidate();\n                                    }} /></>;\n                                }\n                            }\n                        })()}\n                    </_Contents>\n                </_Frame>\n            </_Wrap>\n        );\n    }\n\n}\n\nexport default SystemEntry;\n\n\nconst _Wrap = styled.div`\n  display: inline-block;\n  position: relative;\n  /* width: calc(100% - 10px);\n  height: calc(100% - 10px);\n  background-color: #9eadc9;\n  margin: 5px 0 0 5px; */\n  width: 100%;\n  height: 100%;\n`;\n\nconst _Frame = styled.div<{\n    left: number;\n    top: number;\n    rate: number;\n}>`\n  display: inline-block;\n  position: absolute;\n  top: ${props => props.top}px;\n  left: ${props => props.left}px;\n  transform-origin: top left;\n  /* width: 100%;\n  height: 100%; */\n  transform: scale(${props => props.rate});\n`;\n\nconst _Contents = styled.div`\n  display: inline-block;\n  width: ${SystemUtil.CONTENTS_WIDTH}px;\n  height: ${SystemUtil.CONTENTS_HEIGHT}px;\n  background-color: #929292;\n`;","import React, { useEffect } from 'react';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry.Component />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}