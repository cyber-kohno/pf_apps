{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx","system/base/design/styles.tsx","system/contents/dialog/confirmDialog.tsx","system/utils/form/formUtiil.tsx","system/redux/store/store.tsx","system/utils/systemConst.tsx","system/contents/dialog/globalDialog.tsx","system/base/components/tab/tabbedPane.tsx","system/utils/canvasUtil.tsx","system/contents/graphic/particle.tsx","system/contents/graphic/drawUtil.tsx","system/contents/graphic/vectorUtil.tsx","system/contents/create/factory/util/paramUtil.tsx","system/contents/create/preview/modulateBuilder.tsx","system/contents/create/preview/previewUtil.tsx","system/utils/form/validateUtil.tsx","system/utils/treeUtil.tsx","system/contents/create/factory/logicMainteTab.tsx","system/contents/create/factory/detail/logic/editorArgumentMng.tsx","system/contents/create/factory/detail/common/modifyOperations.tsx","system/contents/create/factory/detail/logic/editorParamItem.tsx","system/contents/create/factory/detail/logic/editorArgumentItem.tsx","system/contents/create/factory/detail/seed/editorSeedMng.tsx","system/contents/create/factory/detail/logic/editorLogicMng.tsx","system/contents/create/factory/detail/logic/editorLogicItem.tsx","system/contents/create/factory/detail/logic/editorBehiviorMng.tsx","system/contents/create/factory/detail/logic/editorVisualMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnector.tsx","system/contents/create/factory/dialog/sendTemplateDialog.tsx","system/contents/create/factory/detail/logic/editorSendManager.tsx","system/contents/create/factory/detail/logic/editorFieldMng.tsx","system/contents/create/factory/detail/logic/editorExtendMng.tsx","system/contents/create/factory/detail/seed/editorSeedItem.tsx","system/contents/create/factory/detail/seed/editorThumbnailMng.tsx","system/contents/create/factory/detail/seed/editorThumbnailItem.tsx","system/contents/create/factory/util/logicFormUtil.tsx","system/contents/create/factory/detail/seed/editorSampleItem.tsx","system/contents/create/factory/detail/seed/editorSampleMng.tsx","system/contents/create/factory/detail/seed/editorInterfaceManager.tsx","system/contents/create/factory/detail/seed/editorSeedArgMng.tsx","system/contents/create/factory/detail/seed/editorSeedArgItem.tsx","system/contents/create/factory/detail/seed/editorSeedSendMng.tsx","system/contents/create/factory/detail/seed/editorFormgrpItem.tsx","system/contents/create/factory/detail/seed/editorFormgrpMng.tsx","system/contents/create/factory/util/logicUtil.tsx","system/contents/create/factory/util/logicElementUtil.tsx","system/contents/create/preview/buildUtil.tsx","system/contents/create/preview/inputForm/previewLogicInputForm.tsx","system/contents/create/preview/inputForm/previewSeedInputForm.tsx","system/contents/create/preview/previewLogicFrame.tsx","system/contents/create/preview/previewLauncherFrame.tsx","system/contents/mobile/directLinkManager.tsx","system/contents/mobile/mobileRoot.tsx","system/base/components/tab/channelPane.tsx","system/contents/create/launcher/tab/storyFuseAnalysis.tsx","system/contents/create/launcher/tab/storyProperty.tsx","system/contents/create/launcher/tab/storyEnvironment.tsx","system/contents/create/launcher/timelineFrame.tsx","system/contents/create/launcher/storyTab.tsx","system/contents/create/manage/nameDefDialog.tsx","system/contents/create/manage/newProjectDialog.tsx","system/contents/create/manage/newProjectDialogStoryOnly.tsx","system/contents/create/manage/manageTab.tsx","system/contents/create/createChannel.tsx","system/contents/home/publishFrame.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/dialog/accountFrame.tsx","system/contents/dialog/login/loginCreateAccount.tsx","system/contents/dialog/login/loginLogin.tsx","system/contents/dialog/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/directLogin.tsx","system/contents/entry/modeSelectDialog.tsx","system/contents/entry/systemEntry.tsx","system/utils/dataUtil.tsx"],"names":["App","useEffect","document","oncontextmenu","onkeydown","e","ctrlKey","includes","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","css","Styles","styled","div","ConfirmDialog","props","useContext","GlobalContext","store","setStore","width","height","buttons","label","callback","system","dialog","_Frame","_Main","_Inner","message","split","map","msg","i","Message","isCenter","ButtonRecord","align","FormUtil","checkables","result","forEach","checkable","errors","length","type","isPassword","validaters","validates","dependency","dep","value","getErrors","validater","checker","push","errorType","setCheckable","_Record","isEnable","isVisible","textAlign","marginTop","marginBottom","undefined","titleLabel","_ItemnLabel","_ItemnInputBak","hasTitle","placeholder","onChange","target","readOnly","isReadOnly","jsx","lablelWidth","labelWidth","isEnabled","isRecordItem","DEFAULT_LABEL_WIDTH","_FixedLabel","useState","isNaN","setNaN","isNumber","concat","step","_ItemnInput","Number","valueAsNumber","onBlur","toString","marginLeft","headBlank","list","slice","unshift","labelText","_ItemCombobox","item","_Option","disabled","isDisabled","button","_Button","onClick","_Message","isLink","clickAction","_BorderText","title","_BorderPanel","innerJsx","_InfoDiv","color","textRecords","text","isRelation","isUse","_Switch","find","CSS_BUTTON_DISABLE","CSS_LABEL_MIDIUM","input","select","option","CSS_LABEL_SMALL","ProjectTypes","initialStore","isSplash","user","isModeSelect","canDialogClose","env","isEditLibrary","isUseLocalFile","libraryData","storyData","scenarioCacheList","cloud","fileHandle","isPreviewMode","SystemConst","GloballDialog","_Blind","TabbedPane","activeNo","setActiveNo","tabRecordNum","_LabelList","tabElements","tab","index","name","isActive","enable","selectTab","selectTabIndex","_ContList","cont","TabLabel","_TabLabel","TabContents","_Contents","createURL","draw","canvas","createElement","ctx","getContext","toDataURL","CanvasUtil","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillStyle","fillText","adjust","measureText","save","WIDTH","AUTH_TEXT_WIDTH","SIZE","AUTH_TEXT_HEIGHT","rotate","Math","PI","char","charAt","fontRand","random","alphaRand","Particle","owner","pos","prevPos","vec","frame","limit","isLive","drawer","extend","update","x","xy","y","this","param","radiusBase","radius","self","flashAppearFrame","appearFrame","unitFrame","flashHideFrame","shrinkStartRate","start","floor","g","createRadialGradient","grads","rgba","convertRgbaFromColorCode","r","b","a","offset","convertColorCodeFromRgba","grad","addColorStop","globalAlpha","disappearStartRate","beginPath","arc","fill","code","parseInt","substring","r1","g1","b1","a1","rate","DrawUtil","VectorUtil","rad","len","syncFromXY","sqrt","atan2","syncFromRad","cos","sin","VisualParamType","BehaviorParamType","Object","values","SelfParamType","ExtendParamType","EffectParamType","ModulateParamType","ConstantType","ParamUtil","ModulateBuilder","extendList","decayRate","decayLimit","gravity","gravityLimit","SCREEN_WIDTH","SCREEN_HEIGHT","searchElement","origin","rootData","sends","createParticleRec","cur","valueMapList","ConstantValueMap","fieldMng","mngs","data","fields","field","paramItem","convertFormulaToValue","visualParams","params","behaviorParams","getVisualParam","convertParamsToValue","getBehaviorParam","LIMIT","POS_X","POS_Y","Vector","VEC_X","VEC_Y","VEC_RAD","VEC_LEN","connectMng","inherits","connect","connector","disable","logicItem","method","wrap","logicMng","defs","def","searchDependLogic","depend","addValueMap","FRAME","itrfldValueMap","loopCnt","extendParams","loopCntVal","LOOP_COUNT","convertParamsToBoolean","INVOKE","iterateValueMap","LOOP_ITERATE","sendValueMapList","Instance","build","DECAY_LIMIT","DECAY_RATE","GRAVITY_VAL","GRAVITY_LIMIT","RADIUS","colorR","COLOR_R","colorG","COLOR_G","colorB","COLOR_B","colorA","COLOR_A","disappearStart","DISAPPEAR_START","shrinkStart","SHRINK_START","FLASH_APPEAR_FRAME","FLASH_HIDE_FRAME","createGradDrawer","warpList","formula","v","valueMap","m","formulaStr","varCnt","formulaItems","str","convertFormulaToBoolean","RADIAN_ROUND","PreviewUtil","min","max","checkIncludesChars","ch","indexOf","num","conditions","ValidateUtil","TreeUtil","parent","depth","isOpen","children","node","parentNode","isDisable","focusNode","ref","useRef","buildElementNodeFromData","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","jsxList","useMemo","buildJsxRecords","element","spaceList","isCurrent","current","scrollWidth","tempNode","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","clickEvent","onDoubleClick","getLabelJsx","invalidate","_Wrap","FactoryTreeContext","createContext","LogicMainteTab","setFocusNode","isModify","setModify","setInvalidate","LogicUtil","getChildrenDataNode","masterNode","openPreviewDialog","Component","master","closeButtonAction","tabIndex","onKeyDown","n","_TreeDiv","_TreeHead","_TreeBody","Frame","getNodeDisplayJsx","_PropsDiv","_DetailDiv","_DetailHeader","_DetailHeaderLabel","getTypeName","Provider","setRootData","removeSelf","splice","parentWrap","listName","LogicElementUtil","getListParamName","_DetailMainDiv","getDetailComponent","EditorArgumentMng","BorderPanel","newNode","addChild","ModifyOperations","isComplete","isCompleteCheck","checkableFields","mappingForm","isInputOK","firstRegist","modifyRegist","Level","EditorArgumentItem","logicNode","setName","argType","setArgType","reservedList","getParamNameList","valueType","syncArgumentAdd","prevName","syncArgumentName","FormRecord","TextField","checkRequired","checkStringLength","checkFieldName","filter","Combobox","ArgTypes","refers","getArgumentRefers","syncArgumentDel","getSwapButtons","argName","searchVariableReferInFormula","varItem","newName","syncFormula","mng","visualMng","behaviorMng","inhMng","inh","inhfld","getInnerWrap","syncParamName","runRec","logic","conn","inhLogic","getInnerWrapFixed","sendMng","seedMng","console","log","interfaceWrap","connWrap","syncArgumentCallback","inhMngNode","getInnerNodeFixed","seedNode","interfaceNode","sendNode","entry","newArgName","paramWrap","createParamWrap","createNode","delArgName","delIndex","some","EditorSeedMng","itemWrap","EditorLogicMng","EditorLogicItem","el","isConnect","hasArgNode","hasFieldNode","hasConnectNode","existNameList","getExistNameList","toggleElement","hasNode","listPos","wrapElement","removeChild","insertChild","getDefaultLogicMngs","syncLogicName","Record","Switch","argumentNode","getInnerNode","hasArgument","args","fieldNode","hasField","inheritNode","hasInherit","getReplicateButton","getLocgicRefers","logicName","searchLogicReferInherit","id","logicMngNode","EditorParamItem","setFormulaItems","varFormList","setVarFormList","isField","isCondition","inputType","level","FIELD","INITIAL","INHERIT_FIELD","INHERIT_EXTEND","INHERIT_SEND","argumentList","fieldKeys","parentType","getLogicNode","argMng","arg","fieldName","Error","inhfldNode","fieldKeyList","paramNameList","addNum","delNum","parenthesisBalance","formJsxList","ParamInputTypes","SelfParams","getValueForm","isLastVar","isFormulaOK","hasFormError","varForm","getFormulaItem","syncFieldName","_Formula","isInvalid","_Var","_Sig","getFormulaJsx","getFieldRefers","mngNode","inheritWrap","span","EditorBehiviorMng","isVector","hasDecayParam","hasGravityParam","exchangeVectorMethod","flag","trueParamElements","falseParamElements","size","exchangeElements","toggleElements","paramElements","EditorVisualMng","drawMethod","THICKNESS","hasDisappearParam","hasShrinkParam","hasFlashParam","EditorInheritConnMng","EditorInheritConnector","identify","setIdentify","setMethod","setDepend","defaultName","getNumberingOnPrefixName","isCreate","logicList","idList","initConnectorNode","syncTreeElementFromWrap","initSendParams","sendParamList","dependItem","argWrap","getSendParamList","curParamList","isChange","ConnectTypes","dependLogic","inherit","newWrap","JSON","parse","stringify","getChildrenElementNode","rootNode","clone","COMPONENT_WIDTH","xName","setXName","yName","setYName","checkItems","argNode","behaviorNode","setParamValue","prpName","targetParam","paramList","xParam","yParam","SendTemplateDialog","EditorSendManager","isDepend","ConnectParentPosition","SetParentPosition","EditorFieldMng","EditorExtendMng","hasLoopParam","hasInvokeParam","EditorSeedItem","disp","setDisp","setEntry","permit","setPermit","logicNameList","seed","items","samples","PermitTypes","EditorThumbnailMng","LogicTreeContext","hasSample","WND_SIZE","EditorThumbnailItem","seedWrap","setFrame","urls","setUrls","setTimeout","sample","getThumbnailURL","getSeedValueMap","sampleNo","argMap","sendParams","send","targetFrame","frameCnt","buildLogicProps","par","pictureJsxList","imgJsx","_IMG","src","_SampleDiv","_SampleName","_CanvasDiv","img","LogicFormUtil","formgrpList","formList","setFormList","usedGrps","form","argument","formgrp","grp","targetForms","j","colorCode","_Type","_Range","formIndex","checkNumberRange","_Color","labelName","_Tsumami","EditorSampleItem","paramForms","setParamForms","argInfoList","formgrpMng","defines","seedargList","defval","buildPreviewForms","EditorSampleMng","EditorInterfaceManager","argMngNode","sendMngNode","sampleMngNode","hasGroupNode","execute","removeChildAll","newArgWrap","groupMngNode","hasGroup","EditorSeedArgMng","EditorSeedArgItem","setMin","setMax","setStep","setDefval","curIndex","getCurrentIndex","getSwapButtonsCallback","isUpper","sampleMng","swapNode","sendMngWrap","EditorSeedSendMng","EditorFormgrpItem","groupMethod","setGroupMethod","targetList","setTargetList","seedargs","Array","FromGrpMedhods","formName","EditorFormgrpMng","COLOR_METHOD","COLOR_MNG","COLOR_LIST","COLOR_ITEM","COLOR_FIELD","isFocus","_Category","backgroundColor","detailJsx","_Span","_Field","_EditableValue","_Signature","_Detail","nameJsx","_ValueType","wrapNode","get","elementNode","typeList","innerNode","innerWrap","ownerChildren","findIndex","swapOrder","ownDataChildren","curNo","swapData","dependencyMngNodes","depNode","isHead","isTail","cloneBase","cloneDest","namable","getNamableProps","targetElement","replicateSameLevel","getIdentifyParamName","childWrap","createParamWrapList","paramDataList","createVisualParams","createBehaviorParams","findSeedWrap","nameList","curWrap","nameParam","mngWrap","listParam","curLogicOwner","VisualParams","BehaviorParams","ExtendParams","EffectParams","ModulateParams","Constants","prefix","mngType","getLogicItem","seedId","fuse","getOrigin","getSendingValueMap","seedsendList","thumbnailList","PreviewLogicInputForm","logicWrap","setSendingValueMap","PreviewSeedInputForm","template","setTemplate","formgrpWrap","presetList","ButtonItem","selectedIndex","BuildUtil","minFrame","guaranteeFrame","doIterate","particle","limitFrame","limitParticle","doEnd","beginFrame","advanceFrame","PreviewLogicFrame","sceens","setSceens","setFrameCnt","setTabIndex","setCur","isBuild","setBuild","isPlay","setPlay","sendingValueMap","isSeed","run","buildTabJsx","_Msg","_FormDiv","previewTabJsx","_ProgressDiv","clickX","pageX","clientRect","getBoundingClientRect","left","window","pageXOffset","_ProgressVal","_CloseButton","PreviewLauncherFrame","DirectLinkManager","libData","setLibData","setStoryData","storyPreviewProps","setStoryPreviewProps","buildCache","setBuildCache","seedSeq","setSeedSeq","findProject","projectSeq","resList","res","ownerId","lastmod","DataUtil","unZip","source","hasOwnProperty","scenarioProps","scenarioData","seedList","argCount","fuseList","logicData","useFrame","doParticleJob","runPaging","curFrame","_Header","seedName","_Item","_SeedName","_ArgCnt","isStandby","_ProgressBox","_RateVal","getBlindJsx","getJsx","conteseq","sendQueryRequestToAPI","response","json","results","MobileRoot","isPermit","adjLeft","adjTop","screen","setScreen","getDecryptionedProjectSeq","hashKey","rect","clientWidth","clientHeight","isFitSide","navigator","userAgent","isSmartPhone","orientation","addEventListener","alert","_Error","top","match","ChannelPane","icon","ChannelLabel","_Icon","_Label","ChannelContents","StoryFuseAnalysis","divide","setDivide","peak","setPeak","total","setTotal","countList","setCountList","defList","itemJsxList","rateHeight","count","_AnalisisItem","divRate","pastRate","needPoint","_AnalisisDiv","StoryProperty","setSeed","newFrame","setNewFrame","mapping","defBean","propertiesFormJsx","activeSeed","formgrps","presets","cancelAction","modifyAction","initFormList","StoryEnvironment","setParticle","maxLimit","reduce","prev","ITEM_WIDTH","TimelineFrame","cacheList","fusePosJsxList","newFrameRate","newFrameValue","focus","sus","cache","seq","_Line","_Sustain","memoriJsxList","DIV_CNT","_Memori","_MeasureDiv","clientX","setNewFrameValue","MEASURE_WIDTH","StoryTab","isFuseEdit","setFuseEdit","isEnvEdit","setEnvEdit","tabActiveIndex","setTabActiveIndex","setFocus","setFuseList","groupMng","newCache","thumbList","updateCache","createSeq","fuseJsxList","thumbJsx","thumb","url","_ItemDiv","_ItemFrame","_PropRecord","_FrameRecord","_SeedRecord","_ThumbFrame","val","_Title","seedProps","getSeedProperties","_ListDiv","_ListHead","cloneFuse","newSeq","_ListBody","_Timeline","_ListMain","_RightDiv","_RightInner","sort","LIST_HEAD","NameDefDialog","targetSeq","projects","p","existNames","assert","findProjectMaxSeq","maxSeq","newProject","insertProject","registCreate","targetItem","updateProjectName","registUpdate","req","NewProjectDialog","setType","selectedLib","setSelectedLib","localLib","setLocalLib","cloudLibs","setCloudLibs","getStoryLib","storyLib","lib","usingHash","hash","getSHA256Hash","getInitialData","findAllReleaseProjectList","showOpenFilePicker","getFile","file","fileContents","fileName","FixedText","NewProjectDialogStoryOnly","ManageTab","fcsListIdx","setFcsListIdx","listItemJsx","project","_ListItem","getHashedFromProjectSeq","onContextMenu","getDirectUrl","_Status","_Name","getProjectType","hasData","incrRec","root","developCnt","privateCnt","releaseCnt","fuseCnt","elementSize","logicCnt","getData","uploadCloud","gZip","overwriteCloudFile","curPrj","updateProjectSource","saveLocalFile","saveLibraryFile","saveScenarioFile","cloudJsx","_ContDiv","scenarioFileProps","deleteProject","localJsx","loadFile","_HeaderDiv","_BodyDiv","_LeftDiv","_RighttDiv","getNewSaveButton","getOverwriteButton","CreateChannel","projectType","SCORE_TAB_MARGIN","PublishFrame","libList","setLibList","setLibCnt","libListJsx","dispCnt","_Owner","_CName","plainData","showSaveFilePicker","types","accept","handle","createWritable","writable","write","close","catch","_CDate","_DetailMain","_SeedItemFrame","_SeedItemInner","_SeedArgCnt","_DetailOpen","_CSummary","_ListFrame","ReleaseNote","setJsx","fetch","record","note","version","date","HOME_USER_DIV_HEIGHT","HomeChannel","userCount","setUserCount","artsCnt","setArtsCnt","countUsers","cnt","_Left","_MessageRecord","_Right","MainFrame","MAIN_FRAME_MARGIN","Splash","isSwitch","setSwitch","timerId","setTimerId","remove","logo","getLogoURL","clearTimeout","_Logo","_NowLoading","_Copylight","fadeIn","keyframes","AccountFrame","userId","setUserId","oldPass","setOldPass","newPass","setNewPass","newPassConfirm","setNewPassConfirm","email","setEmail","userIdList","setUserIdList","emailList","setEmailList","loginProps","reloadInfo","password","findUserInfoList","info","getHashedFromUserSeq","history","replaceState","userTabJsx","InputTextFormBak","checkAsciiChars","permitRegist","_Body","_Footer","passwordStr","updateUserInfo","LoginCreateAccount","isRegist","setRegist","setPassword","passwordConfirm","setPasswordConfirm","messageList","setMessageList","createAuthText","findUserIdList","authCollation","setAuthCollation","authInput","setAuthInput","authPicture","getAuthTextURL","InfoFrame","_AuthText","getNextUserSeq","nextSeq","MessageLink","LoginLogin","isForget","setForget","findUserInfoLogin","findUserProjectList","resPrjList","findUserInfoFromEmail","sendQueryRequestToMailAPI","from","to","subject","userSeq","LoginFrame","setCreate","_TypeSwitch","_LogoDiv","TotalHeader","authButtonJsx","_LoginButton","location","_UserName","isEntry","_Menu","_Language","_MenuItem","TOTAL_HEADER_WIDTH","DirectLogin","getDecryptionedUserSeq","findUserInfoFromSeq","ModeSelectDialog","_ModeDiv","_SubTitle","_MainTitle","_DetailMsg","RouterManage","SystemEntry","basename","process","URLSearchParams","useLocation","search","splashJsx","path","exact","_MainDiv","DB_SERVER_DOMAIN","APP_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","encode","Base64","hashedSeq","hashids","decode","scoreSeq","hashedKey","mode","headers","Accept","body","createSendMailRequestInit","queryType","sql","databaseName","createQueryRequestInit","saveFile","extension","options","original","sha256","content","encodeURIComponent","zlib","gzipSync","buffer","Buffer","unzipSync","decodeURIComponent","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace"],"mappings":"+KA+BeA,EA5BH,WAuBV,OArBAC,qBAAU,WAERC,SAASC,cAAgB,WAAc,OAAO,GAS9CD,SAASE,UAAY,SAACC,GAIpB,GAAIA,EAAEC,SAAW,CAAC,IAAK,KAAKC,SAASF,EAAEG,KACrC,OAAO,KAIV,IAED,cAAC,IAAD,KCbWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGJlB,SAASmB,eAAe,SAM1BZ,K,qFCbW,IAAMa,EAAU,aAAG,GACbC,EAAW,cAAG,GAGdC,GAFU,aAAG,GAEJ,YAAGC,YAAH,iLAQM,kBAAGA,YAAH,0HACtBD,EAEWF,GAIY,mBAAGG,YAAH,0HACvBD,EAEWD,GAIc,qBAAGE,YAAH,sF,CA5BzBC,M,KAiCKA,MAEcC,IAAOC,IAAV,6FAMHD,IAAOC,IAAV,wDAIGD,IAAOC,IAAV,0EAKYH,YAAH,mKAUIA,YAAH,yNAGbC,EAAOH,aAQIE,YAAH,2E,+FCpEfI,M,KAEgB,UAAG,SAACC,GAKnB,IAAD,QAE0BC,qBAAWC,KAAhCC,EAFL,EAEKA,MAAQC,EAFb,EAEaA,SAETC,EAAK,UAAGL,EAAMK,aAAT,QAAkB,IACvBC,EAAM,UAAGN,EAAMM,cAAT,QAAmB,IACzBC,EAAO,UAAGP,EAAMO,eAAT,QAAoB,CAC7B,CACIC,MAAO,KACPC,SAAU,WACNN,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAID,OAKzB,OACI,eAACS,EAAD,CAAQP,MAAOA,EAAOC,OAAQA,EAA9B,UACI,cAACO,EAAD,UAAO,cAACC,EAAD,UACFd,EAAMe,QAAQC,MAAM,MAAMC,KAAI,SAACC,EAAKC,GACjC,OAAO,cAAC,IAASC,QAAV,CAEHL,QAASG,EACTG,UAAQ,GAFHF,UAMjB,cAAC,IAASG,aAAV,CACIC,MAAM,SACNhB,QAASA,QAMdR,MAEf,IAAMa,EAASf,IAAOC,IAAV,2UAOU,SAAAE,GAAK,OAAIA,EAAMM,OAAS,KACvB,SAAAN,GAAK,OAAIA,EAAMK,MAAQ,KACjC,SAAAL,GAAK,OAAIA,EAAMK,SACd,SAAAL,GAAK,OAAIA,EAAMM,UAOvBO,EAAQhB,IAAOC,IAAV,8IASLgB,EAASjB,IAAOC,IAAV,kJ,wKCtEF0B,M,KAOsB,gBAAG,SAACC,GAC5B,IAAIC,GAAS,EAOb,OANAD,EAAWE,SAAQ,SAAAC,GACf,GAAIA,EAAUC,OAAOC,OAAS,EAE1B,OADAJ,GAAS,EACF,KAGRA,GAGkB,mBAAG,SAAC1B,GAc1B,IAAD,gBACI+B,EAAO,UAAA/B,EAAMgC,kBAAN,SAA4B,WAAa,OAEhDC,EAAU,UAAGjC,EAAMkC,iBAAT,QAAsB,GAChCL,EAAS7B,EAAM4B,UAAUC,OACzBM,GAAa,UAACnC,EAAMmC,kBAAP,QAAqB,IAAIlB,KAAI,SAAAmB,GAAG,OAAIA,EAAIC,SAErDC,EAAY,SAACD,GACf,IAAMR,EAAmC,GAMzC,OALAI,EAAWN,SAAQ,SAAAY,GACVA,EAAUC,QAAQH,IACnBR,EAAOY,KAAKF,EAAUG,cAGvBb,GAMX,OAJA1D,qBAAU,WACN6B,EAAM4B,UAAUC,OAASS,EAAUtC,EAAM4B,UAAUS,OACnDrC,EAAM2C,aAAN,eAAwB3C,EAAM4B,cAC/BO,GAEC,eAACS,EAAD,CACIC,SAAQ,UAAE7C,EAAM6C,gBAAR,SACRC,WAAW,EACXC,UAAW,UAAC/C,EAAMqB,gBAAP,SAA4B,SAAW,OAClD2B,UAAS,UAAEhD,EAAMgD,iBAAR,QAAqB,EAC9BC,aAAY,UAAEjD,EAAMiD,oBAAR,QAAwB,EALxC,eAOyBC,GAApBlD,EAAMmD,WAA0B,6BAAQ,cAACC,EAAD,UAAcpD,EAAMmD,aAC7D,cAACE,EAAD,CACItB,KAAMA,EACNM,MAAOrC,EAAM4B,UAAUS,MACvBiB,cAA8BJ,GAApBlD,EAAMmD,WAChB9C,MAAOL,EAAMK,MACbgB,SAAQ,UAAErB,EAAMqB,gBAAR,SACRkC,YAAavD,EAAMuD,YACnBC,SAAU,SAACjF,GACP,IAAM8D,EAAQ9D,EAAEkF,OAAOpB,MACvBrC,EAAM4B,UAAUS,MAAQA,EACxBrC,EAAM4B,UAAUC,OAASS,EAAUD,GACnCrC,EAAM2C,aAAN,eAAwB3C,EAAM4B,aAElCc,UAA6B,IAAlBb,EAAOC,YAAeoB,EAAYrB,EAAO,GACpD6B,SAAU1D,EAAM2D,iBAOb,SAAG,SAAC3D,GAMhB,IAAD,QACF,OACI,cAAC4C,EAAD,CACIC,SAAQ,UAAE7C,EAAM6C,gBAAR,SACRC,WAAW,EACXC,UAAS,UAAE/C,EAAM+C,iBAAR,QAAqB,OAC9BC,UAAS,UAAEhD,EAAMgD,iBAAR,QAAqB,EAC9BC,aAAY,UAAEjD,EAAMiD,oBAAR,QAAwB,EALxC,SAOKjD,EAAM4D,OAMI,aAAG,SAAC5D,GASpB,IAAD,YACI6D,EAAW,UAAG7D,EAAM8D,kBAAT,QAXO,IAYxB,OACI,eAAClB,EAAD,CACIC,SAAQ,UAAE7C,EAAM+D,iBAAR,SACRjB,UAAS,UAAE9C,EAAM8C,iBAAR,SACTC,UAAS,UAAE/C,EAAM+C,iBAAR,QAAqB,OAC9BC,UAAS,UAAEhD,EAAMgD,iBAAR,QAAqB,EAC9BC,aAAY,UAAEjD,EAAMiD,oBAAR,QAAwB,EALxC,eAOyBC,GAApBlD,EAAMmD,WAA0B,6BAAQ,cAACC,EAAD,CAAaU,WAAYD,EAAzB,SAAuC7D,EAAMmD,aACrFnD,EAAM4D,QAKG,YAAG,SAAC5D,GAOtB,IAAIK,OAA4B6C,EAGhC,OAFGlD,EAAMgE,eAAc3D,EAAK,sBAAkB4D,IAAlB,aACVf,GAAflD,EAAMK,QAAoBA,EAAQL,EAAMK,MAAQ,MAE/C,cAAC6D,EAAD,CAAa7D,MAAOA,EAApB,SAA4BL,EAAMqC,SAIpB,YAAG,SAACrC,GAanB,IAAD,gBACsBmE,oBAAS,GAD/B,mBACKC,EADL,KACYC,EADZ,KAGFlG,qBAAU,WACwB,MAA1B6B,EAAM4B,UAAUS,QAChBrC,EAAM4B,UAAUS,MAAQ,GACxBrC,EAAM2C,aAAN,eAAwB3C,EAAM4B,eAEnC,CAAC5B,EAAM4B,UAAUS,QAEpB,IAAIN,EAAO,UAAA/B,EAAMgC,kBAAN,SAA4B,WAAa,OACpD,UAAIhC,EAAMsE,gBAAV,WACIvC,EAAO,UAGX,IAAME,EAAU,UAAGjC,EAAMkC,iBAAT,QAAsB,GAChCL,EAAS7B,EAAM4B,UAAUC,OACzBM,GAAa,UAACnC,EAAMmC,kBAAP,QAAqB,IAAIlB,KAAI,SAAAmB,GAAG,OAAIA,EAAIC,SAW3DlE,qBAAU,WACN6B,EAAM4B,UAAUC,OAVF,SAACQ,GACf,IAAMR,EAAmC,GAMzC,OALAI,EAAWN,SAAQ,SAAAY,GACVA,EAAUC,QAAQH,IACnBR,EAAOY,KAAKF,EAAUG,cAGvBb,EAGkBS,CAAUtC,EAAM4B,UAAUS,OACnDrC,EAAM2C,aAAN,eAAwB3C,EAAM4B,cAC/BO,EAAWoC,OAAOvE,EAAM4B,UAAUS,QAErC,IAAMA,EAAQrC,EAAM4B,UAAUS,MACxBmC,EAAI,UAAGxE,EAAMwE,YAAT,QAAiB,EAErB3B,EAAQ,UAAG7C,EAAM+D,iBAAT,SACd,OACI,cAACU,GAAD,CACI1C,KAAMA,EACNM,MAAOA,EACPhC,MAAK,UAAEL,EAAMK,aAAR,QAAiB,IACtBkD,YAAavD,EAAMuD,YACnBiB,KAAMA,EACNhB,SAAU,SAACjF,GAEPyB,EAAM4B,UAAUS,MAAQ9D,EAAEkF,OAAOpB,MACjCrC,EAAM2C,aAAN,eAAwB3C,EAAM4B,YACjB,WAATG,GACAsC,EAAOK,OAAON,MAAM7F,EAAEkF,OAAOkB,iBAGrCC,OAAQ,WACS,WAAT7C,IACW/B,EAAM4B,UAAUS,MAAvB+B,EAA+B,IACNM,OAAOrC,GAAOwC,WAE3C7E,EAAM2C,aAAN,eAAwB3C,EAAM4B,cAGtCc,UAAYG,GAA8B,IAAlBhB,EAAOC,OAA2BD,EAAO,QAAnBqB,EAC9CQ,SAAU1D,EAAM2D,WAChBmB,WAAY9E,EAAM8E,cAOT,WAAG,SAAC9E,GAYlB,IAAD,UACIiC,EAAU,UAAGjC,EAAMkC,iBAAT,QAAsB,GAChCL,EAAS7B,EAAM4B,UAAUC,OACzBM,GAAa,UAACnC,EAAMmC,kBAAP,QAAqB,IAAIlB,KAAI,SAAAmB,GAAG,OAAIA,EAAIC,SACrD0C,EAAS,UAAG/E,EAAM+E,iBAAT,SACTC,EAAOhF,EAAMgF,KAAKC,QACpBF,GAAWC,EAAKE,QAAQ,CAAE7C,MAAO,GAAI8C,UAAW,KAYpDhH,qBAAU,WAEN6B,EAAM4B,UAAUC,OAZF,SAACQ,GACf,IAAMR,EAAmC,GAMzC,OALAI,EAAWN,SAAQ,SAAAY,GACVA,EAAUC,QAAQH,IACnBR,EAAOY,KAAKF,EAAUG,cAGvBb,EAKkBS,CAAUtC,EAAM4B,UAAUS,OACnDrC,EAAM2C,aAAN,eAAwB3C,EAAM4B,cAC/BO,EAAWoC,OAAOvE,EAAM4B,UAAUS,QAErC,IAAMQ,EAAQ,UAAG7C,EAAM+D,iBAAT,SACd,OACI,cAACqB,GAAD,CACI/C,MAAOrC,EAAM4B,UAAUS,MACvBhC,MAAK,UAAEL,EAAMK,aAAR,QAAiB,IACtBkD,YAAavD,EAAMuD,YACnBC,SAAU,SAACjF,GACP,IAAM8D,EAAQ9D,EAAEkF,OAAOpB,MACvBrC,EAAM4B,UAAUS,MAAQA,EAExBrC,EAAM2C,aAAN,eAAwB3C,EAAM4B,aAGlCc,UAAYG,GAA8B,IAAlBhB,EAAOC,OAA2BD,EAAO,QAAnBqB,EAC9CQ,SAAU1D,EAAM2D,WAChBmB,WAAY9E,EAAM8E,WAbtB,SAcEE,EAAK/D,KAAI,SAACoE,EAAMlE,GAAO,IAAD,IACpB,OACI,cAACmE,GAAD,CACIjD,MAAOgD,EAAKhD,MACZkD,SAAQ,UAAEF,EAAKG,kBAAP,SACRA,WAAU,UAAEH,EAAKG,kBAAP,SAHd,SAIEH,EAAKF,WAJOhE,SAiBL,eAAG,SAACnB,GAKtB,IAAD,MACIuB,EAAK,UAAGvB,EAAMuB,aAAT,QAAkB,QAC7B,OACI,cAACqB,EAAD,CACIC,UAAU,EACVC,WAAW,EACXC,UAAWxB,EACXyB,UAAS,UAAEhD,EAAMgD,iBAAR,QAAqB,EAC9BC,aAAY,UAAEjD,EAAMiD,oBAAR,QAAwB,EALxC,SAOKjD,EAAMO,QAAQU,KAAI,SAACwE,EAAQtE,GAAO,IAAD,EAC9B,OACI,cAACuE,GAAD,CAEIrE,SAAoB,WAAVE,EACVsB,SAAQ,UAAE4C,EAAO5C,gBAAT,SACRxC,MAAOoF,EAAOpF,MACdsF,QAASF,EAAOhF,SALpB,SAMEgF,EAAOjF,OALAW,SAYN,aAAG,SAACnB,GAEpB,IAAD,EACF,OACI,cAAC0F,GAAD,CACIrE,UAAU,EACVwB,SAAQ,UAAE7C,EAAMyF,OAAO5C,gBAAf,SACRxC,MAAOL,EAAMyF,OAAOpF,MACpBsF,QAAS3F,EAAMyF,OAAOhF,SAJ1B,SAKET,EAAMyF,OAAOjF,SAIH,UAAG,SAACR,GAKjB,IAAD,QACF,OACI,cAAC4C,EAAD,CACIC,UAAU,EACVC,WAAW,EACXC,UAAW,UAAC/C,EAAMqB,gBAAP,SAA4B,SAAW,OAClD2B,UAAS,UAAEhD,EAAMgD,iBAAR,QAAqB,EAC9BC,aAAY,UAAEjD,EAAMiD,oBAAR,QAAwB,EALxC,SAOI,cAAC2C,GAAD,CACIvE,SAAQ,UAAErB,EAAMqB,gBAAR,SADZ,SAEErB,EAAMe,aAKI,cAAG,SAACf,GAMrB,IAAD,QACF,OACI,cAAC4C,EAAD,CACIC,UAAU,EACVC,WAAW,EACXC,UAAW,UAAC/C,EAAMqB,gBAAP,SAA4B,SAAW,OAClD2B,UAAS,UAAEhD,EAAMgD,iBAAR,QAAqB,EAC9BC,aAAY,UAAEjD,EAAMiD,oBAAR,QAAwB,EALxC,SAOI,cAAC2C,GAAD,CACIC,QAAQ,EACRF,QAAS3F,EAAM8F,YACfzE,SAAQ,UAAErB,EAAMqB,gBAAR,SAHZ,SAIErB,EAAMe,aAKI,cAAG,SAACf,GAIrB,IAAD,EAEF,OAAQ,qCACJ,cAAC+F,GAAD,UAAc/F,EAAMgG,QACpB,cAACC,GAAD,CAAcpD,SAAQ,UAAE7C,EAAM6C,gBAAR,SAAtB,SAAiD7C,EAAMkG,eAIzC,YAAG,SAAClG,GAGnB,IAAD,EACIM,EAAM,UAAGN,EAAMM,cAAT,QAAmB,GAE/B,OAAQ,mCACJ,cAAC6F,GAAD,CAAU7F,OAAQA,EAAQ8F,MAFhB,UAEV,SACKpG,EAAMqG,YAAYpF,KAAI,SAACqF,EAAMnF,GAC1B,OAAO,iCAAemF,EAAK,yBAATnF,WAMf,SAAG,SAACnB,GAOhB,IAAD,IACIuG,EAAU,UAAGvG,EAAMuG,kBAAT,SACV9F,EAAW8F,GAAcvG,EAAMwG,MAAQ,aAAYxG,EAAMS,SAC/D,OACI,cAACgG,GAAD,CACIF,WAAYA,EACZC,MAAOxG,EAAMwG,MACb3D,SAAQ,UAAE7C,EAAM6C,gBAAR,SACRxC,MAAOL,EAAMK,MACbsF,QAASlF,EALb,SAMET,EAAMQ,SAIO,aAAG,SAACwE,GACvB,YAAoD9B,GAA7C8B,EAAK0B,MAAK,SAAArB,GAAI,OAAIA,EAAKxD,OAAOC,OAAS,MAIvCN,MAGf,IAAMoB,EAAU/C,IAAOC,IAAV,iQAQP,SAAAE,GAAK,OAAIA,EAAM8C,UAAY,GAAKnD,YAAvB,2DAKG,SAAAK,GAAK,OAAIA,EAAMgD,aACZ,SAAAhD,GAAK,OAAIA,EAAMiD,gBAG9B,SAAAjD,GAAK,OAAIA,EAAM6C,SAAW,GAAKjD,IAAO+G,sBAC1B,SAAA3G,GAAK,OAAIA,EAAM+C,aAG3BK,EAAcvD,IAAOC,IAAV,iaAKJ,SAAAE,GAAK,OAAIA,EAAM8D,aACtBlE,IAAOgH,kBAYP1C,EAAcrE,IAAOC,IAAV,kSAKXF,IAAOgH,kBAQP,SAAA5G,GAAK,YAAmBkD,GAAflD,EAAMK,MAAqB,GAAKV,YAAhC,oDACEK,EAAMK,UAIjBgD,EAAiBxD,IAAOgH,MAAV,2hBASd,SAAA7G,GAAK,OAAKA,EAAMsD,SACd3D,YADO,oEAAkBA,YAAlB,mCAIT,SAAAK,GAAK,YAAmBkD,GAAflD,EAAMK,MAAqB,GAAKV,YAAhC,sDACEK,EAAMK,UAWC,SAAAL,GAChB,QAAuBkD,GAAnBlD,EAAM0C,UAAwB,MAAO,UAErC,OAAQ1C,EAAM0C,WACV,IAAK,WAAY,MAAO,UACxB,IAAK,SAAU,MAAO,UACtB,IAAK,QAAS,MAAO,UACrB,IAAK,WAAY,MAAO,cAO/B,SAAA1C,GAAK,OAAKA,EAAMqB,SAEjB1B,YAFU,0BAAkBA,YAAlB,8DAIZ,SAAAK,GAAK,OAAKA,EAAM0D,SAAgB/D,YAAvB,sJAAkB,MAY3B8E,GAAc5E,IAAOgH,MAAV,siBAQJ,SAAA7G,GAAK,OAAIA,EAAMK,SAET,SAAAL,GAAK,uBAAIA,EAAM8E,kBAAV,QAAwB,KASxB,SAAA9E,GAChB,QAAuBkD,GAAnBlD,EAAM0C,UAAwB,MAAO,UAErC,OAAQ1C,EAAM0C,WACV,IAAK,WAAY,MAAO,UACxB,IAAK,SAAU,MAAO,UACtB,IAAK,QAAS,MAAO,UACrB,IAAK,WAAY,MAAO,cAOlC,SAAA1C,GAAK,OAAKA,EAAM0D,SAAgB/D,YAAvB,sJAAkB,MAY3ByF,GAAgBvF,IAAOiH,OAAV,siBAQN,SAAA9G,GAAK,OAAIA,EAAMK,SAET,SAAAL,GAAK,uBAAIA,EAAM8E,kBAAV,QAAwB,KASxB,SAAA9E,GAChB,QAAuBkD,GAAnBlD,EAAM0C,UAAwB,MAAO,UAErC,OAAQ1C,EAAM0C,WACV,IAAK,WAAY,MAAO,UACxB,IAAK,SAAU,MAAO,UACtB,IAAK,QAAS,MAAO,UACrB,IAAK,WAAY,MAAO,cAOlC,SAAA1C,GAAK,OAAKA,EAAM0D,SAAgB/D,YAAvB,qLAAkB,MAa3B2F,GAAUzF,IAAOkH,OAAV,qCAGP,SAAA/G,GAAK,OAAKA,EAAMwF,WAAkB7F,YAAzB,2DAAoB,MAK7BiG,GAAW/F,IAAOC,IAAV,yZAOGF,IAAOH,aAWlB,SAAAO,GAAK,OAAKA,EAAMqB,SAEd1B,YAFO,0BAAkBA,YAAlB,8DAIT,SAAAK,GAAK,OAAKA,EAAM6F,OAAclG,YAArB,qLAAgB,MAoBzB+F,IAVc7F,IAAOC,IAAV,iNAUDD,IAAOC,IAAV,4dAKPF,IAAOgH,kBACP,SAAA5G,GAAK,YAAmBkD,GAAflD,EAAMK,MAAqBV,YAA3B,0DAEPA,YAFO,sDAGEK,EAAMK,UAUjB,SAAAL,GAAK,OAAKA,EAAMqB,SAEd1B,YAFO,0BAAkBA,YAAlB,8DAIT,SAAAK,GAAK,OAAIA,EAAM6C,SAAW,GAAKjD,IAAO+G,uBAOtCF,GAAU5G,IAAOC,IAAV,qSAMPF,IAAOgH,kBACP,SAAA5G,GAAK,YAAmBkD,GAAflD,EAAMK,MAAqBV,YAA3B,0DAEPA,YAFO,sDAGEK,EAAMK,UAOjB,SAAAL,GAAK,OAAKA,EAAMuG,WAEd5G,YAFO,qFAGa,SAAAK,GAAK,OAAKA,EAAMwG,MAAsB,UAAd,eACnC,SAAAxG,GAAK,OAAKA,EAAMwG,MAAoB,UAAZ,aAJN7G,YAApB,gEACa,SAAAK,GAAK,OAAKA,EAAMwG,MAAsB,UAAd,kBAO9C,SAAAxG,GAAK,OAAIA,EAAM6C,SAAW,GAAKjD,IAAO+G,sBAElC,SAAA3G,GAAK,OAAKA,EAAMuG,WAEd5G,YAFO,iGAGa,SAAAK,GAAK,OAAKA,EAAMwG,MAAsB,UAAd,eACnC,SAAAxG,GAAK,OAAKA,EAAMwG,MAAoB,UAAZ,aAJN7G,YAApB,wEACa,SAAAK,GAAK,OAAKA,EAAMwG,MAAsB,UAAd,kBAQlDT,GAAclG,IAAOC,IAAV,oJAEXF,IAAOoH,iBAMPf,GAAepG,IAAOC,IAAV,qRAYZ,SAAAE,GAAK,OAAIA,EAAM6C,SAAW,GAAKjD,IAAO+G,sBAGtCR,GAAWtG,IAAOC,IAAV,8TASA,SAAAE,GAAK,OAAIA,EAAMM,SAIZV,IAAOJ,YACX,SAAAQ,GAAK,OAAIA,EAAMoG,U,8GC5wBfa,EAAe,CAAC,UAAW,SAG3BC,EAAsB,CAC/BxG,OAAQ,CACJyG,UAAU,EACVC,KAAM,KACNzG,OAAQ,KACR0G,cAAc,EACdC,gBAAgB,GAEpBC,IAAK,CACDC,eAAe,EACfC,gBAAgB,GAEpBC,YAAa,KACbC,UAAW,KACXC,kBAAmB,GACnBC,MAAO,KACPC,WAAY,KACZC,eAAe,I,ECxCTC,M,KACsB,gBAAG,IACF,mBAAG,GAGrBA,I,sBAAAA,I,uBCgBAC,EAjBO,WAAO,IAAD,EAEIhI,qBAAWC,IAA/BC,EAFgB,EAEhBA,MAAOC,EAFS,EAETA,SAETO,EAASR,EAAMO,OAAOC,OAE5B,OAAc,MAAVA,EAAuB,6BACnB,qCACJ,cAACuH,EAAD,CAAQvC,QAAS,WACRxF,EAAMO,OAAO4G,iBAClBnH,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,QAEjBQ,MAMHuH,EAASrI,IAAOC,IAAV,4L,sCCRCqI,EAAa,SAACnI,GAA4B,IAAD,IAClBmE,mBAASnE,EAAMoI,UADG,mBAC3CA,EAD2C,KACjCC,EADiC,KAY5CC,EAAY,UAAGtI,EAAMsI,oBAAT,QAAyB,EAM3C,OAJAnK,qBAAU,WACNkK,EAAYrI,EAAMoI,YACnB,CAACpI,EAAMoI,WAGN,qCACI,cAACG,EAAD,CAAYD,aAAcA,EAA1B,SAGQtI,EAAMwI,YAAYvH,KAAI,SAACwH,EAAKC,GACxB,OAAO,cAAC,EAAD,CACSC,KAAMF,EAAIE,KAAMC,SAAUF,GAASN,EAAUvF,SAAU4F,EAAII,OACvEC,UAAW,kBAtBZ,SAACJ,QACQxF,GAAxBlD,EAAM+I,eACN/I,EAAM+I,eAAeL,GAErBL,EAAYK,GAkBqBK,CAAeL,KAD3BA,QAMrB,cAACM,EAAD,CAAWV,aAAcA,EAAzB,SAGQtI,EAAMwI,YAAYvH,KAAI,SAACwH,EAAKC,GACxB,OAAO,cAAC,EAAD,CAAyBO,KAAOR,EAAII,OAAiBJ,EAAIQ,KAAZ,6BAAkBL,SAAUF,IAAUN,GAAjEM,YAQ3CQ,EAAW,SAAClJ,GAMd,OACI,cAACmJ,EAAD,CACItG,SAAU7C,EAAM6C,SAChB+F,SAAU5I,EAAM4I,SAChBjD,QAAS,kBAAM3F,EAAM8I,aAHzB,SAIK9I,EAAM2I,QAKbS,EAAc,SAACpJ,GASjB,OACI,cAACqJ,EAAD,CAAWT,SAAU5I,EAAM4I,SAA3B,SACK5I,EAAMiJ,QAKbV,EAAa1I,IAAOC,IAAV,2JAIF,SAAAE,GAAK,OAAI,GAAKA,EAAMsI,gBAK5BU,EAAYnJ,IAAOC,IAAV,wNAKW,SAAAE,GAAK,OAAyB,GAArBA,EAAMsI,gBAMnCe,EAAYxJ,IAAOC,IAAV,4HAMT,SAAAE,GAAK,OAAKA,EAAM4I,SAAiCjJ,YAAxC,gDAAkBA,YAAlB,2CAGTwJ,EAAYtJ,IAAOC,IAAV,wUAQT,SAAAE,GACE,OAAIA,EAAM4I,SACCjJ,YAAP,2TAUOA,YAAP,uYASMK,EAAM6C,SAAW,GAAKlD,YAAtB,+H,YC1IP,IAAM2J,EAAS,YAAG,SAACjJ,EAAeC,EAAgBiJ,GACrD,IAAMC,EAASpL,SAASqL,cAAc,UAChCC,EAAMF,EAAOG,WAAW,MAI9B,OAHAH,EAAOnJ,MAAQA,EACfmJ,EAAOlJ,OAASA,EAChBiJ,EAAKG,GACEF,EAAOI,aAGK,aAAG,WACtB,OAAOC,EAAWP,UAAU,IAAK,IAAI,SAACI,GAIlCA,EAAII,YAAc,OAClBJ,EAAIK,cAAgB,EACpBL,EAAIM,cAAgB,EACpBN,EAAIO,WAAa,EACjBP,EAAIQ,KAAO,oBACXR,EAAIS,UAAY,UAChBT,EAAIU,SAAS,SAAU,GAAI,IAC3B,IAAMC,EAASX,EAAIY,YAAY,UAAUjK,MACzCqJ,EAAIS,UAAY,UAChBT,EAAIU,SAAS,QAAS,GAAKC,EAAQ,IACnCX,EAAIa,WAIe,iBAAG,SAACjE,GAC3B,IAAMkE,EAAQxC,EAAYyC,gBACpBC,EAAO1C,EAAYyC,gBAAkB,EAC3C,OAAOnB,EAAUkB,EAAOxC,EAAY2C,kBAAkB,SAACjB,GACnDA,EAAIkB,OAAO,EAAIC,KAAKC,GAAK,KACzB,IAAK,IAAI3J,EAAI,EAAGA,EAAImF,EAAKxE,OAAQX,IAAK,CAClC,IAAM4J,EAAOzE,EAAK0E,OAAO7J,GAEnB8J,EAA2B,GAAhBJ,KAAKK,SAChBC,EAA4B,GAAhBN,KAAKK,SACvBxB,EAAIQ,KAAJ,UAAc,GAAKe,EAAnB,YACAvB,EAAIS,UAAY,QAAU,CAAC,GAAI,EAAG,IAAK,IAAO,IAAOgB,GAAa,IAClEzB,EAAIU,SAASW,EAAM5J,EAAIuJ,EAAM,S,CAjDnCb,M,KAuDKA,I,EAAAA,I,SCvDLuB,M,cAuBF,WAAYpL,GAAe,IAAD,gCAV1BqL,WAU0B,OAT1BC,SAS0B,OAR1BC,aAQ0B,OAP1BC,SAO0B,OAN1BC,WAM0B,OAL1BC,WAK0B,OAJ1BC,YAI0B,OAH1BC,YAG0B,OAF1BC,YAE0B,OAa1BC,OAAS,WAEL,EAAKR,IAAIS,GAAK,EAAKP,IAAIQ,GAAGD,EAC1B,EAAKT,IAAIW,GAAK,EAAKT,IAAIQ,GAAGC,EAE1B,EAAKJ,OAAOlK,SAAQ,SAAAlB,GAAQ,OAAIA,EAAS,MAErC,EAAKgL,QAAU,EAAKC,QACpB,EAAKC,QAAS,GAElB,EAAKF,SAvBiB,KA0B1BlC,KAAO,SAACG,GACJ,EAAKkC,OAAO,EAAMlC,IA1BlBwC,KAAKb,MAAQrL,EAAMqL,MACnBa,KAAKZ,IAAMtL,EAAMsL,IACjBY,KAAKX,QAAUvL,EAAMsL,IACrBY,KAAKV,IAAMxL,EAAMwL,IAEjBU,KAAKT,MAAQ,EACbS,KAAKR,MAAQ1L,EAAM0L,MACnBQ,KAAKP,QAAS,EACdO,KAAKN,OAAS5L,EAAM4L,OACpBM,KAAKL,OAAS7L,EAAM6L,QAsBjBT,I,EAAAA,K,YChCkB,mBAAG,SAACe,GAAwB,IAAD,EAG9CC,EAAU,UAAGD,EAAME,cAAT,QAAmB,GACnC,OAAO,SAACC,EAAyB5C,GAAmC,IAAD,EAC/D,QAA8BxG,GAA1BiJ,EAAMI,iBAA+B,CACrC,IAAMC,EAAcL,EAAMI,iBAEpBE,EAAYD,EADCL,EAAMO,eAEzB,GAAKJ,EAAKb,MAAQgB,GAAcD,EAAa,OAGjD,IAAIH,EAASD,EACb,QAA6BlJ,GAAzBiJ,EAAMQ,gBAA8B,CACpC,IAAMC,EAAQ/B,KAAKgC,MAAMP,EAAKZ,MAAQS,EAAMQ,iBAC5C,GAAIL,EAAKb,MAAQmB,EAAO,CACpB,IAAMlB,EAAQY,EAAKZ,MAAQkB,EAG3BP,IADcX,GADAY,EAAKb,MAAQmB,IACIlB,GAKvC,IAAMK,EAAIO,EAAKhB,IAAIS,EACbE,EAAIK,EAAKhB,IAAIW,EACba,EAAIpD,EAAIqD,qBAAqBhB,EAAGE,EAAG,EAAGF,EAAGE,EAAGI,GAE5CW,EAAqB,GACrBC,EAAI,UAAGC,EAAyBf,EAAM/F,cAAlC,QAA4C,CAAE+G,EAAG,IAAKL,EAAG,IAAKM,EAAG,IAAKC,EAAG,KAUnF,GATAL,EAAMvK,KAAK,CAAE6K,OAAQ,EAAGlH,MAAOmH,EAAyB,CAAEJ,EAAG,IAAKL,EAAG,IAAKM,EAAG,IAAKC,EAAGxC,KAAKgC,MAAe,GAATI,EAAKI,OACrGL,EAAMvK,KAAK,CAAE6K,OAAQ,GAAKlH,MAAOmH,EAAyB,2BAAKN,GAAN,IAAYI,EAAGxC,KAAKgC,MAAe,IAATI,EAAKI,QACxFL,EAAMvK,KAAK,CAAE6K,OAAQ,EAAGlH,MAAOmH,EAAyB,2BAAKN,GAAN,IAAYI,EAAG,OAEtEL,EAAMrL,SAAQ,SAAA6L,GACVV,EAAEW,aAAaD,EAAKF,OAAQE,EAAKpH,UAGrCsD,EAAIgE,YAAc,OACcxK,GAA5BiJ,EAAMwB,mBAAiC,CACvC,IAAMf,EAAQ/B,KAAKgC,MAAMP,EAAKZ,MAAQS,EAAMwB,oBAC5C,GAAIrB,EAAKb,MAAQmB,EAAO,CACpB,IAAMlB,EAAQY,EAAKZ,MAAQkB,EACrBnB,EAAQa,EAAKb,MAAQmB,EAC3BlD,EAAIgE,aAAehC,EAAQD,GAASC,GAI5ChC,EAAIS,UAAY2C,EAEhBpD,EAAIkE,YACJlE,EAAImE,IAAI9B,EAAGE,EAAGI,EAAQ,EAAG,EAAIxB,KAAKC,IAAI,GACtCpB,EAAIoE,SAnDL,IAuDMZ,EAAwB,2BAAG,SAACa,GACrC,IAAMjO,EAAMiO,EAAK/M,MAAM,KACvB,GAAmB,IAAflB,EAAIgC,QAAgBhC,EAAI,GAAGgC,OAAS,EAAG,OAAO,KAElD,IAAMO,EAAQvC,EAAI,GACZqN,EAAIzI,OAAOsJ,SAAS3L,EAAM4L,UAAU,EAAG,GAAI,IAC3CnB,EAAIpI,OAAOsJ,SAAS3L,EAAM4L,UAAU,EAAG,GAAI,IAC3Cb,EAAI1I,OAAOsJ,SAAS3L,EAAM4L,UAAU,EAAG,GAAI,IAC7CZ,EAAI,EAIR,OAHqB,IAAjBhL,EAAMP,SACNuL,EAAI3I,OAAOsJ,SAAS3L,EAAM4L,UAAU,EAAG,GAAI,KAExC,CAAEd,IAAGL,IAAGM,IAAGC,MAGTE,EAAwB,2BAAG,SAACN,GACrC,IAAMiB,EAAMrD,KAAKgC,MAAMI,EAAKE,GACtBgB,EAAMtD,KAAKgC,MAAMI,EAAKH,GACtBsB,EAAMvD,KAAKgC,MAAMI,EAAKG,GACtBiB,EAAMxD,KAAKgC,MAAMI,EAAKI,GACtBF,GAAK,KAAOe,EAAGrJ,SAAS,KAAKI,OAAO,GACpC6H,GAAK,KAAOqB,EAAGtJ,SAAS,KAAKI,OAAO,GACpCmI,GAAK,KAAOgB,EAAGvJ,SAAS,KAAKI,OAAO,GACpCoI,GAAK,KAAOgB,EAAGxJ,SAAS,KAAKI,OAAO,GAC1C,MAAM,IAAN,OAAWkI,GAAX,OAAeL,GAAf,OAAmBM,GAAnB,OAAuBC,IAGP,UAAG,SAACjH,EAAekI,GACnC,OAAOlI,G,CA1GLmI,M,KA8GKA,I,EAAAA,KChHLC,M,YAYF,WAAYxC,GAAS,IAAD,gCAJpBA,QAIoB,OAHpByC,SAGoB,OAFpBC,SAEoB,OAOpBC,WAAa,WACT,EAAKD,IAAM7D,KAAK+D,KAAK,EAAK5C,GAAGD,EAAI,EAAKC,GAAGD,EAAI,EAAKC,GAAGC,EAAI,EAAKD,GAAGC,GACjE,EAAKwC,IAAM5D,KAAKgE,MAAM,EAAK7C,GAAGC,EAAG,EAAKD,GAAGD,IATzB,KAYpB+C,YAAc,WACV,EAAK9C,GAAGD,EAAIlB,KAAKkE,IAAI,EAAKN,KAAO,EAAKC,IACtC,EAAK1C,GAAGC,EAAIpB,KAAKmE,IAAI,EAAKP,KAAO,EAAKC,KAbtCxC,KAAKF,GAAKA,EACVE,KAAKuC,IAAM,EACXvC,KAAKwC,IAAM,EACXxC,KAAKyC,cAgBFH,I,EAAAA,K,gBC9BCS,G,SAAAA,K,gBAAAA,E,kBAAAA,E,kBAAAA,E,kBAAAA,E,kBAAAA,E,uBAAAA,M,yBAQL,IAGKC,EAHa,eAAGC,OAAOC,OAAOH,I,SAG9BC,K,cAAAA,E,cAAAA,E,cAAAA,E,cAAAA,E,cAAAA,E,qBAAAA,E,sBAAAA,M,2BASL,IAGKG,EAHe,iBAAGF,OAAOC,OAAOF,I,SAGhCG,K,mBAAAA,E,mBAAAA,E,mBAAAA,E,mBAAAA,E,mBAAAA,E,mBAAAA,E,0BAAAA,E,2BAAAA,M,uBAUL,IAGKC,EAHW,aAAGH,OAAOC,OAAOC,I,SAG5BC,K,wBAAAA,E,4BAAAA,E,iBAAAA,M,yBAKL,IAGKC,EAHa,eAAGJ,OAAOC,OAAOE,I,SAG9BC,K,kCAAAA,E,4BAAAA,E,wCAAAA,E,qCAAAA,M,yBAML,IAGKC,EAHa,eAAGL,OAAOC,OAAOG,I,SAG9BC,K,wBAAAA,E,0BAAAA,E,0BAAAA,E,+BAAAA,M,2BAML,IAGKC,EAHe,iBAAGN,OAAOC,OAAOI,I,SAGhCC,K,4BAAAA,E,8BAAAA,E,QAAAA,E,6BAAAA,M,sBAMU,YAAGN,OAAOC,OAAOK,G,CArEjCC,M,KA0EKA,I,EAAAA,KCzELC,M,KASY,MAAG,SAACC,EAAmDzD,GAGrE,QAAuBjJ,GAAnBiJ,EAAM0D,gBAA8C3M,GAApBiJ,EAAM2D,WAAyB,CAC/D,IAAMA,EAAa3D,EAAM2D,WACnBD,EAAY1D,EAAM0D,UACxBD,EAAWnN,MAAK,SAAC6J,GAETA,EAAKd,IAAIkD,IAAMoB,IACfxD,EAAKd,IAAIkD,IAAMpC,EAAKd,IAAIkD,IAAMmB,EAC9BvD,EAAKd,IAAIsD,kBAKrB,QAAqB5L,GAAjBiJ,EAAM4D,cAA8C7M,GAAtBiJ,EAAM6D,aAA2B,CAC/D,IAAMA,EAAe7D,EAAM6D,aACrBD,EAAU5D,EAAM4D,QACtBH,EAAWnN,MAAK,SAAC6J,GAETA,EAAKd,IAAIQ,GAAGC,EAAI+D,IAChB1D,EAAKd,IAAIQ,GAAGC,GAAK8D,EACjBzD,EAAKd,IAAImD,mBAOdgB,I,EAAAA,K,YC/BJ,IAAMM,EAAY,eAAG,IACfC,EAAa,gBAAG,IA6NvBC,GAtNsB,kBAAG,SAC3B9E,EACA+E,EACAC,EACAC,GA+MA,OA1L0B,SAApBC,EAAqBC,EAA8BF,GAAuC,IAAD,IACvFG,EAA2BH,EAAM/L,OAAOmM,GAItCC,EAAWR,EAAc,YAAaK,EAAII,MAChC,MAAZD,GACCA,EAASE,KAAoCC,OAAOnP,SAAQ,SAAAoP,GACzD,IAAMC,EAAYD,EAAMF,KAClBxO,EAAQ4O,EAAsBD,EAAWP,GAC/CA,EAAahO,KAAK,CAAEkG,KAAMqI,EAAUrI,KAAMtG,aAIlD,IAAM6O,GAAe,UAACf,EAAc,aAAcK,EAAII,aAAjC,aAAC,EAAuCC,MACzDM,OAAOlQ,KAAI,SAAAkL,GAAK,OAAIA,EAAM0E,QACxBO,GAAiB,UAACjB,EAAc,eAAgBK,EAAII,aAAnC,aAAC,EAAyCC,MAC7DM,OAAOlQ,KAAI,SAAAkL,GAAK,OAAIA,EAAM0E,QAExBQ,EAAiB,SAAC1I,GACpB,OAAO2I,EAAqB3I,EAAMuI,EAAcT,IAE9Cc,EAAmB,SAAC5I,GACtB,OAAO2I,EAAqB3I,EAAMyI,EAAgBX,IAIhD/E,EAAQb,KAAKgC,MAAM0E,EAAiB7B,EAAUR,kBAAkBsC,QAChElG,EAAM,CACRS,EAAGwF,EAAiB7B,EAAUR,kBAAkBuC,OAChDxF,EAAGsF,EAAiB7B,EAAUR,kBAAkBwC,QAE9ClG,EAAM,IAAIgD,EAAWmD,OAAO,CAAE5F,EAAG,EAAGE,EAAG,SAC4D/I,GAAlFkO,EAAe1K,MAAK,SAAAyF,GAAK,OAAIA,EAAMxD,OAAS+G,EAAUR,kBAAkB0C,UAE3FpG,EAAIQ,GAAGD,EAAIwF,EAAiB7B,EAAUR,kBAAkB0C,OACxDpG,EAAIQ,GAAGC,EAAIsF,EAAiB7B,EAAUR,kBAAkB2C,OACxDrG,EAAImD,eAEJnD,EAAIiD,IAAM8C,EAAiB7B,EAAUR,kBAAkB4C,SACvDtG,EAAIkD,IAAM6C,EAAiB7B,EAAUR,kBAAkB6C,SACvDvG,EAAIsD,eAMR,IAAMc,EAAoD,GAGpDoC,EAAa7B,EAAc,cAAeK,EAAII,MAClC,MAAdoB,IAGAvB,EAAahO,KAAK,CAAEkG,KAAM+G,EAAUR,kBAAkBuC,MAAOpP,MAAOiJ,EAAIS,IACxE0E,EAAahO,KAAK,CAAEkG,KAAM+G,EAAUR,kBAAkBwC,MAAOrP,MAAOiJ,EAAIW,IACxEwE,EAAahO,KAAK,CAAEkG,KAAM+G,EAAUR,kBAAkB0C,MAAOvP,MAAOmJ,EAAIQ,GAAGD,IAC3E0E,EAAahO,KAAK,CAAEkG,KAAM+G,EAAUR,kBAAkB0C,MAAOvP,MAAOmJ,EAAIQ,GAAGC,IAC3EwE,EAAahO,KAAK,CAAEkG,KAAM+G,EAAUR,kBAAkB4C,QAASzP,MAAOmJ,EAAIiD,MAC1EgC,EAAahO,KAAK,CAAEkG,KAAM+G,EAAUR,kBAAkB6C,QAAS1P,MAAOmJ,EAAIkD,MAExDsD,EAAWnB,KAAsCoB,SAE1DtQ,SAAQ,SAAAuQ,GAAY,IAAD,IAClBC,EAAYD,EAAQrB,KAC1B,aAAIsB,EAAUC,eAAd,WAEA,IAAMC,EAAiC,WAArBF,EAAUG,OAAV,UACdnC,EAAc,gBAAiBgC,EAAUvB,aAD3B,aACd,EAAgDC,KAjFtC,SAAClI,GACvB,IACM4J,EADOlC,EAASQ,KAA4B2B,SAAS3B,KAC1C4B,KAAK/L,MAAK,SAAAgM,GAAG,OAAKA,EAAI7B,KAAiClI,OAASA,KACjF,YAAYzF,GAARqP,EAA0B,KACvBA,EAAK1B,KA8EA8B,CAAkBR,EAAUS,QAEf,MAAbP,GAEAzC,EAAWnN,MAAK,SAAC6J,GAA6B,IAAD,EAEnCuG,EAAc,SAACxN,GACjB,IAAMpE,EAAMwP,EAAa/J,MAAK,SAAAzF,GAAG,OAAIA,EAAI0H,OAAStD,EAAKsD,aAC5CzF,GAAPjC,EAAkBA,EAAIoB,MAAQgD,EAAKhD,MAClCoO,EAAahO,KAAK4C,IAE3BwN,EAAY,CAAElK,KAAM+G,EAAUL,cAAcyD,MAAOzQ,MAAOiK,EAAKb,QAC/DoH,EAAY,CAAElK,KAAM+G,EAAUL,cAAcmC,MAAOnP,MAAOiK,EAAKZ,QAC/DmH,EAAY,CAAElK,KAAM+G,EAAUL,cAAcoC,MAAOpP,MAAOiK,EAAKhB,IAAIS,IACnE8G,EAAY,CAAElK,KAAM+G,EAAUL,cAAcqC,MAAOrP,MAAOiK,EAAKhB,IAAIW,IACnE4G,EAAY,CAAElK,KAAM+G,EAAUL,cAAcuC,MAAOvP,MAAOiK,EAAKd,IAAIQ,GAAGD,IACtE8G,EAAY,CAAElK,KAAM+G,EAAUL,cAAcwC,MAAOxP,MAAOiK,EAAKd,IAAIQ,GAAGC,IACtE4G,EAAY,CAAElK,KAAM+G,EAAUL,cAAcyC,QAASzP,MAAOiK,EAAKd,IAAIiD,MACrEoE,EAAY,CAAElK,KAAM+G,EAAUL,cAAc0C,QAAS1P,MAAOiK,EAAKd,IAAIkD,MAGrE,IAAMqE,EAA6B,GAC7BpC,EAAWR,EAAc,aAAcgC,EAAUvB,MACvC,MAAZD,GACCA,EAASE,KAAoCC,OAAOnP,SAAQ,SAAAoP,GACzD,IAAMC,EAAYD,EAAMF,KAClBxO,EAAQ4O,EAAsBD,EAAWP,GAC/CsC,EAAetQ,KAAK,CAAEkG,KAAMqI,EAAUrI,KAAMtG,aAIpD,IAAI2Q,EAAU,EAERC,EADa9C,EAAc,aAAcgC,EAAUvB,MACxBC,KAAoCM,OAAOlQ,KAAI,SAAAkL,GAAK,OAAIA,EAAM0E,QACzFqC,EAAa5B,EAAqB5B,EAAUJ,gBAAgB6D,WAAYF,EAAcxC,EAAalM,OAAOwO,IAMhH,GAHc,UAAGK,EAAuB1D,EAAUJ,gBAAgB+D,OAAQJ,EAAcxC,UAA1E,SAGd,MAGkBvN,GAAdgQ,IACAF,EAAUE,GAGd,IA3CyC,eA2ChC/R,GA3CgC,MA8C/BmS,EAA8B,CAChC,CAAE3K,KAAM+G,EAAUJ,gBAAgB6D,WAAY9Q,MAAO2Q,GACrD,CAAErK,KAAM+G,EAAUJ,gBAAgBiE,aAAclR,MAAOlB,IAIrDgQ,GADQ,UAAGhB,EAAc,WAAYgC,EAAUvB,aAAvC,aAAG,EAA2CC,MACpCM,OAAOlQ,KAAI,SAAAkL,GAAK,OAAIA,EAAM0E,QAC5C2C,EAA+BrC,EAAOlQ,KAAI,SAAAoE,GAAS,IAAD,EACpD,MAAO,CAAEsD,KAAMtD,EAAKsD,KAAMtG,MAAK,UAAEiP,EAAqBjM,EAAKsD,KAAMwI,EAAQV,EAAalM,OAAOwO,GAAgBxO,OAAO+O,WAArF,QAA0G,MAGvItT,EAAQuQ,EACV8B,EACAmB,GAEJlH,EAAKjB,MAAM5I,KAAK,IAAI2I,EAASqI,SAASzT,KAlBjCmB,EAAI,EAAGA,EAAI6R,EAAS7R,IAAM,EAA1BA,YA0BzBwO,EAAgB+D,MAAM9D,EAAY,CAC9BE,WAAYyB,EAAiB7B,EAAUF,kBAAkBmE,aACzD9D,UAAW0B,EAAiB7B,EAAUF,kBAAkBoE,YACxD7D,QAASwB,EAAiB7B,EAAUF,kBAAkBqE,aACtD7D,aAAcuB,EAAiB7B,EAAUF,kBAAkBsE,iBAI/D,IAAMzH,EAASgF,EAAe3B,EAAUT,gBAAgB8E,QAClDC,EAAS3C,EAAe3B,EAAUT,gBAAgBgF,SAClDC,EAAS7C,EAAe3B,EAAUT,gBAAgBkF,SAClDC,EAAS/C,EAAe3B,EAAUT,gBAAgBoF,SAClDC,EAASjD,EAAe3B,EAAUT,gBAAgBsF,SAGlDC,EAAiBnD,EAAe3B,EAAUH,gBAAgBkF,iBAC1DC,EAAcrD,EAAe3B,EAAUH,gBAAgBoF,cACvDpI,EAAmB8E,EAAe3B,EAAUH,gBAAgBqF,oBAC5DlI,EAAiB2E,EAAe3B,EAAUH,gBAAgBsF,kBAE5DjJ,EAA2E,aAiB/E,YAhBc1I,GAAVmJ,IACAT,EAAS2C,EAASuG,iBAAiB,CAC/BzI,OAAQA,EACRjG,MAAOmI,EAAShB,yBAAyB,CACrCJ,EAAG6G,EACHlH,EAAGoH,EACH9G,EAAGgH,EACH/G,EAAGiH,IAEP3G,mBAAoB6G,EACpB7H,gBAAiB+H,EACjBnI,mBACAG,oBAID,CACHrB,QAAOC,MAAKE,MACZE,QAAOE,SACPC,OAAQ+D,GAITW,CAAkBH,EAAQE,IAGf,SAACvO,EAA0BgT,GAAuC,IAAD,EACnF,iBAAOA,EAASrO,MAAK,SAAA6L,GAAI,OAAIA,EAAKxQ,OAASA,YAA3C,QAAoD,OAU3CuP,EAAoB,uBAAG,SAAC3I,EAAcwI,EAAmCV,GAClF,IAAMuE,EAAU7D,EAAOzK,MAAK,SAAAyF,GAAK,OAAIA,EAAMxD,OAASA,KACpD,QAAezF,GAAX8R,EACJ,OAAO/D,EAAsB+D,EAASvE,IAGpCQ,EAAwB,SAAC+D,EAAkCvE,GAC7D,IAAMrB,EAAS4F,EAAQ5F,OAAOnO,KAAI,SAAAgU,GAC9B,GAAe,WAAXA,EAAElT,KAAmB,OAAO2C,OAAOuQ,EAAE5S,OACzC,IAAM6S,EAAWzE,EAAa/J,MAAK,SAAAyO,GAAC,OAAIA,EAAExM,OAASsM,EAAE5S,SACrD,YAAgBa,GAAZgS,EAA8B,EAC3BA,EAAS7S,SAGhB+S,EAAa,GACbC,EAAS,EAcb,OAbAL,EAAQM,aAAa3T,SAAQ,SAAC0D,GAC1B,IAAIkQ,EAAMlQ,EACG,QAATA,GACAkQ,EAAMnG,EAAOiG,GAAQxQ,WACrBwQ,KAEc,UAAThQ,EAAkBkQ,EAAM,kBACf,aAATlQ,IAAqBkQ,EAAM,eACpCH,GAAcG,KAGN1W,SAAS,WAAD,OAAYuW,EAAZ,KAARvW,IAKHuU,EAAsB,yBAAG,SAACzK,EAAcwI,EAAmCV,GACpF,IAAMuE,EAAU7D,EAAOzK,MAAK,SAAAyF,GAAK,OAAIA,EAAMxD,OAASA,KACpD,QAAezF,GAAX8R,EACJ,OAAOQ,EAAwBR,EAASvE,IAGtC+E,EAA0B,SAACR,EAAkCvE,GAC/D,IAAMrB,EAAS4F,EAAQ5F,OAAOnO,KAAI,SAAAgU,GAC9B,GAAe,WAAXA,EAAElT,KAAmB,OAAO2C,OAAOuQ,EAAE5S,OACzC,IAAM6S,EAAWzE,EAAa/J,MAAK,SAAAyO,GAAC,OAAIA,EAAExM,OAASsM,EAAE5S,SACrD,YAAgBa,GAAZgS,EAA8B,EAC3BA,EAAS7S,SAGhB+S,EAAa,GACbC,EAAS,EAeb,OAdAL,EAAQM,aAAa3T,SAAQ,SAAC0D,EAAMlE,GAChC,IAAIoU,EAAMlQ,EACG,QAATA,GACAkQ,EAAMnG,EAAOiG,GAAQxQ,WACrBwQ,KAEc,UAAThQ,EAAkBkQ,EAAM,kBACf,aAATlQ,EAAqBkQ,EAAM,cAClB,MAATlQ,IAAckQ,EAAM,MAC7BH,GAAcG,KAGN1W,SAAS,WAAD,OAAYuW,EAAZ,KAARvW,IAKH6R,EAA4B,mBAAG,CACxC,CAAE/H,KAAM+G,EAAUD,aAAaQ,aAAc5N,MAAO4N,GACpD,CAAEtH,KAAM+G,EAAUD,aAAaS,cAAe7N,MAAO6N,GACrD,CAAEvH,KAAM+G,EAAUD,aAAa3E,GAAIzI,MAAO,eAC1C,CAAEsG,KAAM+G,EAAUD,aAAagG,aAAcpT,MAAO,gB,CAhTlDqT,M,KAoTKA,I,GAAAA,K,sBCxSe,gBAAG,SAACH,GAC1B,OAAOA,EAAIzT,OAAS,GAUM,oBAAG,SAACyT,EAAaI,EAAaC,GACxD,OAAsB,IAAfL,EAAIzT,QAAiByT,EAAIzT,QAAU6T,GAAOJ,EAAIzT,QAAU8T,GAQvC,kBAAG,SAACL,GAE5B,OAAOM,EAAmBN,EADb,mEArBV,IA+BMM,EAAkB,qBAAG,SAACN,EAAavQ,GAC5C,IAAK,IAAI7D,EAAI,EAAGA,EAAIoU,EAAIzT,OAAQX,IAAK,CACjC,IAAM2U,EAAKP,EAAIvK,OAAO7J,GACtB,IAA0B,IAAtB6D,EAAK+Q,QAAQD,GAAY,OAAO,EAExC,OAAO,GAQa,cAAG,SAACP,GACxB,OAAQnR,MAAMM,OAAO6Q,KAUI,mBAAG,SAACA,EAAaI,EAAaC,GACvD,IAAKxR,MAAMM,OAAO6Q,IAAO,CACrB,IAAMS,EAAMtR,OAAO6Q,GACnB,OAAOS,GAAOL,GAAOK,GAAOJ,EAEhC,OAAO,GAQU,WAAG,SAACK,GAErB,IADA,IAAIvU,GAAS,EACJP,EAAI,EAAGA,EAAI8U,EAAWnU,OAAQX,IACnC,IAAK8U,EAAW9U,GAAI,CAChBO,GAAS,EACT,MAGR,OAAOA,G,CA3FLwU,Q,KA8FKA,I,0CAAAA,O,GC/FLC,Q,KAiBiB,WAAG,SAACtF,EAAWuF,GAElC,MAAO,CACHvF,OAAMuF,SAAQC,MAAOD,EAAOC,MAAQ,EACpCC,QAAQ,EACRC,SAAU,KAIQ,iBAAG,SAACC,GAC1B,IAAMC,EAAaD,EAAKJ,OACxB,GAAkB,MAAdK,EACA,IAAK,IAAItV,EAAI,EAAGA,EAAIsV,EAAWF,SAASzU,OAAQX,IAC5C,GAAIqV,GAAQC,EAAWF,SAASpV,GAAI,OAAOA,EAGnD,OAAQ,GAGM,SAAG,SAACnB,GAOf,IAAD,IACI0W,EAAS,UAAG1W,EAAM0W,iBAAT,SACTC,EAAS,UAAG3W,EAAM2W,iBAAT,QAAsB,KAE/BC,EAAMC,iBAAO,IAMbC,EAA2B,WAiB7B,OAhBc,SAARpD,EAAS2C,EAAeU,EAAoBX,GAC9C,IAAMI,EAAoB,CACtB3F,KAAMkG,EAASlG,KACfwF,MAAOA,EAEPC,QAAQ,EACRC,SAAU,GACVH,UAOJ,OALAI,EAAKD,SACMQ,EAASR,SAAStV,KAAI,SAAA+V,GACzB,OAAOtD,EAAM2C,EAAQ,EAAGW,EAAOR,MAGhCA,EAEJ9C,CAAM,EAAG1T,EAAMiX,aAAc,OA3BtC,EA6B4C9S,mBAAsB2S,KA7BlE,mBA6BKI,EA7BL,KA6BsBC,EA7BtB,KA+BFhZ,qBAAU,WACNgZ,EAAmBL,OACpB,CAAC9W,EAAMiX,eAEV9Y,qBAAU,WACW,MAAbwY,GAAyC,MAApBA,EAAUP,SAC/BO,EAAUP,OAAOE,QAAS,KAE/B,CAACK,IAEJ,IAAMS,EAAUC,mBAAQ,WAEpB,IAAMrS,EAAsB,GAsE5B,OArEwB,SAAlBsS,EAAmBC,EAAsBC,GAE3C,IA0BMC,EAAYF,EAAQ1G,OAAR,OAAgB8F,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAW9F,MAC7C7L,EAAKvC,KACD,eAACG,GAAD,CAEIvC,MAAOuW,EAAIc,QAAQC,YACnB/O,SAAU6O,EACVlR,YAAamQ,GAvBE,WAInB,IAHA,IAAIhV,GAAS,EACTkW,EAAWjB,EAEI,MAAZiB,GAAkB,CACrB,GAAsB,MAAlBL,EAAQnB,QAAkBmB,GAAWK,EAAU,CAC/ClW,GAAS,EACT,MAEJkW,EAAWA,EAASxB,OAMxB,OAHe,IAAX1U,GAAiC,MAAbiV,GAAyC,MAApBA,EAAUP,SACnD1U,OAAoEwB,GAA3DyT,EAAUP,OAAOG,SAAS7P,MAAK,SAAA8P,GAAI,OAAIA,GAAQe,MAErD7V,EAQuBmW,GAC1BnB,UAAWe,GAAaf,EAL5B,UA3BOc,EAAUvW,KAAI,SAAC6W,EAAO3W,GACzB,IAAM4W,EAAuB,GAG7B,OAFIP,EAAU1V,OAAS,IAAMX,GAAK2W,IAAOC,EAAMtV,KAAKqV,EAAQ,cAACE,GAAD,GAAgBD,EAAMjW,QAAa,cAACmW,GAAD,GAAeF,EAAMjW,SAChH0V,EAAU1V,OAAS,IAAMX,GAAG4W,EAAMtV,KAAK,cAACyV,GAAD,GAAiBH,EAAMjW,SAC3D,cAACqW,GAAD,UAAiBJ,GAAJ5W,MA+BS,IAA5BoW,EAAQhB,SAASzU,OAAe,6BAAQ,cAACsW,GAAD,CACrCzS,QAAS,WACL4R,EAAQjB,QAAUiB,EAAQjB,OAC1Ba,EAAmB,eAAKD,KAHS,SAMvCK,EAAQjB,OAAS,IAAM,MACzB,cAAC+B,GAAD,CACI1S,QAAS,WACL3F,EAAMsY,WAAWf,GACjBJ,EAAmB,eAAKD,KAE5BqB,cAAe,WACXhB,EAAQjB,QAAUiB,EAAQjB,OAC1Ba,EAAmB,eAAKD,KAPhC,SAUKlX,EAAMwY,YAAYjB,OAxBlBvS,EAAKlD,SA4BdyV,EAAQjB,QACRiB,EAAQhB,SAAS5U,SAAQ,SAACqV,EAAO7V,GAC7BmW,EAAgBN,EAAOQ,EAAUvS,QAAQV,OAAOgT,EAAQhB,SAASzU,OAAS,IAAMX,OAI5FmW,CAAgBJ,EAAiB,IAI1BlS,IACR,CAACkS,EAAiBlX,EAAMyY,WAAY/B,IAEvC,OACI,cAACgC,GAAD,CACI9B,IAAKA,EACLF,UAAWA,EAFf,SAGKU,KAMFjB,I,uCAAAA,MAETuC,GAAQ7Y,IAAOC,IAAV,4RAYL,SAAAE,GAAK,OAAKA,EAAM0W,UAAiB/W,YAAxB,qGAAmB,MAM5BiD,GAAU/C,IAAOC,IAAV,mXAQP,SAAAE,GAAK,OAAKA,EAAM0W,UAAiB/W,YAAxB,wEAAmB,MAI5B,SAAAK,GAAK,OAAKA,EAAMuG,WAAkB5G,YAAzB,6FAAoB,MAI7B,SAAAK,GAAK,OAAKA,EAAM4I,SAAgBjJ,YAAvB,6FAAkB,MAIpB,SAAAK,GAAK,OAAIA,EAAMK,SActB8X,GAAStY,IAAOC,IAAV,8NASNmY,GAAWpY,IAAOC,IAAV,6MASRkY,GAAYnY,IAAOC,IAAV,6MASToY,GAAarY,IAAOC,IAAV,6MAUVsY,GAAUvY,IAAOC,IAAV,uXAePuY,GAAOxY,IAAOC,IAAV,2N,SCxQG6Y,GAAqBC,wBAAc,IAuLjCC,GArLQ,WAAO,IAAD,EACG5Y,qBAAWC,IAA/BC,EADiB,EACjBA,MAAOC,EADU,EACVA,SADU,EAIS+D,mBAAsC,MAJ/C,mBAIlBwS,EAJkB,KAIPmC,EAJO,OAMK3U,oBAAkB,GANvB,mBAMlB4U,EANkB,KAMRC,EANQ,OAOW7U,mBAAc,MAPzB,mBAOlBsU,EAPkB,KAONQ,EAPM,KASnB5I,EAAWlQ,EAAMuH,YAEjBuP,EAAkCI,mBAAQ,WAC5C,MAAO,CACHxG,KAAMR,EACNkG,SAAU2C,GAAUC,oBAAoB9I,MAE7C,CAACA,IAYE+I,EAAa/B,mBAAQ,WAEvB,IADA,IAAI7G,EAAmCmG,EACzB,MAAPnG,GAAa,CAChB,IAAMzO,EAAQyO,EAAIK,KAA+B9O,KACjD,GAAI,CAAC,aAAc,aAAatD,SAASsD,GAAO,OAAOyO,EACvDA,EAAMA,EAAI4F,OAEd,OAAO,OACR,CAACO,IAKE0C,EAAoB,WACJ,MAAdD,IACJjZ,EAAMO,OAAOC,OACT,cAAC,GAAkB2Y,UAAnB,CACIC,OAAQH,EAAWvI,KACnBR,SAAUA,EACVmJ,kBAAmB,WACfrZ,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,OAI1BC,EAAS,eAAKD,MAGlB,OACI,eAAC,GAAD,CACIsZ,SAAU,EACVC,UAAW,SAACnb,GAER,IAAIwa,GAAyB,MAAbpC,EAChB,OAAQpY,EAAEG,KACN,IAAK,aACGiY,EAAUJ,SAASzU,OAAS,IACvB6U,EAAUL,OACVwC,EAAanC,EAAUJ,SAAS,IADdI,EAAUL,QAAS,EAE1C2C,EAAc,KAEpB,MACF,IAAK,YACGtC,EAAUL,OAAQK,EAAUL,QAAS,EAEb,MAApBK,EAAUP,QAAgB0C,EAAanC,EAAUP,QAEzD6C,EAAc,IAChB,MACF,IAAK,UACD,GAAwB,MAApBtC,EAAUP,OAAgB,CAC1B,IAAMpR,EAAO2R,EAAUP,OAAOG,SAC9BvR,EAAKrD,SAAQ,SAACgY,EAAGxY,GACb,GAAIwV,GAAagD,EAQb,OAPU,IAANxY,GACA2X,EAAanC,EAAUP,QACvB6C,EAAc,MAEdH,EAAa9T,EAAK7D,EAAI,IACtB8X,EAAc,KAEX,KAIrB,MACF,IAAK,YACD,GAAwB,MAApBtC,EAAUP,OAAgB,CAC1B,IAAMpR,EAAO2R,EAAUP,OAAOG,SAC9BvR,EAAKrD,SAAQ,SAACgY,EAAGxY,GACb,GAAIwV,GAAagD,GAAKxY,EAAI6D,EAAKlD,OAAS,EAGpC,OAFAgX,EAAa9T,EAAK7D,EAAI,IACtB8X,EAAc,IACP,KAIrB,MACF,IAAK,IACiB,MAAdG,GAAoBC,MAlDxC,UAuDI,eAACO,GAAD,WACI,cAACC,GAAD,UACI,cAAC,IAASvY,aAAV,CACIC,MAAM,OACNhB,QAAS,CACL,CACIC,MAAO,UACPqC,SAAwB,MAAduW,EACV3Y,SAAU4Y,QAK1B,cAACS,GAAD,UACI,cAAC,GAASC,MAAV,CACI9C,aAAcA,EACdqB,WAAY,SAAC9B,GACTsC,EAAatC,IAEjBgC,YAAa,SAAChC,GAIV,OAAO0C,GAAUc,kBAAkBxD,GAAe,OAATG,QAAS,IAATA,OAAA,EAAAA,EAAW9F,OAAQ2F,EAAK3F,OAErE4H,WAAYA,EACZ9B,UAAWA,EACXD,UAAWqC,SAIvB,cAACkB,GAAD,UACI,eAACC,GAAD,WACI,cAACC,GAAD,UACI,cAACC,GAAD,UAAqBlB,GAAUmB,YAAY1D,OAE/C,cAACgC,GAAmB2B,SAApB,CAA6BjY,MAAO,CAChCgO,WACAmG,KAAMG,EACNmC,aAAcA,EACdL,WAAY,WAAQQ,EAAc,KAClCF,WACAC,YAEAuB,YArIA,SAAClK,GACjBlQ,EAAMuH,YAAc2I,EACpBjQ,EAAS,eAAKD,KAoIEqa,WAAY,WAAO,IAAD,MACRhE,EAAOG,EACTjO,GAAS,EACb,UAAA8N,EAAKJ,cAAL,SAAaG,SAAS5U,SAAQ,SAACgY,EAAGxY,GAC1BwY,GAAKnD,IAAM9N,EAAQvH,MAE3B,UAAAqV,EAAKJ,cAAL,SAAaG,SAASkE,OAAO/R,EAAO,GACpC,IAAMgS,EAAU,UAAGlE,EAAKJ,cAAR,aAAG,EAAavF,KAC1B8J,EAAWC,GAAiBC,iBAAiBH,EAAW3Y,MAC9C,MAAZ4Y,IACSD,EAAW7J,KAAK8J,GACxBF,OAAO/R,EAAO,GACnBoQ,EAAatC,EAAKJ,QAClB6C,EAAc,OAtBtB,SAyBI,cAAC6B,GAAD,UAAiB5B,GAAU6B,mBAAmBpE,gBAYhE+B,GAAQ7Y,IAAOC,IAAV,wJAQL8Z,GAAW/Z,IAAOC,IAAV,iMAVU,KAmBlB+Z,GAAYha,IAAOC,IAAV,8JAYTga,IALgBja,IAAOC,IAAV,2EAKDD,IAAOC,IAAV,wKAQTma,GAAYpa,IAAOC,IAAV,qNAvCS,KAiDlBoa,GAAara,IAAOC,IAAV,gNAQVqa,GAAgBta,IAAOC,IAAV,oKAObsa,GAAqBva,IAAOC,IAAV,iPAClBF,KAAOgH,kBAUPkU,GAAiBjb,IAAOC,IAAV,iQChPLkb,ID2PAnb,IAAOC,IAAV,gNAIN,SAAAE,GAAK,OAAIA,EAAM8C,UAAY,GAAKnD,YAAvB,6DC1RW,WAAO,IAAD,EACCM,qBAAW0Y,IAAjCnC,EADqB,EACrBA,KAAMsC,EADe,EACfA,aACAtC,EAAK3F,KAElB,OAAQ,mCACJ,cAAC,IAASoK,YAAV,CACIjV,MAAM,YACNE,SAAU,cAAC,IAAS5E,aAAV,CACNC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,eACPC,SAAU,WACN,IAIMya,EAAUN,GAAiBO,SAJM,CACnCpZ,KAAM,gBACN8O,KAAM,MAEyC2F,GACnDsC,EAAaoC,eCpB/BE,Q,KAUgB,UAAG,SAACpb,GAAkB,IAAD,IACWC,qBAAW0Y,IAArDnC,EAD+B,EAC/BA,KAAMuC,EADyB,EACzBA,SAAUC,EADe,EACfA,UAAWwB,EADI,EACJA,WAE7BjI,EAAOiE,EAAK3F,KAEZwK,EAAa7Z,IAAS8Z,gBAAgBtb,EAAMub,iBAElD,OAAQ,mCACJ,cAAC,IAASja,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,SACPqC,SAAUkW,EACVtY,SAAU,WACW,MAAb8R,EAAK1B,KACL2J,IAEAxa,EAAMwb,cAEVxC,GAAU,KAGlB,CACIxY,MAAQuY,EAAsB,SAAX,SACnBlW,UAAWkW,IAAD,UAAc/Y,EAAMyb,iBAApB,QAAiCJ,GAC3C5a,SAAU,WACDsY,GAGgB,MAAbxG,EAAK1B,KACL7Q,EAAM0b,cAEN1b,EAAM2b,eAEV3C,GAAU,IAPVA,GAAU,WAiB3BoC,I,YCxCVQ,GDwCUR,ME4GAS,GA3JY,WAAO,IAAD,IACD5b,qBAAWC,IAA/BC,EADqB,EACrBA,MAAOC,EADc,EACdA,SADc,EAEiCH,qBAAW0Y,IAAjEnC,EAFqB,EAErBA,KAAMgE,EAFe,EAEfA,WAAYxB,EAFG,EAEHA,UAAWD,EAFR,EAEQA,SAAUN,EAFlB,EAEkBA,WACzClG,EAAOiE,EAAK3F,KAEZiL,EAAS,UAAGtF,EAAKJ,cAAR,aAAG,EAAaA,OALF,EAOLjS,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAPlD,mBAOtB8G,EAPsB,KAOhBoT,EAPgB,OAQC5X,mBAAkC,CAAE9B,MAAO,SAAUR,OAAQ,KAR9D,mBAQtBma,EARsB,KAQbC,EARa,KAWvBC,EAAe7E,mBAAQ,WAAO,IAAD,IACzBhM,GAAQ,UAACmL,EAAKJ,cAAN,iBAAC,EAAaA,cAAd,aAAC,EAAqBvF,MAA+BA,KACnE,OAAO+J,GAAiBuB,iBAAiB9Q,KAC1C,CAACmL,IAEEgF,EAAc,WAChB,IAAMrP,EAAQoG,EAAK1B,KACnBkL,EAAQ,2BAAKpT,GAAN,IAAYtG,MAAO8J,EAAMxD,QAChCsT,EAAW,2BAAKD,GAAN,IAAe3Z,MAAO8J,EAAMiQ,cAW1C,OARAje,qBAAU,WACW,MAAboU,EAAK1B,KACLmI,GAAU,GAEVwC,MAEL,CAAChF,IAEI,qCACJ,cAAC,GAAiB8C,UAAlB,CACIkC,YAAaA,EACbD,gBAAiB,CAAC5S,EAAMqT,GACxBN,YAAa,WACT,IAAMvP,EAAoC,CACtCxD,KAAMA,EAAKtG,MACX+Z,UAAWJ,EAAQ3Z,OAEvB8J,EAAMxD,KAAOA,EAAKtG,MAClBkQ,EAAK1B,KAAO1E,EACZkQ,GAAgBP,EAAWnT,EAAKtG,QAEpCsZ,aAAc,WACV,IAAMxP,EAAQoG,EAAK1B,KACbyL,EAAWnQ,EAAMxD,KACvBwD,EAAMxD,KAAOA,EAAKtG,MAClB8J,EAAMiQ,UAAYJ,EAAQ3Z,MAC1BkQ,EAAK1B,KAAO1E,EAERmQ,IAAa3T,EAAKtG,OAClBka,GAAiBT,EAAWQ,EAAU3T,EAAKtG,UAIvD,cAAC,IAAS4Y,YAAV,CACIjV,MAAM,QACNE,SAAU,qCACN,cAAC,IAASsW,WAAV,CACIrZ,WAAW,OACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPsD,YAAaoV,EACbnX,UAAW+G,EACXhG,aAAcoZ,EACd7Z,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GAAD,OAAW6W,GAAU0D,eAAeva,IAC7CK,UAAW,SAEf,CACIF,QAAS,SAACH,GAQN,OAPa6Z,EAAaW,QAAO,SAAAlU,GAE7B,OAAiB,MAAb4J,EAAK1B,MACG0B,EAAK1B,KAAoClI,OAASA,KAIrDlK,SAAS4D,IAE1BK,UAAW,iBAM/B,cAAC,IAAS8Z,WAAV,CACIrZ,WAAW,OACXS,IACI,cAAC,IAASkZ,SAAV,CACIlb,UAAWoa,EACXrZ,aAAcsZ,EACdjX,KAAMkU,GAAU6D,SAAS9b,KAAI,SAAAc,GACzB,MAAO,CAAEM,MAAON,EAAMoD,UAAWpD,EAAMyD,WAAqB,UAATzD,MAEvDgD,WAAS,EACT1E,MAAO,IACPsD,YAAaoV,EACb7W,UACI,CACI,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,sBAS3C,cAAC,IAASuY,YAAV,CACIjV,MAAM,YACNnD,UAAWkW,EACX7S,SAAU,qCACN,cAAC,IAAS5E,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,SACPqC,UAAWkW,EACXtY,SAAU,WACN,IAAM0L,EAAQoG,EAAK1B,KACbmM,EAASC,GAAkBzG,EAAMrK,EAAMxD,MACvB,IAAlBqU,EAAOlb,QAEPob,GAAgBpB,EAAWnT,EAAKtG,OAChCmY,MAEAra,EAAMO,OAAOC,OAAS,cAAC,KAAc2Y,UAAf,CAClBvY,QAAO,WAAMoL,EAAMxD,KAAZ,4CAAoDqU,KAE/D5c,EAAS,eAAKD,UAOjCya,GAAiBuC,eAAe3G,EAAMiC,YAcjDwE,GAAoB,SAACzG,EAA4B4G,GAEnD,IAAMJ,EAAmB,GAczB,OAFApC,GAAiByC,6BAA6B7G,GAV7B,SAACxR,GACdA,EAAKrD,SAAQ,SAAA4Q,GACT,IAAMpG,EAAQoG,EAAK1B,KACnB1E,EAAMiD,OAAOzN,SAAQ,SAAA2b,GACI,aAAjBA,EAAQvb,MAAuBub,EAAQjb,QAAU+a,GACjDJ,EAAOva,KAAK0J,EAAMxD,eAO3BqU,GAOLT,GAAmB,SAACT,EAAiCQ,EAAkBiB,GAEzE,IAAMC,EAAc,SAACxY,GACjBA,EAAKrD,SAAQ,SAAA4Q,GACOA,EAAK1B,KAAiCzB,OAC/CzN,SAAQ,SAAA2b,GACU,aAAjBA,EAAQvb,MAAuBub,EAAQjb,QAAUia,IACjDgB,EAAQjb,MAAQkb,UAM1BhL,EAAOuJ,EAAUjL,KACjBwB,EAAYE,EAAK1B,KACjBF,EAAW0B,EAAUzB,KAAKlK,MAAK,SAAA+W,GAAG,MAAiB,cAAbA,EAAI1b,aAChCmB,GAAZyN,GACA6M,EAAa7M,EAASE,KAAoCC,QAE9D,IAAM4M,EAAYrL,EAAUzB,KAAKlK,MAAK,SAAA+W,GAAG,MAAiB,eAAbA,EAAI1b,aAChCmB,GAAbwa,GACAF,EAAaE,EAAU7M,KAAoCM,QAE/D,IAAMwM,EAActL,EAAUzB,KAAKlK,MAAK,SAAA+W,GAAG,MAAiB,iBAAbA,EAAI1b,aAChCmB,GAAfya,GACAH,EAAaG,EAAY9M,KAAoCM,QAEjE,IAAMyM,EAASvL,EAAUzB,KAAKlK,MAAK,SAAA+W,GAAG,MAAiB,gBAAbA,EAAI1b,aAChCmB,GAAV0a,GACCA,EAAO/M,KAAsCoB,SAAStQ,SAAQ,SAAAkc,GAAQ,IAAD,IAC5DC,EAASlD,GAAiBmD,aAAaF,EAAK,cAEpC,MAAVC,GACAN,EAAaM,EAAOjN,KAAoCC,QAG5D0M,GAAY,UAAC5C,GAAiBmD,aAAaF,EAAK,qBAApC,aAAC,EAAkDhN,MAAoCM,QAEnGqM,GAAY,UAAC5C,GAAiBmD,aAAaF,EAAK,mBAApC,aAAC,EAAgDhN,MAAoCM,WAIzG,IAAM6M,EAAgB,SAAC7M,GACnBA,EAAOxP,SAAQ,SAAA4Q,GACX,IAAMlN,EAAOkN,EAAK1B,KACdxL,EAAKsD,OAAS2T,IACdjX,EAAKsD,KAAO4U,OAIxB,GAAkB,eAAdhL,EAAKxQ,KAAuB,CAAC,IAAD,EAGtBkc,EAAS,SAATA,EAAUC,GACZ,IAAMN,EAASM,EAAMtN,KAAKlK,MAAK,SAAA+W,GAAG,MAAiB,gBAAbA,EAAI1b,aAC5BmB,GAAV0a,GACHA,EAAO/M,KAAsCoB,SAAStQ,SAAQ,SAAAkc,GAC3D,IAAMM,EAAON,EAAIhN,KACjB,GAAoB,WAAhBsN,EAAK7L,OAAqB,CAC1B,IAAM8L,EAAWxD,GAAiByD,kBAAkBR,EAAK,iBAAiBhN,KAC1EoN,EAAOG,QACJ,GAAoB,WAAhBD,EAAK7L,QAAuB6L,EAAKvL,SAAWP,EAAU1J,KAAM,CACnE,IAAM2V,EAAU1D,GAAiByD,kBAAkBR,EAAK,YAAYhN,KACpEmN,EAAcM,EAAQnN,aAKb2K,EAAU1F,OAClBG,SAAS5U,SAAQ,SAAAuc,GAC1BD,EAAQC,EAAMrN,KAA+BA,SAGjD,IAEM4B,GAFQ,UAAGqJ,EAAU1F,cAAb,aAAG,EAAkBA,QACZvF,KAA+BA,KACnC0N,QAAQ1N,KAAmC4B,KAC9D+L,QAAQC,IAAIhM,EAAK3Q,QACjB2Q,EAAK9Q,SAAQ,SAAA4Q,GACT,IAAMmM,EAAgB9D,GAAiByD,kBAAkB9L,EAAM,iBACzD+L,EAAU1D,GAAiByD,kBAAkBK,EAAe,gBAAgB7N,KAClFmN,EAAcM,EAAQnN,gBAEvB,GAAkB,kBAAdoB,EAAKxQ,KAA0B,CAAC,IAAD,EAChC4c,EAAQ,UAAG7C,EAAU1F,cAAb,aAAG,EAAkBvF,KAC7ByN,EAAU1D,GAAiByD,kBAAkBM,EAAU,YAAY9N,KACzEmN,EAAcM,EAAQnN,UASxByN,GAAuB,SACzB9C,EACArb,GAEA,IAAM8R,EAAOuJ,EAAUjL,KACjBwB,EAAYE,EAAK1B,KAEvB,GAAkB,eAAd0B,EAAKxQ,KAAuB,CAAC,IAAD,EACtBkc,EAAS,SAATA,EAAUnC,GACZ,IAAM+C,EAAa/C,EAAUvF,SAAS7P,MAAK,SAAAsQ,GAAK,MAAmD,gBAA9CA,EAAMnG,KAA+B9O,aACxEmB,GAAd2b,GACJA,EAAWtI,SAAS5U,SAAQ,SAAAqV,GACxB,IAAMmH,EAAQnH,EAAMnG,KAA+BA,KAC/B,WAAhBsN,EAAK7L,OACL2L,EAAOrD,GAAiBkE,kBAAkB9H,EAAO,kBAC1B,WAAhBmH,EAAK7L,QAAuB6L,EAAKvL,SAAWP,EAAU1J,MAC7DlI,EAASma,GAAiBkE,kBAAkB9H,EAAO,iBAI1C8E,EAAU1F,OAClBG,SAAS5U,SAAQ,SAAAqV,GAC1BiH,EAAOjH,OAGG,UAAG8E,EAAU1F,cAAb,aAAG,EAAkBA,QAC1BG,SAAS,GAAGA,SAAS5U,SAAQ,SAAAod,GAClC,IAAMC,EAAgBpE,GAAiBkE,kBAAkBC,EAAU,iBAC7DE,EAAWrE,GAAiBkE,kBAAkBE,EAAe,gBACrDD,EAASlO,KAA+BA,KAC7CqO,QAAU7M,EAAU1J,MACzBlI,EAASwe,WAGd,GAAkB,kBAAd1M,EAAKxQ,KAA0B,CACtC,IAAMkd,EAAWrE,GAAiBkE,kBAAkBhD,EAAU1F,OAAgC,YAC9F3V,EAASwe,KAQX5C,GAAkB,SAACP,EAAiCqD,GAStDP,GAAqB9C,GARD,SAACmD,GACjB,IAAMG,EAAYxE,GAAiByE,gBAAgB,YAC/C,CAAE1W,KAAMwW,EAAY7J,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,QAEhE4c,EAASpO,KAA+BA,KACjDM,OAAO1O,KAAK2c,GACpBH,EAAS1I,SAAS9T,KAAK0T,GAASmJ,WAAWF,EAAWH,QASxD/B,GAAkB,SAACpB,EAAiCyD,GAatDX,GAAqB9C,GAZD,SAACmD,GACjB,IAAMX,EAAWW,EAASpO,KAA+BA,KACrD2O,GAAY,EAChBlB,EAAQnN,OAAOsO,MAAK,SAACtT,EAAOhL,GACxB,GAAKgL,EAAM0E,KAAiClI,MAAQ4W,EAEhD,OADAC,EAAWre,EACJ,KAGfmd,EAAQnN,OAAOsJ,OAAO+E,EAAU,GAChCP,EAAS1I,SAASkE,OAAO+E,EAAU,OCzU5BE,GA7BO,WAAO,IAAD,EACKzf,qBAAW0Y,IAAjCnC,EADiB,EACjBA,KAAMsC,EADW,EACXA,aACPvG,EAAOiE,EAAK3F,KAElB,OAAQ,mCACJ,cAAC,IAASoK,YAAV,CACIjV,MAAM,YACNE,SAAU,cAAC,IAAS5E,aAAV,CACNC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,WACPC,SAAU,WACN,IAAMkf,EAAkC,CACpC5d,KAAM,YACN8O,KAAM,MAET0B,EAAK1B,KAAmC4B,KAAKhQ,KAAKkd,GACnD,IAAMzE,EAAU/E,GAASmJ,WAAWK,EAAUnJ,GAC9CA,EAAKD,SAAS9T,KAAKyY,GACnBpC,EAAaoC,aCQ1B0E,GA3BQ,WAAO,IAAD,EACI3f,qBAAW0Y,IAAjCnC,EADkB,EAClBA,KAAMsC,EADY,EACZA,aACAtC,EAAK3F,KAElB,OAAQ,mCACJ,cAAC,IAASoK,YAAV,CACIjV,MAAM,YACNE,SAAU,cAAC,IAAS5E,aAAV,CACNC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,YACPC,SAAU,WACN,IAIMya,EAAUN,GAAiBO,SAJM,CACnCpZ,KAAM,aACN8O,KAAM,MAEyC2F,GACnDsC,EAAaoC,aCiS1B2E,GA9SS,WAAO,IAAD,EACE5f,qBAAWC,IAA/BC,EADkB,EAClBA,MAAOC,EADW,EACXA,SADW,EAEkDH,qBAAW0Y,IAA/E6B,EAFkB,EAElBA,WAAYhE,EAFM,EAENA,KAAMsC,EAFA,EAEAA,aAAcL,EAFd,EAEcA,WAAYO,EAF1B,EAE0BA,UAAWD,EAFrC,EAEqCA,SACzDxG,EAAOiE,EAAK3F,KAHQ,EAKF1M,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KALrD,mBAKnB8G,EALmB,KAKboT,EALa,OAOoC1E,mBAAQ,WAAO,IAAD,EAClErS,EAAOwR,EAAKD,SAAStV,KAAI,SAAA6e,GAC3B,OAAQA,EAAGjP,KAA+B9O,QAG9C,MAAO,CACY,eAFA,UAACyU,EAAKJ,cAAN,aAAC,EAAavF,MAA+B9O,KAG5DiD,EAAKvG,SAAS,gBACduG,EAAKvG,SAAS,aACduG,EAAKvG,SAAS,kBAEnB,CAAC+X,IAlBsB,mBAOnBuJ,EAPmB,KAORC,EAPQ,KAOIC,EAPJ,KAOkBC,EAPlB,KAoBpB1E,EAAc,WAChB,IAAKuE,EAAW,CACZ,IAAM5T,EAAQoG,EAAK1B,KACnBkL,EAAQ,2BAAKpT,GAAN,IAAYtG,MAAO8J,EAAMxD,UAKlCwX,EAAgB9I,mBAAQ,WAE1B,MAAkB,kBAAd9E,EAAKxQ,KAAiC,GACnC6Y,GAAiBwF,iBAAiB5J,KAC1C,CAACA,IAEJrY,qBAAU,WACW,MAAboU,EAAK1B,KACLmI,GAAU,GAEVwC,MAEL,CAAChF,EAAMuJ,IAKV,IAAMM,EAAgB,SAACC,EAAkBC,EAAiBC,GAClDF,GACA1F,GAAiB6F,YAAYjK,EAAM+J,EAAS,GAC5CzH,EAAa,eAAKtC,IAClBiC,MAEAmC,GAAiB8F,YAAYF,EAAahK,EAAM+J,GAChDzH,EAAa,eAAKtC,IAClBiC,MA6BR,OAAQ,qCACHsH,EAAY,6BAAS,qCAClB,cAAC,GAAiBzG,UAAlB,CACIkC,YAAaA,EACbD,gBAAiB,CAAC5S,GAClB+S,YAAa,WACT,IAAMnE,EAAmC,CACrC5O,KAAMA,EAAKtG,MACXuO,KAAMgK,GAAiB+F,uBAE3BpJ,EAAQ5O,KAAOA,EAAKtG,MACpBkQ,EAAK1B,KAAO0G,EAEZA,EAAQ3G,KAAKjP,SAAQ,SAAA8b,GACjB,IAAMvC,EAAU/E,GAASmJ,WAAW7B,EAAKjH,GAC3B0E,EAAQrK,KAA+BA,KAChBM,OAAOxP,SAAQ,SAAAwK,GAChD+O,EAAQ3E,SAAS9T,KAAK0T,GAASmJ,WAAWnT,EAAO+O,OAErD1E,EAAKD,SAAS9T,KAAKyY,MAEvBzC,IACArY,EAAS,eAAKD,KAElBwb,aAAc,WACV,IAAMxP,EAAQoG,EAAK1B,KACbyL,EAAWnQ,EAAMxD,KACvBwD,EAAMxD,KAAOA,EAAKtG,MAClBkQ,EAAK1B,KAAO1E,EAERmQ,IAAanQ,EAAMxD,MACnBiY,GAAcpK,EAAM8F,EAAUnQ,EAAMxD,SAIhD,cAAC,IAASsS,YAAV,CACIjV,MAAM,QACNE,SAAU,mCACN,cAAC,IAASsW,WAAV,CACIrZ,WAAW,OACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPsD,YAAaoV,EACbnX,UAAW+G,EACXhG,aAAcoZ,EACd7Z,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GAAD,OAAW6W,GAAU0D,eAAeva,IAC7CK,UAAW,SAEf,CACIF,QAAS,SAACH,GAAD,OAAY8d,EAAc1hB,SAAS4D,IAC5CK,UAAW,wBAS3C,cAAC,IAASuY,YAAV,CACIjV,MAAM,UACNnD,UAAWkW,EACX7S,SAAU,qCACN,cAAC,IAAS2a,OAAV,CACI9d,UAAU,SACVa,IAAK,cAAC,IAASkd,OAAV,CACDtgB,MAAO,WACPH,MAAO,IACPmG,MAAOwZ,EACPnd,UAtGA,WAChB,IAAMke,EAAenG,GAAiBoG,aAAaxK,EAAM,gBACzD,OAAoB,MAAhBuK,GACGA,EAAaxK,SAASzU,OAAS,EAmGXmf,GACXxgB,SAAU,WAEN4f,EACIL,EAFU,EAIV,CACIje,KAAM,eACN8O,KAAM,CACFqQ,KAAM,WAO9B,cAAC,IAASL,OAAV,CACI9d,UAAU,SACVF,UAAU,EACVe,IAAK,cAAC,IAASkd,OAAV,CACDtgB,MAAO,QACPH,MAAO,IACPmG,MAAOyZ,EACPpd,UArHH,WACb,IAAMse,EAAYvG,GAAiBoG,aAAaxK,EAAM,aACtD,OAAiB,MAAb2K,GACGA,EAAU5K,SAASzU,OAAS,EAkHRsf,GACX3gB,SAAU,WACN,IAAI8f,EAAU,EACVP,GAAYO,IAChBF,EACIJ,EACAM,EACA,CACIxe,KAAM,YACN8O,KAAM,CACFC,OAAQ,WAOhC,cAAC,IAAS+P,OAAV,CACI9d,UAAU,SACVa,IACI,cAAC,IAASkd,OAAV,CACItgB,MAAO,UACPH,MAAO,IACPmG,MAAO0Z,EACPrd,UArIL,WACf,IAAMwe,EAAczG,GAAiBoG,aAAaxK,EAAM,eACxD,OAAmB,MAAf6K,GACGA,EAAY9K,SAASzU,OAAS,EAkINwf,GACX7gB,SAAU,WACN,IAAI8f,EAAU,EACVP,GAAYO,IACZN,GAAcM,IAClBF,EACIH,EACAK,EACA,CACIxe,KAAM,cACN8O,KAAM,CACFoB,SAAU,gBAU7C8N,EAAY,6BACT,cAAC,IAAS9E,YAAV,CACIjV,MAAM,YACNnD,UAAWkW,EACX7S,SAAU,qCACL0U,GAAiB2G,mBAAmB/K,GAAOuC,EAAU,QAAS5Y,EAAOC,EAAUqY,GAuChF,cAAC,IAASnX,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,SACPC,SAAU,WACN,IAAM0L,EAAQoG,EAAK1B,KACbmM,EAASwE,GAAgBhL,EAAMrK,EAAMxD,MACrB,IAAlBqU,EAAOlb,OACP0Y,KAEAra,EAAMO,OAAOC,OAAS,cAAC,KAAc2Y,UAAf,CAClBvY,QAAO,WAAMoL,EAAMxD,KAAZ,4CAAoDqU,KAE/D5c,EAAS,eAAKD,UAOjCya,GAAiBuC,eAAe3G,EAAMiC,YAe9C+I,GAAkB,SAAChL,EAA4BiL,GAExD,IAAMzE,EAAmB,GAKzB,OADA0E,GAAwBlL,EAAMiL,GAHb,SAACtD,GACdnB,EAAOva,KAAK0b,EAAKwD,OAGd3E,GAOL4D,GAAgB,SAACpK,EAA4B8F,EAAkBiB,GAIjEmE,GAAwBlL,EAAM8F,GAHb,SAAC6B,GACdA,EAAKvL,OAAS2K,MAKhBmE,GAA0B,SAC5BlL,EACAiL,EACAhhB,GAEA,IAAMmhB,EAAepL,EAAKJ,OACpB6H,EAAS,SAATA,EAAUC,GACZ,IAAMN,EAASM,EAAMtN,KAAKlK,MAAK,SAAA+W,GAAG,MAAiB,gBAAbA,EAAI1b,aAC5BmB,GAAV0a,GACHA,EAAO/M,KAAsCoB,SAAStQ,SAAQ,SAAAkc,GAC3D,IAAMM,EAAON,EAAIhN,KACjB,GAAoB,WAAhBsN,EAAK7L,OAAqB,CAC1B,IAAM8L,EAAWxD,GAAiBmD,aAAaF,EAAK,iBACpDI,EAAM,OAACG,QAAD,IAACA,OAAD,EAACA,EAAUvN,WAEbsN,EAAKvL,SAAW6O,GAChBhhB,EAAS0d,OAKzByD,EAAarL,SAAS5U,SAAQ,SAAAuc,GAC1BD,EAAQC,EAAMrN,KAA+BA,W,SJzVhD+K,O,iBAAAA,I,qBAAAA,I,iCAAAA,I,mCAAAA,I,gCAAAA,Q,KAQL,I,SAgdeiG,GAhdS,WAAO,IAAD,EACE5hB,qBAAWC,IAA/BC,EADkB,EAClBA,MAAOC,EADW,EACXA,SADW,EAEoCH,qBAAW0Y,IAAjE6B,EAFkB,EAElBA,WAAYhE,EAFM,EAENA,KAAMiC,EAFA,EAEAA,WAAYO,EAFZ,EAEYA,UAAWD,EAFvB,EAEuBA,SAC3CxG,EAAOiE,EAAK3F,KAHQ,EAMF1M,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KANrD,mBAMnB8G,EANmB,KAMboT,EANa,OAQc5X,mBAAmB,IARjC,mBAQnBmR,EARmB,KAQLwM,EARK,OAUY3d,mBAAsB,IAVlC,mBAUnB4d,EAVmB,KAUNC,EAVM,KAapBC,EAAwB,eAAd1P,EAAKxQ,KACfmgB,EAA4B,mBAAd3P,EAAKxQ,KAEnByZ,EAAc,WAChB,IAAMrP,EAAQoG,EAAK1B,KACnBkL,EAAQ,CAAE1Z,MAAO8J,EAAMxD,KAAM9G,OAAQ,KACrCigB,EAAgB3V,EAAMmJ,aAAarQ,SACnC+c,EAAe7V,EAAMiD,OAAOnO,KAAI,SAAAgU,GAC5B,MAAO,CACHkN,UAAW,CAAE9f,MAAO4S,EAAElT,KAAMF,OAAQ,IACpCQ,MAAO,CAAEA,MAAO4S,EAAE5S,MAAOR,OAAQ,UAK7C1D,qBAAU,WACW,MAAboU,EAAK1B,KACLmI,GAAU,GAEVwC,MAEL,CAAChF,IAEJ,IAAM4L,EAAe/K,mBAAQ,WAAO,IAAD,EAE/B,QADmB,UAACb,EAAKJ,cAAN,aAAC,EAAavF,MAA+B9O,MAE5D,IAAK,YAAa,OAAO6Z,GAAMyG,MAC/B,IAAK,aACL,IAAK,eAAgB,OAAOzG,GAAM0G,QAClC,IAAK,aAAc,OAAO1G,GAAM2G,cAChC,IAAK,aAAc,OAAO3G,GAAM4G,eAChC,IAAK,WAAY,OAAO5G,GAAM6G,aAElC,OAAQ,IACT,CAACjM,IA/CsB,EAoDWa,mBAAQ,WAAO,IAAD,EAC3CqL,EAAyB,GACvBC,EAAsB,GACtBC,GAAa,UAACpM,EAAKJ,cAAN,aAAC,EAAavF,MAA+B9O,KAEhE,GAD0C,CAAC,YAAa,eAAgB,aAAc,aAAc,WAAY,cAChGtD,SAASmkB,GAAa,CAAC,IAAD,EAW5BvQ,GAAY,UAVG,WAAO,IAAD,QACvB,OAAQuQ,GACJ,IAAK,YACL,IAAK,aACL,IAAK,eAAgB,iBAAOpM,EAAKJ,cAAZ,aAAO,EAAaA,OACzC,IAAK,aACL,IAAK,WACL,IAAK,aAAc,cAAOI,QAAP,IAAOA,GAAP,UAAOA,EAAMJ,cAAb,iBAAO,EAAcA,cAArB,iBAAO,EAAsBA,cAA7B,aAAO,EAA8BA,QAG7CyM,UAAD,aAAC,EAAgBhS,MAA+BA,KAE5DiS,EAASzQ,EAAUzB,KAAKlK,MAAK,SAAA+W,GAAG,MAAiB,iBAAbA,EAAI1b,aAChCmB,GAAV4f,IACAJ,EAAgBI,EAAOjS,KACnBqQ,KAAKjgB,KAAI,SAAA8hB,GAAG,OAAKA,EAAIlS,KAAoClI,SAGjE,IAAMgI,EAAW0B,EAAUzB,KAAKlK,MAAK,SAAA+W,GAAG,MAAiB,cAAbA,EAAI1b,QAC5CqgB,GAASxG,GAAM0G,cAAuBpf,GAAZyN,GACzBA,EAASE,KAAoCC,OAAOnP,SAAQ,SAAAoP,GACzD,IAAMiS,EAAajS,EAAMF,KAAiClI,KAC1Dga,EAAUlgB,KAAKugB,WAGpB,GAAmB,iBAAfJ,EAA+B,CAAC,IAAD,EAEhCE,EAASlI,GAAiBmD,cAAa,UAACvH,EAAKJ,cAAN,aAAC,EAAaA,QAAgCvF,KAAM,eACjG,GAAc,MAAViS,EAGG,MAAM,IAAIG,MAAM,wBAFnBP,EAAgBI,EAAOjS,KACnBqQ,KAAKjgB,KAAI,SAAA8hB,GAAG,OAAKA,EAAIlS,KAAmClI,QAGpE,GAAIyZ,GAASxG,GAAM2G,cAAe,CAc9B,GAbAI,EAAUlgB,KAAKiN,EAAUR,kBAAkBuC,OAC3CkR,EAAUlgB,KAAKiN,EAAUR,kBAAkBwC,OAC3CiR,EAAUlgB,KAAKiN,EAAUR,kBAAkB0C,OAC3C+Q,EAAUlgB,KAAKiN,EAAUR,kBAAkB2C,OAC3C8Q,EAAUlgB,KAAKiN,EAAUR,kBAAkB4C,SAC3C6Q,EAAUlgB,KAAKiN,EAAUR,kBAAkB6C,SAQvCqQ,GAASxG,GAAM4G,eAAgB,CAAC,IAAD,EACzBU,EAAatI,GAAiBoG,aAAjB,UAA8BxK,EAAKJ,cAAnC,aAA8B,EAAaA,OAAgC,cAC9F,GAAkB,MAAd8M,EACkBA,EAAWrS,KAA+BA,KACnDC,OAAOnP,SAAQ,SAAAoP,GACpB,IAAMiS,EAAajS,EAAMF,KAAiClI,KAC1Dga,EAAUlgB,KAAKugB,MAKQ,IAAD,EAAlC,GAAIZ,IAAUxG,GAAM6G,kBAMXvf,GALc0X,GAAiBmD,cAAa,UAACvH,EAAKJ,cAAN,aAAC,EAAaA,QAAgCvF,KAAM,cACpEA,KAEfM,OAAOzK,MACrB,SAAAyF,GAAK,OAAKA,EAAM0E,KAAiClI,OAAS+G,EAAUJ,gBAAgB6D,gBAEpFwP,EAAUlgB,KAAKiN,EAAUJ,gBAAgB6D,YACzCwP,EAAUlgB,KAAKiN,EAAUJ,gBAAgBiE,eAIrD,MAAO,CAACmP,EAAcC,KACvB,CAACnM,IAjIsB,mBAoDnBkM,EApDmB,KAoDLS,EApDK,KAoIpBC,EAAgB/L,mBAAQ,WAAO,IAAD,IAC1BhM,GAAQ,UAACmL,EAAKJ,cAAN,iBAAC,EAAaA,cAAd,aAAC,EAAqBvF,MAA+BA,KACnE,OAAO+J,GAAiBuB,iBAAiB9Q,KAC1C,CAACmL,IAEJrY,qBAAU,WACN,IAAI6X,EAAM,EAKV,GAJAV,EAAa3T,SAAQ,SAAC0D,GACL,QAATA,GAAgB2Q,OAGpB+L,EAAYjgB,OAASkU,EAAK,CAE1B,IADA,IAAMqN,EAASrN,EAAM+L,EAAYjgB,OACxBX,EAAI,EAAGA,EAAIkiB,EAAQliB,IAAK4gB,EAAYtf,KAAK,CAC9C0f,UAAW,CAAE9f,MAAO,SAAUR,OAAQ,IACtCQ,MAAO,CAAEA,MAAO,GAAIR,OAAQ,MAEhCmgB,EAAeD,EAAY9c,cACxB,GAAI8c,EAAYjgB,OAASkU,EAAK,CAEjC,IADA,IAAMsN,EAASvB,EAAYjgB,OAASkU,EAC3B7U,EAAI,EAAGA,EAAImiB,EAAQniB,IAAK4gB,EAAYtH,OAAOsH,EAAYjgB,OAASwhB,EAAQA,GACjFtB,EAAeD,EAAY9c,YAEhC,CAACqQ,IAGJ,IAAMiO,EAAqBlM,mBAAQ,WAC/B,IAAIrB,EAAM,EAKV,OAJAV,EAAa3T,SAAQ,SAAC0D,GACd,CAAC,IAAK,QAAS,YAAY5G,SAAS4G,GAAO2Q,IAC7B,MAAT3Q,GAAc2Q,OAEpBA,IACR,CAACV,IAGEkO,EAAcnM,mBAAQ,WACxB,OAAO0K,EAAY9gB,KAAI,SAACgU,EAAG9T,GA2DvB,OAAO,cAAC,IAASqb,WAAV,CAEHrZ,WAAU,cAAShC,GACnB2C,WAAY,GACZd,UAAiB,IAAN7B,EAAU,EAAI,EACzByC,IAAK,qCACD,cAAC,IAASkZ,SAAV,CACIlb,UAAWqT,EAAEkN,UACb9hB,MAAO,IACPsD,YAAaoV,EACbpW,aAAc,SAACf,GACXmgB,EAAY5gB,GAAGghB,UAAYvgB,EACvBmX,IACAgJ,EAAY5gB,GAAGkB,MAAMA,MAA4B,WAApBT,EAAUS,MAAqB,IAAM,IAEtE2f,EAAeD,EAAY9c,UAE/BD,KAAMkU,GAAUuK,gBAAgB5G,QAAO,SAAAxX,GACnC,OAAQA,GACJ,IAAK,SACL,IAAK,WACL,IAAK,WAAY,OAAO,EACxB,IAAK,QAAS,OAAO+c,GAASxG,GAAM0G,QACpC,IAAK,OAAQ,OAAOF,GAASxG,GAAM2G,kBAExCthB,KAAI,SAAAoE,GACH,MAAO,CAAEhD,MAAOgD,EAAMF,UAAWE,QAnF5B,WACjB,IAAMtD,EAAOkT,EAAEkN,UAAU9f,MACzB,GAAa,WAATN,EACA,OACI,cAAC,IAAS0a,UAAV,CACI3X,WAAY,EACZlD,UAAWqT,EAAE5S,MACbiC,UAAQ,EACRX,YAAaoV,EACb1Y,MAAO,IACPsC,aAAc,SAACf,GACXmgB,EAAY5gB,GAAGkB,MAAQT,EACvBogB,EAAeD,EAAY9c,UAE/B/C,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,eAM3B,IAAIsC,EAAiB,GAUrB,MATa,aAATjD,EACAiD,EAAO0d,EACS,UAAT3gB,EACPiD,EAAOme,EACS,SAATphB,EACPiD,EAAO0K,EAAUgU,WACD,aAAT3hB,IACPiD,EAAO0Q,GAAYhF,iBAAiBzP,KAAI,SAAAoE,GAAI,OAAIA,EAAKsD,SAGrD,cAAC,IAASmU,SAAV,CACIhY,WAAY,EACZlD,UAAWqT,EAAE5S,MACbhC,MAAO,IACPsD,YAAaoV,EACbpW,aAAc,SAACf,GACXmgB,EAAY5gB,GAAGkB,MAAQT,EACvBogB,EAAeD,EAAY9c,UAE/BD,KAAMA,EAAK/D,KAAI,SAAAoE,GACX,MAAO,CAAEhD,MAAOgD,EAAMF,UAAWE,MAErCN,WAAS,EACT7C,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,eAoC1BihB,OA5BAxiB,QAgCd,CAAC4gB,EAAahJ,IAmBX6K,EAAY,kBAAMtO,EAAaxT,OAAS,GAAK,CAAC,MAAO,KAAKrD,SAAS6W,EAAaA,EAAaxT,OAAS,KACtG+hB,EAAqC,IAAvBN,GAA4BxB,EAAYjgB,OAAS,GACjE,CAAC,MAAO,KAAKrD,SAAS6W,EAAaA,EAAaxT,OAAS,IACvDgiB,GAAgBD,QAA+E3gB,GAAhE6e,EAAYrb,MAAK,SAAAqd,GAAO,OAAIA,EAAQ1hB,MAAMR,OAAOC,OAAS,KAGzFkiB,EAAiB,SAACxjB,EAAeH,EAAewC,EAAmBR,GACrE,MAAO,CACH7B,QAAOH,QAAOwC,WACdpC,SAAU,WACN6U,EAAa7S,KAAKJ,GAClByf,EAAgBxM,EAAarQ,YAKzC,OAAQ,qCACJ,cAAC,GAAiBqU,UAAlB,CACIkC,YAAaA,EACbD,gBAAiB,GACjBG,YAAa,WACT,IAAMvP,EAAiC,CACnCxD,KAAMA,EAAKtG,MACXiT,aAAcA,EAAarQ,QAC3BmK,OAAQ2S,EAAY9gB,KAAI,SAAA8iB,GACpB,MAAO,CACHhiB,KAAMgiB,EAAQ5B,UAAU9f,MACxBA,MAAO0hB,EAAQ1hB,MAAMA,WAIjC8J,EAAMxD,KAAOA,EAAKtG,MAClBkQ,EAAK1B,KAAO1E,GAEhBsP,UAAkC,IAAvB8H,IAA6BO,GAAuC,IAAvBnb,EAAK9G,OAAOC,OACpE6Z,aAAc,WACV,IAAM9K,EAAO0B,EAAK1B,KAQlB,GAPAA,EAAKyE,aAAeA,EAAarQ,QACjC4L,EAAKzB,OAAS2S,EAAY9gB,KAAI,SAAA8iB,GAC1B,MAAO,CACHhiB,KAAMgiB,EAAQ5B,UAAU9f,MACxBA,MAAO0hB,EAAQ1hB,MAAMA,UAGzB4f,EAAS,CACT,IAAM3F,EAAWzL,EAAKlI,KACtBkI,EAAKlI,KAAOA,EAAKtG,MACbia,IAAa3T,EAAKtG,OAClB4hB,GAAczN,EAAKJ,OAAgCkG,EAAU3T,EAAKtG,WAKlF,cAAC,IAAS4Y,YAAV,CACIjV,MAAM,QACNE,SAAU,qCACN,cAAC,IAASsW,WAAV,CACIrZ,WAAW,OACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPsD,YAAaoV,IAAakJ,EAC1BrgB,UAAW+G,EACXhG,aAAcoZ,EACd7Z,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GAAD,OAAW6W,GAAU0D,eAAeva,IAC7CK,UAAW,SAEf,CACIF,QAAS,SAACH,GAQN,OAPa+gB,EAAcvG,QAAO,SAAAlU,GAE9B,OAAiB,MAAb4J,EAAK1B,MACG0B,EAAK1B,KAAiClI,OAASA,KAIlDlK,SAAS4D,IAE1BK,UAAW,iBAM/B,cAAC,IAASpB,aAAV,CACIC,MAAM,SACNhB,QAAS,CACLyjB,EAAe,IAAK,GAAIjL,GAAY6K,IAAa,KACjDI,EAAe,IAAK,GAAIjL,GAAY6K,IAAa,KACjDI,EAAe,IAAK,GAAIjL,GAAY6K,IAAa,KACjDI,EAAe,IAAK,GAAIjL,GAAY6K,IAAa,KACjDI,EAAe,IAAK,GAAIjL,GAAY6K,IAAa,KACjDI,EAAe,IAAK,GAAIjL,IAAa6K,IAAa,KAClDI,EAAe,IAAK,GAAIjL,GAAY6K,KAAeL,EAAqB,EAAG,KAC3E,CACI/iB,MAAO,MACPH,MAAO,GACPwC,SAAUkW,GAAYzD,EAAaxT,OAAS,EAC5CrB,SAAU,WACN6U,EAAamF,OAAOnF,EAAaxT,OAAS,EAAG,GAC7CggB,EAAgBxM,EAAarQ,cAK3Cid,EACE,cAAC,IAAS5gB,aAAV,CACAC,MAAM,SACFhB,QAAS,CACLyjB,EAAe,IAAK,GAAIjL,GAAY6K,IAAa,KACjDI,EAAe,KAAM,GAAIjL,GAAY6K,IAAa,MAClDI,EAAe,IAAK,GAAIjL,GAAY6K,IAAa,KACjDI,EAAe,KAAM,GAAIjL,GAAY6K,IAAa,MAClDI,EAAe,IAAK,GAAIjL,GAAY6K,IAAa,KACjDI,EAAe,KAAM,GAAIjL,GAAY6K,IAAa,MAClDI,EAAe,KAAM,GAAIjL,GAAY6K,IAAa,SAV9C,6BAchB,cAAC,IAAStiB,aAAV,CACIC,MAAM,SACNhB,QAAS,CACLyjB,EAAe,MAAO,GAAIjL,IAAa6K,IAAa,OACpDI,EAAe,OAAQ,GAAIjL,IAAa6K,IAAa,SACrDI,EAAe,UAAW,GAAIjL,IAAa6K,IAAa,YACxD,CACIpjB,MAAO,QACPqC,SAAUkW,GAAYzD,EAAaxT,OAAS,EAC5CzB,MAAO,GACPI,SAAU,WACNqhB,EAAgB,SAKhC,cAACoC,GAAD,CACIC,WAAYN,EADhB,SAlKU,WAClB,IAAI7N,EAAM,EACJoB,EAAyB,GAY/B,OAXA9B,EAAa3T,SAAQ,SAAC0D,GACd+R,EAAQtV,OAAS,GACjBsV,EAAQ3U,KAAK,uCAAW2U,EAAQtV,SAEvB,QAATuD,GACA+R,EAAQ3U,KAAK,cAAC2hB,GAAD,0BAAsCpO,EAAtC,MAAWoB,EAAQtV,SAChCkU,KAEAoB,EAAQ3U,KAAK,cAAC4hB,GAAD,UAA4Bhf,GAAjB+R,EAAQtV,YAGjCsV,EAsJGkN,KACDd,OAGT,cAAC,IAASvI,YAAV,CACIjV,MAAM,YACNnD,UAAWkW,GAAYkJ,EACvB/b,SAAU,qCACL0U,GAAiB2G,mBAAmB/K,GAAOuC,EAAU,QAAS5Y,EAAOC,EAAUqY,GAChF,cAAC,IAASnX,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,SACPqC,UAAWkW,EACXtY,SAAU,WACN,IAAM0L,EAAQoG,EAAK1B,KACbmM,EAASuH,GAAe/N,EAAMrK,EAAMxD,MACpB,IAAlBqU,EAAOlb,OACP0Y,KAEAra,EAAMO,OAAOC,OAAS,cAAC,KAAc2Y,UAAf,CAClBvY,QAAO,WAAMoL,EAAMxD,KAAZ,4CAAoDqU,KAE/D5c,EAAS,eAAKD,UAOhC8hB,EAAkBrH,GAAiBuC,eAAe3G,EAAMiC,GAA9C,sCAcf8L,GAAiB,SAAC/N,EAA4B4G,GAEvD,IAAMJ,EAAmB,GAczB,OAFApC,GAAiByC,6BAA6B7G,GAV7B,SAACxR,GACdA,EAAKrD,SAAQ,SAAA4Q,GACT,IAAMpG,EAAQoG,EAAK1B,KACnB1E,EAAMiD,OAAOzN,SAAQ,SAAA2b,GACI,UAAjBA,EAAQvb,MAAoBub,EAAQjb,QAAU+a,GAC9CJ,EAAOva,KAAK0J,EAAMxD,eAO3BqU,GAOEiH,GAAgB,SAACO,EAA+BlI,EAAkBiB,GAE3E,IAAMC,EAAc,SAACxY,GACjBA,EAAKrD,SAAQ,SAAA4Q,GACOA,EAAK1B,KAAiCzB,OAC/CzN,SAAQ,SAAA2b,GACU,UAAjBA,EAAQvb,MAAoBub,EAAQjb,QAAUia,IAC9CgB,EAAQjb,MAAQkb,UAM1Bxb,EAAQyiB,EAAQ3T,KAA+B9O,KACrD,GAAa,cAATA,EAAsB,CAAC,IAAD,EAChBmc,GAAQ,UAACsG,EAAQpO,cAAT,aAAC,EAAgBvF,MAA+BA,KAExD6M,EAAYQ,EAAMtN,KAAKlK,MAAK,SAAA+W,GAAG,MAAiB,eAAbA,EAAI1b,aAC5BmB,GAAbwa,GACAF,EAAaE,EAAU7M,KAAoCM,QAE/D,IAAMwM,EAAcO,EAAMtN,KAAKlK,MAAK,SAAA+W,GAAG,MAAiB,iBAAbA,EAAI1b,aAC5BmB,GAAfya,GACAH,EAAaG,EAAY9M,KAAoCM,QAEjE,IAAMyM,EAASM,EAAMtN,KAAKlK,MAAK,SAAA+W,GAAG,MAAiB,gBAAbA,EAAI1b,aAC5BmB,GAAV0a,GACCA,EAAO/M,KAAsCoB,SAAStQ,SAAQ,SAAAkc,GAAQ,IAAD,IAC5DC,EAASlD,GAAiBmD,aAAaF,EAAK,cAEpC,MAAVC,GACAN,EAAaM,EAAOjN,KAAoCC,QAG5D0M,GAAY,UAAC5C,GAAiBmD,aAAaF,EAAK,qBAApC,aAAC,EAAkDhN,MAAoCM,QAEnGqM,GAAY,UAAC5C,GAAiBmD,aAAaF,EAAK,mBAApC,aAAC,EAAgDhN,MAAoCM,gBAGtG,GAAa,eAATpP,EAAuB,CAAC,IAAD,MACxB0iB,EAAW,UAAGD,EAAQpO,cAAX,aAAG,EAAgBvF,KAGpC2M,GAAY,UAAC5C,GAAiBmD,aAAa0G,EAAa,qBAA5C,aAAC,EAA0D5T,MAAoCM,QAE3GqM,GAAY,UAAC5C,GAAiBmD,aAAa0G,EAAa,mBAA5C,aAAC,EAAwD5T,MAAoCM,UAI3G+S,GAAWrkB,IAAOC,IAAV,oaAKRF,KAAOgH,kBAOP,SAAA5G,GAAK,OAAKA,EAAMmkB,UAAiBxkB,YAAxB,wEAAmB,MAS5BykB,GAAOvkB,IAAO6kB,KAAV,mDAGJL,GAAOxkB,IAAO6kB,KAAV,qDKjbKC,GA3JW,WAAO,IAAD,EACoC1kB,qBAAW0Y,IAAnEnC,EADoB,EACpBA,KAAMsC,EADc,EACdA,aAAcL,EADA,EACAA,WAAuBM,GADvB,EACYC,UADZ,EACuBD,UAC7C0E,EAAOjH,EAAK3F,KAA+BA,KAFrB,EAIuBwG,mBAAQ,WACvD,IAAMrS,EAAOwR,EAAKD,SAAStV,KAAI,SAAA6e,GAC3B,OAASA,EAAGjP,KAA+BA,KAAiClI,QAEhF,MAAO,CACH3D,EAAKvG,SAASiR,EAAUR,kBAAkB0C,OAC1C5M,EAAKvG,SAASiR,EAAUF,kBAAkBoE,YAC1C5O,EAAKvG,SAASiR,EAAUF,kBAAkBqE,gBAE/C,CAAC2C,IAbwB,mBAIrBoO,EAJqB,KAIXC,EAJW,KAIIC,EAJJ,KAiCtBC,EAAuB,YAlBJ,SAACC,EAAezE,EACrC0E,EACAC,GAEA,IAAMC,GAAQH,EAAOC,EAAoBC,GAAoBpjB,OAC7D8Y,GAAiB6F,YAAYjK,EAAM+J,EAAS4E,IAE3CH,EAAOC,EAAoBC,GAAoBvjB,SAAQ,SAACkP,EAAM1P,GAC3D,IAAMoR,EAA8B,CAChCxQ,KAAM,aACN8O,QAEJ+J,GAAiB8F,YAAYnO,EAAMiE,EAAM+J,EAAUpf,MAEvD2X,EAAa,eAAKtC,IAClBiC,IAIA2M,EAAkBR,EAAU,EACxB,CACI,CAAEjc,KAAM+G,EAAUR,kBAAkB0C,MAAO0D,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,OACpG,CAAEsG,KAAM+G,EAAUR,kBAAkB2C,MAAOyD,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,QAExG,CACI,CAAEsG,KAAM+G,EAAUR,kBAAkB4C,QAASwD,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,OACtG,CAAEsG,KAAM+G,EAAUR,kBAAkB6C,QAASuD,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,UAQ5GgjB,EAAiB,SAAC/E,EAAkBC,EAAiB+E,GACvD,IAAMH,EAAOG,EAAcxjB,OACvBwe,GACA7C,EAAItM,OAAOsJ,OAAO8F,EAAS4E,GAC3B3O,EAAKD,SAASkE,OAAO8F,EAAS4E,GAC9BrM,EAAa,eAAKtC,IAClBiC,MAEA6M,EAAc3jB,SAAQ,SAACkP,EAAM1P,GACzB,IAAMoR,EAA8B,CAChCxQ,KAAM,aACN8O,QAEJ4M,EAAItM,OAAOsJ,OAAO8F,EAAUpf,EAAG,EAAGoR,GAClC,IAAM2I,EAAU/E,GAASmJ,WAAW/M,EAAMiE,GAC1CA,EAAKD,SAASkE,OAAO8F,EAAUpf,EAAG,EAAG+Z,MAEzCpC,EAAa,eAAKtC,IAClBiC,MAIR,OAAQ,qCACJ,cAAC,IAASwC,YAAV,CACIjV,MAAM,SACNnD,UAAWkW,EACX7S,SAAU,qCACN,cAAC,IAAS2a,OAAV,CACI9d,UAAU,SACVa,IACI,cAAC,IAASkd,OAAV,CACItgB,MAAO,gBACPH,MAAO,IACPkG,YAAU,EACVC,MAAOoe,EACPnkB,SAAUskB,MAItB,cAAC,IAASlE,OAAV,CACI9d,UAAU,SACVa,IACI,cAAC,IAASkd,OAAV,CACItgB,MAAO,mBACPH,MAAO,IACPkG,YAAU,EACVC,OAAQoe,EACRnkB,SAAUskB,WAM9B,cAAC,IAAS9J,YAAV,CACIjV,MAAM,WACNnD,UAAWkW,EACX7S,SAAU,qCACN,cAAC,IAAS2a,OAAV,CACI9d,UAAU,SACVa,IACI,cAAC,IAASkd,OAAV,CACItgB,MAAO,QACPH,MAAO,IACPmG,MAAOqe,EACPpkB,SAAU,WACN4kB,EAAeR,EAAe,EAAG,CAC7B,CACIlc,KAAM+G,EAAUF,kBAAkBoE,WAClC0B,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,SAE7D,CACIsG,KAAM+G,EAAUF,kBAAkBmE,YAClC2B,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,cAOjF,cAAC,IAASwe,OAAV,CACI9d,UAAU,SACVa,IACI,cAAC,IAASkd,OAAV,CACItgB,MAAO,UACPH,MAAO,IACPmG,MAAOse,EACPrkB,SAAU,WACN4kB,EAAeP,EAAkBD,EAAoB,EAAJ,EAAO,CACpD,CACIlc,KAAM+G,EAAUF,kBAAkBqE,YAClCyB,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,SAE7D,CACIsG,KAAM+G,EAAUF,kBAAkBsE,cAClCwB,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,wBC8FlFkjB,GA3OS,WAAO,IAAD,EACsCtlB,qBAAW0Y,IAAnEnC,EADkB,EAClBA,KAAMsC,EADY,EACZA,aAAcL,EADF,EACEA,WAAuBM,GADzB,EACcC,UADd,EACyBD,UAC7C0E,EAAOjH,EAAK3F,KAA+BA,KAFvB,EAI6CwG,mBAAQ,WAC3E,IAAMrS,EAAOwR,EAAKD,SAAStV,KAAI,SAAA6e,GAC3B,OAASA,EAAGjP,KAA+BA,KAAiClI,QAE5E6c,EAAqB,QAIzB,OAHGxgB,EAAKlD,OAAS,IACb0jB,EAAaxgB,EAAKvG,SAASiR,EAAUT,gBAAgBwW,WAAa,QAAU,YAEzE,CACHD,EACAxgB,EAAKvG,SAASiR,EAAUH,gBAAgBkF,iBACxCzP,EAAKvG,SAASiR,EAAUH,gBAAgBoF,cACxC3P,EAAKvG,SAASiR,EAAUH,gBAAgBqF,uBAE7C,CAAC4B,IAlBsB,mBAInBgP,EAJmB,KAIPE,EAJO,KAIYC,EAJZ,KAI4BC,EAJ5B,KAuBpBP,EAAiB,SAAC/E,EAAkBC,EAAiB+E,GACvD,IAAMH,EAAOG,EAAcxjB,OACvBwe,GACA1F,GAAiB6F,YAAYjK,EAAM+J,EAAS4E,GAC5CrM,EAAa,eAAKtC,IAClBiC,MAEA6M,EAAc3jB,SAAQ,SAACkP,EAAM1P,GACzB,IAAMoR,EAA8B,CAChCxQ,KAAM,aACN8O,QAEJ+J,GAAiB8F,YAAYnO,EAAMiE,EAAM+J,EAAUpf,MAEvD2X,EAAa,eAAKtC,IAClBiC,MA6BR,OAAQ,qCACJ,cAAC,IAASwC,YAAV,CACIjV,MAAM,SACNnD,UAAWkW,EACX7S,SAAU,qCACN,cAAC,IAAS2a,OAAV,CACI9d,UAAU,SACVF,WAAY8iB,GAAkBD,GAAqBE,GACnDhiB,IACI,cAAC,IAASkd,OAAV,CACItgB,MAAO,OACPH,MAAO,IACPkG,YAAU,EACVC,MAAsB,UAAfgf,EACP/kB,SAAU,WACNgd,EAAItM,OAAOrP,OAAS,EACpB0U,EAAKD,SAASzU,OAAS,EACvBgX,EAAa,eAAKtC,IAClBiC,SA2ChB,cAAC,IAASoI,OAAV,CACI9d,UAAU,SACVa,IACI,cAAC,IAASkd,OAAV,CACItgB,MAAO,kBACPH,MAAO,IACPkG,YAAU,EACVC,MAAsB,aAAfgf,EACP/kB,SAAU,WA9Fd,IAAC6kB,IA+FmB,CACR,CACI3c,KAAM+G,EAAUT,gBAAgB8E,OAChCuB,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,QAE7D,CACIsG,KAAM+G,EAAUT,gBAAgBgF,QAChCqB,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,SAE7D,CACIsG,KAAM+G,EAAUT,gBAAgBkF,QAChCmB,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,SAE7D,CACIsG,KAAM+G,EAAUT,gBAAgBoF,QAChCiB,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,SAE7D,CACIsG,KAAM+G,EAAUT,gBAAgBsF,QAChCe,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,UAhHzFijB,EAAc3jB,SAAQ,SAACkP,EAAM1P,GACzB,IAAMoR,EAA8B,CAChCxQ,KAAM,aACN8O,QAEJ+J,GAAiB8F,YAAYnO,EAAMiE,EAAMrV,MAE7C2X,EAAa,eAAKtC,IAClBiC,cAiHA,cAAC,IAASwC,YAAV,CACIjV,MAAM,SACNnD,UAAWkW,GAA2B,UAAfyM,EACvBtf,SAAU,qCACN,cAAC,IAAS2a,OAAV,CACI9d,UAAU,SACVF,UAAW+iB,EACXhiB,IACI,cAAC,IAASkd,OAAV,CACItgB,MAAO,YACPH,MAAO,IACPmG,MAAOkf,EACPjlB,SAAU,WACN4kB,EAAeK,EAAmB,EAAG,CACjC,CACI/c,KAAM+G,EAAUH,gBAAgBkF,gBAChCa,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,cAOjF,cAAC,IAASwe,OAAV,CACI9d,UAAU,SACVF,UAAW+iB,EACXhiB,IACI,cAAC,IAASkd,OAAV,CACItgB,MAAO,SACPH,MAAO,IACPmG,MAAOmf,EACPllB,SAAU,WACN4kB,EAAeM,EAAiBD,EAAwB,EAAJ,EAAO,CACvD,CACI/c,KAAM+G,EAAUH,gBAAgBoF,aAChCW,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,cAOjF,cAAC,IAASwe,OAAV,CACI9d,UAAU,SACVF,WAAY8iB,GAAkBD,GAC9B9hB,IACI,cAAC,IAASkd,OAAV,CACItgB,MAAO,QACPH,MAAO,IACPmG,MAAOof,EACPnlB,SAAU,WACN4kB,EAAeO,EAAe,EAAG,CAC7B,CACIjd,KAAM+G,EAAUH,gBAAgBqF,mBAChCU,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,OAE7D,CACIsG,KAAM+G,EAAUH,gBAAgBsF,iBAChCS,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,uBCrMlFwjB,GA9Bc,WAAO,IAAD,EACY5lB,qBAAW0Y,IAA9CnC,EADuB,EACvBA,KAAMsC,EADiB,EACjBA,aAAcL,EADG,EACHA,WACtBgF,EAAOjH,EAAK3F,KAA+BA,KAEjD,OAAQ,mCACJ,cAAC,IAASoK,YAAV,CACIjV,MAAM,YACNE,SAAU,cAAC,IAAS5E,aAAV,CACNC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,cACPC,SAAU,WACN,IAAM8R,EAA8B,CAChCxQ,KAAM,YACN8O,KAAM,MAEV4M,EAAIxL,SAASxP,KAAK8P,GAClB,IAAM2I,EAAU/E,GAASmJ,WAAW/M,EAAMiE,GAC1CA,EAAKD,SAAS9T,KAAKyY,GACnBpC,EAAaoC,GACbzC,cCwbbqN,GAxcgB,WAAO,IAAD,IACL7lB,qBAAWC,IAA/BC,EADyB,EACzBA,MAAOC,EADkB,EAClBA,SADkB,EAEqDH,qBAAW0Y,IAAzFtI,EAFyB,EAEzBA,SAAUmG,EAFe,EAEfA,KAAMiC,EAFS,EAETA,WAAYO,EAFH,EAEGA,UAAWD,EAFd,EAEcA,SAAUyB,EAFxB,EAEwBA,WAAY1B,EAFpC,EAEoCA,aAC/DvG,EAAOiE,EAAK3F,KAHe,EAMD1M,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KANtD,mBAM1BkkB,EAN0B,KAMhBC,EANgB,OAOL7hB,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAPlD,mBAO1ByQ,EAP0B,KAOlB2T,EAPkB,OAQL9hB,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KARlD,mBAQ1B+Q,EAR0B,KAQlBsT,EARkB,KAU3B1K,EAAc,WAChB,IAAMrP,EAAQoG,EAAK1B,KACnBoV,EAAU,2BAAK3T,GAAN,IAAcjQ,MAAO8J,EAAMmG,UACpC4T,EAAU,2BAAKtT,GAAN,IAAcvQ,MAAO8J,EAAMyG,UACpCoT,EAAY,2BAAKD,GAAN,IAAgB1jB,MAAO8J,EAAMwV,OAG5CxjB,qBAAU,WACN,GAAiB,MAAboU,EAAK1B,KAAc,CACnBmI,GAAU,GAEV,IAAMmN,EAAcvL,GAAiBwL,yBAAyB,MAAO5P,EAAKJ,QAC1E4P,EAAY,2BAAKD,GAAN,IAAgB1jB,MAAO8jB,UAElC3K,MAEL,CAAChF,IAEJ,IAAM6P,EAA4B,WAAjB/T,EAAOjQ,MAElB4d,EAAe5I,mBAAQ,WACzB,OAA4D,MAArDuD,GAAiBoG,aAAaxK,EAAM,gBAC5C,CAACA,IAGE8P,EAAYjP,mBAAQ,WAGtB,OAFiBhH,EAASQ,KACE2B,SAAS3B,KACnB4B,KAAKxR,KAAI,SAAAsR,GACvB,OAAQA,EAAK1B,KAAiClI,UAEnD,CAAC6N,IAGE+P,EAASlP,mBAAQ,WACnB,OAAOuD,GAAiBwF,iBAAiB5J,KAC1C,CAACA,IAEEgQ,EAAoB,SAACra,GACvBA,EAAMyE,KAAO,GACb4F,EAAKD,SAAW,GAChBpK,EAAMyE,KAAKnO,KAAK,CACZV,KAAM,aACN8O,KAAM,CACFM,OAAQ,MAGhBhF,EAAMyE,KAAKnO,KAAK,CACZV,KAAM,WACN8O,KAAM,CACFM,OAAQ,MAGZkV,GACAla,EAAMyE,KAAKnO,KAAK,CACZV,KAAM,gBACN8O,KAAM,CACFD,KAAMgK,GAAiB+F,yBAInCpO,EAAK1B,KAAO1E,EAEZA,EAAMyE,KAAKjP,SAAQ,SAAA8b,GACf,IAAMvC,EAAU/E,GAASmJ,WAAW7B,EAAKjH,GAEzC,OADc0E,EAAQrK,KACT9O,MACT,IAAK,gBACD6Y,GAAiB6L,wBAAwBvL,GAC3C,MACF,IAAK,WAAa,IAAD,EAEY,YADP,UAACA,EAAQ9E,cAAT,aAAC,EAAgBvF,MAA+BA,KACpDyB,SACVkM,QAAQC,IAAI,kBACZiI,EAAexL,EAAS7K,IAIpCmG,EAAKD,SAAS9T,KAAKyY,OAuBrBwL,EAAiB,SAACzH,EAAgC5O,GACpD,IAAMsW,EApBe,SAAC1H,EAAgC5O,GAA+C,IAAD,EAC9F8B,GAAY,UAAC8M,EAAS7I,cAAV,aAAC,EAAiBvF,MAA+BA,KAG7D+V,EAFWvW,EAASQ,KACE2B,SAAS3B,KACP4B,KAAK/L,MAAK,SAAA6L,GACpC,OAAQA,EAAK1B,KAAiClI,OAASwJ,EAAUS,UAErE,QAAkB1P,GAAd0jB,EAAyB,CACzB,IACMC,EADYD,EACS/V,KAAiCD,KAAK,GACjE,GAAqB,iBAAjBiW,EAAQ9kB,KACR,OAAQ8kB,EAAQhW,KAAuCqQ,KAAKjgB,KAAI,SAAA8hB,GAC5D,OAAQA,EAAIlS,KAAoClI,QAI5D,MAAO,GAIeme,CAAiB7H,EAAU5O,GAG3Cc,EADO8N,EAASpO,KACDA,KAAoCM,OAEnD4V,EAAe5V,EAAOlQ,KAAI,SAAAkL,GAC5B,OAAQA,EAAM0E,KAAiClI,QAEnDge,EAAchlB,SAAQ,SAAAwK,GAClB,IAAK4a,EAAatoB,SAAS0N,GAAQ,CAC/B,IAAMiT,EAAYxE,GAAiByE,gBAAgB,YAC/C,CAAE1W,KAAMwD,EAAOmJ,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,QAE5E8O,EAAO1O,KAAK2c,GACZH,EAAS1I,SAAS9T,KAAK0T,GAASmJ,WAAWF,EAAWH,SA6B5DvI,EAAyB,MAAbnE,EAAK1B,OAAL,UAA6B0B,EAAK1B,KAAwCuB,eAA1E,UAElB,OAAQ,qCACJ,cAAC,GAAiBkH,UAAlB,CACIkC,YAAaA,EACbD,gBAAiB,CAACwK,EAAUzT,EAAQM,GACpC8I,YAAa,WACT,IAAMvP,EAAwC,CAC1CmG,OAAQA,EAAOjQ,MACfuQ,OAAQA,EAAOvQ,MACfsf,GAAIoE,EAAS1jB,MACbuO,KAAM,IAEV4V,EAAkBra,GAClBsM,KAEJkD,aAAc,WACV,IAAMxP,EAAQoG,EAAK1B,KACbmW,EAAW7a,EAAMmG,SAAWA,EAAOjQ,OAAS8J,EAAMyG,SAAWA,EAAOvQ,MAC1E8J,EAAMmG,OAASA,EAAOjQ,MACtB8J,EAAMyG,OAASA,EAAOvQ,MACtB8J,EAAMwV,GAAKoE,EAAS1jB,MACpBkQ,EAAK1B,KAAO1E,EAER6a,GACAR,EAAkBra,GAEtBsM,OAGR,cAAC,IAASwC,YAAV,CACIjV,MAAM,QACNE,SAAU,qCACN,cAAC,IAASsW,WAAV,CACIrZ,WAAW,SACXS,IACI,cAAC,IAASkZ,SAAV,CACIhY,WAAY,EACZlD,UAAW0Q,EACXjS,MAAO,IACPsD,YAAaoV,EACbpW,aAAc,SAACf,GAEa,WAApBA,EAAUS,OACV6jB,EAAU,2BAAKtT,GAAN,IAAcvQ,MAAO,MAElC4jB,EAAUrkB,IAEdoD,KAAMkU,GAAU+N,aAAahmB,KAAI,SAAAoE,GAC7B,MAAO,CAAEhD,MAAOgD,EAAMF,UAAWE,MAErCN,WAAS,EACT7C,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,iBAM/B,cAAC,IAAS8Z,WAAV,CACIrZ,WAAW,SACXY,UAA4B,WAAjBuO,EAAOjQ,MAClBuB,IACI,cAAC,IAASkZ,SAAV,CACIhY,WAAY,EACZlD,UAAWgR,EACXvS,MAAO,IACPsD,YAAaoV,EACbpW,aAAcujB,EACdlhB,KAAMshB,EAAUrlB,KAAI,SAAAoE,GAChB,MAAO,CAAEhD,MAAOgD,EAAMF,UAAWE,MAErCN,WAAS,EACT5C,WAAY,CAACmQ,GACbpQ,UAAW,CACP,CACIM,QAAS,SAACH,GACN,MAAwB,WAAjBiQ,EAAOjQ,OAAsB6T,GAAawG,cAAcra,IAEnEK,UAAW,iBAM/B,cAAC,IAAS8Z,WAAV,CACIrZ,WAAW,WACXS,IACI,cAAC,IAAS6Y,UAAV,CACI3X,WAAY,EACZlD,UAAWmkB,EACX1lB,MAAO,IACPsD,YAAaoV,EACbpW,aAAcqjB,EACd9jB,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6W,GAAU0D,eAAeva,IAC7CK,UAAW,SAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GAAD,OAAYkkB,EAAO9nB,SAAS4D,IACrCK,UAAW,sBAQvC,cAAC,IAASuY,YAAV,CACIjV,MAAM,UACNnD,UAAWkW,EACX7S,SAAU,mCACN,cAAC,IAAS2a,OAAV,CACI9d,UAAU,SACVF,UAAU,EACVe,IAAK,cAAC,IAASkd,OAAV,CACDtgB,MAAO,QACPH,MAAO,IACPmG,MAAOyZ,EACPpd,UApIH,WACb,IAAMse,EAAYvG,GAAiBoG,aAAaxK,EAAM,cACtD,OAAgB,MAAb2K,GACIA,EAAU5K,SAASzU,OAAS,EAiIRsf,GACX3gB,SAAU,WApJR,IAAmB8f,EAAiBC,EAAjBD,EAuJb,EAvJ8BC,EAwJ9B,CACIze,KAAM,aACN8O,KAAM,CACFC,OAAQ,KALhBmP,GApJpBrF,GAAiB6F,YAAYjK,EAAM+J,EAAS,GAC5CzH,EAAa,eAAKtC,IAClBiC,MAEAmC,GAAiB8F,YAAYF,EAAahK,EAAM+J,GAChDzH,EAAa,eAAKtC,IAClBiC,cA4JJ,cAAC,IAASwC,YAAV,CACIjV,MAAM,YACNE,SAAU,qCACN,cAAC,IAAS2a,OAAV,CACI9d,UAAU,SACVa,IAAK,cAAC,IAASkd,OAAV,CACDtgB,MAAO,UACPH,MAAO,IACPmG,MAAOkQ,EACP7T,UAAWkW,EACXtY,SAAU,WACN,IAAMoQ,EAAQ0B,EAAK1B,KAEfA,EAAKuB,SADLsE,QACexT,EAInBuV,SAIXmC,GAAiB2G,mBAAmB/K,GAAOuC,EAAU,UAAW5Y,EAAOC,EAAUqY,GAClF,cAAC,IAASnX,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,aACPqC,UAAWkW,IAAasN,EACxB5lB,SAAU,WACNN,EAAMO,OAAOC,OAAS,cAAC,KAAc2Y,UAAf,CAClBvY,QAAQ,kDACRR,QAAS,CACL,CACIC,MAAO,SACPC,SAAU,WACNN,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,MAGtB,CACIK,MAAO,aACPC,SAAU,WACN,IAGMymB,EAHY7W,EAASQ,KAA4B2B,SAAS3B,KACrC4B,KAAKxR,KAAI,SAAAyR,GAAG,OAAIA,EAAI7B,QAEjBnK,MAAK,SAAAygB,GAAO,OAAIA,EAAQxe,OAASiK,EAAOvQ,SACtE,QAAmBa,GAAfgkB,EAA0B,CAC1B,IAIME,EAAiC,CACnCrlB,KAAM,gBACN8O,KAL2C,CAC3CD,KAFeyW,KAAKC,MAAMD,KAAKE,UAAUL,IAExBtW,OAMfsK,EAAUN,GAAiBO,SAASiM,EAAS5Q,GAEnD0E,EAAQ3E,SAAW2C,GAAUsO,uBAAuBtM,GAEpD,IAAM/O,EAAQoG,EAAK1B,KACnB1E,EAAMmG,OAAS,SACfnG,EAAMyG,OAAS,GACf4I,IAEJrb,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,IACdsY,SAKhBrY,EAAS,eAAKD,SAK9B,cAAC,IAASmB,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,gBACPqC,UAAWkW,GAAYsN,EACvB5lB,SAAU,WACNN,EAAMO,OAAOC,OAAS,cAAC,KAAc2Y,UAAf,CAClBvY,QAAQ,8CACRR,QAAS,CACL,CACIC,MAAO,SACPC,SAAU,WACNN,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,MAGtB,CACIK,MAAO,aACPC,SAAU,WAEN,IADA,IAAIgnB,EAAWjR,EACW,MAAnBiR,EAASrR,QAAgBqR,EAAWA,EAASrR,OACpD,IAAMiL,EAAc7K,EAAKD,SAAS7P,MAAK,SAAAoZ,GAAE,MAAgD,kBAA3CA,EAAGjP,KAA+B9O,QAC1E6f,EAAe6F,EAASlR,SAAS7P,MAAK,SAAAoZ,GAAE,MAAgD,cAA3CA,EAAGjP,KAA+B9O,QACrF,QAAoBmB,GAAhB0e,QAA4C1e,GAAfme,EAAjC,CACA,IAAM8F,EAAW9F,EAAYxQ,KAA+BA,KACtD6W,EAAQL,KAAKC,MAAMD,KAAKE,UAAWJ,IAEnChB,EAAcvL,GAAiBwL,yBAAyB,iBAAkBxE,GAC1EvP,EAAkC,2BACjCqV,GADiC,IAEpC/e,KAAMwd,IAEJiB,EAAiC,CACnCrlB,KAAM,aACN8O,KAAMwB,GAIJ6I,EAAUN,GAAiBO,SAASiM,EAASxF,GAEnD1G,EAAQ3E,SAAW2C,GAAUsO,uBAAuBtM,GAGpDN,GAAiB6F,YAAYjK,EAAM,EAAG,GAEtC,IAAMrK,EAAQoG,EAAK1B,KACnB1E,EAAMmG,OAAS,SACfnG,EAAMyG,OAASP,EAAU1J,KACzB6S,IAEArb,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,IACdsY,UAKhBrY,EAAS,eAAKD,SAK9B,cAAC,IAASmB,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,SACPqC,UAAWkW,EACXtY,SAAU,WACN+Z,SAMfI,GAAiBuC,eAAe3G,EAAMiC,a,YCjcnD,IAEMkP,EAAkB,IAEU,wBAAG,SAAC3nB,GAG/B,IAAD,EAE0BC,qBAAWC,IAA/BC,EAFN,EAEMA,MAAOC,EAFb,EAEaA,SAFb,EAIwB+D,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAJ/E,mBAIK+lB,EAJL,KAIYC,EAJZ,OAKwB1jB,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAL/E,mBAKKimB,EALL,KAKYC,EALZ,KAUI3E,EAAgB/L,mBAAQ,WAAO,IAAD,EAC1BhM,EAASuP,GAAiBmD,aAAjB,UAA8B/d,EAAMwW,KAAKJ,cAAzC,aAA8B,EAAmBvF,KAA+B,iBAA2CA,KAC1I,OAAO+J,GAAiBuB,iBAAiB9Q,KAC1C,CAACrL,EAAMwW,OAEJjW,EAAkC,CACpC,CACIC,MAAO,SACPC,SAAU,WACNN,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,MAGtB,CACIK,MAAO,UACPqC,SAAUrB,IAASwmB,WAAW,CAACJ,EAAOE,IACtCrnB,SAAU,WAENma,GAAiBO,SAASP,GAAiByE,gBAAgB,YACvD,CAAE1W,KAAMif,EAAMvlB,MAAOiT,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,OAAQM,MAAOqN,EAAUL,cAAcoC,UACrGzR,EAAMwW,MACToE,GAAiBO,SAASP,GAAiByE,gBAAgB,YACvD,CAAE1W,KAAMmf,EAAMzlB,MAAOiT,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,OAAQM,MAAOqN,EAAUL,cAAcqC,UACrG1R,EAAMwW,MAGT,IAAMsF,EAAYlB,GAAiBoG,aAAahhB,EAAMwW,KAAKJ,OAAgC,sBAC2BlT,GAAnG4Y,EAAUvF,SAAS7P,MAAK,SAAAsQ,GAAK,MAAmD,iBAA9CA,EAAMnG,KAA+B9O,SAEtF6Y,GAAiB8F,YAAY,CACzB3e,KAAM,eACN8O,KAAM,CACFqQ,KAAM,KAEXpF,EAAW,GAElB,IAAMmM,EAAUnM,EAAUvF,SAAS7P,MAAK,SAAAsQ,GAAK,MAAmD,iBAA9CA,EAAMnG,KAA+B9O,QAEvF6Y,GAAiBO,SAAS,CACtBpZ,KAAM,gBACN8O,KAAM,CACFlI,KAAMif,EAAMvlB,MACZ+Z,UAAW,WAEhB6L,GACHrN,GAAiBO,SAAS,CACtBpZ,KAAM,gBACN8O,KAAM,CACFlI,KAAMmf,EAAMzlB,MACZ+Z,UAAW,WAEhB6L,GAGH,IAAMC,EAAepM,EAAUvF,SAAS7P,MAAK,SAAAsQ,GAAK,MAAmD,iBAA9CA,EAAMnG,KAA+B9O,QACtFomB,EAAgB,SAACC,EAAiBhL,GACpC,IACMiL,EADSH,EAAa3R,SAAStV,KAAI,SAAA+V,GAAK,OAAKA,EAAMnG,KAA+BA,QAC7DnK,MAAK,SAAAyF,GAAK,OAAIA,EAAMxD,OAASyf,KACxDC,EAAY/S,aAAe,CAAC,OAC5B+S,EAAYjZ,OAAS,CAAC,CAAErN,KAAM,WAAYM,MAAO+a,KAErD+K,EAAczY,EAAUR,kBAAkBuC,MAAOmW,EAAMvlB,OACvD8lB,EAAczY,EAAUR,kBAAkBwC,MAAOoW,EAAMzlB,OAEvDlC,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,IACdH,EAAMyY,gBAKlB,OACI,eAAC7X,GAAD,CAAQP,MAzFI,IAyFgBC,OAxFf,IAwFb,UACI,eAACQ,GAAD,WACI,cAAC,IAASM,QAAV,CACIL,QA9EA,+BA+EAM,UAAQ,IAEZ,cAAC,IAASmb,WAAV,CACIrZ,WAAW,aACXS,IACI,cAAC,IAAS6Y,UAAV,CACI3X,WAAY,EACZlD,UAAWgmB,EACXvnB,MAAOsnB,EACPhlB,aAAcklB,EACd3lB,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6W,GAAU0D,eAAeva,IAC7CK,UAAW,SAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GACN,IAAM2C,EAAOoe,EAAcne,QAE3B,MADoB,KAAhB6iB,EAAMzlB,OAAc2C,EAAKvC,KAAKqlB,EAAMzlB,QAChC2C,EAAKvG,SAAS4D,IAE1BK,UAAW,aAGnBP,WAAY,CAAC2lB,OAIzB,cAAC,IAAStL,WAAV,CACIrZ,WAAW,aACXS,IACI,cAAC,IAAS6Y,UAAV,CACI3X,WAAY,EACZlD,UAAWkmB,EACXznB,MAAOsnB,EACPhlB,aAAcolB,EACd7lB,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6W,GAAU0D,eAAeva,IAC7CK,UAAW,SAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GACN,IAAM2C,EAAOoe,EAAcne,QAE3B,MADoB,KAAhB2iB,EAAMvlB,OAAc2C,EAAKvC,KAAKmlB,EAAMvlB,QAChC2C,EAAKvG,SAAS4D,IAE1BK,UAAW,aAGnBP,WAAY,CAACylB,UAK7B,cAAC,IAAStmB,aAAV,CACIC,MAAM,SACNhB,QAASA,QAMK,oBAAG,SAACP,GAG3B,IAAD,EAE0BC,qBAAWC,IAA/BC,EAFN,EAEMA,MAAOC,EAFb,EAEaA,SAFb,EAIwB+D,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAJ/E,mBAIK+lB,EAJL,KAIYC,EAJZ,OAKwB1jB,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAL/E,mBAKKimB,EALL,KAKYC,EALZ,KASI/iB,EAAOqS,mBAAQ,WACjB,OAAOrX,EAAMwW,KAAKD,SAAStV,KAAI,SAAA+V,GAE3B,OADaA,EAAMnG,KACNA,KAAiClI,UAEnD,IAEGpI,EAAkC,CACpC,CACIC,MAAO,SACPC,SAAU,WACNN,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,MAGtB,CACIK,MAAO,UACPqC,SAAUrB,IAASwmB,WAAW,CAACJ,EAAOE,IACtCrnB,SAAU,WACN,IAAM6nB,EAAYtoB,EAAMwW,KAAKD,SAAStV,KAAI,SAAA+V,GAAK,OAAKA,EAAMnG,KAA+BA,QACnF0X,EAASD,EAAU5hB,MAAK,SAAAyF,GAAK,OAAIA,EAAMxD,OAASif,EAAMvlB,SACtDmmB,EAASF,EAAU5hB,MAAK,SAAAyF,GAAK,OAAIA,EAAMxD,OAASmf,EAAMzlB,SAC5DkmB,EAAOjT,aAAe,CAAC,OACvBiT,EAAOnZ,OAAS,CAAC,CAAErN,KAAM,OAAQM,MAAOqN,EAAUL,cAAcoC,QAChE+W,EAAOlT,aAAe,CAAC,OACvBkT,EAAOpZ,OAAS,CAAC,CAAErN,KAAM,OAAQM,MAAOqN,EAAUL,cAAcqC,QAEhEvR,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,IACdH,EAAMyY,gBAKlB,OACI,eAAC7X,GAAD,CAAQP,MA3NI,IA2NgBC,OA1Nf,IA0Nb,UACI,eAACQ,GAAD,WACI,cAAC,IAASM,QAAV,CACIL,QAxCA,gCAyCAM,UAAQ,IAEZ,cAAC,IAASmb,WAAV,CACIrZ,WAAW,aACXS,IACI,cAAC,IAASkZ,SAAV,CACIhY,WAAY,EACZlD,UAAWgmB,EACXvnB,MAAOsnB,EACPhlB,aAAcklB,EACd3lB,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,aAGnBqC,WAAS,EACTC,KAAMA,EAAK6X,QAAO,SAAAxX,GAAI,OAAIA,IAASyiB,EAAMzlB,SAAOpB,KAAI,SAAAoE,GAAI,MAAK,CACzDhD,MAAOgD,EAAMF,UAAWE,UAKxC,cAAC,IAASmX,WAAV,CACIrZ,WAAW,aACXS,IACI,cAAC,IAASkZ,SAAV,CACIhY,WAAY,EACZlD,UAAWkmB,EACXznB,MAAOsnB,EACPhlB,aAAcolB,EACd7lB,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,aAGnBqC,WAAS,EACTC,KAAMA,EAAK6X,QAAO,SAAAxX,GAAI,OAAIA,IAASuiB,EAAMvlB,SAAOpB,KAAI,SAAAoE,GAAI,MAAK,CACzDhD,MAAOgD,EAAMF,UAAWE,aAM5C,cAAC,IAAS/D,aAAV,CACIC,MAAM,SACNhB,QAASA,Q,CAhRnBkoB,Q,KAuRKA,I,8BAAAA,MAET7nB,GAASf,IAAOC,IAAV,6UAOU,SAAAE,GAAK,OAAIA,EAAMM,OAAS,KACvB,SAAAN,GAAK,OAAIA,EAAMK,MAAQ,KACjC,SAAAL,GAAK,OAAIA,EAAMK,SACd,SAAAL,GAAK,OAAIA,EAAMM,UAOvBQ,GAASjB,IAAOC,IAAV,6ICxPG4oB,GAlDW,WAAO,IAAD,EACAzoB,qBAAWC,IAA/BC,EADoB,EACpBA,MAAOC,EADa,EACbA,SADa,EAEyBH,qBAAW0Y,IAA9CnC,GAFU,EAEpBnG,SAFoB,EAEVmG,MAAoBiC,GAFV,EAEJK,aAFI,EAEUL,YACzBjC,EAAK3F,KAOlB,OAAQ,mCACJ,cAAC,IAASoK,YAAV,CACIjV,MAAM,WACNE,SAAU,qCACN,cAAC,IAAS5E,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,mBACPqC,UAdP,WAAO,IAAD,EAEnB,MAAuB,YADV,UAAC2T,EAAKJ,cAAN,aAAC,EAAavF,MAA+BA,KAC9CyB,OAYmBqW,GACXloB,SAAU,WACNN,EAAMO,OAAOC,OAAS,cAAC,GAAmBioB,sBAApB,CAClBpS,KAAMA,EACNiC,WAAYA,IAEhBrY,EAAS,eAAKD,SAK9B,cAAC,IAASmB,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,eACPC,SAAU,WACNN,EAAMO,OAAOC,OAAS,cAAC,GAAmBkoB,kBAApB,CAClBrS,KAAMA,EACNiC,WAAYA,IAEhBrY,EAAS,eAAKD,iBCZ/B2oB,GA/BQ,WAAO,IAAD,EACkB7oB,qBAAW0Y,IAA9CF,EADiB,EACjBA,WAAYjC,EADK,EACLA,KAAMsC,EADD,EACCA,aACbtC,EAAK3F,KAElB,OAAQ,mCACJ,cAAC,IAASoK,YAAV,CACIjV,MAAM,YACNE,SAAU,cAAC,IAAS5E,aAAV,CACNC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,YACPC,SAAU,WAIN,IAIMya,EAAUN,GAAiBO,SAJM,CACnCpZ,KAAM,aACN8O,KAAM,MAEyC2F,GACnDsC,EAAaoC,GACbzC,cC2DbsQ,GAjFS,WAAO,IAAD,EACiB9oB,qBAAW0Y,IAA9CnC,EADkB,EAClBA,KAAMsC,EADY,EACZA,aAAcL,EADF,EACEA,WADF,GAEbjC,EAAK3F,KAEqBwG,mBAAQ,WAC3C,IAAMrS,EAAOwR,EAAKD,SAAStV,KAAI,SAAA6e,GAC3B,OAASA,EAAGjP,KAA+BA,KAAiClI,QAEhF,MAAO,CACH3D,EAAKvG,SAASiR,EAAUJ,gBAAgB6D,YACxCnO,EAAKvG,SAASiR,EAAUJ,gBAAgB+D,WAE7C,CAACmD,KAZsB,mBAInBwS,EAJmB,KAILC,EAJK,KAc1B9qB,qBAAU,cACP,CAACqY,IAKJ,IAAM6J,EAAgB,SAACC,EAAkBC,EAAiBC,GAClDF,GACA1F,GAAiB6F,YAAYjK,EAAM+J,EAAS,GAC5CzH,EAAa,eAAKtC,IAClBiC,MAEAmC,GAAiB8F,YAAYF,EAAahK,EAAM+J,GAChDzH,EAAa,eAAKtC,IAClBiC,MAIR,OAAQ,mCACJ,cAAC,IAASwC,YAAV,CACIjV,MAAM,UACNE,SAAU,qCACN,cAAC,IAAS2a,OAAV,CACI9d,UAAU,SACVa,IACI,cAAC,IAASkd,OAAV,CACItgB,MAAO,OACPH,MAAO,IACPmG,MAAOwiB,EACPvoB,SAAU,WACN4f,EAAc2I,EAAc,EAAG,CAC3BjnB,KAAM,aACN8O,KAAM,CACFlI,KAAM+G,EAAUJ,gBAAgB6D,WAChCmC,aAAc,CAAC,OACflG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,cAO1D,cAAC,IAASwe,OAAV,CACI9d,UAAU,SACVa,IACI,cAAC,IAASkd,OAAV,CACItgB,MAAO,SACPH,MAAO,IACPmG,MAAOyiB,EACPxoB,SAAU,WACN4f,EAAc4I,EAAgBD,EAAe,EAAI,EAAG,CAChDjnB,KAAM,iBACN8O,KAAM,CACFlI,KAAM+G,EAAUJ,gBAAgB+D,OAChCiC,aAAc,CAAC,MAAO,IAAK,OAC3BlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,KAAO,CAAEN,KAAM,SAAUM,MAAO,sBC+L3F6mB,GAjQQ,WAAO,IAAD,EACGjpB,qBAAWC,IAA/BC,EADiB,EACjBA,MAAOC,EADU,EACVA,SADU,EAE+CH,qBAAW0Y,IAA3E6B,EAFiB,EAEjBA,WAAYhE,EAFK,EAELA,KAAMnG,EAFD,EAECA,SAAUoI,EAFX,EAEWA,WAAYO,EAFvB,EAEuBA,UAAWD,EAFlC,EAEkCA,SACrDxG,EAAOiE,EAAK3F,KAHO,EAKD1M,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KALtD,mBAKlB8G,EALkB,KAKZoT,EALY,OAMD5X,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KANtD,mBAMlBsnB,EANkB,KAMZC,EANY,OAOCjlB,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAPxD,mBAOlBqd,EAPkB,KAOXmK,EAPW,OAQGllB,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAR1D,mBAQlBynB,EARkB,KAQVC,EARU,KAUnB/N,EAAc,WAAO,IAAD,EAChBrP,EAAQoG,EAAK1B,KACnBkL,EAAQ,2BAAKpT,GAAN,IAAYtG,MAAO8J,EAAMxD,QAChCygB,EAAQ,2BAAKzgB,GAAN,IAAYtG,MAAK,UAAE8J,EAAMgd,YAAR,QAAgB,MACxCE,EAAS,2BAAKnK,GAAN,IAAa7c,MAAO8J,EAAM+S,SAClCqK,EAAU,2BAAKD,GAAN,IAAcjnB,MAAO8J,EAAMmd,WAIlCnJ,EAAgB9I,mBAAQ,kBAAMuD,GAAiBwF,iBAAiB5J,KAAO,CAACA,IAE9ErY,qBAAU,WACW,MAAboU,EAAK1B,KACLmI,GAAU,GAEVwC,MAEL,CAAChF,IAGJ,IAAMgT,EAAgBnS,mBAAQ,WAG1B,OAFiBhH,EAASQ,KACA2B,SAAS3B,KACnB4B,KAAKxR,KAAI,SAAAsR,GACrB,OAAQA,EAAK1B,KAAiClI,UAEnD,CAAC6N,IAoBEkQ,EAAiB,WACnB,IAAMC,EAnBe,WACrB,IAAM8C,EAAOlX,EAAK1B,KAEZ+V,EADYvW,EAASQ,KAA4B2B,SAAS3B,KACpC4B,KAAK/L,MAAK,SAAA6L,GAClC,OAAQA,EAAK1B,KAAiClI,OAAS8gB,EAAKvK,SAEhE,QAAkBhc,GAAd0jB,EAAyB,CACzB,IACMC,EADYD,EACS/V,KAAiCD,KAAK,GACjE,GAAqB,iBAAjBiW,EAAQ9kB,KACR,OAAQ8kB,EAAQhW,KAAuCqQ,KAAKjgB,KAAI,SAAA8hB,GAC5D,OAAQA,EAAIlS,KAAoClI,QAI5D,MAAO,GAIeme,GAChB7H,EAAWrE,GAAiBoG,aAAaxK,EAAM,gBAAiB,gBAChErF,EAAW8N,EAASpO,KAA+BA,KAAoCM,OAEvF4V,EAAe5V,EAAOlQ,KAAI,SAAAkL,GAC5B,OAAQA,EAAM0E,KAAiClI,QAEnDge,EAAchlB,SAAQ,SAAAwK,GAClB,IAAK4a,EAAatoB,SAAS0N,GAAQ,CAC/B,IAAMiT,EAAYxE,GAAiByE,gBAAgB,gBAC/C,CAAE1W,KAAMwD,EAAOmJ,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,QAE5E8O,EAAO1O,KAAK2c,OAGpBxE,GAAiB6L,wBAAwBxH,IAuC7C,OAAQ,qCACJ,cAAC,GAAiB3F,UAAlB,CACIkC,YAAaA,EACbD,gBAAiB,CAAC5S,EAAMwgB,EAAMjK,EAAOoK,GACrC5N,YAAa,WACT,IAAMnE,EAAkC,CACpC5O,KAAMA,EAAKtG,MACX8mB,KAAqB,KAAfA,EAAK9mB,WAAea,EAAYimB,EAAK9mB,MAC3C6c,MAAOA,EAAM7c,MACbinB,OAAQA,EAAOjnB,MACfuO,KA7CL,CACH,CACI7O,KAAM,gBACN8O,KAAM,CACFD,KAAM,CACF,CACI7O,KAAM,cACN8O,KAAM,CACFqQ,KAAM,KAGd,CACInf,KAAM,eACN8O,KAAM,CACFM,OAAQ,QAM5B,CACIpP,KAAM,gBACN8O,KAAM,CACF6Y,MAAO,KAGf,CACI3nB,KAAM,aACN8O,KAAM,CACF8Y,QAAS,OAkBbpX,EAAK1B,KAAO0G,EAEZqD,GAAiB6L,wBAAwBjQ,GAEzCkQ,IACAjO,IACArY,EAAS,eAAKD,KAElBwb,aAAc,WACV,IAAMxP,EAAQoG,EAAK1B,KACnB1E,EAAMxD,KAAOA,EAAKtG,MAClB8J,EAAMgd,KAAsB,KAAfA,EAAK9mB,WAAea,EAAYimB,EAAK9mB,MAClD8J,EAAMmd,OAASA,EAAOjnB,MACtBkQ,EAAK1B,KAAO1E,KAGpB,cAAC,IAAS8O,YAAV,CACIjV,MAAM,QACNE,SAAU,qCACN,cAAC,IAASsW,WAAV,CACIrZ,WAAW,OACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPsD,YAAaoV,EACbnX,UAAW+G,EACXhG,aAAcoZ,EACd7Z,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GAAD,OAAW6W,GAAU0D,eAAeva,IAC7CK,UAAW,SAEf,CACIF,QAAS,SAACH,GAAD,OAAY8d,EAAc1hB,SAAS4D,IAC5CK,UAAW,iBAM/B,cAAC,IAAS8Z,WAAV,CACIrZ,WAAW,UACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPsD,YAAaoV,EACbnX,UAAWunB,EACXxmB,aAAcymB,EACdlnB,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,eAM/B,cAAC,IAAS8Z,WAAV,CACIrZ,WAAW,QACXS,IACI,cAAC,IAASkZ,SAAV,CACIhY,WAAY,EACZlD,UAAWsd,EACX7e,MAAO,IACPsD,YAAaoV,EACbpW,aAAc0mB,EACdrkB,KAAMwkB,EAAcvoB,KAAI,SAAAoE,GACpB,MAAO,CAAEhD,MAAOgD,EAAMF,UAAWE,MAErCN,WAAS,EACT7C,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,iBAM/B,cAAC,IAAS8Z,WAAV,CACIrZ,WAAW,SACXS,IACI,cAAC,IAASkZ,SAAV,CACIhY,WAAY,EACZlD,UAAW0nB,EACXjpB,MAAO,IACPsD,YAAaoV,EACbpW,aAAc4mB,EACdvkB,KAAMkU,GAAU0Q,YAAY3oB,KAAI,SAAAoE,GAC5B,MAAO,CAAEhD,MAAOgD,EAAMF,UAAWE,MAErCN,WAAS,EACT7C,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,sBAQvC,cAAC,IAASuY,YAAV,CACIjV,MAAM,YACNnD,UAAWkW,EACX7S,SAAU,qCACL0U,GAAiB2G,mBAAmB/K,GAAOuC,EAAU,OAAQ5Y,EAAOC,EAAUqY,GAC/E,cAAC,IAASnX,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,SACPC,SAAU,WACN+Z,SAMfI,GAAiBuC,eAAe3G,EAAMiC,YC7NxCoR,GAjCY,WAAO,IAAD,EACc5pB,qBAAW6pB,IAA9CtT,EADqB,EACrBA,KAAMsC,EADe,EACfA,aAGRiR,GAJuB,EACDtR,WACfjC,EAAK3F,KAA+BA,KAE/BwG,mBAAQ,WAEtB,OADsBuD,GAAiBoG,aAAaxK,EAAKJ,OAAgC,cACpEG,SAASzU,OAAmB,IAClD,KAEH,OAAQ,mCACJ,cAAC,IAASmZ,YAAV,CACIjV,MAAM,YACNnD,SAAUknB,EACV7jB,SAAU,cAAC,IAAS5E,aAAV,CACNC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,gBACPC,SAAU,WACN,IAIMya,EAAUN,GAAiBO,SAJM,CACnCpZ,KAAM,iBACN8O,KAAM,MAEyC2F,GACnDsC,EAAaoC,aClBnC8O,GAAW,IAqOFC,GAnOa,WAAO,IAAD,QAC0ChqB,qBAAW0Y,IAA3EtI,EADsB,EACtBA,SAAUmG,EADY,EACZA,KAAMgE,EADM,EACNA,WAAYxB,EADN,EACMA,UAAWD,EADjB,EACiBA,SAAUN,EAD3B,EAC2BA,WACnDlG,EAAOiE,EAAK3F,KACZA,EAAO0B,EAAK1B,KAGZqZ,EAAQ,UAAG1T,EAAKJ,cAAR,iBAAG,EAAaA,cAAhB,aAAG,EAAqBvF,KAEhC8Y,GADS,UAAG/O,GAAiBmD,aAAamM,EAAU,qBAA3C,aAAG,EAAuDrZ,MAC/C8Y,QAAQ1oB,KAAI,SAAAsR,GAAI,OAAIA,EAAK1B,QARrB,EAUN1M,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAVjD,mBAUvB8G,EAVuB,KAUjBoT,EAViB,OAWJ5X,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAXnD,mBAWvB4J,EAXuB,KAWhB0e,EAXgB,OAYNhmB,mBAAmB,IAZb,mBAYvBimB,EAZuB,KAYjBC,EAZiB,KAoBxB7O,GALenE,mBAAQ,WAAO,IAAD,IACzBhM,GAAQ,UAACmL,EAAKJ,cAAN,iBAAC,EAAaA,cAAd,aAAC,EAAqBvF,MAA+BA,KACnE,OAAO+J,GAAiBuB,iBAAiB9Q,KAC1C,CAACmL,IAEgB,WAChB,IAAMrK,EAAQoG,EAAK1B,KACnBkL,EAAQ,2BAAKpT,GAAN,IAAYtG,MAAO8J,EAAMxD,QAChCwhB,EAAS,2BAAK1e,GAAN,IAAapJ,MAAO8J,EAAMV,MAAM5G,gBAItCsb,EAAgB9I,mBAAQ,kBAAMuD,GAAiBwF,iBAAiB5J,KAAO,CAACA,IAE9ErY,qBAAU,WACW,MAAboU,EAAK1B,KACLmI,GAAU,IAEVwC,IACA8O,YAAW,WACP,IAAMF,EAAiB,GACvBT,EAAQhoB,SAAQ,SAAC4oB,EAAQppB,GACrBipB,EAAK3nB,KAAK+nB,EAAgB3Z,EAAKpF,MAAOtK,OAE1CkpB,EAAQD,KACT,MAER,CAAC5T,IAEJ,IAAMiU,EAAkB,SAACC,GAA8C,IAAD,IAC5D5H,EAAM,UAAGlI,GAAiBmD,aAAamM,EAAU,gBAAiB,sBAA5D,aAAG,EAAyErZ,KAClFyN,EAAO,UAAG1D,GAAiBmD,aAAamM,EAAU,gBAAiB,uBAA5D,aAAG,EAA0ErZ,KAEpF8Z,EAAiC7H,EAAO5B,KAAKjgB,KAAI,SAAC8hB,EAAK5hB,GAGzD,MAAO,CAAEwH,KAFKoa,EAAIlS,KAAmClI,KAEtCtG,MADDsnB,EAAQe,GAAUtb,OAAOjO,OAGrCypB,EAAatM,EAAQnN,OAAOlQ,KAAI,SAAA4pB,GAAI,OAAIA,EAAKha,QACnD,OAAO+Z,EAAW3pB,KAAI,SAAAoE,GAAS,IAAD,EAC1B,MAAO,CAAEsD,KAAMtD,EAAKsD,KAAMtG,MAAK,UAAEqT,GAAYpE,qBAAqBjM,EAAKsD,KAAMiiB,EAAYD,UAA1D,QAAqE,OAItGH,EAAkB,SAACM,EAAqBJ,GAC1ClM,QAAQC,IAAI,iBACZ,IAAMpT,EAA6B,GAE/B0f,EAAW,EACf,EAAG,CACC,GAAiB,IAAbA,EAAgB,gCACVtB,GAAO,UAACjT,EAAKJ,cAAN,iBAAC,EAAaA,cAAd,aAAC,EAAqBvF,MAA+BA,KAE5DqN,EADgB7N,EAASQ,KAA4B2B,SAAS3B,KACzC4B,KAAK/L,MAAK,SAAAwX,GAAK,OAAKA,EAAMrN,KAAiClI,OAAS8gB,EAAKvK,SACpG,QAAahc,GAATgb,EAAoB,cAExB,IAAM1K,EAAmBiX,EAAgBC,GACzCrf,EAAM5I,KAAK,IAAI2I,EAASqI,SACpBiC,GAAYsV,gBAAgB3f,EAAO6S,EAAMrN,KAAMR,EAAUmD,KAR7C,GAIQ,MAQ5B,GAAIuX,IAAaD,EACb,OAAOjhB,EAAWP,UAAU,IAAK,KAAK,SAACI,GAGnC2B,EAAM1J,SAAQ,SAAAspB,GACVA,EAAI1hB,KAAKG,MAEbA,EAAIa,UAKZ,IAAK,IAAIpJ,EAAIkK,EAAMvJ,OAAS,EAAGX,GAAK,EAAGA,IAAK,CACvBkK,EAAMlK,GAEd2K,SAIb,IAAK,IAAI3K,EAAIkK,EAAMvJ,OAAS,EAAGX,GAAK,EAAGA,IAAK,CACvBkK,EAAMlK,GACTwK,QACVN,EAAMoP,OAAOtZ,EAAG,GAIxB,GAAI4pB,EAAW,KAAO1f,EAAMvJ,OAAS,IAAM,MAC3CipB,UACK1f,EAAMvJ,OAAS,GACxB,MAAO,IAGLopB,EAAiB7T,mBAAQ,WAAO,IAAD,IAEjC,OADe,UAAGuD,GAAiBmD,cAAa,UAACvH,EAAKJ,cAAN,aAAC,EAAaA,QAAgCvF,KAAM,qBAArF,aAAG,EAAiGA,MAClG8Y,QAAQ1oB,KAAI,SAACsR,EAAMpR,GAChC,IAAMopB,EAAShY,EAAK1B,KAGdsa,OAAgBjoB,GADVknB,EAAKjpB,GACiB,6BAAQ,cAACiqB,GAAD,CAAMC,IAAKjB,EAAKjpB,KAC1D,OACI,eAACmqB,GAAD,eACI,cAACC,GAAD,UAAchB,EAAO5hB,OACrB,cAAC6iB,GAAD,UACKL,MAHQhqB,QAQ1B,CAACqV,EAAM4T,IAEV,OAAQ,qCACJ,cAAC,GAAiB9Q,UAAlB,CACIkC,YAAaA,EACbD,gBAAiB,CAAC5S,EAAM8C,GACxBiQ,YAAa,WACT,IAAMvP,EAAqC,CACvCxD,KAAMA,EAAKtG,MACXoJ,MAAO/G,OAAO+G,EAAMpJ,QAExBkQ,EAAK1B,KAAO1E,GAEhBwP,aAAc,WACV,IAAMxP,EAAQoG,EAAK1B,KACnB1E,EAAMxD,KAAOA,EAAKtG,MAClB8J,EAAMV,MAAQ/G,OAAO+G,EAAMpJ,OAC3BkQ,EAAK1B,KAAO1E,KAGpB,cAAC,IAAS8O,YAAV,CACIjV,MAAM,QACNE,SAAU,qCACN,cAAC,IAASsW,WAAV,CACIrZ,WAAW,OACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPsD,YAAaoV,EACbnX,UAAW+G,EACXhG,aAAcoZ,EACd7Z,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GAAD,OAAW6W,GAAU0D,eAAeva,IAC7CK,UAAW,SAEf,CACIF,QAAS,SAACH,GAAD,OAAY8d,EAAc1hB,SAAS4D,IAC5CK,UAAW,iBAM/B,cAAC,IAAS8Z,WAAV,CACIrZ,WAAW,QACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPsD,YAAaoV,EACbzU,UAAQ,EACR1C,UAAW6J,EACX9I,aAAcwnB,EACdjoB,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,sBAQvC,cAAC,IAASuY,YAAV,CACIjV,MAAM,UACNnD,UAAWkW,EACX7S,SAAU,mCACLglB,MAGT,cAAC,IAASjQ,YAAV,CACIjV,MAAM,YACNnD,UAAWkW,EACX7S,SAAU,qCACN,cAAC,IAAS5E,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,SACPqC,UAAWkW,EACXtY,SAAU,WACN+Z,SAMfI,GAAiBuC,eAAe3G,EAAMiC,YAQjD6S,GAAazrB,IAAOC,IAAV,8HAEAkqB,GACFA,IAGRuB,GAAc1rB,IAAOC,IAAV,gLAQX0rB,GAAa3rB,IAAOC,IAAV,+LAEHkqB,GACCA,IAMRoB,GAAOvrB,IAAO4rB,IAAV,yHCpQAC,Q,KAEwB,kBAAG,SAC7B/nB,EACA+e,EACAiJ,EACAC,EACAC,GAEA,IAAM7mB,EAAsB,GACtB8mB,EAAqB,GAkH3B,OAjHAF,EAASjqB,SAAQ,SAACoqB,EAAM5qB,GACpB,IAAM6qB,EAAWtJ,EAAavhB,GACxB8qB,EAAUN,EAAYjlB,MAAK,SAAAwlB,GAAG,OAAIA,EAAIhL,KAAKziB,SAASutB,EAASrjB,SACnE,QAAezF,GAAX+oB,EAAsB,CAEtB,GAAIH,EAASrtB,SAASwtB,EAAQtjB,MAAO,OAAO,EAE5CmjB,EAASrpB,KAAKwpB,EAAQtjB,MACtB,IAAMwjB,EAAwB,GAC9BzJ,EAAa/gB,SAAQ,SAACohB,EAAKqJ,GACnBH,EAAQ/K,KAAKziB,SAASskB,EAAIpa,OAC1BwjB,EAAY1pB,KAAK2pB,MAGzB,IAAMC,EAAY9d,EAAShB,yBAAyB,CAChDJ,EAAGzI,OAAOknB,EAASO,EAAY,IAAI9pB,OACnCyK,EAAGpI,OAAOknB,EAASO,EAAY,IAAI9pB,OACnC+K,EAAG1I,OAAOknB,EAASO,EAAY,IAAI9pB,OACnCgL,EAAG,MACJY,UAAU,EAAG,GAEhBjJ,EAAKvC,KAAK,gCACN,cAAC,IAASoe,OAAV,CACIjd,IACI,eAACgC,GAAD,WAAWqmB,EAAQtjB,KAAnB,KAA0B,cAAC2jB,GAAD,qBAAqB,eAACC,GAAD,eAAU,EAAV,WAAgB,IAAhB,yBAGvD,cAAC,IAAS1L,OAAV,CACIjd,IAAK,qCACAuoB,EAAYlrB,KAAI,SAACurB,EAAWJ,GACzB,OACI,cAAC,IAAS3P,UAAV,CAEIpc,MAAO,GACPyE,WAAkB,IAANsnB,EAAU,EAAI,EAC1B9nB,UAAQ,EACRX,WAAYA,EACZ/B,UAAWgqB,EAASY,GACpB7pB,aAAc,WACVkpB,EAAYD,EAAS3mB,UAEzB/C,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAauW,iBAAiBpqB,EAAO2pB,EAASrW,IAAKqW,EAASpW,MAChFlT,UAAW,WAhBd8pB,MAsBjB,cAACE,GAAD,CAAQ3qB,KAAK,QAAQM,MAAOgqB,EACxB9mB,SAAU5B,EACVH,SAAU,SAACnB,GACP,IAAM4K,EAAOsB,EAASrB,yBAAyB7K,EAAMoB,OAAOpB,MAAQ,MACxD,MAAR4K,IACA2e,EAASO,EAAY,IAAI9pB,MAAQ4K,EAAKE,EAAEtI,WACxC+mB,EAASO,EAAY,IAAI9pB,MAAQ4K,EAAKH,EAAEjI,WACxC+mB,EAASO,EAAY,IAAI9pB,MAAQ4K,EAAKG,EAAEvI,YAE5CgnB,EAAYD,EAAS3mB,mBA1CrB9D,QAgDjB,CACH,IAAIwrB,EAAYX,EAASrjB,UACJzF,GAAjB8oB,EAAS7C,OAAmBwD,EAAYX,EAAS7C,MACrDnkB,EAAKvC,KAAK,gCACN,cAAC,IAASoe,OAAV,CACIjd,IACI,eAACgC,GAAD,WAAW+mB,EAAX,KAAuB,cAACL,GAAD,sBAAsB,eAACC,GAAD,eAAUP,EAASrW,IAAnB,WAA2BqW,EAASpW,IAApC,YAGrD,cAAC,IAASiL,OAAV,CACIjd,IAAK,qCACD,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPyE,WAAY,EACZR,UAAQ,EACRX,WAAYA,EACZa,KAAMwnB,EAASxnB,KACf5C,UAAWmqB,EACXppB,aAAc,WACVkpB,EAAYD,EAAS3mB,UAEzB/C,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAauW,iBAAiBpqB,EAAO2pB,EAASrW,IAAKqW,EAASpW,MAChFlT,UAAW,YAIvB,cAACkqB,GAAD,CAAU7qB,KAAK,QAAQM,MAAOqC,OAAOqnB,EAAK1pB,OAAQsT,IAAKqW,EAASrW,IAAKC,IAAKoW,EAASpW,IAAKpR,KAAMwnB,EAASxnB,KACnGe,SAAU5B,EACVH,SAAU,SAACnB,GACPupB,EAASzqB,GAAT,2BAAmB4qB,GAAnB,IAAyB1pB,MAAOA,EAAMoB,OAAOpB,QAC7CwpB,EAAYD,EAAS3mB,mBAjCrB9D,QAyCrB6D,GAIA0mB,I,2BAAAA,MAIT9lB,GAAW/F,IAAOC,IAAV,8YAKGF,KAAOH,aAalB6sB,GAAQzsB,IAAO6kB,KAAV,0EAIL6H,GAAS1sB,IAAO6kB,KAAV,qDAINkI,GAAW/sB,IAAOgH,MAAV,+IAOR6lB,GAAS7sB,IAAOgH,MAAV,oJCQGgmB,GAxKU,WAAO,IAAD,EACC5sB,qBAAWC,IAA/BC,EADmB,EACnBA,MAAOC,EADY,EACZA,SADY,EAE6CH,qBAAW0Y,IAA3E6B,EAFmB,EAEnBA,WAAYhE,EAFO,EAEPA,KAAgBiC,GAFT,EAEDpI,SAFC,EAESoI,YAAYO,EAFrB,EAEqBA,UAAWD,EAFhC,EAEgCA,SACrDxG,EAAOiE,EAAK3F,KAHS,EAKH1M,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KALpD,mBAKpB8G,EALoB,KAKdoT,EALc,OAMS5X,mBAAoC,IAN7C,mBAMpB2oB,EANoB,KAMRC,EANQ,KAQrBvR,EAAc,WAChB,IAAMrP,EAAQoG,EAAK1B,KACnBkL,EAAQ,2BAAKpT,GAAN,IAAYtG,MAAO8J,EAAMxD,QAChCokB,EAAc5gB,EAAMiD,OAAOnO,KAAI,SAAAoB,GAC3B,MAAO,CAAEA,MAAOA,EAAMwC,WAAYhD,OAAQ,SAK5Cse,EAAgB9I,mBAAQ,kBAAMuD,GAAiBwF,iBAAiB5J,KAAO,CAACA,IAjBnD,EAmBoEa,mBAAQ,WAAO,IAAD,IAEnG2V,EADSpS,GAAiByD,mBAAkB,UAAC7H,EAAKJ,cAAN,aAAC,EAAaA,QAAgCvF,KAAM,gBAAiB,eAC3FA,KACxBqQ,KAAKjgB,KAAI,SAAA8hB,GACL,OAAOA,EAAIlS,QAEf8a,EAA2C,GACzCsB,EAAarS,GAAiBmD,cAAa,UAACvH,EAAKJ,cAAN,aAAC,EAAaA,QAAgCvF,KAAM,gBAAiB,eAOtH,OANkB,MAAdoc,IACAtB,EAAesB,EAAWpc,KACtBqc,QAAQjsB,KAAI,SAAA8hB,GACR,OAAOA,EAAIlS,SAGhB,CAACmc,EAAarB,KACtB,CAACnV,IAlCuB,mBAmBpB2W,EAnBoB,KAmBPxB,EAnBO,KAoC3BxtB,qBAAU,WACW,MAAboU,EAAK1B,MACLkc,EAAcI,EAAYlsB,KAAI,SAAA8hB,GAC1B,IAAIqK,EAAS,IAEb,YADkBlqB,GAAd6f,EAAIqK,SAAqBA,EAASrK,EAAIqK,OAAOvoB,YAC1C,CAAExC,MAAO+qB,EAAQvrB,OAAQ,QAEpCmX,GAAU,IAEVwC,MAEL,CAAChF,IAEJ,IAAMoV,EAAWvU,mBAAQ,WACrB,OAAOqU,GAAc2B,mBAChBtU,EAAUoU,EAAaxB,EAAamB,EAAYC,KA+BtD,CAACD,EAAY/T,IAEhB,OAAQ,qCACJ,cAAC,GAAiBO,UAAlB,CACIkC,YAAaA,EACbD,gBAAiB,CAAC5S,GAAMpE,OAAOuoB,GAC/BpR,YAAa,WACT,IAAMnE,EAAoC,CACtC5O,KAAMA,EAAKtG,MACX+M,OAAQ,IAEZ0d,EAAWnrB,SAAQ,SAACoqB,EAAM5qB,GACtBoW,EAAQnI,OAAOjO,GAAKuD,OAAOqnB,EAAK1pB,UAEpCkQ,EAAK1B,KAAO0G,EAEZkB,IACArY,EAAS,eAAKD,KAElBwb,aAAc,WACV,IAAMxP,EAAQoG,EAAK1B,KACnB1E,EAAMxD,KAAOA,EAAKtG,MAClByqB,EAAWnrB,SAAQ,SAACoqB,EAAM5qB,GACtBgL,EAAMiD,OAAOjO,GAAKuD,OAAOqnB,EAAK1pB,UAElCkQ,EAAK1B,KAAO1E,KAGpB,cAAC,IAAS8O,YAAV,CACIjV,MAAM,QACNE,SAAU,qCACN,cAAC,IAASsW,WAAV,CACIrZ,WAAW,OACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPsD,YAAaoV,EACbnX,UAAW+G,EACXhG,aAAcoZ,EACd7Z,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GAAD,OAAW6W,GAAU0D,eAAeva,IAC7CK,UAAW,SAEf,CACIF,QAAS,SAACH,GAAD,OAAY8d,EAAc1hB,SAAS4D,IAC5CK,UAAW,iBAM9BkpB,OAGT,cAAC,IAAS3Q,YAAV,CACIjV,MAAM,YACNnD,UAAWkW,EACX7S,SAAU,qCACL0U,GAAiB2G,mBAAmB/K,GAAOuC,EAAU,SAAU5Y,EAAOC,EAAUqY,GACjF,cAAC,IAASnX,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,SACPC,SAAU,WACN+Z,SAMfI,GAAiBuC,eAAe3G,EAAMiC,YC3IxC6U,GA7BS,WAAO,IAAD,EACGrtB,qBAAW0Y,IAAjCnC,EADmB,EACnBA,KAAMsC,EADa,EACbA,aACPvG,EAAOiE,EAAK3F,KAElB,OAAQ,mCACJ,cAAC,IAASoK,YAAV,CACIjV,MAAM,YACNE,SAAU,cAAC,IAAS5E,aAAV,CACNC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,aACPC,SAAU,WACN,IAAMkf,EAAkC,CACpC5d,KAAM,cACN8O,KAAM,MAET0B,EAAK1B,KAAqC8Y,QAAQlnB,KAAKkd,GACxD,IAAMzE,EAAU/E,GAASmJ,WAAWK,EAAUnJ,GAC9CA,EAAKD,SAAS9T,KAAKyY,GACnBpC,EAAaoC,aCuI1BqS,GAtJgB,WAAO,IAAD,EACLttB,qBAAWC,IAA/BC,EADyB,EACzBA,MAAOC,EADkB,EAClBA,SADkB,EAEoBH,qBAAW0Y,IAA9CnC,GAFe,EAEzBnG,SAFyB,EAEfmG,MAAMsC,EAFS,EAETA,aAAcL,EAFL,EAEKA,WAGhC+U,GAFOhX,EAAK3F,KAEC+J,GAAiBkE,kBAAkBtI,EAAM,gBACtDiX,EAAc7S,GAAiBkE,kBAAkBtI,EAAM,gBACvDkX,EAAgB9S,GAAiBkE,kBAAkBtI,EAAKJ,OAAgC,cAP7D,EASViB,mBAAQ,WAI3B,MAAO,CAHMb,EAAKD,SAAStV,KAAI,SAAA6e,GAC3B,OAAQA,EAAGjP,KAA+B9O,QAGrCtD,SAAS,kBAEnB,CAAC+X,IAPGmX,EAT0B,oBAkB3B1M,EAAc,WAChB,OAAOuM,EAAWjX,SAASzU,OAAS,GAYlC8rB,EAAU,WAGR3M,MAEArG,GAAiBiT,eAAeL,GAChC5S,GAAiBiT,eAAeH,IAGpCD,EAAYlX,SAAS5U,SAAQ,SAAAqV,GACzB,IAAM6T,EAAQ7T,EAAMnG,KAA+BA,KACnDga,EAAKvV,aAAe,CAAC,OACrBuV,EAAKzb,OAAS,CAAC,CAAErN,KAAM,WAAYM,MAAOwoB,EAAKliB,OAE/C,IAOMmlB,EAAoC,CACtC/rB,KAAM,eACN8O,KAT0C,CAC1ClI,KAAMkiB,EAAKliB,KACXnE,KAAM,EACNmR,KAAM,KACNC,IAAK,KACLwX,OAAQ,IAMII,EAAW3c,KAA+BA,KACnDqQ,KAAKze,KAAKqrB,GACjBN,EAAWjX,SAAS9T,KAAK0T,GAASmJ,WAAWwO,EAAYN,IACzD/U,QAgDR,OAAQ,qCACJ,cAAC,IAASwC,YAAV,CACIjV,MAAM,UACNE,SAAU,mCACN,cAAC,IAAS2a,OAAV,CACI9d,UAAU,SACVa,IAAK,cAAC,IAASkd,OAAV,CACDtgB,MAAO,QACPH,MAAO,IACPmG,MAAOmnB,EACP9qB,UA5FH,WACb,IAAMkrB,EAAenT,GAAiBoG,aAAaxK,EAAM,eACzD,OAAoB,MAAhBuX,GACGA,EAAaxX,SAASzU,OAAS,EAyFXksB,GACXvtB,SAAU,YAvBR,SAAC6f,EAAkBC,EAAiBC,GAClDF,GACA1F,GAAiB6F,YAAYjK,EAAM+J,EAAS,GAC5CzH,EAAa,eAAKtC,IAClBiC,MAEAmC,GAAiB8F,YAAYF,EAAahK,EAAM+J,GAChDzH,EAAa,eAAKtC,IAClBiC,KAiBgB4H,CACIsN,EAFU,EAIV,CACI5rB,KAAM,cACN8O,KAAM,CACFqc,QAAS,eASzC,cAAC,IAASjS,YAAV,CACIjV,MAAM,YACNE,SAAU,cAAC,IAAS5E,aAAV,CACNC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,oBACPC,SA/EO,WAClBwgB,KAGD9gB,EAAMO,OAAOC,OAAS,cAAC,KAAc2Y,UAAf,CAClBvY,QAAQ,wDACRR,QAAS,CACL,CACIC,MAAO,SACPC,SAAU,WACNN,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,MAGtB,CACIK,MAAO,UACPC,SAAU,WACNmtB,IACAztB,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,SAK9BC,EAAS,eAAKD,KAtBdytB,IAwBJnV,eCjEOwV,GA7BU,WAAO,IAAD,EACEhuB,qBAAW0Y,IAAjCnC,EADoB,EACpBA,KAAMsC,EADc,EACdA,aACPvG,EAAOiE,EAAK3F,KAElB,OAAQ,mCACJ,cAAC,IAASoK,YAAV,CACIjV,MAAM,YACNE,SAAU,cAAC,IAAS5E,aAAV,CACNC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,eACPC,SAAU,WACN,IAAMkf,EAAkC,CACpC5d,KAAM,eACN8O,KAAM,MAET0B,EAAK1B,KAAsCqQ,KAAKze,KAAKkd,GACtD,IAAMzE,EAAU/E,GAASmJ,WAAWK,EAAUnJ,GAC9CA,EAAKD,SAAS9T,KAAKyY,GACnBpC,EAAaoC,aCuQnC+B,GAAoB,SAAC8B,EAAgC3B,GAEvD,IAAMJ,EAAmB,GAYzB,OAVoBpC,GAAiByD,kBAAkBU,EAASlO,KAA+B,gBAAiB,gBACpFA,KACpBM,OAAOxP,SAAQ,SAAA4Q,GACnB,IAAMpG,EAAQoG,EAAK1B,KACnB1E,EAAMiD,OAAOzN,SAAQ,SAAA2b,GACI,aAAjBA,EAAQvb,MAAuBub,EAAQjb,QAAU+a,GACjDJ,EAAOva,KAAK0J,EAAMxD,YAIvBqU,GAGIkR,GAvSW,WAAO,IAAD,MACAjuB,qBAAWC,IAA/BC,EADoB,EACpBA,MAAOC,EADa,EACbA,SADa,EAEkCH,qBAAW0Y,IAAjEnC,EAFoB,EAEpBA,KAAMgE,EAFc,EAEdA,WAAYxB,EAFE,EAEFA,UAAWD,EAFT,EAESA,SAAUN,EAFnB,EAEmBA,WACzClG,EAAOiE,EAAK3F,KAHU,EAKJ1M,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KALnD,mBAKrB8G,EALqB,KAKfoT,EALe,OAMJ5X,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KANnD,mBAMrBsnB,EANqB,KAMfC,EANe,OAONjlB,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAPjD,mBAOrB8T,EAPqB,KAOhBwY,EAPgB,OAQNhqB,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KARjD,mBAQrB+T,EARqB,KAQhBwY,EARgB,OASJjqB,mBAAkC,CAAE9B,MAAO,IAAKR,OAAQ,KATpD,mBASrB2C,EATqB,KASf6pB,EATe,OAUAlqB,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAVvD,mBAUrBurB,EAVqB,KAUbkB,EAVa,KAatBvP,EAAQ,UAAGvI,EAAKJ,cAAR,iBAAG,EAAaA,cAAhB,aAAG,EAAqBA,OAChCsX,EAAgB9S,GAAiBkE,kBAAkBC,EAAU,cAQ7DvD,GALenE,mBAAQ,WAAO,IAAD,IACzBhM,GAAQ,UAACmL,EAAKJ,cAAN,iBAAC,EAAaA,cAAd,aAAC,EAAqBvF,MAA+BA,KACnE,OAAO+J,GAAiBuB,iBAAiB9Q,KAC1C,CAACmL,IAEgB,WAAO,IAAD,EAChBrK,EAAQoG,EAAK1B,KACnBkL,EAAQ,2BAAKpT,GAAN,IAAYtG,MAAO8J,EAAMxD,QAChCygB,EAAQ,2BAAKzgB,GAAN,IAAYtG,MAAK,UAAE8J,EAAMgd,YAAR,QAAgB,MACxCgF,EAAO,2BAAKxY,GAAN,IAAWtT,MAAO8J,EAAMwJ,IAAI9Q,cAClCupB,EAAO,2BAAKxY,GAAN,IAAWvT,MAAO8J,EAAMyJ,IAAI/Q,cAClCwpB,EAAQ,2BAAK7pB,GAAN,IAAYnC,MAAO8J,EAAM3H,KAAKK,cACrCypB,EAAU,2BAAKlB,GAAN,IAAc/qB,WAAuBa,GAAhBiJ,EAAMihB,OAAsB,GAAKjhB,EAAMihB,OAAOvoB,gBAK1Esb,EAAgB9I,mBAAQ,kBAAMuD,GAAiBwF,iBAAiB5J,KAAO,CAACA,IAU9E,OARArY,qBAAU,WACW,MAAboU,EAAK1B,KACLmI,GAAU,GAEVwC,MAEL,CAAChF,IAEI,qCACJ,cAAC,GAAiB8C,UAAlB,CACIkC,YAAaA,EACbD,gBAAiB,CAAC5S,EAAMwgB,EAAMxT,EAAKC,EAAKpR,EAAM4oB,GAC9C1R,YAAa,WACT,IAAMvP,EAAmC,CACrCxD,KAAMA,EAAKtG,MACX8mB,KAAqB,KAAfA,EAAK9mB,WAAea,EAAYimB,EAAK9mB,MAC3CsT,IAAKjR,OAAOiR,EAAItT,OAChBuT,IAAKlR,OAAOkR,EAAIvT,OAChBmC,KAAME,OAAOF,EAAKnC,OAClB+qB,OAAyB,KAAjBA,EAAO/qB,WAAea,EAAYwB,OAAO0oB,EAAO/qB,QAG5DkQ,EAAK1B,KAAO1E,EACZkQ,GAAgB0C,EAAkC5S,IAEtDwP,aAAc,WACV,IAAMxP,EAAQoG,EAAK1B,KACbyL,EAAWnQ,EAAMxD,KACvBwD,EAAMxD,KAAOA,EAAKtG,MAClB8J,EAAMgd,KAAsB,KAAfA,EAAK9mB,WAAea,EAAYimB,EAAK9mB,MAClD8J,EAAMwJ,IAAMjR,OAAOiR,EAAItT,OACvB8J,EAAMyJ,IAAMlR,OAAOkR,EAAIvT,OACvB8J,EAAM3H,KAAOE,OAAOF,EAAKnC,OACzB8J,EAAMihB,OAA0B,KAAjBA,EAAO/qB,WAAea,EAAYwB,OAAO0oB,EAAO/qB,OAE/DkQ,EAAK1B,KAAO1E,EAERmQ,IAAa3T,EAAKtG,OAClBka,GAAiBwC,EAAUzC,EAAU3T,EAAKtG,UAItD,cAAC,IAAS4Y,YAAV,CACIjV,MAAM,QACNE,SAAU,qCACN,cAAC,IAASsW,WAAV,CACIrZ,WAAW,OACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPsD,YAAaoV,EACbnX,UAAW+G,EACXhG,aAAcoZ,EACd7Z,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GAAD,OAAW6W,GAAU0D,eAAeva,IAC7CK,UAAW,SAEf,CACIF,QAAS,SAACH,GAAD,OAAY8d,EAAc1hB,SAAS4D,IAC5CK,UAAW,iBAM/B,cAAC,IAAS8Z,WAAV,CACIrZ,WAAW,UACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPsD,YAAaoV,EACbnX,UAAWunB,EACXxmB,aAAcymB,EACdlnB,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,eAM/B,cAAC,IAAS8Z,WAAV,CACIrZ,WAAW,MACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPsD,YAAaoV,EACbnX,UAAW+T,EACXhT,aAAcwrB,EACd7pB,UAAQ,EACRnC,WAAY,CAACyT,GACb1T,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAWqC,OAAOrC,GAASqC,OAAOkR,EAAIvT,QAC/CK,UAAW,iBAM/B,cAAC,IAAS8Z,WAAV,CACIrZ,WAAW,MACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPsD,YAAaoV,EACbnX,UAAWgU,EACXjT,aAAcyrB,EACd9pB,UAAQ,EACRnC,WAAY,CAACwT,GACbzT,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAWqC,OAAOrC,GAASqC,OAAOiR,EAAItT,QAC/CK,UAAW,iBAM/B,cAAC,IAAS8Z,WAAV,CACIrZ,WAAW,OACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPsD,YAAaoV,EACbnX,UAAW4C,EACX7B,aAAc0rB,EACd/pB,UAAQ,EACRpC,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,iBAM/B,cAAC,IAAS8Z,WAAV,CACIrZ,WAAW,UACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPsD,YAAaoV,EACbnX,UAAWwrB,EACXzqB,aAAc2rB,EACdhqB,UAAQ,WA6B5B,cAAC,IAAS2W,YAAV,CACIjV,MAAM,YACNnD,UAAWkW,EACX7S,SAAU,qCACL0U,GAAiB2G,mBAAmB/K,GAAOuC,EAAU,WAAY5Y,EAAOC,EAAUqY,GACnF,cAAC,IAASnX,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,SACPqC,UAAWkW,EACXtY,SAAU,WACN,IAAM0L,EAAQoG,EAAK1B,KACbmM,EAASC,GAAkB8B,EAAU5S,EAAMxD,MACjD,GAAsB,IAAlBqU,EAAOlb,OAAc,CACrB,IAAMysB,EAAW3T,GAAiB4T,gBAAgBhY,GAClD,IAAkB,IAAd+X,EAAiB,MAAM,IAAItL,MAAM,qBACrC/F,GAAgB6B,EAAUwP,GAC1B/T,SAEAra,EAAMO,OAAOC,OAAS,cAAC,KAAc2Y,UAAf,CAClBvY,QAAO,WAAMoL,EAAMxD,KAAZ,4CAAoDqU,KAE/D5c,EAAS,eAAKD,SAOjCya,GAAiB6T,uBAAuBjY,EAAMiC,GAAY,SAAC/P,EAAOgmB,GAC/D,IAAMC,EAAajB,EAAc7c,KAA+BA,KAC1DvD,EAASohB,GAAW,EAAI,EAC9BC,EAAUhF,QAAQhoB,SAAQ,SAAA4Q,GACtB,IAAMnD,EAAUmD,EAAK1B,KAAkCzB,OACjDwf,EAAWxf,EAAO1G,GACxB0G,EAAO1G,GAAS0G,EAAO1G,EAAQ4E,GAC/B8B,EAAO1G,EAAQ4E,GAAUshB,iBAoC3CrS,GAAmB,SAACwC,EAAgCzC,EAAkBiB,GAExE,IAUMsR,EAAcjU,GAAiByD,kBAAkBU,EAASlO,KAA+B,gBAAiB,gBACnGge,EAAYhe,KAAoCM,OAVpDxP,SAAQ,SAAA4Q,GACOA,EAAK1B,KAAiCzB,OAC/CzN,SAAQ,SAAA2b,GACU,aAAjBA,EAAQvb,MAAuBub,EAAQjb,QAAUia,IACjDgB,EAAQjb,MAAQkb,UAc9BlB,GAAkB,SAAC0C,EAAgCgE,GAC/BnI,GAAiBkE,kBAAkBC,EAAU,cAClClO,KAA+BA,KACtD8Y,QAAQhoB,SAAQ,SAAA4Q,GAAS,IAAD,EACfA,EAAK1B,KACbzB,OAAO3M,KAAd,UAAmBsgB,EAAIqK,cAAvB,QAAiCrK,EAAIpN,SAQvCuH,GAAkB,SAAC6B,EAAgCS,GAC/B5E,GAAiBkE,kBAAkBC,EAAU,cAClClO,KAA+BA,KACtD8Y,QAAQhoB,SAAQ,SAAA4Q,GACPA,EAAK1B,KACbzB,OAAOqL,OAAO+E,EAAU,OCxRxBsP,GA7DW,WAAO,IAAD,EACA7uB,qBAAWC,IADX,KACpBC,MADoB,EACbC,SACsCH,qBAAW0Y,KAA9CnC,GAFU,EAEpBnG,SAFoB,EAEVmG,MAFU,EAEJsC,aAFI,EAEUL,WACzBjC,EAAK3F,KAsDlB,OAAQ,8BC4HGke,GAnLW,WAAO,IAAD,EACA9uB,qBAAWC,IADX,KACpBC,MADoB,EACbC,SAC+CH,qBAAW0Y,KAAjEnC,EAFoB,EAEpBA,KAAMgE,EAFc,EAEdA,WAAYxB,EAFE,EAEFA,UAAWD,EAFT,EAESA,SAAUN,EAFnB,EAEmBA,WACzClG,EAAOiE,EAAK3F,KAHU,EAKJ1M,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KALnD,mBAKrB8G,EALqB,KAKfoT,EALe,OAMU5X,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KANjE,mBAMrBmtB,EANqB,KAMRC,EANQ,OAOQ9qB,mBAAoC,IAP5C,mBAOrB+qB,EAPqB,KAOTC,EAPS,KAStB3T,EAAc,WAChB,IAAMrP,EAAQoG,EAAK1B,KACnBkL,EAAQ,2BAAKpT,GAAN,IAAYtG,MAAO8J,EAAMxD,QAChCsmB,EAAe,2BAAKD,GAAN,IAAmB3sB,MAAO8J,EAAMmG,UAC9C6c,EAAchjB,EAAM+U,KAAKjgB,KAAI,SAAA8hB,GACzB,MAAO,CAAE1gB,MAAO0gB,EAAKlhB,OAAQ,SAO/ButB,GAFgB/X,mBAAQ,kBAAMuD,GAAiBwF,iBAAiB5J,KAAO,CAACA,IAE7Da,mBAAQ,WAAO,IAAD,IAE3B,OADeuD,GAAiByD,kBAAjB,UAAmC7H,EAAKJ,cAAxC,iBAAmC,EAAaA,cAAhD,aAAmC,EAAqBvF,KAA+B,eAAeA,KACvGqQ,KAAKjgB,KAAI,SAAAsR,GAAI,OAAKA,EAAK1B,KAAmClI,UACzE,CAAC6N,KAUJ,OARArY,qBAAU,WACW,MAAboU,EAAK1B,KACLmI,GAAU,GAEVwC,MAEL,CAAChF,IAEI,qCACJ,cAAC,GAAiB8C,UAAlB,CACIkC,YAAaA,EACbD,gBAAiB,CAAC5S,EAAMqmB,GAAazqB,OAAO2qB,GAC5CxT,YAAa,WACT,IAAMvP,EAAmC,CACrCxD,KAAMA,EAAKtG,MACXiQ,OAAQ0c,EAAY3sB,MACpB6e,KAAMgO,EAAWjuB,KAAI,SAAA8qB,GAAI,OAAIA,EAAK1pB,UAEtCkQ,EAAK1B,KAAO1E,GAEhBwP,aAAc,WACV,IAAMxP,EAAQoG,EAAK1B,KACnB1E,EAAMxD,KAAOA,EAAKtG,MAClB8J,EAAMmG,OAAS0c,EAAY3sB,MAC3B8J,EAAM+U,KAAOgO,EAAWjuB,KAAI,SAAA8qB,GAAI,OAAIA,EAAK1pB,SACzCkQ,EAAK1B,KAAO1E,KAIpB,cAAC,IAAS8O,YAAV,CACIjV,MAAM,QACNE,SAAU,qCACN,cAAC,IAASsW,WAAV,CACIrZ,WAAW,UACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPsD,YAAaoV,EACbnX,UAAW+G,EACXhG,aAAcoZ,EACd7Z,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,eAM/B,cAAC,IAAS8Z,WAAV,CACIrZ,WAAW,SACXS,IACI,cAAC,IAASkZ,SAAV,CACIlb,UAAWotB,EACXrsB,aAAc,SAACf,GACX,IAAMG,EAAOH,EAAUS,MAEnB8sB,EADS,UAATptB,EACc,IAAIstB,MAA+B,GAAGvhB,KAAK,CAAEzL,MAAO,GAAIR,OAAQ,KAEhE,IAElBotB,EAAe,eAAIrtB,KAEvBoD,KAAMkU,GAAUoW,eAAeruB,KAAI,SAAAc,GAC/B,MAAO,CAAEM,MAAON,EAAMoD,UAAWpD,EAAMyD,WAAqB,SAATzD,MAEvDgD,WAAS,EACT1E,MAAO,IACPsD,YAAaoV,EACb7W,UACI,CACI,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,iBAOlCwsB,EAAWjuB,KAAI,SAACwC,EAAQtC,GACrB,IAAIouB,EAAW,UACf,GAA0B,UAAtBP,EAAY3sB,MACZ,OAAQlB,GACJ,KAAK,EAAGouB,GAAY,IAAK,MACzB,KAAK,EAAGA,GAAY,IAAK,MACzB,KAAK,EAAGA,GAAY,SAGxBA,GAAQ,WAAQpuB,GAEpB,OACI,cAAC,IAASqb,WAAV,CAEIrZ,WAAYosB,EACZ3rB,IACI,cAAC,IAASkZ,SAAV,CACIlb,UAAW6B,EACXd,aAAc,SAACf,GACXstB,EAAW/tB,GAAKS,EAChButB,EAAcD,EAAWjqB,UAE7BD,KAAMoqB,EAASnuB,KAAI,SAAAoE,GACf,MAAO,CAAEhD,MAAOgD,EAAMF,UAAWE,MAErCN,WAAS,EACT1E,MAAO,IACPsD,YAAaoV,EACb7W,UACI,CACI,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,YAAgFa,GAArEgsB,EAAWxoB,MAAK,SAACjD,EAAQ2oB,GAAT,OAAejrB,IAAMirB,GAAK3oB,EAAOpB,QAAUA,MAC/EK,UAAW,aAIvBP,WAAY+sB,KA3Bf/tB,WAmCzB,cAAC,IAAS8Z,YAAV,CACIjV,MAAM,YACNnD,UAAWkW,EACX7S,SAAU,qCACN,cAAC,IAAS5E,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,SACPqC,UAAWkW,EACXtY,SAAU+Z,MAKrBI,GAAiBuC,eAAe3G,EAAMiC,YCtJxC+W,GA7BU,WAAO,IAAD,EACEvvB,qBAAW0Y,IAAjCnC,EADoB,EACpBA,KAAMsC,EADc,EACdA,aACPvG,EAAOiE,EAAK3F,KAElB,OAAQ,mCACJ,cAAC,IAASoK,YAAV,CACIjV,MAAM,YACNE,SAAU,cAAC,IAAS5E,aAAV,CACNC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,YACPC,SAAU,WACN,IAAMkf,EAAkC,CACpC5d,KAAM,eACN8O,KAAM,MAET0B,EAAK1B,KAAsCqc,QAAQzqB,KAAKkd,GACzD,IAAMzE,EAAU/E,GAASmJ,WAAWK,EAAUnJ,GAC9CA,EAAKD,SAAS9T,KAAKyY,GACnBpC,EAAaoC,c,YCwBV,iBAAG,SAAC3F,GAK3B,OAHwB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAClE9W,SAAS8W,EAAItH,UAAU,EAAG,KAELiI,GAAaL,mBAAmBN,EAD5C,0CAuCI,WAAG,CAAC,SAAU,SAGP,kBAAG,CAAC,SAAU,WAAY,WAAY,OAAQ,SAGjD,eAAG,CAAC,SAAU,UAGf,cAAG,CAAC,UAAW,UAAW,WAGvB,iBAAG,CAAC,QAAS,QAvDjC,IAuKDka,EAAe,UACfC,EAAY,UACZC,EAAa,UACbC,EAAa,UAGbC,EAAc,UAgTPrI,GA5SiB,oBAAG,SAAChR,EAA4BsZ,GAC1D,IAAMvd,EAAOiE,EAAK3F,KAClB,OAAQ0B,EAAKxQ,MACT,IAAK,OACD,OAAO,cAACguB,GAAD,CAAWC,gBAfX,UAeA,qBAEX,IAAK,WACD,OAAO,cAACD,GAAD,CAAWC,gBAAiBP,EAA5B,0BAEX,IAAK,YACD,OAAO,cAACM,GAAD,CAAWC,gBAAiBP,EAA5B,2BAEX,IAAK,aACD,OAAO,cAACM,GAAD,CAAWC,gBAAiBN,EAA5B,oBAEX,IAAK,aACD,OAAO,cAACK,GAAD,CAAWC,gBAAiBN,EAA5B,oBAEX,IAAK,YACD,IAAIO,EAAY,2CAChB,GAAiB,MAAb1d,EAAK1B,KAAc,CACnB,IAAMA,EAAO0B,EAAK1B,KAClBof,EAAY,iCAAOpf,EAAKlI,KAAZ,OAAuB,cAACunB,GAAD,CAAO9pB,MAAM,YAAb,wBAA6C,cAAC+pB,GAAD,UAAStf,EAAKqO,WAElG,OAAO,qCACH,cAAC6Q,GAAD,CAAWC,gBAAiBJ,EAA5B,kBACA,cAACQ,GAAD,UAAiBH,OAIzB,IAAK,aACD,IAAItnB,EAAO,MACX,GAAiB,MAAb4J,EAAK1B,KAELlI,EADa4J,EAAK1B,KACNlI,KAEhB,OAAO,qCACH,cAAConB,GAAD,CAAWC,gBAAiBJ,EAA5B,mBACA,cAACQ,GAAD,UAAiBznB,OAGzB,IAAK,gBACD,OAAO,cAAConB,GAAD,CAAWC,gBAAiBN,EAA5B,mBAEX,IAAK,eACD,OAAO,cAACK,GAAD,CAAWC,gBAAiBL,EAA5B,8BAEX,IAAK,aACL,IAAK,YACD,OAAO,cAACI,GAAD,CAAWC,gBAAiBL,EAA5B,2BAEX,IAAK,eACD,OAAO,cAACI,GAAD,CAAWC,gBAAiBN,EAA5B,sBAEX,IAAK,cACD,OAAO,cAACK,GAAD,CAAWC,gBAAiBL,EAA5B,6BAEX,IAAK,YACD,IAAIM,EAAY,uCACZ7pB,EAAQwpB,EACRlZ,GAAY,EAChB,GAAiB,MAAbnE,EAAK1B,KAAc,CAAC,IAAD,EACbA,EAAO0B,EAAK1B,KAClBof,EAAY,iCAAOpf,EAAK8Q,GAAZ,OAAqB,cAACuO,GAAD,CAAO9pB,MAAM,YAAb,SAA0ByK,EAAKyB,YAC5C,WAAhBzB,EAAKyB,SACL2d,EAAY,iCAAOpf,EAAK8Q,GAAZ,OAAqB,eAACuO,GAAD,CAAO9pB,MAAM,YAAb,UAA0ByK,EAAKyB,OAA/B,WAAqD,cAAC6d,GAAD,UAAStf,EAAK+B,aAExG,UAAI/B,EAAKuB,eAAT,WACIhM,EA1EE,UA2EFsQ,GAAY,GAGpB,OAAQ,qCACJ,cAACqZ,GAAD,CAAWC,gBAAiB5pB,EAAOsQ,UAAWA,EAA9C,0BACcxT,GAAb+sB,EAAyB,6BAAQ,cAACG,GAAD,UAAiBH,OAI3D,IAAK,aACL,IAAK,gBACL,IAAK,YACD,IAAMpf,EAAO0B,EAAK1B,KACdnP,EAAwB,GACxB2T,EAAS,EAWb,OAVAxE,EAAKyE,aAAa3T,SAAQ,SAACqT,EAAS7T,GAChC,IAAIoU,EAAM,cAAC8a,GAAD,UAAqBrb,GAAJ7T,GAC3B,GAAgB,QAAZ6T,EAAmB,CACnB,IAAMC,EAAIpE,EAAKzB,OAAOiG,GACGE,EAAV,WAAXN,EAAElT,KAAyB,cAACouB,GAAD,sBAAuBlb,EAAE5S,MAAzB,MAAalB,GACjC,+BAAe8T,EAAE5S,OAANlB,GACtBkU,IAEJ3T,EAAOe,KAAK8S,MAET,qCACH,eAACwa,GAAD,CAAWC,gBApGP,UAoGJ,kBAA8C,eAACM,GAAD,mBAAiBzf,EAAKlI,KAAtB,UAC9C,cAACynB,GAAD,UAAiB1uB,OAIzB,IAAK,iBACD,IAAMmP,EAAO0B,EAAK1B,KACdnP,EAAwB,GACxB2T,EAAS,EAWb,OAVAxE,EAAKyE,aAAa3T,SAAQ,SAACqT,EAAS7T,GAChC,IAAIoU,EAAM,cAAC8a,GAAD,UAAqBrb,GAAJ7T,GAC3B,GAAgB,QAAZ6T,EAAmB,CACnB,IAAMC,EAAIpE,EAAKzB,OAAOiG,GACGE,EAAV,WAAXN,EAAElT,KAAyB,cAACouB,GAAD,sBAAuBlb,EAAE5S,MAAzB,MAAalB,GACjC,+BAAe8T,EAAE5S,OAANlB,GACtBkU,IAEJ3T,EAAOe,KAAK8S,MAET,qCACH,eAACwa,GAAD,CAAWC,gBArHH,UAqHR,sBAAsD,eAACM,GAAD,mBAAiBzf,EAAKlI,KAAtB,UACtD,cAACynB,GAAD,UAAiB1uB,OAIzB,IAAK,aACD,IAAI6uB,EAAU,uCACVN,EAAY,uCAChB,GAAiB,MAAb1d,EAAK1B,KAAc,CACnB,IAAMA,EAAO0B,EAAK1B,KAClB0f,EAAU,eAACD,GAAD,mBAAiBzf,EAAKlI,KAAtB,OACV,IAAIjH,EAAwB,GACxB2T,EAAS,EACbxE,EAAKyE,aAAa3T,SAAQ,SAACqT,EAAS7T,GAChC,IAAIoU,EAAM,cAAC8a,GAAD,UAAqBrb,GAAJ7T,GAC3B,GAAgB,QAAZ6T,EAAmB,CACnB,IAAMC,EAAIpE,EAAKzB,OAAOiG,GACGE,EAAV,WAAXN,EAAElT,KAAyB,cAACouB,GAAD,sBAAuBlb,EAAE5S,MAAzB,MAAalB,GACjC,+BAAe8T,EAAE5S,OAANlB,GACtBkU,IAEJ3T,EAAOe,KAAK8S,MAEhB0a,EAAY,mCAAGvuB,IAEnB,OAAO,qCACH,eAACquB,GAAD,CAAWC,gBAAiBH,EAA5B,kBAA+CU,KAC/C,cAACH,GAAD,UAAiBH,OAGzB,IAAK,gBACD,IAAIA,EAAY,uCAChB,GAAiB,MAAb1d,EAAK1B,KAAc,CACnB,IAAMA,EAAO0B,EAAK1B,KAClBof,EAAY,iCAAOpf,EAAKlI,KAAK,eAAC6nB,GAAD,mBAAoB3f,EAAKuL,UAAzB,UAEjC,OAAO,qCACH,eAAC2T,GAAD,CAAWC,gBAAiBH,EAA5B,qBAAiD,cAACS,GAAD,OACjD,cAACF,GAAD,UAAiBH,OAGzB,IAAK,WACD,OAAO,cAACF,GAAD,CAAWC,gBAAiBN,EAA5B,kBAEX,IAAK,gBACD,OAAO,cAACK,GAAD,CAAWC,gBAAiBL,EAA5B,8BAEX,IAAK,iBACD,IAAIM,EAAY,uCAChB,GAAiB,MAAb1d,EAAK1B,KAAc,CACnB,IAAMA,EAAO0B,EAAK1B,KAClBof,EAAY,iCAAOpf,EAAKlI,KAAK,eAAC6nB,GAAD,mBAAoB3f,EAAKpF,MAAzB,UAEjC,OAAO,qCACH,cAACskB,GAAD,CAAWC,gBA5KH,UA4KR,uBACA,cAACI,GAAD,UAAiBH,OAGzB,IAAK,aACD,OAAO,cAACF,GAAD,CAAWC,gBAAiBL,EAA5B,4BAEX,IAAK,cACD,IAAIhnB,EAAO,MACX,GAAiB,MAAb4J,EAAK1B,KAELlI,EADa4J,EAAK1B,KACNlI,KAEhB,OAAO,qCACH,cAAConB,GAAD,CAAWC,gBAAiBJ,EAA5B,oBACA,cAACQ,GAAD,UAAiBznB,OAGzB,IAAK,gBACD,OAAO,cAAConB,GAAD,CAAWC,gBAAiBN,EAA5B,uBAEX,IAAK,cACD,OAAO,cAACK,GAAD,CAAWC,gBAAiBL,EAA5B,8BAEX,IAAK,eACD,IAAIM,EAAY,uCAChB,GAAiB,MAAb1d,EAAK1B,KAAc,CACnB,IAAMA,EAAO0B,EAAK1B,KAClBof,EAAY,iCAAOpf,EAAKlI,KAAK,eAAC6nB,GAAD,mBAAoB3f,EAAK8E,IAAzB,SAA+B9E,EAAK+E,IAApC,UAEjC,OAAO,qCACH,eAACma,GAAD,CAAWC,gBAAiBH,EAA5B,qBAAiD,cAACS,GAAD,OACjD,cAACF,GAAD,UAAiBH,OAGzB,IAAK,eACD,OAAO,cAACF,GAAD,CAAWC,gBAAiBN,EAA5B,kBAEX,IAAK,cACD,OAAO,cAACK,GAAD,CAAWC,gBAAiBL,EAA5B,2BAEX,IAAK,eACD,IAAIM,EAAY,uCAChB,GAAiB,MAAb1d,EAAK1B,KAAc,CACnB,IAAMA,EAAO0B,EAAK1B,KAClBof,EAAY,iCAAOpf,EAAKlI,KAAK,eAAC6nB,GAAD,mBAAoB3f,EAAKyB,OAAzB,UAEjC,OAAO,qCACH,eAACyd,GAAD,CAAWC,gBAAiBJ,EAA5B,kBAA6C,cAACU,GAAD,OAC7C,cAACF,GAAD,UAAiBH,OAI7B,OAAO,cAACF,GAAD,CAAWC,gBAAiB,UAA5B,oBAGa,cAAG,SAACxZ,GACxB,GAAY,MAARA,EAAc,MAAO,GAEzB,OADcA,EAAK3F,KAAqB9O,MAEpC,IAAK,OAAQ,MAAO,OACpB,IAAK,WAAY,MAAO,eACxB,IAAK,YAAa,MAAO,gBACzB,IAAK,YAAa,MAAO,YACzB,IAAK,aAAc,MAAO,aAC1B,IAAK,eAAgB,MAAO,mBAC5B,IAAK,aACL,IAAK,YAAa,MAAO,gBACzB,IAAK,aAAc,MAAO,aAC1B,IAAK,aAAc,MAAO,iBAC1B,IAAK,eACL,IAAK,gBAAiB,MAAO,gBAC7B,IAAK,aAAc,MAAO,iBAC1B,IAAK,eAAgB,MAAO,mBAC5B,IAAK,cAAe,MAAO,kBAC3B,IAAK,YAAa,MAAO,oBACzB,IAAK,gBAAiB,MAAO,gBAC7B,IAAK,WAAY,MAAO,eACxB,IAAK,YAAa,MAAO,YACzB,IAAK,aAAc,MAAO,aAC1B,IAAK,iBAAkB,MAAO,iBAC9B,IAAK,gBAAiB,MAAO,oBAC7B,IAAK,gBAAiB,MAAO,oBAC7B,IAAK,iBAAkB,MAAO,iBAC9B,IAAK,aAAc,MAAO,iBAC1B,IAAK,cAAe,MAAO,cAC3B,IAAK,cAAe,MAAO,mBAC3B,IAAK,eAAgB,MAAO,OAC5B,IAAK,cAAe,MAAO,gBAC3B,IAAK,eAAgB,MAAO,eAIL,qBAAG,SAACyU,GAC/B,GAAY,MAARA,EAAc,OAAO,6BAEzB,OADcA,EAAK3F,KAAqB9O,MAEpC,IAAK,OAAQ,OAAO,6BACpB,IAAK,WAAY,OAAO,cAAC,GAAD,IACxB,IAAK,YAAa,OAAO,cAAC,GAAD,IACzB,IAAK,YAAa,OAAO,cAAC,GAAD,IACzB,IAAK,aAAc,OAAO,cAAC,GAAD,IAC1B,IAAK,eAAgB,OAAO,cAAC,GAAD,IAC5B,IAAK,gBAAiB,OAAO,cAAC,GAAD,IAC7B,IAAK,aACL,IAAK,YAAa,OAAO,cAAC,GAAD,IACzB,IAAK,aAAc,OAAO,cAAC,GAAD,IAC1B,IAAK,aAAc,OAAO,cAAC,GAAD,IAC1B,IAAK,eAAgB,OAAO,cAAC,GAAD,IAC5B,IAAK,cAAe,OAAO,cAAC,GAAD,IAC3B,IAAK,YAAa,OAAO,cAAC,GAAD,IACzB,IAAK,gBAAiB,OAAO,cAAC,GAAD,IAC7B,IAAK,WAAY,OAAO,cAAC,GAAD,IACxB,IAAK,aACL,IAAK,aACL,IAAK,iBACL,IAAK,gBACL,IAAK,YAAa,OAAO,cAAC,GAAD,IACzB,IAAK,gBAAiB,OAAO,cAAC,GAAD,IAC7B,IAAK,aAAc,OAAO,cAAC,GAAD,IAC1B,IAAK,cAAe,OAAO,cAAC,GAAD,IAC3B,IAAK,gBAAiB,OAAO,cAAC,GAAD,IAC7B,IAAK,iBAAkB,OAAO,cAAC,GAAD,IAC9B,IAAK,cAAe,OAAO,cAAC,GAAD,IAC3B,IAAK,eAAgB,OAAO,cAAC,GAAD,IAC5B,IAAK,eAAgB,OAAO,cAAC,GAAD,IAC5B,IAAK,eAAgB,OAAO,cAAC,GAAD,IAC5B,IAAK,cAAe,OAAO,cAAC,GAAD,MAIA,yBAAG,SAACyU,GACnC,IAAMia,EAAWja,EAAK3F,KAChB6f,EAAM,SAAC/V,GACT,OAAS8V,EAAS5f,KAAM8J,GAAsC1Z,KAAI,SAAAsR,GAC9D,IAAMoe,EAAcxa,GAASmJ,WAAW/M,EAAMiE,GAE9C,OADAma,EAAYpa,SAAWiR,EAAuBmJ,GACvCA,MAGf,OAAQF,EAAS1uB,MACb,IAAK,WACL,IAAK,YAAa,OAAO2uB,EAAI,QAC7B,IAAK,YACL,IAAK,YACL,IAAK,gBACL,IAAK,gBACL,IAAK,aAAc,OAAOA,EAAI,QAC9B,IAAK,WACL,IAAK,eACL,IAAK,aACL,IAAK,aACL,IAAK,eACL,IAAK,aAAc,OAAOA,EAAI,UAC9B,IAAK,cAAe,OAAOA,EAAI,YAC/B,IAAK,cACL,IAAK,eAAgB,OAAOA,EAAI,QAChC,IAAK,aAAc,OAAOA,EAAI,WAC9B,IAAK,aACL,IAAK,YAAa,OAAOA,EAAI,UAC7B,IAAK,gBAAiB,OAAOA,EAAI,SACjC,IAAK,cAAe,OAAOA,EAAI,WAEnC,MAAO,KAGEvX,EAAmB,sBAAG,SAACsX,GAChC,IAAMC,EAAM,SAAC/V,GAET,OAAS8V,EAAS5f,KAAM8J,GAAsC1Z,KAAI,SAAAsR,GAK9D,MAJoC,CAChC1B,KAAM0B,EACNgE,SAAU4C,EAAoB5G,QAK1C,OAAQke,EAAS1uB,MACb,IAAK,OACD,IAAMyU,EAAOia,EAAS5f,KACtB,MAAO,CACH,CAAEA,KAAM2F,EAAK+H,QAAShI,SAAU4C,EAAoB3C,EAAK+H,UACzD,CAAE1N,KAAM2F,EAAKhE,SAAU+D,SAAU4C,EAAoB3C,EAAKhE,YAGlE,IAAK,WACL,IAAK,YAAa,OAAOke,EAAI,QAC7B,IAAK,YACL,IAAK,YACL,IAAK,gBACL,IAAK,gBACL,IAAK,aAAc,OAAOA,EAAI,QAC9B,IAAK,WACL,IAAK,eACL,IAAK,aACL,IAAK,aACL,IAAK,eACL,IAAK,aAAc,OAAOA,EAAI,UAC9B,IAAK,cAAe,OAAOA,EAAI,YAC/B,IAAK,cACL,IAAK,eAAgB,OAAOA,EAAI,QAChC,IAAK,aAAc,OAAOA,EAAI,WAC9B,IAAK,aACL,IAAK,YAAa,OAAOA,EAAI,UAC7B,IAAK,gBAAiB,OAAOA,EAAI,SACjC,IAAK,cAAe,OAAOA,EAAI,WAEnC,MAAO,I,CA5jBLxX,Q,KAgkBKA,I,GAAAA,MAET6W,GAAYlwB,IAAOC,IAAV,yQAITF,KAAOgH,kBAGW,SAAA5G,GAAK,OAAIA,EAAMgwB,mBAEjC,SAAAhwB,GAAK,aAAI,UAAEA,EAAM0W,iBAAR,SAAmC/W,YAAnC,qGAA8B,MASvC2wB,GAAUzwB,IAAO6kB,KAAV,qDAIP0L,GAAiBvwB,IAAOC,IAAV,uPACdF,KAAOgH,kBAUPspB,GAAQrwB,IAAO6kB,KAAV,+CAGE,SAAA1kB,GAAK,OAAIA,EAAMoG,SAEtBoqB,GAAa3wB,IAAO6kB,KAAV,qDAGV2L,GAAaxwB,IAAO6kB,KAAV,qDAGVyL,GAAStwB,IAAO6kB,KAAV,oD,YC/nBD,IAAM1D,EAAY,eAAG,SACxBxK,GAC8B,IAE9B,IAAIhG,EAAmCgG,EAFT,mBADCoa,EACD,iCADCA,EACD,kBAS9B,OANAA,EAASnR,MAAK,SAAA1d,GACV,GAAW,MAAPyO,EAAa,OAAO,EACxB,IAAM/M,EAAS+M,EAAI+F,SAAS7P,MAAK,SAAAsQ,GAAK,OAAKA,EAAMnG,KAA+B9O,OAASA,KAChEyO,OAAXtN,GAAVO,EAA2B,KACpBA,KAER+M,GAWEuN,GARiB,oBAAG,SAC7BvH,GACwB,IAAD,uBADQoa,EACR,iCADQA,EACR,kBACvB,IAAMC,EAAY7P,EAAY,WAAZ,GAAaxK,GAAb,OAAsBoa,IACxC,GAAiB,MAAbC,EAAmB,MAAM,IAAI5N,MAAM,wBACvC,OAAO4N,GAGc,eAAG,SACxBte,GAC+B,IAE/B,IAAI/B,EAAoC+B,EAFT,mBADCqe,EACD,iCADCA,EACD,kBAc/B,OAXAA,EAASnR,MAAK,SAAA1d,GACV,GAAW,MAAPyO,EAAa,OAAO,EACxB,IAAMmK,EAAWE,EAAiBrK,EAAIzO,MACtC,GAAgB,MAAZ4Y,EAAkBnK,EAAM,SACvB,CACD,IACM/M,EADO+M,EAAIK,KAAJ,UAAY8J,IACLjU,MAAK,SAAAsQ,GAAK,OAAIA,EAAMjV,OAASA,KACxByO,OAAXtN,GAAVO,EAA2B,KACpBA,MAGZ+M,IAeEkQ,GAZiB,oBAAG,SAC7BnO,GACyB,IAAD,uBADQqe,EACR,iCADQA,EACR,kBACxB,IAAME,EAAY/S,EAAY,WAAZ,GAAaxL,GAAb,OAAsBqe,IACxC,GAAiB,MAAbE,EAAmB,MAAM,IAAI7N,MAAM,wBACvC,OAAO6N,GAGU,WAAG,SAACtQ,EAAoChK,GACzD,OAAOkK,EAAYF,EAAahK,EAAMA,EAAKD,SAASzU,SAGhC,cAAG,SAAC0e,EAAoChK,EAA4B+J,GACxF,IAAMhO,EAAOiE,EAAK3F,KACZ8J,EAAWE,EAAiBtI,EAAKxQ,MACvCwQ,EAAK1B,KAAL,UAAa8J,IAAYF,OAAO8F,EAAS,EAAGC,GAC5C,IAAMtF,EAAU/E,GAASmJ,WAAWkB,EAAahK,GAEjD,OADAA,EAAKD,SAASkE,OAAO8F,EAAS,EAAGrF,GAC1BA,IA6BEsT,GA1BW,cAAG,SAAChY,EAA4B+J,EAAiB4E,GACrE,IAAM5S,EAAOiE,EAAK3F,KACZ8J,EAAWE,EAAiBtI,EAAKxQ,MACvCwQ,EAAK1B,KAAL,UAAa8J,IAAYF,OAAO8F,EAAS4E,GACzC3O,EAAKD,SAASkE,OAAO8F,EAAS4E,IAGP,iBAAG,SAAC3O,GAC3B,IAAMjE,EAAOiE,EAAK3F,KACZ8J,EAAWE,EAAiBtI,EAAKxQ,MACvCwQ,EAAK1B,KAAL,UAAa8J,IAAY7Y,OAAS,EAClC0U,EAAKD,SAASzU,OAAS,GAGR,SAAG,SAAC0U,GACnB,OAAmB,MAAfA,EAAKJ,QACaI,EAAKJ,OAAOG,SACb,IAAMC,GAGZ,SAAG,SAACA,GACnB,GAAmB,MAAfA,EAAKJ,OAAgB,OAAO,EAChC,IAAM2a,EAAgBva,EAAKJ,OAAOG,SAClC,OAAOwa,EAAcA,EAAcjvB,OAAS,IAAM0U,GAG1B,kBAAG,SAACA,GAAgC,IAAD,EACrDkE,EAAU,UAAGlE,EAAKJ,cAAR,aAAG,EAAavF,KAC1B8J,EAAWE,EAAiBH,EAAW3Y,MAC7C,OAAgB,MAAZ4Y,GAAuC,MAAnBD,EAAW7J,MAAsB,EAC5C6J,EAAW7J,KAAK8J,GACPqW,WAAU,SAAAze,GAAI,OAAIA,GAAQiE,EAAK3F,UAInDogB,EAAY,SAACza,EAA4BlJ,GAC3C,GAAmB,MAAfkJ,EAAKJ,OAAT,CACA,IAAM2a,EAAgBva,EAAKJ,OAAOG,SAC5BhE,EAAOiE,EAAKJ,OAAOvF,KACnB8J,EAAWE,EAAiBtI,EAAKxQ,MACjCmvB,EAAkB3e,EAAK1B,KAAL,UAAa8J,IAEjCwW,EAAQ3C,EAAgBhY,GAC5B,IAAe,IAAX2a,EAAJ,CAGA,IAAMvC,EAAWmC,EAAcI,GAC/BJ,EAAcI,GAASJ,EAAcI,EAAQ7jB,GAC7CyjB,EAAcI,EAAQ7jB,GAAUshB,EAEhC,IAAMwC,EAAWF,EAAgBC,GACjCD,EAAgBC,GAASD,EAAgBC,EAAQ7jB,GACjD4jB,EAAgBC,EAAQ7jB,GAAU8jB,KAiBzB3C,GAdc,iBAAG,SAC1BjY,EACAiC,GAEE,IAAD,uBADE4Y,EACF,iCADEA,EACF,kBACD,OAAO5C,EAAuBjY,EAAMiC,GAAY,SAAC8V,EAAUG,GACnD2C,EAAmBvvB,OAAS,GAC5BuvB,EAAmB1vB,SAAQ,SAAA2vB,GACvBL,EAAUK,EAAQ/a,SAASgY,GAAWG,GAAW,EAAI,UAMlC,yBAAG,SAClClY,EACAiC,EACAhY,GAEA,IAAM8tB,EAAWC,EAAgBhY,GACjC,OAAO,qCACH,cAAC,IAASlV,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,cACPqC,UAAW+X,GAAiB2W,OAAO/a,GACnC/V,SAAU,WACNwwB,EAAUza,GAAO,GACjB/V,EAAS8tB,GAAU,GACnB9V,SAKhB,cAAC,IAASnX,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,cACPqC,UAAW+X,GAAiB4W,OAAOhb,GACnC/V,SAAU,WACNwwB,EAAUza,EAAM,GAChB/V,EAAS8tB,GAAU,GACnB9V,cA8EXoC,GAjEkB,qBAAG,SAACrE,EAA4B+G,GAC3D,GAAmB,MAAf/G,EAAKJ,OAAT,CACA,IAAM7D,EAAOiE,EAAK3F,KACZ4gB,EAAYlf,EAAK1B,KACjB6gB,EAAYrK,KAAKC,MAAMD,KAAKE,UAAWkK,IAEvCrK,EAAiC,CACnCrlB,KAAMwQ,EAAKxQ,KACX8O,KAAM6gB,GAEJC,EAAUC,EAAgBrf,EAAKxQ,MACrCqlB,EAAQvW,KAAK8gB,GAAWpU,EAGxB,IAAMrC,EAAUN,GAAiBO,SAASiM,EAAS5Q,EAAKJ,QAExD8E,EAAQ3E,SAAW2C,GAAUsO,uBAAuBtM,KAGzB,qBAAG,SAC9B1E,EACA3T,EACAgvB,EAAuB1xB,EACvBC,EACAqY,GAEA,IAAMlG,EAAOiE,EAAK3F,KAClB,OAAO,cAAC,IAASvP,aAAV,CACHC,MAAM,SACNhB,QAAS,CAAC,CACNC,MAAO,YACPqC,WAEApC,SAAU,WACNN,EAAMO,OAAOC,OAAS,cAAC,KAAc2Y,UAAf,CAClBvY,QAAO,yBAAoB8wB,EAApB,KACPtxB,QAAS,CACL,CACIC,MAAO,SACPC,SAAU,WACNN,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,MAGtB,CACIK,MAAO,QACPC,SAAU,WACN,IAAMkxB,EAAU/W,GAAiBgX,gBAAgBrf,EAAKxQ,MAChD4G,EAAO4J,EAAK1B,KAAK8gB,GACjBpU,EAAU3C,GAAiBwL,yBAAjB,UAA6Czd,EAA7C,KAAsD6N,EAAKJ,QAC3EwE,GAAiBkX,mBAAmBtb,EAAM+G,GAC1Cpd,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,IAEdsY,SAKhBrY,EAAS,eAAKD,UAMD,mBAAG,SAAC4B,GAC7B,OAAQA,GACJ,IAAK,WACL,IAAK,YAAa,MAAO,OACzB,IAAK,YACL,IAAK,YACL,IAAK,gBACL,IAAK,gBAEL,IAAK,aAAc,MAAO,OAC1B,IAAK,WACL,IAAK,eACL,IAAK,aACL,IAAK,aACL,IAAK,eACL,IAAK,aAAc,MAAO,SAC1B,IAAK,cAAe,MAAO,WAC3B,IAAK,cACL,IAAK,eAAgB,MAAO,OAC5B,IAAK,aAAc,MAAO,UAC1B,IAAK,aACL,IAAK,YAAa,MAAO,SACzB,IAAK,gBAAiB,MAAO,QAC7B,IAAK,cAAe,MAAO,UAE/B,OAAO,OAGEgwB,EAAoB,uBAAG,SAAChwB,GACjC,OAAQA,GACJ,IAAK,gBACL,IAAK,aACL,IAAK,YACL,IAAK,iBACL,IAAK,eACL,IAAK,cACL,IAAK,eACL,IAAK,aAAc,MAAO,OAC1B,IAAK,YAAa,MAAO,KAE7B,OAAO,MAGE6vB,EAAe,kBAAG,SAAC7vB,GAC5B,OAAQA,GACJ,IAAK,YAAa,MAAO,KACzB,IAAK,YACL,IAAK,gBACL,IAAK,eACL,IAAK,aACL,IAAK,cACL,IAAK,iBACL,IAAK,aAAc,MAAO,OAE9B,MAAM,IAAIkhB,MAAM,6BAGPwD,EAAuB,0BAAG,SAACjQ,GACpC,IAAMjE,EAAOiE,EAAK3F,KACZ8J,EAAWE,EAAiBtI,EAAKxQ,MACvB,MAAZ4Y,GACHpI,EAAK1B,KAAK8J,GAAoBhZ,SAAQ,SAAAqwB,GACnC,IAAM9W,EAAU/E,GAASmJ,WAAW0S,EAAWxb,GAC/CA,EAAKD,SAAS9T,KAAKyY,GACnBuL,EAAwBvL,OAOnB+W,GAHe,kBAAG,SAAClwB,EAA0BmwB,GACtD,MAAO,CAAEnwB,KAAMA,EAAM8O,KAAMqhB,IAEC,sBAAG,SAACnwB,EAA0BmwB,GAC1D,OAAOA,EAAcjxB,KAAI,SAAA4P,GACrB,MAAO,CAAE9O,KAAMA,EAAM8O,KAAMA,QAItBshB,EAAkB,qBAAG,WAC9B,IAAMpwB,EAAO2N,EAAUT,gBACvB,OAAOgjB,EAAoB,aAAc,CACrC,CAAEtpB,KAAM5G,EAAKgS,OAAQuB,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,QAC9E,CAAEsG,KAAM5G,EAAKkS,QAASqB,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,SAC/E,CAAEsG,KAAM5G,EAAKoS,QAASmB,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,SAC/E,CAAEsG,KAAM5G,EAAKsS,QAASiB,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,SAC/E,CAAEsG,KAAM5G,EAAKwS,QAASe,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,YAI1E+vB,EAAoB,uBAAG,WAChC,IAAMptB,EAAkC,GAClCjD,EAAO2N,EAAUR,kBAqBvB,OApBAlK,EAAKvC,KAAK,CACNkG,KAAM5G,EAAKyP,MACX8D,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,SAE7D2C,EAAKvC,KAAK,CACNkG,KAAM5G,EAAK0P,MACX6D,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,QAE7D2C,EAAKvC,KAAK,CACNkG,KAAM5G,EAAK2P,MACX4D,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,QAE7D2C,EAAKvC,KAAK,CACNkG,KAAM5G,EAAK6P,MACX0D,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,QAE7D2C,EAAKvC,KAAK,CACNkG,KAAM5G,EAAK8P,MACXyD,aAAc,CAAC,OAAQlG,OAAQ,CAAC,CAAErN,KAAM,SAAUM,MAAO,QAEtD4vB,EAAoB,aAAcjtB,IAgMhCqtB,GA7LmB,sBAAG,WAC/B,MAAO,CACH,CACItwB,KAAM,aACN8O,KAAM,CACFM,OAAQghB,MAGhB,CACIpwB,KAAM,eACN8O,KAAM,CACFM,OAAQihB,QAMG,iBAAG,WAC1B,MAAO,CACHrwB,KAAM,OACN8O,KAAM,CACF0N,QAAS,CACLxc,KAAM,WACN8O,KAAM,CACF4B,KAAM,KAGdD,SAAU,CACNzQ,KAAM,YACN8O,KAAM,CACF4B,KAAM,QAYG,mBAAG,SAAC+D,GAAgC,IAAD,EACtD8b,EAAqB,GACrBC,EAAU/b,EAAK3F,KACf2hB,EAAYT,EAAqBQ,EAAQxwB,MACzC0wB,EAAO,UAAGjc,EAAKJ,cAAR,aAAG,EAAavF,KACvB6hB,EAAY7X,EAAiB4X,EAAQ1wB,MAC3C,GAAiB,MAAb2wB,GAAkC,MAAbF,EAAmB,MAAMvP,MAAM,4CAOxD,OANawP,EAAQ5hB,KAAK6hB,GACrB/wB,SAAQ,SAAA4Q,GACQ,MAAbA,EAAK1B,MAAgB0hB,GAAWhgB,GAChC+f,EAAS7vB,KAAK8P,EAAK1B,KAAK2hB,OAGzBF,GAGkB,mBAAG,SAAC7U,GAC7B,IAAM6U,EAAqB,GAM3B,OALA7U,EAAIhL,KAAK9Q,SAAQ,SAAAuc,GACK,MAAdA,EAAMrN,MACNyhB,EAAS7vB,KAAMyb,EAAMrN,KAAiClI,SAGvD2pB,GAGkB,mBAAG,SAACK,GAC7B,IAAML,EAAqB,GAG3B5iB,EAAUkjB,aAAajxB,SAAQ,SAAAgH,GAC3B2pB,EAAS7vB,KAAKkG,MAElB+G,EAAUmjB,eAAelxB,SAAQ,SAAAgH,GAC7B2pB,EAAS7vB,KAAKkG,MAElB+G,EAAUgU,WAAW/hB,SAAQ,SAAAgH,GACzB2pB,EAAS7vB,KAAKkG,MAElB+G,EAAUojB,aAAanxB,SAAQ,SAAAgH,GAC3B2pB,EAAS7vB,KAAKkG,MAElB+G,EAAUqjB,aAAapxB,SAAQ,SAAAgH,GAC3B2pB,EAAS7vB,KAAKkG,MAElB+G,EAAUsjB,eAAerxB,SAAQ,SAAAgH,GAC7B2pB,EAAS7vB,KAAKkG,MAElB+G,EAAUujB,UAAUtxB,SAAQ,SAAAgH,GACxB2pB,EAAS7vB,KAAKkG,MAIlB,IAAMma,EAAS6P,EAAc/hB,KAAKlK,MAAK,SAAA+W,GAAG,MAAiB,iBAAbA,EAAI1b,aACpCmB,GAAV4f,GACcA,EAAOjS,KAAuCqQ,KACvDvf,SAAQ,SAAAohB,GACO,MAAZA,EAAIlS,MACJyhB,EAAS7vB,KAAMsgB,EAAIlS,KAAoClI,SAKnE,IAAMgI,EAAWgiB,EAAc/hB,KAAKlK,MAAK,SAAA+W,GAAG,MAAiB,cAAbA,EAAI1b,aACpCmB,GAAZyN,GACgBA,EAASE,KAAoCC,OACtDnP,SAAQ,SAAAoP,GACO,MAAdA,EAAMF,MACNyhB,EAAS7vB,KAAMsO,EAAMF,KAAiClI,SAIlE,OAAO2pB,GAQ0B,2BAAG,SAACY,EAAgB1c,GAGrD,IAFA,IAAIR,EAAM,IAEG,CAOT,QAAa9S,GANCsT,EAAKD,SAAS7P,MAAK,SAAAsQ,GAC7B,IAAMzE,EAAOyE,EAAMnG,KACnB,OAAiB,MAAb0B,EAAK1B,OACT2N,QAAQC,IAAIlM,GACLA,EAAK1B,KAAK+gB,EAAgBrf,EAAKxQ,SAA/B,UAA6CmxB,GAA7C,OAAsDld,OAG5D,MADmBA,IAG5B,MAAM,GAAN,OAAUkd,GAAV,OAAmBld,IASkB,+BAAG,SAACQ,EAA4B/V,GAAwB,IAAD,IAEtF0yB,GAAU,UAAC3c,EAAKJ,cAAN,aAAC,EAAavF,MAA+B9O,KAQvDsQ,EAAS,UAPM,WAAO,IAAD,YACvB,OAAQ8gB,GACJ,IAAK,YACL,IAAK,eAAgB,iBAAO3c,EAAKJ,cAAZ,iBAAO,EAAaA,cAApB,aAAO,EAAqBvF,KACjD,IAAK,aAAc,iBAAO2F,EAAKJ,cAAZ,iBAAO,EAAaA,cAApB,iBAAO,EAAqBA,cAA5B,iBAAO,EAA6BA,cAApC,aAAO,EAAqCvF,MAGrDuiB,UAAH,aAAG,EAAgBviB,KAClC,GAAgB,iBAAZsiB,EAA4B,CAC5B,IAAMxiB,EAAW0B,EAAUzB,KAAKlK,MAAK,SAAA+W,GAAG,MAAiB,cAAbA,EAAI1b,aAChCmB,GAAZyN,GACAlQ,EAAUkQ,EAASE,KAAoCC,QAG/D,GAAgB,eAAZqiB,EAA0B,CAC1B,IAAMzV,EAAYrL,EAAUzB,KAAKlK,MAAK,SAAA+W,GAAG,MAAiB,eAAbA,EAAI1b,aAChCmB,GAAbwa,GACAjd,EAAUid,EAAU7M,KAAoCM,QAE5D,IAAMwM,EAActL,EAAUzB,KAAKlK,MAAK,SAAA+W,GAAG,MAAiB,iBAAbA,EAAI1b,aAChCmB,GAAfya,GACAld,EAAUkd,EAAY9M,KAAoCM,QAGlE,IAAMyM,EAASvL,EAAUzB,KAAKlK,MAAK,SAAA+W,GAAG,MAAiB,gBAAbA,EAAI1b,aAChCmB,GAAV0a,GACCA,EAAO/M,KAAsCoB,SAAStQ,SAAQ,SAAAkc,GAAQ,IAAD,IAClE,GAAgB,eAAZsV,EAA0B,CAC1B,IAAMrV,EAASlD,GAAiBmD,aAAaF,EAAK,cAEpC,MAAVC,GACArd,EAAUqd,EAAOjN,KAAoCC,QAI7DrQ,GAAS,UAACma,GAAiBmD,aAAaF,EAAK,qBAApC,aAAC,EAAkDhN,MAAoCM,QAEhG1Q,GAAS,UAACma,GAAiBmD,aAAaF,EAAK,mBAApC,aAAC,EAAgDhN,MAAoCM,YAKjF,eAAG,SAACd,EAAiCgjB,GAC1D,IACM5J,EADOpZ,EAASQ,KACH0N,QAAQ1N,KAAmC4B,KAAK/L,MAAK,SAAAgM,GAEpE,OADiBA,EAAI7B,KACLlI,OAAS0qB,KAE7B,QAAYnwB,GAARumB,EAAmB,MAAM,IAAIxG,MACjC,OAAOwG,IAGe,gBAAG,SAACpZ,EAAiCijB,EAAsBjoB,GACjF,IAAM6e,EAAWmI,EAAahiB,EAAUijB,EAAKD,QACvC5J,EAAOS,EAASrZ,KAyBtBxF,EAAM5I,KAAK,IAAI2I,EAASqI,SACpBiC,GAAYsV,gBAAgB3f,EAxBd,WAAO,IAAD,EAGpB,iBAFagF,EAASQ,KACC2B,SAAmC3B,KAC1C4B,KAAK/L,MAAK,SAAA6L,GAAI,OAAKA,EAAK1B,KAAiClI,OAAS8gB,EAAKvK,gBAAvF,aAAO,EAAwFrO,KAqB5D0iB,GAAaljB,EAlBzB,WACvB,IACM6E,EADa0F,GAAiByD,kBAAkB6L,EAAU,gBAAiB,eAAerZ,KACpEqQ,KAAKjgB,KAAI,SAACsR,EAAMpR,GAExC,MAAO,CAAEwH,KADO4J,EAAK1B,KACElI,KAAMtG,MAAOixB,EAAKlkB,OAAOjO,OAK9CypB,EADUhQ,GAAiByD,kBAAkB6L,EAAU,gBAAiB,gBAAgBrZ,KACnEM,OAAOlQ,KAAI,SAAA4pB,GAAI,OAAIA,EAAKha,QACnD,OAAO+Z,EAAW3pB,KAAI,SAAAoE,GAClB,IAAMhD,EAAQqT,GAAYpE,qBAAqBjM,EAAKsD,KAAMiiB,EAAY1V,GACtE,QAAahS,GAATb,EAAoB,MAAM,IAAI4gB,MAAJ,WAAc5d,EAAKsD,KAAnB,8FAC9B,MAAO,CAAEA,KAAMtD,EAAKsD,KAAMtG,YAK4BmxB,OAWpC,oBAAG,SAACnjB,EAAiCgjB,GAC/D,IAAMnJ,EAAWmI,EAAahiB,EAAUgjB,GAClC5J,EAAOS,EAASrZ,KAQhBsc,EADavS,GAAiByD,kBAAkB6L,EAAU,gBAAiB,eAAerZ,KACjEqQ,KAAKjgB,KAAI,SAAAsR,GAAI,OAAIA,EAAK1B,QAE/C4iB,EADc7Y,GAAiByD,kBAAkB6L,EAAU,gBAAiB,gBAAgBrZ,KACjEM,OAAOlQ,KAAI,SAAAsR,GAAI,OAAIA,EAAK1B,QAEnD6iB,EADe9Y,GAAiByD,kBAAkB6L,EAAU,iBAAiBrZ,KAChD6Y,MAAMzoB,KAAI,SAAAsR,GAAI,OAAIA,EAAK1B,QAE1D,MAAO,CACH4Y,OAAMvL,MAbQ,WAAO,IAAD,EAGpB,iBAFa7N,EAASQ,KACC2B,SAAmC3B,KAC1C4B,KAAK/L,MAAK,SAAA6L,GAAI,OAAKA,EAAK1B,KAAiClI,OAAS8gB,EAAKvK,gBAAvF,aAAO,EAAwFrO,KAUlF0iB,GAAapG,cAAasG,eAAcC,kB,CAlmBvD9Y,Q,KAumBKA,ICjnBR,G,0CDinBQA,ME1iBA+Y,GAlEe,SAAC3zB,GAGxB,IAAD,EAE8BmE,mBAAoC,IAFlE,mBAEKynB,EAFL,KAEeC,EAFf,KAIInJ,EAAyBrL,mBAAQ,WACnC,IAAIrS,EAAiB,GACf6hB,EAAUjM,GAAiBmD,aAAa/d,EAAM4zB,UAAW,gBAO/D,OANe,MAAX/M,IACA7hB,EAAQ6hB,EAAQhW,KAAuCqQ,KAAKjgB,KAAI,SAAA8hB,GAE5D,OADgBA,EAAIlS,KACLlI,SAGhB3D,IACR,IAqBH,OAnBA7G,qBAAU,WACN0tB,EAAYnJ,EAAazhB,KAAI,SAAA8hB,GACzB,MAAO,CAAE1gB,MAAO0gB,EAAKlhB,OAAQ,UAElC,IAGH1D,qBAAU,gBAC+C+E,GAAjD0oB,EAASllB,MAAK,SAAAqlB,GAAI,OAAIA,EAAKlqB,OAAOC,OAAS,KAC3C9B,EAAM6zB,oBAAmB,WACrB,OAAOjI,EAAS3qB,KAAI,SAAC8qB,EAAM5qB,GACvB,MAAO,CAAEwH,KAAM+Z,EAAazhB,KAAI,SAAA8hB,GAAG,OAAIA,KAAK5hB,GAAIkB,MAAOqC,OAAOqnB,EAAK1pB,cAI3ErC,EAAM6zB,mBAAmB,QAE9B,CAACjI,IAEG,mCACHA,EAAS3qB,KAAI,SAAC8qB,EAAM5qB,GAChB,IAAM6qB,EAAWtJ,EAAavhB,GAC9B,OAAQ,cAAC,IAASqb,WAAV,CAEJrZ,WAAY6oB,EACZloB,WAAY,IACZF,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPiE,UAAQ,EACR1C,UAAWmqB,EACXppB,aAAc,WACVkpB,EAAYD,EAAS3mB,UAEzB/C,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,gBAdtBvB,SCmDN2yB,GA7Fc,SAAC9zB,GAGvB,IAAD,EAE8BmE,mBAAoC,IAFlE,mBAEKynB,EAFL,KAEeC,EAFf,OAG8B1nB,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAHrF,mBAGKkyB,EAHL,KAGeC,EAHf,OAKqI3c,mBAAQ,WAC3I,IAAM4c,EAAcrZ,GAAiBmD,aAAa/d,EAAMkqB,SAAU,gBAAiB,eAC/EyB,EAA2C,GAU/C,OATmB,MAAfsI,IACAtI,EAAesI,EAAYpjB,KAAsCqc,QAAQjsB,KAAI,SAAAyR,GAAG,OAAIA,EAAI7B,SAQrF,CAAC8a,EALQ/Q,GAAiByD,kBAAkBre,EAAMkqB,SAAU,gBAAiB,eACtDrZ,KAAsCqQ,KAAKjgB,KAAI,SAAA8hB,GAAG,OAAIA,EAAIlS,QAErE+J,GAAiByD,kBAAkBre,EAAMkqB,SAAU,cACvCrZ,KAAqC8Y,QAAQ1oB,KAAI,SAAAsR,GAAI,OAAIA,EAAK1B,WAE9F,IAlBD,mBAKK8a,EALL,KAKkBwB,EALlB,KAK+B+G,EAL/B,KAkDF,OA7BA/1B,qBAAU,WACN0tB,EAAYsB,EAAYlsB,KAAI,SAAA8hB,GACxB,IAAI1gB,EAAQ,GAEZ,YADkBa,GAAd6f,EAAIqK,SAAqB/qB,EAAQ0gB,EAAIqK,OAAOvoB,YACzC,CAAExC,QAAOR,OAAQ,UAE7B,IAEH1D,qBAAU,gBAC+C+E,GAAjD0oB,EAASllB,MAAK,SAAAqlB,GAAI,OAAIA,EAAKlqB,OAAOC,OAAS,KAC3C9B,EAAM6zB,oBAAmB,WACrB,IAAM3e,EAAW0W,EAAS3qB,KAAI,SAAC8qB,EAAM5qB,GACjC,MAAO,CAAEwH,KAAMwkB,EAAYlsB,KAAI,SAAA8hB,GAAG,OAAIA,EAAIpa,QAAMxH,GAAIkB,MAAOqC,OAAOqnB,EAAK1pB,WAKrEuoB,EADUhQ,GAAiByD,kBAAkBre,EAAMkqB,SAAU,gBAAiB,gBAAgBrZ,KACzEM,OAAOlQ,KAAI,SAAA4pB,GAAI,OAAIA,EAAKha,QACnD,OAAO+Z,EAAW3pB,KAAI,SAAAoE,GAClB,IAAMhD,EAAQqT,GAAYpE,qBAAqBjM,EAAKsD,KAAMiiB,EAAY1V,GACtE,QAAahS,GAATb,EAAoB,MAAM,IAAI4gB,MAAJ,WAAc5d,EAAKsD,KAAnB,8FAC9B,MAAO,CAAEA,KAAMtD,EAAKsD,KAAMtG,eAIlCrC,EAAM6zB,mBAAmB,QAE9B,CAACjI,IAEI,qCACJ,cAAC,IAAS3Q,YAAV,CACIjV,MAAM,SACNE,SAAU,cAAC,IAAS2a,OAAV,CACNjd,IAAK,qCACD,cAAC,IAASkZ,SAAV,CACIzc,MAAO,IACPuB,UAAWmyB,EACXpxB,aAAcqxB,EACdjvB,WAAS,EACTC,KAAMkvB,EAAWjzB,KAAI,SAACspB,EAAQppB,GAC1B,MAAO,CACHgE,UAAWolB,EAAO5hB,KAClBtG,MAAOlB,EAAE0D,iBAIrB,cAAC,IAASsvB,WAAV,CACI1uB,OAAQ,CACJjF,MAAO,QACPqC,SAA6B,KAAnBkxB,EAAS1xB,MACnB5B,SAAU,WACN,IAAM2zB,EAAgB1vB,OAAOqvB,EAAS1xB,OACvB6xB,EAAWE,GAAehlB,OAClCzN,SAAQ,SAACU,EAAOlB,GACnByqB,EAASzqB,GAAGkB,MAAQA,EAAMwC,cAE9BgnB,EAAYD,EAAS3mB,oBAO5CymB,GAAc2B,mBACX,EAAOF,EAAaxB,EAAaC,EAAUC,Q,GF7FtCwI,Q,KAoBG,IAAG,SAACr0B,GAKhB,IAL6C,IAAD,EACtCs0B,EAAQ,UAAGt0B,EAAMu0B,sBAAT,QAA2B,EACnClpB,EAA6B,GAC/BI,EAAQ,IAEC,CACTzL,EAAMw0B,UAAU/oB,EAAOJ,GAEvB,IAAK,IAAIlK,EAAIkK,EAAMvJ,OAAS,EAAGX,GAAK,EAAGA,IAAK,CACxC,IAAMszB,EAAWppB,EAAMlK,GAGvBszB,EAAS3oB,SAGJ2oB,EAAS9oB,QACVN,EAAMoP,OAAOtZ,EAAG,GAIxB,GAAIsK,EAAQzL,EAAM00B,YACdrpB,EAAMvJ,OAAS9B,EAAM20B,eACrBlpB,EAAQ6oB,GAA6B,IAAjBjpB,EAAMvJ,OAC5B,MACF2J,SAGevI,GAAflD,EAAM40B,OACN50B,EAAM40B,MAAMnpB,EAAOJ,IAIL,aAAG,SAACrL,EAAyBqL,EAA4BwpB,EAAoBC,GAK/F,IALyH,IAAD,EAClHR,EAAQ,UAAGt0B,EAAMu0B,sBAAT,QAA2B,EAGrC9oB,EAAQopB,EACLppB,EAAQopB,EAAaC,GAAc,CACtC90B,EAAMw0B,UAAU/oB,EAAOJ,GAEvB,IAAK,IAAIlK,EAAIkK,EAAMvJ,OAAS,EAAGX,GAAK,EAAGA,IAAK,CACxC,IAAMszB,EAAWppB,EAAMlK,GAGvBszB,EAAS3oB,SAGJ2oB,EAAS9oB,QACVN,EAAMoP,OAAOtZ,EAAG,GAIxB,GAAIsK,EAAQzL,EAAM00B,YACdrpB,EAAMvJ,OAAS9B,EAAM20B,eACrBlpB,EAAQ6oB,GAA6B,IAAjBjpB,EAAMvJ,OAC5B,MACqBoB,GAAflD,EAAM40B,OACN50B,EAAM40B,MAAMnpB,EAAOJ,GAEvB,MAEJI,OGpEFspB,Q,KAKgB,UAAG,SAAC/0B,GAInB,IAAD,EAC0BC,qBAAWC,IAA/BC,EADN,EACMA,MAAOC,EADb,EACaA,SACTwW,EAAMC,iBAAuB,IAFjC,EAI0B1S,mBAAmB,IAJ7C,mBAIK6wB,EAJL,KAIaC,EAJb,OAK8B9wB,oBAAkB,GALhD,mBAKK4mB,EALL,KAKemK,EALf,OAM8B/wB,mBAAiB,GAN/C,mBAMKsV,EANL,KAMe0b,EANf,OAOoBhxB,mBAAiB,GAPrC,mBAOKqM,EAPL,KAOU4kB,EAPV,OAQ0BjxB,oBAAkB,GAR5C,mBAQKkxB,EARL,KAQcC,EARd,OAS8BnxB,mBAAiB,GAT/C,gCAUwBA,oBAAkB,IAV1C,mBAUKoxB,EAVL,KAUaC,EAVb,OAY4CrxB,mBAAkD,MAZ9F,mBAYKsxB,EAZL,KAYsB5B,EAZtB,KAcI6B,EAA+B,cAAtB11B,EAAMuZ,OAAOxX,KAE5B5D,qBAAU,WACFo3B,IACI/kB,EAAMua,EACNT,YAAW,WACP8K,EAAO5kB,EAAM,KACd,IAAO,KAEVglB,GAAQ,GACRJ,EAAO,OAGhB,CAACG,EAAQ/kB,IAEZrS,qBAAU,WACFk3B,GAAS3hB,MACd,CAAC2hB,IAEJ,IAAM3hB,EAAQ,WACV,GAAuB,MAAnB+hB,EAAJ,CACAL,EAAO,GACP,IAAMJ,EAAmB,GACzBX,GAAUsB,IAAI,CACVjB,WAAY,IACZC,cAAe,IACfH,UAAW,SAAC/oB,EAAOJ,GACD,IAAVI,GAUAJ,EAAM5I,KAAK,IAAI2I,EAASqI,SACpBiC,GAAYsV,gBAAgB3f,EAVd,WACd,GAAKqqB,EACA,CAAC,IAAD,EACKjM,EAAOzpB,EAAMuZ,OAAO1I,KAG1B,iBAFa7Q,EAAMqQ,SAASQ,KACL2B,SAAmC3B,KAC1C4B,KAAK/L,MAAK,SAAA6L,GAAI,OAAKA,EAAK1B,KAAiClI,OAAS8gB,EAAKvK,gBAAvF,aAAO,EAAwFrO,KALtF,OAAO7Q,EAAMuZ,OAAO1I,KASE0iB,GAAavzB,EAAMqQ,SAAUolB,KAIxET,EAAOvyB,KAAKoH,EAAWP,UAAU,IAAK,KAAK,SAACI,GAGxC2B,EAAM1J,SAAQ,SAAAspB,GACVA,EAAI1hB,KAAKG,MAIbA,EAAIgE,YAAc,EAClBhE,EAAIQ,KAAO,aACXR,EAAIS,UAAY,UAChBT,EAAIU,SAAJ,UAAgBqB,GAAS,EAAG,IAC5B/B,EAAIS,UAAY,UAChBT,EAAIU,SAAJ,UAAgBiB,EAAMvJ,QAAU,EAAG,SAK3C8yB,MAAO,SAACnpB,GACJypB,EAAYzpB,GACZwpB,EAAUD,GAEVM,GAAS,GACTH,EAAY,QAKlB1Z,EAA+B,MAAnBga,EAEZG,EACF,eAAC,GAAD,WACI,cAAC,GAAD,CAAQ/yB,SAAUwyB,EAAlB,SAEI,cAACQ,GAAD,gCAEJ,cAACC,GAAD,CACIJ,OAA8B,cAAtB11B,EAAMuZ,OAAOxX,KADzB,SAGM2zB,EAME,cAAC,GAAD,CACIxL,SAAUlqB,EAAMuZ,OAChBsa,mBAAoBA,IAPxB,cAAC,GAAD,CACID,UAAW5zB,EAAMuZ,OACjBsa,mBAAoBA,MAShC,cAAC,IAASvyB,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,QACPqC,SAAU4Y,IAAc4Z,EACxB50B,SAAU,WACN60B,GAAS,WAQ3BS,EACF,eAAC,GAAD,WACI,cAAC,GAAD,UACuB,IAAlBf,EAAOlzB,OAAe,6BAAQ,cAAC,GAAD,CAAMupB,IAAK2J,EAAOxkB,OAErD,cAACwlB,GAAD,CAAcpf,IAAKA,EAAKjR,QAAS,SAACpH,GAC9B,IAAIg3B,EAAJ,CACA,IAAMU,EAAS13B,EAAE23B,MAEXC,EAAavf,EAAIc,QAAQ0e,wBAKzB9nB,GADI2nB,GAHQE,EAAWE,KAAOC,OAAOC,cAI1BJ,EAAW91B,MAC5B+0B,EAAOvqB,KAAKgC,MAAMke,EAAWzc,MAVjC,SAYI,cAACkoB,GAAD,CAAcloB,KAAM,IAAMkC,EAAMua,MAEpC,cAAC,IAASzpB,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,SACPH,MAAO,GACPwC,UAAW0yB,GAAU/kB,EAAM,EAC3B/P,SAAU,WACN20B,EAAO5kB,EAAM,KAGrB,CACIhQ,MAAO,SACPH,MAAO,GACPwC,UAAW0yB,GAAU/kB,EAAMwkB,EAAOlzB,OAAS,EAC3CrB,SAAU,WACN20B,EAAO5kB,EAAM,KAGrB,CACIhQ,MAAQ+0B,EAAmB,OAAV,QACjB90B,SAAU,WACN+0B,GAASD,KAGjB,CACI/0B,MAAO,QACPqC,UAAW0yB,EACX90B,SAAU,WACN20B,EAAO,WAQ/B,OACI,eAAC,GAAD,CACI/0B,MA3LE,IA4LFC,OA3LG,IA4LHmZ,SAAU,EACVC,UAAW,SAACnb,GACR,GAAiB,IAAbkb,EACIgC,GAAuB,MAAVld,EAAEG,KAAagV,SAEhC,OAAQnV,EAAEG,KACN,IAAK,aACI62B,IAAWA,GAAU/kB,EAAM,GAAG4kB,EAAO5kB,EAAM,GAClD,MACF,IAAK,cACI+kB,GAAU/kB,EAAMwkB,EAAOlzB,OAAS,GAAGszB,EAAO5kB,EAAM,GACvD,MACF,IAAK,IACDglB,GAASD,GAIhBA,GAAoB,WAAVh3B,EAAEG,MACbyB,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,MAtB1B,UA2BI,cAACU,GAAD,UACI,cAAC,EAAD,CACI2H,YAAa,CACT,CAAEG,KAAM,QAASE,QAAQ,EAAMI,KAAM2sB,GACrC,CAAEjtB,KAAM,OAAQE,QAAsB,IAAdkiB,EAAiB9hB,KAAM8sB,IAEnD3tB,SAAUqR,EACV1Q,eAAgB,SAACL,GAAD,OAAmBysB,EAAYzsB,QAGvD,cAAC+tB,GAAD,CACI5zB,UAAW0yB,EACX5vB,QAAS3F,EAAMwZ,kBAFnB,sBASDub,I,2BAAAA,MAETn0B,GAASf,IAAOC,IAAV,0WAOU,SAAAE,GAAK,OAAIA,EAAMM,OAAS,KACvB,SAAAN,GAAK,OAAIA,EAAMK,MAAQ,KACjC,SAAAL,GAAK,OAAIA,EAAMK,SACd,SAAAL,GAAK,OAAIA,EAAMM,UAQvBO,GAAQhB,IAAOC,IAAV,iIAMLg2B,GAAWj2B,IAAOC,IAAV,kKAOR,SAAAE,GAAK,OAAKA,EAAM01B,OAAc/1B,YAArB,wEAAgB,MAKzB6rB,GAAa3rB,IAAOC,IAAV,uNAEH4V,GAAYzF,aACXyF,GAAYxF,eAOpBwI,GAAQ7Y,IAAOC,IAAV,0JAQLk2B,GAAen2B,IAAOC,IAAV,+NASZ02B,GAAe32B,IAAOC,IAAV,0OAKL,SAAAE,GAAK,OAAIA,EAAMsO,QAMtB8c,GAAOvrB,IAAO4rB,IAAV,wHAOJgL,GAAe52B,IAAOC,IAAV,6bAkBZ,SAAAE,GAAK,OAAIA,EAAM6C,SAAW,GAAKjD,KAAO+G,sBAOtCuB,GAASrI,IAAOC,IAAV,mKAGG,SAAAE,GAAK,OAAKA,EAAM6C,SAAqB,gBAAV,WAQpCgzB,GAAOh2B,IAAOC,IAAV,8OCxWA42B,Q,KAKgB,UAAG,SAAC12B,GAGnB,IAAD,EAC0BC,qBAAWC,IAA/BC,EADN,EACMA,MAAOC,EADb,EACaA,SACTwW,EAAMC,iBAAuB,IAFjC,EAG8B1S,mBAAiB,GAH/C,mBAGKsV,EAHL,KAGe0b,EAHf,OAIoBhxB,mBAAiB,GAJrC,mBAIKqM,EAJL,KAIU4kB,EAJV,OAKwBjxB,oBAAkB,GAL1C,mBAKKoxB,EALL,KAKaC,EALb,KAOIR,EAASh1B,EAAMg1B,OACfjK,EAAW/qB,EAAM+qB,SAEvB5sB,qBAAU,WACFo3B,IACI/kB,EAAMua,EACNT,YAAW,WACP8K,EAAO5kB,EAAM,KACd,IAAO,KAEVglB,GAAQ,GACRJ,EAAO,OAGhB,CAACG,EAAQ/kB,IAGZ,IAAMulB,EACF,eAAC,GAAD,WACI,cAAC,GAAD,UACuB,IAAlBf,EAAOlzB,OAAe,6BAAQ,cAAC,GAAD,CAAMupB,IAAK2J,EAAOxkB,OAErD,cAAC,GAAD,CAAcoG,IAAKA,EAAKjR,QAAS,SAACpH,GAC9B,IAAM03B,EAAS13B,EAAE23B,MAEXC,EAAavf,EAAIc,QAAQ0e,wBAKzB9nB,GADI2nB,GAHQE,EAAWE,KAAOC,OAAOC,cAI1BJ,EAAW91B,MAC5B+0B,EAAOvqB,KAAKgC,MAAMke,EAAWzc,KATjC,SAWI,cAAC,GAAD,CAAcA,KAAM,IAAMkC,EAAMua,MAEpC,cAAC,IAASzpB,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,SACPH,MAAO,GACPwC,UAAW0yB,GAAU/kB,EAAM,EAC3B/P,SAAU,WACN20B,EAAO5kB,EAAM,KAGrB,CACIhQ,MAAO,SACPH,MAAO,GACPwC,UAAW0yB,GAAU/kB,EAAMwkB,EAAOlzB,OAAS,EAC3CrB,SAAU,WACN20B,EAAO5kB,EAAM,KAGrB,CACIhQ,MAAQ+0B,EAAmB,OAAV,QACjB90B,SAAU,WACN+0B,GAASD,KAGjB,CACI/0B,MAAO,QACPqC,UAAW0yB,EACX90B,SAAU,WACN20B,EAAO,WAQ/B,OACI,eAAC,GAAD,CACI/0B,MAvFE,IAwFFC,OAvFG,IAwFHmZ,SAAU,EACVC,UAAW,SAACnb,GACR,OAAQA,EAAEG,KACN,IAAK,aACI62B,IAAWA,GAAU/kB,EAAM,GAAG4kB,EAAO5kB,EAAM,GAClD,MACF,IAAK,cACI+kB,GAAU/kB,EAAMwkB,EAAOlzB,OAAS,GAAGszB,EAAO5kB,EAAM,GACvD,MACF,IAAK,IACDglB,GAASD,GAGH,WAAVh3B,EAAEG,MACFyB,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,MAlB1B,UAsBI,cAAC,GAAD,UACI,cAAC,EAAD,CACIqI,YAAa,CACT,CAAEG,KAAM,OAAQE,QAAQ,EAAMI,KAAM8sB,IAExC3tB,SAAUqR,EACV1Q,eAAgB,SAACL,GAAD,OAAmBysB,EAAYzsB,QAGvD,cAAC,GAAD,CACI7F,UAAW0yB,EACX5vB,QAAS,WACLxF,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,KAJtB,sBAYDu2B,I,mMAAAA,MAET91B,GAASf,IAAOC,IAAV,6UAOU,SAAAE,GAAK,OAAIA,EAAMM,OAAS,KACvB,SAAAN,GAAK,OAAIA,EAAMK,MAAQ,KACjC,SAAAL,GAAK,OAAIA,EAAMK,SACd,SAAAL,GAAK,OAAIA,EAAMM,UAOvBO,GAAQhB,IAAOC,IAAV,iIAML0rB,GAAa3rB,IAAOC,IAAV,uNAEH4V,GAAYzF,aACXyF,GAAYxF,eAOpBwI,GAAQ7Y,IAAOC,IAAV,iIAOLk2B,GAAen2B,IAAOC,IAAV,+NASZ02B,GAAe32B,IAAOC,IAAV,0OAKL,SAAAE,GAAK,OAAIA,EAAMsO,QAMtB8c,GAAOvrB,IAAO4rB,IAAV,wHAOJgL,GAAe52B,IAAOC,IAAV,6bAkBZ,SAAAE,GAAK,OAAIA,EAAM6C,SAAW,GAAKjD,KAAO+G,sBCI7BgwB,GAtLW,SAAC32B,GAEpB,IAAD,EAC4BmE,mBAA0B,MADtD,mBACKyyB,EADL,KACcC,EADd,OAEgC1yB,mBAA4B,MAF5D,mBAEKwD,EAFL,KAEgBmvB,EAFhB,OAGgD3yB,mBAAmC,MAHnF,mBAGK4yB,EAHL,KAGwBC,EAHxB,OAIkC7yB,mBAA6B,MAJ/D,mBAIK8yB,EAJL,KAIiBC,EAJjB,OAM4B/yB,oBAAU,GANtC,mBAMKgzB,EANL,KAMcC,EANd,KAQFj5B,qBAAU,WAENk5B,GAAYr3B,EAAMs3B,YAAYx4B,MAAK,SAAAy4B,GAC/B,GAAIA,EAAQz1B,OAAS,EAAG,CACpB,IAAM01B,EAAMD,EAAQ,GACd5uB,EAAO6uB,EAAI7uB,KACX8uB,EAAUD,EAAInsB,MACdqsB,EAAUF,EAAIE,QACd7mB,EAAOwW,KAAKC,MAAMqQ,IAASC,MAAMJ,EAAIK,SAE3C,GAAKhnB,EAAKinB,eAAe,gBAiBlB,CACH,IAAMC,EAAgBlnB,EACtBimB,EAAa,CACTnuB,OAAM8uB,UAASC,UAAShwB,YAAaqwB,EAAcrwB,YAAaswB,aAAcD,EAAcC,mBApB1D,CACtC,IAAM3nB,EAAWQ,EAEXonB,EADW5nB,EAASQ,KAA4B0N,QAAQ1N,KACxB4B,KACjCoK,QAAO,SAAAtK,GAEJ,MAAuB,YADVA,EAAK1B,KACNyY,UAEfroB,KAAI,SAAAsR,GACD,IAAMkX,EAAOlX,EAAK1B,KAEZqnB,EADStd,GAAiByD,kBAAkB9L,EAAM,gBAAiB,eAChD1B,KAAsCqQ,KAAKpf,OACpE,MAAO,CAAE6G,KAAM8gB,EAAK9gB,KAAMwgB,KAAMM,EAAKN,KAAM+O,WAAU3e,OAAQhH,MAErEskB,EAAW,CACPluB,OAAM8uB,UAASC,UAASrnB,WAAU4nB,oBAUnD,IAEH95B,qBAAU,WACN,GAAkB,MAAd84B,GAAmC,MAAbtvB,EAA1B,CAEA,IAAMwwB,EAAWxwB,EAAUqwB,aAAaG,SAClCzD,EAAa/sB,EAAUqwB,aAAatD,WACpCC,EAAgBhtB,EAAUqwB,aAAarD,cACvCL,EAAW6D,EAAS,GAAG1sB,MACvB2sB,EAAYzwB,EAAUD,YACA,IAAxBuvB,EAAWoB,UACXhE,GAAUsB,IAAI,CACVjB,aACAC,gBACAJ,eAAgBD,EAChBE,UAAW,SAAC/oB,EAAOJ,GACf8sB,EAAS1Y,MAAK,SAAA6T,GACV,GAAIA,EAAK7nB,QAAUA,EACfmP,GAAiB0d,cAAcF,EAAW9E,EAAMjoB,QAC7C,GAAIioB,EAAK7nB,MAAQA,EAAO,OAAO,MAG9CmpB,MAAO,SAACnpB,GACJwrB,EAAWoB,SAAW5sB,KAG9ByrB,EAAc,eAAKD,MAGnB5C,GAAUkE,UAAU,CAChB7D,aACAC,gBACAJ,eAAgBD,EAChBE,UAAW,SAAC/oB,EAAOJ,GAEf8sB,EAAS1Y,MAAK,SAAA6T,GACV,GAAIA,EAAK7nB,QAAUA,EACfmP,GAAiB0d,cAAcF,EAAW9E,EAAMjoB,QAC7C,GAAIioB,EAAK7nB,MAAQA,EAAO,OAAO,KAG1CwrB,EAAWjC,OAAOvyB,KAAKoH,EAAWP,UAAU,IAAK,KAAK,SAACI,GAEnD2B,EAAM1J,SAAQ,SAAAspB,GACVA,EAAI1hB,KAAKG,MAEbA,EAAIa,YAGZqqB,MAAO,WACHoC,EAAqB,CACjBhC,OAAQiC,EAAWjC,OAAQqD,SAAUpB,EAAWoB,aAGzDpB,EAAW5rB,MAAO4rB,EAAWuB,SArGvB,GAsGTvB,EAAWuB,UAtGF,EAuGTtB,EAAc,eAAKD,QAExB,CAACA,IA4EJ,OA9De,WACX,IAAIrzB,EAAM,6BACV,GAAe,MAAXgzB,EAEIhzB,GADa,IAAbuzB,EACM,qCACF,cAACsB,GAAD,UAAU7B,EAAQjuB,OACjBiuB,EAAQqB,SAASh3B,KAAI,SAACwoB,EAAMtoB,GAAO,IAAD,EACzBu3B,EAAQ,UAAGjP,EAAKN,YAAR,QAAgBM,EAAK9gB,KACnC,OAAQ,eAACgwB,GAAD,CACJhzB,QAAS,WACLyxB,EAAWj2B,IAFX,UAKJ,cAACy3B,GAAD,UAAYF,IACZ,eAACG,GAAD,gBAAYpP,EAAKyO,SAAjB,mBANgB/2B,SAWtB,cAAC,GAAkBmY,UAAnB,CACFC,OAAQqd,EAAQqB,SAASd,GAAS5d,OAClClJ,SAAUumB,EAAQvmB,SAClBmJ,kBAAmB,WACf4d,GAAY,WAIrB,GAAiB,MAAbzvB,EACP,GAAyB,MAArBovB,EAA2B,CAY3BnzB,EAAM,qCAXc,WAChB,GAAkB,MAAdqzB,EAAoB,OAAO,6BAC/B,IAAM3oB,EAAO2oB,EAAWuB,SAAWvB,EAAWoB,SAAW,IACnDS,EAAoC,IAAxB7B,EAAWoB,SAC7B,OACI,eAAC,GAAD,WACI,cAACU,GAAD,UAAc,cAAC,GAAD,CAAczqB,KAAMA,MAClC,cAAC0qB,GAAD,CAAUF,UAAWA,EAArB,SAAiCA,EAAY,iBAAH,UAAyBjuB,KAAKgC,MAAMyB,GAApC,UAKjD2qB,GACD,cAACR,GAAD,UAAU9wB,EAAUgB,OACpB,cAAC,IAASrH,aAAV,CAAuBC,MAAM,SAAShB,QAAS,CAC3C,CACIC,MAAO,QACPC,SAFJ,WApDhBy2B,EAAc,CACVmB,SAAU,EACVG,SAAU,EACVntB,MAAO,GACP2pB,OAAQ,kBAyDJpxB,EAAM,cAAC,GAAqB0V,UAAtB,CACF0b,OAAQ+B,EAAkB/B,OAC1BjK,SAAUgM,EAAkBsB,WAIxC,OAAOz0B,EAGJs1B,IAML7B,GAAW,uCAAG,WAAO8B,GAAP,iBAAA9rB,EAAA,sEACOsqB,IAASyB,sBAAsB,SAA/B,2JAGLD,EAHK,WADP,cACVE,EADU,gBAMMA,EAASC,OANf,cAMVC,EANU,yBAOTA,GAPS,2CAAH,sDAUXrxB,GAASrI,IAAOC,IAAV,oMAWNi5B,GAAel5B,IAAOC,IAAV,+PAYZ02B,GAAe32B,IAAOC,IAAV,iIAIL,SAAAE,GAAK,OAAIA,EAAMsO,QAKtB0qB,GAAWn5B,IAAOC,IAAV,6UAUR,SAAAE,GAAK,OAAKA,EAAM84B,UAAiBn5B,YAAxB,2DAAmB,MAW5B84B,GAAU54B,IAAOC,IAAV,iVAeP64B,GAAQ94B,IAAOC,IAAV,4TAcL84B,GAAY/4B,IAAO6kB,KAAV,mDAKTmU,GAAUh5B,IAAO6kB,KAAV,mDCvOE8U,GAjFI,SAACx5B,GAEb,IAAD,EAE4BmE,oBAAS,GAFrC,mBAEKs1B,EAFL,KAEelQ,EAFf,OAG0BplB,mBAAqB,CAAEu1B,QAAS,EAAGC,OAAQ,EAAGrrB,KAAM,IAH9E,mBAGKsrB,EAHL,KAGaC,EAHb,KAIIjjB,EAAMC,iBAA8B,MAEpCygB,EAAaK,IAASmC,0BAA0B95B,EAAM+5B,SAEtDjuB,EAAS,WACX,GAAmB,MAAf8K,EAAIc,QAAiB,CAGrB,IAAMsiB,EAAOpjB,EAAIc,QAAQ0e,wBAHJ,EAIe,CAAC4D,EAAK35B,MAAO25B,EAAK15B,QAA/C25B,EAJc,KAIDC,EAJC,KASfC,EAAYD,EAtBC,IAsBmBD,EAvBpB,IAyBZ3rB,EAAQ6rB,EAAgCF,EAzB5B,IAyBQC,EAxBP,IA4BnBL,EAAU,CAAEH,QAHKS,EAAgD,EAApCF,EAAc,EA1BzB,IA0BmC3rB,EAAO,EAGvCqrB,OAFLQ,EAAgBD,EAAe,EA1B5B,IA0BsC5rB,EAAO,EAApC,EAECA,WAmBrCnQ,qBAAU,WACN2N,IACA0S,QAAQC,IAAI2b,UAAUC,WAClBC,MACA/Q,EAAiC,IAAvB+M,OAAOiE,aAEhBD,KAKDhE,OAAOkE,iBAAiB,4BAA4B,WAChDC,MAAM,UACN3uB,IACAyd,EAAiC,IAAvB+M,OAAOiE,gBAPrBjE,OAAOkE,iBAAiB,UAAU,WAC9B1uB,SAST,IAEH,IAAIlI,EAAM,cAAC82B,GAAD,6CAQV,OAPIjB,IACA71B,EACI,cAAC,GAAD,UACI,cAAC,GAAD,CAAmB0zB,WAAYA,OAKvC,cAAC,GAAD,CAAO1gB,IAAKA,EAAZ,SACI,cAAC,GAAD,CAAQyf,KAAMuD,EAAOF,QAASiB,IAAKf,EAAOD,OAAQrrB,KAAMsrB,EAAOtrB,KAA/D,SACK1K,OAQX02B,GAAe,WAEjB,QAAIF,UAAUC,UAAUO,MAAM,2BAO5BliB,GAAQ7Y,IAAOC,IAAV,uOAWLc,GAASf,IAAOC,IAAV,8MAOH,SAAAE,GAAK,OAAIA,EAAM26B,OACd,SAAA36B,GAAK,OAAIA,EAAMq2B,QAIJ,SAAAr2B,GAAK,OAAIA,EAAMsO,QAG9BjF,GAAYxJ,IAAOC,IAAV,wHAzHe,IACC,KA+HzB46B,GAAS76B,IAAOC,IAAV,qSC9HC+6B,GAAc,SAAC76B,GAA6B,IAAD,EACpBmE,mBAASnE,EAAMoI,UADK,mBAC7CA,EAD6C,KACnCC,EADmC,KAgBpD,OAJAlK,qBAAU,WACNkK,EAAYrI,EAAMoI,YACnB,CAACpI,EAAMoI,WAGN,qCACI,cAAC,GAAD,UAEQpI,EAAMwI,YAAYvH,KAAI,SAACwH,EAAKC,GACxB,OAAO,cAAC,GAAD,CACSC,KAAMF,EAAIE,KAAMmyB,KAAMryB,EAAIqyB,KAAMlyB,SAAUF,GAASN,EAAUvF,SAAU4F,EAAI5F,SACvFiG,UAAW,kBAnBZ,SAACJ,QACQxF,GAAxBlD,EAAM+I,eACN/I,EAAM+I,eAAeL,GAErBL,EAAYK,GAeqBK,CAAeL,KAD3BA,QAMrB,cAAC,GAAD,UAEQ1I,EAAMwI,YAAYvH,KAAI,SAACwH,EAAKC,GACxB,OAAO,cAAC,GAAD,CAA6BO,KAAMR,EAAIQ,KAAML,SAAUF,IAAUN,GAA3CM,YAQ/CqyB,GAAe,SAAC/6B,GAOlB,OACI,eAAC,GAAD,CACI6C,SAAU7C,EAAM6C,SAChB+F,SAAU5I,EAAM4I,SAChBjD,QAAS,kBAAM3F,EAAM8I,aAHzB,UAKI,cAACkyB,GAAD,UAAQh7B,EAAM86B,OACd,cAACG,GAAD,UAASj7B,EAAM2I,WAKrBuyB,GAAkB,SAACl7B,GAIrB,OACI,cAAC,GAAD,CAAW4I,SAAU5I,EAAM4I,SAA3B,SACK5I,EAAMiJ,QAKbV,GAAa1I,IAAOC,IAAV,yTAYVkJ,GAAYnJ,IAAOC,IAAV,kRAWTuJ,GAAYxJ,IAAOC,IAAV,+MAST,SAAAE,GAAK,OAAKA,EAAM4I,SAAiCjJ,YAAxC,kDAAkBA,YAAlB,6CAGTg5B,GAAQ94B,IAAOC,IAAV,8XASL,SAAAE,GACE,OAAIA,EAAM4I,SACCjJ,YAAP,iIAKOA,YAAP,wHAMN,SAAAK,GAAK,OAAIA,EAAM6C,SAAW,GAAKjD,KAAO+G,sBAMtC,SAAA3G,GAAK,OAAIA,EAAM4I,SAAW,GAAKjJ,YAAtB,uRAiBTq7B,IALYr7B,YAAH,6FAKDE,IAAOC,IAAV,gQAYLm7B,GAASp7B,IAAOC,IAAV,kO,kBCDGq7B,GApKW,WAAO,IAAD,EACAl7B,qBAAWC,IAA/BC,EADoB,EACpBA,MADoB,KACbC,SAEa+D,mBAAkC,CAAE9B,MAAO,KAAMR,OAAQ,MAHzD,mBAGrBu5B,EAHqB,KAGbC,EAHa,OAIJl3B,mBAAkC,CAAE9B,MAAO,IAAKR,OAAQ,KAJpD,mBAIrBy5B,EAJqB,KAIfC,EAJe,OAKFp3B,mBAAkC,CAAE9B,MAAO,IAAKR,OAAQ,KALtD,mBAKrB25B,EALqB,KAKdC,EALc,OAOMt3B,mBAAmB,IAPzB,mBAOrBu3B,EAPqB,KAOVC,EAPU,KAStB3D,EAAe73B,EAAMwH,UACrB+sB,EAAasD,EAAatD,WAC1BC,EAAgBqD,EAAarD,cAC7BiH,EAAU5D,EAAaG,SAEvBC,EAAYj4B,EAAMuH,YA8DlBm0B,EAAcxkB,mBAAQ,WACxB,IACMykB,EADU,EAAIp3B,OAAO02B,EAAO/4B,OACL,EAC7B,OAAOq5B,EAAUz6B,KAAI,SAAC86B,EAAO56B,GACzB,IAAMmN,EAAOytB,EAAQpH,EACrB,OACI,cAACqH,GAAD,CACI1tB,KAAa,IAAPA,EACNhO,OAAqB,IAAbw7B,GAFQ36B,QAM7B,CAACu6B,IAEJ,OACI,eAAC,GAAD,WACI,cAAC,IAASzgB,YAAV,CACIjV,MAAM,WACNE,SAAU,qCACN,cAAC,IAASsW,WAAV,CACIrZ,WAAW,SACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPiE,UAAQ,EACR1C,UAAWw5B,EACXz4B,aAAc04B,EACdn5B,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAauW,iBAAiBpqB,EAAO,EAAG,MAC5DK,UAAW,cAM/B,cAAC,IAASpB,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,WACPqC,SAAmC,IAAzBu4B,EAAOv5B,OAAOC,QAAgB85B,EAAQ95B,OAAS,EACzDrB,SA1GZ,WACZ,IAAM6zB,EAAWsH,EAAQ,GAAGnwB,MACtBwwB,EAAU,EAAIv3B,OAAO02B,EAAO/4B,OAC5Bq5B,EAAsB,GACxBJ,EAAO,EACXjH,GAAUsB,IAAI,CACVjB,aACAC,gBACAJ,eAAgBD,EAChBE,UAAW,SAAC/oB,EAAOJ,GACf,IAAMqH,EAAMkpB,EAAQl1B,MAAK,SAAAgM,GAAG,OAAIA,EAAIjH,QAAUA,KAC9C,QAAWvI,GAAPwP,EAAkB,CAClB,IAAMwX,EAAWtP,GAAiByX,aAAa+F,EAAW1lB,EAAI2gB,QACxD5J,EAAOS,EAASrZ,KAwBtBxF,EAAM5I,KAAK,IAAI2I,EAASqI,SACpBiC,GAAYsV,gBAAgB3f,EAvBd,WAAO,IAAD,EAGpB,iBAFa+sB,EAAUvnB,KACA2B,SAAmC3B,KAC1C4B,KAAK/L,MAAK,SAAA6L,GAAI,OAAKA,EAAK1B,KAAiClI,OAAS8gB,EAAKvK,gBAAvF,aAAO,EAAwFrO,KAoB5D0iB,GAAa6E,EAlBzB,WACvB,IACMljB,EADa0F,GAAiByD,kBAAkB6L,EAAU,gBAAiB,eAAerZ,KACpEqQ,KAAKjgB,KAAI,SAACsR,EAAMpR,GAExC,MAAO,CAAEwH,KADO4J,EAAK1B,KACElI,KAAMtG,MAAOqQ,EAAItD,OAAOjO,OAK7CypB,EADUhQ,GAAiByD,kBAAkB6L,EAAU,gBAAiB,gBAAgBrZ,KACnEM,OAAOlQ,KAAI,SAAA4pB,GAAI,OAAIA,EAAKha,QACnD,OAAO+Z,EAAW3pB,KAAI,SAAAoE,GAClB,IAAMhD,EAAQqT,GAAYpE,qBAAqBjM,EAAKsD,KAAMiiB,EAAY1V,GACtE,QAAahS,GAATb,EAAoB,MAAM,IAAI4gB,MAAJ,WAAc5d,EAAKsD,KAAnB,8FAC9B,MAAO,CAAEA,KAAMtD,EAAKsD,KAAMtG,YAK6BmxB,MAInE,IAAM0I,EAAWzwB,EAAQipB,EACnByH,EAAaT,EAAU55B,OAAS,EACrBo6B,EAAWD,GACZE,GACZT,EAAUj5B,KAAK4I,EAAMvJ,QAGrBuJ,EAAMvJ,OAASw5B,IAAMA,EAAOjwB,EAAMvJ,SAE1C8yB,MAAO,SAACnpB,GACJgwB,EAAS,2BAAKD,GAAN,IAAan5B,MAAOoJ,EAAM5G,iBAG1C02B,EAAQ,2BAAKC,GAAN,IAAan5B,MAAOi5B,EAAKz2B,cAChC82B,EAAaD,aAwDT,cAAC,IAASzgB,YAAV,CACIjV,MAAM,SACNE,SAAU,qCACN,cAAC,IAASsW,WAAV,CACIrZ,WAAW,OACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPiE,UAAQ,EACR1C,UAAW05B,EACX33B,YAAU,EACVhB,aAAc44B,MAI1B,cAAC,IAAS/e,WAAV,CACIrZ,WAAW,YACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPiE,UAAQ,EACR1C,UAAW45B,EACX73B,YAAU,EACVhB,aAAc84B,MAI1B,cAACW,GAAD,UACKP,aAUnBnjB,GAAQ7Y,IAAOC,IAAV,wJAQLs8B,GAAev8B,IAAOC,IAAV,kMAQZk8B,GAAgBn8B,IAAOC,IAAV,8RAQN,SAAAE,GAAK,OAAIA,EAAMsO,QACT,SAAAtO,GAAK,OAAIA,EAAMM,UCWnB+7B,GA5MO,SAACr8B,GAQhB,IAAD,EAC0BC,qBAAWC,IAA/BC,EADN,EACMA,MAEF63B,GAHJ,EACa53B,SAEMD,EAAMwH,WAHzB,EAKsBxD,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAL7E,mBAKK4nB,EALL,KAKW6S,EALX,OAM8Bn4B,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KANrF,mBAMKkyB,EANL,KAMeC,EANf,OAO8B7vB,mBAAoC,IAPlE,mBAOKynB,EAPL,KAOeC,EAPf,KASI0Q,EAAWv8B,EAAMu8B,SACjBC,EAAcx8B,EAAMw8B,YACpB/gB,EAAmC,IAAvBgO,EAAK5nB,OAAOC,QAA2C,IAA3By6B,EAAS16B,OAAOC,aAAiEoB,GAAjD0oB,EAASllB,MAAK,SAAAqlB,GAAI,OAAIA,EAAKlqB,OAAOC,OAAS,KAGnH26B,EAAU,WACZD,EAAY,2BAAKD,GAAN,IAAgBl6B,MAAOrC,EAAM08B,QAAQjxB,MAAM5G,cACtDy3B,EAAQ,2BAAK7S,GAAN,IAAYpnB,MAAOrC,EAAM08B,QAAQrJ,OAAOxuB,cAC/CgnB,EAAY7rB,EAAM08B,QAAQttB,OAAOnO,KAAI,SAAAoB,GACjC,MAAO,CAAEA,MAAOA,EAAMwC,WAAYhD,OAAQ,SAIlD1D,qBAAU,gBACe+E,GAAjBlD,EAAM08B,UACmB,KAAzB18B,EAAM08B,QAAQrJ,QACdmJ,EAAY,2BAAKD,GAAN,IAAgBl6B,MAAO,MAClCi6B,EAAQ,2BAAK7S,GAAN,IAAYpnB,MAAO,MAC1BwpB,EAAY,KAEZ4Q,OAEL,CAACz8B,EAAM08B,UAEV,IAgBMC,EAAoBtlB,mBAAQ,WAC9B,GAAmB,KAAfoS,EAAKpnB,MAAc,OAAO,6BAE9B,IAAIqgB,EAA4C,GAC5CiJ,EAA2C,GAC3CuI,EAAyC,GAEvC0I,EAAa58B,EAAMi4B,SAASvxB,MAAK,SAAArB,GACnC,OAAOA,EAAKsD,OAAS8gB,EAAKpnB,SAO9B,YALkBa,GAAd05B,IACAla,EAAeka,EAAW1b,KAC1ByK,EAAciR,EAAWC,SACzB3I,EAAa0I,EAAWE,SAEpB,qCACJ,cAAC,IAAS7hB,YAAV,CACIjV,MAAM,SACNE,SAAU,cAAC,IAAS2a,OAAV,CACNjd,IAAK,qCACD,cAAC,IAASkZ,SAAV,CACIzc,MAAO,IACPuB,UAAWmyB,EACXpxB,aAAcqxB,EACdjvB,WAAS,EACTC,KAAMkvB,EAAWjzB,KAAI,SAACspB,EAAQppB,GAC1B,MAAO,CACHgE,UAAWolB,EAAO5hB,KAClBtG,MAAOlB,EAAE0D,eAGjBlB,YAAa3D,EAAM+Y,WAEvB,cAAC,IAASob,WAAV,CACI1uB,OAAQ,CACJjF,MAAO,QACPqC,SAA6B,KAAnBkxB,EAAS1xB,MACnB5B,SAAU,WACN,IAAM2zB,EAAgB1vB,OAAOqvB,EAAS1xB,OACvB6xB,EAAWE,GAAehlB,OAClCzN,SAAQ,SAACU,EAAOlB,GACnByqB,EAASzqB,GAAGkB,MAAQA,EAAMwC,cAE9BgnB,EAAYD,EAAS3mB,oBAO7C,cAAC,IAASgW,YAAV,CACIjV,MAAM,aACNE,SAAU,mCACNwlB,GAAc2B,mBACTrtB,EAAM+Y,SAAU2J,EAAciJ,EAAaC,EAAUC,YAKvE,CAACkI,EAAUnI,EAAU5rB,EAAM+Y,WAE9B,OACI,eAAC,GAAD,WACI,cAAC,IAASzX,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,SACPqC,SAAU7C,EAAM+Y,SAChBtY,SAAU,WACNT,EAAM+8B,eACN/I,EAAY,2BAAKD,GAAN,IAAgB1xB,MAAO,MAClCo6B,MAGR,CACIj8B,MAAQR,EAAM+Y,SAAsB,SAAX,SACzBlW,UAAW7C,EAAM+Y,UAAY0C,EAC7Bhb,SAAU,WACNT,EAAMg9B,aACFt4B,OAAO63B,EAASl6B,OAChBonB,EAAKpnB,MACLupB,EAAS3qB,KAAI,SAAA8qB,GAAI,OAAIrnB,OAAOqnB,EAAK1pB,WAErC2xB,EAAY,2BAAKD,GAAN,IAAgB1xB,MAAO,WAKlD,cAAC,IAAS4Y,YAAV,CACIjV,MAAM,OACNE,SAAU,qCACN,cAAC,IAASsW,WAAV,CACIrZ,WAAW,QACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPsD,YAAa3D,EAAM+Y,SACnBzU,UAAQ,EACR1C,UAAW26B,EACX55B,aAAc65B,EACdt6B,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAauW,iBAAiBpqB,EAAO,EAAG21B,EAAatD,aACzEhyB,UAAW,cAM/B,cAAC,IAAS8Z,WAAV,CACIrZ,WAAW,OACXS,IACI,cAAC,IAASkZ,SAAV,CACIlb,UAAW6nB,EACX9mB,aAAc,SAACf,IAvItB,SAACyxB,GAClB,IAAI3Q,EAA4C,GAE1Cka,EAAa58B,EAAMi4B,SAASvxB,MAAK,SAAArB,GACnC,OAAOA,EAAKsD,OAAS0qB,UAEPnwB,GAAd05B,IACAla,EAAeka,EAAW1b,MAE9B2K,EAAYnJ,EAAazhB,KAAI,SAAA8hB,GACzB,IAAI1gB,EAAQ,GAEZ,YADkBa,GAAd6f,EAAIqK,SAAqB/qB,EAAQ0gB,EAAIqK,OAAOvoB,YACzC,CAAExC,QAAOR,OAAQ,QA4HAo7B,CAAar7B,EAAUS,OACvBi6B,EAAQ,eAAK16B,KAEjBoD,KAAMhF,EAAMi4B,SAASh3B,KAAI,SAAAwoB,GAAS,IAAD,EAC7B,MAAO,CAAEpnB,MAAOonB,EAAK9gB,KAAMxD,UAAS,UAAEskB,EAAKN,YAAP,QAAeM,EAAK9gB,SAE5D5D,WAAS,EACT1E,MAAO,IACPsD,YAAa3D,EAAM+Y,SACnB7W,UACI,CACI,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,sBAS1Ci6B,MAOPjkB,GAAQ7Y,IAAOC,IAAV,+KC3GIo9B,IDoHDr9B,IAAOC,IAAV,wJC1Nc,SAACE,GAInB,IAAD,EAC0BC,qBAAWC,IAA/BC,EADN,EACMA,MAAOC,EADb,EACaA,SADb,EAGwB+D,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAH/E,mBAGK4J,EAHL,KAGY0e,EAHZ,OAI8BhmB,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAJrF,mBAIK4yB,EAJL,KAIe0I,EAJf,KAMItsB,EAAO1Q,EAAMwH,UAEb80B,EAAU,WACZtS,EAAS,2BAAK1e,GAAN,IAAapJ,MAAOwO,EAAK6jB,WAAW7vB,cAC5Cs4B,EAAY,2BAAK1I,GAAN,IAAgBpyB,MAAOwO,EAAK8jB,cAAc9vB,eAEzD1G,qBAAU,WACNs+B,MACD,IAEH,IAAMhhB,EAAuC,IAA3BgZ,EAAS5yB,OAAOC,QAAwC,IAAxB2J,EAAM5J,OAAOC,OAEzDs7B,EAAWvsB,EAAKsnB,SAASl3B,KAAI,SAAAyR,GAAG,OAAIA,EAAIjH,SAAO4xB,QAAO,SAACC,EAAM9sB,GAC/D,OAAO8sB,EAAO9sB,EAAM8sB,EAAO9sB,IAC5B,GAEH,OAAQ,eAAC,GAAD,WACJ,cAAC,IAASlP,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,SACPqC,SAAU7C,EAAM+Y,SAChBtY,SAAU,WACNg8B,IACAz8B,EAAM+8B,iBAGd,CACIv8B,MAAQR,EAAM+Y,SAAsB,SAAX,SACzBlW,UAAW7C,EAAM+Y,UAAY0C,EAC7Bhb,SAAU,WACNoQ,EAAK6jB,WAAahwB,OAAO+G,EAAMpJ,OAC/BwO,EAAK8jB,cAAgBjwB,OAAO+vB,EAASpyB,OACrCjC,EAAS,eAAKD,IACdH,EAAMg9B,oBAKtB,cAAC,IAAS/hB,YAAV,CACIjV,MAAM,QACNE,SAAU,qCACN,cAAC,IAASsW,WAAV,CACIrZ,WAAW,QACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPsD,YAAa3D,EAAM+Y,SACnBzU,UAAQ,EACR1C,UAAW6J,EACX9I,aAAcwnB,EACdjoB,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAauW,iBAAiBpqB,EAAO+6B,EAAU,MACnE16B,UAAW,cAM/B,cAAC,IAAS8Z,WAAV,CACIrZ,WAAW,WACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPsD,YAAa3D,EAAM+Y,SACnBzU,UAAQ,EACR1C,UAAW6yB,EACX9xB,aAAcw6B,EACdj7B,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAauW,iBAAiBpqB,EAAO,IAAK,MAC9DK,UAAW,wBAczCgW,GAAQ7Y,IAAOC,IAAV,wJCzGLy9B,GAAa,GAoFJC,GAjFO,SAACx9B,GAMhB,IAAD,EAC0BC,qBAAWC,IAA/BC,EADN,EACMA,MAEF63B,GAHJ,EACa53B,SAEMD,EAAMwH,WACrBwwB,EAAWH,EAAaG,SACxBsF,EAAYt9B,EAAMyH,kBAClB8sB,EAAasD,EAAatD,WAE1B9d,EAAMC,iBAAuB,MAE7B6mB,EAAiBrmB,mBAAQ,WAC3B,GAAGomB,EAAU37B,SAAWq2B,EAASr2B,OAAQ,MAAO,GAChD,IAAM67B,EAAe39B,EAAM49B,cAAgBlJ,EAC3C,OAAOyD,EAASl3B,KAAI,SAACqyB,EAAMnyB,GACvB,IACM4K,EAAW,KADJ/L,EAAM+Y,UAAY/Y,EAAM69B,QAAU18B,EAAIw8B,EAAerK,EAAK7nB,MAAQipB,GAEzEzoB,EAAI,EAAK,GAAD9K,EAER28B,EADQ39B,EAAMyH,kBAAkBlB,MAAK,SAAAq3B,GAAK,OAAIA,EAAMC,MAAQ1K,EAAK0K,OACrD3F,SAAW3D,EAAa,IAC1C,OAAQ,gCACH10B,EAAM+Y,UAAY/Y,EAAM69B,QAAU18B,EAC/B,cAAC88B,GAAD,CAAOlyB,EAAGA,IACV,6BACJ,cAAC,GAAD,CACIA,EAAGA,EAAGE,EAAGA,EACT6jB,QAAS3uB,IAAMnB,EAAM69B,QAEzB,cAACK,GAAD,CACInyB,EAAGA,EACHE,EAAGA,EACH6xB,IAAKA,MAXK38B,QAevB,CAACuzB,EAAY10B,EAAM69B,MAAO1F,EAAUn4B,EAAM+Y,SAAU/Y,EAAM49B,cAAeH,IAGtEU,EAAgB9mB,mBAAQ,WAE1B,IADA,IAAMD,EAAyB,GACtBjW,EAAI,EAAGA,EAAIi9B,EAAaj9B,IAAK,CAClC,IAAMmN,EAAOnN,EAhDT,EAiDEkB,EAAQwI,KAAKgC,MAAM6nB,EAAapmB,GACtC8I,EAAQ3U,KACJ,cAAC47B,GAAD,CAEItyB,EAAU,IAAPuC,EAFP,SAGEjM,GAFOlB,IAKjB,OAAOiW,IACR,CAACsd,IAEJ,OAAQ,qCACJ,cAAC4J,GAAD,UACKH,IAEL,cAAC,GAAD,CACIvnB,IAAKA,EACLmC,SAAU/Y,EAAM+Y,SAChBpT,QAAS,SAACpH,GACN,GAAKyB,EAAM+Y,UACA,MAAPnC,EAAa,CACb,IACMojB,EADMpjB,EAAIc,QACC0e,wBAEX9nB,GADM/P,EAAEggC,QAAUvE,EAAKjuB,GACViuB,EAAK35B,MAClBk8B,EAAW1xB,KAAKgC,MAAM6nB,EAAapmB,GACzCtO,EAAMw+B,iBAAiBjC,KAXnC,SAcKmB,QAQPY,GAAcz+B,IAAOC,IAAV,yQADK,IAWhBu+B,GAAUx+B,IAAOC,IAAV,uSAQI,SAAAE,GAAK,OAAIA,EAAM+L,KAQ1B2M,GAAQ7Y,IAAOC,IAAV,uTAOL,SAAAE,GAAK,OAAKA,EAAM+Y,SAAgBpZ,YAAvB,wEAAkB,KAMP8+B,IAIpB9F,GAAQ94B,IAAOC,IAAV,sRAQL,SAAAE,GAAK,OAAKA,EAAM8vB,QAAenwB,YAAtB,sEAAiB,KAIX49B,GACRA,GACCA,IACG,SAAAv9B,GAAK,OAAIA,EAAM+L,IAAQwxB,GAC7B,SAAAv9B,GAAK,OAAIA,EAAMiM,KAEpBiyB,GAAWr+B,IAAOC,IAAV,uRASUy9B,IACX,SAAAv9B,GAAK,OAAIA,EAAM89B,MACdP,GACG,SAAAv9B,GAAK,OAAIA,EAAM+L,KAChB,SAAA/L,GAAK,OAAIA,EAAMiM,IAASsxB,KAElCU,GAAQp+B,IAAOC,IAAV,uLAMC,SAAAE,GAAK,OAAIA,EAAM+L,KC8PZ2yB,GAlZE,WAAO,IAAD,EACSz+B,qBAAWC,IAA/BC,EADW,EACXA,MAAOC,EADI,EACJA,SAET43B,EAAe73B,EAAMwH,UACrB+sB,EAAasD,EAAatD,WAC1BC,EAAgBqD,EAAarD,cALhB,EAOaxwB,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAPpE,mBAOZ06B,EAPY,KAOFC,EAPE,OASer4B,oBAAkB,GATjC,mBASZw6B,EATY,KASAC,EATA,OAUaz6B,oBAAkB,GAV/B,mBAUZ06B,EAVY,KAUDC,EAVC,OAWyB36B,mBAAiB,GAX1C,mBAWZ46B,EAXY,KAWIC,EAXJ,OAYO76B,oBAAkB,GAZzB,mBAYZ05B,EAZY,KAYLoB,EAZK,KAcb9G,EAAWH,EAAaG,SAExB+G,EAAc,SAAC/G,GACjBH,EAAaG,SAAWA,EACxB/3B,EAAS,eAAKD,KAGZ83B,EAAuB5gB,mBAAQ,WACjC,OAAyB,MAArBlX,EAAMuH,YAA4B,GACzBvH,EAAMuH,YAAYmJ,KACJ0N,QAAQ1N,KAAmC4B,KAClDxR,KAAI,SAAAsR,GAAS,IAAD,EACtBkX,EAAOlX,EAAK1B,KAIZqQ,EADStG,GAAiByD,kBAAkB9L,EAAM,gBAAiB,eAAe1B,KACpEqQ,KAAKjgB,KAAI,SAAAsR,GAAI,OAAIA,EAAK1B,QAGpCsuB,EAAWvkB,GAAiBmD,aAAaxL,EAAM,gBAAiB,eAClEsqB,EAAwC,GAC5B,MAAZsC,IACAtC,EAAYsC,EAAStuB,KAAsCqc,QAAQjsB,KAAI,SAAAsR,GAAI,OAAIA,EAAK1B,SAIxF,IACMisB,GADS,UAAGliB,GAAiBmD,aAAaxL,EAAM,qBAAvC,aAAG,EAAmD1B,MAC3C8Y,QAAQ1oB,KAAI,SAAAsR,GAAI,OAAIA,EAAK1B,QAEnD,MAAO,CACHlI,KAAM8gB,EAAK9gB,KACXwgB,KAAMM,EAAKN,KACXjI,OAAM2b,WAAUC,gBAGzB,CAAC38B,EAAMuH,cAEVvJ,qBAAU,WACN,GAAI65B,EAAaG,SAASr2B,OAAS,EAAG,CAClC,IAAM8F,EAAuC,GAC7CowB,EAAaG,SAASx2B,SAAQ,SAAC2xB,GAC3B,IAAM8L,EAA4B,CAAEpB,IAAK1K,EAAK0K,IAAKqB,UAAW,GAAIhH,SAAU,GAC5EiH,EAAYhM,EAAM8L,GAClBx3B,EAAkBnF,KAAK28B,MAE3Bj/B,EAAMyH,kBAAoBA,EAC1BxH,EAAS,eAAKD,OAEnB,CAAC63B,IAEJ,IAAMuH,EAAY,WACd,OAAOpH,EACFl3B,KAAI,SAAAyR,GAAG,OAAIA,EAAIsrB,OACfX,QAAO,SAACC,EAAM9sB,GAAP,OAAe8sB,EAAO9sB,EAAMA,EAAM8sB,KAAO,GAC/C,GAaJkC,EAAcnoB,mBAAQ,WACxB,OAAO8gB,EAASl3B,KAAI,SAACqyB,EAAMnyB,GAEvB,IAAM48B,EAAQ59B,EAAMyH,kBAAkBlB,MAAK,SAAAq3B,GAAK,OAAIA,EAAMC,MAAQ1K,EAAK0K,OAEnEyB,EAA0B,GAc9B,YAbav8B,GAAT66B,IACA0B,EAAW1B,EAAMsB,UAAUp6B,MAAM,EAAG,GAAGhE,KAAI,SAACy+B,EAAOtT,GAC/C,IAAMjB,OAAkBjoB,GAATw8B,EAAqB,6BAAQ,cAAC,GAAD,CAAMrU,IAAKqU,EAAMC,MAC7D,OACI,eAAC,GAAD,eACI,cAAC,GAAD,UAAcD,EAAM/2B,OACpB,cAAC,GAAD,UACKwiB,MAHQiB,OAUzB,cAACwT,GAAD,CACI/8B,UAAW87B,GAAcd,IAAU18B,EADvC,SAGI,cAAC0+B,GAAD,CAAY/P,QAAS3uB,IAAM08B,EACvBl4B,QAAS,WACLs5B,EAAS99B,IAFjB,SAKqB,KAAhBmyB,EAAKD,OACF,cAACyM,GAAD,0BACC,qCACD,cAACC,GAAD,UAAezM,EAAK7nB,QAEpB,cAACu0B,GAAD,UAAc1M,EAAKD,SACnB,cAAC4M,GAAD,UACKR,IAEJnM,EAAKlkB,OAAOnO,KAAI,SAACi/B,EAAK9T,GACnB,IACMzjB,EADWsvB,EAASvxB,MAAK,SAAA+iB,GAAI,OAAIA,EAAK9gB,OAAS2qB,EAAKD,UACpCnS,KAAKkL,GAAGzjB,KAC9B,OACI,eAACm3B,GAAD,WAAqB,eAACK,GAAD,WAASx3B,EAAT,QAA0Bu3B,IAA7B9T,YArBvBjrB,QA6BxB,CAACg3B,EAAU0F,EAAOc,EAAYx+B,EAAMyH,oBAiFjC03B,EAAc,SAAChM,EAAsByK,GAEvC,IAAM3F,EAAYj4B,EAAMuH,YACxBq2B,EAAMsB,UAAY,GAClBtB,EAAM1F,SAAW,EACjB,IAAM+H,EAAYxlB,GAAiBylB,kBAAkBjI,EAAW9E,EAAKD,QACrEgB,GAAUsB,IAAI,CACVjB,aACAC,gBACAH,UAAW,SAAC/oB,EAAOJ,GACD,IAAVI,GACAmP,GAAiB0d,cAAcF,EAAW9E,EAAMjoB,GAGpD,IAAMq0B,EAAQU,EAAU1M,cAAchtB,MAAK,SAAAg5B,GAAK,OAAIA,EAAMj0B,QAAUA,KACpE,QAAavI,GAATw8B,EAAoB,CACpB,IAAMC,EAAM91B,EAAWP,UAAU,IAAK,KAAK,SAACI,GAExC2B,EAAM1J,SAAQ,SAAAspB,GACVA,EAAI1hB,KAAKG,MAEbA,EAAIa,UAERwzB,EAAMsB,UAAU58B,KAAK,CAAEkG,KAAM+2B,EAAM/2B,KAAMg3B,UAGjD/K,MAAO,SAACnpB,GACJsyB,EAAM1F,SAAW5sB,KAGzBrL,EAAS,eAAKD,KAGZkmB,EAA+B,IAApB8R,EAASr2B,QAAgE,KAAzCq2B,EAASA,EAASr2B,OAAS,GAAGuxB,OAE/E,OACI,eAAC,GAAD,CACI5Z,SAAU,EADd,UAGI,eAAC6mB,GAAD,WACI,cAACC,GAAD,UACI,cAAC,IAASj/B,aAAV,CACIC,MAAM,OACNhB,QAAS,CACL,CACIC,MAAO,cACPqC,UAAW87B,EACXl+B,SA3HC,WACzB,IAAM6zB,EAAW6D,EAAS,GAAG1sB,MACvB2sB,EAAYj4B,EAAMuH,YAClBstB,EAAmB,GACrBqD,EAAmB,EACvBhE,GAAUsB,IAAI,CACVjB,aACAC,gBACAJ,eAAgBD,EAChBE,UAAW,SAAC/oB,EAAOJ,GAEf8sB,EAAS1Y,MAAK,SAAA/M,GACV,GAAIA,EAAIjH,QAAUA,EACdmP,GAAiB0d,cAAcF,EAAW1lB,EAAKrH,QAC5C,GAAIqH,EAAIjH,MAAQA,EAAO,OAAO,KAGzCupB,EAAOvyB,KAAKoH,EAAWP,UAAU,IAAK,KAAK,SAACI,GAExC2B,EAAM1J,SAAQ,SAAAspB,GACVA,EAAI1hB,KAAKG,MAEbA,EAAIa,YAGZqqB,MAAO,SAACnpB,GACJ4sB,EAAW5sB,KAGnBtL,EAAMO,OAAOC,OACT,cAAC,GAAqB2Y,UAAtB,CACI0b,OAAQA,EACRjK,SAAUsN,IAGlBj4B,EAAS,eAAKD,WA6FN,cAACogC,GAAD,UACI,cAAC,IAASj/B,aAAV,CACIC,MAAM,OACNhB,QAAS,CACL,CACIC,MAAO,MACPqC,UAAW87B,EACXl+B,SAvMhB,WACR,IAAMu9B,EAAMuB,IACZpH,EAAS11B,KAAK,CAAEu7B,MAAKvyB,MAAO,EAAG4nB,OAAQ,GAAIjkB,OAAQ,KACnD8vB,EAAY/G,EAASlzB,SACrBg6B,EAAS9G,EAASr2B,OAAS,GAC3B3B,EAAMyH,kBAAkBnF,KAAK,CAAEu7B,MAAKqB,UAAW,GAAIhH,SAAU,IAC7D2G,EAAkB,GAClBJ,GAAY,KAkMQ,CACIp+B,MAAO,SACPqC,UAAW87B,IAAwB,GAAVd,EACzBp9B,SAAU,WACN03B,EAAS1d,OAAOojB,EAAO,GACvBqB,EAAY/G,EAASlzB,SACjB44B,EAAQ,EACRoB,EAASpB,EAAQ,GACA,IAAVA,GAAmC,IAApB1F,EAASr2B,SAC/Bm9B,GAAU,GACVD,EAAkB,MAI9B,CACIx+B,MAAO,YACPqC,UAAW87B,IAAwB,GAAVd,EACzBp9B,SAAU,WACN,IAAM+/B,EAAYnZ,KAAKC,MAAMD,KAAKE,UAAU4Q,EAAS0F,KAC/C4C,EAASlB,IACfiB,EAAUxC,IAAMyC,EAChBtI,EAAS1d,OAAOojB,EAAO,EAAG2C,GAC1BtB,EAAY/G,EAASlzB,SACrBg6B,EAASpB,EAAQ,GAMjB,IAAMuB,EAA4B,CAAEpB,IAAKyC,EAAQpB,UAAW,GAAIhH,SAAU,GAC1EiH,EAAYkB,EAAWpB,GACvBj/B,EAAMyH,kBAAkBnF,KAAK28B,GAC7Bh/B,EAAS,eAAKD,MAGtB,CACIK,MAAO,eACPqC,UAAW87B,IAAwB,GAAVd,EACzBp9B,SAtIE,WAC1B,IAAM23B,EAAYj4B,EAAMuH,YAClBstB,EAAmB,GACrBqD,EAAmB,EACvBhE,GAAUsB,IAAI,CACVjB,aACAC,gBACAH,UAAW,SAAC/oB,EAAOJ,GAEf,IAAMqH,EAAMylB,EAAS0F,GACP,IAAVpyB,GACAmP,GAAiB0d,cAAcF,EAAW1lB,EAAKrH,GAGnD2pB,EAAOvyB,KAAKoH,EAAWP,UAAU,IAAK,KAAK,SAACI,GAExC2B,EAAM1J,SAAQ,SAAAspB,GACVA,EAAI1hB,KAAKG,MAEbA,EAAIa,YAGZqqB,MAAO,SAACnpB,GACJ4sB,EAAW5sB,KAGnBtL,EAAMO,OAAOC,OACT,cAAC,GAAqB2Y,UAAtB,CACI0b,OAAQA,EACRjK,SAAUsN,IAGlBj4B,EAAS,eAAKD,WA2GN,eAACugC,GAAD,WACI,cAACC,GAAD,UAAW,cAAC,GAAD,CACP/C,cAAel5B,OAAO63B,EAASl6B,OAC/Bm8B,iBAAkB,SAACxoB,GACfwmB,EAAY,2BAAKD,GAAN,IAAgBl6B,MAAO2T,EAAInR,eAE1CkU,SAAU4lB,EACVd,MAAOA,EACP5F,SAAUA,MAEd,cAAC2I,GAAD,UACKpB,UAIb,cAACqB,GAAD,UACI,cAACC,GAAD,UACI,cAAC,EAAD,CACIt4B,YAAa,CACT,CACIG,KAAM,cAAeE,QAAS81B,EAAY11B,KAAM,cAAC,GAAD,CAC5C8P,SAAU8lB,EACV9B,aAAc,WACV+B,GAAW,IAEf9B,aAAc,WAIN8B,GAHCD,OAQjB,CAAEl2B,KAAM,WAAYE,QAAS81B,IAAeE,EAAW51B,KAAM,cAAC,GAAD,KAC7D,CACIN,KAAM,WAAYE,QAASg2B,IAAuB,GAAVhB,EAAa50B,KAAM,cAAC,GAAD,CACvDszB,SAAUA,EACVC,YAAaA,EACbE,QAASvE,EAAS0F,GAClB5F,SAAUA,EACVlf,SAAU4lB,EACV5B,aAAc,WACV6B,GAAY,GACRvY,IACA8R,EAAS1d,OAAO0d,EAASr2B,OAAS,EAAG,GACrCo9B,EAAY/G,EAASlzB,SACrBg6B,EAASpB,EAAQ,GACO,IAApB1F,EAASr2B,QACTk9B,EAAkB,KAI9BhC,aAAc,SAACvxB,EAAe4nB,EAAgBjkB,GAC1C,GAAKuvB,EAEE,CACH,IAAMrL,EAAO6E,EAAS0F,GACtBvK,EAAK7nB,MAAQA,EACb6nB,EAAKD,OAASA,EACdC,EAAKlkB,OAASA,EACd,IAAM4uB,EAAM1K,EAAK0K,IACXD,EAAQ59B,EAAMyH,kBAAkBlB,MAAK,SAAAq3B,GAAK,OAAIA,EAAMC,MAAQA,KAClEsB,EAAYhM,EAAMyK,GAClB5F,EAAS4I,MAAK,SAAC1zB,EAAGD,GACd,OAAOC,EAAE5B,MAAQ2B,EAAE3B,SAEvByzB,EAAY/G,EAASlzB,SACrBg6B,EAAS9G,EAASnH,WAAU,SAAAte,GAAG,OAAIA,EAAIsrB,MAAQA,MAC/CY,GAAY,QAdZA,GAAY,QAoBhC71B,eAAgBi2B,EAChB52B,SAAU22B,YAe5BrmB,GAAQ7Y,IAAOC,IAAV,wJAQLwgC,GAAWzgC,IAAOC,IAAV,qMAVU,KAsBlBygC,GAAY1gC,IAAOC,IAAV,wJAHG,IAWZ4gC,GAAY7gC,IAAOC,IAAV,+JAKWkhC,IAEpBL,GAAY9gC,IAAOC,IAAV,kLAjBQ,KAyBjB8gC,GAAY/gC,IAAOC,IAAV,sPAzBQ,KAoCjB+gC,GAAYhhC,IAAOC,IAAV,qNAxDS,KAiElBghC,GAAcjhC,IAAOC,IAAV,0KA4CX8/B,IApCe//B,IAAOC,IAAV,gNASHD,IAAOC,IAAV,gNAIN,SAAAE,GAAK,OAAIA,EAAM8C,UAAY,GAAKnD,YAAvB,6DAYGE,IAAOC,IAAV,uLAWED,IAAOC,IAAV,mYAWR,SAAAE,GAAK,OAAIA,EAAM6C,SAAW,GAAKjD,KAAO+G,uBAMtCk5B,GAAahgC,IAAOC,IAAV,oUAMV,SAAAE,GAAK,OAAKA,EAAM8vB,QAAenwB,YAAtB,wEAAiB,MAY1BmgC,GAAcjgC,IAAOC,IAAV,4cAkBXqgC,GAAStgC,IAAO6kB,KAAV,gDAKNqb,GAAelgC,IAAOC,IAAV,+VAeZkgC,GAAcngC,IAAOC,IAAV,+VAgBXmgC,GAAcpgC,IAAOC,IAAV,kHAMXwrB,GAAazrB,IAAOC,IAAV,8HADC,OAOXyrB,GAAc1rB,IAAOC,IAAV,gLAQX0rB,GAAa3rB,IAAOC,IAAV,wNAfC,OAyBXsrB,GAAOvrB,IAAO4rB,IAAV,wH,qBC1oBAwV,Q,KAEgB,UAAG,SAACjhC,GAInB,IAAD,IAC0BC,qBAAWC,IAA/BC,EADN,EACMA,MAAOC,EADb,EACaA,SADb,EAEsB+D,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAF7E,mBAEK8G,EAFL,KAEWoT,EAFX,KAOIsK,GAAgC,IAArBrmB,EAAMkhC,UACjBC,EAAQ,UAAGhhC,EAAM0H,aAAT,aAAG,EAAas5B,SAM9BhjC,qBAAU,WACNwK,EAAKtG,OAJuB,IAArBrC,EAAMkhC,UAAmB,GAAMC,EAASz6B,MAAK,SAAA06B,GAAC,OAAIA,EAAEpD,MAAQh+B,EAAMkhC,aAAkCv4B,KAK3GoT,EAAQ,eAAKpT,MACd,IAjBD,MAmBmB0O,mBAAQ,WACzB,MAAO,CACH8pB,EAASlgC,KAAI,SAAAoE,GAAI,OAAIA,EAAKsD,WAE/B,IAJI04B,EAnBL,oBAuDI9gC,EAAkC,CACpC,CACIC,MAAO,SACPC,SAAU,WACNN,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,MAGtB,CACIK,MAAO6lB,EAAW,SAAW,SAC7BxjB,SAAiC,IAAvB8F,EAAK9G,OAAOC,OACtBrB,SAAU,WACF4lB,EA1CK,WACjB,QAAiBnjB,GAAdlD,EAAM+B,WAAqCmB,GAAhBlD,EAAM63B,OAAqB,MAAMyJ,KAChDC,KACRziC,MAAK,SAAC0iC,GAAY,IAAD,EACdC,EAAiC,CACnCzD,IAAKt5B,OAAO88B,EAAS,GACrB74B,KAAMA,EAAKtG,MACXN,KAAM/B,EAAM+B,KACZ81B,OAAQ73B,EAAM63B,OACdH,QAAS,IAEbyJ,EAAS1+B,KAAKg/B,GACdC,GAAa,UAACvhC,EAAMO,OAAO0G,YAAd,aAAC,EAAmB42B,IAAeyD,GAAY3iC,MAAK,WAC7DqB,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,UA4BAwhC,GAvBL,WACjB,IAAMC,EAAaT,EAASz6B,MAAK,SAAArB,GAAI,OAAIA,EAAK24B,MAAQh+B,EAAMkhC,kBAC1Ch+B,GAAd0+B,GACAC,GAAkB7hC,EAAMkhC,UAAWv4B,EAAKtG,OAAOvD,MAAK,WAChD8iC,EAAWj5B,KAAOA,EAAKtG,MACvBlC,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,OAkBT2hC,MAKjB,OACI,eAAC,GAAD,CAAQzhC,MAtEE,IAsEYC,OArEX,IAqEX,UACI,cAAC,IAASc,QAAV,CACIL,QAAS,0BACTM,UAAQ,EACR2B,UAAW,GACXC,aAAc,KAElB,cAAC,IAASuZ,WAAV,CACIrZ,WAAW,OACXS,IACI,cAAC,IAAS6Y,UAAV,CACIpc,MAAO,IACPuB,UAAW+G,EACXhG,aAAcoZ,EACd7Z,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,UAMf,CACIF,QAAS,SAACH,GAAD,OAAYg/B,EAAW5iC,SAAS4D,IACzCK,UAAW,iBAM/B,cAAC,IAASpB,aAAV,CACIC,MAAM,SACNhB,QAASA,QAOd0gC,I,MAAAA,MAETM,GAAiB,uCAAG,8BAAAl0B,EAAA,sEACCsqB,IAASyB,sBAAsB,SAA/B,mCADD,cAChBC,EADgB,gBAEAA,EAASC,OAFT,cAEhBC,EAFgB,yBAGfA,EAAQ,GAAGpkB,GAHI,2CAAH,qDAMjBusB,GAAa,uCAAG,WAAOr2B,EAAe02B,GAAtB,SAAA10B,EAAA,sEACZsqB,IAASyB,sBAAsB,SAA/B,+EAAiH2I,EAAI/D,IAArH,aAA6H3yB,EAA7H,cAAwI02B,EAAIp5B,KAA5I,eAAuJo5B,EAAIhgC,KAA3J,eAAsKggC,EAAIlK,OAA1K,yBADY,2CAAH,wDAIbgK,GAAiB,uCAAG,WAAO7D,EAAazgB,GAApB,SAAAlQ,EAAA,sEAChBsqB,IAASyB,sBAAsB,SAA/B,sCAAwE7b,EAAxE,yBAAgGygB,IADhF,2CAAH,wDAIjBp9B,GAASf,IAAOC,IAAV,6UAOU,SAAAE,GAAK,OAAIA,EAAMM,OAAS,KACvB,SAAAN,GAAK,OAAIA,EAAMK,MAAQ,KACjC,SAAAL,GAAK,OAAIA,EAAMK,SACd,SAAAL,GAAK,OAAIA,EAAMM,WCrJnB0hC,Q,KAcgB,UAAG,SAAChiC,GACnB,IAAD,EAC0BC,qBAAWC,IAA/BC,EADN,EACMA,MAAOC,EADb,EACaA,SADb,EAEsB+D,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAF7E,mBAEKE,EAFL,KAEWkgC,EAFX,OAIoC99B,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAJ3F,mBAIKqgC,EAJL,KAIkBC,EAJlB,OAK8Bh+B,mBAA8B,MAL5D,mBAKKi+B,EALL,KAKeC,EALf,OAOgCl+B,mBAAgC,MAPhE,mBAOKm+B,EAPL,KAOgBC,EAPhB,KAgBIC,EAAc,WAChB,IAAIC,EAAyC,KAC7C,GAAiB,MAAbH,EAAmB,CACnB,IAAMI,EAAMJ,EAAU57B,MAAK,SAAAg8B,GAAG,OAAIA,EAAI1E,MAAQt5B,OAAOw9B,EAAY7/B,eACtDa,GAAPw/B,IACAD,EAAWC,EAAIryB,eAEA,MAAZ+xB,IACPK,EAAWL,EAAS/xB,UAExB,OAAOoyB,GAGLE,EAAYtrB,mBAAQ,WACtB,IAAIurB,EAAO,IACLF,EAAMF,IAIZ,OAHW,MAAPE,IACAE,EAAOjL,IAASkL,cAAcxb,KAAKE,UAAUmb,KAE1CE,IACR,CAACV,EAAaE,IAUX7hC,EAAkC,CACpC,CACIC,MAAO,SACPC,SAAU,WACNN,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,MAGtB,CACIK,MAAO,SACPqC,SAjBe,KAAfd,EAAKM,QAC2B,UAA/BN,EAAKM,OACe,MAAdsgC,GAgBPliC,SAAU,WAE6B,YADfsB,EAAKM,MAErBlC,EAAMuH,YAAckT,GAAiBkoB,kBAErC3iC,EAAMuH,YAAc86B,IACpBriC,EAAMwH,UAAY,CACd+sB,WAAY,IACZC,cAAe,IACfwD,SAAU,KAGlBh4B,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,OAK1B,OACI,eAAC,GAAD,CAAQE,MAnEE,IAmEYC,OAlEX,IAkEX,UACI,cAAC,IAASc,QAAV,CACIL,QAAS,+BACTM,UAAQ,EACR2B,UAAW,GACXC,aAAc,KAElB,cAAC,IAASuZ,WAAV,CACIrZ,WAAW,OACXS,IACI,cAAC,IAASkZ,SAAV,CACIhY,WAAY,EACZlD,UAAWG,EACX1B,MAAO,IACPsC,aAAe,SAAAf,GACXqgC,EAAQrgC,GAC+B,UAAnCA,EAAUS,QACVkgC,EAAa,MACbF,EAAY,MACZF,EAAe,CAAE9/B,MAAO,GAAIR,OAAQ,OAG5CmD,KAAMiC,EAAahG,KAAI,SAAAoE,GACnB,MAAO,CAAEhD,MAAOgD,EAAMF,UAAWE,MAErCN,WAAS,EACT7C,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,iBAM/B,cAAC,IAASuY,YAAV,CACIjV,MAAM,QACNnD,SAAwC,UAA9Bd,EAAKM,MACf6D,SAAU,qCACN,cAAC,IAASsW,WAAV,CACIrZ,WAAW,SACXS,IAAK,qCACD,cAAC,IAASuwB,WAAV,CACI1uB,OAAQ,CACJjF,MAAO,QACPH,MAAO,IACPI,SAAU,WACNsiC,KAA4BjkC,MAAK,SAAAy4B,GAC7BgL,EAAahL,EAAQt2B,KAAI,SAAAu2B,GACrB,MAAO,CACH7uB,KAAM6uB,EAAI7uB,KACV8uB,QAASD,EAAInsB,MACb2yB,IAAKxG,EAAIwG,IACT3tB,SAAUgX,KAAKC,MAAMqQ,IAASC,MAAMJ,EAAIK,cAGhDwK,EAAY,aAK5B,cAAC,IAASlO,WAAV,CACI1uB,OAAQ,CACJjF,MAAO,QACPH,MAAO,IACPI,SAAU,WACN,sBAAC,sCAAA4M,EAAA,sEAC8BipB,OAAO0M,qBADrC,0CACUl7B,EADV,cAEsBA,EAAWm7B,UAFjC,cAESC,EAFT,iBAG8BA,EAAK58B,OAHnC,QAGS68B,EAHT,OAIS78B,EAAOqxB,IAASC,MAAMuL,GAC5Bd,EAAY,CACRe,SAAUF,EAAKv6B,KACf0H,SAAUgX,KAAKC,MAAMhhB,KAEzBi8B,EAAa,MACbJ,EAAe,CAAE9/B,MAAO,GAAIR,OAAQ,KAVvC,2CAAD,YAiBpB,cAAC,IAAS2a,WAAV,CACIrZ,WAAW,QACXY,UAAwB,MAAbu+B,EACX1+B,IACI,cAAC,IAASkZ,SAAV,CACIhY,WAAY,EACZlD,UAAWsgC,EACX7hC,MAAO,IACPsC,aAAcw/B,EACdn9B,MAAM,OAACs9B,QAAD,IAACA,IAAa,IAAIrhC,KAAI,SAACoE,GAEzB,MAAO,CAAEhD,MAAOgD,EAAK24B,IAAIn5B,WAAYM,UAAWE,EAAKsD,SAEzD5D,WAAS,EACT7C,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,iBAM/B,cAAC,IAAS8Z,WAAV,CACIrZ,WAAW,QACXY,UAAuB,MAAZq+B,EACXx+B,IACI,cAAC,IAASy/B,UAAV,CACIhhC,MAAmB,MAAZ+/B,EAAmB,GAAKA,EAASgB,SACxCp/B,cAAY,MAIxB,cAAC,IAASwY,WAAV,CACIrZ,WAAW,OACXS,IACI,cAAC,IAASy/B,UAAV,CACIhhC,MAAOsgC,EACP3+B,cAAY,WAMhC,cAAC,IAAS1C,aAAV,CACIC,MAAM,SACNhB,QAASA,QAOdyhC,I,MAAAA,MAGTe,GAAyB,uCAAG,8BAAA11B,EAAA,sEACPsqB,IAASyB,sBAAsB,SAA/B,0NADO,cACxBC,EADwB,gBAORA,EAASC,OAPD,cAOxBC,EAPwB,yBAQvBA,GARuB,2CAAH,qDAmBzB34B,GAASf,IAAOC,IAAV,6UAOU,SAAAE,GAAK,OAAIA,EAAMM,OAAS,KACvB,SAAAN,GAAK,OAAIA,EAAMK,MAAQ,KACjC,SAAAL,GAAK,OAAIA,EAAMK,SACd,SAAAL,GAAK,OAAIA,EAAMM,WCnQnBgjC,Q,KASgB,UAAG,SAACtjC,GACnB,IAAD,EAC0BC,qBAAWC,IAA/BC,EADN,EACMA,MAAOC,EADb,EACaA,SADb,EAEoC+D,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAF3F,mBAEKqgC,EAFL,KAEkBC,EAFlB,OAGgCh+B,mBAAgC,MAHhE,mBAGKm+B,EAHL,KAGgBC,EAHhB,KAQFpkC,qBAAU,WACN4kC,KAA4BjkC,MAAK,SAAAy4B,GAC7BgL,EAAahL,EAAQt2B,KAAI,SAAAu2B,GACrB,MAAO,CACH7uB,KAAM6uB,EAAI7uB,KACV8uB,QAASD,EAAInsB,MACb2yB,IAAKxG,EAAIwG,IACT3tB,SAAUgX,KAAKC,MAAMqQ,IAASC,MAAMJ,EAAIK,mBAIrD,IAEH,IAAM2K,EAAc,WAChB,IAAIC,EAAyC,KAC7C,GAAiB,MAAbH,EAAmB,CACnB,IAAMI,EAAMJ,EAAU57B,MAAK,SAAAg8B,GAAG,OAAIA,EAAI1E,MAAQt5B,OAAOw9B,EAAY7/B,eACtDa,GAAPw/B,IACAD,EAAWC,EAAIryB,UAGvB,OAAOoyB,GAGLE,EAAYtrB,mBAAQ,WACtB,IAAIurB,EAAO,IACLF,EAAMF,IAIZ,OAHW,MAAPE,IACAE,EAAOjL,IAASkL,cAAcxb,KAAKE,UAAUmb,KAE1CE,IACR,CAACV,IAME3hC,EAAkC,CACpC,CACIC,MAAO,SACPC,SAAU,WACNN,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,MAGtB,CACIK,MAAO,SACPqC,SAbiB,MAAd8/B,EAcHliC,SAAU,WACNN,EAAMuH,YAAc86B,IACpBriC,EAAMwH,UAAY,CACd+sB,WAAY,IACZC,cAAe,IACfwD,SAAU,IAEdh4B,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,OAK1B,OACI,eAAC,GAAD,CAAQE,MAjEE,IAiEYC,OAhEX,IAgEX,UACI,cAAC,IAASc,QAAV,CACIL,QAAS,0BACTM,UAAQ,EACR2B,UAAW,GACXC,aAAc,KAElB,cAAC,IAASuZ,WAAV,CACIrZ,WAAW,QACXY,UAAwB,MAAbu+B,EACX1+B,IACI,cAAC,IAASkZ,SAAV,CACIhY,WAAY,EACZlD,UAAWsgC,EACX7hC,MAAO,IACPsC,aAAcw/B,EACdn9B,MAAM,OAACs9B,QAAD,IAACA,IAAa,IAAIrhC,KAAI,SAACoE,GAEzB,MAAO,CAAEhD,MAAOgD,EAAK24B,IAAIn5B,WAAYM,UAAWE,EAAKsD,SAEzD5D,WAAS,EACT7C,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,iBAM/B,cAAC,IAAS8Z,WAAV,CACIrZ,WAAW,OACXS,IACI,cAAC,IAASy/B,UAAV,CACIhhC,MAAOsgC,EACP3+B,cAAY,MAIxB,cAAC,IAAS1C,aAAV,CACIC,MAAM,SACNhB,QAASA,QAOd+iC,I,yPAAAA,MAGTP,GAAyB,uCAAG,8BAAA11B,EAAA,sEACPsqB,IAASyB,sBAAsB,SAA/B,0NADO,cACxBC,EADwB,gBAORA,EAASC,OAPD,cAOxBC,EAPwB,yBAQvBA,GARuB,2CAAH,qDAmBzB34B,GAASf,IAAOC,IAAV,6UAOU,SAAAE,GAAK,OAAIA,EAAMM,OAAS,KACvB,SAAAN,GAAK,OAAIA,EAAMK,MAAQ,KACjC,SAAAL,GAAK,OAAIA,EAAMK,SACd,SAAAL,GAAK,OAAIA,EAAMM,UC2QdijC,GAraG,WAAO,IAAD,IAEQtjC,qBAAWC,IAA/BC,EAFY,EAEZA,MAAOC,EAFK,EAELA,SAFK,EAIY+D,mBAAS,GAJrB,mBAIbsV,EAJa,KAIH0b,EAJG,OAKgBhxB,oBAAU,GAL1B,mBAKbq/B,EALa,KAKDC,EALC,KAOdC,EAA6B,MAAfvjC,EAAM0H,MAAgB,GAAK1H,EAAM0H,MAAMs5B,SAASlgC,KAAI,SAAC0iC,EAASxiC,GAC9E,OACI,eAACyiC,GAAD,CACI9T,QAAS3uB,IAAMqiC,EACf79B,QAAS,WACL89B,EAActiC,GACdqd,QAAQC,IAAIkZ,IAASkM,wBAAwBF,EAAQ3F,OAEzD8F,cAAe,WACX3jC,EAAMO,OAAOC,OAAS,cAAC,KAAc2Y,UAAf,CAClBvY,QAAS42B,IAASoM,aAAaJ,EAAQ5hC,KAAM4hC,EAAQ3F,OAEzD59B,EAAS,eAAKD,KAVtB,UAaI,eAAC6jC,GAAD,CAASjiC,KAAM4hC,EAAQ5hC,KAAvB,cAA+B4hC,EAAQ5hC,KAAvC,QACA,cAACkiC,GAAD,UAAQN,EAAQh7B,SAdJxH,MAoBlB+iC,EAAiB,WACnB,IAAI3uB,EAAM,IAGV,OAFyB,MAArBpV,EAAMuH,cAAqB6N,EAAM,WACd,MAAnBpV,EAAMwH,YAAmB4N,EAAM,SAC5BA,GAGL4uB,EAA+B,MAArBhkC,EAAMuH,YAChBy5B,EAAQ,UAAGhhC,EAAM0H,aAAT,aAAG,EAAas5B,SAE9BhjC,qBAAU,WACa,MAAfgC,EAAM0H,OACN47B,GAAe,KAEpB,CAACtjC,EAAM0H,QA3CU,MA6CyDwP,mBAAQ,WACjF,GAAyB,MAArBlX,EAAMuH,YAAqB,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACtD,IAAIyd,EAAO,EACLif,EAAU,SAAVA,EAAW7xB,GACb4S,IACA,IAAMxK,EAAWC,GAAiBC,iBAAiBtI,EAAKxQ,MACxC,MAAZ4Y,GACapI,EAAK1B,KAAK8J,GAClBhZ,SAAQ,SAAA4Q,GAAI,OAAI6xB,EAAQ7xB,OAG/B8xB,EAAOlkC,EAAMuH,YAAYmJ,KAC/BuzB,EAAQC,EAAK7xB,UACb4xB,EAAQC,EAAK9lB,SAEb,IAAI+lB,EAAa,EACbC,EAAa,EACbC,EAAa,EACbC,EAAU,EACEJ,EAAK9lB,QAAQ1N,KACrB4B,KAAK9Q,SAAQ,SAAA4Q,GAEjB,OADaA,EAAK1B,KACLyY,QACT,IAAK,UAAWgb,IAAc,MAC9B,IAAK,UAAWC,IAAc,MAC9B,IAAK,UAAWC,QAIxB,IAAMhyB,EAAW6xB,EAAK7xB,SAAS3B,KAK/B,OAHuB,MAAnB1Q,EAAMwH,YACN88B,EAAUtkC,EAAMwH,UAAUwwB,SAASr2B,QAEhC,CAACqjB,EAAMmf,EAAYC,EAAYC,EAAYhyB,EAASC,KAAK3Q,OAAQ2iC,KACzE,CAACtkC,EAAMuH,cAhFU,mBA6Cbg9B,EA7Ca,KA6CAJ,EA7CA,KA6CYC,EA7CZ,KA6CwBC,EA7CxB,KA6CoCG,EA7CpC,KA6C8CF,EA7C9C,KAmFdG,EAAU,SAAC7iC,GACb,OAAQA,GACJ,IAAK,UACD,OAAO5B,EAAMuH,YAEjB,IAAK,QAKD,MAJ0C,CACtCA,YAAavH,EAAMuH,YACnBswB,aAAc73B,EAAMwH,aAU9Bk9B,EAAc,WAChB,IAAM9iC,EAAOmiC,IACPrM,EAASF,IAASmN,KAAKzd,KAAKE,UAAUqd,EAAQ7iC,KACpD5B,EAAMO,OAAOC,OAAS,cAAC,GAAc2Y,UAAf,CAClB4nB,WAAY,EACZn/B,KAAMA,EACN81B,OAAQA,IAEZz3B,EAAS,eAAKD,KAMZ4kC,EAAqB,WACvB,IAAMhjC,EAAOmiC,IACPc,EAAS7D,EAASqC,GAClB3L,EAASF,IAASmN,KAAKzd,KAAKE,UAAUqd,EAAQ7iC,KACpDkjC,GAAoBD,EAAOhH,IAAKkG,IAAkBrM,GAAQ/4B,MAAK,WAC3DkmC,EAAOnN,OAASA,EAChBmN,EAAOjjC,KAAOA,EACd5B,EAAMO,OAAOC,OAAS,cAAC,KAAc2Y,UAAf,CAClBvY,QAAQ,8BAEZX,EAAS,eAAKD,QA8BhB+kC,EAAgB,WAClB,OAAQhB,KACJ,IAAK,UAAWvM,IAASwN,gBAAgBhlC,EAAOC,GAAW,MAC3D,IAAK,QAASu3B,IAASyN,iBAAiBjlC,EAAOC,KAoDjDilC,EAAY,eAACC,GAAD,CAAUziC,SAAyB,MAAf1C,EAAM0H,MAA1B,UACd,cAAC,IAASvG,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,OACPqC,UAAWshC,IAA2B,IAAhBX,GAAqD,KAAhCrC,EAASqC,GAAY3L,OAChEp3B,SArFO,WACnB,IAAMukC,EAAS7D,EAASqC,GAClB3L,EAASF,IAASC,MAAMoN,EAAOnN,QAC/BhnB,EAAOwW,KAAKC,MAAMuQ,GACxB,OAAQmN,EAAOjjC,MACX,IAAK,UACD5B,EAAMuH,YAAcmJ,EACtB,MACF,IAAK,QACD,IAAM00B,EAAoB10B,EAC1B1Q,EAAMuH,YAAc69B,EAAkB79B,YACtCvH,EAAMwH,UAAY49B,EAAkBvN,aAG5C73B,EAAMO,OAAOC,OAAS,cAAC,KAAc2Y,UAAf,CAClBvY,QAAQ,6BAEZX,EAAS,eAAKD,MAsEN,CACIK,MAAO,SACPH,MAAO,IACPwC,UAAyB,GAAf2gC,EACV/iC,SAAU,WACNN,EAAMO,OAAOC,OAAS,cAAC,GAAc2Y,UAAf,CAClB4nB,UAAWC,EAASqC,GAAYxF,MAEpC59B,EAAS,eAAKD,MAGtB,CACIK,MAAO,SACPH,MAAO,IACPwC,UAAyB,GAAf2gC,EACV/iC,SAAU,WACN+kC,GAAcrE,EAASqC,GAAYxF,KAAKl/B,MAAK,WACzCqB,EAAMO,OAAOC,OAAS,cAAC,KAAc2Y,UAAf,CAClBvY,QAAQ,8BAEZogC,EAAS1mB,OAAO+oB,EAAY,GAC5BC,EAAcD,EAAa,GAC3BpjC,EAAS,eAAKD,YAMlC,cAAC,GAAD,UACKujC,OAIH+B,EAAY,mCACd,cAAC,IAASnkC,aAAV,CACIC,MAAM,SACNhB,QAAS,CACL,CACIC,MAAO,OACPH,MAAO,IACPwC,UAAWshC,EACX1jC,SAAU,WAAQk3B,IAAS+N,SAASvlC,EAAOC,KAE/C,CACII,MAAO,aACPH,MAAO,IACPwC,SAA8B,MAApB1C,EAAM2H,WAChBrH,SAAU,WACNN,EAAM2H,WAAa,KACnB1H,EAAS,eAAKD,WAOlC,OAAQ,eAAC,GAAD,WACJ,cAACwlC,GAAD,UACI,cAAC,IAASrkC,aAAV,CACIC,MAAM,OACNhB,QAAS,CACL,CACIC,MAAO,cACPqC,UAAWshC,EACX1jC,SAAU,WAENN,EAAMO,OAAOC,OAASR,EAAMoH,IAAIC,cAAgB,cAAC,GAAiB8R,UAAlB,IAAiC,cAAC,GAA0BA,UAA3B,IACjFlZ,EAAS,eAAKD,MAGtB,CACIK,MAAO,QACPH,MAAO,IACPwC,SAAUshC,EACV1jC,SAAU,WACNN,EAAMuH,YAAc,KACpBvH,EAAMwH,UAAY,KAClBvH,EAAS,eAAKD,WAMlC,eAACylC,GAAD,WACI,cAACC,GAAD,CAAUhjC,UAAU,EAApB,SACI,cAAC,EAAD,CACI2F,YAAa,CACT,CAAEG,KAAM,QAASE,QAAQ,EAAMI,KAAMo8B,GACrC,CAAE18B,KAAM,QAASE,QAAQ,EAAMI,KAAMw8B,IAEzCr9B,SAAUqR,EACV1Q,eAAgB,SAACL,GAAD,OAAmBysB,EAAYzsB,QAGvD,eAACo9B,GAAD,WACI,cAAC,IAASxkC,aAAV,CACIC,MAAM,SACNhB,QAAS,CA1JA,WACrB,OAAQkZ,GAEJ,KAAK,EAAG,MAAO,CACXjZ,MAAO,eACPH,MAAO,IACPwC,SAAUshC,GAA0B,MAAfhkC,EAAM0H,MAC3BpH,SAAUokC,GAGd,KAAK,EAAG,MAAO,CACXrkC,MAAO,YACPH,MAAO,IACPwC,SAAUshC,GAA+B,MAApBhkC,EAAM2H,WAC3BrH,SAAU,WAGNykC,MAIZ,MAAM5D,KAsIUyE,GAnIO,WACvB,OAAQtsB,GAEJ,KAAK,EAAG,MAAO,CACXjZ,MAAO,YACPH,MAAO,IACPwC,UAAyB,GAAf2gC,GAAoBW,EAC9B1jC,SAAUskC,GAGd,KAAK,EAAG,MAAO,CACXvkC,MAAO,YACPH,MAAO,IACPwC,SAAUshC,GAA+B,MAApBhkC,EAAM2H,WAC3BrH,SAAU,WAGNykC,MAIZ,MAAM5D,KA+GU0E,MAGR,cAAC,IAAS/qB,YAAV,CACIjV,MAAM,UACNnD,SAAUshC,EACVj+B,SAAU,qCACN,cAAC,IAASsW,WAAV,CACIrZ,WAAW,OACXS,IACI,cAAC,IAASy/B,UAAV,CACIhhC,MAAO6hC,QAInB,cAAC,IAAS1nB,WAAV,CACIrZ,WAAW,UACXS,IACI,cAAC,IAASy/B,UAAV,CACIhhC,MAAQ8hC,EAAgBG,EAAWz/B,WAAjB,QAI9B,cAAC,IAAS2X,WAAV,CACIrZ,WAAW,UACXS,IACI,cAAC,IAASy/B,UAAV,CACIhhC,MAAQ8hC,EAAgBI,EAAW1/B,WAAjB,QAI9B,cAAC,IAAS2X,WAAV,CACIrZ,WAAW,UACXS,IACI,cAAC,IAASy/B,UAAV,CACIhhC,MAAQ8hC,EAAgBK,EAAW3/B,WAAjB,QAI9B,cAAC,IAAS2X,WAAV,CACIrZ,WAAW,QACXS,IACI,cAAC,IAASy/B,UAAV,CACIhhC,MAAQ8hC,EAAgBQ,EAAS9/B,WAAf,QAI9B,cAAC,IAAS2X,WAAV,CACIrZ,WAAW,WACXS,IACI,cAAC,IAASy/B,UAAV,CACIhhC,MAAQ8hC,EAAgBO,EAAY7/B,WAAlB,QAI9B,cAAC,IAAS2X,WAAV,CACIrZ,WAAW,OACXS,IACI,cAAC,IAASy/B,UAAV,CAEIr/B,cAAY,EACZ3B,MAAQ8hC,EAAgBxM,IAASkL,cAAcxb,KAAKE,UAAUpnB,EAAMuH,cAAlD,QAI9B,cAAC,IAAS8U,WAAV,CACIrZ,WAAW,QACXS,IACI,cAAC,IAASy/B,UAAV,CACIhhC,MAAQ8hC,EAAgBM,EAAQ5/B,WAAd,uBAoChDogC,GAAmB,uCAAG,WAAOjH,EAAaj8B,EAAc81B,GAAlC,SAAAxqB,EAAA,sEAClBsqB,IAASyB,sBAAsB,SAA/B,sCAAwEr3B,EAAxE,wBAA4F81B,EAA5F,qDAA+ImG,EAA/I,MADkB,2CAAH,0DAInBwH,GAAa,uCAAG,WAAOxH,GAAP,SAAA3wB,EAAA,sEACZsqB,IAASyB,sBAAsB,SAA/B,2CAA6E4E,EAA7E,MADY,2CAAH,sDAMbtlB,GAAQ7Y,IAAOC,IAAV,4MAUL6lC,GAAa9lC,IAAOC,IAAV,iIAZK,IAoBf8lC,GAAW/lC,IAAOC,IAAV,uKApBO,IA6Bf+lC,GAAWhmC,IAAOC,IAAV,yKAQR,SAAAE,GAAK,OAAIA,EAAM6C,SAAW,GAAKjD,KAAO+G,sBAGtC2+B,GAAWzlC,IAAOC,IAAV,wGAMR,SAAAE,GAAK,OAAIA,EAAM6C,SAAW,GAAKjD,KAAO+G,sBAGtC25B,GAAWzgC,IAAOC,IAAV,mSAYR8jC,GAAY/jC,IAAOC,IAAV,odAST,SAAAE,GAAK,OAAKA,EAAM8vB,QAAenwB,YAAtB,yGAAiB,MAUtB,SAAAK,GAAK,OAAKA,EAAM8vB,QAAenwB,YAAtB,iHAAiB,MAK9BskC,GAAQpkC,IAAO6kB,KAAV,mDAILsf,GAAUnkC,IAAO6kB,KAAV,uEAIP,SAAA1kB,GAAK,MAAmB,YAAfA,EAAM+B,KAAqBpC,YAA3B,6CAAoD,MAC7D,SAAAK,GAAK,MAAmB,UAAfA,EAAM+B,KAAmBpC,YAAzB,6CAAkD,MAM3DmmC,IAJQjmC,IAAO6kB,KAAV,qDAIQ7kB,IAAOC,IAAV,2JC/fDmmC,GA5BO,WAAO,IAAD,EAEIhmC,qBAAWC,IAA/BC,EAFgB,EAEhBA,MAQF+lC,GAVkB,EAET9lC,SAEQ,WACnB,IAAImV,EAAM,IAGV,OAFyB,MAArBpV,EAAMuH,cAAqB6N,EAAM,WACd,MAAnBpV,EAAMwH,YAAmB4N,EAAM,YAC5BA,EAES2uB,IAEd17B,EAA6B,GAMnC,OALAA,EAAY/F,KAAK,CAAEkG,KAAM,SAAUE,QAAQ,EAAMI,KAAM,cAAC,GAAD,MACvDT,EAAY/F,KAAK,CAAEkG,KAAM,QAASE,OAAwB,aAAhBq9B,EAA4Bj9B,KAAsB,aAAhBi9B,EAA6B,cAAC,GAAD,IAAe,+BACpH/lC,EAAMoH,IAAIC,eACVgB,EAAY/F,KAAK,CAAEkG,KAAM,UAAWE,OAAwB,YAAhBq9B,EAA2Bj9B,KAAM,cAAC,GAAD,MAG7E,cAAC,GAAD,UACI,cAAC,EAAD,CACIT,YAAaA,EACbJ,SAAU,OAQpBsQ,GAAQ7Y,IAAOC,IAAV,2W3D1BqB,I2D8BPqmC,GACCA,ICkGXC,GApHM,SAACpmC,GAEf,IAAD,EAE0BC,qBAAWC,IAA/BC,EAFN,EAEMA,MAAOC,EAFb,EAEaA,SAFb,EAI4B+D,mBAAqB,IAJjD,mBAIKkiC,EAJL,KAIcC,EAJd,KAMFnoC,qBAAU,WACN4kC,KAA4BjkC,MAAK,SAACy4B,GAC9B,IAAM8O,EAAsB,GAC5B9O,EAAQ51B,SAAQ,SAAA61B,GACZ,IAAM7uB,EAAO6uB,EAAI7uB,KACX8uB,EAAUD,EAAInsB,MACdqsB,EAAUF,EAAIE,QACdrnB,EAAWgX,KAAKC,MAAMqQ,IAASC,MAAMJ,EAAIK,SAEzCI,EADW5nB,EAASQ,KAA4B0N,QAAQ1N,KACxB4B,KACjCoK,QAAO,SAAAtK,GAEJ,MAAuB,YADVA,EAAK1B,KACNyY,UAEfroB,KAAI,SAAAsR,GACD,IAAMkX,EAAOlX,EAAK1B,KAEZqnB,EADStd,GAAiByD,kBAAkB9L,EAAM,gBAAiB,eAChD1B,KAAsCqQ,KAAKpf,OACpE,MAAO,CAAE6G,KAAM8gB,EAAK9gB,KAAMwgB,KAAMM,EAAKN,KAAM+O,WAAU3e,OAAQhH,MAErE8zB,EAAQ5jC,KAAK,CACTkG,OAAM8uB,UAASC,UAASrnB,WAAU4nB,WAAU3hB,QAAQ,OAG5DgwB,EAAWD,GACXrmC,EAAMumC,UAAUF,EAAQvkC,aAE7B,IAEH,IA2BM0kC,EAAaH,EACdxpB,QAAO,SAAA6lB,GAAG,OAAIA,EAAIzK,SAASn2B,OAAS,KAAGb,KAAI,SAACyhC,EAAKvhC,GAC9C,IAAMslC,EAAW/D,EAAIpsB,OAAaosB,EAAIzK,SAASn2B,OAAjB,EAC9B,OAAQ,eAAC,GAAD,CAAei6B,MAAO0K,EAAtB,UACJ,eAAC,GAAD,CAAS9gC,QAAS,aAAlB,UAGI,cAAC+gC,GAAD,oBAAYhE,EAAIjL,WAChB,cAACkP,GAAD,CAAQhhC,QAAS,WAnChB,IAACihC,IAoCWvf,KAAKE,UAAUmb,EAAIryB,UA1B5CimB,OAAOuQ,mBATS,CACZC,MAAO,CACH,CACIC,OAAQ,CACJ,aAAc,CAAC,cAKIjoC,MAAK,SAACkoC,GACrC,sBAAC,8BAAA35B,EAAA,sEAE0B25B,EAAOC,iBAFjC,cAESC,EAFT,OAIS5gC,EAAOqxB,IAASmN,KAAK8B,GAJ9B,SAKSM,EAASC,MAAM7gC,GALxB,uBAOS4gC,EAASE,QAPlB,OAQGjnC,EAAMO,OAAOC,OAAS,cAAC,KAAc2Y,UAAf,CAAyBvY,QAAQ,2BACvDX,EAAS,eAAKD,IATjB,2CAAD,MAWDknC,OAAM,WACL7oB,QAAQC,IAAI,oEAYJ,mBAEOikB,EAAI/5B,QAAgB,cAAC2+B,GAAD,UAAS5E,EAAIhL,aAE5C,cAAC6P,GAAD,CAAaxL,MAAO0K,EAApB,SACK/D,EAAIzK,SAASh3B,KAAI,SAACwoB,EAAM2C,GACrB,IAAIO,EAAYlD,EAAK9gB,KAErB,YADiBzF,GAAbumB,EAAKN,OAAmBwD,EAAYlD,EAAKN,MAEzC,cAACqe,GAAD,CAAwB7hC,QAAS,WAC7BxF,EAAMO,OAAOC,OACT,cAAC,GAAkB2Y,UAAnB,CACIC,OAAQkQ,EAAKlQ,OACblJ,SAAUqyB,EAAIryB,SACdmJ,kBAAmB,WACfrZ,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAKD,OAI1BC,EAAS,eAAKD,KAXlB,SAaI,eAACsnC,GAAD,WACI,cAAC,GAAD,UAAY9a,IACZ,cAAC+a,GAAD,sBAAmBje,EAAKyO,SAAxB,qBAfa9L,QAqBjC,cAACub,GAAD,CAAahiC,QAAS,WAClB0gC,EAAQllC,GAAGmV,QAAU+vB,EAAQllC,GAAGmV,OAChCgwB,EAAWD,EAAQphC,UAFvB,SAII,cAAC2iC,GAAD,qBAAgBlF,EAAIzK,SAASn2B,OAA7B,uBAvCYX,MA4C5B,OACI,cAAC0mC,GAAD,UAAarB,KAMfzD,GAAyB,uCAAG,8BAAA11B,EAAA,sEACPsqB,IAASyB,sBAAsB,SAA/B,0NADO,cACxBC,EADwB,gBAORA,EAASC,OAPD,cAOxBC,EAPwB,yBAQvBA,GARuB,2CAAH,qDAWzBsO,GAAahoC,IAAOC,IAAV,wTAeV64B,GAAQ94B,IAAOC,IAAV,2gBAMG,SAAAE,GAAK,OAAgC,IAA3BA,EAAM+7B,MAAQ,EAAI,EAAI,GAP1B,GAOoC/7B,EAAM+7B,SAaxDtD,GAAU54B,IAAOC,IAAV,mcAgBPynC,GAAc1nC,IAAOC,IAAV,6WAMH,SAAAE,GAAK,OAAKA,EAAM+7B,MAAQ,EAAI,EAAI,GA1C1B,GA0C+B/7B,EAAM+7B,SAUnD4L,GAAc9nC,IAAOC,IAAV,kdAmBX4mC,GAAS7mC,IAAOC,IAAV,0OAYN6mC,GAAS9mC,IAAOC,IAAV,mVAiBNwnC,GAASznC,IAAOC,IAAV,iRAaN8nC,GAAY/nC,IAAOC,IAAV,gQAYT0nC,GAAiB3nC,IAAOC,IAAV,2OA7HA,IAwId2nC,GAAiB5nC,IAAOC,IAAV,iYAiBd84B,GAAY/4B,IAAO6kB,KAAV,mDAITgjB,GAAc7nC,IAAO6kB,KAAV,qDCjSFojB,GAvBK,WACE7nC,qBAAWC,IAArBC,MADe,IAAD,EAGAgE,mBAAwB,IAHxB,mBAGfP,EAHe,KAGVmkC,EAHU,KAoBtB,OAhBA5pC,qBAAU,WACN6pC,MAAM,4BACDlpC,MAAK,SAAAu6B,GAAQ,OAAIA,EAASC,UAC1Bx6B,MAAK,SAAAw6B,GAEFyO,EADazO,EACDr4B,KAAI,SAACoE,EAAMlE,GACnB,IAAM8mC,EAAS5iC,EAAK6iC,KAAKlnC,MAAM,MAAMC,KAAI,SAACkM,EAAGhM,GAAJ,OAAU,iCAAegM,EAAE,yBAANhM,MAC9D,OACI,eAAC,GAAD,WACI,eAAC,GAAD,eAAWkE,EAAK8iC,QAAhB,KAA2B9iC,EAAK+iC,KAAhC,OACA,cAAC,GAAD,UAAUH,MAFF9mC,YAO7B,IACK,cAAC,GAAD,UAAayC,KAKnBikC,GAAahoC,IAAOC,IAAV,qUAIauoC,KAUvB1P,GAAQ94B,IAAOC,IAAV,2MASL24B,GAAU54B,IAAOC,IAAV,6OAIIF,KAAOJ,YAOlB8wB,GAAUzwB,IAAOC,IAAV,mMAGIF,KAAOJ,YCnCT8oC,GA1BK,WAAO,IAAD,EAEMroC,qBAAWC,IAFjB,KAEdC,MAFc,EAEPC,SAEmB+D,mBAAS,IAJrB,mBAIfokC,EAJe,KAIJC,EAJI,OAKQrkC,mBAAS,GALjB,mBAKfskC,EALe,KAKNC,EALM,KActB,OAPAvqC,qBAAU,WACNwqC,KAAa7pC,MAAK,SAAA8pC,GACdJ,EAAaI,QAElB,IAGK,eAAC,GAAD,WACJ,eAACC,GAAD,WACI,eAACC,GAAD,WAAiBP,EAAjB,mCACA,cAAC,GAAD,OAEJ,eAACQ,GAAD,WACI,eAACD,GAAD,WAAiBL,EAAjB,oCACA,cAAC,GAAD,CAAclC,UAAWmC,WAOxBC,GAAU,uCAAG,8BAAAt7B,EAAA,sEACCsqB,IAASyB,sBAAsB,SAA/B,qCADD,cAChBC,EADgB,gBAEAA,EAASC,OAFT,cAEhBC,EAFgB,yBAGdA,EAAkB,GAAnB,KAHe,2CAAH,qDAgBjB7gB,GAAQ7Y,IAAOC,IAAV,8KAQL+oC,GAAQhpC,IAAOC,IAAV,8HAQLgpC,GAAiBjpC,IAAOC,IAAV,0PAadipC,GAASlpC,IAAOC,IAAV,wJC7DGkpC,GAlBG,WAAO,IAAD,EAEQ/oC,qBAAWC,IAFnB,EAEZC,MAFY,EAELC,SAEf,OACI,cAAC,GAAD,UACI,cAAC,GAAD,CACIoI,YAAa,CACT,CAAEG,KAAM,OAAQmyB,KAAM,cAAC,KAAD,IAAgBj4B,UAAU,EAAMoG,KAAM,cAAC,GAAD,KAC5D,CAAEN,KAAM,SAAUmyB,KAAM,cAAC,KAAD,IAA6Bj4B,UAAU,EAAMoG,KAAM,cAAC,GAAD,MAE/Eb,SAAU,OASpBsQ,GAAQ7Y,IAAOC,IAAV,2W/DjBsB,M+DqBRmpC,GACCA,ICUXC,GAxCA,SAAClpC,GAET,IAAD,EAC4BmE,oBAAkB,GAD9C,mBACKglC,EADL,KACeC,EADf,OAE4BjlC,qBAF5B,mBAEKklC,EAFL,KAEcC,EAFd,KAIFnrC,qBAAU,WACNmrC,EAAWhf,YAAW,WAClB8e,GAAU,KACX,QACJ,IACHjrC,qBAAU,WACFgrC,GACA7e,YAAW,WACPtqB,EAAMupC,WACP,OAER,CAACJ,IAEJ,IAAMK,EAAOnyB,mBAAQ,WACjB,OAAOxN,EAAW4/B,eACnB,IAEH,OAEI,cAAC,GAAD,CAAQN,SAAUA,EAAUxjC,QAAS,SAACpH,GAClCmrC,aAAaL,GACbD,GAAU,IAFd,SAII,eAAC,GAAD,WACI,cAAC,GAAD,UACI,cAACO,GAAD,CAAOte,IAAKme,MAEhB,cAACI,GAAD,6BACA,cAACC,GAAD,yEAQV3hC,GAASrI,IAAOC,IAAV,0PAWG,SAAAE,GAAK,OAAIA,EAAMmpC,SAAW,IAAM,OAGzCvoC,GAASf,IAAOC,IAAV,iXAiBNgqC,GAASC,YAAH,mGASN5J,GAAStgC,IAAOC,IAAV,kxBAcKgqC,IAaXF,GAAc/pC,IAAOC,IAAV,oOAYX+pC,GAAahqC,IAAOC,IAAV,+MAWV6pC,GAAQ9pC,IAAO4rB,IAAV,oM,kBC4HIue,GAlPM,WAAO,IAAD,EACK/pC,qBAAWC,IAA/BC,EADe,EACfA,MAAOC,EADQ,EACRA,SADQ,EAGS+D,mBAAS,GAHlB,mBAGhBsV,EAHgB,KAGN0b,EAHM,OAKKhxB,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAL5D,mBAKhBooC,EALgB,KAKRC,EALQ,OAMO/lC,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAN9D,mBAMhBsoC,EANgB,KAMPC,EANO,OAOOjmC,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAP9D,mBAOhBwoC,EAPgB,KAOPC,EAPO,OAQqBnmC,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAR5E,mBAQhB0oC,EARgB,KAQAC,EARA,OASGrmC,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAT1D,mBAShB4oC,EATgB,KASTC,EATS,OAYavmC,mBAAmB,IAZhC,mBAYhBwmC,EAZgB,KAYJC,EAZI,OAaWzmC,mBAAmB,IAb9B,mBAahB0mC,EAbgB,KAaLC,EAbK,OAeO3mC,oBAAS,GAfhB,mBAehB4U,EAfgB,KAeNC,EAfM,KAgBjB+xB,EAAa5qC,EAAMO,OAAO0G,KAE1B4jC,EAAa,WACfd,EAAU,2BAAKD,GAAN,IAAc5nC,MAAO0oC,EAAWppB,MACzC2oB,EAAW,2BAAKD,GAAN,IAAehoC,MAAO,MAChCmoC,EAAkB,2BAAKD,GAAN,IAAsBloC,MAAO,MAC9CqoC,EAAS,2BAAKD,GAAN,IAAapoC,MAAO0oC,EAAWN,SACvCL,EAAW,2BAAKD,GAAN,IAAe9nC,MAAO0oC,EAAWE,aAG/C9sC,qBAAU,WACNw5B,IAASuT,mBAAmBpsC,MAAK,SAAAkG,GAE7B,IAAM2lC,EAAuB,GACvBE,EAAsB,GAC5B7lC,EAAKrD,SAAQ,SAAAwpC,GACLA,EAAKxpB,KAAOopB,EAAWppB,IAAIgpB,EAAWloC,KAAK0oC,EAAKxpB,IACjC,KAAfwpB,EAAKV,OAAcI,EAAUpoC,KAAK0oC,EAAKV,UAE/CG,EAAcD,GACdG,EAAaD,MAGjB,IAAMjI,EAAOjL,IAASyT,qBAAqBL,EAAW/M,KAQtD,OALA1H,OAAO+U,QAAQC,aAAa,GAAI,GAAhC,oBAAiD1I,IAEjDoI,IAGO,WAEH1U,OAAO+U,QAAQC,aAAa,GAAI,GAAhC,UAEL,IAEH,IAAMC,EACF,eAAC,GAAD,WACI,cAAC,IAASC,iBAAV,CACIroC,WAAY,UACZvB,UAAWqoC,EACXtnC,aAAcunC,EACdhoC,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAau1B,gBAAgBppC,IACjDK,UAAW,SAEf,CACIF,QAAS,SAACH,GAAD,OAAYsoC,EAAWlsC,SAAS4D,IACzCK,UAAW,aAGnBrC,MAAO,IACP2C,UAAW,EACXW,YAAaoV,IAEjB,cAAC,IAASyyB,iBAAV,CACIroC,WAAY,WACZnB,YAAU,EACVJ,UAAWyoC,EACX1nC,aAAc2nC,EACdpoC,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GAAD,OAAWA,IAAUkoC,EAAeloC,OAC7CK,UAAW,aAGnBP,WAAY,CAACooC,GACblqC,MAAO,IACP2C,UAAW,EACXW,YAAaoV,IAEjB,cAAC,IAASyyB,iBAAV,CACIroC,WAAY,YACZnB,YAAU,EACVJ,UAAW2oC,EACX5nC,aAAc6nC,EACdtoC,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GAAD,OAAWA,IAAUgoC,EAAQhoC,OACtCK,UAAW,aAGnBP,WAAY,CAACkoC,GACbhqC,MAAO,IACP2C,UAAW,EACXW,YAAaoV,IAEjB,cAAC,IAASyyB,iBAAV,CACIroC,WAAY,QACZvB,UAAW6oC,EACX9nC,aAAc+nC,EACdxoC,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GACN,OAAwB,IAAjBA,EAAMP,QAA4C,IAA5BO,EAAMrB,MAAM,KAAKc,QAElDY,UAAW,SAEf,CACIF,QAAS,SAACH,GAAD,OAAYwoC,EAAUpsC,SAAS4D,IACxCK,UAAW,aAInBM,UAAW,EACXW,YAAaoV,IAEjB,cAAC,IAASyyB,iBAAV,CACIroC,WAAY,WACZnB,YAAU,EACVJ,UAAWuoC,EACXxnC,aAAcynC,EACdloC,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAWA,IAAU0oC,EAAWE,UACzCvoC,UAAW,aAInBrC,MAAO,IACP2C,UAAW,GACXW,YAAaoV,OAMnB2yB,EACuB,IAAzBzB,EAAOpoC,OAAOC,QACe,IAA1BuoC,EAAQxoC,OAAOC,QACkB,IAAjCyoC,EAAe1oC,OAAOC,QACE,IAAxB2oC,EAAM5oC,OAAOC,QACa,IAA1BqoC,EAAQtoC,OAAOC,OAmBtB,OACI,eAAC,GAAD,CACIzB,MAjME,IAiMYC,OAhMX,IA+LP,UAGI,cAAC,GAAD,UACI,cAAC,IAASc,QAAV,CACIL,QAAQ,8DAGhB,cAAC4qC,GAAD,UACI,cAAC,EAAD,CACInjC,YAAa,CACT,CAAEG,KAAM,OAAQE,QAAQ,EAAMI,KAAMsiC,GACpC,CAAE5iC,KAAM,WAAYE,QAAQ,EAAOI,KAAM,+BAE7Cb,SAAUqR,EACV1Q,eAAgB,SAACL,GAAD,OAAmBysB,EAAYzsB,QAGvD,cAACkjC,GAAD,UACI,cAAC,IAAStqC,aAAV,CACIf,QAAS,CACL,CACIC,MAAO,QACPC,SAAU,cAId,CACID,MAAO,SACPqC,SAAUkW,EACVtY,SAAU,WACNuY,GAAU,GACVgyB,MAGR,CACIxqC,MAAQuY,EAAsB,SAAX,SACnBlW,UAAWkW,GAAY2yB,EACvBjrC,SAAU,WACDsY,EAxDV,WACnB,IAAM8yB,EAAuC,IAAzBxB,EAAQhoC,MAAMP,OAAe,GAA7B,uBAAkDuoC,EAAQhoC,MAA1D,KACpBs1B,IAASyB,sBAAsB,SAA/B,oCACiC6Q,EAAO5nC,MADxC,uBAC4DooC,EAAMpoC,MADlE,YAC2EwpC,EAD3E,4CAEkBd,QAFlB,IAEkBA,OAFlB,EAEkBA,EAAY/M,MAC5Bl/B,MAAK,WACHisC,EAAWppB,GAAKsoB,EAAO5nC,MACnBgoC,EAAQhoC,MAAMP,OAAS,IACvBipC,EAAWE,SAAWZ,EAAQhoC,OAElC0oC,EAAWN,MAAQA,EAAMpoC,MACzBlC,EAAMO,OAAOC,OAAS,cAAC,KAAc2Y,UAAf,CAAyBvY,QAAQ,uBACvDX,EAAS,eAAID,OAiDW2rC,IAJA9yB,GAAU,GACVoxB,EAAW,2BAAKD,GAAN,IAAe9nC,MAAO,kBAiB9DzB,GAASf,IAAOC,IAAV,kSAOU,SAAAE,GAAK,OAAIA,EAAMM,OAAS,KACvB,SAAAN,GAAK,OAAIA,EAAMK,MAAQ,KACjC,SAAAL,GAAK,OAAIA,EAAMK,SACd,SAAAL,GAAK,OAAIA,EAAMM,UAcvBm4B,IARW54B,IAAOC,IAAV,wJAQED,IAAOC,IAAV,qKAQP6rC,GAAQ9rC,IAAOC,IAAV,4NAYL8rC,GAAU/rC,IAAOC,IAAV,sQAeP4Y,GAAQ7Y,IAAOC,IAAV,+HC5DIisC,GA5PY,WAAO,IAAD,EACD9rC,qBAAWC,IAA/BC,EADqB,EACrBA,MAAOC,EADc,EACdA,SADc,EAGC+D,oBAAS,GAHV,mBAGtB6nC,EAHsB,KAGZC,EAHY,OAKD9nC,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KALtD,mBAKtBooC,EALsB,KAKdC,EALc,OAMG/lC,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAN1D,mBAMtBopC,EANsB,KAMZiB,EANY,OAOiB/nC,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAPxE,mBAOtBsqC,EAPsB,KAOLC,EAPK,OAQSjoC,mBAAmB,IAR5B,mBAQtBkoC,EARsB,KAQTC,EARS,OAUOnoC,mBAAmB,IAV1B,mBAUtBwmC,EAVsB,KAUVC,EAVU,KAYvB2B,EAAiB,WAKnB,IAFA,IAAMvnC,EAAO,aACTsB,EAAO,GACFnF,EAAI,EAAGA,EAAI,EAAGA,IACnBmF,GAAQtB,EAAKgG,OAAOH,KAAKK,SAAWlG,EAAKlD,QAE7C,OAAOwE,GAIXnI,qBAAU,WACNw5B,IAAS6U,iBAAiB1tC,MAAK,SAAAkG,GAC3B4lC,EAAc5lC,QAQnB,IAlC0B,MAoCab,mBAAiBooC,KApC9B,mBAoCtBE,EApCsB,KAoCPC,EApCO,OAqCKvoC,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KArC5D,mBAqCtB8qC,EArCsB,KAqCXC,EArCW,KAwCvBC,EAAcx1B,mBAAQ,WACxB,OAAOxN,EAAWijC,eAAeL,KAElC,CAACA,IAEJtuC,qBAAU,WACN,IAAM6G,EAAiB,GACvB,GAAIilC,EAAOpoC,OAAOC,OAAS,EACvB,OAAQmoC,EAAOpoC,OAAO,IAClB,IAAK,WAAYmD,EAAKvC,KAAK,0BAA2B,MACtD,IAAK,SAAUuC,EAAKvC,KAAK,2CAA4C,MACrE,IAAK,QAASuC,EAAKvC,KAAK,8DAA+D,MACvF,IAAK,WAAYuC,EAAKvC,KAAK,6BAGnC,GAAIwoC,EAASppC,OAAOC,OAAS,EACzB,OAAQmpC,EAASppC,OAAO,IACpB,IAAK,WAAYmD,EAAKvC,KAAK,2BAA4B,MACvD,IAAK,SAAUuC,EAAKvC,KAAK,4CAA6C,MACtE,IAAK,WAAYuC,EAAKvC,KAAK,sCAGnC,GAAI0pC,EAAgBtqC,OAAOC,OAAS,EAChC,OAAQqqC,EAAgBtqC,OAAO,IAC3B,IAAK,SAAUmD,EAAKvC,KAAK,8CAGjC6pC,EAAetnC,KAChB,CAACilC,EAAQgB,IAgDZ,OAAQ,qCAEJ,cAAC,GAAD,CAAQnoC,WAAYkpC,EAApB,SACI,cAAC,IAAS/wB,YAAV,CACIjV,MAAM,oBACNE,SAAU,qCACN,cAAC,IAAS9E,QAAV,CACIL,QAAS,0CAEb,cAAC,IAASyqC,iBAAV,CACIjoC,YAAa,UACb3B,UAAWqoC,EACXtnC,aAAcunC,EACdhoC,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAau1B,gBAAgBppC,IACjDK,UAAW,SAEf,CACIF,QAAS,SAACH,GAAD,OAAYsoC,EAAWlsC,SAAS4D,IACzCK,UAAW,aAGnBrC,MAAO,IACPgB,UAAQ,IAEZ,cAAC,IAASmqC,iBAAV,CACIjoC,YAAa,WACbvB,YAAU,EACVJ,UAAWqpC,EACXtoC,aAAcupC,EACdhqC,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GAAD,OAAWA,IAAU8pC,EAAgB9pC,OAC9CK,UAAW,aAGnBP,WAAY,CAACgqC,GACb9rC,MAAO,IACPgB,UAAQ,IAEZ,cAAC,IAASmqC,iBAAV,CACIjoC,YAAa,YACbvB,YAAU,EACVJ,UAAWuqC,EACXxpC,aAAcypC,EACdlqC,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GAAD,OAAWA,IAAU4oC,EAAS5oC,OACvCK,UAAW,aAGnBP,WAAY,CAAC8oC,GACb5qC,MAAO,IACPgB,UAAQ,IAEZ,cAAC,IAAS0rC,UAAV,CAAoB1mC,YAAagmC,IACjC,cAAC,IAAS/qC,aAAV,CACIf,QAAS,CACL,CACIC,MAAO,QAASqC,SA1FR,IAAzBonC,EAAOpoC,OAAOC,QAA2C,IAA3BmpC,EAASppC,OAAOC,QAAkD,IAAlCqqC,EAAgBtqC,OAAOC,OA0FzBrB,SAAU,WACjDwrC,GAAU,eAQtC,eAAC,GAAD,CAAQnpC,UAAWkpC,EAAnB,UACI,cAAC,IAAS/wB,YAAV,CACIjV,MAAM,oBACNE,SAAU,qCACN,cAAC,IAAS9E,QAAV,CACIL,QAAS,oDAEb,cAACisC,GAAD,CAAW3hB,IAAKwhB,IAChB,cAAC,IAASvrC,aAAV,CACIf,QAAS,CACL,CACIC,MAAO,SAAUC,SAAU,WACvBisC,EAAiBH,KACjBK,EAAa,CAAEvqC,MAAO,GAAIR,OAAQ,UAMlD,cAAC,IAAS2pC,iBAAV,CACIjoC,YAAa,YACb3B,UAAW+qC,EACXhqC,aAAciqC,EACdvsC,MAAO,IACPgB,UAAQ,IAEZ,cAAC,IAASC,aAAV,CACIf,QAAS,CACL,CAAEC,MAAO,SAAUqC,SA5HJ,IAA5B8pC,EAAU9qC,OAAOC,QAAgB2qC,IAAkBE,EAAUtqC,MA4HP5B,SAvK5C,WAEjB,sBAAC,gCAAA4M,EAAA,sEACwBsqB,IAASyB,sBAAsB,SAA/B,2DAA6F6Q,EAA7F,MADxB,cACO5Q,EADP,gBAEuBA,EAASC,OAFhC,UAEOC,EAFP,OAGG/a,QAAQC,IAAI4I,KAAKE,UAAUgS,EAAQ,GAAGqP,QACtBrP,EAAQ,GAAGqP,IAAM,GAJpC,iBAMO0D,EAAe,CAAC,4CANvB,yCAQ6B3U,IAASsV,iBARtC,eAQaC,EARb,OASO1uB,QAAQC,IAAIyuB,GATnB,UAUavV,IAASyB,sBAAsB,SAA/B,yDAA2F8T,EAA3F,cAAwGjD,EAAO5nC,MAA/G,eAA2H4oC,EAAS5oC,MAApI,OAVb,QAWOlC,EAAMO,OAAO0G,KAAO,CAChB42B,IAAKkP,EACLvrB,GAAIsoB,EAAO5nC,MACX4oC,SAAUA,EAAS5oC,MACnBooC,MAAO,IAEXtqC,EAAM0H,MAAQ,CACVs5B,SAAU,IAEdhhC,EAAMO,OAAOC,OAAU,cAAC,KAAc2Y,UAAf,CACnBvY,QAAQ,4CACRR,QAAS,CACL,CACIC,MAAO,KACPC,SAAU,WACNN,EAAMO,OAAOC,OAAU,cAAC,GAAD,IACvBP,EAAS,eAAID,SAK7BC,EAAS,eAAID,IAhCpB,2CAAD,aA0KI,cAAC,IAASgtC,YAAV,CACIpsC,QAAQ,+BACR+E,YAAa,WACTmmC,GAAU,aASxBrrC,GAASf,IAAOC,IAAV,iDAGG,SAAAE,GAAK,OAAIA,EAAM8C,UAAY,QAAU,UAG9CkqC,GAAYntC,IAAO4rB,IAAV,gMC/DA2hB,GAtMI,WAAO,IAAD,EACOntC,qBAAWC,IAA/BC,EADa,EACbA,MAAOC,EADM,EACNA,SADM,EAGS+D,oBAAS,GAHlB,mBAGdkpC,EAHc,KAGJC,EAHI,OAKOnpC,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAL9D,mBAKdooC,EALc,KAKNC,EALM,OAMW/lC,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KANlE,mBAMdopC,EANc,KAMJiB,EANI,OAOK/nC,mBAAkC,CAAE9B,MAAO,GAAIR,OAAQ,KAP5D,mBAOd4oC,EAPc,KAOPC,EAPO,OAQiBvmC,mBAAmB,IARpC,mBAQdkoC,EARc,KAQDC,EARC,KAUrBnuC,qBAAU,WACN,IAAM6G,EAAiB,GACvB,GAAIilC,EAAOpoC,OAAOC,OAAS,EACvB,OAAQmoC,EAAOpoC,OAAO,IAClB,IAAK,WAAYmD,EAAKvC,KAAK,0BAA2B,MACtD,IAAK,SAAUuC,EAAKvC,KAAK,2CAA4C,MACrE,IAAK,QAASuC,EAAKvC,KAAK,8DAA+D,MACvF,IAAK,WAAYuC,EAAKvC,KAAK,6BAGnC,GAAIwoC,EAASppC,OAAOC,OAAS,EACzB,OAAQmpC,EAASppC,OAAO,IACpB,IAAK,WAAYmD,EAAKvC,KAAK,2BAA4B,MACvD,IAAK,SAAUuC,EAAKvC,KAAK,4CAGjC6pC,EAAetnC,KAChB,CAACilC,EAAQgB,IA2CZ,OAAQ,qCACJ,eAAC,GAAD,CAAQnoC,WAAYuqC,EAApB,UACI,cAAC,IAASpyB,YAAV,CACIjV,MAAM,oBACNE,SAAU,qCACN,cAAC,IAAS9E,QAAV,CACIL,QAAS,gCAEb,cAAC,IAASyqC,iBAAV,CACIjoC,YAAa,UACb3B,UAAWqoC,EACXtnC,aAAcunC,EACdhoC,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAau1B,gBAAgBppC,IACjDK,UAAW,UAGnBrC,MAAO,IACPgB,UAAQ,IAEZ,cAAC,IAASmqC,iBAAV,CACIjoC,YAAa,WACbvB,YAAU,EACVJ,UAAWqpC,EACXtoC,aAAcupC,EACdhqC,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,WAGnBrC,MAAO,IACPgB,UAAQ,IAEZ,cAAC,IAAS0rC,UAAV,CAAoB1mC,YAAagmC,IACjC,cAAC,IAAS/qC,aAAV,CACIf,QAAS,CACL,CAAEC,MAAO,QAASqC,SArDN,IAAzBonC,EAAOpoC,OAAOC,QAA2C,IAA3BmpC,EAASppC,OAAOC,OAqDYrB,SAxFjD,WAEhB,sBAAC,8BAAA4M,EAAA,sEACyBsqB,IAAS4V,kBAAkBtD,EAAO5nC,MAAO4oC,EAAS5oC,OAD3E,UACSk3B,EADT,OAEG/a,QAAQC,IAAI4I,KAAKE,UAAUgS,MACvBA,EAAQz3B,OAAS,GAHxB,wBAIO3B,EAAMO,OAAO0G,KAAO,CAChB42B,IAAKzE,EAAQ,GAAGyE,IAChBrc,GAAI4X,EAAQ,GAAG5X,GACfspB,SAAU1R,EAAQ,GAAG0R,SACrBR,MAAOlR,EAAQ,GAAGkR,OAR7B,SAUgC+C,GAAoBjU,EAAQ,GAAGyE,KAV/D,OAUayP,EAVb,OAWOjvB,QAAQC,IAAI4I,KAAKE,UAAUkmB,IAC3BttC,EAAM0H,MAAQ,CACVs5B,SAAUsM,EAAWxsC,KAAI,SAAAu2B,GAAG,MAAK,CAC7BK,OAAQL,EAAIK,OACZ91B,KAAMy1B,EAAIz1B,KACV4G,KAAM6uB,EAAI7uB,KACVq1B,IAAKxG,EAAIwG,IACTtG,QAASF,EAAIE,aAGrBv3B,EAAMO,OAAOC,OAAS,cAAC,KAAc2Y,UAAf,CAClBvY,QAAQ,sBAEZX,EAAS,eAAKD,IAxBrB,wBA0BOmsC,EAAe,CAAC,mCA1BvB,2CAAD,aA2FI,cAAC,IAASa,YAAV,CACIpsC,QAAQ,iCACR+E,YAAa,WACTwnC,GAAU,SAItB,eAAC,GAAD,CAAQxqC,UAAWuqC,EAAnB,UACI,cAAC,IAASpyB,YAAV,CACIjV,MAAM,QACNE,SAAU,qCACN,cAAC,IAAS9E,QAAV,CACIL,QAAS,iDAEb,cAAC,IAASyqC,iBAAV,CACIjoC,YAAa,QACb3B,UAAW6oC,EACX9nC,aAAc+nC,EACdxoC,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW6T,GAAawG,cAAcra,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW6T,GAAayG,kBAAkBta,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GACN,OAAwB,IAAjBA,EAAMP,QAA4C,IAA5BO,EAAMrB,MAAM,KAAKc,QAElDY,UAAW,UAGnBrC,MAAO,IACPgB,UAAQ,IAEZ,cAAC,IAASC,aAAV,CACIf,QAAS,CACL,CACIC,MAAO,OAAQqC,SAAkC,IAAxB4nC,EAAM5oC,OAAOC,OAAcrB,SAAU,WAC1Dk3B,IAAS+V,sBAAsBjD,EAAMpoC,OAAOvD,MAAK,SAACkG,GAC9C,GAAIA,EAAKlD,OAAS,EAAG,CACjB,IAAMqpC,EAAOnmC,EAAK,GACZ49B,EAAOjL,IAASyT,qBAAqBD,EAAKnN,KAC1C2B,EAAG,iDAA6CiD,GACtDjL,IAASgW,0BAA0B,CAC/BC,KAAM,oBACNC,GAAIpD,EAAMpoC,MACVyrC,QAAS,8BACTxnC,KAAK,iDAAD,OAAmDq5B,EAAnD,qBAAmEwL,EAAKxpB,oBAahH,cAAC,IAASwrB,YAAV,CACIpsC,QAAQ,+BACR+E,YAAa,WACTwnC,GAAU,aAUjBE,GAAmB,uCAAG,WAAOO,GAAP,iBAAA1gC,EAAA,sEACRsqB,IAASyB,sBAAsB,SAA/B,qFAAuH2U,EAAvH,kBADQ,cACzB1U,EADyB,gBAETA,EAASC,OAFA,cAEzBC,EAFyB,yBAGxBA,GAHwB,2CAAH,sDAM1B34B,GAASf,IAAOC,IAAV,iDAGG,SAAAE,GAAK,OAAIA,EAAM8C,UAAY,QAAU,UCrKrCkrC,GArCI,WAAO,IAAD,EACO/tC,qBAAWC,IADlB,KACbC,MADa,EACNC,SAEe+D,oBAAS,IAHlB,mBAGdkiB,EAHc,KAGJ4nB,EAHI,KAKfzE,EAAOnyB,mBAAQ,WACjB,OAAOxN,EAAW4/B,eACnB,IAEH,OACI,eAAC,GAAD,CACIppC,MAlBE,IAkBYC,OAjBX,IAgBP,UAGI,cAAC,GAAD,UACI,qBAAK+qB,IAAKme,MAEd,eAAC,GAAD,WACI,cAAC0E,GAAD,CAAatlC,UAAWyd,EAAU1gB,QAAS,WACvCsoC,GAAU,IADd,mBAGA,cAACC,GAAD,CAAatlC,SAAUyd,EAAU1gB,QAAS,WACtCsoC,GAAU,IADd,+BAIF5nB,EAA4B,cAAC,GAAD,IAAjB,cAAC,GAAD,QAenBzlB,GAASf,IAAOC,IAAV,kSAOU,SAAAE,GAAK,OAAIA,EAAMM,OAAS,KACvB,SAAAN,GAAK,OAAIA,EAAMK,MAAQ,KACjC,SAAAL,GAAK,OAAIA,EAAMK,SACd,SAAAL,GAAK,OAAIA,EAAMM,UAMvB6tC,GAAWtuC,IAAOC,IAAV,wJAQR24B,GAAU54B,IAAOC,IAAV,8JASPouC,GAAcruC,IAAOC,IAAV,8OAGXF,KAAOgH,kBAEP,SAAA5G,GAAK,OAAKA,EAAM4I,SAAgBjJ,YAAvB,sEAAkB,MASvB,SAAAK,GAAK,OAAKA,EAAM4I,SAAgBjJ,YAAvB,8EAAkB,MC/BtByuC,IDoCCvuC,IAAOC,IAAV,oLAUED,IAAOC,IAAV,2KAENF,KAAOgH,kBAQM/G,IAAOgH,MAAV,8PAEVjH,KAAOgH,kBAWG/G,IAAOC,IAAV,sQAcaD,IAAOC,IAAV,kNAGjBF,KAAOgH,kBACP,SAAA5G,GAAK,OAAIA,EAAM6C,SAAW,GAAKjD,KAAO+G,sBCnJxB,WAAO,IAAD,EAEM1G,qBAAWC,IAA/BC,EAFc,EAEdA,MAAOC,EAFO,EAEPA,SAETgH,EAAOjH,EAAMO,OAAO0G,KAJJ,EAMMjD,mBAAS,IANf,mBAMf8lC,EANe,KAMPC,EANO,KAQhBV,EAAOnyB,mBAAQ,WACjB,OAAOxN,EAAW4/B,eACnB,IAEHtrC,qBAAU,WACM,MAARiJ,GACA8iC,EAAU,IAAM9iC,EAAKua,MAE1B,CAACva,IAEJ,IAAMinC,EAAwB,MAARjnC,EAClB,eAACknC,GAAD,CAAc3oC,QAAS,WACnBxF,EAAMO,OAAOC,OAAS,cAAC,GAAD,IACtBP,EAAS,eAAKD,IACdqe,QAAQC,IAAI6X,OAAOiY,SAASn+B,SAHhC,UAKI,8BAAK,cAAC,KAAD,MALT,qBAQC,qCACD,cAACo+B,GAAD,CACIC,QAAiB,MAARrnC,EACTzB,QAAS,WACLxF,EAAMO,OAAOC,OAAS,cAAC,GAAD,IACtBP,EAAS,eAAKD,KAJtB,SAME8pC,IACF,eAACqE,GAAD,CAAc3oC,QAAS,WACnBxF,EAAMO,OAAO0G,KAAO,KACpBjH,EAAM0H,MAAQ,KACd1H,EAAMO,OAAOC,OAAS,cAAC,KAAc2Y,UAAf,CAClBvY,QAAS,gCAEbX,EAAS,eAAKD,KANlB,UAQI,8BAAK,cAAC,KAAD,MART,eAYJ,OACI,eAAC,GAAD,WACI,cAAC,GAAD,CAAOkrB,IAAKme,IACZ,eAACkF,GAAD,WACKL,EACD,cAACM,GAAD,UACI,8BAAK,cAAC,KAAD,gBASnBj2B,GAAQ7Y,IAAOC,IAAV,4QrE/DuB,IqEgG5B4uC,IAvBS7uC,IAAOC,IAAV,sTAaID,IAAO6kB,KAAV,mDAGG7kB,IAAO6kB,KAAV,yEAOC7kB,IAAOC,IAAV,0LASL8uC,GAAY/uC,IAAOC,IAAV,iKAQTwuC,GAAezuC,YAAO+uC,GAAP/uC,CAAH,8tBA2BZ2uC,GAAY3uC,IAAOC,IAAV,sSAYT,SAAAE,GAAK,OAAIA,EAAMyuC,QAAU,GAAK9uC,YAArB,gEAMTgvC,GAAY9uC,YAAO+uC,GAAP/uC,CAAH,moBAEFgvC,GACCA,IAoBRlF,GAAQ9pC,IAAO4rB,IAAV,mNChKIqjB,GA3BK,SAAC9uC,GAEd,IAAD,EAE0BC,qBAAWC,IAFrC,EAEMC,MAFN,EAEaC,SAoBf,OAlBAjC,qBAAU,WACN,IAAM6/B,EAAMrG,IAASoX,uBAAuB/uC,EAAM+5B,SAClDvb,QAAQC,IAAIuf,GACZrG,IAASqX,oBAAoBhR,GAAKl/B,MAAK,SAAAy4B,GAEnC,GADA/Y,QAAQC,IAAI8Y,GACRA,EAAQz1B,OAAS,EACEy1B,EAAQ,QAKpC,IAOI,cAAC,IAAD,CAAUsW,GAAG,OCOToB,GA/BU,WAAO,IAAD,EAEChvC,qBAAWC,IAA/BC,EAFmB,EAEnBA,MAAOC,EAFY,EAEZA,SAEf,OACI,eAAC,GAAD,CACIC,MAAO,IACPC,OAAQ,IAFZ,UAII,eAAC4uC,GAAD,CAAUvpC,QAAS,WACfxF,EAAMoH,IAAIC,eAAgB,EAC1BrH,EAAMoH,IAAIE,gBAAiB,EAC3BtH,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAID,KAJjB,UAMI,cAACgvC,GAAD,iCACA,cAACC,GAAD,yBACA,cAACC,GAAD,mHAEJ,eAACH,GAAD,CAAUvpC,QAAS,WACfxF,EAAMO,OAAOC,OAAS,KACtBP,EAAS,eAAID,KAFjB,UAII,cAACgvC,GAAD,iCACA,cAACC,GAAD,gCACA,cAACC,GAAD,4JASVzuC,GAASf,IAAOC,IAAV,6UAOU,SAAAE,GAAK,OAAIA,EAAMM,OAAS,KACvB,SAAAN,GAAK,OAAIA,EAAMK,MAAQ,KACjC,SAAAL,GAAK,OAAIA,EAAMK,SACd,SAAAL,GAAK,OAAIA,EAAMM,UAOvB4uC,GAAWrvC,IAAOC,IAAV,yUAgBRqvC,GAAYtvC,IAAOC,IAAV,+IASTsvC,GAAavvC,IAAOC,IAAV,6IASVuvC,GAAaxvC,IAAOC,IAAV,+VCtEHI,GAAgB0Y,wBAAc,IAerC02B,IAFSC,IAXK,WAIhB,OACI,cAAC,IAAD,CAAYC,SAAUC,kBAAtB,SACI,cAAC,GAAD,OAOS,WAAO,IAAD,EAEGtrC,mBAAS+C,GAFZ,mBAEhB/G,EAFgB,KAETC,EAFS,KAKjBmV,EADQ,IAAIm6B,gBAAgBC,cAAcC,QAC9Blf,IAAI,KAEhBmf,EAAa1vC,EAAMO,OAAOyG,SAC5B,cAAC,GAAD,CACIoiC,OAAQ,WACJppC,EAAMO,OAAOyG,UAAW,EACxBhH,EAAMO,OAAOC,OAAS,cAAC,GAAD,IACtBP,EAAS,eAAKD,OALiB,6BAS3C,OACI,cAACD,GAAcoa,SAAf,CAAwBjY,MAAO,CAAElC,QAAOC,YAAxC,SACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAO0vC,KAAK,IAAIC,OAAK,EAArB,UACKF,EACD,eAAC,GAAD,WACI,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAACG,GAAD,UACI,cAAC,GAAD,YAIZ,cAAC,IAAD,CAAOF,KAAK,QAAQC,OAAK,EAAzB,SACI,cAAC,GAAD,MAGJ,cAAC,IAAD,CAAOD,KAAK,WAAWC,OAAK,EAA5B,SACI,cAAC,GAAD,CAAYhW,QAASxkB,MAEzB,cAAC,IAAD,CAAOu6B,KAAK,SAASC,OAAK,EAA1B,SACI,cAAC,GAAD,CAAYhW,QAASxkB,MAEzB,cAAC,IAAD,CAAOu6B,KAAK,QAAQC,OAAK,EAAzB,SACI,cAAC,GAAD,CAAahW,QAASxkB,aAQpCmD,GAAQ7Y,IAAOC,IAAV,wMAULkwC,GAAWnwC,IAAOC,IAAV,kJxElFoB,K,wNyEOvB,IAAMmwC,EAAgB,mBAAG,6BAInBC,EAAiB,oBAAG,+CAK3BC,EAAqB,WACvB,OAAO,IAAIC,IAAQ,UAAW,IAgB5BC,GAb2B,uBAAG,SAACrS,GACjC,IACM4E,EADUuN,IACKG,OAAOtS,GAE5B,OADkBuS,IAAOD,OAAO1N,GAAM,IAIP,yBAAG,SAAC4N,GACnC,IAAMC,EAAUN,IAEhB,OADqBzrC,OAAO+rC,EAAQC,OAAOH,IAAOG,OAAOF,MAIjC,WACxB,OAAO,IAAIJ,IAAQ,KAAM,KAGhBvM,EAAuB,0BAAG,SAAC7F,GACpC,IACM4E,EADUyN,IACKC,OAAOtS,GAE5B,OADkBuS,IAAOD,OAAO1N,GAAM,IAiE7BxJ,GA7DyB,4BAAG,SAACoX,GACtC,IAAMC,EAAUJ,IAEhB,OADqB3rC,OAAO+rC,EAAQC,OAAOH,IAAOG,OAAOF,MAInC,gBAAG,SAACG,GAC1B,IAAMC,EAAY/M,EAAwB8M,GAE1C,MADS,UAAMT,EAAN,wBAAuCU,IAwCd,4BAAG,SAACtX,GACtC,OAAO0O,MAAMiI,EAAmB,QAbF,SAAC3W,GAC/B,MAAO,CACHuX,KAAM,OACNv+B,OAAQ,OACRw+B,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAM3pB,KAAKE,UAAU+R,IAMrB2X,CAA0B3X,KAWA,wBAAG,SAAC4X,EAAgCC,GAClE,OAAOnJ,MAAMiI,EAAmB,IAAMiB,EA7CX,SAACC,GAC5B,MAAO,CACHN,KAAM,OACNv+B,OAAQ,OACRw+B,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAM3pB,KAAKE,UAAU,CAAE4pB,MAAKC,aAvDd,SA6FdC,CAAuBF,MAIlBjG,EAAgB,yCAAG,8BAAA79B,EAAA,sEACL+rB,EAAsB,SAAD,kCADhB,cACtBC,EADsB,gBAENA,EAASC,OAFH,cAEtBC,EAFsB,yBAGrBA,GAHqB,2CAwInB+X,GAlIc,uCAAG,4BAAAjkC,EAAA,sEACJ69B,IADI,cACpB3R,EADoB,yBAElBA,EAA6Bt4B,KAAI,SAAAu2B,GAAG,OAAIA,EAAI7V,OAF1B,2CAKI,+DAAG,WAAO8oB,GAAP,iBAAAp9B,EAAA,sEACV+rB,EAAsB,SAAD,sDAA0DqR,EAA1D,MADX,cAC3BpR,EAD2B,gBAEXA,EAASC,OAFE,cAE3BC,EAF2B,yBAG1BA,GAH0B,2CAAH,sDAMF,6DAAG,WAAOyE,GAAP,iBAAA3wB,EAAA,sEACR+rB,EAAsB,SAAD,oEAAwE4E,IADrF,cACzB3E,EADyB,gBAETA,EAASC,OAFA,cAEzBC,EAFyB,yBAGxBA,GAHwB,2CAAH,sDAMF,2DAAG,WAAO5X,EAAYspB,GAAnB,iBAAA59B,EAAA,sEACN+rB,EAAsB,SAAD,oEAAwEzX,EAAxE,6BAA+FspB,EAA/F,MADf,cACvB5R,EADuB,gBAEPA,EAASC,OAFF,cAEvBC,EAFuB,yBAGtBA,GAHsB,2CAAH,wDAMH,uCAAG,gCAAAlsB,EAAA,sEACH+rB,EAAsB,SAAD,2DADlB,cACpBC,EADoB,gBAEJA,EAASC,OAFL,cAEpBC,EAFoB,OAGpB2T,EAAW3T,EAAQ,GAAR,IAA+B,EAChD5B,EAASyB,sBAAsB,SAA/B,kEAJ0B,kBAMnB8T,GANmB,2CASA,2DAAG,WAAOa,GAAP,iBAAA1gC,EAAA,sEACNsqB,EAASyB,sBAAsB,SAA/B,oEAAsG2U,IADhG,cACvB1U,EADuB,gBAEPA,EAASC,OAFF,cAEvBC,EAFuB,yBAGtBA,GAHsB,2CAAH,sDAMR,mDAAG,WAAOoX,GAAP,iBAAAtjC,EAAA,sEACEsqB,EAASyB,sBAAsB,SAA/B,8HAAgKuX,IADlK,cACftX,EADe,gBAECA,EAASC,OAFV,cAEfC,EAFe,yBAGdA,GAHc,2CAAH,sDAMD,WAAG,SAACp5B,EAAcC,GACnC,sBAAC,0CAAAiN,EAAA,sEAC8BipB,OAAO0M,qBADrC,0CACUl7B,EADV,cAEsBA,EAAWm7B,UAFjC,cAESC,EAFT,iBAG8BA,EAAK58B,OAHnC,QAGS68B,EAHT,OAIGhjC,EAAM2H,WAAaA,EACbxB,EAAOqxB,EAASC,MAAMuL,IACtBtyB,EAAOwW,KAAKC,MAAMhhB,IAEdwxB,eAAe,iBAGfC,EAAgBlnB,EACtB1Q,EAAMuH,YAAcqwB,EAAcrwB,YAClCvH,EAAMwH,UAAYowB,EAAcC,cAJhC73B,EAAMuH,YAAcmJ,EAMxB1Q,EAAMO,OAAOC,OAAS,cAAC,IAAc2Y,UAAf,CAAyBvY,QAAQ,8BACvDX,EAAS,eAAKD,IAhBjB,2CAAD,IAoBoB,cAAG,SAACA,EAAcC,GACtC,IAAMiQ,EAAWlQ,EAAMuH,YACnBI,EAAa3H,EAAM2H,WAYjB8+B,EAAYvf,KAAKE,UAAUlX,GACf,MAAdvI,EACA,sBAAC,8BAAAuF,EAAA,sEAE0BvF,EAAWm/B,iBAFrC,cAESC,EAFT,OAIS5gC,EAAOqxB,EAASmN,KAAK8B,GAJ9B,SAKSM,EAASC,MAAM7gC,GALxB,uBAOS4gC,EAASE,QAPlB,OAUGjnC,EAAMO,OAAOC,OAAS,cAAC,IAAc2Y,UAAf,CAAyBvY,QAAQ,8BACvDX,EAAS,eAAKD,IAXjB,2CAAD,GAcAm2B,OAAOuQ,mBA1BK,CACZC,MAAO,CACH,CACIC,OAAQ,CACJ,aAAc,CAAC,cAsBQjoC,MAAK,SAACkoC,GACrC,sBAAC,8BAAA35B,EAAA,sEAE0B25B,EAAOC,iBAFjC,cAESC,EAFT,OAIS5gC,EAAOqxB,EAASmN,KAAK8B,GAJ9B,SAKSM,EAASC,MAAM7gC,GALxB,uBAOS4gC,EAASE,QAPlB,OAQGjnC,EAAM2H,WAAak/B,EAEnB7mC,EAAMO,OAAOC,OAAS,cAAC,IAAc2Y,UAAf,CAAyBvY,QAAQ,kCACvDX,EAAS,eAAKD,IAXjB,2CAAD,MAaDknC,OAAM,WACL7oB,QAAQC,IAAI,oEAKI,kBAAG,SAACte,EAAcC,GAC1C,IAAMiQ,EAAWlQ,EAAMuH,YACjBk/B,EAAYvf,KAAKE,UAAUlX,GACjCihC,EAASnxC,EAAOC,EAAUwmC,EAAW,SAGZ,mBAAG,SAACzmC,EAAcC,GAC3C,IAAMyQ,EAAoC,CACtCnJ,YAAavH,EAAMuH,YACnBswB,aAAc73B,EAAMwH,WAElBi/B,EAAYvf,KAAKE,UAAU1W,GACjCygC,EAASnxC,EAAOC,EAAUwmC,EAAW,SAGpB,WAAG,SAACzmC,EAAcC,EAAuDwmC,EAAmB2K,GAC7G,IAAIzpC,EAAa3H,EAAM2H,WAEjB0pC,EAAU,CACZ1K,MAAO,CACH,CACIC,OAAQ,CACJ,aAAc,CAAC,IAAD,OAAKwK,QAMjB,MAAdzpC,EACA,sBAAC,8BAAAuF,EAAA,sEAE0BvF,EAAWm/B,iBAFrC,cAESC,EAFT,OAIS5gC,EAAOqxB,EAASmN,KAAK8B,GAJ9B,SAKSM,EAASC,MAAM7gC,GALxB,uBAOS4gC,EAASE,QAPlB,OAUGjnC,EAAMO,OAAOC,OAAS,cAAC,IAAc2Y,UAAf,CAAyBvY,QAAQ,8BACvDX,EAAS,eAAKD,IAXjB,2CAAD,GAcAm2B,OAAOuQ,mBAAmB2K,GAAS1yC,MAAK,SAACkoC,GACrC,sBAAC,8BAAA35B,EAAA,sEAE0B25B,EAAOC,iBAFjC,cAESC,EAFT,OAIS5gC,EAAOqxB,EAASmN,KAAK8B,GAJ9B,SAKSM,EAASC,MAAM7gC,GALxB,uBAOS4gC,EAASE,QAPlB,OAQGjnC,EAAM2H,WAAak/B,EAEnB7mC,EAAMO,OAAOC,OAAS,cAAC,IAAc2Y,UAAf,CAAyBvY,QAAQ,kCACvDX,EAAS,eAAKD,IAXjB,2CAAD,MAaDknC,OAAM,WACL7oB,QAAQC,IAAI,qEAKE,gBAAG,SAACgzB,GAC1B,OAAOC,iBAAOD,IAQD,OAAG,SAACvR,GAEjB,IAAMyR,EAAUC,mBAAmB1R,GAKnC,OAHe2R,IAAKC,SAASH,GAER9sC,SAAS,WAShB,QAAG,SAACq7B,GAElB,IAAM6R,EAASC,EAAOpE,KAAK1N,EAAK,UAE1Bx+B,EAASmwC,IAAKI,UAAUF,GAG9B,OADYG,mBAAmBxwC,EAAOmD,aASZ,oBAAG,SAACujC,GAE9B,IAAM+J,EAAW/J,EAAKgK,cAAcvtC,WAE9BwtC,GAAa,EAAIjK,EAAKkK,YAAYztC,WAClC0tC,EAAUnK,EAAKoK,UAAU3tC,WACzB4tC,EAAWrK,EAAKsK,WAAW7tC,WAC3B8tC,EAAavK,EAAKwK,aAAa/tC,WAC/BguC,EAAazK,EAAK0K,aAAajuC,WAEjCkuC,EAAa,sBAQjB,OAFAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAaA,EAAWC,QAAQ,QAASb,IACjBa,QAAQ,MAAOX,IACfW,QAAQ,MAAOT,IACfS,QAAQ,MAAOP,IACfO,QAAQ,MAAOL,IACfK,QAAQ,MAAOH,IAKlB,eAAG,SAAC9wC,EAAmBi8B,GAC5C,MAAM,GAAN,OAAUkS,EAAV,cAAiCnuC,EAAjC,cAA2C8hC,EAAwB7F,K,CAhWjErG,M,KAoWKA,Q","file":"static/js/main.80adc24e.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nconst App = () => {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 18px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 22px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport { useContext } from \"react\";\r\n\r\nnamespace ConfirmDialog {\r\n\r\n    export const Component = (props: {\r\n        message: string;\r\n        width?: number;\r\n        height?: number;\r\n        buttons?: FormUtil.ButtonProps[];\r\n    }) => {\r\n\r\n        const {store,  setStore } = useContext(GlobalContext);\r\n\r\n        const width = props.width ?? 600;\r\n        const height = props.height ?? 150;\r\n        const buttons = props.buttons ?? [\r\n            {\r\n                label: 'OK',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({...store});\r\n                }\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main><_Inner>\r\n                    {props.message.split('\\n').map((msg, i) => {\r\n                        return <FormUtil.Message\r\n                            key={i}\r\n                            message={msg}\r\n                            isCenter\r\n                        />\r\n                    })}\r\n                </_Inner></_Main>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons} />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 110px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* background-color: #bb6868e1; */\r\n`;","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport ValidateUtil from \"./validateUtil\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nnamespace FormUtil {\r\n\r\n    export type CheckableValue = {\r\n        value: string;\r\n        errors: ValidateUtil.ErrorType[];\r\n    }\r\n\r\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\r\n        let result = true;\r\n        checkables.forEach(checkable => {\r\n            if (checkable.errors.length > 0) {\r\n                result = false;\r\n                return 1;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    export const InputTextFormBak = (props: {\r\n        titleLabel?: string;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        isCenter?: boolean;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        marginTop?: number;\r\n        isReadOnly?: boolean;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const type = props.isPassword ?? false ? 'password' : 'text';\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency);\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\r\n                <_ItemnInputBak\r\n                    type={type}\r\n                    value={props.checkable.value}\r\n                    hasTitle={props.titleLabel != undefined}\r\n                    width={props.width}\r\n                    isCenter={props.isCenter ?? false}\r\n                    placeholder={props.placeholder}\r\n                    onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        props.checkable.value = value;\r\n                        props.checkable.errors = getErrors(value);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }}\r\n                    errorType={errors.length === 0 ? undefined : errors[0]}\r\n                    readOnly={props.isReadOnly}\r\n                />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n\r\n    export const Record = (props: {\r\n        isEnable?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    const DEFAULT_LABEL_WIDTH = 140;\r\n    export const FormRecord = (props: {\r\n        titleLabel?: string;\r\n        labelWidth?: number;\r\n        isEnabled?: boolean;\r\n        isVisible?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        const lablelWidth = props.labelWidth ?? DEFAULT_LABEL_WIDTH;\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnabled ?? true}\r\n                isVisible={props.isVisible ?? true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={lablelWidth}>{props.titleLabel}</_ItemnLabel>}\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FixedText = (props: {\r\n        value: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        marginLeft?: number;\r\n        isRecordItem?: boolean;\r\n    }) => {\r\n        let width: string | undefined = undefined;\r\n        if(props.isRecordItem) width = `calc(100% - ${DEFAULT_LABEL_WIDTH + 16}px)`;\r\n        if(props.width != undefined) width = props.width + 'px';\r\n        return (\r\n            <_FixedLabel width={width}>{props.value}</_FixedLabel>\r\n        );\r\n    }\r\n\r\n    export const TextField = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        isNumber?: boolean;\r\n        marginLeft?: number;\r\n        step?: number;\r\n    }) => {\r\n        const [isNaN, setNaN] = useState(false);\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        let type = props.isPassword ?? false ? 'password' : 'text';\r\n        if (props.isNumber ?? false) {\r\n            type = 'number';\r\n        }\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n        const step = props.step ?? 1;\r\n\r\n        const isEnable = props.isEnabled ?? true;\r\n        return (\r\n            <_ItemnInput\r\n                type={type}\r\n                value={value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                step={step}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                    if (type === 'number') {\r\n                        setNaN(Number.isNaN(e.target.valueAsNumber));\r\n                    }\r\n                }}\r\n                onBlur={() => {\r\n                    if (type === 'number') {\r\n                        if (isNaN) props.checkable.value = ' ';\r\n                        else props.checkable.value = Number(value).toString();\r\n                        // console.log(`[${props.checkable.value}]`);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }\r\n                }}\r\n                errorType={!isEnable || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\r\n\r\n    export const Combobox = (props: {\r\n        list: ComboboxItemProps[];\r\n        headBlank?: boolean;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n        const headBlank = props.headBlank ?? false;\r\n        const list = props.list.slice();\r\n        if (headBlank) list.unshift({ value: '', labelText: '' });\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n\r\n        useEffect(() => {\r\n            // console.log('value: ' + props.checkable.value);\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const isEnable = props.isEnabled ?? true;\r\n        return (\r\n            <_ItemCombobox\r\n                value={props.checkable.value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    props.checkable.value = value;\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n\r\n                }}\r\n                errorType={!isEnable || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            >{list.map((item, i) => {\r\n                return (\r\n                    <_Option key={i}\r\n                        value={item.value}\r\n                        disabled={item.isDisabled ?? false}\r\n                        isDisabled={item.isDisabled ?? false}\r\n                    >{item.labelText}</_Option>\r\n                );\r\n            })}</_ItemCombobox>\r\n        );\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        label: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ButtonRecord = (props: {\r\n        buttons: ButtonProps[],\r\n        align?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const align = props.align ?? 'right';\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={align}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.buttons.map((button, i) => {\r\n                    return (\r\n                        <_Button\r\n                            key={i}\r\n                            isCenter={align === 'center'}\r\n                            isEnable={button.isEnable ?? true}\r\n                            width={button.width}\r\n                            onClick={button.callback}\r\n                        >{button.label}</_Button>\r\n                    );\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const ButtonItem = (props: {\r\n        button: ButtonProps\r\n    }) => {\r\n        return (\r\n            <_Button\r\n                isCenter={false}\r\n                isEnable={props.button.isEnable ?? true}\r\n                width={props.button.width}\r\n                onClick={props.button.callback}\r\n            >{props.button.label}</_Button>\r\n        );\r\n    }\r\n\r\n    export const Message = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const MessageLink = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        clickAction: () => void;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isLink={true}\r\n                    onClick={props.clickAction}\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        // const title = props.title ?? 'title pl';\r\n        return (<>\r\n            <_BorderText>{props.title}</_BorderText>\r\n            <_BorderPanel isEnable={props.isEnable ?? true}>{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export const InfoFrame = (props: {\r\n        height?: number;\r\n        textRecords: string[];\r\n    }) => {\r\n        const height = props.height ?? 70;\r\n        const color = '#1a9900';\r\n        return (<>\r\n            <_InfoDiv height={height} color={color}>\r\n                {props.textRecords.map((text, i) => {\r\n                    return <span key={i}>{text}<br /></span>;\r\n                })}\r\n            </_InfoDiv>\r\n        </>);\r\n    };\r\n\r\n    export const Switch = (props: {\r\n        label: string;\r\n        isUse: boolean;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        isRelation?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isRelation = props.isRelation ?? false;\r\n        const callback = isRelation && props.isUse ? () => { } : props.callback;\r\n        return (\r\n            <_Switch\r\n                isRelation={isRelation}\r\n                isUse={props.isUse}\r\n                isEnable={props.isEnable ?? true}\r\n                width={props.width}\r\n                onClick={callback}\r\n            >{props.label}</_Switch>\r\n        );\r\n    }\r\n\r\n    export const checkItems = (list: CheckableValue[]) => {\r\n        return list.find(item => item.errors.length > 0) == undefined;\r\n    }\r\n}\r\n\r\nexport default FormUtil;\r\n\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n    textAlign: 'left' | 'center' | 'right';\r\n    marginTop: number;\r\n    marginBottom: number;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    width: 100%;\r\n    height: 40px;\r\n    margin-top: ${props => props.marginTop}px;\r\n    margin-bottom: ${props => props.marginBottom}px;\r\n    /* background-color: #b3b4c4; */\r\n    /* border: 1px solid #000; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    text-align: ${props => props.textAlign};\r\n`;\r\n\r\nconst _ItemnLabel = styled.div<{\r\n    labelWidth?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.labelWidth}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #c3c3c3fc, #d8d8d8, #c3c3c3fc);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n`;\r\n\r\nconst _FixedLabel = styled.div<{\r\n    width?: string;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #0c0e86;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c51a;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n    overflow-x: hidden;\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width};\r\n    `}\r\n`;\r\n\r\nconst _ItemnInputBak = styled.input<{\r\n    readOnly?: boolean;\r\n    isCenter: boolean;\r\n    hasTitle: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${props => !props.hasTitle ? css`\r\n    ` : css`\r\n        width: calc(100% - 152px);\r\n    `}\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    margin-top: 2px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    /* ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    } */\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemCombobox = styled.select<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n        pointer-events: none;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _Option = styled.option<{\r\n    isDisabled: boolean;\r\n}>`\r\n    ${props => !props.isDisabled ? '' : css`\r\n        color: #0000004b;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n    isLink?: boolean;\r\n    isCenter: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #002c52;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => !props.isLink ? '' : css`\r\n        color: #0459a3;\r\n        user-select: none;\r\n        text-decoration: underline;\r\n        &:hover {\r\n            color: #68a4d8;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #cdcdcd, #ebebeb, #cdcdcd);\r\n    border: 1px solid #747474;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isUse: boolean;\r\n    isEnable: boolean;\r\n    width?: number;\r\n    isRelation: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    color: #515151;\r\n    border: 1px solid #747474;\r\n    ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\r\n    ` : css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#ddc1d979' : '#d898b3'};\r\n        color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n    `}\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\r\n        ` : css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#d3a1cb79' : '#d898b3'};\r\n            color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _BorderText = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: #990000;\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    background-color: #dcddce;\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    margin: 4px 0 0 0;\r\n    display: inline-block;\r\n    background-color: #e7e5e561;\r\n    border: solid 1px #949494;\r\n    width: 100%;\r\n    height: ${props => props.height}px;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: ${props => props.color};\r\n    overflow-y: auto;\r\n`;","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport StoreCloud from \"./storeCloud\";\r\nimport StoreSystem from \"./storeSystem\";\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    system: StoreSystem.Param;\r\n    env: StoreSystem.Env;\r\n    libraryData: LogicUtil.WrapElement | null;\r\n    storyData: StoryUtil.StoryData | null;\r\n    scenarioCacheList: StoryUtil.Cache[];\r\n    cloud: StoreCloud.Props | null;\r\n    fileHandle: FileSystemFileHandle | null;\r\n    isPreviewMode: boolean;\r\n}\r\n\r\n\r\nexport const ProjectTypes = ['library', 'story'] as const;\r\nexport type ProjectType = typeof ProjectTypes[number];\r\n\r\nexport const initialStore: Store = {\r\n    system: {\r\n        isSplash: true,\r\n        user: null,\r\n        dialog: null,\r\n        isModeSelect: false,\r\n        canDialogClose: false,\r\n    },\r\n    env: {\r\n        isEditLibrary: true,\r\n        isUseLocalFile: true\r\n    },\r\n    libraryData: null,\r\n    storyData: null,\r\n    scenarioCacheList: [],\r\n    cloud: null,\r\n    fileHandle: null,\r\n    isPreviewMode: false,\r\n}","\r\nnamespace SystemConst {\r\n    export const AUTH_TEXT_WIDTH = 350;\r\n    export const AUTH_TEXT_HEIGHT = 70;\r\n}\r\n\r\nexport default SystemConst;\r\n\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n\r\n// ホームチャンネル\r\nexport const HOME_USER_DIV_HEIGHT = 400;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const dialog = store.system.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            if (!store.system.canDialogClose) return;\r\n            store.system.dialog = null;\r\n            setStore({ ...store });\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: (index: number)=>void;\r\n    tabRecordNum?: number;\r\n}\r\n\r\nexport type TabElements = {\r\n    name: string;\r\n    enable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabRecordNum = props.tabRecordNum ?? 1;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList tabRecordNum={tabRecordNum}>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isEnable={tab.enable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList tabRecordNum={tabRecordNum}>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={!tab.enable ? <></> : tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isEnable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: inline-block;\r\n    height: ${props => 35 * props.tabRecordNum}px;\r\n    text-align: left;\r\n    /* background-color: #ac3b3b; */\r\n    width: 100%;\r\n`;\r\nconst _ContList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\r\n    border-radius: 0 6px 6px 6px;\r\n    /* box-shadow: 0 2px 0 0 #000b3a48; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    \r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                margin-top: 5px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${props.isEnable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import SystemConst from \"./systemConst\";\r\n\r\nnamespace CanvasUtil {\r\n\r\n    /**\r\n     * Canvasに任意の描画をし、画像のURLを取得する\r\n     * @param width 幅\r\n     * @param height 高さ\r\n     * @param draw 描画\r\n     * @returns 画像のURL\r\n     */\r\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        draw(ctx);\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    export const getLogoURL = () => {\r\n        return CanvasUtil.createURL(360, 80, (ctx) => {\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.fillRect(0, 0, 350, 80);\r\n\r\n            ctx.shadowColor = \"#555\";\r\n            ctx.shadowOffsetX = 2;\r\n            ctx.shadowOffsetY = 1;\r\n            ctx.shadowBlur = 5;\r\n            ctx.font = 'italic 50pt Arial';\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.fillText('Pixel ', 14, 64);\r\n            const adjust = ctx.measureText('Pixel ').width;\r\n            ctx.fillStyle = '#6ea0c4';\r\n            ctx.fillText('Flare', 14 + adjust, 64);\r\n            ctx.save();\r\n        });\r\n    }\r\n\r\n    export const getAuthTextURL = (text: string) => {\r\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\r\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\r\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\r\n            ctx.rotate(1 * Math.PI / 180);\r\n            for (let i = 0; i < text.length; i++) {\r\n                const char = text.charAt(i);\r\n\r\n                const fontRand = Math.random() * 60;\r\n                const alphaRand = Math.random() * 60;\r\n                ctx.font = `${20 + fontRand}pt Arial`;\r\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\r\n                ctx.fillText(char, i * SIZE, 60);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CanvasUtil;","import VectorUtil from \"./vectorUtil\";\r\n\r\nnamespace Particle {\r\n\r\n    export type Props = {\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        limit: number;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n    }\r\n\r\n    export class Instance {\r\n\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        prevPos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        frame: number;\r\n        limit: number;\r\n        isLive: boolean;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n\r\n        constructor(props: Props) {\r\n            this.owner = props.owner;\r\n            this.pos = props.pos;\r\n            this.prevPos = props.pos;\r\n            this.vec = props.vec;\r\n\r\n            this.frame = 0;\r\n            this.limit = props.limit;\r\n            this.isLive = true;\r\n            this.drawer = props.drawer;\r\n            this.extend = props.extend;\r\n        }\r\n\r\n        update = () => {\r\n\r\n            this.pos.x += this.vec.xy.x;\r\n            this.pos.y += this.vec.xy.y;\r\n\r\n            this.extend.forEach(callback => callback(this));\r\n\r\n            if (this.frame === this.limit) {\r\n                this.isLive = false;\r\n            }\r\n            this.frame++;\r\n        }\r\n\r\n        draw = (ctx: CanvasRenderingContext2D) => {\r\n            this.drawer(this, ctx);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Particle;","import Particle from \"./particle\";\r\n\r\nnamespace DrawUtil {\r\n\r\n    export type Rgba = {\r\n        r: number;\r\n        g: number;\r\n        b: number;\r\n        a: number;\r\n    }\r\n\r\n    export type ColorStop = {\r\n        offset: number;\r\n        color: string;\r\n    }\r\n\r\n    export type DrawerParam = {\r\n        color: string;\r\n        radius?: number;\r\n        disappearStartRate?: number;\r\n        shrinkStartRate?: number;\r\n        flashAppearFrame?: number;\r\n        flashHideFrame?: number;\r\n    }\r\n\r\n    export const createGradDrawer = (param: DrawerParam) => {\r\n\r\n        /** 基準となる半径 */\r\n        const radiusBase = param.radius ?? 30;\r\n        return (self: Particle.Instance, ctx: CanvasRenderingContext2D) => {\r\n            if (param.flashAppearFrame != undefined) {\r\n                const appearFrame = param.flashAppearFrame;\r\n                const hideFrame = (param.flashHideFrame as number);\r\n                const unitFrame = appearFrame + hideFrame;\r\n                if ((self.frame % unitFrame) >= appearFrame) return;\r\n            }\r\n\r\n            let radius = radiusBase;\r\n            if (param.shrinkStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.shrinkStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    const rate = (limit - frame) / limit;\r\n                    radius *= rate;\r\n                }\r\n            }\r\n\r\n            const x = self.pos.x;\r\n            const y = self.pos.y;\r\n            const g = ctx.createRadialGradient(x, y, 1, x, y, radius);\r\n\r\n            const grads: ColorStop[] = [];\r\n            const rgba = convertRgbaFromColorCode(param.color) ?? { r: 255, g: 255, b: 255, a: 255 };\r\n            grads.push({ offset: 0, color: convertColorCodeFromRgba({ r: 255, g: 255, b: 255, a: Math.floor(rgba.a * 0.9) }) });\r\n            grads.push({ offset: 0.2, color: convertColorCodeFromRgba({ ...rgba, a: Math.floor(rgba.a * 0.15) }) });\r\n            grads.push({ offset: 1, color: convertColorCodeFromRgba({ ...rgba, a: 1 }) });\r\n\r\n            grads.forEach(grad => {\r\n                g.addColorStop(grad.offset, grad.color);\r\n            });\r\n\r\n            ctx.globalAlpha = 1;\r\n            if (param.disappearStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.disappearStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    ctx.globalAlpha = (limit - frame) / limit;\r\n                }\r\n            }\r\n\r\n            ctx.fillStyle = g;\r\n            // ctx.fillStyle = param.color;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n        };\r\n    }\r\n\r\n    export const convertRgbaFromColorCode = (code: string): Rgba | null => {\r\n        const div = code.split('#');\r\n        if (div.length !== 2 || div[1].length < 6) return null;\r\n\r\n        const value = div[1];\r\n        const r = Number.parseInt(value.substring(0, 2), 16);\r\n        const g = Number.parseInt(value.substring(2, 4), 16);\r\n        const b = Number.parseInt(value.substring(4, 6), 16);\r\n        let a = 1;\r\n        if (value.length === 8) {\r\n            a = Number.parseInt(value.substring(6, 8), 16);\r\n        }\r\n        return { r, g, b, a };\r\n    }\r\n\r\n    export const convertColorCodeFromRgba = (rgba: Rgba): string => {\r\n        const r1 = (Math.floor(rgba.r));\r\n        const g1 = (Math.floor(rgba.g));\r\n        const b1 = (Math.floor(rgba.b));\r\n        const a1 = (Math.floor(rgba.a));\r\n        const r = ('00' + r1.toString(16)).slice(-2);\r\n        const g = ('00' + g1.toString(16)).slice(-2);\r\n        const b = ('00' + b1.toString(16)).slice(-2);\r\n        const a = ('00' + a1.toString(16)).slice(-2);\r\n        return `#${r}${g}${b}${a}`;\r\n    }\r\n\r\n    export const toWhite = (color: string, rate: number): string => {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport default DrawUtil;","namespace VectorUtil {\r\n\r\n    export type XY = {\r\n        x: number, y: number;\r\n    }\r\n\r\n    export class Vector {\r\n\r\n        xy: XY;\r\n        rad: number;\r\n        len: number;\r\n\r\n        constructor(xy: XY) {\r\n            this.xy = xy;\r\n            this.rad = 0;\r\n            this.len = 0;\r\n            this.syncFromXY();\r\n        }\r\n\r\n        syncFromXY = () => {\r\n            this.len = Math.sqrt(this.xy.x * this.xy.x + this.xy.y * this.xy.y);\r\n            this.rad = Math.atan2(this.xy.y, this.xy.x);\r\n        }\r\n\r\n        syncFromRad = () => {\r\n            this.xy.x = Math.cos(this.rad) * this.len;\r\n            this.xy.y = Math.sin(this.rad) * this.len;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default VectorUtil;","\r\nnamespace ParamUtil {\r\n    export enum VisualParamType {\r\n        RADIUS = 'radius',\r\n        COLOR_R = 'color_r',\r\n        COLOR_G = 'color_g',\r\n        COLOR_B = 'color_b',\r\n        COLOR_A = 'color_a',\r\n        THICKNESS = 'thickness',\r\n    }\r\n    export const VisualParams = Object.values(VisualParamType);\r\n    export type VisualParam = typeof VisualParams[number];\r\n\r\n    export enum BehaviorParamType {\r\n        LIMIT = 'limit',\r\n        POS_X = 'pos_x',\r\n        POS_Y = 'pos_y',\r\n        VEC_X = 'vec_x',\r\n        VEC_Y = 'vec_y',\r\n        VEC_RAD = 'vec_radian',\r\n        VEC_LEN = 'vec_length',\r\n    }\r\n    export const BehaviorParams = Object.values(BehaviorParamType);\r\n    export type BehaviorParam = typeof BehaviorParams[number];\r\n\r\n    export enum SelfParamType {\r\n        FRAME = 'self_frame',\r\n        LIMIT = 'self_limit',\r\n        POS_X = 'self_pos_x',\r\n        POS_Y = 'self_pos_y',\r\n        VEC_X = 'self_vec_x',\r\n        VEC_Y = 'self_vec_y',\r\n        VEC_RAD = 'self_vec_radian',\r\n        VEC_LEN = 'self_vec_length',\r\n    }\r\n    export const SelfParams = Object.values(SelfParamType);\r\n    export type SelfParam = typeof SelfParams[number];\r\n\r\n    export enum ExtendParamType {\r\n        LOOP_COUNT = 'loop_count',\r\n        LOOP_ITERATE = 'loop_iterate',\r\n        INVOKE = 'invoke',\r\n    }\r\n    export const ExtendParams = Object.values(ExtendParamType);\r\n    export type ExtendParam = typeof ExtendParams[number];\r\n\r\n    export enum EffectParamType {\r\n        DISAPPEAR_START = 'disappear_start',\r\n        SHRINK_START = 'shrink_start',\r\n        FLASH_APPEAR_FRAME = 'flash_appear_frame',\r\n        FLASH_HIDE_FRAME = 'flash_hide_frame',\r\n    }\r\n    export const EffectParams = Object.values(EffectParamType);\r\n    export type EffectParam = typeof EffectParams[number];\r\n\r\n    export enum ModulateParamType {\r\n        DECAY_RATE = 'decay_rate',\r\n        DECAY_LIMIT = 'decay_limit',\r\n        GRAVITY_VAL = 'gravity_val',\r\n        GRAVITY_LIMIT = 'gravity_limit',\r\n    }\r\n    export const ModulateParams = Object.values(ModulateParamType);\r\n    export type ModulateParam = typeof ModulateParams[number];\r\n\r\n    export enum ConstantType {\r\n        SCREEN_WIDTH = 'screen_width',\r\n        SCREEN_HEIGHT = 'screen_height',\r\n        PI = 'pi',\r\n        RADIAN_ROUND = 'radian_round',\r\n    }\r\n    export const Constants = Object.values(ConstantType);\r\n    export type Constant = typeof Constants[number];\r\n\r\n}\r\n\r\nexport default ParamUtil;","import Particle from \"../../graphic/particle\";\r\n\r\nnamespace ModulateBuilder {\r\n\r\n    type ModulateParam = {\r\n        decayRate?: number;\r\n        decayLimit?: number;\r\n        gravity?: number;\r\n        gravityLimit?: number;\r\n    }\r\n\r\n    export const build = (extendList: ((self: Particle.Instance) => void)[], param: ModulateParam) => {\r\n        \r\n        // 減衰メソッド\r\n        if (param.decayRate != undefined && param.decayLimit != undefined) {\r\n            const decayLimit = param.decayLimit;\r\n            const decayRate = param.decayRate;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.len > decayLimit) {\r\n                    self.vec.len = self.vec.len * decayRate;\r\n                    self.vec.syncFromRad();\r\n                }\r\n            });\r\n        }\r\n        // 重力メソッド\r\n        if (param.gravity != undefined && param.gravityLimit != undefined) {\r\n            const gravityLimit = param.gravityLimit;\r\n            const gravity = param.gravity;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.xy.y < gravityLimit) {\r\n                    self.vec.xy.y += gravity;\r\n                    self.vec.syncFromXY();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModulateBuilder;","import DrawUtil from \"../../graphic/drawUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport ParamUtil from \"../factory/util/paramUtil\";\r\nimport ModulateBuilder from \"./modulateBuilder\";\r\n\r\nnamespace PreviewUtil {\r\n\r\n    export const SCREEN_WIDTH = 550;\r\n    export const SCREEN_HEIGHT = 550;\r\n\r\n    export type ValueMap = {\r\n        name: string;\r\n        value: number;\r\n    }\r\n\r\n    export const buildLogicProps = (\r\n        owner: Particle.Instance[],\r\n        origin: LogicUtil.NodeLogicItem,\r\n        rootData: LogicUtil.WrapElement,\r\n        sends: ValueMap[]\r\n    ): Particle.Props => {\r\n\r\n        /**\r\n         * ディペンドするロジック要素を識別名から探して返す。\r\n         * @param name ロジックの識別名\r\n         * @returns ロジック要素\r\n         */\r\n        const searchDependLogic = (name: string): LogicUtil.NodeLogicItem | null => {\r\n            const mng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n            const wrap = mng.defs.find(def => (def.data as LogicUtil.NodeLogicItem).name === name);\r\n            if (wrap == undefined) return null;\r\n            return wrap.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        /**\r\n         * 再帰的にパーティクルを生成する。\r\n         * @param cur ルートとなるロジック要素\r\n         * @param sends 親要素から送られてきたフィールド\r\n         * @returns パーティクルのプロパティ\r\n         */\r\n        const createParticleRec = (cur: LogicUtil.NodeLogicItem, sends: ValueMap[]): Particle.Props => {\r\n            let valueMapList: ValueMap[] = sends.concat(ConstantValueMap);\r\n\r\n\r\n            // フィールドのパラメータを取得\r\n            const fieldMng = searchElement('field-mng', cur.mngs);\r\n            if (fieldMng != null) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                    valueMapList.push({ name: paramItem.name, value });\r\n                });\r\n            }\r\n\r\n            const visualParams = (searchElement('visual-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n            const behaviorParams = (searchElement('behavior-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n\r\n            const getVisualParam = (name: string) => {\r\n                return convertParamsToValue(name, visualParams, valueMapList);\r\n            }\r\n            const getBehaviorParam = (name: string) => {\r\n                return convertParamsToValue(name, behaviorParams, valueMapList);\r\n            }\r\n\r\n            // Behaviorのパラメータを取得\r\n            const limit = Math.floor(getBehaviorParam(ParamUtil.BehaviorParamType.LIMIT) as number);\r\n            const pos = {\r\n                x: getBehaviorParam(ParamUtil.BehaviorParamType.POS_X) as number,\r\n                y: getBehaviorParam(ParamUtil.BehaviorParamType.POS_Y) as number\r\n            };\r\n            const vec = new VectorUtil.Vector({ x: 0, y: 0 });\r\n            const isVectorMethod = behaviorParams.find(param => param.name === ParamUtil.BehaviorParamType.VEC_X) != undefined;\r\n            if (isVectorMethod) {\r\n                vec.xy.x = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_X) as number;\r\n                vec.xy.y = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_Y) as number;\r\n                vec.syncFromXY();\r\n            } else {\r\n                vec.rad = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_RAD) as number;\r\n                vec.len = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_LEN) as number;\r\n                vec.syncFromRad();\r\n            }\r\n\r\n            /**\r\n             * 追加動作（子要素、エフェクト、モデュレート）\r\n             */\r\n            const extendList: ((self: Particle.Instance) => void)[] = [];\r\n\r\n            // 子要素を生成する\r\n            const connectMng = searchElement('inherit-mng', cur.mngs);\r\n            if (connectMng != null) {\r\n\r\n                // パーティクル情報のフィールド追加\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_X, value: pos.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_Y, value: pos.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_RAD, value: vec.rad });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_LEN, value: vec.len });\r\n\r\n                const connects = (connectMng.data as LogicUtil.NodeConnectManager).inherits;\r\n\r\n                connects.forEach(connect => {\r\n                    const connector = connect.data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.disable ?? false) return;\r\n\r\n                    const logicItem = connector.method === 'create' ?\r\n                        searchElement('inherit-logic', connector.mngs)?.data as LogicUtil.NodeLogicItem :\r\n                        searchDependLogic(connector.depend);\r\n\r\n                    if (logicItem != null) {\r\n\r\n                        extendList.push((self: Particle.Instance) => {\r\n\r\n                            const addValueMap = (item: ValueMap) => {\r\n                                const map = valueMapList.find(map => map.name === item.name);\r\n                                if (map != undefined) map.value = item.value;\r\n                                else valueMapList.push(item);\r\n                            }\r\n                            addValueMap({ name: ParamUtil.SelfParamType.FRAME, value: self.frame });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.LIMIT, value: self.limit });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_X, value: self.pos.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_Y, value: self.pos.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_X, value: self.vec.xy.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_Y, value: self.vec.xy.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_RAD, value: self.vec.rad });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_LEN, value: self.vec.len });\r\n\r\n                            // Inherit配下のフィールドのパラメータを取得\r\n                            const itrfldValueMap: ValueMap[] = [];\r\n                            const fieldMng = searchElement('inhfld-mng', connector.mngs);\r\n                            if (fieldMng != null) {\r\n                                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                                    itrfldValueMap.push({ name: paramItem.name, value });\r\n                                });\r\n                            }\r\n\r\n                            let loopCnt = 1;\r\n                            const extendItem = searchElement('extend-mng', connector.mngs) as LogicUtil.WrapElement;\r\n                            const extendParams = (extendItem.data as LogicUtil.NodeParamManager).params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                            const loopCntVal = convertParamsToValue(ParamUtil.ExtendParamType.LOOP_COUNT, extendParams, valueMapList.concat(itrfldValueMap));\r\n\r\n                            // 派生条件\r\n                            const isInvoke = convertParamsToBoolean(ParamUtil.ExtendParamType.INVOKE, extendParams, valueMapList) ?? true;\r\n\r\n                            // 条件を満たさない場合、以下の処理（パーティクルの生成）を行わない\r\n                            if (!isInvoke) return;\r\n\r\n                            // イテレータを利用している場合\r\n                            if (loopCntVal != undefined) {\r\n                                loopCnt = loopCntVal;\r\n                            }\r\n\r\n                            for (let i = 0; i < loopCnt; i++) {\r\n\r\n                                // イテレータ関連のパラメータを追加\r\n                                const iterateValueMap: ValueMap[] = [\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_COUNT, value: loopCnt },\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_ITERATE, value: i }\r\n                                ];\r\n\r\n                                const sendItem = searchElement('send-mng', connector.mngs)?.data as LogicUtil.NodeParamManager;\r\n                                const params = sendItem.params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                                const sendValueMapList: ValueMap[] = params.map(item => {\r\n                                    return { name: item.name, value: convertParamsToValue(item.name, params, valueMapList.concat(itrfldValueMap).concat(iterateValueMap)) ?? 0 }\r\n                                });\r\n\r\n                                const props = createParticleRec(\r\n                                    logicItem,\r\n                                    sendValueMapList\r\n                                );\r\n                                self.owner.push(new Particle.Instance(props));\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            // モデュレート（動きの変化）を付与\r\n            ModulateBuilder.build(extendList, {\r\n                decayLimit: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_LIMIT),\r\n                decayRate: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_RATE),\r\n                gravity: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_VAL),\r\n                gravityLimit: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_LIMIT),\r\n            });\r\n\r\n            // Visualのパラメータを取得\r\n            const radius = getVisualParam(ParamUtil.VisualParamType.RADIUS);\r\n            const colorR = getVisualParam(ParamUtil.VisualParamType.COLOR_R);\r\n            const colorG = getVisualParam(ParamUtil.VisualParamType.COLOR_G);\r\n            const colorB = getVisualParam(ParamUtil.VisualParamType.COLOR_B);\r\n            const colorA = getVisualParam(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // エフェクト付与\r\n            const disappearStart = getVisualParam(ParamUtil.EffectParamType.DISAPPEAR_START);\r\n            const shrinkStart = getVisualParam(ParamUtil.EffectParamType.SHRINK_START);\r\n            const flashAppearFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME);\r\n            const flashHideFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_HIDE_FRAME);\r\n\r\n            let drawer: (self: Particle.Instance, ctx: CanvasRenderingContext2D) => void = () => { };\r\n            if (radius != undefined) {\r\n                drawer = DrawUtil.createGradDrawer({\r\n                    radius: radius,\r\n                    color: DrawUtil.convertColorCodeFromRgba({\r\n                        r: colorR as number,\r\n                        g: colorG as number,\r\n                        b: colorB as number,\r\n                        a: colorA as number,\r\n                    }),\r\n                    disappearStartRate: disappearStart,\r\n                    shrinkStartRate: shrinkStart,\r\n                    flashAppearFrame,\r\n                    flashHideFrame,\r\n                });\r\n            }\r\n\r\n            return {\r\n                owner, pos, vec,\r\n                limit, drawer,\r\n                extend: extendList\r\n            };\r\n        }\r\n\r\n        return createParticleRec(origin, sends);\r\n    }\r\n\r\n    const searchElement = (type: LogicUtil.NodeType, warpList: LogicUtil.WrapElement[]) => {\r\n        return warpList.find(wrap => wrap.type === type) ?? null;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param valueMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToValue = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): number | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToValue(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToValue = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): number => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(ret);\r\n        return ret;\r\n    }\r\n\r\n    export const convertParamsToBoolean = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): boolean | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToBoolean(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToBoolean = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): boolean => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item, i) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            else if (item === '=') str = '==';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(formulaStr);\r\n        return ret;\r\n    }\r\n\r\n    export const ConstantValueMap: ValueMap[] = [\r\n        { name: ParamUtil.ConstantType.SCREEN_WIDTH, value: SCREEN_WIDTH },\r\n        { name: ParamUtil.ConstantType.SCREEN_HEIGHT, value: SCREEN_HEIGHT },\r\n        { name: ParamUtil.ConstantType.PI, value: 3.14159265359 },\r\n        { name: ParamUtil.ConstantType.RADIAN_ROUND, value: 3.14159265359 * 2 }\r\n    ];\r\n}\r\n\r\nexport default PreviewUtil;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\r\n\r\n    export type Validate = {\r\n        checker: (value: string) => boolean;\r\n        errorType: ErrorType;\r\n        message?: string;\r\n    }\r\n\r\n    /**\r\n     * 必須チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkRequired = (str: string) => {\r\n        return str.length > 0;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length === 0 || (str.length >= min && str.length <= max);\r\n    }\r\n\r\n    /**\r\n     * 半角英数時チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        return checkIncludesChars(str, list);\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列で構成されているかチェック\r\n     * @param str 検証する文字列\r\n     * @param list 入力を許す対象文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkIncludesChars = (str: string, list: string) => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            const ch = str.charAt(i);\r\n            if (list.indexOf(ch) === -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列が数値に変換できるかチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumber = (str: string) => {\r\n        return !isNaN(Number(str));\r\n    }\r\n\r\n    /**\r\n     * 数値の値の範囲をチェック\r\n     * @param str 検証する文字列\r\n     * @param min 下限\r\n     * @param max 上限\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumberRange = (str: string, min: number, max: number) => {\r\n        if (!isNaN(Number(str))) {\r\n            const num = Number(str);\r\n            return num >= min && num <= max;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default ValidateUtil;\r\n","import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        // parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        const ref = useRef({} as HTMLDivElement);\r\n\r\n        /**\r\n         * データを元に再帰的に以下のツリーを構成する。\r\n         * @returns ツリー\r\n         */\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        useEffect(() => {\r\n            if (focusNode != null && focusNode.parent != null) {\r\n                focusNode.parent.isOpen = true;\r\n            }\r\n        }, [focusNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            // console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    // 親判定\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    // 兄弟判定\r\n                    if (result === false && focusNode != null && focusNode.parent != null) {\r\n                        result = focusNode.parent.children.find(node => node == element) != undefined;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        width={ref.current.scrollWidth}\r\n                        isActive={isCurrent}\r\n                        isRelation={!isDisable && isRelationNode()}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap\r\n                ref={ref}\r\n                isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #374a54;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #1f3642;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n    isRelation: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #459cff46;\r\n    `}\r\n    opacity: 0.3;\r\n    ${props => !props.isRelation ? '' : css`\r\n        background-color: #ffffff28;\r\n        opacity: 1;\r\n    `}\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #b4d9dd83;\r\n        opacity: 1;\r\n    `}\r\n    width: ${props => props.width}px;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import { type } from \"os\";\r\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport Common from \"../common\";\r\nimport PreviewLogicFrame from \"../preview/previewLogicFrame\";\r\nimport LogicElementUtil from \"./util/logicElementUtil\";\r\nimport LogicUtil from \"./util/logicUtil\";\r\n\r\nexport const FactoryTreeContext = createContext({} as LogicUtil.DetailArgs);\r\n\r\nconst LogicMainteTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    // const [rootData, setRootData] = useState(LogicElementUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    // const [treeDisable, setTreeDisable] = useState(false);\r\n    const [isModify, setModify] = useState<boolean>(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    const rootData = store.libraryData as LogicUtil.WrapElement;\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: LogicUtil.getChildrenDataNode(rootData)\r\n        }\r\n    }, [rootData]);\r\n\r\n    // useEffect(()=> {\r\n    //     store.logicData = rootData;\r\n    //     setStore({...store});\r\n    // }, [rootData]);\r\n\r\n    const setRootData = (rootData: LogicUtil.WrapElement) => {\r\n        store.libraryData = rootData;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const masterNode = useMemo(() => {\r\n        let cur: TreeUtil.ElementNode | null = focusNode;\r\n        while (cur != null) {\r\n            const type = (cur.data as LogicUtil.WrapElement).type;\r\n            if (['logic-item', 'seed-item'].includes(type)) return cur;\r\n            cur = cur.parent;\r\n        };\r\n        return null;\r\n    }, [focusNode]);\r\n\r\n    /**\r\n     * プレビューダイアログを表示する\r\n     */\r\n    const openPreviewDialog = () => {\r\n        if (masterNode == null) return;\r\n        store.system.dialog = (\r\n            <PreviewLogicFrame.Component\r\n                master={masterNode.data as LogicUtil.WrapElement}\r\n                rootData={rootData}\r\n                closeButtonAction={() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n            onKeyDown={(e) => {\r\n                // console.log(e.key);\r\n                if (isModify || focusNode == null) return;\r\n                switch (e.key) {\r\n                    case 'ArrowRight': {\r\n                        if (focusNode.children.length > 0) {\r\n                            if (!focusNode.isOpen) focusNode.isOpen = true;\r\n                            else setFocusNode(focusNode.children[0]);\r\n                            setInvalidate({});\r\n                        }\r\n                    } break;\r\n                    case 'ArrowLeft': {\r\n                        if (focusNode.isOpen) focusNode.isOpen = false;\r\n                        else {\r\n                            if (focusNode.parent != null) setFocusNode(focusNode.parent);\r\n                        }\r\n                        setInvalidate({});\r\n                    } break;\r\n                    case 'ArrowUp': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n) {\r\n                                    if (i === 0) {\r\n                                        setFocusNode(focusNode.parent);\r\n                                        setInvalidate({});\r\n                                    } else {\r\n                                        setFocusNode(list[i - 1]);\r\n                                        setInvalidate({});\r\n                                    }\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case 'ArrowDown': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n && i < list.length - 1) {\r\n                                    setFocusNode(list[i + 1]);\r\n                                    setInvalidate({});\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case ' ': {\r\n                        if (masterNode != null) openPreviewDialog();\r\n                    } break;\r\n                }\r\n            }}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview',\r\n                                isEnable: masterNode != null,\r\n                                callback: openPreviewDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return LogicUtil.getNodeDisplayJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={isModify}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <_DetailDiv>\r\n                    <_DetailHeader>\r\n                        <_DetailHeaderLabel>{LogicUtil.getTypeName(focusNode)}</_DetailHeaderLabel>\r\n                    </_DetailHeader>\r\n                    <FactoryTreeContext.Provider value={{\r\n                        rootData,\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        isModify,\r\n                        setModify,\r\n                        // treeDisable,\r\n                        setRootData,\r\n                        removeSelf: () => {\r\n                            const node = focusNode as TreeUtil.ElementNode;\r\n                            let index = -1;\r\n                            node.parent?.children.forEach((n, i) => {\r\n                                if (n == node) index = i;\r\n                            });\r\n                            node.parent?.children.splice(index, 1);\r\n                            const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n                            const listName = LogicElementUtil.getListParamName(parentWrap.type);\r\n                            if (listName == null) return;\r\n                            const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n                            list.splice(index, 1);\r\n                            setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                            setInvalidate({});\r\n                        }\r\n                    }}>\r\n                        <_DetailMainDiv>{LogicUtil.getDetailComponent(focusNode)}</_DetailMainDiv>\r\n                    </FactoryTreeContext.Provider>\r\n                </_DetailDiv>\r\n            </_PropsDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default LogicMainteTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #6c8186;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d87b;\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _TreeHeadHalf = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    background-color: #7fbdb47a;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #9fa9b6;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _DetailDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\nconst _DetailHeader = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #b4b29e; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _DetailHeaderLabel = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #a10000;\r\n    /* background-color: #bbd0d3; */\r\n    border: solid 1px #a10000;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 20px);\r\n    margin: 5px 0 0 10px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DetailMainDiv = styled.div`\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 44px);\r\n    margin: 0 0 0 4px;\r\n    background-color: #cfd3cc;\r\n    border: solid 1px #0026a1;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorArgumentMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'argument-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentMng;","import { useContext, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nnamespace ModifyOperations {\r\n\r\n    export type Props = {\r\n        mappingForm: () => void;\r\n        checkableFields: FormUtil.CheckableValue[];\r\n        isInputOK?: boolean;\r\n        firstRegist: () => void;\r\n        modifyRegist: () => void;\r\n    }\r\n\r\n    export const Component = (props: Props) => {\r\n        const { node, isModify, setModify, removeSelf } = useContext(FactoryTreeContext);\r\n\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n        const isComplete = FormUtil.isCompleteCheck(props.checkableFields);\r\n\r\n        return (<>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: isModify,\r\n                        callback: () => {\r\n                            if (wrap.data == null) {\r\n                                removeSelf();\r\n                            } else {\r\n                                props.mappingForm();\r\n                            }\r\n                            setModify(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !isModify || (props.isInputOK ?? isComplete),\r\n                        callback: () => {\r\n                            if (!isModify) {\r\n                                setModify(true);\r\n                            } else {\r\n                                if (wrap.data == null) {\r\n                                    props.firstRegist();\r\n                                } else {\r\n                                    props.modifyRegist();\r\n                                }\r\n                                setModify(false);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default ModifyOperations;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype FormProps = {\r\n    inputType: FormUtil.CheckableValue;\r\n    value: FormUtil.CheckableValue;\r\n};\r\n\r\nenum Level {\r\n    FIELD = 0,\r\n    INITIAL,\r\n    INHERIT_FIELD,\r\n    INHERIT_EXTEND,\r\n    INHERIT_SEND\r\n}\r\n\r\nconst EditorParamItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    /** 名前 */\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    /** 式 */\r\n    const [formulaItems, setFormulaItems] = useState<string[]>([]);\r\n    /** 変数の入力フォーム */\r\n    const [varFormList, setVarFormList] = useState<FormProps[]>([]);\r\n    // const [formJsxList, setFaormJsxList] = useState<JSX.Element[]>([]);\r\n\r\n    const isField = wrap.type === 'field-item';\r\n    const isCondition = wrap.type === 'condition-item';\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        setName({ value: param.name, errors: [] });\r\n        setFormulaItems(param.formulaItems.slice());\r\n        setVarFormList(param.values.map(v => {\r\n            return {\r\n                inputType: { value: v.type, errors: [] },\r\n                value: { value: v.value, errors: [] }\r\n            }\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const level: Level = useMemo(() => {\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        switch (parentType) {\r\n            case 'field-mng': return Level.FIELD;\r\n            case 'visual-mng':\r\n            case 'behavior-mng': return Level.INITIAL;\r\n            case 'inhfld-mng': return Level.INHERIT_FIELD;\r\n            case 'extend-mng': return Level.INHERIT_EXTEND;\r\n            case 'send-mng': return Level.INHERIT_SEND;\r\n        }\r\n        return -1;\r\n    }, [node]);\r\n\r\n    /**\r\n     * 引数とフィールド変数のキーリストを取得する。\r\n     */\r\n    const [argumentList, fieldKeyList] = useMemo(() => {\r\n        let argumentList: string[] = [];\r\n        const fieldKeys: string[] = [];\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const targetTypes: LogicUtil.NodeType[] = ['field-mng', 'behavior-mng', 'visual-mng', 'inhfld-mng', 'send-mng', 'extend-mng'];\r\n        if (targetTypes.includes(parentType)) {\r\n            const getLogicNode = () => {\r\n                switch (parentType) {\r\n                    case 'field-mng':\r\n                    case 'visual-mng':\r\n                    case 'behavior-mng': return node.parent?.parent;\r\n                    case 'inhfld-mng':\r\n                    case 'send-mng':\r\n                    case 'extend-mng': return node?.parent?.parent?.parent?.parent;\r\n                }\r\n            };\r\n            const logicItem = (getLogicNode()?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n            // 引数リストを追加\r\n            const argMng = logicItem.mngs.find(mng => mng.type === 'argument-mng');\r\n            if (argMng != undefined) {\r\n                argumentList = (argMng.data as LogicUtil.NodeArgumentManager).\r\n                    args.map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n            }\r\n            // 変数リストを追加\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (level >= Level.INITIAL && fieldMng != undefined) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                    fieldKeys.push(fieldName);\r\n                });\r\n            }\r\n        } else if (parentType === 'seedsend-mng') {\r\n            // シード配下のSendは特別に扱う（どのレベルにも属さない）\r\n            const argMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'seedarg-mng');\r\n            if (argMng != null) {\r\n                argumentList = (argMng.data as LogicUtil.NodeSeedArgManager).\r\n                    args.map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n            } else throw new Error('argMng is undefined.');\r\n        }\r\n        if (level >= Level.INHERIT_FIELD) {\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_RAD);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_LEN);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.RADIUS);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_R);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_G);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_B);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // フィールドキーにInherit配下のFieldパラメータを追加\r\n            if (level >= Level.INHERIT_EXTEND) {\r\n                const inhfldNode = LogicElementUtil.getInnerNode(node.parent?.parent as TreeUtil.ElementNode, 'inhfld-mng');\r\n                if (inhfldNode != null) {\r\n                    const fieldMng = (inhfldNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeFieldManager;\r\n                    fieldMng.fields.forEach(field => {\r\n                        const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                        fieldKeys.push(fieldName);\r\n                    });\r\n                }\r\n            }\r\n            // フィールドキーにExtendパラメータを追加\r\n            if (level === Level.INHERIT_SEND) {\r\n                const extendWrap = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'extend-mng') as LogicUtil.WrapElement;\r\n                const extendElement = extendWrap.data as LogicUtil.NodeParamManager;\r\n                //Extendにloop_countのパラメータがある場合\r\n                if (extendElement.params.find(\r\n                    param => (param.data as LogicUtil.NodeParamItem).name === ParamUtil.ExtendParamType.LOOP_COUNT\r\n                ) != undefined) {\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_COUNT);\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_ITERATE);\r\n                }\r\n            }\r\n        }\r\n        return [argumentList, fieldKeys];\r\n    }, [node]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const paramNameList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (item === 'var') num++;\r\n        });\r\n\r\n        if (varFormList.length < num) {\r\n            const addNum = num - varFormList.length;\r\n            for (let i = 0; i < addNum; i++) varFormList.push({\r\n                inputType: { value: 'direct', errors: [] },\r\n                value: { value: '', errors: [] }\r\n            });\r\n            setVarFormList(varFormList.slice());\r\n        } else if (varFormList.length > num) {\r\n            const delNum = varFormList.length - num;\r\n            for (let i = 0; i < delNum; i++) varFormList.splice(varFormList.length - delNum, delNum);\r\n            setVarFormList(varFormList.slice());\r\n        }\r\n    }, [formulaItems]);\r\n\r\n    /** 「(」の数-「)」の数 */\r\n    const parenthesisBalance = useMemo(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (['(', 'rand(', 'integer('].includes(item)) num++;\r\n            else if (item === ')') num--;\r\n        });\r\n        return num;\r\n    }, [formulaItems]);\r\n\r\n    /** 値の入力フォームのJSX */\r\n    const formJsxList = useMemo(() => {\r\n        return varFormList.map((v, i) => {\r\n\r\n            const getValueForm = (): JSX.Element => {\r\n                const type = v.inputType.value as LogicUtil.ParamInputType;\r\n                if (type === 'direct') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isNumber\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else {\r\n                    let list: string[] = [];\r\n                    if (type === 'argument') {\r\n                        list = argumentList;\r\n                    } else if (type === 'field') {\r\n                        list = fieldKeyList;\r\n                    } else if (type === 'self') {\r\n                        list = ParamUtil.SelfParams;\r\n                    } else if (type === 'constant') {\r\n                        list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                    }\r\n                    return (\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            list={list.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n            return <FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={`var_${i}`}\r\n                labelWidth={90}\r\n                marginTop={i === 0 ? 4 : 0}\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        checkable={v.inputType}\r\n                        width={142}\r\n                        isReadOnly={!isModify}\r\n                        setCheckable={(checkable) => {\r\n                            varFormList[i].inputType = checkable;\r\n                            if (isModify) {\r\n                                varFormList[i].value.value = checkable.value === 'direct' ? '0' : '';\r\n                            }\r\n                            setVarFormList(varFormList.slice());\r\n                        }}\r\n                        list={LogicUtil.ParamInputTypes.filter(item => {\r\n                            switch (item) {\r\n                                case 'direct':\r\n                                case 'constant':\r\n                                case 'argument': return true;\r\n                                case 'field': return level >= Level.INITIAL;\r\n                                case 'self': return level >= Level.INHERIT_FIELD;\r\n                            }\r\n                        }).map(item => {\r\n                            return { value: item, labelText: item };\r\n                        })}\r\n                    />\r\n                    {getValueForm()}\r\n                </>}\r\n            />;\r\n        });\r\n    }, [varFormList, isModify]);\r\n\r\n    const getFormulaJsx = () => {\r\n        let num = 0;\r\n        const jsxList: JSX.Element[] = [];\r\n        formulaItems.forEach((item) => {\r\n            if (jsxList.length > 0) {\r\n                jsxList.push(<span key={jsxList.length}>&nbsp;</span>);\r\n            }\r\n            if (item === 'var') {\r\n                jsxList.push(<_Var key={jsxList.length}>{`$\\{var_${num}}`}</_Var>);\r\n                num++;\r\n            } else {\r\n                jsxList.push(<_Sig key={jsxList.length}>{item}</_Sig>);\r\n            }\r\n        });\r\n        return jsxList;\r\n    }\r\n\r\n    const isLastVar = () => formulaItems.length > 0 && ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const isFormulaOK = parenthesisBalance === 0 && varFormList.length > 0 &&\r\n        ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const hasFormError = !isFormulaOK || varFormList.find(varForm => varForm.value.errors.length > 0) != undefined;\r\n\r\n\r\n    const getFormulaItem = (label: string, width: number, isEnable: boolean, value: string) => {\r\n        return {\r\n            label, width, isEnable,\r\n            callback: () => {\r\n                formulaItems.push(value);\r\n                setFormulaItems(formulaItems.slice());\r\n            }\r\n        };\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeParamItem = {\r\n                    name: name.value,\r\n                    formulaItems: formulaItems.slice(),\r\n                    values: varFormList.map(varForm => {\r\n                        return {\r\n                            type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                            value: varForm.value.value\r\n                        }\r\n                    })\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n            }}\r\n            isInputOK={parenthesisBalance === 0 && !hasFormError && name.errors.length === 0}\r\n            modifyRegist={() => {\r\n                const data = wrap.data as LogicUtil.NodeParamItem;\r\n                data.formulaItems = formulaItems.slice();\r\n                data.values = varFormList.map(varForm => {\r\n                    return {\r\n                        type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                        value: varForm.value.value\r\n                    }\r\n                });\r\n                if (isField) {\r\n                    const prevName = data.name;\r\n                    data.name = name.value;\r\n                    if (prevName !== name.value) {\r\n                        syncFieldName(node.parent as TreeUtil.ElementNode, prevName, name.value);\r\n                    }\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify || !isField}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = paramNameList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeParamItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('+', 50, isModify && isLastVar(), '+'),\r\n                        getFormulaItem('-', 50, isModify && isLastVar(), '-'),\r\n                        getFormulaItem('*', 50, isModify && isLastVar(), '*'),\r\n                        getFormulaItem('/', 50, isModify && isLastVar(), '/'),\r\n                        getFormulaItem('%', 50, isModify && isLastVar(), '%'),\r\n                        getFormulaItem('(', 35, isModify && !isLastVar(), '('),\r\n                        getFormulaItem(')', 35, isModify && isLastVar() && parenthesisBalance > 0, ')'),\r\n                        {\r\n                            label: 'del',\r\n                            width: 60,\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            callback: () => {\r\n                                formulaItems.splice(formulaItems.length - 1, 1);\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {!isCondition ? <></> : (\r\n                    <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            getFormulaItem('<', 50, isModify && isLastVar(), '<'),\r\n                            getFormulaItem('<=', 50, isModify && isLastVar(), '<='),\r\n                            getFormulaItem('=', 50, isModify && isLastVar(), '='),\r\n                            getFormulaItem('>=', 50, isModify && isLastVar(), '>='),\r\n                            getFormulaItem('>', 50, isModify && isLastVar(), '>'),\r\n                            getFormulaItem('&&', 50, isModify && isLastVar(), '&&'),\r\n                            getFormulaItem('||', 50, isModify && isLastVar(), '||'),\r\n                        ]}\r\n                    />\r\n                )}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('var', 70, isModify && !isLastVar(), 'var'),\r\n                        getFormulaItem('rand', 80, isModify && !isLastVar(), 'rand('),\r\n                        getFormulaItem('integer', 80, isModify && !isLastVar(), 'integer('),\r\n                        {\r\n                            label: 'clear',\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            width: 90,\r\n                            callback: () => {\r\n                                setFormulaItems([]);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_Formula\r\n                    isInvalid={!isFormulaOK}\r\n                >{getFormulaJsx()}</_Formula>\r\n                {formJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify && isField}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'field', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getFieldRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {!isField ? <></> : LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorParamItem;\r\n\r\n/**\r\n * ノードの変数を参照している箇所のリストを返す。\r\n * @param node 変数のノード\r\n * @param argName 変数名\r\n * @returns 参照パラメータリスト\r\n */\r\nexport const getFieldRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n * フィールド名の変更に伴い、式で参照している変数を同期する\r\n * @param mngNode ノード\r\n */\r\nexport const syncFieldName = (mngNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const type = (mngNode.data as LogicUtil.WrapElement).type;\r\n    if (type === 'field-mng') {\r\n        const logic = (mngNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n\r\n        const visualMng = logic.mngs.find(mng => mng.type === 'visual-mng');\r\n        if (visualMng != undefined) {\r\n            syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const behaviorMng = logic.mngs.find(mng => mng.type === 'behavior-mng');\r\n        if (behaviorMng != undefined) {\r\n            syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                // Inherit配下のField要素のチェック\r\n                if (inhfld != null) {\r\n                    syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                }\r\n                // Extend要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    } else if (type === 'inhfld-mng') {\r\n        const inheritWrap = mngNode.parent?.data as LogicUtil.WrapElement;\r\n\r\n        // Extend要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        // Send要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n}\r\n\r\nconst _Formula = styled.div<{\r\n    isInvalid: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 12px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    overflow-wrap: break-word;\r\n    height: 100px;//calc(100% - 4px);\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    background-color: #ffffff8b;\r\n    ${props => !props.isInvalid ? '' : css`\r\n        background-color: #ffe8628a;\r\n    `}\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    padding: 0 0 0 4px;\r\n    vertical-align: top;\r\n    margin: 5px 0 0 6px;\r\n`;\r\nconst _Var = styled.span`\r\n    color: #e70013;\r\n`;\r\nconst _Sig = styled.span`\r\n    color: #3333339d;\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport GloballDialog from \"../../../../dialog/globalDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorArgumentItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const logicNode = node.parent?.parent as TreeUtil.ElementNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n        setName({ ...name, value: param.name });\r\n        setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, argType]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeArgumentItem = {\r\n                    name: name.value,\r\n                    valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n                syncArgumentAdd(logicNode, name.value);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(logicNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = reservedList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeArgumentItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'color' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getArgumentRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    // DependしているInheritのSendパラメータを同期する\r\n                                    syncArgumentDel(logicNode, name.value);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentItem;\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param node 引数のノード\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param logicNode ロジックノード\r\n*/\r\nconst syncArgumentName = (logicNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n    const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n    if (fieldMng != undefined) {\r\n        syncFormula((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n    }\r\n    const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n    if (visualMng != undefined) {\r\n        syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n    if (behaviorMng != undefined) {\r\n        syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n    if (inhMng != undefined) {\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n            // Inherit配下のField要素のチェック\r\n            if (inhfld != null) {\r\n                syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n            // Extend要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            // Send要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        });\r\n    }\r\n\r\n    const syncParamName = (params: LogicUtil.WrapElement[]) => {\r\n        params.forEach(wrap => {\r\n            const item = wrap.data as LogicUtil.NodeParamItem;\r\n            if (item.name === prevName) {\r\n                item.name = newName;\r\n            }\r\n        });\r\n    }\r\n    if (wrap.type === 'logic-item') {\r\n\r\n        // dependしている箇所を全て反映するために再帰で洗う\r\n        const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n            const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n            if (inhMng == undefined) return;\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    const inhLogic = LogicElementUtil.getInnerWrapFixed(inh, 'inherit-logic').data as LogicUtil.NodeLogicItem;\r\n                    runRec(inhLogic);\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    const sendMng = LogicElementUtil.getInnerWrapFixed(inh, 'send-mng').data as LogicUtil.NodeParamManager;\r\n                    syncParamName(sendMng.params);\r\n                }\r\n            });\r\n        }\r\n        // ロジックを全て調査する\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(logic => {\r\n            runRec((logic.data as LogicUtil.WrapElement).data);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        const root = (rootNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeRoot;\r\n        const defs = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        console.log(defs.length);\r\n        defs.forEach(wrap => {\r\n            const interfaceWrap = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng');\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(interfaceWrap, 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            syncParamName(sendMng.params);\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const connWrap = logicNode.parent?.data as LogicUtil.WrapElement;\r\n        const sendMng = LogicElementUtil.getInnerWrapFixed(connWrap, 'send-mng').data as LogicUtil.NodeParamManager;\r\n        syncParamName(sendMng.params);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の更新に伴い、参照先のSend管理に処理（callback）を行う\r\n * @param logicNode ロジックノード\r\n * @param callback 処理\r\n */\r\nconst syncArgumentCallback = (\r\n    logicNode: TreeUtil.ElementNode,\r\n    callback: (sendNode: TreeUtil.ElementNode) => void\r\n) => {\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n\r\n    if (wrap.type === 'logic-item') {\r\n        const runRec = (logicNode: TreeUtil.ElementNode) => {\r\n            const inhMngNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'inherit-mng');\r\n            if (inhMngNode == undefined) return;\r\n            inhMngNode.children.forEach(child => {\r\n                const conn = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    runRec(LogicElementUtil.getInnerNodeFixed(child, 'inherit-logic'));\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    callback(LogicElementUtil.getInnerNodeFixed(child, 'send-mng'));\r\n                }\r\n            });\r\n        }\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(child => {\r\n            runRec(child);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        rootNode.children[0].children.forEach(seedNode => {\r\n            const interfaceNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'interface-mng');\r\n            const sendNode = LogicElementUtil.getInnerNodeFixed(interfaceNode, 'seedsend-mng');\r\n            const seed = (seedNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n            if (seed.entry === logicItem.name) {\r\n                callback(sendNode);\r\n            }\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const sendNode = LogicElementUtil.getInnerNodeFixed(logicNode.parent as TreeUtil.ElementNode, 'send-mng');\r\n        callback(sendNode);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentAdd = (logicNode: TreeUtil.ElementNode, newArgName: string) => {\r\n    const addNewParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n            { name: newArgName, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n        );\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        sendMng.params.push(paramWrap);\r\n        sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n    }\r\n    syncArgumentCallback(logicNode, addNewParam);\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentDel = (logicNode: TreeUtil.ElementNode, delArgName: string) => {\r\n    const delArgParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        let delIndex = -1;\r\n        sendMng.params.some((param, i) => {\r\n            if ((param.data as LogicUtil.NodeParamItem).name == delArgName) {\r\n                delIndex = i;\r\n                return 1;\r\n            }\r\n        });\r\n        sendMng.params.splice(delIndex, 1);\r\n        sendNode.children.splice(delIndex, 1);\r\n    }\r\n    syncArgumentCallback(logicNode, delArgParam);\r\n}","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Seed',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seed-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedManager).defs.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorLogicMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Logic',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'logic-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\n\r\nconst EditorLogicItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [isConnect, hasArgNode, hasFieldNode, hasConnectNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        return [\r\n            parentType === 'connector',\r\n            list.includes('argument-mng'),\r\n            list.includes('field-mng'),\r\n            list.includes('inherit-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        if (!isConnect) {\r\n            const param = wrap.data as LogicUtil.NodeLogicItem;\r\n            setName({ ...name, value: param.name });\r\n        }\r\n    };\r\n\r\n    /** 既存のロジック名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => {\r\n        // インヘリットの場合、名前を持たないため取得しない\r\n        if (wrap.type === 'inherit-logic') return [];\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node, isConnect]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 引数要素の有無を判定\r\n     */\r\n    const hasArgument = () => {\r\n        const argumentNode = LogicElementUtil.getInnerNode(node, 'argument-mng');\r\n        if (argumentNode == null) return false;\r\n        return argumentNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'field-mng');\r\n        if (fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 派生要素の有無を判定\r\n     */\r\n    const hasInherit = () => {\r\n        const inheritNode = LogicElementUtil.getInnerNode(node, 'inherit-mng');\r\n        if (inheritNode == null) return false;\r\n        return inheritNode.children.length > 0;\r\n    }\r\n\r\n    return (<>\r\n        {isConnect ? <></> : (<>\r\n            <ModifyOperations.Component\r\n                mappingForm={mappingForm}\r\n                checkableFields={[name]}\r\n                firstRegist={() => {\r\n                    const element: LogicUtil.NodeLogicItem = {\r\n                        name: name.value,\r\n                        mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                    };\r\n                    element.name = name.value;\r\n                    wrap.data = element;\r\n\r\n                    element.mngs.forEach(mng => {\r\n                        const newNode = TreeUtil.createNode(mng, node);\r\n                        const data = (newNode.data as LogicUtil.WrapElement).data;\r\n                        (data as LogicUtil.NodeParamManager).params.forEach(param => {\r\n                            newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                        });\r\n                        node.children.push(newNode);\r\n                    });\r\n                    invalidate();\r\n                    setStore({ ...store });\r\n                }}\r\n                modifyRegist={() => {\r\n                    const param = wrap.data as LogicUtil.NodeLogicItem;\r\n                    const prevName = param.name;\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n                    // 名前が変わった場合、参照箇所も修正する\r\n                    if (prevName !== param.name) {\r\n                        syncLogicName(node, prevName, param.name);\r\n                    }\r\n                }}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"param\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Name\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={200}\r\n                                isReadOnly={!isModify}\r\n                                checkable={name}\r\n                                setCheckable={setName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => !existNameList.includes(value),\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n        </>)}\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Argument'}\r\n                        width={300}\r\n                        isUse={hasArgNode}\r\n                        isEnable={!hasArgument()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasArgNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'argument-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as LogicUtil.NodeArgumentManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            if (hasArgNode) listPos++;\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'field-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Inherit'}\r\n                            width={300}\r\n                            isUse={hasConnectNode}\r\n                            isEnable={!hasInherit()}\r\n                            callback={() => {\r\n                                let listPos = 2;\r\n                                if (hasArgNode) listPos++;\r\n                                if (hasFieldNode) listPos++;\r\n                                toggleElement(\r\n                                    hasConnectNode,\r\n                                    listPos,\r\n                                    {\r\n                                        type: 'inherit-mng',\r\n                                        data: {\r\n                                            inherits: []\r\n                                        } as LogicUtil.NodeConnectManager\r\n                                    }\r\n                                );\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        {isConnect ? <></> : (\r\n            <FormUtil.BorderPanel\r\n                title=\"operation\"\r\n                isEnable={!isModify}\r\n                innerJsx={<>\r\n                    {LogicElementUtil.getReplicateButton(node, !isModify, 'logic', store, setStore, invalidate)}\r\n                    {/* <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Replicate',\r\n                                isEnable: !isModify,\r\n                                // isEnable: false,\r\n                                callback: () => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Replicate this logic.\"\r\n                                        buttons={[\r\n                                            {\r\n                                                label: 'Cancel',\r\n                                                callback: () => {\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                label: 'Enter',\r\n                                                callback: () => {\r\n                                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                                    const name = wrap.data[namable] as string;\r\n                                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                    // mappingForm();\r\n                                                    invalidate();\r\n                                                }\r\n                                            }\r\n                                        ]}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    /> */}\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Delete',\r\n                                callback: () => {\r\n                                    const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                    const refers = getLocgicRefers(node, param.name);\r\n                                    if (refers.length === 0) {\r\n                                        removeSelf();\r\n                                    } else {\r\n                                        store.system.dialog = <ConfirmDialog.Component\r\n                                            message={`[${param.name}] is referenced in the Inherit.\\n${refers}`}\r\n                                        />;\r\n                                        setStore({ ...store });\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                    {/* 並び順入れ替えボタン */}\r\n                    {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n                </>}\r\n            />\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicItem;\r\n\r\n/**\r\n * ロジックを参照しているInheritのリストを返す。\r\n * @param node 現在のノード\r\n * @param logicName ロジック名\r\n * @returns 参照Inheritリスト\r\n */\r\nexport const getLocgicRefers = (node: TreeUtil.ElementNode, logicName: string) => {\r\n\r\n    const refers: string[] = [];\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        refers.push(conn.id);\r\n    }\r\n    searchLogicReferInherit(node, logicName, callback);\r\n    return refers;\r\n}\r\n\r\n/**\r\n * ロジック名の変更に伴い、参照しているインヘリットを同期する\r\n * @param node ロジックノード\r\n */\r\nconst syncLogicName = (node: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        conn.depend = newName;\r\n    }\r\n    searchLogicReferInherit(node, prevName, callback);\r\n}\r\n\r\nconst searchLogicReferInherit = (\r\n    node: TreeUtil.ElementNode,\r\n    logicName: string,\r\n    callback: (conn: LogicUtil.NodeInheritConnector) => void\r\n) => {\r\n    const logicMngNode = node.parent as TreeUtil.ElementNode\r\n    const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng == undefined) return;\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n            if (conn.method === 'create') {\r\n                const inhLogic = LogicElementUtil.getInnerWrap(inh, 'inherit-logic');\r\n                runRec(inhLogic?.data);\r\n            } else {\r\n                if (conn.depend === logicName) {\r\n                    callback(conn);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    logicMngNode.children.forEach(logic => {\r\n        runRec((logic.data as LogicUtil.WrapElement).data);\r\n    });\r\n}","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorBehiviorMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [isVector, hasDecayParam, hasGravityParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.BehaviorParamType.VEC_X),\r\n            list.includes(ParamUtil.ModulateParamType.DECAY_RATE),\r\n            list.includes(ParamUtil.ModulateParamType.GRAVITY_VAL)\r\n        ]\r\n    }, [node]);\r\n\r\n    const exchangeElements = (flag: boolean, listPos: number,\r\n        trueParamElements: LogicUtil.NodeParamItem[],\r\n        falseParamElements: LogicUtil.NodeParamItem[]\r\n    ) => {\r\n        const size = (flag ? trueParamElements : falseParamElements).length;\r\n        LogicElementUtil.removeChild(node, listPos, size);\r\n\r\n        (flag ? trueParamElements : falseParamElements).forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    const exchangeVectorMethod = () => {\r\n        exchangeElements(!isVector, 3,\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_X, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_Y, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ],\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_RAD, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_LEN, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ]\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            mng.params.splice(listPos, size);\r\n            node.children.splice(listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                mng.params.splice(listPos + i, 0, wrap);\r\n                const newNode = TreeUtil.createNode(wrap, node);\r\n                node.children.splice(listPos + i, 0, newNode);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Vector method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Direction method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={!isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"modulate\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Decay'}\r\n                            width={300}\r\n                            isUse={hasDecayParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDecayParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_RATE,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.9' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Gravity'}\r\n                            width={300}\r\n                            isUse={hasGravityParam}\r\n                            callback={() => {\r\n                                toggleElements(hasGravityParam, !hasDecayParam ? 5 : 7, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_VAL,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.2' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorBehiviorMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype Medhod = 'blank' | 'particle' | 'snake'\r\n\r\nconst EditorVisualMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [drawMethod, hasDisappearParam, hasShrinkParam, hasFlashParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        let drawMethod: Medhod = 'blank';\r\n        if(list.length > 0) {\r\n            drawMethod = list.includes(ParamUtil.VisualParamType.THICKNESS) ? 'snake' : 'particle';\r\n        }\r\n        return [\r\n            drawMethod,\r\n            list.includes(ParamUtil.EffectParamType.DISAPPEAR_START),\r\n            list.includes(ParamUtil.EffectParamType.SHRINK_START),\r\n            list.includes(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME)\r\n        ]\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    const addElements = (paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        paramElements.forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n    const removeElements = (elementNameList: string[]) => {\r\n        const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        elementNameList.forEach((name) => {\r\n            mng.params.forEach((param, i) => {\r\n                if((param.data as LogicUtil.NodeParamItem).name === name) {\r\n                    LogicElementUtil.removeChild(node, i, 1);\r\n                }\r\n            });\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam || hasFlashParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'None'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'blank'}\r\n                            callback={() => {\r\n                                mng.params.length = 0;\r\n                                node.children.length = 0;\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Snake Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'snake'}\r\n                            callback={() => {\r\n                                removeElements([\r\n                                    ParamUtil.VisualParamType.RADIUS\r\n                                ]);\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.THICKNESS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Particle Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'particle'}\r\n                            callback={() => {\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.RADIUS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '20' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"effect\"\r\n            isEnable={!isModify && drawMethod !== 'blank'}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Disappear'}\r\n                            width={300}\r\n                            isUse={hasDisappearParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDisappearParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.DISAPPEAR_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Shrink'}\r\n                            width={300}\r\n                            isUse={hasShrinkParam}\r\n                            callback={() => {\r\n                                toggleElements(hasShrinkParam, !hasDisappearParam ? 5 : 6, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.SHRINK_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Flash'}\r\n                            width={300}\r\n                            isUse={hasFlashParam}\r\n                            callback={() => {\r\n                                toggleElements(hasFlashParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_APPEAR_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_HIDE_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorVisualMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInheritConnMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeConnectManager;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Inherit',\r\n                        callback: () => {\r\n                            const wrap: LogicUtil.WrapElement = {\r\n                                type: 'connector',\r\n                                data: null\r\n                            }\r\n                            mng.inherits.push(wrap);\r\n                            const newNode = TreeUtil.createNode(wrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorInheritConnector = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, invalidate, setModify, isModify, removeSelf, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const [condition, setCondition] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [identify, setIdentify] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [method, setMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [depend, setDepend] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n        setMethod({ ...method, value: param.method });\r\n        setDepend({ ...depend, value: param.depend });\r\n        setIdentify({ ...identify, value: param.id });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n            // 派生識別名（自動命名）の初期値を取得\r\n            const defaultName = LogicElementUtil.getNumberingOnPrefixName('id_', node.parent as TreeUtil.ElementNode);\r\n            setIdentify({ ...identify, value: defaultName });\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const isCreate = method.value === 'create';\r\n\r\n    const hasFieldNode = useMemo(() => {\r\n        return LogicElementUtil.getInnerNode(node, 'inhfld-mng') != null;\r\n    }, [node]);\r\n\r\n    /** 引用するロジックリスト */\r\n    const logicList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return inheritMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    /** 同階層の既存のインヘリットIDを取得（重複チェックに使用） */\r\n    const idList = useMemo(() => {\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    const initConnectorNode = (param: LogicUtil.NodeInheritConnector) => {\r\n        param.mngs = [];\r\n        node.children = [];\r\n        param.mngs.push({\r\n            type: 'extend-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        param.mngs.push({\r\n            type: 'send-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        if (isCreate) {\r\n            param.mngs.push({\r\n                type: 'inherit-logic',\r\n                data: {\r\n                    mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                } as LogicUtil.NodeInheritItem\r\n            });\r\n        }\r\n        wrap.data = param;\r\n\r\n        param.mngs.forEach(mng => {\r\n            const newNode = TreeUtil.createNode(mng, node);\r\n            const data = (newNode.data as LogicUtil.WrapElement);\r\n            switch (data.type) {\r\n                case 'inherit-logic': {\r\n                    LogicElementUtil.syncTreeElementFromWrap(newNode);\r\n                } break;\r\n                case 'send-mng': {\r\n                    const connector = (newNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.method === 'depend') {\r\n                        console.log('initSendParams');\r\n                        initSendParams(newNode, rootData);\r\n                    }\r\n                } break;\r\n            }\r\n            node.children.push(newNode);\r\n        });\r\n    }\r\n\r\n    const getSendParamList = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement): string[] => {\r\n        const connector = (sendNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = inheritMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement) => {\r\n        const sendParamList = getSendParamList(sendNode, rootData);\r\n        // console.log(sendParamList);\r\n        const wrap = sendNode.data as LogicUtil.WrapElement;\r\n        const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n                sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'inhfld-mng');\r\n        if(fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n\r\n    const isDisable = wrap.data == null ? false : (wrap.data as LogicUtil.NodeInheritConnector).disable ?? false;\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[identify, method, depend]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeInheritConnector = {\r\n                    method: method.value as LogicUtil.InheritMethod,\r\n                    depend: depend.value,\r\n                    id: identify.value,\r\n                    mngs: []\r\n                };\r\n                initConnectorNode(param);\r\n                invalidate();\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                const isChange = param.method !== method.value || param.depend !== depend.value;\r\n                param.method = method.value as LogicUtil.InheritMethod;\r\n                param.depend = depend.value;\r\n                param.id = identify.value;\r\n                wrap.data = param;\r\n\r\n                if (isChange) {\r\n                    initConnectorNode(param);\r\n                }\r\n                invalidate();\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={method}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                // createが選択されたらdependを空にする\r\n                                if (checkable.value === 'create') {\r\n                                    setDepend({ ...depend, value: '' });\r\n                                }\r\n                                setMethod(checkable);\r\n                            }}\r\n                            list={LogicUtil.ConnectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Depend\"\r\n                    isEnabled={method.value === 'depend'}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={depend}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setDepend}\r\n                            list={logicList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            dependency={[method]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => {\r\n                                        return method.value !== 'depend' || ValidateUtil.checkRequired(value);\r\n                                    },\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Identify\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={identify}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setIdentify}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !idList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                0,\r\n                                {\r\n                                    type: 'inhfld-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Disable'}\r\n                        width={300}\r\n                        isUse={isDisable}\r\n                        isEnable={!isModify}\r\n                        callback={() => {\r\n                            const data = (wrap.data as LogicUtil.NodeInheritConnector);\r\n                            if (isDisable) {\r\n                                data.disable = undefined;\r\n                            } else {\r\n                                data.disable = true;\r\n                            }\r\n                            invalidate();\r\n                        }}\r\n                    />}\r\n                />\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'inherit', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Edit local',\r\n                            isEnable: !isModify && !isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Create a clone from the depended inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                                                const logicList = logicMng.defs.map(def => def.data as LogicUtil.NodeLogicItem);\r\n                                                // ディペンドしているロジックを取得\r\n                                                const dependLogic = logicList.find(inherit => inherit.name === depend.value);\r\n                                                if (dependLogic != undefined) {\r\n                                                    const cloneLogic = JSON.parse(JSON.stringify(dependLogic)) as LogicUtil.NodeLogicItem;\r\n                                                    const connectItem: LogicUtil.NodeInheritItem = {\r\n                                                        mngs: cloneLogic.mngs\r\n                                                    };\r\n                                                    const newWrap: LogicUtil.WrapElement = {\r\n                                                        type: 'inherit-logic',\r\n                                                        data: connectItem\r\n                                                    };\r\n                                                    const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                                                    // 子要素の展開\r\n                                                    newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                    const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                    param.method = 'create';\r\n                                                    param.depend = '';\r\n                                                    mappingForm();\r\n                                                }\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Detach global',\r\n                            isEnable: !isModify && isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Detach a clone from the this inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                let rootNode = node;\r\n                                                while (rootNode.parent != null) rootNode = rootNode.parent;\r\n                                                const inheritNode = node.children.find(el => (el.data as LogicUtil.WrapElement).type === 'inherit-logic');\r\n                                                const logicMngNode = rootNode.children.find(el => (el.data as LogicUtil.WrapElement).type === 'logic-mng');\r\n                                                if (logicMngNode == undefined || inheritNode == undefined) return;\r\n                                                const inherit = (inheritNode.data as LogicUtil.WrapElement).data;\r\n                                                const clone = JSON.parse(JSON.stringify((inherit))) as LogicUtil.NodeInheritItem;\r\n                                                // ロジック名（自動命名）を取得\r\n                                                const defaultName = LogicElementUtil.getNumberingOnPrefixName('clone_inherit_', logicMngNode);\r\n                                                const logicItem: LogicUtil.NodeLogicItem = {\r\n                                                    ...clone,\r\n                                                    name: defaultName\r\n                                                };\r\n                                                const newWrap: LogicUtil.WrapElement = {\r\n                                                    type: 'logic-item',\r\n                                                    data: logicItem\r\n                                                };\r\n\r\n                                                // ロジックマネージャに追加\r\n                                                const newNode = LogicElementUtil.addChild(newWrap, logicMngNode);\r\n                                                // 子要素の展開\r\n                                                newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                // 自身（コネクタ）からインヘリット要素を削除\r\n                                                LogicElementUtil.removeChild(node, 2, 1);\r\n\r\n                                                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                param.method = 'depend';\r\n                                                param.depend = logicItem.name;\r\n                                                mappingForm();\r\n\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnector;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ParamUtil from \"../util/paramUtil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\n\r\nnamespace SendTemplateDialog {\r\n\r\n    const FRAME_WIDTH = 450;\r\n    const FRAME_HEIGHT = 160;\r\n    const COMPONENT_WIDTH = 296;\r\n\r\n    export const ConnectParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, input property name!';\r\n\r\n        /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n        const paramNameList = useMemo(() => {\r\n            const owner = (LogicElementUtil.getInnerWrap(props.node.parent?.data as LogicUtil.WrapElement, 'inherit-logic') as LogicUtil.WrapElement).data;\r\n            return LogicElementUtil.getParamNameList(owner);\r\n        }, [props.node]);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    // Sendにパラメータを追加\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: xName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }] }\r\n                    ), props.node);\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: yName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }] }\r\n                    ), props.node);\r\n\r\n                    // 派生ロジックに引数を追加\r\n                    const logicNode = LogicElementUtil.getInnerNode(props.node.parent as TreeUtil.ElementNode, 'inherit-logic') as TreeUtil.ElementNode;\r\n                    const hasArgNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') != undefined;\r\n                    if (!hasArgNode) {\r\n                        LogicElementUtil.insertChild({\r\n                            type: 'argument-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeArgumentManager\r\n                        }, logicNode, 0);\r\n                    }\r\n                    const argNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') as TreeUtil.ElementNode;\r\n\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: xName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: yName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n\r\n                    // 派生ロジックの座標に引数を設定\r\n                    const behaviorNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'behavior-mng') as TreeUtil.ElementNode;\r\n                    const setParamValue = (prpName: string, argName: string) => {\r\n                        const params = behaviorNode.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                        const targetParam = params.find(param => param.name === prpName) as LogicUtil.NodeParamItem;\r\n                        targetParam.formulaItems = ['var'];\r\n                        targetParam.values = [{ type: 'argument', value: argName }];\r\n                    }\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_X, xName.value);\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_Y, yName.value);\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (yName.value !== '') list.push(yName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[yName]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (xName.value !== '') list.push(xName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[xName]}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n\r\n    export const SetParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, select property name!';\r\n\r\n        const list = useMemo(() => {\r\n            return props.node.children.map(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                return (wrap.data as LogicUtil.NodeParamItem).name;\r\n            });\r\n        }, []);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    const paramList = props.node.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                    const xParam = paramList.find(param => param.name === xName.value) as LogicUtil.NodeParamItem;\r\n                    const yParam = paramList.find(param => param.name === yName.value) as LogicUtil.NodeParamItem;\r\n                    xParam.formulaItems = ['var'];\r\n                    xParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }];\r\n                    yParam.formulaItems = ['var'];\r\n                    yParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }];\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== yName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== xName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SendTemplateDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #d0e7e718;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSendManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const isDepend = () => {\r\n        const conn = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        return conn.method === 'depend';\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"template\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Connect Position',\r\n                            isEnable: !isDepend(),\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.ConnectParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Set Position',\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.SetParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSendManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFieldMng = () => {\r\n    const { invalidate, node, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Field',\r\n                        callback: () => {\r\n                            // const newWrap: FactoryUtil.WrapNode = FactoryUtil.createParamWrap('field-item',\r\n                            //     { name: '', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                            // );\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'field-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFieldMng;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorExtendMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [hasLoopParam, hasInvokeParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name as ParamUtil.ExtendParam;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.ExtendParamType.LOOP_COUNT),\r\n            list.includes(ParamUtil.ExtendParamType.INVOKE)\r\n        ]\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Loop'}\r\n                            width={300}\r\n                            isUse={hasLoopParam}\r\n                            callback={() => {\r\n                                toggleElement(hasLoopParam, 0, {\r\n                                    type: 'param-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.LOOP_COUNT,\r\n                                        formulaItems: ['var'],\r\n                                        values: [{ type: 'direct', value: '1' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Invoke'}\r\n                            width={300}\r\n                            isUse={hasInvokeParam}\r\n                            callback={() => {\r\n                                toggleElement(hasInvokeParam, hasLoopParam ? 1 : 0, {\r\n                                    type: 'condition-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.INVOKE,\r\n                                        formulaItems: ['var', '=', 'var'],\r\n                                        values: [{ type: 'direct', value: '0' }, { type: 'direct', value: '0' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorExtendMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\n\r\nconst EditorSeedItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [entry, setEntry] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [permit, setPermit] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setEntry({ ...entry, value: param.entry });\r\n        setPermit({ ...permit, value: param.permit })\r\n    };\r\n\r\n    /** 既存のシード名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    // 引用するロジックリスト\r\n    const logicNameList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const logicMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return logicMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    const getSendParamList = (): string[] => {\r\n        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n        const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = logicMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = () => {\r\n        const sendParamList = getSendParamList();\r\n        const sendNode = LogicElementUtil.getInnerNode(node, 'interface-mng', 'seedsend-mng') as TreeUtil.ElementNode;\r\n        const params = ((sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('seedsend-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n            }\r\n        });\r\n        LogicElementUtil.syncTreeElementFromWrap(sendNode);\r\n    }\r\n\r\n    const getDefaultSeedMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'interface-mng',\r\n                data: {\r\n                    mngs: [\r\n                        {\r\n                            type: 'seedarg-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeSeedArgManager\r\n                        },\r\n                        {\r\n                            type: 'seedsend-mng',\r\n                            data: {\r\n                                params: []\r\n                            } as LogicUtil.NodeSeedSendManager\r\n                        },\r\n                    ]\r\n                } as LogicUtil.NodeInterfaceMng\r\n            },\r\n            {\r\n                type: 'thumbnail-mng',\r\n                data: {\r\n                    items: []\r\n                } as LogicUtil.NodeThumnailManager\r\n            },\r\n            {\r\n                type: 'sample-mng',\r\n                data: {\r\n                    samples: []\r\n                } as LogicUtil.NodeSampleManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, entry, permit]}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSeedItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    entry: entry.value,\r\n                    permit: permit.value as LogicUtil.PermitType,\r\n                    mngs: getDefaultSeedMngs()\r\n                };\r\n                wrap.data = element;\r\n\r\n                LogicElementUtil.syncTreeElementFromWrap(node);\r\n                // 参照しているロジックの引数をSendに設定\r\n                initSendParams();\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedItem;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.permit = permit.value as LogicUtil.PermitType;\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 24),\r\n                                    errorType: \"length\"\r\n                                },\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Entry\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={entry}\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setEntry}\r\n                            list={logicNameList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Permit\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={permit}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setPermit}\r\n                            list={LogicUtil.PermitTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'seed', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedItem;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext as LogicTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorThumbnailMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(LogicTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeThumnailManager;\r\n\r\n    const hasSample = useMemo(() => {\r\n        const sampleMngNode = LogicElementUtil.getInnerNode(node.parent as TreeUtil.ElementNode, 'sample-mng') as TreeUtil.ElementNode;\r\n        return sampleMngNode.children.length as number > 0;\r\n    }, []);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={hasSample}\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Thumbnail',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'thumbnail-item',\r\n                                data: null\r\n                            }\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport Particle from \"../../../../graphic/particle\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst WND_SIZE = 100;\r\n\r\nconst EditorThumbnailItem = () => {\r\n    const { rootData, node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n    const data = wrap.data as LogicUtil.NodeThumbnailItem;\r\n\r\n\r\n    const seedWrap = node.parent?.parent?.data as LogicUtil.WrapElement;\r\n    const sampleMng = LogicElementUtil.getInnerWrap(seedWrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n    const samples = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [urls, setUrls] = useState<string[]>([]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n        setName({ ...name, value: param.name });\r\n        setFrame({ ...frame, value: param.frame.toString() });\r\n    };\r\n    \r\n    /** 既存のサムネイル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n            setTimeout(() => {\r\n                const urls: string[] = [];\r\n                samples.forEach((sample, i) => {\r\n                    urls.push(getThumbnailURL(data.frame, i));\r\n                });\r\n                setUrls(urls);\r\n            }, 1);\r\n        }\r\n    }, [node]);\r\n\r\n    const getSeedValueMap = (sampleNo: number): PreviewUtil.ValueMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ValueMap[] = argMng.args.map((arg, i) => {\r\n            const name = (arg.data as LogicUtil.NodeSeedArgItem).name;\r\n            const value = samples[sampleNo].values[i];\r\n            return { name, value }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams.map(item => {\r\n            return { name: item.name, value: PreviewUtil.convertParamsToValue(item.name, sendParams, argMap) ?? 0 }\r\n        });\r\n    }\r\n\r\n    const getThumbnailURL = (targetFrame: number, sampleNo: number) => {\r\n        console.log('create start!');\r\n        const owner: Particle.Instance[] = [];\r\n\r\n        let frameCnt = 0;\r\n        do {\r\n            if (frameCnt === 0) {\r\n                const seed = (node.parent?.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n                const logicManager = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                const logic = logicManager.defs.find(logic => (logic.data as LogicUtil.NodeLogicItem).name === seed.entry);\r\n                if (logic == undefined) break;\r\n\r\n                const sendValueMapList = getSeedValueMap(sampleNo);\r\n                owner.push(new Particle.Instance(\r\n                    PreviewUtil.buildLogicProps(owner, logic.data, rootData, sendValueMapList))\r\n                );\r\n            }\r\n\r\n            if (frameCnt === targetFrame) {\r\n                return CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                });\r\n            }\r\n\r\n            // パーティクルの更新\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                particle.update();\r\n            }\r\n\r\n            // 死滅したパーティクルの削除\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frameCnt > 500 || owner.length > 3000) break;\r\n            frameCnt++;\r\n        } while (owner.length > 0);\r\n        return '';\r\n    }\r\n\r\n    const pictureJsxList = useMemo(() => {\r\n        const sampleMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n        return sampleMng.samples.map((wrap, i) => {\r\n            const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n\r\n            const url = urls[i];\r\n            const imgJsx = url == undefined ? <></> : <_IMG src={urls[i]} />;\r\n            return (\r\n                <_SampleDiv key={i}>-\r\n                    <_SampleName>{sample.name}</_SampleName>\r\n                    <_CanvasDiv>\r\n                        {imgJsx}\r\n                    </_CanvasDiv>\r\n                </_SampleDiv>\r\n            );\r\n        });\r\n    }, [node, urls]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, frame]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeThumbnailItem = {\r\n                    name: name.value,\r\n                    frame: Number(frame.value),\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n                param.name = name.value;\r\n                param.frame = Number(frame.value);\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"preview\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {pictureJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailItem;\r\n\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport DrawUtil from \"../../../graphic/drawUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\n\r\nnamespace LogicFormUtil {\r\n\r\n    export const buildPreviewForms = (\r\n        isReadOnly: boolean,\r\n        argumentList: LogicUtil.NodeSeedArgItem[],\r\n        formgrpList: LogicUtil.NodeFromGrpItem[],\r\n        formList: FormUtil.CheckableValue[],\r\n        setFormList: ((formList: FormUtil.CheckableValue[]) => void)\r\n    ): JSX.Element[] => {\r\n        const list: JSX.Element[] = [];\r\n        const usedGrps: string[] = [];\r\n        formList.forEach((form, i) => {\r\n            const argument = argumentList[i];\r\n            const formgrp = formgrpList.find(grp => grp.args.includes(argument.name));\r\n            if (formgrp != undefined) {\r\n                // 設定済みであれば追加しない\r\n                if (usedGrps.includes(formgrp.name)) return 1;\r\n                // 利用済みリストに追加\r\n                usedGrps.push(formgrp.name);\r\n                const targetForms: number[] = [];\r\n                argumentList.forEach((arg, j) => {\r\n                    if (formgrp.args.includes(arg.name)) {\r\n                        targetForms.push(j);\r\n                    }\r\n                });\r\n                const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                    r: Number(formList[targetForms[0]].value),\r\n                    g: Number(formList[targetForms[1]].value),\r\n                    b: Number(formList[targetForms[2]].value),\r\n                    a: 255\r\n                }).substring(0, 7);\r\n                // console.log(colorCode);\r\n                list.push(<div key={i}>\r\n                    <FormUtil.Record\r\n                        jsx={\r\n                            <_Message>{formgrp.name}: <_Type>color </_Type><_Range>({0} ～ {255} respectively)</_Range></_Message>\r\n                        }\r\n                    />\r\n                    <FormUtil.Record\r\n                        jsx={<>\r\n                            {targetForms.map((formIndex, j) => {\r\n                                return (\r\n                                    <FormUtil.TextField\r\n                                        key={formIndex}\r\n                                        width={72}\r\n                                        marginLeft={j === 0 ? 5 : 4}\r\n                                        isNumber\r\n                                        isReadOnly={isReadOnly}\r\n                                        checkable={formList[formIndex]}\r\n                                        setCheckable={() => {\r\n                                            setFormList(formList.slice());\r\n                                        }}\r\n                                        validates={[\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            },\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkNumberRange(value, argument.min, argument.max),\r\n                                                errorType: 'value'\r\n                                            }\r\n                                        ]}\r\n                                    />\r\n                                );\r\n                            })}\r\n                            <_Color type=\"color\" value={colorCode}\r\n                                disabled={isReadOnly}\r\n                                onChange={(value) => {\r\n                                    const rgba = DrawUtil.convertRgbaFromColorCode(value.target.value + 'ff');\r\n                                    if (rgba != null) {\r\n                                        formList[targetForms[0]].value = rgba.r.toString();\r\n                                        formList[targetForms[1]].value = rgba.g.toString();\r\n                                        formList[targetForms[2]].value = rgba.b.toString();\r\n                                    }\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                            />\r\n                        </>}\r\n                    />\r\n                </div>);\r\n            } else {\r\n                let labelName = argument.name;\r\n                if (argument.disp != undefined) labelName = argument.disp;\r\n                list.push(<div key={i}>\r\n                    <FormUtil.Record\r\n                        jsx={\r\n                            <_Message>{labelName}: <_Type>number </_Type><_Range>({argument.min} ～ {argument.max})</_Range></_Message>\r\n                        }\r\n                    />\r\n                    <FormUtil.Record\r\n                        jsx={<>\r\n                            <FormUtil.TextField\r\n                                width={142}\r\n                                marginLeft={6}\r\n                                isNumber\r\n                                isReadOnly={isReadOnly}\r\n                                step={argument.step}\r\n                                checkable={form}\r\n                                setCheckable={() => {\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, argument.min, argument.max),\r\n                                        errorType: 'value'\r\n                                    }\r\n                                ]}\r\n                            />\r\n                            <_Tsumami type=\"range\" value={Number(form.value)} min={argument.min} max={argument.max} step={argument.step}\r\n                                disabled={isReadOnly}\r\n                                onChange={(value) => {\r\n                                    formList[i] = { ...form, value: value.target.value };\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                            />\r\n                        </>}\r\n                    />\r\n                </div>);\r\n            }\r\n        });\r\n        return list;\r\n    }\r\n}\r\n\r\nexport default LogicFormUtil;\r\n\r\n\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    overflow: hidden;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Type = styled.span`\r\n    color: #c10000;\r\n    font-weight: 600;\r\n`;\r\nconst _Range = styled.span`\r\n    color: #423e84fb;\r\n`;\r\n\r\nconst _Tsumami = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 11px 0 0 6px;\r\n    width: calc(100% - 160px);\r\n`;\r\n\r\nconst _Color = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 3px 0 0 6px;\r\n    width: 100px;\r\n    height: 34px;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../util/logicFormUtil\";\r\n\r\nconst EditorSampleItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [paramForms, setParamForms] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSampleItem;\r\n        setName({ ...name, value: param.name });\r\n        setParamForms(param.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のサンプル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const [seedargList, formgrpList]: [LogicUtil.NodeSeedArgItem[], LogicUtil.NodeFromGrpItem[]] = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'seedarg-mng');\r\n        const argInfoList = (argMng.data as LogicUtil.NodeSeedArgManager).\r\n            args.map(arg => {\r\n                return arg.data as LogicUtil.NodeSeedArgItem;\r\n            });\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        const formgrpMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'formgrp-mng');\r\n        if (formgrpMng != null) {\r\n            formgrpList = (formgrpMng.data as LogicUtil.NodeFromgrpManager).\r\n                defines.map(arg => {\r\n                    return arg.data as LogicUtil.NodeFromGrpItem;\r\n                });\r\n        }\r\n        return [argInfoList, formgrpList];\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setParamForms(seedargList.map(arg => {\r\n                let defval = ' ';\r\n                if (arg.defval != undefined) defval = arg.defval.toString();\r\n                return { value: defval, errors: [] };\r\n            }));\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const formList = useMemo(() => {\r\n        return LogicFormUtil.buildPreviewForms(\r\n            !isModify, seedargList, formgrpList, paramForms, setParamForms\r\n        );\r\n        // return paramForms.map((paramForm, i) => {\r\n        //     const arg = argInfoList[i];\r\n        //     return <FormUtil.FormRecord key={i}\r\n        //         titleLabel={arg.name}\r\n        //         jsx={\r\n        //             <FormUtil.TextField\r\n        //                 width={150}\r\n        //                 isReadOnly={!isModify}\r\n        //                 checkable={paramForm}\r\n        //                 setCheckable={(checkable) => {\r\n        //                     paramForms[i] = checkable;\r\n        //                     setParamForms(paramForms.slice());\r\n        //                 }}\r\n        //                 isNumber\r\n        //                 step={arg.step}\r\n        //                 validates={[\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkRequired(value),\r\n        //                         errorType: \"required\"\r\n        //                     },\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkNumberRange(value, arg.min, arg.max),\r\n        //                         errorType: \"value\"\r\n        //                     },\r\n        //                 ]}\r\n        //             />\r\n        //         }\r\n        //     />\r\n        // });\r\n    }, [paramForms, isModify]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name].concat(paramForms)}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSampleItem = {\r\n                    name: name.value,\r\n                    values: []\r\n                };\r\n                paramForms.forEach((form, i) => {\r\n                    element.values[i] = Number(form.value);\r\n                });\r\n                wrap.data = element;\r\n\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSampleItem;\r\n                param.name = name.value;\r\n                paramForms.forEach((form, i) => {\r\n                    param.values[i] = Number(form.value);\r\n                });\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {formList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'preset', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSampleMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Preset',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'sample-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSampleManager).samples.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleMng;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInterfaceManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const argMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedarg-mng');\r\n    const sendMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedsend-mng');\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(node.parent as TreeUtil.ElementNode, 'sample-mng');\r\n\r\n    const [hasGroupNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        return [\r\n            list.includes('formgrp-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const hasArgument = (): boolean => {\r\n        return argMngNode.children.length > 0;\r\n    }\r\n\r\n    /**\r\n     * グループ要素の有無を判定\r\n     */\r\n    const hasGroup = () => {\r\n        const groupMngNode = LogicElementUtil.getInnerNode(node, 'formgrp-mng');\r\n        if (groupMngNode == null) return false;\r\n        return groupMngNode.children.length > 0;\r\n    }\r\n\r\n    const execute = () => {\r\n        // const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n        // 既存の引数を削除\r\n        if (hasArgument()) {\r\n\r\n            LogicElementUtil.removeChildAll(argMngNode);\r\n            LogicElementUtil.removeChildAll(sampleMngNode);\r\n        }\r\n\r\n        sendMngNode.children.forEach(child => {\r\n            const send = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem;\r\n            send.formulaItems = ['var'];\r\n            send.values = [{ type: 'argument', value: send.name }];\r\n\r\n            const newArgData: LogicUtil.NodeSeedArgItem = {\r\n                name: send.name,\r\n                step: 1,\r\n                min: -9999,\r\n                max: 9999,\r\n                defval: 0\r\n            }\r\n            const newArgWrap: LogicUtil.WrapElement = {\r\n                type: 'seedarg-item',\r\n                data: newArgData\r\n            };\r\n            const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n            argMng.args.push(newArgWrap);\r\n            argMngNode.children.push(TreeUtil.createNode(newArgWrap, argMngNode));\r\n            invalidate();\r\n        });\r\n    }\r\n\r\n    const initDefaultSetting = () => {\r\n        if (!hasArgument()) {\r\n            execute();\r\n        } else {\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Are you sure you want to delete the existing element?\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        callback: () => {\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Execute',\r\n                        callback: () => {\r\n                            execute();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            setStore({ ...store });\r\n        }\r\n        invalidate();\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Group'}\r\n                        width={300}\r\n                        isUse={hasGroupNode}\r\n                        isEnable={!hasGroup()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasGroupNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'formgrp-mng',\r\n                                    data: {\r\n                                        defines: []\r\n                                    } as LogicUtil.NodeFromgrpManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Initialize Params',\r\n                        callback: initDefaultSetting\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInterfaceManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedArgMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seedarg-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedArgManager).args.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedArgMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorSeedArgItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [min, setMin] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [max, setMax] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [step, setStep] = useState<FormUtil.CheckableValue>({ value: '1', errors: [] });\r\n    const [defval, setDefval] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    const seedNode = node.parent?.parent?.parent as TreeUtil.ElementNode;\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setMin({ ...min, value: param.min.toString() });\r\n        setMax({ ...max, value: param.max.toString() });\r\n        setStep({ ...step, value: param.step.toString() });\r\n        setDefval({ ...defval, value: param.defval == undefined ? '' : param.defval.toString() });\r\n        // setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, min, max, step, defval]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeSeedArgItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    min: Number(min.value),\r\n                    max: Number(max.value),\r\n                    step: Number(step.value),\r\n                    defval: defval.value === '' ? undefined : Number(defval.value),\r\n                    // valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                wrap.data = param;\r\n                syncArgumentAdd(seedNode as TreeUtil.ElementNode, param);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.min = Number(min.value);\r\n                param.max = Number(max.value);\r\n                param.step = Number(step.value);\r\n                param.defval = defval.value === '' ? undefined : Number(defval.value);\r\n                // param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(seedNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 16),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Min\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={min}\r\n                            setCheckable={setMin}\r\n                            isNumber\r\n                            dependency={[max]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) < Number(max.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Max\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={max}\r\n                            setCheckable={setMax}\r\n                            isNumber\r\n                            dependency={[min]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) > Number(min.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Step\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={step}\r\n                            setCheckable={setStep}\r\n                            isNumber\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Default\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={defval}\r\n                            setCheckable={setDefval}\r\n                            isNumber\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'color' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                /> */}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'argument', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                                const refers = getArgumentRefers(seedNode, param.name);\r\n                                if (refers.length === 0) {\r\n                                    const curIndex = LogicElementUtil.getCurrentIndex(node);\r\n                                    if (curIndex === -1) throw new Error('[curIndex] is -1.');\r\n                                    syncArgumentDel(seedNode, curIndex);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtonsCallback(node, invalidate, (index, isUpper) => {\r\n                    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n                    const offset = isUpper ? -1 : 1;\r\n                    sampleMng.samples.forEach(wrap => {\r\n                        const values = (wrap.data as LogicUtil.NodeSampleItem).values;\r\n                        const swapNode = values[index];\r\n                        values[index] = values[index + offset];\r\n                        values[index + offset] = swapNode;\r\n                    });\r\n                })}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (seedNode: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    const sendMng = sendMngWrap.data as LogicUtil.NodeSeedSendManager;\r\n    sendMng.params.forEach(wrap => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        param.values.forEach(varItem => {\r\n            if (varItem.type === 'argument' && varItem.value === argName) {\r\n                refers.push(param.name);\r\n            }\r\n        });\r\n    });\r\n    return refers;\r\n}\r\n\r\nexport default EditorSeedArgItem;\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param seedNode Seedノード\r\n*/\r\nconst syncArgumentName = (seedNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    syncFormula((sendMngWrap.data as LogicUtil.NodeParamManager).params);\r\n\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Sample管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentAdd = (seedNode: TreeUtil.ElementNode, arg: LogicUtil.NodeSeedArgItem) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.push(arg.defval ?? arg.min);\r\n    });\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentDel = (seedNode: TreeUtil.ElementNode, delIndex: number) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.splice(delIndex, 1);\r\n    });\r\n}","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedSendMng = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const getSendParamList = (): string[] => {\r\n    //     const connector = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n    //     const isCreate = connector.method === 'create';\r\n    //     let targetWrap: LogicUtil.WrapElement | null = null;\r\n    //     if (!isCreate) {\r\n    //         const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n    //         const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n    //         const dependItem = inheritMng.defs.find(wrap => {\r\n    //             return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n    //         });\r\n    //         if (dependItem != undefined) targetWrap = dependItem;\r\n    //     } else {\r\n    //         targetWrap = (node.parent?.children[node.parent?.children.length - 1].data as LogicUtil.WrapElement)\r\n    //     }\r\n    //     if (targetWrap != null) {\r\n    //         const argWrap = (targetWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n    //         if (argWrap.type === 'argument-mng') {\r\n    //             return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n    //                 return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n    //             });\r\n    //         }\r\n    //     }\r\n    //     return [];\r\n    // }\r\n\r\n    // const update = () => {\r\n    //     const sendParamList = getSendParamList();\r\n    //     const curSize = node.children.length;\r\n    //     const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n    //     // 不要なパラメータを削除\r\n    //     for (let i = curSize - 1; i >= 0; i--) {\r\n    //         const name = (params[i].data as LogicUtil.NodeParamItem).name;\r\n    //         if (!sendParamList.includes(name)) {\r\n    //             node.children.splice(i, 1);\r\n    //             params.splice(i, 1);\r\n    //         }\r\n    //     }\r\n    //     // 必要な存在しないパラメータを追加\r\n    //     const curParamList = params.map(param => {\r\n    //         return (param.data as LogicUtil.NodeParamItem).name;\r\n    //     });\r\n    //     sendParamList.forEach(param => {\r\n    //         if (!curParamList.includes(param)) {\r\n    //             const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n    //                 { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n    //             );\r\n    //             params.push(paramWrap);\r\n    //             node.children.push(TreeUtil.createNode(paramWrap, node));\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    return (<>\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedSendMng;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorFormgrpItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [groupMethod, setGroupMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [targetList, setTargetList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n        setName({ ...name, value: param.name });\r\n        setGroupMethod({ ...groupMethod, value: param.method });\r\n        setTargetList(param.args.map(arg => {\r\n            return { value: arg, errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const seedargs = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed(node.parent?.parent?.data as LogicUtil.WrapElement, 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        return argMng.args.map(wrap => (wrap.data as LogicUtil.NodeSeedArgItem).name);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, groupMethod].concat(targetList)}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeFromGrpItem = {\r\n                    name: name.value,\r\n                    method: groupMethod.value as LogicUtil.FromGrpMethod,\r\n                    args: targetList.map(form => form.value)\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n                param.name = name.value;\r\n                param.method = groupMethod.value as LogicUtil.FromGrpMethod;\r\n                param.args = targetList.map(form => form.value);\r\n                wrap.data = param;\r\n\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 24),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={groupMethod}\r\n                            setCheckable={(checkable) => {\r\n                                const type = checkable.value as LogicUtil.FromGrpMethod;\r\n                                if (type === 'color') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(3).fill({ value: '', errors: [] }));\r\n                                } else {\r\n                                    setTargetList([]);\r\n                                }\r\n                                setGroupMethod({...checkable});\r\n                            }}\r\n                            list={LogicUtil.FromGrpMedhods.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'list' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n                {targetList.map((target, i) => {\r\n                    let formName = 'Target_';\r\n                    if (groupMethod.value === 'color') {\r\n                        switch (i) {\r\n                            case 0: formName += 'R'; break;\r\n                            case 1: formName += 'G'; break;\r\n                            case 2: formName += 'B'; break;\r\n                        }\r\n                    } else {\r\n                        formName += `_${i}`;\r\n                    }\r\n                    return (\r\n                        <FormUtil.FormRecord\r\n                            key={i}\r\n                            titleLabel={formName}\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={target}\r\n                                    setCheckable={(checkable) => {\r\n                                        targetList[i] = checkable;\r\n                                        setTargetList(targetList.slice());\r\n                                    }}\r\n                                    list={seedargs.map(item => {\r\n                                        return { value: item, labelText: item }\r\n                                    })}\r\n                                    headBlank\r\n                                    width={250}\r\n                                    isReadOnly={!isModify}\r\n                                    validates={\r\n                                        [\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            },\r\n                                            {\r\n                                                checker: (value) => targetList.find((target, j) => i !== j && target.value === value) == undefined,\r\n                                                errorType: \"relation\"\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                    dependency={targetList}\r\n                                />\r\n                            }\r\n                        />\r\n                    );\r\n                })}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: removeSelf\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFormgrpMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Group',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'formgrp-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeFromgrpManager).defines.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpMng;","import styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactDetArgumentMng from \"../detail/logic/editorArgumentMng\";\r\nimport EditorArgumentItem from \"../detail/logic/editorArgumentItem\";\r\nimport FactDetSeedMng from \"../detail/seed/editorSeedMng\";\r\nimport EditorLogicMng from \"../detail/logic/editorLogicMng\";\r\nimport EditorLogicItem from \"../detail/logic/editorLogicItem\";\r\nimport EditorParamItem from \"../detail/logic/editorParamItem\";\r\nimport FactDetBehiviorMng from \"../detail/logic/editorBehiviorMng\";\r\nimport EditorVisualMng from \"../detail/logic/editorVisualMng\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport EditorInheritConnMng from \"../detail/logic/editorInheritConnMng\";\r\nimport EditorInheritConnector from \"../detail/logic/editorInheritConnector\";\r\nimport EditorSendManager from \"../detail/logic/editorSendManager\";\r\nimport EditorFieldMng from \"../detail/logic/editorFieldMng\";\r\nimport EditorExtendMng from \"../detail/logic/editorExtendMng\";\r\nimport EditorSeedItem from \"../detail/seed/editorSeedItem\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"./logicElementUtil\";\r\nimport EditorThumbnailMng from \"../detail/seed/editorThumbnailMng\";\r\nimport EditorThumbnailItem from \"../detail/seed/editorThumbnailItem\";\r\nimport EditorSampleItem from \"../detail/seed/editorSampleItem\";\r\nimport EditorSampleMng from \"../detail/seed/editorSampleMng\";\r\nimport EditorInterfaceManager from \"../detail/seed/editorInterfaceManager\";\r\nimport EditorSeedArgMng from \"../detail/seed/editorSeedArgMng\";\r\nimport EditorSeedArgItem from \"../detail/seed/editorSeedArgItem\";\r\nimport EditorSeedSendMng from \"../detail/seed/editorSeedSendMng\";\r\nimport EditorFormgrpItem from \"../detail/seed/editorFormgrpItem\";\r\nimport EditorFormgrpMng from \"../detail/seed/editorFormgrpMng\";\r\n\r\nnamespace LogicUtil {\r\n\r\n    export type DetailArgs = {\r\n        rootData: LogicUtil.WrapElement;\r\n        node: TreeUtil.ElementNode;\r\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\r\n        invalidate: () => void;\r\n        isModify: boolean;\r\n        setModify: (isModify: boolean) => void;\r\n        // setRootData: React.Dispatch<React.SetStateAction<WrapElement>>;\r\n        setRootData: (rootData: WrapElement) => void;\r\n        removeSelf: () => void;\r\n    }\r\n\r\n    /**\r\n     * 変数名チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkFieldName = (str: string) => {\r\n        // 1文字目が数値でないこと\r\n        const isNoHeadNumber = !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].\r\n            includes(str.substring(0, 1));\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyz_';\r\n        return isNoHeadNumber && ValidateUtil.checkIncludesChars(str, list);\r\n    }\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'seed-mng' |\r\n        'logic-mng' |\r\n        'seed-item' |\r\n        'logic-item' |\r\n        'argument-mng' |\r\n        'argument-item' |\r\n        'field-mng' |\r\n        'field-item' |\r\n        'visual-mng' |\r\n        'behavior-mng' |\r\n        'inhfld-mng' |\r\n        'extend-mng' |\r\n        'inherit-mng' |\r\n        'connector' |\r\n        'inherit-logic' |\r\n        'send-mng' |\r\n        'send-item' |\r\n        'param-item' |\r\n        'condition-item' |\r\n        'interface-mng' |\r\n        'sample-mng' |\r\n        'sample-item' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-item' |\r\n        'seedarg-mng' |\r\n        'seedsend-mng' |\r\n        'seedarg-item' |\r\n        'seedsend-item' |\r\n        'formgrp-mng' |\r\n        'formgrp-item'\r\n        ;\r\n\r\n    export const ArgTypes = ['number', 'color'] as const;\r\n    export type ArgumentType = typeof ArgTypes[number];\r\n\r\n    export const ParamInputTypes = ['direct', 'constant', 'argument', 'self', 'field'] as const;\r\n    export type ParamInputType = typeof ParamInputTypes[number];\r\n\r\n    export const ConnectTypes = ['create', 'depend'] as const;\r\n    export type InheritMethod = typeof ConnectTypes[number];\r\n\r\n    export const PermitTypes = ['develop', 'private', 'release'] as const;\r\n    export type PermitType = typeof PermitTypes[number];\r\n\r\n    export const FromGrpMedhods = ['color', 'list'] as const;\r\n    export type FromGrpMethod = typeof FromGrpMedhods[number];\r\n\r\n    export type ParamProps = {\r\n        type: ParamInputType;\r\n        value: string;\r\n    }\r\n\r\n    export type WrapElement = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        seedMng: WrapElement;\r\n        logicMng: WrapElement;\r\n    }\r\n    export type NodeSeedManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicItem = {\r\n        name: string;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInterfaceMng = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInheritItem = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeParamManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeParamItem = {\r\n        name: string;\r\n        formulaItems: string[];\r\n        values: ParamProps[];\r\n    }\r\n\r\n    export type NodeArgumentItem = {\r\n        name: string;\r\n        valueType: ArgumentType;\r\n    }\r\n    export type NodeThumbnailItem = {\r\n        name: string;\r\n        frame: number;\r\n    }\r\n    export type NodeArgumentManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeFieldManager = {\r\n        fields: WrapElement[];\r\n    }\r\n    export type NodeSampleManager = {\r\n        samples: WrapElement[];\r\n    }\r\n    export type NodeSampleItem = {\r\n        name: string;\r\n        values: number[];\r\n    }\r\n\r\n    // export type NodeExtendManager = {\r\n    //     mngs: WrapElement[];\r\n    // }\r\n    export type NodeConnectManager = {\r\n        inherits: WrapElement[];\r\n    }\r\n    export type NodeInheritConnector = {\r\n        method: InheritMethod;\r\n        depend: string;\r\n        id: string;\r\n        disable?: boolean;\r\n        mngs: WrapElement[];\r\n    }\r\n\r\n    export type NodeSeedItem = {\r\n        name: string;\r\n        disp?: string;\r\n        entry: string;\r\n        permit: PermitType;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeThumnailManager = {\r\n        items: WrapElement[];\r\n    }\r\n    export type NodeSeedArgManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeSeedSendManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeSeedArgItem = {\r\n        name: string;\r\n        disp?: string;\r\n        min: number;\r\n        max: number;\r\n        step: number;\r\n        defval: number | undefined;\r\n    }\r\n    export type NodeFromgrpManager = {\r\n        defines: WrapElement[];\r\n    }\r\n    export type NodeFromGrpItem = {\r\n        name: string;\r\n        method: FromGrpMethod;\r\n        args: string[];\r\n    }\r\n\r\n    const COLOR_ROOT = '#a1a1a1';\r\n    const COLOR_METHOD = '#cca67b';\r\n    const COLOR_MNG = '#37a2bd';\r\n    const COLOR_LIST = '#b85f5f';\r\n    const COLOR_ITEM = '#ae628c';\r\n    const COLOR_DISABLE = '#685b79';\r\n    const COLOR_PARAM = '#8dae62';\r\n    const COLOR_FIELD = '#cec256';\r\n    const COLOR_THUMBNAIL = '#8283be';\r\n    const COLOR_CONDITION = '#56ce7e';\r\n\r\n    export const getNodeDisplayJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapElement;\r\n        switch (wrap.type) {\r\n            case 'root': {\r\n                return <_Category backgroundColor={COLOR_ROOT}>Library</_Category>;\r\n            }\r\n            case 'seed-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Seed Manager</_Category>;\r\n            }\r\n            case 'logic-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Logic Manager</_Category>;\r\n            }\r\n            case 'visual-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Visual</_Category>;\r\n            }\r\n            case 'extend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Extend</_Category>;\r\n            }\r\n            case 'seed-item': {\r\n                let detailJsx = <>...</>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedItem;\r\n                    detailJsx = <span>{data.name}&nbsp;<_Span color=\"#ffe89ba6\">entry:&nbsp;</_Span><_Field>{data.entry}</_Field></span>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Seed</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                    \r\n                </>;\r\n            }\r\n            case 'logic-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Logic</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-logic': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Logic</_Category>;\r\n            }\r\n            case 'argument-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'inhfld-mng':\r\n            case 'field-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Field Manager</_Category>;\r\n            }\r\n            case 'behavior-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Behavior</_Category>;\r\n            }\r\n            case 'inherit-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Inherit Manager</_Category>;\r\n            }\r\n            case 'connector': {\r\n                let detailJsx = <span>...</span>;\r\n                let color = COLOR_ITEM;\r\n                let isDisable = false;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeInheritConnector;\r\n                    detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}</_Span></span>;\r\n                    if (data.method === 'depend') {\r\n                        detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}:&nbsp;</_Span><_Field>{data.depend}</_Field></span>;\r\n                    }\r\n                    if (data.disable ?? false) {\r\n                        color = COLOR_DISABLE;\r\n                        isDisable = true;\r\n                    }\r\n                }\r\n                return (<>\r\n                    <_Category backgroundColor={color} isDisable={isDisable}>Inherit</_Category>\r\n                    {detailJsx == undefined ? <></> : <_EditableValue>{detailJsx}</_EditableValue>}\r\n                </>);\r\n            }\r\n            // パラメータ要素\r\n            case 'param-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_PARAM}>Param<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 条件要素\r\n            case 'condition-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_CONDITION}>Condition<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 変数要素\r\n            case 'field-item': {\r\n                let nameJsx = <span>...</span>;\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeParamItem;\r\n                    nameJsx = <_Detail>&nbsp;[{data.name}]</_Detail>;\r\n                    let result: JSX.Element[] = [];\r\n                    let varCnt = 0;\r\n                    data.formulaItems.forEach((formula, i) => {\r\n                        let str = <_Signature key={i}>{formula}</_Signature>;\r\n                        if (formula === 'var') {\r\n                            const v = data.values[varCnt];\r\n                            if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                            else str = <span key={i}>{v.value}</span>;\r\n                            varCnt++;\r\n                        }\r\n                        result.push(str);\r\n                    });\r\n                    detailJsx = <>{result}</>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Field{nameJsx}</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'argument-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeArgumentItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.valueType})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'send-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'thumbnail-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Thumnail Manager</_Category>;\r\n            }\r\n            case 'thumbnail-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeThumbnailItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.frame})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_THUMBNAIL}>Thumbnail</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'sample-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Preset Manager</_Category>;\r\n            }\r\n            case 'sample-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSampleItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Preset</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'interface-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Interface</_Category>;\r\n            }\r\n            case 'seedarg-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'seedarg-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedArgItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.min}～{data.max})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'seedsend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'formgrp-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Group Manager</_Category>;\r\n            }\r\n            case 'formgrp-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeFromGrpItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.method})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Group<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n        }\r\n        return <_Category backgroundColor={'#ffffff'}>XXXXX</_Category>;\r\n    }\r\n\r\n    export const getTypeName = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return '';\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return 'Root';\r\n            case 'seed-mng': return 'Seed Manager';\r\n            case 'logic-mng': return 'Logic Manager';\r\n            case 'seed-item': return 'Seed Item';\r\n            case 'logic-item': return 'Logic Item';\r\n            case 'argument-mng': return 'Argument Manager';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'Field Manager';\r\n            case 'field-item': return 'Field Item';\r\n            case 'visual-mng': return 'Visual Manager';\r\n            case 'seedarg-item':\r\n            case 'argument-item': return 'Argument Item';\r\n            case 'extend-mng': return 'Extend Manager';\r\n            case 'behavior-mng': return 'Behavior Manager';\r\n            case 'inherit-mng': return 'Inherit Manager';\r\n            case 'connector': return 'Inherit Connector';\r\n            case 'inherit-logic': return 'Inherit Logic';\r\n            case 'send-mng': return 'Send Manager';\r\n            case 'send-item': return 'Send Item';\r\n            case 'param-item': return 'Param Item';\r\n            case 'condition-item': return 'Condition Item';\r\n            case 'interface-mng': return 'Interface Manager';\r\n            case 'thumbnail-mng': return 'Thumbnail Manager';\r\n            case 'thumbnail-item': return 'Thumbnail Item';\r\n            case 'sample-mng': return 'Preset Manager';\r\n            case 'sample-item': return 'Preset Item';\r\n            case 'seedarg-mng': return 'Argument Manager';\r\n            case 'seedsend-mng': return 'Send';\r\n            case 'formgrp-mng': return 'Group Manager';\r\n            case 'formgrp-item': return 'Group Item';\r\n        }\r\n    }\r\n\r\n    export const getDetailComponent = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return <></>;\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return <></>;\r\n            case 'seed-mng': return <FactDetSeedMng />;\r\n            case 'logic-mng': return <EditorLogicMng />;\r\n            case 'seed-item': return <EditorSeedItem />;\r\n            case 'logic-item': return <EditorLogicItem />;\r\n            case 'argument-mng': return <FactDetArgumentMng />;\r\n            case 'argument-item': return <EditorArgumentItem />;\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return <EditorFieldMng />;\r\n            case 'visual-mng': return <EditorVisualMng />;\r\n            case 'extend-mng': return <EditorExtendMng />;\r\n            case 'behavior-mng': return <FactDetBehiviorMng />;\r\n            case 'inherit-mng': return <EditorInheritConnMng />;\r\n            case 'connector': return <EditorInheritConnector />;\r\n            case 'inherit-logic': return <EditorLogicItem />;\r\n            case 'send-mng': return <EditorSendManager />;\r\n            case 'field-item':\r\n            case 'param-item':\r\n            case 'condition-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': return <EditorParamItem />;\r\n            case 'interface-mng': return <EditorInterfaceManager />;\r\n            case 'sample-mng': return <EditorSampleMng />;\r\n            case 'sample-item': return <EditorSampleItem />;\r\n            case 'thumbnail-mng': return <EditorThumbnailMng />;\r\n            case 'thumbnail-item': return <EditorThumbnailItem />;\r\n            case 'seedarg-mng': return <EditorSeedArgMng />;\r\n            case 'seedarg-item': return <EditorSeedArgItem />;\r\n            case 'seedsend-mng': return <EditorSeedSendMng />;\r\n            case 'formgrp-item': return <EditorFormgrpItem />;\r\n            case 'formgrp-mng': return <EditorFormgrpMng />;\r\n        }\r\n    }\r\n\r\n    export const getChildrenElementNode = (node: TreeUtil.ElementNode): TreeUtil.ElementNode[] => {\r\n        const wrapNode = node.data as WrapElement;\r\n        const get = (listName: string) => {\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const elementNode = TreeUtil.createNode(wrap, node);\r\n                elementNode.children = getChildrenElementNode(elementNode);\r\n                return elementNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n\r\n    export const getChildrenDataNode = (wrapNode: LogicUtil.WrapElement): TreeUtil.DataNode[] => {\r\n        const get = (listName: string) => {\r\n\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const treeNode: TreeUtil.DataNode = {\r\n                    data: wrap,\r\n                    children: getChildrenDataNode(wrap)\r\n                };\r\n                return treeNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as LogicUtil.NodeRoot;\r\n                return [\r\n                    { data: node.seedMng, children: getChildrenDataNode(node.seedMng) },\r\n                    { data: node.logicMng, children: getChildrenDataNode(node.logicMng) }\r\n                ];\r\n            }\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n}\r\n\r\nexport default LogicUtil;\r\n\r\nconst _Category = styled.div<{\r\n    backgroundColor: string;\r\n    isDisable?: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: ${props => props.backgroundColor};\r\n    /* width: 100%; */\r\n    ${props => !(props.isDisable ?? false) ? '' : css`\r\n        text-decoration: line-through;\r\n        color: #00054dac;\r\n    `}\r\n    border-radius: 4px 0 0 4px;\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n    border: solid 1px #000000d2;\r\n`;\r\nconst _Detail = styled.span`\r\n    color: #000b69bd;\r\n`;\r\n\r\nconst _EditableValue = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #0c0c0c;\r\n    color: #ebebeb;\r\n    border-radius: 0 4px 4px 0;\r\n    /* width: 100%; */\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n`;\r\nconst _Span = styled.span<{\r\n    color: string;\r\n}>`\r\n    color: ${props => props.color};\r\n`;\r\nconst _ValueType = styled.span`\r\n    color: #fff9d6b9;\r\n`;\r\nconst _Signature = styled.span`\r\n    color: #ffffff78;\r\n`;\r\nconst _Field = styled.span`\r\n    color: #ff2d2d;\r\n`;","import { assert } from \"console\";\r\nimport { Store } from \"../../../../redux/store/store\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../dialog/confirmDialog\";\r\nimport Particle from \"../../../graphic/particle\";\r\nimport StoryUtil from \"../../launcher/util/storyUtil\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport ParamUtil from \"./paramUtil\";\r\n\r\n\r\nnamespace LogicElementUtil {\r\n\r\n    export const getInnerNode = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode | null => {\r\n\r\n        let cur: TreeUtil.ElementNode | null = node;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const target = cur.children.find(child => (child.data as LogicUtil.WrapElement).type === type);\r\n            if (target == undefined) cur = null;\r\n            else cur = target;\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerNodeFixed = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode => {\r\n        const innerNode = getInnerNode(node, ...typeList);\r\n        if (innerNode == null) throw new Error('[innerNode] is null.');\r\n        return innerNode as TreeUtil.ElementNode;\r\n    }\r\n\r\n    export const getInnerWrap = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement | null => {\r\n\r\n        let cur: LogicUtil.WrapElement | null = wrap;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const listName = getListParamName(cur.type);\r\n            if (listName == null) cur = null;\r\n            else {\r\n                const list = cur.data[`${listName}`] as LogicUtil.WrapElement[];\r\n                const target = list.find(child => child.type === type);\r\n                if (target == undefined) cur = null;\r\n                else cur = target;\r\n            }\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerWrapFixed = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement => {\r\n        const innerWrap = getInnerWrap(wrap, ...typeList);\r\n        if (innerWrap == null) throw new Error('[innerWrap] is null.');\r\n        return innerWrap as LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const addChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode) => {\r\n        return insertChild(wrapElement, node, node.children.length);\r\n    }\r\n\r\n    export const insertChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode, listPos: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, 0, wrapElement);\r\n        const newNode = TreeUtil.createNode(wrapElement, node);\r\n        node.children.splice(listPos, 0, newNode);\r\n        return newNode;\r\n    }\r\n\r\n    export const removeChild = (node: TreeUtil.ElementNode, listPos: number, size: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, size);\r\n        node.children.splice(listPos, size);\r\n    }\r\n\r\n    export const removeChildAll = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].length = 0;\r\n        node.children.length = 0;\r\n    }\r\n\r\n    export const isHead = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[0] == node;\r\n    }\r\n\r\n    export const isTail = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[ownerChildren.length - 1] == node;\r\n    }\r\n\r\n    export const getCurrentIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(parentWrap.type);\r\n        if (listName == null || parentWrap.data == null) return -1;\r\n        const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n        const curIndex = list.findIndex(wrap => wrap == node.data);\r\n        return curIndex;\r\n    }\r\n\r\n    const swapOrder = (node: TreeUtil.ElementNode, offset: number) => {\r\n        if (node.parent == null) return;\r\n        const ownerChildren = node.parent.children;\r\n        const wrap = node.parent.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        const ownDataChildren = wrap.data[`${listName}`] as LogicUtil.WrapElement[];\r\n\r\n        let curNo = getCurrentIndex(node);\r\n        if (curNo === -1) return;\r\n\r\n        // ツリーノードの入れ替え\r\n        const swapNode = ownerChildren[curNo];\r\n        ownerChildren[curNo] = ownerChildren[curNo + offset];\r\n        ownerChildren[curNo + offset] = swapNode;\r\n        // データ要素の入れ替え\r\n        const swapData = ownDataChildren[curNo];\r\n        ownDataChildren[curNo] = ownDataChildren[curNo + offset];\r\n        ownDataChildren[curNo + offset] = swapData;\r\n    }\r\n\r\n    export const getSwapButtons = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        ...dependencyMngNodes: TreeUtil.ElementNode[]\r\n    ) => {\r\n        return getSwapButtonsCallback(node, invalidate, (curIndex, isUpper) => {\r\n            if (dependencyMngNodes.length > 0) {\r\n                dependencyMngNodes.forEach(depNode => {\r\n                    swapOrder(depNode.children[curIndex], isUpper ? -1 : 1);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    export const getSwapButtonsCallback = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        callback: (curIndex: number, isUpper: boolean) => void\r\n    ) => {\r\n        const curIndex = getCurrentIndex(node);\r\n        return <>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↑',\r\n                        isEnable: !LogicElementUtil.isHead(node),\r\n                        callback: () => {\r\n                            swapOrder(node, -1);\r\n                            callback(curIndex, true);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↓',\r\n                        isEnable: !LogicElementUtil.isTail(node),\r\n                        callback: () => {\r\n                            swapOrder(node, 1);\r\n                            callback(curIndex, false);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>;\r\n    }\r\n\r\n    /**\r\n     * 同レベル階層に自身ノードの複製を作成する\r\n     * @param node コピー対象のノード\r\n     * @param newName コピー後の名称\r\n     */\r\n    export const replicateSameLevel = (node: TreeUtil.ElementNode, newName: string) => {\r\n        if (node.parent == null) return;\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const cloneBase = wrap.data;\r\n        const cloneDest = JSON.parse(JSON.stringify((cloneBase)));\r\n\r\n        const newWrap: LogicUtil.WrapElement = {\r\n            type: wrap.type,\r\n            data: cloneDest\r\n        };\r\n        const namable = getNamableProps(wrap.type);\r\n        newWrap.data[namable] = newName;\r\n\r\n        // ロジックマネージャに追加\r\n        const newNode = LogicElementUtil.addChild(newWrap, node.parent);\r\n        // 子要素の展開\r\n        newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n    }\r\n\r\n    export const getReplicateButton = (\r\n        node: TreeUtil.ElementNode,\r\n        isEnable: boolean,\r\n        targetElement: string, store: Store,\r\n        setStore: (store: Store) => void,\r\n        invalidate: () => void\r\n    ): JSX.Element => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        return <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[{\r\n                label: 'Replicate',\r\n                isEnable,\r\n                // isEnable: false,\r\n                callback: () => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={`Replicate this ${targetElement}.`}\r\n                        buttons={[\r\n                            {\r\n                                label: 'Cancel',\r\n                                callback: () => {\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Enter',\r\n                                callback: () => {\r\n                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                    const name = wrap.data[namable] as string;\r\n                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                    // mappingForm();\r\n                                    invalidate();\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }\r\n            }]}\r\n        />;\r\n    }\r\n\r\n    export const getListParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return 'defs';\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            // case 'root':\r\n            case 'logic-item': return 'mngs';\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return 'params';\r\n            case 'inherit-mng': return 'inherits';\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return 'args';\r\n            case 'sample-mng': return 'samples';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'fields';\r\n            case 'thumbnail-mng': return 'items';\r\n            case 'formgrp-mng': return 'defines';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getIdentifyParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'argument-item':\r\n            case 'field-item':\r\n            case 'seed-item':\r\n            case 'thumbnail-item':\r\n            case 'seedarg-item':\r\n            case 'sample-item':\r\n            case 'formgrp-item':\r\n            case 'logic-item': return 'name';\r\n            case 'connector': return 'id';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getNamableProps = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'connector': return 'id';\r\n            case 'seed-item':\r\n            case 'argument-item':\r\n            case 'seedarg-item':\r\n            case 'field-item':\r\n            case 'sample-item':\r\n            case 'thumbnail-item':\r\n            case 'logic-item': return 'name';\r\n        }\r\n        throw new Error('Namable props not found.');\r\n    }\r\n\r\n    export const syncTreeElementFromWrap = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        if (listName == null) return;\r\n        (wrap.data[listName] as any[]).forEach(childWrap => {\r\n            const newNode = TreeUtil.createNode(childWrap, node);\r\n            node.children.push(newNode);\r\n            syncTreeElementFromWrap(newNode);\r\n        });\r\n    }\r\n\r\n    export const createParamWrap = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem): LogicUtil.WrapElement => {\r\n        return { type: type, data: paramDataList };\r\n    }\r\n    export const createParamWrapList = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem[]): LogicUtil.WrapElement[] => {\r\n        return paramDataList.map(data => {\r\n            return { type: type, data: data };\r\n        });\r\n    }\r\n\r\n    export const createVisualParams = (): LogicUtil.WrapElement[] => {\r\n        const type = ParamUtil.VisualParamType;\r\n        return createParamWrapList('param-item', [\r\n            { name: type.RADIUS, formulaItems: ['var'], values: [{ type: 'direct', value: '20' }] },\r\n            { name: type.COLOR_R, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_G, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_B, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_A, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n        ]);\r\n    }\r\n\r\n    export const createBehaviorParams = (): LogicUtil.WrapElement[] => {\r\n        const list: LogicUtil.NodeParamItem[] = [];\r\n        const type = ParamUtil.BehaviorParamType;\r\n        list.push({\r\n            name: type.LIMIT,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '30' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        return createParamWrapList('param-item', list);\r\n    }\r\n\r\n    export const getDefaultLogicMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'visual-mng',\r\n                data: {\r\n                    params: createVisualParams()\r\n                } as LogicUtil.NodeParamManager\r\n            },\r\n            {\r\n                type: 'behavior-mng',\r\n                data: {\r\n                    params: createBehaviorParams()\r\n                } as LogicUtil.NodeParamManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    export const getInitialData = (): LogicUtil.WrapElement => {\r\n        return {\r\n            type: 'root',\r\n            data: {\r\n                seedMng: {\r\n                    type: 'seed-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeSeedManager\r\n                } as LogicUtil.WrapElement,\r\n                logicMng: {\r\n                    type: 'logic-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeLogicManager\r\n                } as LogicUtil.WrapElement\r\n            } as LogicUtil.NodeRoot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 同階層の名前パラメータを持つ要素より、既存の名前一覧を取得する。\r\n     * @param node 現在のノード\r\n     * @returns 同階層の既存の名前一覧\r\n     */\r\n    export const getExistNameList = (node: TreeUtil.ElementNode) => {\r\n        const nameList: string[] = [];\r\n        const curWrap = node.data as LogicUtil.WrapElement;\r\n        const nameParam = getIdentifyParamName(curWrap.type);\r\n        const mngWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listParam = getListParamName(mngWrap.type);\r\n        if (listParam == null || nameParam == null) throw Error('List param or identifiy param not found.');\r\n        const list = mngWrap.data[listParam] as LogicUtil.WrapElement[];\r\n        list.forEach(wrap => {\r\n            if (wrap.data != null && curWrap != wrap) {\r\n                nameList.push(wrap.data[nameParam]);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getLogicNameList = (mng: LogicUtil.NodeLogicManager) => {\r\n        const nameList: string[] = [];\r\n        mng.defs.forEach(logic => {\r\n            if (logic.data != null) {\r\n                nameList.push((logic.data as LogicUtil.NodeLogicItem).name);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getParamNameList = (curLogicOwner: LogicUtil.NodeLogicItem) => {\r\n        const nameList: string[] = [];\r\n\r\n        // システム固有のパラメータ名を取得\r\n        ParamUtil.VisualParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.BehaviorParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.SelfParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ExtendParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.EffectParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ModulateParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.Constants.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n\r\n        // 引数のパラメータ名を取得\r\n        const argMng = curLogicOwner.mngs.find(mng => mng.type === 'argument-mng');\r\n        if (argMng != undefined) {\r\n            const args = (argMng.data as LogicUtil.NodeArgumentManager).args;\r\n            args.forEach(arg => {\r\n                if (arg.data != null) {\r\n                    nameList.push((arg.data as LogicUtil.NodeArgumentItem).name);\r\n                }\r\n            });\r\n        }\r\n        // フィールドのパラメータ名を取得\r\n        const fieldMng = curLogicOwner.mngs.find(mng => mng.type === 'field-mng');\r\n        if (fieldMng != undefined) {\r\n            const fields = (fieldMng.data as LogicUtil.NodeFieldManager).fields;\r\n            fields.forEach(field => {\r\n                if (field.data != null) {\r\n                    nameList.push((field.data as LogicUtil.NodeParamItem).name);\r\n                }\r\n            });\r\n        }\r\n        return nameList;\r\n    }\r\n\r\n    /**\r\n     * 子要素の接頭連番をチェックし、重複しない名称を返す。\r\n     * @param prefix 接頭語\r\n     * @param node 基準となるノード\r\n     */\r\n    export const getNumberingOnPrefixName = (prefix: string, node: TreeUtil.ElementNode) => {\r\n        let num = 0;\r\n        // 接頭番号を取得\r\n        while (true) {\r\n            const check = node.children.find(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                if (wrap.data == null) return false;\r\n                console.log(wrap);\r\n                return wrap.data[getNamableProps(wrap.type)] === `${prefix}${num}`;\r\n            });\r\n            if (check != undefined) num++;\r\n            else break;\r\n        }\r\n        return `${prefix}${num}`;\r\n    }\r\n\r\n    /**\r\n     * パラメータの式で参照されている変数を検索し、\r\n     * 任意の処理（callback）を実行する。\r\n     * @param node 現在のノード\r\n     * @param callback 処理\r\n     */\r\n    export const searchVariableReferInFormula = (node: TreeUtil.ElementNode, callback: Function) => {\r\n\r\n        const mngType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const getLogicItem = () => {\r\n            switch (mngType) {\r\n                case 'field-mng':\r\n                case 'argument-mng': return node.parent?.parent?.data as LogicUtil.WrapElement;\r\n                case 'inhfld-mng': return node.parent?.parent?.parent?.parent?.data as LogicUtil.WrapElement;\r\n            }\r\n        }\r\n        const logicItem = getLogicItem()?.data as LogicUtil.NodeLogicItem;\r\n        if (mngType === 'argument-mng') {\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (fieldMng != undefined) {\r\n                callback((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n        }\r\n        if (mngType !== 'inhfld-mng') {\r\n            const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n            if (visualMng != undefined) {\r\n                callback((visualMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n            const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n            if (behaviorMng != undefined) {\r\n                callback((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n        }\r\n        const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                if (mngType !== 'inhfld-mng') {\r\n                    const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                    // Inherit配下のField要素のチェック\r\n                    if (inhfld != null) {\r\n                        callback((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                    }\r\n                }\r\n                // Extend要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    }\r\n\r\n    export const findSeedWrap = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const root = rootData.data as LogicUtil.NodeRoot;\r\n        const seed = (root.seedMng.data as LogicUtil.NodeSeedManager).defs.find(def => {\r\n            const seedItem = def.data as LogicUtil.NodeSeedItem;\r\n            return seedItem.name === seedId;\r\n        });\r\n        if (seed == undefined) throw new Error();\r\n        return seed;\r\n    }\r\n\r\n    export const doParticleJob = (rootData: LogicUtil.WrapElement, fuse: StoryUtil.Fuse, owner: Particle.Instance[]) => {\r\n        const seedWrap = findSeedWrap(rootData, fuse.seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        const getSendingValueMap = () => {\r\n            const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const valueMap = seedargMng.args.map((wrap, i) => {\r\n                const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                return { name: seedarg.name, value: fuse.values[i] }\r\n            });\r\n\r\n            // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n            return sendParams.map(item => {\r\n                const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                return { name: item.name, value }\r\n            });\r\n        }\r\n\r\n        owner.push(new Particle.Instance(\r\n            PreviewUtil.buildLogicProps(owner, getOrigin(), rootData, getSendingValueMap())\r\n        ));\r\n    }\r\n\r\n    export type SeedProps = {\r\n        seed: LogicUtil.NodeSeedItem;\r\n        logic: LogicUtil.NodeLogicItem;\r\n        seedargList: LogicUtil.NodeSeedArgItem[];\r\n        seedsendList: LogicUtil.NodeParamItem[];\r\n        thumbnailList: LogicUtil.NodeThumbnailItem[];\r\n    }\r\n    export const getSeedProperties = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const seedWrap = findSeedWrap(rootData, seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n        const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        const seedargList = seedargMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n        const seedsendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n        const seedsendList = seedsendMng.params.map(wrap => wrap.data as LogicUtil.NodeParamItem);\r\n        const thumbnailMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'thumbnail-mng').data as LogicUtil.NodeThumnailManager;\r\n        const thumbnailList = thumbnailMng.items.map(wrap => wrap.data as LogicUtil.NodeThumbnailItem);\r\n       \r\n        return {\r\n            seed, logic: getOrigin(), seedargList, seedsendList, thumbnailList\r\n        }\r\n    }\r\n}\r\n\r\nexport default LogicElementUtil;","import Particle from \"../../graphic/particle\";\r\n\r\nexport namespace BuildUtil {\r\n\r\n    export type RunParticleProps = {\r\n        /** フレームの上限（過ぎると停止） */\r\n        limitFrame: number,\r\n        /** パーティクル数の上限（超えると停止） */\r\n        limitParticle: number,\r\n        /** 最低保証フレーム */\r\n        guaranteeFrame?: number,\r\n        /** 1フレーム経過ごとに実行する処理のコールバック */\r\n        doIterate: (frame: number, owner: Particle.Instance[]) => void,\r\n        /** 最終フレーム（ループから抜けた直後）に実行する処理のコールバック */\r\n        doEnd?: (frame: number, owner: Particle.Instance[]) => void\r\n    };\r\n\r\n    export type DivideProps = {\r\n        num: number;\r\n        standbyEvent: () => void;\r\n        countUpEvent: () => void;\r\n    }\r\n    export const run = (props: RunParticleProps) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        const owner: Particle.Instance[] = [];\r\n        let frame = 0;\r\n\r\n        while (true) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frame > props.limitFrame ||\r\n                owner.length > props.limitParticle ||\r\n                frame > minFrame && owner.length === 0\r\n            ) break;\r\n            frame++;\r\n        };\r\n\r\n        if (props.doEnd != undefined) {\r\n            props.doEnd(frame, owner);\r\n        }\r\n    }\r\n\r\n    export const runPaging = (props: RunParticleProps, owner: Particle.Instance[], beginFrame: number, advanceFrame: number) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        // const owner: Particle.Instance[] = [];\r\n\r\n        let frame = beginFrame;\r\n        while (frame - beginFrame < advanceFrame) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frame > props.limitFrame ||\r\n                owner.length > props.limitParticle ||\r\n                frame > minFrame && owner.length === 0\r\n            ) {\r\n                if (props.doEnd != undefined) {\r\n                    props.doEnd(frame, owner);\r\n                }\r\n                break;\r\n            }\r\n            frame++;\r\n        };\r\n    }\r\n}","import { useState, useMemo, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewLogicInputForm = (props: {\r\n    logicWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const argumentList: string[] = useMemo(() => {\r\n        let list: string[] = [];\r\n        const argWrap = LogicElementUtil.getInnerWrap(props.logicWrap, 'argument-mng');\r\n        if (argWrap != null) {\r\n            list = (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                const argItem = arg.data as LogicUtil.NodeArgumentItem;\r\n                return argItem.name;\r\n            });\r\n        }\r\n        return list;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFormList(argumentList.map(arg => {\r\n            return { value: arg, errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        if (formList.find(form => form.errors.length > 0) == undefined) {\r\n            props.setSendingValueMap(() => {\r\n                return formList.map((form, i) => {\r\n                    return { name: argumentList.map(arg => arg)[i], value: Number(form.value) }\r\n                });\r\n            })\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return <>{\r\n        formList.map((form, i) => {\r\n            const argument = argumentList[i];\r\n            return (<FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={argument}\r\n                labelWidth={250}\r\n                jsx={\r\n                    <FormUtil.TextField\r\n                        width={312}\r\n                        isNumber\r\n                        checkable={form}\r\n                        setCheckable={() => {\r\n                            setFormList(formList.slice());\r\n                        }}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            }\r\n                        ]}\r\n                    />\r\n                }\r\n            />);\r\n        })\r\n    }</>\r\n}\r\n\r\nexport default PreviewLogicInputForm;","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../factory/util/logicFormUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewSeedInputForm = (props: {\r\n    seedWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [formgrpList, seedargList, presetList]: [LogicUtil.NodeFromGrpItem[], LogicUtil.NodeSeedArgItem[], LogicUtil.NodeSampleItem[]] = useMemo(() => {\r\n        const formgrpWrap = LogicElementUtil.getInnerWrap(props.seedWrap, 'interface-mng', 'formgrp-mng');\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        if (formgrpWrap != null) {\r\n            formgrpList = (formgrpWrap.data as LogicUtil.NodeFromgrpManager).defines.map(def => def.data as LogicUtil.NodeFromGrpItem);\r\n        }\r\n\r\n        const argWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedarg-mng');\r\n        const argumentList = (argWrap.data as LogicUtil.NodeSeedArgManager).args.map(arg => arg.data as LogicUtil.NodeSeedArgItem);\r\n\r\n        const sampleWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'sample-mng');\r\n        const sampleList = (sampleWrap.data as LogicUtil.NodeSampleManager).samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n        return [formgrpList, argumentList, sampleList];\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        setFormList(seedargList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (formList.find(form => form.errors.length > 0) == undefined) {\r\n            props.setSendingValueMap(() => {\r\n                const valueMap = formList.map((form, i) => {\r\n                    return { name: seedargList.map(arg => arg.name)[i], value: Number(form.value) }\r\n                });\r\n\r\n                // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                const sendMng = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                return sendParams.map(item => {\r\n                    const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                    if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                    return { name: item.name, value }\r\n                });\r\n            });\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"Preset\"\r\n            innerJsx={<FormUtil.Record\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        width={402}\r\n                        checkable={template}\r\n                        setCheckable={setTemplate}\r\n                        headBlank\r\n                        list={presetList.map((sample, i) => {\r\n                            return {\r\n                                labelText: sample.name,\r\n                                value: i.toString()\r\n                            }\r\n                        })}\r\n                    />\r\n                    <FormUtil.ButtonItem\r\n                        button={{\r\n                            label: 'Apply',\r\n                            isEnable: template.value !== '',\r\n                            callback: () => {\r\n                                const selectedIndex = Number(template.value);\r\n                                const values = presetList[selectedIndex].values;\r\n                                values.forEach((value, i) => {\r\n                                    formList[i].value = value.toString();\r\n                                });\r\n                                setFormList(formList.slice());\r\n                            }\r\n                        }}\r\n                    />\r\n                </>}\r\n            />}\r\n        />\r\n        {LogicFormUtil.buildPreviewForms(\r\n            false, seedargList, formgrpList, formList, setFormList\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default PreviewSeedInputForm;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ReactLoading from 'react-loading';\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport PreviewLogicInputForm from \"./inputForm/previewLogicInputForm\";\r\nimport PreviewSeedInputForm from \"./inputForm/previewSeedInputForm\";\r\nimport { BuildUtil } from \"./buildUtil\";\r\n\r\nnamespace PreviewLogicFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        master: LogicUtil.WrapElement;\r\n        rootData: LogicUtil.WrapElement;\r\n        closeButtonAction: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n\r\n        const [sceens, setSceens] = useState<string[]>([]);\r\n        const [frameCnt, setFrameCnt] = useState<number>(-1);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isBuild, setBuild] = useState<boolean>(false);\r\n        const [progress, setProgress] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const [sendingValueMap, setSendingValueMap] = useState<((() => PreviewUtil.ValueMap[]) | null)>(null);\r\n\r\n        const isSeed = props.master.type === 'seed-item';\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n        useEffect(() => {\r\n            if (isBuild) build();\r\n        }, [isBuild]);\r\n\r\n        const build = () => {\r\n            if (sendingValueMap == null) return;\r\n            setCur(0);\r\n            const sceens: string[] = [];\r\n            BuildUtil.run({\r\n                limitFrame: 500,\r\n                limitParticle: 3000,\r\n                doIterate: (frame, owner) => {\r\n                    if (frame === 0) {\r\n                        const getOrigin = () => {\r\n                            if (!isSeed) return props.master.data as LogicUtil.NodeLogicItem;\r\n                            else {\r\n                                const seed = props.master.data as LogicUtil.NodeSeedItem;\r\n                                const root = props.rootData.data as LogicUtil.NodeRoot;\r\n                                const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                                return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                            }\r\n                        }\r\n                        owner.push(new Particle.Instance(\r\n                            PreviewUtil.buildLogicProps(owner, getOrigin(), props.rootData, sendingValueMap as any)\r\n                        ));\r\n                    }\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n\r\n                        // 経過フレーム、要素数の表示\r\n                        ctx.globalAlpha = 1;\r\n                        ctx.font = '16pt Arial';\r\n                        ctx.fillStyle = '#ffffff';\r\n                        ctx.fillText(`${frame}`, 6, 24);\r\n                        ctx.fillStyle = '#ffec5c';\r\n                        ctx.fillText(`${owner.length}`, 6, 44);\r\n\r\n                        // ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    setFrameCnt(frame);\r\n                    setSceens(sceens);\r\n\r\n                    setBuild(false);\r\n                    setTabIndex(1);\r\n                }\r\n            });\r\n        }\r\n\r\n        const isInputOK = sendingValueMap != null;\r\n\r\n        const buildTabJsx = (\r\n            <_Wrap>\r\n                <_Blind isEnable={isBuild}>\r\n                    {/* <ReactLoading type='spinningBubbles' /> */}\r\n                    <_Msg>Now building...</_Msg>\r\n                </_Blind>\r\n                <_FormDiv\r\n                    isSeed={props.master.type === 'seed-item'}\r\n                >\r\n                    {!isSeed ? (\r\n                        <PreviewLogicInputForm\r\n                            logicWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                        />\r\n                    ) : (\r\n                        <PreviewSeedInputForm\r\n                            seedWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                        />\r\n                    )}\r\n                </_FormDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Build',\r\n                            isEnable: isInputOK && !isBuild,\r\n                            callback: () => {\r\n                                setBuild(true);\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    if (tabIndex === 0) {\r\n                        if (isInputOK && e.key === ' ') build();\r\n                    } else {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                            } break;\r\n                            case 'ArrowRight': {\r\n                                if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                            } break;\r\n                            case ' ': {\r\n                                setPlay(!isPlay);\r\n                            } break;\r\n                        }\r\n                    }\r\n                    if (!isPlay && e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }\r\n                }\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Build', enable: true, cont: buildTabJsx },\r\n                            { name: 'Play', enable: frameCnt !== -1, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={props.closeButtonAction}\r\n                >×</_CloseButton>\r\n            </_Frame >\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLogicFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _FormDiv = styled.div<{\r\n    isSeed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 580px;\r\n    background-color: #c5cfd6df;\r\n    ${props => !props.isSeed ? '' : css`\r\n        background-color: #c6d6c5df;\r\n    `}\r\n    overflow-y: auto;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #c5c5c5df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;\r\n\r\n\r\nconst _Blind = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: ${props => !props.isEnable ? 'none;' : 'inline-block;'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000552cd;\r\n    z-index: 99;\r\n`;\r\n\r\nconst _Msg = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    margin: 240px 0 0 110px;\r\n    /* background-color: #26f055cd; */\r\n    color: white;\r\n    font-size: 56px;\r\n    font-weight: 600;\r\n\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\n\r\nnamespace PreviewLauncherFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        sceens: string[];\r\n        frameCnt: number;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const sceens = props.sceens;\r\n        const frameCnt = props.frameCnt;\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                        } break;\r\n                        case 'ArrowRight': {\r\n                            if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                        } break;\r\n                        case ' ': {\r\n                            setPlay(!isPlay);\r\n                        } break;\r\n                    }\r\n                    if (e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }}\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Play', enable: true, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLauncherFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #aed5d8e0;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;","import DataUtil from \"../../utils/dataUtil\";\r\nimport PreviewLogicFrame from \"../create/preview/previewLogicFrame\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport LogicUtil from \"../create/factory/util/logicUtil\";\r\nimport LogicElementUtil from \"../create/factory/util/logicElementUtil\";\r\nimport styled, { css } from \"styled-components\";\r\nimport StoryUtil from \"../create/launcher/util/storyUtil\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport PreviewUtil from \"../create/preview/previewUtil\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport PreviewLauncherFrame from \"../create/preview/previewLauncherFrame\";\r\nimport { BuildUtil } from \"../create/preview/buildUtil\";\r\nimport Particle from \"../graphic/particle\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    seedList: SeedProps[];\r\n}\r\ntype StoryProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    libraryData: LogicUtil.WrapElement;\r\n    scenarioData: StoryUtil.StoryData;\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\ntype StoryPreviewProps = {\r\n    sceens: string[];\r\n    useFrame: number;\r\n}\r\n\r\nexport type PagingField = {\r\n    useFrame: number;\r\n    curFrame: number;\r\n    sceens: string[];\r\n    owner: Particle.Instance[];\r\n}\r\n\r\nconst PROGRESS_VAL = 1;\r\n\r\nconst DirectLinkManager = (props: {\r\n    projectSeq: number;\r\n}) => {\r\n    const [libData, setLibData] = useState<LibProps | null>(null);\r\n    const [storyData, setStoryData] = useState<StoryProps | null>(null);\r\n    const [storyPreviewProps, setStoryPreviewProps] = useState<StoryPreviewProps | null>(null);\r\n    const [buildCache, setBuildCache] = useState<null | PagingField>(null);\r\n\r\n    const [seedSeq, setSeedSeq] = useState(-1);\r\n\r\n    useEffect(() => {\r\n\r\n        findProject(props.projectSeq).then(resList => {\r\n            if (resList.length > 0) {\r\n                const res = resList[0];\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const data = JSON.parse(DataUtil.unZip(res.source));\r\n                // シナリオであるかどうかの判定\r\n                if (!data.hasOwnProperty('scenarioData')) {\r\n                    const rootData = data as LogicUtil.WrapElement;\r\n                    const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                    const seedList: SeedProps[] = seedMng.defs\r\n                        .filter(wrap => {\r\n                            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                            return seed.permit === 'release';\r\n                        })\r\n                        .map(wrap => {\r\n                            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                            const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                            return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                        });\r\n                    setLibData({\r\n                        name, ownerId, lastmod, rootData, seedList\r\n                    });\r\n                } else {\r\n                    const scenarioProps = data as StoryUtil.ScenarioFileProps;\r\n                    setStoryData({\r\n                        name, ownerId, lastmod, libraryData: scenarioProps.libraryData, scenarioData: scenarioProps.scenarioData\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (buildCache == null || storyData == null) return;\r\n\r\n        const fuseList = storyData.scenarioData.fuseList;\r\n        const limitFrame = storyData.scenarioData.limitFrame;\r\n        const limitParticle = storyData.scenarioData.limitParticle;\r\n        const minFrame = fuseList[0].frame;\r\n        const logicData = storyData.libraryData;\r\n        if (buildCache.useFrame === 0) {\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n                    fuseList.some(fuse => {\r\n                        if (fuse.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                        } else if (fuse.frame > frame) return 1;\r\n                    });\r\n                },\r\n                doEnd: (frame) => {\r\n                    buildCache.useFrame = frame;\r\n                }\r\n            });\r\n            setBuildCache({ ...buildCache });\r\n        } else {\r\n\r\n            BuildUtil.runPaging({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    fuseList.some(fuse => {\r\n                        if (fuse.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                        } else if (fuse.frame > frame) return 1;\r\n                    });\r\n\r\n                    buildCache.sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: () => {\r\n                    setStoryPreviewProps({\r\n                        sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                    });\r\n                }\r\n            }, buildCache.owner, buildCache.curFrame, PROGRESS_VAL);\r\n            buildCache.curFrame += PROGRESS_VAL;\r\n            setBuildCache({ ...buildCache });\r\n        }\r\n    }, [buildCache]);\r\n\r\n    /**\r\n     * プレビューオールダイアログを表示する\r\n     */\r\n    const openPreviewAllDialog = () => {\r\n        setBuildCache({\r\n            useFrame: 0,\r\n            curFrame: 0,\r\n            owner: [],\r\n            sceens: []\r\n        });\r\n    }\r\n\r\n    const getJsx = () => {\r\n        let jsx = <></>;\r\n        if (libData != null) {\r\n            if (seedSeq === -1) {\r\n                jsx = <>\r\n                    <_Header>{libData.name}</_Header>\r\n                    {libData.seedList.map((seed, i) => {\r\n                        const seedName = seed.disp ?? seed.name;\r\n                        return (<_Item key={i}\r\n                            onClick={() => {\r\n                                setSeedSeq(i);\r\n                            }}\r\n                        >\r\n                            <_SeedName>{seedName}</_SeedName>\r\n                            <_ArgCnt> [{seed.argCount} arguments]</_ArgCnt>\r\n                        </_Item>);\r\n                    })}\r\n                </>;\r\n            } else {\r\n                jsx = <PreviewLogicFrame.Component\r\n                    master={libData.seedList[seedSeq].master}\r\n                    rootData={libData.rootData}\r\n                    closeButtonAction={() => {\r\n                        setSeedSeq(-1);\r\n                    }}\r\n                />\r\n            }\r\n        } else if (storyData != null) {\r\n            if (storyPreviewProps == null) {\r\n                const getBlindJsx = () => {\r\n                    if (buildCache == null) return <></>;\r\n                    const rate = buildCache.curFrame / buildCache.useFrame * 100;\r\n                    const isStandby = buildCache.useFrame === 0;\r\n                    return (\r\n                        <_Blind>\r\n                            <_ProgressBox><_ProgressVal rate={rate} /></_ProgressBox>\r\n                            <_RateVal isStandby={isStandby}>{isStandby ? 'Calculating...' : `${Math.floor(rate)}%`}</_RateVal>\r\n                        </_Blind>\r\n                    );\r\n                }\r\n                jsx = <>\r\n                    {getBlindJsx()}\r\n                    <_Header>{storyData.name}</_Header>\r\n                    <FormUtil.ButtonRecord align=\"center\" buttons={[\r\n                        {\r\n                            label: 'Build',\r\n                            callback() {\r\n                                openPreviewAllDialog();\r\n                            },\r\n                        }\r\n                    ]} />\r\n                </>;\r\n            } else {\r\n                jsx = <PreviewLauncherFrame.Component\r\n                    sceens={storyPreviewProps.sceens}\r\n                    frameCnt={storyPreviewProps.useFrame}\r\n                />\r\n            }\r\n        }\r\n        return jsx;\r\n    }\r\n\r\n    return getJsx();\r\n}\r\n\r\nexport default DirectLinkManager;\r\n\r\n\r\nconst findProject = async (conteseq: number) => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE seq = ${conteseq}\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #002910c0;\r\n    z-index: 10;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _ProgressBox = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relaltive;\r\n    width: calc(100% - 20px);\r\n    height: 40px;\r\n    margin: 200px 0 0 10px;\r\n    background-color: #ffffff29;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    background-color: #ffffffc1;\r\n`;\r\n\r\nconst _RateVal = styled.div<{\r\n    isStandby: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #0000003b;\r\n\r\n    color: #ffffff;\r\n    ${props => !props.isStandby ? '' : css`\r\n        color: #f50000;\r\n    `}\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background: linear-gradient(to bottom, #00215e, #000000, #00215e);\r\n\r\n    color: #e0e0e0;\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #abc9e6;\r\n`;\r\n\r\nconst _ArgCnt = styled.span<{\r\n}>`\r\n    color: #fbffbf;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport DirectLinkManager from \"./directLinkManager\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\n\r\ntype ScreenBean = {\r\n    adjLeft: number;\r\n    adjTop: number;\r\n    rate: number;\r\n}\r\n\r\n// export const CONTENTS_WIDTH = 576;\r\n// export const CONTENTS_HEIGHT = 1024;\r\n\r\n\r\nexport const CONTENTS_WIDTH = 600;\r\nexport const CONTENTS_HEIGHT = 660;\r\n\r\nconst MobileRoot = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const [isPermit, setPermit] = useState(true);\r\n    const [screen, setScreen] = useState<ScreenBean>({ adjLeft: 0, adjTop: 0, rate: 1 });\r\n    const ref = useRef<null | HTMLDivElement>(null);\r\n\r\n    const projectSeq = DataUtil.getDecryptionedProjectSeq(props.hashKey);\r\n\r\n    const update = () => {\r\n        if (ref.current != null) {\r\n            // const [clientWidth, clientHeight] = [window.innerWidth, window.innerHeight];\r\n\r\n            const rect = ref.current.getBoundingClientRect();\r\n            const [clientWidth, clientHeight] = [rect.width, rect.height];\r\n\r\n            const cw = CONTENTS_WIDTH;\r\n            const ch = CONTENTS_HEIGHT;\r\n\r\n            const isFitSide = clientHeight / ch > clientWidth / cw;\r\n\r\n            const rate = !isFitSide ? clientHeight / ch : clientWidth / cw;\r\n            const adjLeft = !isFitSide ? clientWidth / 2 - (cw * rate / 2) : 0;\r\n            const adjTop = !isFitSide ? 0 : clientHeight / 2 - (ch * rate / 2);\r\n\r\n            setScreen({ adjLeft, adjTop, rate });\r\n        }\r\n    }\r\n\r\n    // window.addEventListener('DOMContentLoaded', () => {\r\n    //     if (!isSmartPhone()) {\r\n    //         window.addEventListener('resize', update);\r\n    //     } else {\r\n    //         window.addEventListener('orientationchange resize', () => {\r\n    //             update();\r\n    //             setPermit(window.orientation === 0);\r\n    //         });\r\n    //     }\r\n    // });\r\n\r\n    // window.onorientationchange = () => {\r\n    //   setOrientation(window.orientation);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        update();\r\n        console.log(navigator.userAgent);\r\n        if (isSmartPhone()) {\r\n            setPermit(window.orientation === 0);\r\n        }\r\n        if (!isSmartPhone()) {\r\n            window.addEventListener('resize', ()=>{\r\n                update();\r\n            });\r\n        } else {\r\n            window.addEventListener('orientationchange resize', () => {\r\n                alert('change');\r\n                update();\r\n                setPermit(window.orientation === 0);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    let jsx = <_Error>Make your smartphone vertical!</_Error>;\r\n    if (isPermit) {\r\n        jsx = (\r\n            <_Contents>\r\n                <DirectLinkManager projectSeq={projectSeq} />\r\n            </_Contents>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap ref={ref}>\r\n            <_Frame left={screen.adjLeft} top={screen.adjTop} rate={screen.rate}>\r\n                {jsx}\r\n            </_Frame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MobileRoot;\r\n\r\nconst isSmartPhone = () => {\r\n    // UserAgentからのスマホ判定\r\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 10px);\r\n  height: calc(100% - 10px);\r\n  background-color: #9eadc9;\r\n  margin: 5px 0 0 5px; */\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst _Frame = styled.div<{\r\n    left: number;\r\n    top: number;\r\n    rate: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: ${props => props.top}px;\r\n  left: ${props => props.left}px;\r\n  transform-origin: top left;\r\n  /* width: 100%;\r\n  height: 100%; */\r\n  transform: scale(${props => props.rate});\r\n`;\r\n\r\nconst _Contents = styled.div`\r\n  display: inline-block;\r\n  width: ${CONTENTS_WIDTH}px;\r\n  height: ${CONTENTS_HEIGHT}px;\r\n  background-color: #929292;\r\n`;\r\n\r\nconst _Error = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #750000;\r\n    color: white;\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\n\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport Particle from \"../../../graphic/particle\";\r\nimport StoryUtil from \"../util/storyUtil\";\r\nimport { BuildUtil } from \"../../preview/buildUtil\";\r\n\r\nconst StoryFuseAnalysis = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [divide, setDivide] = useState<FormUtil.CheckableValue>({ value: '20', errors: [] });\r\n    const [peak, setPeak] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n    const [total, setTotal] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n\r\n    const [countList, setCountList] = useState<number[]>([]);\r\n\r\n    const scenarioData = store.storyData as StoryUtil.StoryData;\r\n    const limitFrame = scenarioData.limitFrame;\r\n    const limitParticle = scenarioData.limitParticle;\r\n    const defList = scenarioData.fuseList;\r\n\r\n    const logicData = store.libraryData as LogicUtil.WrapElement;\r\n\r\n    const execute = () => {\r\n        const minFrame = defList[0].frame;\r\n        const divRate = 1 / Number(divide.value);\r\n        const countList: number[] = [];\r\n        let peak = 0;\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            guaranteeFrame: minFrame,\r\n            doIterate: (frame, owner) => {\r\n                const def = defList.find(def => def.frame === frame);\r\n                if (def != undefined) {\r\n                    const seedWrap = LogicElementUtil.findSeedWrap(logicData, def.seedId);\r\n                    const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n                    const getOrigin = () => {\r\n                        const root = logicData.data as LogicUtil.NodeRoot;\r\n                        const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                        return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                    }\r\n                    const getSendingValueMap = () => {\r\n                        const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n                        const valueMap = seedargMng.args.map((wrap, i) => {\r\n                            const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                            return { name: seedarg.name, value: def.values[i] }\r\n                        });\r\n\r\n                        // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                        const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                        return sendParams.map(item => {\r\n                            const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                            if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                            return { name: item.name, value }\r\n                        });\r\n                    }\r\n\r\n                    owner.push(new Particle.Instance(\r\n                        PreviewUtil.buildLogicProps(owner, getOrigin(), logicData, getSendingValueMap())\r\n                    ));\r\n                }\r\n\r\n                const pastRate = frame / limitFrame;\r\n                const needPoint = (countList.length + 1);\r\n                const curPoint = pastRate / divRate;\r\n                if (curPoint >= needPoint) {\r\n                    countList.push(owner.length);\r\n                }\r\n\r\n                if (owner.length > peak) peak = owner.length;\r\n            },\r\n            doEnd: (frame) => {\r\n                setTotal({ ...total, value: frame.toString() })\r\n            }\r\n        });\r\n        setPeak({ ...total, value: peak.toString() })\r\n        setCountList(countList);\r\n        // console.log(countList);\r\n    };\r\n\r\n    const itemJsxList = useMemo(() => {\r\n        const divRate = 1 / Number(divide.value);\r\n        const rateHeight = divRate / 1;\r\n        return countList.map((count, i) => {\r\n            const rate = count / limitParticle;\r\n            return (\r\n                <_AnalisisItem key={i}\r\n                    rate={rate * 100}\r\n                    height={rateHeight * 100}\r\n                />\r\n            );\r\n        });\r\n    }, [countList]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <FormUtil.BorderPanel\r\n                title=\"Property\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Divide\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isNumber\r\n                                checkable={divide}\r\n                                setCheckable={setDivide}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 5, 200),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Analysis',\r\n                                isEnable: divide.errors.length === 0 && defList.length > 0,\r\n                                callback: execute\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Result\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Peak\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={150}\r\n                                isNumber\r\n                                checkable={peak}\r\n                                isReadOnly\r\n                                setCheckable={setPeak}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"End frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={150}\r\n                                isNumber\r\n                                checkable={total}\r\n                                isReadOnly\r\n                                setCheckable={setTotal}\r\n                            />\r\n                        }\r\n                    />\r\n                    <_AnalisisDiv>\r\n                        {itemJsxList}\r\n                    </_AnalisisDiv>\r\n                </>}\r\n            />\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default StoryFuseAnalysis;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _AnalisisDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #000000d3;\r\n    width: calc(100% - 16px);\r\n    height: 500px;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _AnalisisItem = styled.div<{\r\n    rate: number;\r\n    height: number;\r\n}>`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #ededed77; */\r\n    background: linear-gradient(to bottom, #d1ceda, #b3aec2, #d1ceda);\r\n    width: ${props => props.rate}%;\r\n    height: calc(${props => props.height}% - 1px);\r\n    margin: 1px 0 0 0;\r\n    /* height: 20px; */\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport LogicFormUtil from \"../../factory/util/logicFormUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport StoryUtil from \"../util/storyUtil\";\r\nimport { FuseBean } from \"../storyTab\";\r\n\r\n\r\nconst StoryProperty = (props: {\r\n    newFrame: FormUtil.CheckableValue;\r\n    setNewFrame: (newFrame: FormUtil.CheckableValue) => void;\r\n    defBean: StoryUtil.Fuse;\r\n    seedList: FuseBean[];\r\n    isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: (frame: number, seedId: string, values: number[]) => void;\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const scenarioData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const [seed, setSeed] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const newFrame = props.newFrame;\r\n    const setNewFrame = props.setNewFrame;\r\n    const isInputOK = seed.errors.length === 0 && newFrame.errors.length === 0 && formList.find(form => form.errors.length > 0) == undefined;\r\n\r\n\r\n    const mapping = () => {\r\n        setNewFrame({ ...newFrame, value: props.defBean.frame.toString() });\r\n        setSeed({ ...seed, value: props.defBean.seedId.toString() });\r\n        setFormList(props.defBean.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.defBean == undefined) return;\r\n        if (props.defBean.seedId === '') {\r\n            setNewFrame({ ...newFrame, value: '' });\r\n            setSeed({ ...seed, value: '' });\r\n            setFormList([]);\r\n        } else {\r\n            mapping();\r\n        }\r\n    }, [props.defBean]);\r\n\r\n    const initFormList = (seedId: string) => {\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seedId;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n        }\r\n        setFormList(argumentList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }\r\n\r\n    const propertiesFormJsx = useMemo(() => {\r\n        if (seed.value === '') return <></>;\r\n\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        let presetList: LogicUtil.NodeSampleItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seed.value;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n            formgrpList = activeSeed.formgrps;\r\n            presetList = activeSeed.presets;\r\n        }\r\n        return (<>\r\n            <FormUtil.BorderPanel\r\n                title=\"Preset\"\r\n                innerJsx={<FormUtil.Record\r\n                    jsx={<>\r\n                        <FormUtil.Combobox\r\n                            width={250}\r\n                            checkable={template}\r\n                            setCheckable={setTemplate}\r\n                            headBlank\r\n                            list={presetList.map((sample, i) => {\r\n                                return {\r\n                                    labelText: sample.name,\r\n                                    value: i.toString()\r\n                                }\r\n                            })}\r\n                            isReadOnly={!props.isModify}\r\n                        />\r\n                        <FormUtil.ButtonItem\r\n                            button={{\r\n                                label: 'Apply',\r\n                                isEnable: template.value !== '',\r\n                                callback: () => {\r\n                                    const selectedIndex = Number(template.value);\r\n                                    const values = presetList[selectedIndex].values;\r\n                                    values.forEach((value, i) => {\r\n                                        formList[i].value = value.toString();\r\n                                    });\r\n                                    setFormList(formList.slice());\r\n                                }\r\n                            }}\r\n                        />\r\n                    </>}\r\n                />}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Properties\"\r\n                innerJsx={<>{\r\n                    LogicFormUtil.buildPreviewForms(\r\n                        !props.isModify, argumentList, formgrpList, formList, setFormList\r\n                    )\r\n                }</>}\r\n            />\r\n        </>);\r\n    }, [template, formList, props.isModify]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: props.isModify,\r\n                        callback: () => {\r\n                            props.cancelAction();\r\n                            setTemplate({ ...template, value: '' });\r\n                            mapping();\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !props.isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !props.isModify || isInputOK,\r\n                        callback: () => {\r\n                            props.modifyAction(\r\n                                Number(newFrame.value),\r\n                                seed.value,\r\n                                formList.map(form => Number(form.value))\r\n                            );\r\n                            setTemplate({ ...template, value: '' });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Base\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isReadOnly={!props.isModify}\r\n                                isNumber\r\n                                checkable={newFrame}\r\n                                setCheckable={setNewFrame}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 0, scenarioData.limitFrame),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Seed\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                checkable={seed}\r\n                                setCheckable={(checkable) => {\r\n                                    initFormList(checkable.value);\r\n                                    setSeed({ ...checkable });\r\n                                }}\r\n                                list={props.seedList.map(seed => {\r\n                                    return { value: seed.name, labelText: seed.disp ?? seed.name }\r\n                                })}\r\n                                headBlank\r\n                                width={250}\r\n                                isReadOnly={!props.isModify}\r\n                                validates={\r\n                                    [\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n            {propertiesFormJsx}\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default StoryProperty;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #dbebd6;\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport StoryUtil from \"../util/storyUtil\";\r\n\r\n\r\nconst StoryEnvironment = (props: {\r\n    isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: () => void;\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [particle, setParticle] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const data = store.storyData as StoryUtil.StoryData;\r\n\r\n    const mapping = () => {\r\n        setFrame({ ...frame, value: data.limitFrame.toString() });\r\n        setParticle({ ...particle, value: data.limitParticle.toString() });\r\n    }\r\n    useEffect(() => {\r\n        mapping();\r\n    }, []);\r\n\r\n    const isInputOK = particle.errors.length === 0 && frame.errors.length === 0;\r\n\r\n    const maxLimit = data.fuseList.map(def => def.frame).reduce((prev, cur) => {\r\n        return prev > cur ? prev : cur;\r\n    }, 0);\r\n\r\n    return (<_Wrap>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Cancel',\r\n                    isEnable: props.isModify,\r\n                    callback: () => {\r\n                        mapping();\r\n                        props.cancelAction();\r\n                    }\r\n                },\r\n                {\r\n                    label: !props.isModify ? 'Modify' : 'Regist',\r\n                    isEnable: !props.isModify || isInputOK,\r\n                    callback: () => {\r\n                        data.limitFrame = Number(frame.value);\r\n                        data.limitParticle = Number(particle.value);\r\n                        setStore({ ...store });\r\n                        props.modifyAction();\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Limit\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!props.isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkNumberRange(value, maxLimit, 1000),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Particle\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!props.isModify}\r\n                            isNumber\r\n                            checkable={particle}\r\n                            setCheckable={setParticle}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkNumberRange(value, 100, 5000),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </_Wrap>)\r\n}\r\n\r\nexport default StoryEnvironment;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import { useContext, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { JsxEmit } from \"typescript\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport { FuseBean } from \"./storyTab\";\r\nimport StoryUtil from \"./util/storyUtil\";\r\n\r\nconst ITEM_WIDTH = 10;\r\nconst DIV_CNT = 5;\r\n\r\nconst TimelineFrame = (props: {\r\n    newFrameValue: number;\r\n    setNewFrameValue: (num: number) => void;\r\n    isModify: boolean;\r\n    focus: number;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const scenarioData = store.storyData as StoryUtil.StoryData;\r\n    const fuseList = scenarioData.fuseList;\r\n    const cacheList = store.scenarioCacheList;\r\n    const limitFrame = scenarioData.limitFrame;\r\n\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const fusePosJsxList = useMemo(() => {\r\n        if(cacheList.length !== fuseList.length) return [];\r\n        const newFrameRate = props.newFrameValue / limitFrame;\r\n        return fuseList.map((fuse, i) => {\r\n            const rate = props.isModify && props.focus === i ? newFrameRate : fuse.frame / limitFrame;\r\n            const x = rate * 100;\r\n            const y = 5 + i * (ITEM_WIDTH + 3);\r\n            const cache = store.scenarioCacheList.find(cache => cache.seq === fuse.seq) as StoryUtil.Cache;\r\n            const sus = cache.useFrame / limitFrame * 100;\r\n            return (<div key={i}>\r\n                {props.isModify && props.focus === i ? (\r\n                    <_Line x={x} />\r\n                ) : <></>}\r\n                <_Item\r\n                    x={x} y={y}\r\n                    isFocus={i === props.focus}\r\n                />\r\n                <_Sustain\r\n                    x={x}\r\n                    y={y}\r\n                    sus={sus}\r\n                />\r\n            </div>);\r\n        });\r\n    }, [limitFrame, props.focus, fuseList, props.isModify, props.newFrameValue, cacheList]);\r\n\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i < DIV_CNT + 1; i++) {\r\n            const rate = i / DIV_CNT;\r\n            const value = Math.floor(limitFrame * rate);\r\n            jsxList.push(\r\n                <_Memori\r\n                    key={i}\r\n                    x={rate * 100}\r\n                >{value}</_Memori>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [limitFrame]);\r\n\r\n    return (<>\r\n        <_MeasureDiv>\r\n            {memoriJsxList}\r\n        </_MeasureDiv>\r\n        <_Wrap\r\n            ref={ref}\r\n            isModify={props.isModify}\r\n            onClick={(e) => {\r\n                if (!props.isModify) return;\r\n                if (ref != null) {\r\n                    const dom = ref.current as HTMLDivElement;\r\n                    const rect = dom.getBoundingClientRect();\r\n                    const pos = e.clientX - rect.x;\r\n                    const rate = pos / rect.width;\r\n                    const newFrame = Math.floor(limitFrame * rate);\r\n                    props.setNewFrameValue(newFrame);\r\n                }\r\n            }}>\r\n            {fusePosJsxList}\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default TimelineFrame;\r\n\r\nconst MEASURE_WIDTH = 40;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #f2d9341a;\r\n    /* border-bottom: 3px solid #fff; */\r\n    box-sizing: border-box;\r\n    width: calc(100% - 36px);\r\n    height: ${MEASURE_WIDTH}px;\r\n    margin: 2px 0 0 18px;\r\n`;\r\nconst _Memori = styled.div<{\r\n    x: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* background-color: #ffffff31; */\r\n    width: 30px;\r\n    height: 20px;\r\n    left: calc(${props => props.x}% - 18px);\r\n    bottom: 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Wrap = styled.div<{\r\n    isModify: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b3d0b937;\r\n    /* border: 1px solid #ffffff4c; */\r\n    ${props => !props.isModify ? '' : css`\r\n        background-color: #ff000049;\r\n    `}\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 36px);\r\n    height: calc(100% - ${MEASURE_WIDTH + 8}px);\r\n    margin: 2px 0 0 18px;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #ffffff8d;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #ffb222;\r\n    `}\r\n    /* border: solid 1px #000000; */\r\n    border-radius: ${ITEM_WIDTH}px;\r\n    width: ${ITEM_WIDTH}px;\r\n    height: ${ITEM_WIDTH}px;\r\n    left: calc(${props => props.x}% - ${ITEM_WIDTH / 2}px);\r\n    top: ${props => props.y}px;\r\n`;\r\nconst _Sustain = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    sus: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #bfffb324;\r\n    /* border: solid 1px #000000; */\r\n    /* border-radius: ${ITEM_WIDTH}px; */\r\n    width: ${props => props.sus}%;\r\n    height: ${ITEM_WIDTH / 2}px;\r\n    left: calc(${props => props.x}%);\r\n    top: calc(${props => props.y}px + ${ITEM_WIDTH / 4}px);\r\n`;\r\nconst _Line = styled.div<{\r\n    x: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #ff0000f0;\r\n    left: ${props => props.x}%;\r\n    top: 0;\r\n    width: 1px;\r\n    height: 100%;\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryFuseAnalysis from \"./tab/storyFuseAnalysis\";\r\nimport StoryProperty from \"./tab/storyProperty\";\r\nimport StoryEnvironment from \"./tab/storyEnvironment\";\r\nimport TimelineFrame from \"./timelineFrame\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport PreviewUtil from \"../preview/previewUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport PreviewLauncherFrame from \"../preview/previewLauncherFrame\";\r\nimport StoryUtil from \"./util/storyUtil\";\r\nimport { BuildUtil } from \"../preview/buildUtil\";\r\n\r\nexport type FuseBean = {\r\n    name: string;\r\n    disp?: string;\r\n    args: LogicUtil.NodeSeedArgItem[];\r\n    formgrps: LogicUtil.NodeFromGrpItem[];\r\n    presets: LogicUtil.NodeSampleItem[];\r\n};\r\n\r\nconst StoryTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const scenarioData = store.storyData as StoryUtil.StoryData;\r\n    const limitFrame = scenarioData.limitFrame;\r\n    const limitParticle = scenarioData.limitParticle;\r\n\r\n    const [newFrame, setNewFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [defList, setDefList] = useState<LaunchDef[]>([]);\r\n    const [isFuseEdit, setFuseEdit] = useState<boolean>(false);\r\n    const [isEnvEdit, setEnvEdit] = useState<boolean>(false);\r\n    const [tabActiveIndex, setTabActiveIndex] = useState<number>(0);\r\n    const [focus, setFocus] = useState<number>(-1);\r\n\r\n    const fuseList = scenarioData.fuseList;\r\n\r\n    const setFuseList = (fuseList: StoryUtil.Fuse[]) => {\r\n        scenarioData.fuseList = fuseList;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const seedList: FuseBean[] = useMemo(() => {\r\n        if (store.libraryData == null) return [];\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        const seedWrapList = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        return seedWrapList.map(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n\r\n            // 引数リストを取得\r\n            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const args = argMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n\r\n            // フォームグループリストを取得\r\n            const groupMng = LogicElementUtil.getInnerWrap(wrap, 'interface-mng', 'formgrp-mng');\r\n            let formgrps: LogicUtil.NodeFromGrpItem[] = [];\r\n            if (groupMng != null) {\r\n                formgrps = (groupMng.data as LogicUtil.NodeFromgrpManager).defines.map(wrap => wrap.data as LogicUtil.NodeFromGrpItem);\r\n            }\r\n\r\n            // プリセットリストを取得\r\n            const sampleMng = LogicElementUtil.getInnerWrap(wrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n            const presets = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n            return {\r\n                name: seed.name,\r\n                disp: seed.disp,\r\n                args, formgrps, presets\r\n            }\r\n        });\r\n    }, [store.libraryData]);\r\n\r\n    useEffect(() => {\r\n        if (scenarioData.fuseList.length > 0) {\r\n            const scenarioCacheList: StoryUtil.Cache[] = [];\r\n            scenarioData.fuseList.forEach((fuse) => {\r\n                const newCache: StoryUtil.Cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n                updateCache(fuse, newCache);\r\n                scenarioCacheList.push(newCache);\r\n            });\r\n            store.scenarioCacheList = scenarioCacheList;\r\n            setStore({ ...store });\r\n        }\r\n    }, [scenarioData]);\r\n\r\n    const createSeq = () => {\r\n        return fuseList\r\n            .map(def => def.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    const add = () => {\r\n        const seq = createSeq();\r\n        fuseList.push({ seq, frame: 0, seedId: '', values: [] });\r\n        setFuseList(fuseList.slice());\r\n        setFocus(fuseList.length - 1);\r\n        store.scenarioCacheList.push({ seq, thumbList: [], useFrame: 0 });\r\n        setTabActiveIndex(2);\r\n        setFuseEdit(true);\r\n    }\r\n\r\n    const fuseJsxList = useMemo(() => {\r\n        return fuseList.map((fuse, i) => {\r\n\r\n            const cache = store.scenarioCacheList.find(cache => cache.seq === fuse.seq);\r\n\r\n            let thumbJsx: JSX.Element[] = [];\r\n            if (cache != undefined) {\r\n                thumbJsx = cache.thumbList.slice(0, 3).map((thumb, j) => {\r\n                    const imgJsx = thumb == undefined ? <></> : <_IMG src={thumb.url} />;\r\n                    return (\r\n                        <_SampleDiv key={j}>-\r\n                            <_SampleName>{thumb.name}</_SampleName>\r\n                            <_CanvasDiv>\r\n                                {imgJsx}\r\n                            </_CanvasDiv>\r\n                        </_SampleDiv>\r\n                    );\r\n                });\r\n            };\r\n            return (\r\n                <_ItemDiv key={i}\r\n                    isEnable={!isFuseEdit || focus === i}\r\n                >\r\n                    <_ItemFrame isFocus={i === focus}\r\n                        onClick={() => {\r\n                            setFocus(i);\r\n                        }}\r\n                    >\r\n                        {fuse.seedId === '' ? (\r\n                            <_PropRecord>Creating...</_PropRecord>\r\n                        ) : (<>\r\n                            <_FrameRecord>{fuse.frame}</_FrameRecord>\r\n                            {/* <_SeedRecord>{def.seedName}: {def.seq}</_SeedRecord> */}\r\n                            <_SeedRecord>{fuse.seedId}</_SeedRecord>\r\n                            <_ThumbFrame>\r\n                                {thumbJsx}\r\n                            </_ThumbFrame>\r\n                            {fuse.values.map((val, j) => {\r\n                                const seedBean = seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n                                const name = seedBean.args[j].name;\r\n                                return (\r\n                                    <_PropRecord key={j}><_Title>{name}: </_Title>{val}</_PropRecord>\r\n                                );\r\n                            })}\r\n                        </>)}\r\n                    </_ItemFrame>\r\n                </_ItemDiv>\r\n            );\r\n        });\r\n    }, [fuseList, focus, isFuseEdit, store.scenarioCacheList]);\r\n\r\n    /**\r\n     * プレビューオールダイアログを表示する\r\n     */\r\n    const openPreviewAllDialog = () => {\r\n        const minFrame = fuseList[0].frame;\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        const sceens: string[] = [];\r\n        let useFrame: number = 0;\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            guaranteeFrame: minFrame,\r\n            doIterate: (frame, owner) => {\r\n\r\n                fuseList.some(def => {\r\n                    if (def.frame === frame) {\r\n                        LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                    } else if (def.frame > frame) return 1;\r\n                });\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                }));\r\n            },\r\n            doEnd: (frame) => {\r\n                useFrame = frame;\r\n            }\r\n        });\r\n        store.system.dialog = (\r\n            <PreviewLauncherFrame.Component\r\n                sceens={sceens}\r\n                frameCnt={useFrame}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * プレビューソロダイアログを表示する\r\n     */\r\n    const openPreviewSoloDialog = () => {\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        const sceens: string[] = [];\r\n        let useFrame: number = 0;\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            doIterate: (frame, owner) => {\r\n\r\n                const def = fuseList[focus];\r\n                if (frame === 0) {\r\n                    LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                }\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                }));\r\n            },\r\n            doEnd: (frame) => {\r\n                useFrame = frame;\r\n            }\r\n        });\r\n        store.system.dialog = (\r\n            <PreviewLauncherFrame.Component\r\n                sceens={sceens}\r\n                frameCnt={useFrame}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const updateCache = (fuse: StoryUtil.Fuse, cache: StoryUtil.Cache) => {\r\n\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        cache.thumbList = [];\r\n        cache.useFrame = 0;\r\n        const seedProps = LogicElementUtil.getSeedProperties(logicData, fuse.seedId);\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            doIterate: (frame, owner) => {\r\n                if (frame === 0) {\r\n                    LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                }\r\n\r\n                const thumb = seedProps.thumbnailList.find(thumb => thumb.frame === frame);\r\n                if (thumb != undefined) {\r\n                    const url = CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    });\r\n                    cache.thumbList.push({ name: thumb.name, url });\r\n                }\r\n            },\r\n            doEnd: (frame) => {\r\n                cache.useFrame = frame;\r\n            }\r\n        });\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const isCreate = fuseList.length === 0 ? false : fuseList[fuseList.length - 1].seedId === '';\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n        >\r\n            <_ListDiv>\r\n                <_ListHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview All',\r\n                                isEnable: !isFuseEdit,\r\n                                callback: openPreviewAllDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_ListHead>\r\n                <_ListHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Add',\r\n                                isEnable: !isFuseEdit,\r\n                                callback: add\r\n                            },\r\n                            {\r\n                                label: 'Delete',\r\n                                isEnable: !isFuseEdit && focus != -1,\r\n                                callback: () => {\r\n                                    fuseList.splice(focus, 1);\r\n                                    setFuseList(fuseList.slice());\r\n                                    if (focus > 0) {\r\n                                        setFocus(focus - 1);\r\n                                    } else if (focus === 0 && fuseList.length === 0) {\r\n                                        setFocus(-1);\r\n                                        setTabActiveIndex(0);\r\n                                    }\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Replicate',\r\n                                isEnable: !isFuseEdit && focus != -1,\r\n                                callback: () => {\r\n                                    const cloneFuse = JSON.parse(JSON.stringify(fuseList[focus])) as StoryUtil.Fuse;\r\n                                    const newSeq = createSeq();\r\n                                    cloneFuse.seq = newSeq;\r\n                                    fuseList.splice(focus, 0, cloneFuse);\r\n                                    setFuseList(fuseList.slice());\r\n                                    setFocus(focus + 1);\r\n\r\n                                    // const baseCache = store.launchCacheList.find(cache => cache.seq === defList[focus].seq) as Cache;\r\n                                    // console.log(baseCache);\r\n                                    // const cloneCache = JSON.parse(JSON.stringify(baseCache)) as Cache;\r\n                                    // cloneCache.seq = newSeq;\r\n                                    const newCache: StoryUtil.Cache = { seq: newSeq, thumbList: [], useFrame: 0 };\r\n                                    updateCache(cloneFuse, newCache);\r\n                                    store.scenarioCacheList.push(newCache);\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Preview Solo',\r\n                                isEnable: !isFuseEdit && focus != -1,\r\n                                callback: openPreviewSoloDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_ListHead>\r\n                <_ListBody>\r\n                    <_Timeline><TimelineFrame\r\n                        newFrameValue={Number(newFrame.value)}\r\n                        setNewFrameValue={(num: number) => {\r\n                            setNewFrame({ ...newFrame, value: num.toString() })\r\n                        }}\r\n                        isModify={isFuseEdit}\r\n                        focus={focus}\r\n                        seedList={seedList}\r\n                    /></_Timeline>\r\n                    <_ListMain>\r\n                        {fuseJsxList}\r\n                    </_ListMain>\r\n                </_ListBody>\r\n            </_ListDiv>\r\n            <_RightDiv>\r\n                <_RightInner>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            {\r\n                                name: 'Environment', enable: !isFuseEdit, cont: <StoryEnvironment\r\n                                    isModify={isEnvEdit}\r\n                                    cancelAction={() => {\r\n                                        setEnvEdit(false);\r\n                                    }}\r\n                                    modifyAction={() => {\r\n                                        if (!isEnvEdit) {\r\n                                            setEnvEdit(true);\r\n                                        } else {\r\n                                            setEnvEdit(false);\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            },\r\n                            { name: 'Analysis', enable: !isFuseEdit && !isEnvEdit, cont: <StoryFuseAnalysis /> },\r\n                            {\r\n                                name: 'Property', enable: !isEnvEdit && focus != -1, cont: <StoryProperty\r\n                                    newFrame={newFrame}\r\n                                    setNewFrame={setNewFrame}\r\n                                    defBean={fuseList[focus]}\r\n                                    seedList={seedList}\r\n                                    isModify={isFuseEdit}\r\n                                    cancelAction={() => {\r\n                                        setFuseEdit(false);\r\n                                        if (isCreate) {\r\n                                            fuseList.splice(fuseList.length - 1, 1);\r\n                                            setFuseList(fuseList.slice());\r\n                                            setFocus(focus - 1);\r\n                                            if (fuseList.length === 0) {\r\n                                                setTabActiveIndex(0);\r\n                                            }\r\n                                        }\r\n                                    }}\r\n                                    modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                        if (!isFuseEdit) {\r\n                                            setFuseEdit(true);\r\n                                        } else {\r\n                                            const fuse = fuseList[focus];\r\n                                            fuse.frame = frame;\r\n                                            fuse.seedId = seedId;\r\n                                            fuse.values = values;\r\n                                            const seq = fuse.seq;\r\n                                            const cache = store.scenarioCacheList.find(cache => cache.seq === seq) as StoryUtil.Cache;\r\n                                            updateCache(fuse, cache);\r\n                                            fuseList.sort((a, b) => {\r\n                                                return a.frame - b.frame;\r\n                                            });\r\n                                            setFuseList(fuseList.slice());\r\n                                            setFocus(fuseList.findIndex(def => def.seq === seq));\r\n                                            setFuseEdit(false);\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            }\r\n                        ]}\r\n                        selectTabIndex={setTabActiveIndex}\r\n                        activeNo={tabActiveIndex}\r\n                    />\r\n                </_RightInner>\r\n            </_RightDiv>\r\n            {/* <_Blind isVisible={isBackingWnd}>\r\n                    <_Contents>{!isBackingWnd ? <></> : <BackingEditorFrame />}</_Contents>\r\n                </_Blind> */}\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default StoryTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #1e1c22;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _ListDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #653fd6; */\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst LIST_HEAD = 40;\r\nconst TIMELINE_WIDTH = 240;\r\n\r\nconst _ListHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d8;\r\n    width: 100%;\r\n    height: ${LIST_HEAD}px;\r\n`;\r\n\r\nconst _ListBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: calc(100% - ${LIST_HEAD * 2}px);\r\n`;\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #00071b;\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: ${TIMELINE_WIDTH}px;\r\n`;\r\nconst _ListMain = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #c551b6; */\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: calc(100% - ${TIMELINE_WIDTH}px);\r\n    overflow-x: auto;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _RightDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c1c0c4;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\nconst _RightInner = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n`;\r\n\r\nconst _TabContWrap = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 630px;\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    /* opacity: 0.9; */\r\n    overflow: hidden;\r\n`;\r\n\r\n\r\nconst _ItemDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    background: linear-gradient(to right, #3a383d, #8d8999, #3a383d);\r\n    vertical-align: top;\r\n    width: 220px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n    background: linear-gradient(to right, #66626b, #b7b2c7, #66626b);\r\n    }\r\n`;\r\n\r\nconst _ItemFrame = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #8997bd29;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #d7eb7d83;\r\n    `}\r\n    border: 1px solid #2c3577;\r\n    border-radius: 2px;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _PropRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    /* margin-top: 1px; */\r\n    height: 24px;\r\n    /* background: linear-gradient(to bottom, #aaaaaa89, #e1e1e18a, #aaaaaa89); */\r\n    /* font-size: 20px; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #555555;\r\n    font-style: italic;\r\n    line-height: 22px;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Title = styled.span`\r\n    color: #f00;\r\n`;\r\n\r\n\r\nconst _FrameRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    height: 35px;\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    color: #132693;\r\n    font-style: italic;\r\n    line-height: 34px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\nconst _SeedRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    height: 35px;\r\n    font-size: 26px;\r\n    font-style: italic;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    line-height: 34px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ThumbFrame = styled.div<{}>`\r\n    display: inline-block;\r\n    /* background-color: #4b09ff; */\r\n    width: 100%;\r\n`;\r\nconst WND_SIZE = 65;\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport assert from \"assert\";\r\n\r\nnamespace NameDefDialog {\r\n\r\n    export const Component = (props: {\r\n        targetSeq: number,\r\n        type?: ProjectType,\r\n        source?: string,\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const width = 500;\r\n        const height = 150;\r\n\r\n        const isCreate = props.targetSeq === -1;\r\n        const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n        const getDefaultName = () => {\r\n            return props.targetSeq === -1 ? '' : (projects.find(p => p.seq === props.targetSeq) as StoreCloud.Project).name;\r\n        }\r\n\r\n        useEffect(() => {\r\n            name.value = getDefaultName();\r\n            setName({ ...name });\r\n        }, []);\r\n\r\n        const [existNames] = useMemo(() => {\r\n            return [\r\n                projects.map(item => item.name)\r\n            ];\r\n        }, []);\r\n\r\n        const registCreate = () => {\r\n            if(props.type == undefined || props.source == undefined) throw assert;\r\n            const result = findProjectMaxSeq();\r\n            result.then((maxSeq) => {\r\n                const newProject: StoreCloud.Project = {\r\n                    seq: Number(maxSeq + 1),\r\n                    name: name.value,\r\n                    type: props.type as ProjectType,\r\n                    source: props.source as string,\r\n                    lastmod: ''\r\n                };\r\n                projects.push(newProject);\r\n                insertProject(store.system.user?.seq as number, newProject).then(() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            });\r\n        }\r\n\r\n        const registUpdate = () => {\r\n            const targetItem = projects.find(item => item.seq === props.targetSeq);\r\n            if (targetItem != undefined) {\r\n                updateProjectName(props.targetSeq, name.value).then(() => {\r\n                    targetItem.name = name.value;\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            }\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: isCreate ? 'Create' : 'Update',\r\n                isEnable: name.errors.length === 0,\r\n                callback: () => {\r\n                    if (isCreate) registCreate();\r\n                    else registUpdate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, input new name!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => LogicUtil.checkFieldName(value),\r\n                                //     errorType: \"value\"\r\n                                // },\r\n                                {\r\n                                    checker: (value) => !existNames.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NameDefDialog;\r\n\r\nconst findProjectMaxSeq = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT max(seq) m FROM prjcttbl`);\r\n    const results = await response.json();\r\n    return results[0].m;\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, type, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.type}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport { ProjectType, ProjectTypes } from \"../../../redux/store/store\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\n\r\nnamespace NewProjectDialog {\r\n\r\n    type CloudLibInfo = {\r\n        seq: number;\r\n        name: string;\r\n        ownerId: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    type LocalLibInfo = {\r\n        fileName: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const Component = (props: {\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [type, setType] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const [selectedLib, setSelectedLib] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [localLib, setLocalLib] = useState<null | LocalLibInfo>(null);\r\n\r\n        const [cloudLibs, setCloudLibs] = useState<null | CloudLibInfo[]>(null);\r\n\r\n        const width = 500;\r\n        const height = 340;\r\n\r\n        // useEffect(() => {\r\n        //     setType({ ...type });\r\n        // }, []);\r\n\r\n        const getStoryLib = () => {\r\n            let storyLib: LogicUtil.WrapElement | null = null;\r\n            if (cloudLibs != null) {\r\n                const lib = cloudLibs.find(lib => lib.seq === Number(selectedLib.value));\r\n                if (lib != undefined) {\r\n                    storyLib = lib.rootData;\r\n                }\r\n            } else if (localLib != null) {\r\n                storyLib = localLib.rootData;\r\n            }\r\n            return storyLib;\r\n        }\r\n\r\n        const usingHash = useMemo(() => {\r\n            let hash = '-';\r\n            const lib = getStoryLib();\r\n            if (lib != null) {\r\n                hash = DataUtil.getSHA256Hash(JSON.stringify(lib));\r\n            }\r\n            return hash;\r\n        }, [selectedLib, localLib]);\r\n\r\n        const isCreateEnabled = () => {\r\n            if (type.value === '') return false;\r\n            if ((type.value as ProjectType) === 'story') {\r\n                return usingHash !== '-';\r\n            }\r\n            return true;\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Create',\r\n                isEnable: isCreateEnabled(),\r\n                callback: () => {\r\n                    const projectType = type.value as ProjectType;\r\n                    if (projectType as ProjectType === 'library') {\r\n                        store.libraryData = LogicElementUtil.getInitialData();\r\n                    } else {\r\n                        store.libraryData = getStoryLib();\r\n                        store.storyData = {\r\n                            limitFrame: 300,\r\n                            limitParticle: 3000,\r\n                            fuseList: []\r\n                        };\r\n                    }\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, select project type!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={type}\r\n                            width={178}\r\n                            setCheckable={(checkable => {\r\n                                setType(checkable);\r\n                                if (checkable.value as ProjectType !== 'story') {\r\n                                    setCloudLibs(null);\r\n                                    setLocalLib(null);\r\n                                    setSelectedLib({ value: '', errors: [] });\r\n                                }\r\n                            })}\r\n                            list={ProjectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.BorderPanel\r\n                    title=\"Story\"\r\n                    isEnable={type.value as ProjectType === 'story'}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Source\"\r\n                            jsx={<>\r\n                                <FormUtil.ButtonItem\r\n                                    button={{\r\n                                        label: 'Cloud',\r\n                                        width: 120,\r\n                                        callback: () => {\r\n                                            findAllReleaseProjectList().then(resList => {\r\n                                                setCloudLibs(resList.map(res => {\r\n                                                    return {\r\n                                                        name: res.name,\r\n                                                        ownerId: res.owner,\r\n                                                        seq: res.seq,\r\n                                                        rootData: JSON.parse(DataUtil.unZip(res.source))\r\n                                                    }\r\n                                                }));\r\n                                                setLocalLib(null);\r\n                                            });\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                <FormUtil.ButtonItem\r\n                                    button={{\r\n                                        label: 'Local',\r\n                                        width: 120,\r\n                                        callback: () => {\r\n                                            (async () => {\r\n                                                const [fileHandle] = await window.showOpenFilePicker();\r\n                                                const file = await fileHandle.getFile();\r\n                                                const fileContents = await file.text();\r\n                                                const text = DataUtil.unZip(fileContents);\r\n                                                setLocalLib({\r\n                                                    fileName: file.name,\r\n                                                    rootData: JSON.parse(text)\r\n                                                });\r\n                                                setCloudLibs(null);\r\n                                                setSelectedLib({ value: '', errors: [] });\r\n                                            })();\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </>}\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Cloud\"\r\n                            isEnabled={cloudLibs != null}\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    marginLeft={2}\r\n                                    checkable={selectedLib}\r\n                                    width={278}\r\n                                    setCheckable={setSelectedLib}\r\n                                    list={(cloudLibs ?? []).map((item) => {\r\n                                        // const disp = `${item.ownerId}: ${item.name}`;\r\n                                        return { value: item.seq.toString(), labelText: item.name };\r\n                                    })}\r\n                                    headBlank\r\n                                    validates={[\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Local\"\r\n                            isEnabled={localLib != null}\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={localLib == null ? '' : localLib.fileName}\r\n                                    isRecordItem\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Hash\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={usingHash}\r\n                                    isRecordItem\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewProjectDialog;\r\n\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport { ProjectType, ProjectTypes } from \"../../../redux/store/store\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\n\r\nnamespace NewProjectDialogStoryOnly {\r\n\r\n    type CloudLibInfo = {\r\n        seq: number;\r\n        name: string;\r\n        ownerId: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const Component = (props: {\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [selectedLib, setSelectedLib] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [cloudLibs, setCloudLibs] = useState<null | CloudLibInfo[]>(null);\r\n\r\n        const width = 500;\r\n        const height = 180;\r\n\r\n        useEffect(() => {\r\n            findAllReleaseProjectList().then(resList => {\r\n                setCloudLibs(resList.map(res => {\r\n                    return {\r\n                        name: res.name,\r\n                        ownerId: res.owner,\r\n                        seq: res.seq,\r\n                        rootData: JSON.parse(DataUtil.unZip(res.source))\r\n                    }\r\n                }));\r\n            });\r\n        }, []);\r\n\r\n        const getStoryLib = () => {\r\n            let storyLib: LogicUtil.WrapElement | null = null;\r\n            if (cloudLibs != null) {\r\n                const lib = cloudLibs.find(lib => lib.seq === Number(selectedLib.value));\r\n                if (lib != undefined) {\r\n                    storyLib = lib.rootData;\r\n                }\r\n            }\r\n            return storyLib;\r\n        }\r\n\r\n        const usingHash = useMemo(() => {\r\n            let hash = '-';\r\n            const lib = getStoryLib();\r\n            if (lib != null) {\r\n                hash = DataUtil.getSHA256Hash(JSON.stringify(lib));\r\n            }\r\n            return hash;\r\n        }, [selectedLib]);\r\n\r\n        const isCreateEnabled = () => {\r\n            return usingHash !== '-';\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Create',\r\n                isEnable: isCreateEnabled(),\r\n                callback: () => {\r\n                    store.libraryData = getStoryLib();\r\n                    store.storyData = {\r\n                        limitFrame: 300,\r\n                        limitParticle: 3000,\r\n                        fuseList: []\r\n                    };\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, select library!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Cloud\"\r\n                    isEnabled={cloudLibs != null}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={selectedLib}\r\n                            width={278}\r\n                            setCheckable={setSelectedLib}\r\n                            list={(cloudLibs ?? []).map((item) => {\r\n                                // const disp = `${item.ownerId}: ${item.name}`;\r\n                                return { value: item.seq.toString(), labelText: item.name };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Hash\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            value={usingHash}\r\n                            isRecordItem\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewProjectDialogStoryOnly;\r\n\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import assert from \"assert\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryUtil from \"../launcher/util/storyUtil\";\r\nimport NameDefDialog from \"./nameDefDialog\";\r\nimport NewProjectDialog from \"./newProjectDialog\";\r\nimport NewProjectDialogStoryOnly from \"./newProjectDialogStoryOnly\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n    const listItemJsx = store.cloud == null ? [] : store.cloud.projects.map((project, i) => {\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    setFcsListIdx(i);\r\n                    console.log(DataUtil.getHashedFromProjectSeq(project.seq));\r\n                }}\r\n                onContextMenu={() => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={DataUtil.getDirectUrl(project.type, project.seq)}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }}\r\n            >\r\n                <_Status type={project.type}>[{project.type}] </_Status>\r\n                <_Name>{project.name}</_Name>\r\n                {/* <_Date> -{item.lastmod}</_Date> */}\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    const getProjectType = () => {\r\n        let str = '-';\r\n        if (store.libraryData != null) str = 'library';\r\n        if (store.storyData != null) str = 'story';\r\n        return str;\r\n    }\r\n\r\n    const hasData = store.libraryData != null;\r\n    const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n    useEffect(() => {\r\n        if (store.cloud == null) {\r\n            setFcsListIdx(-1);\r\n        }\r\n    }, [store.cloud]);\r\n\r\n    const [elementSize, developCnt, privateCnt, releaseCnt, logicCnt, fuseCnt] = useMemo(() => {\r\n        if (store.libraryData == null) return [0, 0, 0, 0, 0, 0];\r\n        let size = 0;\r\n        const incrRec = (wrap: LogicUtil.WrapElement) => {\r\n            size++;\r\n            const listName = LogicElementUtil.getListParamName(wrap.type);\r\n            if (listName != null) {\r\n                const list = wrap.data[listName] as LogicUtil.WrapElement[];\r\n                list.forEach(wrap => incrRec(wrap));\r\n            }\r\n        }\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        incrRec(root.logicMng);\r\n        incrRec(root.seedMng);\r\n\r\n        let developCnt = 0;\r\n        let privateCnt = 0;\r\n        let releaseCnt = 0;\r\n        let fuseCnt = 0;\r\n        const seedMng = root.seedMng.data as LogicUtil.NodeSeedManager;\r\n        seedMng.defs.forEach(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n            switch (seed.permit) {\r\n                case 'develop': developCnt++; break;\r\n                case 'private': privateCnt++; break;\r\n                case 'release': releaseCnt++; break;\r\n            }\r\n        });\r\n\r\n        const logicMng = root.logicMng.data as LogicUtil.NodeLogicManager;\r\n\r\n        if (store.storyData != null) {\r\n            fuseCnt = store.storyData.fuseList.length;\r\n        }\r\n        return [size, developCnt, privateCnt, releaseCnt, logicMng.defs.length, fuseCnt];\r\n    }, [store.libraryData]);\r\n\r\n    \r\n    const getData = (type: ProjectType) => {\r\n        switch (type) {\r\n            case 'library': {\r\n                return store.libraryData;\r\n            }\r\n            case 'story': {\r\n                const data: StoryUtil.ScenarioFileProps = {\r\n                    libraryData: store.libraryData as LogicUtil.WrapElement,\r\n                    scenarioData: store.storyData as StoryUtil.StoryData\r\n                };\r\n                return data;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを新規アップロードする\r\n     */\r\n    const uploadCloud = () => {\r\n        const type = getProjectType() as ProjectType;\r\n        const source = DataUtil.gZip(JSON.stringify(getData(type)));\r\n        store.system.dialog = <NameDefDialog.Component\r\n            targetSeq={-1}\r\n            type={type}\r\n            source={source}\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを上書き更新する\r\n     */\r\n    const overwriteCloudFile = () => {\r\n        const type = getProjectType() as ProjectType;\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.gZip(JSON.stringify(getData(type)));\r\n        updateProjectSource(curPrj.seq, getProjectType(), source).then(() => {\r\n            curPrj.source = source;\r\n            curPrj.type = type;\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Update project succesful!\"\r\n            />;\r\n            setStore({ ...store });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 選択中のクラウド上のファイルを読み込む\r\n     */\r\n    const cloneCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.unZip(curPrj.source);\r\n        const data = JSON.parse(source);\r\n        switch (curPrj.type) {\r\n            case 'library': {\r\n                store.libraryData = data;\r\n            } break;\r\n            case 'story': {\r\n                const scenarioFileProps = data as StoryUtil.ScenarioFileProps;\r\n                store.libraryData = scenarioFileProps.libraryData;\r\n                store.storyData = scenarioFileProps.scenarioData;\r\n            } break;\r\n        }\r\n        store.system.dialog = <ConfirmDialog.Component\r\n            message=\"Clone project succesful!\"\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    const saveLocalFile = () => {\r\n        switch (getProjectType() as ProjectType) {\r\n            case 'library': DataUtil.saveLibraryFile(store, setStore); break;\r\n            case 'story': DataUtil.saveScenarioFile(store, setStore); break;\r\n        }\r\n    }\r\n\r\n    const getNewSaveButton = () => {\r\n        switch (tabIndex) {\r\n            // Cloud\r\n            case 0: return {\r\n                label: 'Upload cloud',\r\n                width: 210,\r\n                isEnable: hasData && store.cloud != null,\r\n                callback: uploadCloud\r\n            }\r\n            // Local\r\n            case 1: return {\r\n                label: 'Save file',\r\n                width: 210,\r\n                isEnable: hasData && store.fileHandle == null,\r\n                callback: () => {\r\n                    // store.fileHandle = null;\r\n                    // setStore({...store});\r\n                    saveLocalFile();\r\n                }\r\n            }\r\n        }\r\n        throw assert;\r\n    }\r\n\r\n    const getOverwriteButton = () => {\r\n        switch (tabIndex) {\r\n            // Cloud\r\n            case 0: return {\r\n                label: 'Overwrite',\r\n                width: 210,\r\n                isEnable: fcsListIdx != -1 && hasData,\r\n                callback: overwriteCloudFile\r\n            }\r\n            // Local\r\n            case 1: return {\r\n                label: 'Overwrite',\r\n                width: 210,\r\n                isEnable: hasData && store.fileHandle != null,\r\n                callback: () => {\r\n                    // store.fileHandle = null;\r\n                    // setStore({...store});\r\n                    saveLocalFile();\r\n                }\r\n            }\r\n        }\r\n        throw assert;\r\n    }\r\n\r\n    const cloudJsx = (<_ContDiv isEnable={store.cloud != null}>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Load',\r\n                    isEnable: !hasData && fcsListIdx !== -1 && projects[fcsListIdx].source !== '',\r\n                    callback: cloneCloudFile\r\n                },\r\n                {\r\n                    label: 'Rename',\r\n                    width: 110,\r\n                    isEnable: fcsListIdx != -1,\r\n                    callback: () => {\r\n                        store.system.dialog = <NameDefDialog.Component\r\n                            targetSeq={projects[fcsListIdx].seq}\r\n                        />;\r\n                        setStore({ ...store });\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Delete',\r\n                    width: 110,\r\n                    isEnable: fcsListIdx != -1,\r\n                    callback: () => {\r\n                        deleteProject(projects[fcsListIdx].seq).then(() => {\r\n                            store.system.dialog = <ConfirmDialog.Component\r\n                                message=\"Delete project succesful!\"\r\n                            />;\r\n                            projects.splice(fcsListIdx, 1);\r\n                            setFcsListIdx(fcsListIdx - 1);\r\n                            setStore({ ...store });\r\n                        });\r\n                    }\r\n                },\r\n            ]}\r\n        />\r\n        <_ListDiv>\r\n            {listItemJsx}\r\n        </_ListDiv>\r\n    </_ContDiv>);\r\n\r\n    const localJsx = (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Load',\r\n                    width: 100,\r\n                    isEnable: !hasData,\r\n                    callback: () => { DataUtil.loadFile(store, setStore) }\r\n                },\r\n                {\r\n                    label: 'Disconnect',\r\n                    width: 160,\r\n                    isEnable: store.fileHandle != null,\r\n                    callback: () => {\r\n                        store.fileHandle = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                },\r\n            ]}\r\n        />\r\n    </>);\r\n\r\n    return (<_Wrap>\r\n        <_HeaderDiv>\r\n            <FormUtil.ButtonRecord\r\n                align=\"left\"\r\n                buttons={[\r\n                    {\r\n                        label: 'New Project',\r\n                        isEnable: !hasData,\r\n                        callback: () => {\r\n\r\n                            store.system.dialog = store.env.isEditLibrary ? <NewProjectDialog.Component /> : <NewProjectDialogStoryOnly.Component />;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Clear',\r\n                        width: 100,\r\n                        isEnable: hasData,\r\n                        callback: () => {\r\n                            store.libraryData = null;\r\n                            store.storyData = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                ]}\r\n            />\r\n        </_HeaderDiv>\r\n        <_BodyDiv>\r\n            <_LeftDiv isEnable={true}>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'Cloud', enable: true, cont: cloudJsx },\r\n                        { name: 'Local', enable: true, cont: localJsx },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_LeftDiv>\r\n            <_RighttDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getNewSaveButton(),\r\n                        getOverwriteButton()\r\n                    ]}\r\n                />\r\n                <FormUtil.BorderPanel\r\n                    title=\"Project\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Type\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={getProjectType()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Private\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : privateCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Release\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : releaseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Logic\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Elements\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : elementSize.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Hash\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    // width={340}\r\n                                    isRecordItem\r\n                                    value={!hasData ? '-' : DataUtil.getSHA256Hash(JSON.stringify(store.libraryData))}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Fuses\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : fuseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n                {/* <FormUtil.BorderPanel\r\n                    title=\"File\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Type\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={getProjectType()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                /> */}\r\n            </_RighttDiv>\r\n        </_BodyDiv>\r\n\r\n    </_Wrap >);\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst updateProjectSource = async (seq: number, type: string, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set type = '${type}', source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from prjcttbl where seq = ${seq};`)\r\n}\r\n\r\nconst HEADER_WIDTH = 40;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    background-color: #ebebeb30;\r\n`;\r\n\r\nconst _HeaderDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_WIDTH}px;\r\n    background-color: #d1f5f32f;\r\n`;\r\n\r\nconst _BodyDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_WIDTH}px);\r\n    background-color: #221a212c;\r\n`;\r\n\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #ffe3fb53; */\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ContDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 86px);\r\n    box-sizing: border-box;\r\n    background-color: #f0ecd43d;\r\n    border: 1px solid #002c8a;\r\n    border-radius: 4px;\r\n`;\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    type: ProjectType | '';\r\n}>`\r\n    color: #0000006d;\r\n    ${props => props.type === 'library' ? css`color: #b90000be;` : ''}\r\n    ${props => props.type === 'story' ? css`color: #003bb9bd;` : ''}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\nconst _RighttDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #cbf7cd2d;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane, TabElements } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport LogicMainteTab from \"./factory/logicMainteTab\";\r\nimport StoryTab from \"./launcher/storyTab\";\r\nimport ManageTab from \"./manage/manageTab\";\r\n\r\nconst CreateChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const getProjectType = () => {\r\n        let str = '-';\r\n        if (store.libraryData != null) str = 'library';\r\n        if (store.storyData != null) str = 'scenario';\r\n        return str;\r\n    };\r\n    const projectType = getProjectType();\r\n\r\n    const tabElements: TabElements[] = [];\r\n    tabElements.push({ name: 'Manage', enable: true, cont: <ManageTab /> });\r\n    tabElements.push({ name: 'Story', enable: projectType === 'scenario', cont: projectType === 'scenario' ? <StoryTab /> : <></> });\r\n    if (store.env.isEditLibrary) {\r\n        tabElements.push({ name: 'Library', enable: projectType === 'library', cont: <LogicMainteTab /> });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={tabElements}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CreateChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport TreeUtil from \"../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../create/factory/util/logicUtil\";\r\nimport PreviewLogicFrame from \"../create/preview/previewLogicFrame\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    isOpen: boolean;\r\n    seedList: SeedProps[];\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\n\r\nconst PublishFrame = (props: {\r\n    setLibCnt: (artsCnt: number) => void;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [libList, setLibList] = useState<LibProps[]>([]);\r\n\r\n    useEffect(() => {\r\n        findAllReleaseProjectList().then((resList) => {\r\n            const libList: LibProps[] = [];\r\n            resList.forEach(res => {\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const rootData = JSON.parse(DataUtil.unZip(res.source)) as LogicUtil.WrapElement;\r\n                const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                const seedList: SeedProps[] = seedMng.defs\r\n                    .filter(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        return seed.permit === 'release';\r\n                    })\r\n                    .map(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                        const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                        return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                    });\r\n                libList.push({\r\n                    name, ownerId, lastmod, rootData, seedList, isOpen: false\r\n                });\r\n            });\r\n            setLibList(libList);\r\n            props.setLibCnt(libList.length);\r\n        });\r\n    }, []);\r\n\r\n    const download = (plainData: string) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        window.showSaveFilePicker(options).then((handle) => {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await handle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"Successfully download!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        }).catch(() => {\r\n            console.log('キャンセルされました');\r\n        });\r\n    }\r\n\r\n    const libListJsx = libList\r\n        .filter(lib => lib.seedList.length > 0).map((lib, i) => {\r\n            const dispCnt = !lib.isOpen ? 0 : lib.seedList.length;\r\n            return (<_Item key={i} count={dispCnt}>\r\n                <_Header onClick={() => {\r\n                    // window.open(DataUtil.getPreviewURL(score.seq), '_blank');\r\n                }}>\r\n                    <_Owner>{`${lib.ownerId}`}</_Owner>\r\n                    <_CName onClick={() => {\r\n                        download(JSON.stringify(lib.rootData));\r\n                    }}>{`${lib.name}`}</_CName><_CDate>{lib.lastmod}</_CDate>\r\n                </_Header>\r\n                <_DetailMain count={dispCnt}>\r\n                    {lib.seedList.map((seed, j) => {\r\n                        let labelName = seed.name;\r\n                        if (seed.disp != undefined) labelName = seed.disp;\r\n                        return (\r\n                            <_SeedItemFrame key={j} onClick={() => {\r\n                                store.system.dialog = (\r\n                                    <PreviewLogicFrame.Component\r\n                                        master={seed.master}\r\n                                        rootData={lib.rootData}\r\n                                        closeButtonAction={() => {\r\n                                            store.system.dialog = null;\r\n                                            setStore({ ...store });\r\n                                        }}\r\n                                    />\r\n                                );\r\n                                setStore({ ...store });\r\n                            }}>\r\n                                <_SeedItemInner>\r\n                                    <_SeedName>{labelName}</_SeedName>\r\n                                    <_SeedArgCnt>{` [${seed.argCount} arguments]`}</_SeedArgCnt>\r\n                                </_SeedItemInner>\r\n                            </_SeedItemFrame>\r\n                        );\r\n                    })}\r\n                </_DetailMain>\r\n                <_DetailOpen onClick={() => {\r\n                    libList[i].isOpen = !libList[i].isOpen;\r\n                    setLibList(libList.slice());\r\n                }}>\r\n                    <_CSummary>{` ${lib.seedList.length} seeds ▼`}</_CSummary>\r\n                </_DetailOpen>\r\n            </_Item>);\r\n        });\r\n\r\n    return (\r\n        <_ListFrame>{libListJsx}</_ListFrame>\r\n    );\r\n}\r\n\r\nexport default PublishFrame;\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #929292;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst SEED_HEIGTH = 40;\r\nconst _Item = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${props => (props.count > 0 ? 8 : 0) + 89 + props.count * SEED_HEIGTH}px;\r\n    /* border-bottom: 1px solid #262626; */\r\n    /* background-color: #2e2e2e; */\r\n    /* background: linear-gradient(to bottom, transparent, #4f4f4f); */\r\n    margin: 2px 0 0 0;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    } */\r\n    transition: height 200ms;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100%);\r\n    height: 60px;\r\n    /* background-color: #c9e3df; */\r\n    background: linear-gradient(to bottom, #b9b9b9, #e2e2e2, #b9b9b9);\r\n    /* margin: 4px 0 0 4px; */\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff);\r\n    } */\r\n`;\r\nconst _DetailMain = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 40px);\r\n    height: ${props => (props.count > 0 ? 8 : 0) + props.count * SEED_HEIGTH}px;\r\n    background-color: #c7c7c7;\r\n    border-radius: 0 0 2px 2px;\r\n    margin: 0 0 0 20px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    transition: height 200ms;\r\n    overflow-y: hidden;\r\n`;\r\nconst _DetailOpen = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 60px);\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    margin: 0 0 0 30px;\r\n    background-color: #b1b1b1;\r\n    /* border-radius: 0 0 2px 2px; */\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    clip-path: polygon(7.5% 100%, 0% 0%, 100% 0%, 92.5% 100%);\r\n    \r\n    &:hover {\r\n        background-color: #c6d1a1;\r\n    }\r\n`;\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    \r\n    &:hover {\r\n        color: #db3333;\r\n    }\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CSummary = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 25px;\r\n    font-size: 22px;\r\n    line-height: 22px;\r\n    font-weight: 600;\r\n    color: #fffffad6;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _SeedItemFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${SEED_HEIGTH}px;\r\n    /* background-color: #a3b9c0; */\r\n    margin: 2px 0 0 0;\r\n    /* padding-left: 4px; */\r\n    text-align: left;\r\n`;\r\nconst _SeedItemInner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 2px;\r\n    border: 1px solid #0000002e;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    line-height: 29px;\r\n    font-weight: 600;\r\n    padding: 0 0 0 5px;\r\n    &:hover {\r\n        background-color: #bbd4dc;\r\n    }\r\n`;\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #000f74;\r\n`;\r\nconst _SeedArgCnt = styled.span<{\r\n}>`\r\n    color: #c7020265;\r\n`;","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\ntype NotePorp = {\r\n    version: string;\r\n    date: string;\r\n    note: string;\r\n}\r\n\r\nconst ReleaseNote = () => {\r\n    const { store } = useContext(GlobalContext);\r\n\r\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\r\n    useEffect(() => {\r\n        fetch('assets/release_note.json')\r\n            .then(response => response.json()) // (2) レスポンスデータを取得\r\n            .then(json => { // (3)レスポンスデータを処理\r\n                const list = json as NotePorp[];\r\n                setJsx(list.map((item, i) => {\r\n                    const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n                    return (\r\n                        <_Item key={i}>\r\n                            <_Header>v{item.version} ({item.date})</_Header>\r\n                            <_Detail>{record}</_Detail>\r\n                        </_Item>\r\n                    );\r\n                }));\r\n            });\r\n    }, []);\r\n    return (<_ListFrame>{jsx}</_ListFrame>);\r\n}\r\n\r\nexport default ReleaseNote;\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    /* height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px); */\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #bfcace;\r\n    border: 1px solid #9b9b9b;\r\n    border-radius: 6px;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    font-weight: 600;\r\n    /* background-color: #8bdbf8; */\r\n    color: #494975;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    /* background-color: #dafce4; */\r\n    color: #754949;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PublishFrame from \"./publishFrame\";\r\nimport ReleaseNote from \"./releaseNote\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [userCount, setUserCount] = useState(0);\r\n    const [artsCnt, setArtsCnt] = useState(0);\r\n\r\n    useEffect(() => {\r\n        countUsers().then(cnt => {\r\n            setUserCount(cnt);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <ReleaseNote />\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{artsCnt} libruary have been published.</_MessageRecord>\r\n            <PublishFrame setLibCnt={setArtsCnt}/>\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeChannel;\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nexport const findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT seq, (select id from user_tbl where seq = prj.seq) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { VscGitPullRequestCreate } from 'react-icons/vsc';\r\nimport CreateChannel from \"../create/createChannel\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <HomeChannel /> },\r\n                    { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <CreateChannel /> },\r\n                ]}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport CanvasUtil from '../../utils/canvasUtil';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <_Logo src={logo} />\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2023 Pixel Flare All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#00103d, #475fa3);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    /* color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-shadow: 1px 2px 22px #0000003d; */\r\n    text-align: center;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    /* & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    } */\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #ebe7ab;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n    /* height: 200%; */\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport StoreSystem from \"../../redux/store/storeSystem\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../utils/form/validateUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst WIDTH = 750;\r\nconst HEIGHT = 600;\r\n/**\r\n * アカウントフレームのコンポーネント\r\n * @returns \r\n */\r\nconst AccountFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [oldPass, setOldPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPass, setNewPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPassConfirm, setNewPassConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n    const [emailList, setEmailList] = useState<string[]>([]);\r\n\r\n    const [isModify, setModify] = useState(false);\r\n    const loginProps = store.system.user as StoreSystem.User;\r\n\r\n    const reloadInfo = () => {\r\n        setUserId({ ...userId, value: loginProps.id });\r\n        setNewPass({ ...newPass, value: '' });\r\n        setNewPassConfirm({ ...newPassConfirm, value: '' });\r\n        setEmail({ ...email, value: loginProps.email });\r\n        setOldPass({ ...oldPass, value: loginProps.password });\r\n    }\r\n\r\n    useEffect(() => {\r\n        DataUtil.findUserInfoList().then(list => {\r\n\r\n            const userIdList: string[] = [];\r\n            const emailList: string[] = [];\r\n            list.forEach(info => {\r\n                if (info.id !== loginProps.id) userIdList.push(info.id);\r\n                if (info.email !== '') emailList.push(info.email);\r\n            });\r\n            setUserIdList(userIdList);\r\n            setEmailList(emailList);\r\n        });\r\n\r\n        const hash = DataUtil.getHashedFromUserSeq(loginProps.seq);\r\n\r\n        // ユーザページのURLに変更する。\r\n        window.history.replaceState('', '', `/#/user?v=${hash}`);\r\n\r\n        reloadInfo();\r\n\r\n        // 閉じる際にURLを元に戻す\r\n        return () => {\r\n            // alert('destroy');\r\n            window.history.replaceState('', '', `/#/`);\r\n        }\r\n    }, []);\r\n\r\n    const userTabJsx: JSX.Element = (\r\n        <_Wrap>\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'user id'}\r\n                checkable={userId}\r\n                setCheckable={setUserId}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !userIdList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass'}\r\n                isPassword\r\n                checkable={newPass}\r\n                setCheckable={setNewPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPassConfirm.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPassConfirm]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass*'}\r\n                isPassword\r\n                checkable={newPassConfirm}\r\n                setCheckable={setNewPassConfirm}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPass.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPass]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'email'}\r\n                checkable={email}\r\n                setCheckable={setEmail}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => {\r\n                            return value.length === 0 || value.split('@').length === 2;\r\n                        },\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !emailList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                // width={500}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'old pass'}\r\n                isPassword\r\n                checkable={oldPass}\r\n                setCheckable={setOldPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => value === loginProps.password,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                // dependency={[passwordConfirm]}\r\n                width={300}\r\n                marginTop={55}\r\n                isReadOnly={!isModify}\r\n            />\r\n        </_Wrap>\r\n    );\r\n\r\n    // 登録ボタンの活性状態\r\n    const permitRegist = (\r\n        userId.errors.length === 0\r\n        && newPass.errors.length === 0\r\n        && newPassConfirm.errors.length === 0\r\n        && email.errors.length === 0\r\n        && oldPass.errors.length === 0\r\n    );\r\n\r\n    const updateUserInfo = () => {\r\n        const passwordStr = newPass.value.length === 0 ? '' : `,password = '${newPass.value}'`;\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `UPDATE user_tbl SET id = '${userId.value}', email = '${email.value}'${passwordStr}\r\n            WHERE seq = ${loginProps?.seq}`\r\n        ).then(() => {\r\n            loginProps.id = userId.value;\r\n            if (newPass.value.length > 0) {\r\n                loginProps.password = newPass.value;\r\n            }\r\n            loginProps.email = email.value;\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Modify successful!\" />;\r\n            setStore({...store});\r\n        });\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <FormUtil.Message\r\n                    message=\"If you bookmark this page, you can easily login by URL.\"\r\n                />\r\n            </_Header>\r\n            <_Body>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'User', enable: true, cont: userTabJsx },\r\n                        { name: 'Security', enable: false, cont: <></> },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_Body>\r\n            <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        {\r\n                            label: 'Close',\r\n                            callback: () => {\r\n                                // dispatcher.system.closeDialog();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Cancel',\r\n                            isEnable: isModify,\r\n                            callback: () => {\r\n                                setModify(false);\r\n                                reloadInfo();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isModify ? 'Modify' : 'Regist',\r\n                            isEnable: !isModify || permitRegist,\r\n                            callback: () => {\r\n                                if (!isModify) {\r\n                                    setModify(true);\r\n                                    setOldPass({ ...oldPass, value: '' });\r\n                                }\r\n                                else {\r\n                                    updateUserInfo();\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\n\r\nexport default AccountFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7eb;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    /* text-align: center; */\r\n`;\r\nconst _Body = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 100px);\r\n    padding: 4px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport AccountFrame from \"../accountFrame\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginCreateAccount = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isRegist, setRegist] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [passwordConfirm, setPasswordConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n\r\n    const createAuthText = () => {\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n        const list = '0123456789';\r\n        let text = '';\r\n        for (let i = 0; i < 6; i++) {\r\n            text += list.charAt(Math.random() * list.length);\r\n        }\r\n        return text;\r\n    };\r\n\r\n    /** 既存のユーザIDリストを格納 */\r\n    useEffect(() => {\r\n        DataUtil.findUserIdList().then(list => {\r\n            setUserIdList(list);\r\n        });\r\n\r\n        // fetch('https://api.ipify.org/?format=json').then(res => {\r\n        //     res.json().then(data => {\r\n        //         alert(data['ip']);\r\n        //     });\r\n        // });\r\n    }, []);\r\n\r\n    const [authCollation, setAuthCollation] = useState<string>(createAuthText());\r\n    const [authInput, setAuthInput] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    /** キャッシュした認証画像 */\r\n    const authPicture = useMemo(() => {\r\n        return CanvasUtil.getAuthTextURL(authCollation);\r\n\r\n    }, [authCollation]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n                case 'relation': list.push('[password] does not match confirm.'); break;\r\n            }\r\n        }\r\n        if (passwordConfirm.errors.length > 0) {\r\n            switch (passwordConfirm.errors[0]) {\r\n                case 'length': list.push('[password *] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    const registAction = () => {\r\n\r\n        (async () => {\r\n            let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n            let results = await response.json();\r\n            console.log(JSON.stringify(results[0].cnt));\r\n            const isExist = results[0].cnt > 0;\r\n            if (isExist) {\r\n                setMessageList(['That user id has already been recorded.']);\r\n            } else {\r\n                const nextSeq = await DataUtil.getNextUserSeq();\r\n                console.log(nextSeq);\r\n                await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(seq, id, password) VALUES(${nextSeq}, '${userId.value}', '${password.value}')`);\r\n                store.system.user = {\r\n                    seq: nextSeq,\r\n                    id: userId.value,\r\n                    password: password.value,\r\n                    email: '',\r\n                };\r\n                store.cloud = {\r\n                    projects: []\r\n                };\r\n                store.system.dialog = (<ConfirmDialog.Component\r\n                    message='You have successfully created an account!'\r\n                    buttons={[\r\n                        {\r\n                            label: 'OK',\r\n                            callback: () => {\r\n                                store.system.dialog = (<AccountFrame />);\r\n                                setStore({...store});\r\n                            }\r\n                        }\r\n                    ]}\r\n                />);\r\n                setStore({...store});\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0 && passwordConfirm.errors.length === 0;\r\n    }\r\n    const isAuthOK = () => {\r\n        return authInput.errors.length === 0 && authCollation === authInput.value;\r\n    }\r\n\r\n    return (<>\r\n\r\n        <_Frame isVisible={!isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass (Confirm).'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            },\r\n                            {\r\n                                checker: (value) => !userIdList.includes(value),\r\n                                errorType: \"relation\"\r\n                            },\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === passwordConfirm.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[passwordConfirm]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password*'}\r\n                        isPassword\r\n                        checkable={passwordConfirm}\r\n                        setCheckable={setPasswordConfirm}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === password.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[password]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Enter', isEnable: isLoginInfoOK(), callback: () => {\r\n                                    setRegist(true);\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Proof not a robot\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, input the same 6 number as the picture.'}\r\n                    />\r\n                    <_AuthText src={authPicture} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Change', callback: () => {\r\n                                    setAuthCollation(createAuthText());\r\n                                    setAuthInput({ value: '', errors: [] });\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                    {/* 照合する文字列 */}\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'6 numbers'}\r\n                        checkable={authInput}\r\n                        setCheckable={setAuthInput}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Regist', isEnable: isAuthOK(), callback: registAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setRegist(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginCreateAccount;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n\r\nconst _AuthText = styled.img<{\r\n}>`\r\n    display: block;\r\n    text-align: center;\r\n    margin: 4px auto;\r\n    background-color: #f7f0f0;\r\n    border: 1px solid #888888;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginLogin = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isForget, setForget] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        // alert(`Confirmation passwords don't match.`);\r\n        (async () => {\r\n            const results = await DataUtil.findUserInfoLogin(userId.value, password.value);\r\n            console.log(JSON.stringify(results));\r\n            if (results.length > 0) {\r\n                store.system.user = {\r\n                    seq: results[0].seq,\r\n                    id: results[0].id,\r\n                    password: results[0].password,\r\n                    email: results[0].email,\r\n                };\r\n                const resPrjList = await findUserProjectList(results[0].seq);\r\n                console.log(JSON.stringify(resPrjList));\r\n                store.cloud = {\r\n                    projects: resPrjList.map(res => ({\r\n                        source: res.source,\r\n                        type: res.type,\r\n                        name: res.name,\r\n                        seq: res.seq,\r\n                        lastmod: res.lastmod\r\n                    }))\r\n                };\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                    message=\"Login successful!\"\r\n                />;\r\n                setStore({ ...store });\r\n            } else {\r\n                setMessageList(['Incorrect user id or password.']);\r\n                // setPassword({ ...password, value: '' });\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0;\r\n    }\r\n\r\n    return (<>\r\n        <_Frame isVisible={!isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Enter', isEnable: isLoginInfoOK(), callback: enterAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Forgot your login information?\"\r\n                clickAction={() => {\r\n                    setForget(true);\r\n                }}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Email\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Submit login information to account address.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'email'}\r\n                        checkable={email}\r\n                        setCheckable={setEmail}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => {\r\n                                    return value.length === 0 || value.split('@').length === 2;\r\n                                },\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={500}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Send', isEnable: email.errors.length === 0, callback: () => {\r\n                                    DataUtil.findUserInfoFromEmail(email.value).then((list) => {\r\n                                        if (list.length > 0) {\r\n                                            const info = list[0];\r\n                                            const hash = DataUtil.getHashedFromUserSeq(info.seq);\r\n                                            const url = `https://demo-app.licresia.com/#/user?v=${hash}`;\r\n                                            DataUtil.sendQueryRequestToMailAPI({\r\n                                                from: 'info@licresia.com',\r\n                                                to: email.value,\r\n                                                subject: '【LiCreSia】support',\r\n                                                text: `Your login information is as follows.\\n\\nURL: ${url}\\nUSR ID: ${info.id}`\r\n                                            });\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"Your login information has been sent!\" />);\r\n                                        } else {\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"This email address is not registered.\" />);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setForget(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginLogin;\r\n\r\n\r\nexport const findUserProjectList = async (userSeq: number) => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT owner, seq, type, name, source, lastmod FROM prjcttbl WHERE owner = ${userSeq} order by seq`);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LoginCreateAccount from \"./loginCreateAccount\";\r\nimport LoginLogin from \"./loginLogin\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 500;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_LogoDiv>\r\n                <img src={logo} />\r\n            </_LogoDiv>\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {!isCreate ? <LoginLogin /> : <LoginCreateAccount />}\r\n            {/* <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        { name: 'Close', callback: closeAction },\r\n                        { name: 'Enter', callback: enterAction },\r\n                    ]}\r\n                />\r\n            </_Footer> */}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #bf808075;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n    background-color: #bf8080a2;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #c7a73e;\r\n        `}\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport LoginFrame from \"../dialog/login/loginFrame\";\r\nimport AccountFrame from \"../dialog/accountFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const user = store.system.user;\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (user != null) {\r\n            setUserId('@' + user.id);\r\n        }\r\n    }, [user]);\r\n\r\n    const authButtonJsx = user == null ? (\r\n        <_LoginButton onClick={() => {\r\n            store.system.dialog = <LoginFrame />;\r\n            setStore({ ...store });\r\n            console.log(window.location.origin);\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Login / Sign up\r\n        </_LoginButton>\r\n    ) : (<>\r\n        <_UserName\r\n            isEntry={user != null}\r\n            onClick={() => {\r\n                store.system.dialog = <AccountFrame />;\r\n                setStore({ ...store });\r\n            }}\r\n        >{userId}</_UserName>\r\n        <_LoginButton onClick={() => {\r\n            store.system.user = null;\r\n            store.cloud = null;\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message={'Logout.\\nSee you next time!'}\r\n            />;\r\n            setStore({ ...store });\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Logout\r\n        </_LoginButton>\r\n    </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Logo src={logo} />\r\n            <_Menu>\r\n                {authButtonJsx}\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    font-style: italic;\r\n    text-shadow: 1px 2px 3px #dbdbdb6a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #9fc2d1;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #ececec;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #9afff292;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #ff393983;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 180px;\r\n    height: 100%;\r\n    padding: 3px 0;\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { Redirect } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst DirectLogin = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        const seq = DataUtil.getDecryptionedUserSeq(props.hashKey);\r\n        console.log(seq);\r\n        DataUtil.findUserInfoFromSeq(seq).then(resList => {\r\n            console.log(resList);\r\n            if (resList.length > 0) {\r\n                const loginProps = resList[0];\r\n                // store.userEnv.login = loginProps;\r\n                // dispatcher.system.setUserEnv(store.userEnv);\r\n            }\r\n        });\r\n    }, []);\r\n    // if (store.userEnv.login == null) {\r\n    //     return <></>;\r\n    // } else {\r\n    //     return <Redirect to=\"/\" />;\r\n    //     // return <MainFrame />;\r\n    // }\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nexport default DirectLogin;","\r\nimport { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst ModeSelectDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Frame\r\n            width={600}\r\n            height={500}\r\n        >\r\n            <_ModeDiv onClick={()=>{\r\n                store.env.isEditLibrary = false;\r\n                store.env.isUseLocalFile = false;\r\n                store.system.dialog = null;\r\n                setStore({...store});\r\n            }}>\r\n                <_SubTitle>For beginner users</_SubTitle>\r\n                <_MainTitle>Story only</_MainTitle>\r\n                <_DetailMsg>You can borrow existing libraries developed by craftsmen and create original digital art stories.</_DetailMsg>\r\n            </_ModeDiv>\r\n            <_ModeDiv onClick={()=>{\r\n                store.system.dialog = null;\r\n                setStore({...store});\r\n            }}>\r\n                <_SubTitle>For advanced users</_SubTitle>\r\n                <_MainTitle>Story and library</_MainTitle>\r\n                <_DetailMsg>You can develop the library you need to create digital art from scratch. The developed library can be provided to many begginer users.</_DetailMsg>\r\n            </_ModeDiv>\r\n        </_Frame>\r\n    );\r\n};\r\n\r\nexport default ModeSelectDialog;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #8a90c9e1;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _ModeDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    height: calc(50% - 12px);\r\n    margin: 8px 0 0 10px;\r\n    background-color: #2c2a47b9;\r\n    border: solid 1px #050447;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #514e6bb8;\r\n    }\r\n`;\r\n\r\nconst _SubTitle = styled.div<{\r\n}>`\r\n    display: block;\r\n    font-size: 32px;\r\n    color: #ffe15dce;\r\n    font-weight: 600;\r\n    margin: 0 0 0 8px;\r\n`;\r\n\r\nconst _MainTitle = styled.div<{\r\n}>`\r\n    display: block;\r\n    font-size: 48px;\r\n    color: #e3ecec;\r\n    font-weight: 600;\r\n    margin: 0 0 0 8px;\r\n`;\r\n\r\nconst _DetailMsg = styled.div<{\r\n}>`\r\n    display: block;\r\n    background-color: #ffffff2e;\r\n    width: calc(100% - 20px);\r\n    height: 106px;\r\n    font-size: 22px;\r\n    color: #ff6c6c;\r\n    /* font-weight: 600; */\r\n    border-radius: 4px;\r\n    /* border: solid 1px #ffffff4e; */\r\n    box-sizing: border-box;\r\n    padding: 0 4px;\r\n    margin: 15px 0 0 10px;\r\n`;","import { createContext, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MobileRoot from '../mobile/mobileRoot';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\nimport DirectView from './directView';\r\nimport DirectLogin from './directLogin';\r\nimport ModeSelectDialog from './modeSelectDialog';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    setStore: React.Dispatch<React.SetStateAction<Store>>;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    // const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const [store, setStore] = useState(initialStore);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    const splashJsx = !store.system.isSplash ? <></> : (\r\n        <Splash\r\n            remove={() => {\r\n                store.system.isSplash = false;\r\n                store.system.dialog = <ModeSelectDialog />\r\n                setStore({ ...store });\r\n            }}\r\n        />\r\n    );\r\n    return (\r\n        <GlobalContext.Provider value={{ store, setStore }}>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    {splashJsx}\r\n                    <_Wrap>\r\n                        <GloballDialog />\r\n                        <TotalHeader />\r\n                        <_MainDiv>\r\n                            <MainFrame />\r\n                        </_MainDiv>\r\n                    </_Wrap>\r\n                </Route>\r\n                <Route path=\"/test\" exact >\r\n                    <_Wrap>\r\n                    </_Wrap>\r\n                </Route>\r\n                <Route path=\"/library\" exact >\r\n                    <MobileRoot hashKey={str} />\r\n                </Route>\r\n                <Route path=\"/story\" exact >\r\n                    <MobileRoot hashKey={str} />\r\n                </Route>\r\n                <Route path=\"/user\" exact >\r\n                    <DirectLogin hashKey={str} />\r\n                </Route>\r\n            </Switch>\r\n        </GlobalContext.Provider>\r\n    );\r\n\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    min-width: 1200px;\r\n    min-height: 900px;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #364887;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import zlib from \"zlib\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport { sha256 } from 'js-sha256';\r\nimport Hashids from 'hashids';\r\nimport { ProjectType, Store } from \"../redux/store/store\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport ConfirmDialog from \"../contents/dialog/confirmDialog\";\r\nimport StoryUtil from \"../contents/create/launcher/util/storyUtil\";\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5001';\r\n    export const DB_SERVER_DOMAIN = 'https://hkdev-db.glitch.me';\r\n    // export const DB_SERVER_DOMAIN = 'https://crud-server001.glitch.me';\r\n\r\n    // export const APP_SERVER_DOMAIN = 'http://localhost:4333';\r\n    export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/pf_apps/v1.6.0';\r\n    // export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    const DATABASE_NAME = 'pf1';\r\n\r\n    const getUserHashBuilder = () => {\r\n        return new Hashids('pf-user', 8);\r\n    }\r\n\r\n    export const getHashedFromUserSeq = (seq: number) => {\r\n        const hashids = getUserHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\r\n        const hashids = getUserHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    const getScoreHashBuilder = () => {\r\n        return new Hashids('pf', 8);\r\n    }\r\n\r\n    export const getHashedFromProjectSeq = (seq: number) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedProjectSeq = (hashedSeq: string) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    export const getPreviewURL = (scoreSeq: number) => {\r\n        const hashedKey = getHashedFromProjectSeq(scoreSeq);\r\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql, databaseName: DATABASE_NAME })\r\n        }\r\n    }\r\n\r\n    export type SendMailParam = {\r\n        from: string,\r\n        to: string,\r\n        subject: string,\r\n        text: string\r\n    }\r\n\r\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(json)\r\n        }\r\n    }\r\n\r\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/mail',\r\n            createSendMailRequestInit(json)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserInfoList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\r\n        const results = await response.json();\r\n        return results as { id: string, email: string }[];\r\n    };\r\n\r\n    export const findUserIdList = async () => {\r\n        const results = await findUserInfoList();\r\n        return (results as { id: string }[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfoFromEmail = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserInfoFromSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoLogin = async (id: string, password: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const getNextUserSeq = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\r\n        const results = await response.json();\r\n        const nextSeq = (results[0]['seq'] as number) + 1;\r\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\r\n\r\n        return nextSeq;\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findScore = async (scoreSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT (select id from user_tbl where seq = score.user_seq) as owner, dispnam, data FROM scoretbl score WHERE seq = ${scoreSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const loadFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            store.fileHandle = fileHandle;\r\n            const text = DataUtil.unZip(fileContents);\r\n            const data = JSON.parse(text);\r\n            // シナリオであるかどうかの判定\r\n            if (!data.hasOwnProperty('scenarioData')) {\r\n                store.libraryData = data;\r\n            } else {\r\n                const scenarioProps = data as StoryUtil.ScenarioFileProps;\r\n                store.libraryData = scenarioProps.libraryData;\r\n                store.storyData = scenarioProps.scenarioData;\r\n            }\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Successfully file loaded!\" />;\r\n            setStore({ ...store });\r\n        })();\r\n    }\r\n\r\n    export const saveFileBak = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.libraryData as LogicUtil.WrapElement;\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        const plainData = JSON.stringify(rootData);\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const saveLibraryFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.libraryData as LogicUtil.WrapElement;\r\n        const plainData = JSON.stringify(rootData);\r\n        saveFile(store, setStore, plainData, 'plgc');\r\n    }\r\n\r\n    export const saveScenarioFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const data: StoryUtil.ScenarioFileProps = {\r\n            libraryData: store.libraryData as LogicUtil.WrapElement,\r\n            scenarioData: store.storyData as StoryUtil.StoryData\r\n        }\r\n        const plainData = JSON.stringify(data);\r\n        saveFile(store, setStore, plainData, 'pstr');\r\n    }\r\n\r\n    export const saveFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>, plainData: string, extension: string) => {\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': [`.${extension}`],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const getSHA256Hash = (original: string) => {\r\n        return sha256(original);\r\n    }\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n\r\n    export const getDirectUrl = (type: ProjectType, seq: number) => {\r\n        return `${APP_SERVER_DOMAIN}/#/${type}?v=${getHashedFromProjectSeq(seq)}`;\r\n    }\r\n}\r\n\r\nexport default DataUtil;"],"sourceRoot":""}