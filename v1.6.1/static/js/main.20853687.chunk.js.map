{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx","system/base/design/styles.tsx","system/contents/dialog/confirmDialog.tsx","system/utils/form/formUtiil.tsx","system/redux/store/store.tsx","system/utils/systemConst.tsx","system/utils/canvasUtil.tsx","system/contents/dialog/globalDialog.tsx","system/base/components/tab/tabbedPane.tsx","system/contents/graphic/particle.tsx","system/contents/graphic/drawUtil.tsx","system/contents/graphic/vectorUtil.tsx","system/contents/create/factory/util/paramUtil.tsx","system/contents/create/preview/modulateBuilder.tsx","system/contents/create/preview/previewUtil.tsx","system/utils/form/validateUtil.tsx","system/utils/treeUtil.tsx","system/contents/create/factory/detail/common/modifyOperations.tsx","system/contents/create/factory/logicMainteTab.tsx","system/contents/create/factory/detail/logic/editorArgumentMng.tsx","system/contents/create/factory/dialog/sendTemplateDialog.tsx","system/contents/create/factory/detail/logic/editorArgumentItem.tsx","system/contents/create/factory/detail/seed/editorSeedMng.tsx","system/contents/create/factory/detail/logic/editorLogicMng.tsx","system/contents/create/factory/detail/logic/editorLogicItem.tsx","system/contents/create/factory/detail/logic/editorParamItem.tsx","system/contents/create/factory/detail/logic/editorBehiviorMng.tsx","system/contents/create/factory/detail/logic/editorVisualMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnector.tsx","system/contents/create/factory/util/logicFormUtil.tsx","system/contents/create/factory/detail/logic/editorSendManager.tsx","system/contents/create/factory/detail/logic/editorFieldMng.tsx","system/contents/create/factory/detail/logic/editorExtendMng.tsx","system/contents/create/factory/detail/seed/editorSeedItem.tsx","system/contents/create/factory/detail/seed/editorThumbnailMng.tsx","system/contents/create/factory/detail/seed/editorThumbnailItem.tsx","system/contents/create/factory/util/logicUtil.tsx","system/contents/create/factory/detail/seed/editorSampleItem.tsx","system/contents/create/factory/detail/seed/editorSampleMng.tsx","system/contents/create/factory/detail/seed/editorInterfaceManager.tsx","system/contents/create/factory/detail/seed/editorSeedArgMng.tsx","system/contents/create/factory/detail/seed/editorSeedArgItem.tsx","system/contents/create/factory/detail/seed/editorSeedSendMng.tsx","system/contents/create/factory/detail/seed/editorFormgrpItem.tsx","system/contents/create/factory/detail/seed/editorFormgrpMng.tsx","system/contents/create/factory/util/logicElementUtil.tsx","system/contents/create/preview/buildUtil.tsx","system/contents/create/preview/previewLogicFrame.tsx","system/contents/create/preview/inputForm/previewLogicInputForm.tsx","system/contents/create/preview/inputForm/previewSeedInputForm.tsx","system/contents/create/preview/previewLauncherFrame.tsx","system/contents/create/manage/nameDefDialog.tsx","system/contents/mobile/directLinkManager.tsx","system/contents/mobile/mobileRoot.tsx","system/base/components/tab/channelPane.tsx","system/contents/create/launcher/tab/storyFuseAnalysis.tsx","system/contents/create/launcher/tab/storyProperty.tsx","system/contents/create/launcher/tab/storyEnvironment.tsx","system/contents/create/launcher/timelineFrame.tsx","system/contents/create/launcher/storyTab.tsx","system/contents/create/manage/newProjectDialog.tsx","system/contents/create/manage/newProjectDialogStoryOnly.tsx","system/contents/create/manage/manageTab.tsx","system/contents/create/createChannel.tsx","system/contents/home/publishFrame.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/dialog/accountFrame.tsx","system/contents/dialog/login/loginCreateAccount.tsx","system/contents/dialog/login/loginLogin.tsx","system/contents/dialog/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/directLogin.tsx","system/contents/entry/modeSelectDialog.tsx","system/contents/entry/systemEntry.tsx","system/utils/dataUtil.tsx"],"names":["App","useEffect","document","oncontextmenu","onkeydown","e","ctrlKey","includes","key","_jsx","SystemEntry","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","children","getElementById","Styles","_Styles","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","FONT_LARGE","css","_templateObject7","_taggedTemplateLiteral","CSS_LABEL_SMALL","_templateObject8","CSS_LABEL_MIDIUM","_templateObject9","CSS_BUTTON_DISABLE","_templateObject10","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","ConfirmDialog","Component","props","_props$width","_props$height","_props$buttons","_useContext","useContext","GlobalContext","store","setStore","width","height","buttons","label","callback","system","dialog","_objectSpread","_jsxs","_Frame","_Main","_Inner","message","split","map","msg","i","FormUtil","Message","isCenter","ButtonRecord","align","_FormUtil","isCompleteCheck","checkables","result","forEach","checkable","errors","length","InputTextFormBak","_props$isPassword","_props$validates","_props$dependency","_props$isEnable","_props$isCenter","_props$marginTop","_props$marginBottom","_props$isCenter2","type","isPassword","validaters","validates","dependency","dep","value","getErrors","validater","checker","push","errorType","setCheckable","_Record","isEnable","isVisible","textAlign","marginTop","marginBottom","undefined","titleLabel","_Fragment","_ItemnLabel","_ItemnInputBak","hasTitle","placeholder","onChange","target","readOnly","isReadOnly","Record","_props$isEnable2","_props$textAlign","_props$marginTop2","_props$marginBottom2","jsx","FormRecord","_props$labelWidth","_props$isEnabled","_props$isVisible","_props$textAlign2","_props$marginTop3","_props$marginBottom3","lablelWidth","labelWidth","isEnabled","FixedText","isRecordItem","concat","DEFAULT_LABEL_WIDTH","_FixedLabel","TextField","_props$isPassword2","_props$isNumber","_props$validates2","_props$dependency2","_props$step","_props$isEnabled2","_useState","useState","_useState2","_slicedToArray","isNaN","setNaN","isNumber","step","_ItemnInput","Number","valueAsNumber","onBlur","toString","marginLeft","Combobox","_props$validates3","_props$dependency3","_props$headBlank","_props$isEnabled3","_props$width2","headBlank","list","slice","unshift","labelText","_ItemCombobox","item","_item$isDisabled","_item$isDisabled2","_Option","disabled","isDisabled","_props$align","_props$marginTop4","_props$marginBottom4","button","_button$isEnable","_Button","onClick","ButtonItem","_props$button$isEnabl","_props$isCenter3","_props$marginTop5","_props$marginBottom5","_props$isCenter4","_Message","MessageLink","_props$isCenter5","_props$marginTop6","_props$marginBottom6","_props$isCenter6","isLink","clickAction","BorderPanel","_props$isEnable3","_BorderText","title","_BorderPanel","innerJsx","InfoFrame","_InfoDiv","color","textRecords","text","Switch","_props$isRelation","_props$isEnable4","isRelation","isUse","_Switch","checkItems","find","input","_templateObject11","_templateObject12","_templateObject13","_props$marginLeft","_templateObject14","select","_templateObject15","_props$marginLeft2","_templateObject16","option","_templateObject17","_templateObject18","_templateObject19","_templateObject21","_templateObject20","_templateObject22","_templateObject23","_templateObject24","_templateObject25","_templateObject26","_templateObject28","_templateObject27","_templateObject29","_templateObject30","_templateObject31","_templateObject33","_templateObject32","_templateObject35","_templateObject34","_templateObject36","_templateObject37","_templateObject38","ProjectTypes","initialStore","isSplash","user","isModeSelect","canDialogClose","env","isEditLibrary","isUseLocalFile","libraryData","storyData","scenarioCacheList","cloud","fileHandle","isPreviewMode","SystemConst","AUTH_TEXT_WIDTH","_SystemConst","AUTH_TEXT_HEIGHT","CanvasUtil","GloballDialog","_Blind","TabbedPane","_props$tabRecordNum","activeNo","setActiveNo","tabRecordNum","_LabelList","tabElements","tab","index","TabLabel","name","isActive","enable","selectTab","selectTabIndex","_ContList","TabContents","cont","_TabLabel","_Contents","_CanvasUtil","createURL","draw","canvas","createElement","ctx","getContext","toDataURL","getLogoURL","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillStyle","fillText","adjust","measureText","save","getAuthTextURL","WIDTH","SIZE","rotate","Math","PI","char","charAt","fontRand","random","alphaRand","Instance","_createClass","_this","_classCallCheck","owner","pos","prevPos","vec","frame","limit","isLive","drawer","extend","update","x","xy","y","this","_Particle","Particle","_DrawUtil","createGradDrawer","param","_param$radius","radiusBase","radius","self","_convertRgbaFromColor","flashAppearFrame","appearFrame","unitFrame","flashHideFrame","shrinkStartRate","start","floor","g","createRadialGradient","grads","rgba","convertRgbaFromColorCode","r","b","a","offset","convertColorCodeFromRgba","grad","addColorStop","globalAlpha","disappearStartRate","beginPath","arc","fill","code","parseInt","substring","r1","g1","b1","a1","toWhite","rate","DrawUtil","Vector","rad","len","syncFromXY","sqrt","atan2","syncFromRad","cos","sin","_VectorUtil","VectorUtil","VisualParamType","_ParamUtil","VisualParams","Object","values","BehaviorParamType","BehaviorParams","SelfParamType","SelfParams","ExtendParamType","ExtendParams","EffectParamType","EffectParams","ModulateParamType","ModulateParams","ConstantType","Constants","ParamUtil","ModulateBuilder","build","extendList","decayRate","decayLimit","gravity","gravityLimit","PreviewUtil","_PreviewUtil","SCREEN_WIDTH","SCREEN_HEIGHT","searchElement","buildLogicProps","origin","rootData","sends","createParticleRec","cur","_searchElement","_searchElement2","valueMapList","ConstantValueMap","fieldMng","mngs","data","fields","field","paramItem","convertFormulaToValue","visualParams","params","behaviorParams","getVisualParam","convertParamsToValue","getBehaviorParam","LIMIT","POS_X","POS_Y","VEC_X","VEC_Y","VEC_RAD","VEC_LEN","connectMng","inherits","connect","_connector$disable","_searchElement3","connector","disable","logicItem","method","wrap","logicMng","defs","def","searchDependLogic","depend","_convertParamsToBoole","addValueMap","FRAME","itrfldValueMap","loopCnt","extendParams","loopCntVal","LOOP_COUNT","convertParamsToBoolean","INVOKE","_loop","_searchElement4","iterateValueMap","LOOP_ITERATE","sendValueMapList","_convertParamsToValue","DECAY_LIMIT","DECAY_RATE","GRAVITY_VAL","GRAVITY_LIMIT","RADIUS","colorR","COLOR_R","colorG","COLOR_G","colorB","COLOR_B","colorA","COLOR_A","disappearStart","DISAPPEAR_START","shrinkStart","SHRINK_START","FLASH_APPEAR_FRAME","FLASH_HIDE_FRAME","warpList","_warpList$find","formula","v","valueMap","m","formulaStr","varCnt","formulaItems","str","convertFormulaToBoolean","RADIAN_ROUND","ValidateUtil","_ValidateUtil","checkRequired","checkStringLength","min","max","checkAsciiChars","checkIncludesChars","ch","indexOf","checkNumber","checkNumberRange","num","checkAll","conditions","TreeUtil","_TreeUtil","createNode","parent","depth","isOpen","getChildIndex","node","parentNode","Frame","_props$isDisable","_props$focusNode","isDisable","focusNode","ref","useRef","buildElementNodeFromData","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","jsxList","useMemo","buildJsxRecords","element","spaceList","isCurrent","current","scrollWidth","tempNode","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","clickEvent","onDoubleClick","getLabelJsx","invalidate","_Wrap","ModifyOperations","FactoryTreeContext","createContext","LogicMainteTab","setFocusNode","_useState3","_useState4","isModify","setModify","_useState5","_useState6","setInvalidate","LogicUtil","getChildrenDataNode","masterNode","openPreviewDialog","PreviewLogicFrame","master","closeButtonAction","tabIndex","onKeyDown","n","_TreeDiv","_TreeHead","_TreeBody","getNodeDisplayJsx","_PropsDiv","_DetailDiv","_DetailHeader","_DetailHeaderLabel","getTypeName","Provider","setRootData","removeSelf","_node$parent","_node$parent2","_node$parent3","splice","parentWrap","listName","LogicElementUtil","getListParamName","_DetailMainDiv","getDetailComponent","EditorArgumentMng","newNode","addChild","_props$isInputOK","isComplete","checkableFields","mappingForm","isInputOK","firstRegist","modifyRegist","SendTemplateDialog","EditorArgumentItem","_useContext2","logicNode","setName","argType","setArgType","reservedList","_node$parent2$parent","getParamNameList","valueType","syncArgumentAdd","prevName","syncArgumentName","checkFieldName","filter","ArgTypes","refers","getArgumentRefers","syncArgumentDel","getSwapButtons","argName","searchVariableReferInFormula","varItem","newName","syncFormula","mng","visualMng","behaviorMng","inhMng","inh","_LogicElementUtil$get","_LogicElementUtil$get2","inhfld","getInnerWrap","syncParamName","_logicNode$parent","runRec","logic","conn","inhLogic","getInnerWrapFixed","sendMng","seedMng","console","log","interfaceWrap","_logicNode$parent2","connWrap","syncArgumentCallback","_logicNode$parent3","inhMngNode","getInnerNodeFixed","seedNode","interfaceNode","sendNode","entry","newArgName","paramWrap","createParamWrap","delArgName","delIndex","some","EditorSeedMng","itemWrap","EditorLogicMng","EditorLogicItem","_useMemo","el","_useMemo2","isConnect","hasArgNode","hasFieldNode","hasConnectNode","existNameList","getExistNameList","toggleElement","hasNode","listPos","wrapElement","removeChild","insertChild","getDefaultLogicMngs","syncLogicName","argumentNode","getInnerNode","hasArgument","args","fieldNode","hasField","inheritNode","hasInherit","getReplicateButton","getLocgicRefers","logicName","searchLogicReferInherit","id","logicMngNode","Level","EditorParamItem","setFormulaItems","varFormList","setVarFormList","isField","isCondition","inputType","level","FIELD","INITIAL","INHERIT_FIELD","INHERIT_EXTEND","INHERIT_SEND","argumentList","fieldKeys","parentType","_getLogicNode","_node$parent4","_node$parent4$parent","_node$parent4$parent$","getLogicNode","argMng","arg","fieldName","_node$parent5","Error","_node$parent6","inhfldNode","_node$parent7","fieldKeyList","paramNameList","_node$parent8","_node$parent8$parent","addNum","delNum","parenthesisBalance","formJsxList","ParamInputTypes","getValueForm","isLastVar","isFormulaOK","hasFormError","varForm","getFormulaItem","syncFieldName","_Formula","isInvalid","_Var","_Sig","getFormulaJsx","getFieldRefers","mngNode","_mngNode$parent","_mngNode$parent2","_LogicElementUtil$get3","_LogicElementUtil$get4","inheritWrap","span","EditorBehiviorMng","isVector","hasDecayParam","hasGravityParam","exchangeVectorMethod","flag","trueParamElements","falseParamElements","size","exchangeElements","toggleElements","paramElements","EditorVisualMng","drawMethod","THICKNESS","hasDisappearParam","hasShrinkParam","hasFlashParam","EditorInheritConnMng","EditorInheritConnector","_disable","identify","setIdentify","setMethod","setDepend","defaultName","getNumberingOnPrefixName","isCreate","logicList","idList","initConnectorNode","syncTreeElementFromWrap","_newNode$parent","initSendParams","sendParamList","_sendNode$parent","dependItem","argWrap","getSendParamList","curParamList","isChange","ConnectTypes","dependLogic","inherit","newWrap","JSON","parse","stringify","getChildrenElementNode","rootNode","clone","_SendTemplateDialog","COMPONENT_WIDTH","ConnectParentPosition","xName","setXName","yName","setYName","_props$node$parent","argNode","behaviorNode","setParamValue","prpName","targetParam","SetParentPosition","_useState7","_useState8","paramList","xParam","yParam","LogicFormUtil","EditorSendManager","isDepend","EditorFieldMng","EditorExtendMng","hasLoopParam","hasInvokeParam","EditorSeedItem","disp","setDisp","setEntry","permit","setPermit","_param$disp","logicNameList","seed","items","samples","PermitTypes","EditorThumbnailMng","LogicTreeContext","hasSample","WND_SIZE","EditorThumbnailItem","_node$parent$parent","seedWrap","setFrame","urls","setUrls","setTimeout","sample","getThumbnailURL","targetFrame","sampleNo","frameCnt","_node$parent3$parent","argMap","sendParams","send","_PreviewUtil$convertP","getSeedValueMap","par","_ret","pictureJsxList","imgJsx","_IMG","src","_SampleDiv","_SampleName","_CanvasDiv","img","buildPreviewForms","formgrpList","formList","setFormList","usedGrps","form","argument","formgrp","grp","targetForms","j","colorCode","_Type","_Range","formIndex","_Color","labelName","_Tsumami","EditorSampleItem","paramForms","setParamForms","argInfoList","formgrpMng","defines","seedargList","defval","EditorSampleMng","EditorInterfaceManager","argMngNode","sendMngNode","sampleMngNode","hasGroupNode","execute","removeChildAll","newArgWrap","groupMngNode","hasGroup","EditorSeedArgMng","EditorSeedArgItem","setMin","setMax","_useState9","_useState10","setStep","_useState11","_useState12","setDefval","curIndex","getCurrentIndex","getSwapButtonsCallback","isUpper","sampleMng","swapNode","sendMngWrap","_arg$defval","EditorSeedSendMng","EditorFormgrpItem","groupMethod","setGroupMethod","targetList","setTargetList","seedargs","Array","FromGrpMedhods","formName","EditorFormgrpMng","_LogicUtil","COLOR_METHOD","COLOR_MNG","COLOR_LIST","COLOR_ITEM","COLOR_FIELD","isFocus","_Category","backgroundColor","detailJsx","_Span","_Field","_EditableValue","_data2$disable","_Signature","_Detail","nameJsx","_ValueType","FactDetSeedMng","FactDetArgumentMng","FactDetBehiviorMng","wrapNode","get","elementNode","_LogicElementUtil","_len","arguments","typeList","_key","_len2","_key2","innerNode","apply","_len3","_key3","_len4","_key4","innerWrap","isHead","isTail","ownerChildren","findIndex","swapOrder","ownDataChildren","curNo","swapData","_len5","dependencyMngNodes","_key5","depNode","replicateSameLevel","cloneBase","cloneDest","namable","getNamableProps","targetElement","getIdentifyParamName","childWrap","createParamWrapList","paramDataList","createVisualParams","createBehaviorParams","findSeedWrap","getInitialData","nameList","curWrap","nameParam","mngWrap","listParam","getLogicNameList","curLogicOwner","prefix","_getLogicItem","mngType","_node$parent5$parent","_node$parent5$parent$","_node$parent5$parent$2","getLogicItem","seedId","doParticleJob","fuse","_logicMng$defs$find","getOrigin","getSendingValueMap","getSeedProperties","seedsendList","thumbnailList","_logicMng$defs$find2","BuildUtil","_BuildUtil","PreviewLogicInputForm","logicWrap","setSendingValueMap","PreviewSeedInputForm","template","setTemplate","formgrpWrap","presetList","selectedIndex","run","_props$guaranteeFrame","minFrame","guaranteeFrame","doIterate","particle","limitFrame","limitParticle","doEnd","runPaging","beginFrame","advanceFrame","sceens","setSceens","setFrameCnt","setTabIndex","setCur","isBuild","setBuild","_useState13","_useState14","isPlay","setPlay","_useState15","_useState16","sendingValueMap","isSeed","buildTabJsx","_Msg","_FormDiv","previewTabJsx","_ProgressDiv","clickX","pageX","clientRect","getBoundingClientRect","left","window","pageXOffset","_ProgressVal","_CloseButton","PreviewLauncherFrame","NameDefDialog","DirectLinkManager","libData","setLibData","setStoryData","storyPreviewProps","setStoryPreviewProps","buildCache","setBuildCache","seedSeq","setSeedSeq","findProject","projectSeq","resList","res","ownerId","lastmod","DataUtil","unZip","source","hasOwnProperty","scenarioProps","scenarioData","seedList","argCount","useFrame","curFrame","fuseList","logicData","_Header","_seed$disp","seedName","_Item","_SeedName","_ArgCnt","isStandby","_ProgressBox","_RateVal","getBlindJsx","getJsx","_asyncToGenerator","_regeneratorRuntime","mark","_callee","conteseq","response","results","_context","prev","next","sendQueryRequestToAPI","sent","json","abrupt","stop","_x","MobileRoot","isPermit","adjLeft","adjTop","screen","setScreen","getDecryptionedProjectSeq","hashKey","rect","clientWidth","clientHeight","isFitSide","navigator","userAgent","isSmartPhone","orientation","addEventListener","alert","_Error","top","match","ChannelPane","ChannelLabel","icon","ChannelContents","_Icon","_Label","StoryFuseAnalysis","divide","setDivide","peak","setPeak","total","setTotal","countList","setCountList","defList","itemJsxList","rateHeight","count","_AnalisisItem","divRate","pastRate","needPoint","_AnalisisDiv","StoryProperty","setSeed","newFrame","setNewFrame","mapping","defBean","propertiesFormJsx","activeSeed","formgrps","presets","cancelAction","modifyAction","initFormList","StoryEnvironment","setParticle","maxLimit","reduce","ITEM_WIDTH","TimelineFrame","cacheList","fusePosJsxList","newFrameRate","newFrameValue","focus","sus","cache","seq","_Line","_Sustain","memoriJsxList","DIV_CNT","_Memori","_MeasureDiv","clientX","setNewFrameValue","MEASURE_WIDTH","StoryTab","isFuseEdit","setFuseEdit","isEnvEdit","setEnvEdit","tabActiveIndex","setTabActiveIndex","setFocus","setFuseList","groupMng","newCache","thumbList","updateCache","createSeq","fuseJsxList","thumbJsx","thumb","url","_ItemDiv","_ItemFrame","_PropRecord","_FrameRecord","_SeedRecord","_ThumbFrame","val","_Title","seedProps","_ListDiv","_ListHead","cloneFuse","newSeq","_ListBody","_Timeline","_ListMain","_RightDiv","_RightInner","sort","LIST_HEAD","_store$cloud","targetSeq","projects","p","existNames","assert","findProjectMaxSeq","maxSeq","_store$system$user","newProject","insertProject","registCreate","targetItem","updateProjectName","registUpdate","NewProjectDialog","_ref2","_callee2","req","_context2","_x2","_ref3","_callee3","_context3","_x3","_x4","setType","selectedLib","setSelectedLib","localLib","setLocalLib","cloudLibs","setCloudLibs","getStoryLib","storyLib","lib","usingHash","hash","getSHA256Hash","findAllReleaseProjectList","_callee4","_yield$window$showOpe","_yield$window$showOpe2","file","fileContents","_context4","showOpenFilePicker","getFile","fileName","NewProjectDialogStoryOnly","ManageTab","fcsListIdx","setFcsListIdx","listItemJsx","project","_ListItem","getHashedFromProjectSeq","onContextMenu","getDirectUrl","_Status","_Name","getProjectType","hasData","incrRec","root","developCnt","privateCnt","releaseCnt","fuseCnt","elementSize","logicCnt","getData","uploadCloud","gZip","overwriteCloudFile","curPrj","updateProjectSource","saveLocalFile","saveLibraryFile","saveScenarioFile","cloudJsx","_ContDiv","scenarioFileProps","deleteProject","localJsx","loadFile","_HeaderDiv","_BodyDiv","_LeftDiv","_RighttDiv","getNewSaveButton","getOverwriteButton","CreateChannel","projectType","SCORE_TAB_MARGIN","PublishFrame","libList","setLibList","setLibCnt","libListJsx","dispCnt","_Owner","_CName","plainData","showSaveFilePicker","types","accept","handle","writable","createWritable","write","close","catch","_CDate","_DetailMain","_SeedItemFrame","_SeedItemInner","_SeedArgCnt","_DetailOpen","_CSummary","_ListFrame","ReleaseNote","setJsx","fetch","record","note","version","date","HOME_USER_DIV_HEIGHT","HomeChannel","userCount","setUserCount","artsCnt","setArtsCnt","countUsers","cnt","_Left","_MessageRecord","_Right","MainFrame","AiFillHome","VscGitPullRequestCreate","MAIN_FRAME_MARGIN","Splash","isSwitch","setSwitch","timerId","setTimerId","remove","logo","clearTimeout","_Logo","_NowLoading","_Copylight","fadeIn","keyframes","AccountFrame","userId","setUserId","oldPass","setOldPass","newPass","setNewPass","newPassConfirm","setNewPassConfirm","email","setEmail","userIdList","setUserIdList","emailList","setEmailList","_useState17","_useState18","loginProps","reloadInfo","password","findUserInfoList","info","getHashedFromUserSeq","history","replaceState","userTabJsx","permitRegist","_Body","_Footer","passwordStr","updateUserInfo","LoginCreateAccount","isRegist","setRegist","setPassword","passwordConfirm","setPasswordConfirm","messageList","setMessageList","createAuthText","findUserIdList","authCollation","setAuthCollation","authInput","setAuthInput","authPicture","_AuthText","nextSeq","getNextUserSeq","LoginLogin","isForget","setForget","resPrjList","findUserInfoLogin","findUserProjectList","findUserInfoFromEmail","sendQueryRequestToMailAPI","from","to","subject","userSeq","LoginFrame","setCreate","_LogoDiv","_TypeSwitch","TotalHeader","authButtonJsx","_LoginButton","location","ImUser","_UserName","isEntry","_Menu","_Language","MdOutlineLanguage","_MenuItem","TOTAL_HEADER_WIDTH","DirectLogin","getDecryptionedUserSeq","findUserInfoFromSeq","Redirect","ModeSelectDialog","_ModeDiv","_SubTitle","_MainTitle","_DetailMsg","RouterManage","HashRouter","basename","process","URLSearchParams","useLocation","search","splashJsx","Route","path","exact","_MainDiv","_DataUtil","DB_SERVER_DOMAIN","APP_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","encode","Base64","hashedSeq","hashids","decode","getPreviewURL","scoreSeq","hashedKey","mode","headers","Accept","body","createSendMailRequestInit","queryType","sql","databaseName","createQueryRequestInit","saveFile","_ref4","_ref5","_callee5","_context5","_callee6","_context6","findUserScoreList","_ref7","_callee7","_context7","_x5","findScore","_ref8","_callee8","_context8","_x6","_callee9","_context9","saveFileBak","_callee10","_context10","_callee11","_context11","extension","options","_callee12","_context12","_callee13","_context13","original","sha256","content","encodeURIComponent","zlib","gzipSync","buffer","Buffer","unzipSync","decodeURIComponent","getStringFromDate","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace"],"mappings":"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","file":"static/js/main.20853687.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport SystemEntry from './system/contents/entry/systemEntry';\r\n\r\nconst App = () => {\r\n\r\n  useEffect(() => {\r\n    // 右クリック無効\r\n    document.oncontextmenu = function () { return false; }\r\n\r\n    // window.addEventListener(\"keydown\", function (e) {\r\n    //   // space and arrow keys\r\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n    //     e.preventDefault();\r\n    //   }\r\n    // }, false);\r\n\r\n    document.onkeydown = (e) => {\r\n      // if (!['F5'].includes(e.key)) {\r\n      //   return false;\r\n      // }\r\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n  }, []);\r\n  return (\r\n    <SystemEntry />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 18px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 22px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport { useContext } from \"react\";\r\n\r\nnamespace ConfirmDialog {\r\n\r\n    export const Component = (props: {\r\n        message: string;\r\n        width?: number;\r\n        height?: number;\r\n        buttons?: FormUtil.ButtonProps[];\r\n    }) => {\r\n\r\n        const {store,  setStore } = useContext(GlobalContext);\r\n\r\n        const width = props.width ?? 600;\r\n        const height = props.height ?? 150;\r\n        const buttons = props.buttons ?? [\r\n            {\r\n                label: 'OK',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({...store});\r\n                }\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main><_Inner>\r\n                    {props.message.split('\\n').map((msg, i) => {\r\n                        return <FormUtil.Message\r\n                            key={i}\r\n                            message={msg}\r\n                            isCenter\r\n                        />\r\n                    })}\r\n                </_Inner></_Main>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons} />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 110px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* background-color: #bb6868e1; */\r\n`;","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport ValidateUtil from \"./validateUtil\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nnamespace FormUtil {\r\n\r\n    export type CheckableValue = {\r\n        value: string;\r\n        errors: ValidateUtil.ErrorType[];\r\n    }\r\n\r\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\r\n        let result = true;\r\n        checkables.forEach(checkable => {\r\n            if (checkable.errors.length > 0) {\r\n                result = false;\r\n                return 1;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    export const InputTextFormBak = (props: {\r\n        titleLabel?: string;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        isCenter?: boolean;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        marginTop?: number;\r\n        isReadOnly?: boolean;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const type = props.isPassword ?? false ? 'password' : 'text';\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency);\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\r\n                <_ItemnInputBak\r\n                    type={type}\r\n                    value={props.checkable.value}\r\n                    hasTitle={props.titleLabel != undefined}\r\n                    width={props.width}\r\n                    isCenter={props.isCenter ?? false}\r\n                    placeholder={props.placeholder}\r\n                    onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        props.checkable.value = value;\r\n                        props.checkable.errors = getErrors(value);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }}\r\n                    errorType={errors.length === 0 ? undefined : errors[0]}\r\n                    readOnly={props.isReadOnly}\r\n                />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n\r\n    export const Record = (props: {\r\n        isEnable?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    const DEFAULT_LABEL_WIDTH = 140;\r\n    export const FormRecord = (props: {\r\n        titleLabel?: string;\r\n        labelWidth?: number;\r\n        isEnabled?: boolean;\r\n        isVisible?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        const lablelWidth = props.labelWidth ?? DEFAULT_LABEL_WIDTH;\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnabled ?? true}\r\n                isVisible={props.isVisible ?? true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={lablelWidth}>{props.titleLabel}</_ItemnLabel>}\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FixedText = (props: {\r\n        value: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        marginLeft?: number;\r\n        isRecordItem?: boolean;\r\n    }) => {\r\n        let width: string | undefined = undefined;\r\n        if(props.isRecordItem) width = `calc(100% - ${DEFAULT_LABEL_WIDTH + 16}px)`;\r\n        if(props.width != undefined) width = props.width + 'px';\r\n        return (\r\n            <_FixedLabel width={width}>{props.value}</_FixedLabel>\r\n        );\r\n    }\r\n\r\n    export const TextField = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        isNumber?: boolean;\r\n        marginLeft?: number;\r\n        step?: number;\r\n    }) => {\r\n        const [isNaN, setNaN] = useState(false);\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        let type = props.isPassword ?? false ? 'password' : 'text';\r\n        if (props.isNumber ?? false) {\r\n            type = 'number';\r\n        }\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n        const step = props.step ?? 1;\r\n\r\n        const isEnable = props.isEnabled ?? true;\r\n        return (\r\n            <_ItemnInput\r\n                type={type}\r\n                value={value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                step={step}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                    if (type === 'number') {\r\n                        setNaN(Number.isNaN(e.target.valueAsNumber));\r\n                    }\r\n                }}\r\n                onBlur={() => {\r\n                    if (type === 'number') {\r\n                        if (isNaN) props.checkable.value = ' ';\r\n                        else props.checkable.value = Number(value).toString();\r\n                        // console.log(`[${props.checkable.value}]`);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }\r\n                }}\r\n                errorType={!isEnable || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\r\n\r\n    export const Combobox = (props: {\r\n        list: ComboboxItemProps[];\r\n        headBlank?: boolean;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n        const headBlank = props.headBlank ?? false;\r\n        const list = props.list.slice();\r\n        if (headBlank) list.unshift({ value: '', labelText: '' });\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n\r\n        useEffect(() => {\r\n            // console.log('value: ' + props.checkable.value);\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const isEnable = props.isEnabled ?? true;\r\n        return (\r\n            <_ItemCombobox\r\n                value={props.checkable.value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    props.checkable.value = value;\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n\r\n                }}\r\n                errorType={!isEnable || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            >{list.map((item, i) => {\r\n                return (\r\n                    <_Option key={i}\r\n                        value={item.value}\r\n                        disabled={item.isDisabled ?? false}\r\n                        isDisabled={item.isDisabled ?? false}\r\n                    >{item.labelText}</_Option>\r\n                );\r\n            })}</_ItemCombobox>\r\n        );\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        label: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ButtonRecord = (props: {\r\n        buttons: ButtonProps[],\r\n        align?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const align = props.align ?? 'right';\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={align}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.buttons.map((button, i) => {\r\n                    return (\r\n                        <_Button\r\n                            key={i}\r\n                            isCenter={align === 'center'}\r\n                            isEnable={button.isEnable ?? true}\r\n                            width={button.width}\r\n                            onClick={button.callback}\r\n                        >{button.label}</_Button>\r\n                    );\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const ButtonItem = (props: {\r\n        button: ButtonProps\r\n    }) => {\r\n        return (\r\n            <_Button\r\n                isCenter={false}\r\n                isEnable={props.button.isEnable ?? true}\r\n                width={props.button.width}\r\n                onClick={props.button.callback}\r\n            >{props.button.label}</_Button>\r\n        );\r\n    }\r\n\r\n    export const Message = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const MessageLink = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        clickAction: () => void;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isLink={true}\r\n                    onClick={props.clickAction}\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        // const title = props.title ?? 'title pl';\r\n        return (<>\r\n            <_BorderText>{props.title}</_BorderText>\r\n            <_BorderPanel isEnable={props.isEnable ?? true}>{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export const InfoFrame = (props: {\r\n        height?: number;\r\n        textRecords: string[];\r\n    }) => {\r\n        const height = props.height ?? 70;\r\n        const color = '#1a9900';\r\n        return (<>\r\n            <_InfoDiv height={height} color={color}>\r\n                {props.textRecords.map((text, i) => {\r\n                    return <span key={i}>{text}<br /></span>;\r\n                })}\r\n            </_InfoDiv>\r\n        </>);\r\n    };\r\n\r\n    export const Switch = (props: {\r\n        label: string;\r\n        isUse: boolean;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        isRelation?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isRelation = props.isRelation ?? false;\r\n        const callback = isRelation && props.isUse ? () => { } : props.callback;\r\n        return (\r\n            <_Switch\r\n                isRelation={isRelation}\r\n                isUse={props.isUse}\r\n                isEnable={props.isEnable ?? true}\r\n                width={props.width}\r\n                onClick={callback}\r\n            >{props.label}</_Switch>\r\n        );\r\n    }\r\n\r\n    export const checkItems = (list: CheckableValue[]) => {\r\n        return list.find(item => item.errors.length > 0) == undefined;\r\n    }\r\n}\r\n\r\nexport default FormUtil;\r\n\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n    textAlign: 'left' | 'center' | 'right';\r\n    marginTop: number;\r\n    marginBottom: number;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    width: 100%;\r\n    height: 40px;\r\n    margin-top: ${props => props.marginTop}px;\r\n    margin-bottom: ${props => props.marginBottom}px;\r\n    /* background-color: #b3b4c4; */\r\n    /* border: 1px solid #000; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    text-align: ${props => props.textAlign};\r\n`;\r\n\r\nconst _ItemnLabel = styled.div<{\r\n    labelWidth?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.labelWidth}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #c3c3c3fc, #d8d8d8, #c3c3c3fc);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n`;\r\n\r\nconst _FixedLabel = styled.div<{\r\n    width?: string;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #0c0e86;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c51a;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n    overflow-x: hidden;\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width};\r\n    `}\r\n`;\r\n\r\nconst _ItemnInputBak = styled.input<{\r\n    readOnly?: boolean;\r\n    isCenter: boolean;\r\n    hasTitle: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${props => !props.hasTitle ? css`\r\n    ` : css`\r\n        width: calc(100% - 152px);\r\n    `}\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    margin-top: 2px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    /* ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    } */\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemCombobox = styled.select<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n        pointer-events: none;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _Option = styled.option<{\r\n    isDisabled: boolean;\r\n}>`\r\n    ${props => !props.isDisabled ? '' : css`\r\n        color: #0000004b;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n    isLink?: boolean;\r\n    isCenter: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #002c52;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => !props.isLink ? '' : css`\r\n        color: #0459a3;\r\n        user-select: none;\r\n        text-decoration: underline;\r\n        &:hover {\r\n            color: #68a4d8;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #cdcdcd, #ebebeb, #cdcdcd);\r\n    border: 1px solid #747474;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isUse: boolean;\r\n    isEnable: boolean;\r\n    width?: number;\r\n    isRelation: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    color: #515151;\r\n    border: 1px solid #747474;\r\n    ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\r\n    ` : css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#ddc1d979' : '#d898b3'};\r\n        color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n    `}\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\r\n        ` : css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#d3a1cb79' : '#d898b3'};\r\n            color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _BorderText = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: #990000;\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    background-color: #dcddce;\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    margin: 4px 0 0 0;\r\n    display: inline-block;\r\n    background-color: #e7e5e561;\r\n    border: solid 1px #949494;\r\n    width: 100%;\r\n    height: ${props => props.height}px;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: ${props => props.color};\r\n    overflow-y: auto;\r\n`;","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport StoreCloud from \"./storeCloud\";\r\nimport StoreSystem from \"./storeSystem\";\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    system: StoreSystem.Param;\r\n    env: StoreSystem.Env;\r\n    libraryData: LogicUtil.WrapElement | null;\r\n    storyData: StoryUtil.StoryData | null;\r\n    scenarioCacheList: StoryUtil.Cache[];\r\n    cloud: StoreCloud.Props | null;\r\n    fileHandle: FileSystemFileHandle | null;\r\n    isPreviewMode: boolean;\r\n}\r\n\r\n\r\nexport const ProjectTypes = ['library', 'story'] as const;\r\nexport type ProjectType = typeof ProjectTypes[number];\r\n\r\nexport const initialStore: Store = {\r\n    system: {\r\n        isSplash: true,\r\n        user: null,\r\n        dialog: null,\r\n        isModeSelect: false,\r\n        canDialogClose: false,\r\n    },\r\n    env: {\r\n        isEditLibrary: true,\r\n        isUseLocalFile: true\r\n    },\r\n    libraryData: null,\r\n    storyData: null,\r\n    scenarioCacheList: [],\r\n    cloud: null,\r\n    fileHandle: null,\r\n    isPreviewMode: false,\r\n}","\r\nnamespace SystemConst {\r\n    export const AUTH_TEXT_WIDTH = 350;\r\n    export const AUTH_TEXT_HEIGHT = 70;\r\n}\r\n\r\nexport default SystemConst;\r\n\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n\r\n// ホームチャンネル\r\nexport const HOME_USER_DIV_HEIGHT = 400;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import SystemConst from \"./systemConst\";\r\n\r\nnamespace CanvasUtil {\r\n\r\n    /**\r\n     * Canvasに任意の描画をし、画像のURLを取得する\r\n     * @param width 幅\r\n     * @param height 高さ\r\n     * @param draw 描画\r\n     * @returns 画像のURL\r\n     */\r\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        draw(ctx);\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    export const getLogoURL = () => {\r\n        return CanvasUtil.createURL(360, 80, (ctx) => {\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.fillRect(0, 0, 350, 80);\r\n\r\n            ctx.shadowColor = \"#555\";\r\n            ctx.shadowOffsetX = 2;\r\n            ctx.shadowOffsetY = 1;\r\n            ctx.shadowBlur = 5;\r\n            ctx.font = 'italic 50pt Arial';\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.fillText('Pixel ', 14, 64);\r\n            const adjust = ctx.measureText('Pixel ').width;\r\n            ctx.fillStyle = '#6ea0c4';\r\n            ctx.fillText('Flare', 14 + adjust, 64);\r\n            ctx.save();\r\n        });\r\n    }\r\n\r\n    export const getAuthTextURL = (text: string) => {\r\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\r\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\r\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\r\n            ctx.rotate(1 * Math.PI / 180);\r\n            for (let i = 0; i < text.length; i++) {\r\n                const char = text.charAt(i);\r\n\r\n                const fontRand = Math.random() * 60;\r\n                const alphaRand = Math.random() * 60;\r\n                ctx.font = `${20 + fontRand}pt Arial`;\r\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\r\n                ctx.fillText(char, i * SIZE, 60);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CanvasUtil;","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const dialog = store.system.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            if (!store.system.canDialogClose) return;\r\n            store.system.dialog = null;\r\n            setStore({ ...store });\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: (index: number)=>void;\r\n    tabRecordNum?: number;\r\n}\r\n\r\nexport type TabElements = {\r\n    name: string;\r\n    enable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabRecordNum = props.tabRecordNum ?? 1;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList tabRecordNum={tabRecordNum}>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isEnable={tab.enable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList tabRecordNum={tabRecordNum}>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={!tab.enable ? <></> : tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isEnable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: inline-block;\r\n    height: ${props => 35 * props.tabRecordNum}px;\r\n    text-align: left;\r\n    /* background-color: #ac3b3b; */\r\n    width: 100%;\r\n`;\r\nconst _ContList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\r\n    border-radius: 0 6px 6px 6px;\r\n    /* box-shadow: 0 2px 0 0 #000b3a48; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    \r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                margin-top: 5px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${props.isEnable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import VectorUtil from \"./vectorUtil\";\r\n\r\nnamespace Particle {\r\n\r\n    export type Props = {\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        limit: number;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n    }\r\n\r\n    export class Instance {\r\n\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        prevPos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        frame: number;\r\n        limit: number;\r\n        isLive: boolean;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n\r\n        constructor(props: Props) {\r\n            this.owner = props.owner;\r\n            this.pos = props.pos;\r\n            this.prevPos = props.pos;\r\n            this.vec = props.vec;\r\n\r\n            this.frame = 0;\r\n            this.limit = props.limit;\r\n            this.isLive = true;\r\n            this.drawer = props.drawer;\r\n            this.extend = props.extend;\r\n        }\r\n\r\n        update = () => {\r\n\r\n            this.pos.x += this.vec.xy.x;\r\n            this.pos.y += this.vec.xy.y;\r\n\r\n            this.extend.forEach(callback => callback(this));\r\n\r\n            if (this.frame === this.limit) {\r\n                this.isLive = false;\r\n            }\r\n            this.frame++;\r\n        }\r\n\r\n        draw = (ctx: CanvasRenderingContext2D) => {\r\n            this.drawer(this, ctx);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Particle;","import Particle from \"./particle\";\r\n\r\nnamespace DrawUtil {\r\n\r\n    export type Rgba = {\r\n        r: number;\r\n        g: number;\r\n        b: number;\r\n        a: number;\r\n    }\r\n\r\n    export type ColorStop = {\r\n        offset: number;\r\n        color: string;\r\n    }\r\n\r\n    export type DrawerParam = {\r\n        color: string;\r\n        radius?: number;\r\n        disappearStartRate?: number;\r\n        shrinkStartRate?: number;\r\n        flashAppearFrame?: number;\r\n        flashHideFrame?: number;\r\n    }\r\n\r\n    export const createGradDrawer = (param: DrawerParam) => {\r\n\r\n        /** 基準となる半径 */\r\n        const radiusBase = param.radius ?? 30;\r\n        return (self: Particle.Instance, ctx: CanvasRenderingContext2D) => {\r\n            if (param.flashAppearFrame != undefined) {\r\n                const appearFrame = param.flashAppearFrame;\r\n                const hideFrame = (param.flashHideFrame as number);\r\n                const unitFrame = appearFrame + hideFrame;\r\n                if ((self.frame % unitFrame) >= appearFrame) return;\r\n            }\r\n\r\n            let radius = radiusBase;\r\n            if (param.shrinkStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.shrinkStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    const rate = (limit - frame) / limit;\r\n                    radius *= rate;\r\n                }\r\n            }\r\n\r\n            const x = self.pos.x;\r\n            const y = self.pos.y;\r\n            const g = ctx.createRadialGradient(x, y, 1, x, y, radius);\r\n\r\n            const grads: ColorStop[] = [];\r\n            const rgba = convertRgbaFromColorCode(param.color) ?? { r: 255, g: 255, b: 255, a: 255 };\r\n            grads.push({ offset: 0, color: convertColorCodeFromRgba({ r: 255, g: 255, b: 255, a: Math.floor(rgba.a * 0.9) }) });\r\n            grads.push({ offset: 0.2, color: convertColorCodeFromRgba({ ...rgba, a: Math.floor(rgba.a * 0.15) }) });\r\n            grads.push({ offset: 1, color: convertColorCodeFromRgba({ ...rgba, a: 1 }) });\r\n\r\n            grads.forEach(grad => {\r\n                g.addColorStop(grad.offset, grad.color);\r\n            });\r\n\r\n            ctx.globalAlpha = 1;\r\n            if (param.disappearStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.disappearStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    ctx.globalAlpha = (limit - frame) / limit;\r\n                }\r\n            }\r\n\r\n            ctx.fillStyle = g;\r\n            // ctx.fillStyle = param.color;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n        };\r\n    }\r\n\r\n    export const convertRgbaFromColorCode = (code: string): Rgba | null => {\r\n        const div = code.split('#');\r\n        if (div.length !== 2 || div[1].length < 6) return null;\r\n\r\n        const value = div[1];\r\n        const r = Number.parseInt(value.substring(0, 2), 16);\r\n        const g = Number.parseInt(value.substring(2, 4), 16);\r\n        const b = Number.parseInt(value.substring(4, 6), 16);\r\n        let a = 1;\r\n        if (value.length === 8) {\r\n            a = Number.parseInt(value.substring(6, 8), 16);\r\n        }\r\n        return { r, g, b, a };\r\n    }\r\n\r\n    export const convertColorCodeFromRgba = (rgba: Rgba): string => {\r\n        const r1 = (Math.floor(rgba.r));\r\n        const g1 = (Math.floor(rgba.g));\r\n        const b1 = (Math.floor(rgba.b));\r\n        const a1 = (Math.floor(rgba.a));\r\n        const r = ('00' + r1.toString(16)).slice(-2);\r\n        const g = ('00' + g1.toString(16)).slice(-2);\r\n        const b = ('00' + b1.toString(16)).slice(-2);\r\n        const a = ('00' + a1.toString(16)).slice(-2);\r\n        return `#${r}${g}${b}${a}`;\r\n    }\r\n\r\n    export const toWhite = (color: string, rate: number): string => {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport default DrawUtil;","namespace VectorUtil {\r\n\r\n    export type XY = {\r\n        x: number, y: number;\r\n    }\r\n\r\n    export class Vector {\r\n\r\n        xy: XY;\r\n        rad: number;\r\n        len: number;\r\n\r\n        constructor(xy: XY) {\r\n            this.xy = xy;\r\n            this.rad = 0;\r\n            this.len = 0;\r\n            this.syncFromXY();\r\n        }\r\n\r\n        syncFromXY = () => {\r\n            this.len = Math.sqrt(this.xy.x * this.xy.x + this.xy.y * this.xy.y);\r\n            this.rad = Math.atan2(this.xy.y, this.xy.x);\r\n        }\r\n\r\n        syncFromRad = () => {\r\n            this.xy.x = Math.cos(this.rad) * this.len;\r\n            this.xy.y = Math.sin(this.rad) * this.len;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default VectorUtil;","\r\nnamespace ParamUtil {\r\n    export enum VisualParamType {\r\n        RADIUS = 'radius',\r\n        COLOR_R = 'color_r',\r\n        COLOR_G = 'color_g',\r\n        COLOR_B = 'color_b',\r\n        COLOR_A = 'color_a',\r\n        THICKNESS = 'thickness',\r\n    }\r\n    export const VisualParams = Object.values(VisualParamType);\r\n    export type VisualParam = typeof VisualParams[number];\r\n\r\n    export enum BehaviorParamType {\r\n        LIMIT = 'limit',\r\n        POS_X = 'pos_x',\r\n        POS_Y = 'pos_y',\r\n        VEC_X = 'vec_x',\r\n        VEC_Y = 'vec_y',\r\n        VEC_RAD = 'vec_radian',\r\n        VEC_LEN = 'vec_length',\r\n    }\r\n    export const BehaviorParams = Object.values(BehaviorParamType);\r\n    export type BehaviorParam = typeof BehaviorParams[number];\r\n\r\n    export enum SelfParamType {\r\n        FRAME = 'self_frame',\r\n        LIMIT = 'self_limit',\r\n        POS_X = 'self_pos_x',\r\n        POS_Y = 'self_pos_y',\r\n        VEC_X = 'self_vec_x',\r\n        VEC_Y = 'self_vec_y',\r\n        VEC_RAD = 'self_vec_radian',\r\n        VEC_LEN = 'self_vec_length',\r\n    }\r\n    export const SelfParams = Object.values(SelfParamType);\r\n    export type SelfParam = typeof SelfParams[number];\r\n\r\n    export enum ExtendParamType {\r\n        LOOP_COUNT = 'loop_count',\r\n        LOOP_ITERATE = 'loop_iterate',\r\n        INVOKE = 'invoke',\r\n    }\r\n    export const ExtendParams = Object.values(ExtendParamType);\r\n    export type ExtendParam = typeof ExtendParams[number];\r\n\r\n    export enum EffectParamType {\r\n        DISAPPEAR_START = 'disappear_start',\r\n        SHRINK_START = 'shrink_start',\r\n        FLASH_APPEAR_FRAME = 'flash_appear_frame',\r\n        FLASH_HIDE_FRAME = 'flash_hide_frame',\r\n    }\r\n    export const EffectParams = Object.values(EffectParamType);\r\n    export type EffectParam = typeof EffectParams[number];\r\n\r\n    export enum ModulateParamType {\r\n        DECAY_RATE = 'decay_rate',\r\n        DECAY_LIMIT = 'decay_limit',\r\n        GRAVITY_VAL = 'gravity_val',\r\n        GRAVITY_LIMIT = 'gravity_limit',\r\n    }\r\n    export const ModulateParams = Object.values(ModulateParamType);\r\n    export type ModulateParam = typeof ModulateParams[number];\r\n\r\n    export enum ConstantType {\r\n        SCREEN_WIDTH = 'screen_width',\r\n        SCREEN_HEIGHT = 'screen_height',\r\n        PI = 'pi',\r\n        RADIAN_ROUND = 'radian_round',\r\n    }\r\n    export const Constants = Object.values(ConstantType);\r\n    export type Constant = typeof Constants[number];\r\n\r\n}\r\n\r\nexport default ParamUtil;","import Particle from \"../../graphic/particle\";\r\n\r\nnamespace ModulateBuilder {\r\n\r\n    type ModulateParam = {\r\n        decayRate?: number;\r\n        decayLimit?: number;\r\n        gravity?: number;\r\n        gravityLimit?: number;\r\n    }\r\n\r\n    export const build = (extendList: ((self: Particle.Instance) => void)[], param: ModulateParam) => {\r\n        \r\n        // 減衰メソッド\r\n        if (param.decayRate != undefined && param.decayLimit != undefined) {\r\n            const decayLimit = param.decayLimit;\r\n            const decayRate = param.decayRate;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.len > decayLimit) {\r\n                    self.vec.len = self.vec.len * decayRate;\r\n                    self.vec.syncFromRad();\r\n                }\r\n            });\r\n        }\r\n        // 重力メソッド\r\n        if (param.gravity != undefined && param.gravityLimit != undefined) {\r\n            const gravityLimit = param.gravityLimit;\r\n            const gravity = param.gravity;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.xy.y < gravityLimit) {\r\n                    self.vec.xy.y += gravity;\r\n                    self.vec.syncFromXY();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModulateBuilder;","import DrawUtil from \"../../graphic/drawUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport ParamUtil from \"../factory/util/paramUtil\";\r\nimport ModulateBuilder from \"./modulateBuilder\";\r\n\r\nnamespace PreviewUtil {\r\n\r\n    export const SCREEN_WIDTH = 550;\r\n    export const SCREEN_HEIGHT = 550;\r\n\r\n    export type ValueMap = {\r\n        name: string;\r\n        value: number;\r\n    }\r\n\r\n    export const buildLogicProps = (\r\n        owner: Particle.Instance[],\r\n        origin: LogicUtil.NodeLogicItem,\r\n        rootData: LogicUtil.WrapElement,\r\n        sends: ValueMap[]\r\n    ): Particle.Props => {\r\n\r\n        /**\r\n         * ディペンドするロジック要素を識別名から探して返す。\r\n         * @param name ロジックの識別名\r\n         * @returns ロジック要素\r\n         */\r\n        const searchDependLogic = (name: string): LogicUtil.NodeLogicItem | null => {\r\n            const mng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n            const wrap = mng.defs.find(def => (def.data as LogicUtil.NodeLogicItem).name === name);\r\n            if (wrap == undefined) return null;\r\n            return wrap.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        /**\r\n         * 再帰的にパーティクルを生成する。\r\n         * @param cur ルートとなるロジック要素\r\n         * @param sends 親要素から送られてきたフィールド\r\n         * @returns パーティクルのプロパティ\r\n         */\r\n        const createParticleRec = (cur: LogicUtil.NodeLogicItem, sends: ValueMap[]): Particle.Props => {\r\n            let valueMapList: ValueMap[] = sends.concat(ConstantValueMap);\r\n\r\n\r\n            // フィールドのパラメータを取得\r\n            const fieldMng = searchElement('field-mng', cur.mngs);\r\n            if (fieldMng != null) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                    valueMapList.push({ name: paramItem.name, value });\r\n                });\r\n            }\r\n\r\n            const visualParams = (searchElement('visual-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n            const behaviorParams = (searchElement('behavior-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n\r\n            const getVisualParam = (name: string) => {\r\n                return convertParamsToValue(name, visualParams, valueMapList);\r\n            }\r\n            const getBehaviorParam = (name: string) => {\r\n                return convertParamsToValue(name, behaviorParams, valueMapList);\r\n            }\r\n\r\n            // Behaviorのパラメータを取得\r\n            const limit = Math.floor(getBehaviorParam(ParamUtil.BehaviorParamType.LIMIT) as number);\r\n            const pos = {\r\n                x: getBehaviorParam(ParamUtil.BehaviorParamType.POS_X) as number,\r\n                y: getBehaviorParam(ParamUtil.BehaviorParamType.POS_Y) as number\r\n            };\r\n            const vec = new VectorUtil.Vector({ x: 0, y: 0 });\r\n            const isVectorMethod = behaviorParams.find(param => param.name === ParamUtil.BehaviorParamType.VEC_X) != undefined;\r\n            if (isVectorMethod) {\r\n                vec.xy.x = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_X) as number;\r\n                vec.xy.y = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_Y) as number;\r\n                vec.syncFromXY();\r\n            } else {\r\n                vec.rad = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_RAD) as number;\r\n                vec.len = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_LEN) as number;\r\n                vec.syncFromRad();\r\n            }\r\n\r\n            /**\r\n             * 追加動作（子要素、エフェクト、モデュレート）\r\n             */\r\n            const extendList: ((self: Particle.Instance) => void)[] = [];\r\n\r\n            // 子要素を生成する\r\n            const connectMng = searchElement('inherit-mng', cur.mngs);\r\n            if (connectMng != null) {\r\n\r\n                // パーティクル情報のフィールド追加\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_X, value: pos.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_Y, value: pos.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_RAD, value: vec.rad });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_LEN, value: vec.len });\r\n\r\n                const connects = (connectMng.data as LogicUtil.NodeConnectManager).inherits;\r\n\r\n                connects.forEach(connect => {\r\n                    const connector = connect.data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.disable ?? false) return;\r\n\r\n                    const logicItem = connector.method === 'create' ?\r\n                        searchElement('inherit-logic', connector.mngs)?.data as LogicUtil.NodeLogicItem :\r\n                        searchDependLogic(connector.depend);\r\n\r\n                    if (logicItem != null) {\r\n\r\n                        extendList.push((self: Particle.Instance) => {\r\n\r\n                            const addValueMap = (item: ValueMap) => {\r\n                                const map = valueMapList.find(map => map.name === item.name);\r\n                                if (map != undefined) map.value = item.value;\r\n                                else valueMapList.push(item);\r\n                            }\r\n                            addValueMap({ name: ParamUtil.SelfParamType.FRAME, value: self.frame });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.LIMIT, value: self.limit });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_X, value: self.pos.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_Y, value: self.pos.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_X, value: self.vec.xy.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_Y, value: self.vec.xy.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_RAD, value: self.vec.rad });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_LEN, value: self.vec.len });\r\n\r\n                            // Inherit配下のフィールドのパラメータを取得\r\n                            const itrfldValueMap: ValueMap[] = [];\r\n                            const fieldMng = searchElement('inhfld-mng', connector.mngs);\r\n                            if (fieldMng != null) {\r\n                                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                                    itrfldValueMap.push({ name: paramItem.name, value });\r\n                                });\r\n                            }\r\n\r\n                            let loopCnt = 1;\r\n                            const extendItem = searchElement('extend-mng', connector.mngs) as LogicUtil.WrapElement;\r\n                            const extendParams = (extendItem.data as LogicUtil.NodeParamManager).params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                            const loopCntVal = convertParamsToValue(ParamUtil.ExtendParamType.LOOP_COUNT, extendParams, valueMapList.concat(itrfldValueMap));\r\n\r\n                            // 派生条件\r\n                            const isInvoke = convertParamsToBoolean(ParamUtil.ExtendParamType.INVOKE, extendParams, valueMapList) ?? true;\r\n\r\n                            // 条件を満たさない場合、以下の処理（パーティクルの生成）を行わない\r\n                            if (!isInvoke) return;\r\n\r\n                            // イテレータを利用している場合\r\n                            if (loopCntVal != undefined) {\r\n                                loopCnt = loopCntVal;\r\n                            }\r\n\r\n                            for (let i = 0; i < loopCnt; i++) {\r\n\r\n                                // イテレータ関連のパラメータを追加\r\n                                const iterateValueMap: ValueMap[] = [\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_COUNT, value: loopCnt },\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_ITERATE, value: i }\r\n                                ];\r\n\r\n                                const sendItem = searchElement('send-mng', connector.mngs)?.data as LogicUtil.NodeParamManager;\r\n                                const params = sendItem.params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                                const sendValueMapList: ValueMap[] = params.map(item => {\r\n                                    return { name: item.name, value: convertParamsToValue(item.name, params, valueMapList.concat(itrfldValueMap).concat(iterateValueMap)) ?? 0 }\r\n                                });\r\n\r\n                                const props = createParticleRec(\r\n                                    logicItem,\r\n                                    sendValueMapList\r\n                                );\r\n                                self.owner.push(new Particle.Instance(props));\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            // モデュレート（動きの変化）を付与\r\n            ModulateBuilder.build(extendList, {\r\n                decayLimit: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_LIMIT),\r\n                decayRate: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_RATE),\r\n                gravity: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_VAL),\r\n                gravityLimit: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_LIMIT),\r\n            });\r\n\r\n            // Visualのパラメータを取得\r\n            const radius = getVisualParam(ParamUtil.VisualParamType.RADIUS);\r\n            const colorR = getVisualParam(ParamUtil.VisualParamType.COLOR_R);\r\n            const colorG = getVisualParam(ParamUtil.VisualParamType.COLOR_G);\r\n            const colorB = getVisualParam(ParamUtil.VisualParamType.COLOR_B);\r\n            const colorA = getVisualParam(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // エフェクト付与\r\n            const disappearStart = getVisualParam(ParamUtil.EffectParamType.DISAPPEAR_START);\r\n            const shrinkStart = getVisualParam(ParamUtil.EffectParamType.SHRINK_START);\r\n            const flashAppearFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME);\r\n            const flashHideFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_HIDE_FRAME);\r\n\r\n            let drawer: (self: Particle.Instance, ctx: CanvasRenderingContext2D) => void = () => { };\r\n            if (radius != undefined) {\r\n                drawer = DrawUtil.createGradDrawer({\r\n                    radius: radius,\r\n                    color: DrawUtil.convertColorCodeFromRgba({\r\n                        r: colorR as number,\r\n                        g: colorG as number,\r\n                        b: colorB as number,\r\n                        a: colorA as number,\r\n                    }),\r\n                    disappearStartRate: disappearStart,\r\n                    shrinkStartRate: shrinkStart,\r\n                    flashAppearFrame,\r\n                    flashHideFrame,\r\n                });\r\n            }\r\n\r\n            return {\r\n                owner, pos, vec,\r\n                limit, drawer,\r\n                extend: extendList\r\n            };\r\n        }\r\n\r\n        return createParticleRec(origin, sends);\r\n    }\r\n\r\n    const searchElement = (type: LogicUtil.NodeType, warpList: LogicUtil.WrapElement[]) => {\r\n        return warpList.find(wrap => wrap.type === type) ?? null;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param valueMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToValue = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): number | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToValue(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToValue = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): number => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(ret);\r\n        return ret;\r\n    }\r\n\r\n    export const convertParamsToBoolean = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): boolean | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToBoolean(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToBoolean = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): boolean => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item, i) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            else if (item === '=') str = '==';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(formulaStr);\r\n        return ret;\r\n    }\r\n\r\n    export const ConstantValueMap: ValueMap[] = [\r\n        { name: ParamUtil.ConstantType.SCREEN_WIDTH, value: SCREEN_WIDTH },\r\n        { name: ParamUtil.ConstantType.SCREEN_HEIGHT, value: SCREEN_HEIGHT },\r\n        { name: ParamUtil.ConstantType.PI, value: 3.14159265359 },\r\n        { name: ParamUtil.ConstantType.RADIAN_ROUND, value: 3.14159265359 * 2 }\r\n    ];\r\n}\r\n\r\nexport default PreviewUtil;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\r\n\r\n    export type Validate = {\r\n        checker: (value: string) => boolean;\r\n        errorType: ErrorType;\r\n        message?: string;\r\n    }\r\n\r\n    /**\r\n     * 必須チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkRequired = (str: string) => {\r\n        return str.length > 0;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length === 0 || (str.length >= min && str.length <= max);\r\n    }\r\n\r\n    /**\r\n     * 半角英数時チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        return checkIncludesChars(str, list);\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列で構成されているかチェック\r\n     * @param str 検証する文字列\r\n     * @param list 入力を許す対象文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkIncludesChars = (str: string, list: string) => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            const ch = str.charAt(i);\r\n            if (list.indexOf(ch) === -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列が数値に変換できるかチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumber = (str: string) => {\r\n        return !isNaN(Number(str));\r\n    }\r\n\r\n    /**\r\n     * 数値の値の範囲をチェック\r\n     * @param str 検証する文字列\r\n     * @param min 下限\r\n     * @param max 上限\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumberRange = (str: string, min: number, max: number) => {\r\n        if (!isNaN(Number(str))) {\r\n            const num = Number(str);\r\n            return num >= min && num <= max;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default ValidateUtil;\r\n","import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        // parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        const ref = useRef({} as HTMLDivElement);\r\n\r\n        /**\r\n         * データを元に再帰的に以下のツリーを構成する。\r\n         * @returns ツリー\r\n         */\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        useEffect(() => {\r\n            if (focusNode != null && focusNode.parent != null) {\r\n                focusNode.parent.isOpen = true;\r\n            }\r\n        }, [focusNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            // console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    // 親判定\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    // 兄弟判定\r\n                    if (result === false && focusNode != null && focusNode.parent != null) {\r\n                        result = focusNode.parent.children.find(node => node == element) != undefined;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        width={ref.current.scrollWidth}\r\n                        isActive={isCurrent}\r\n                        isRelation={!isDisable && isRelationNode()}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap\r\n                ref={ref}\r\n                isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #374a54;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #1f3642;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n    isRelation: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #459cff46;\r\n    `}\r\n    opacity: 0.3;\r\n    ${props => !props.isRelation ? '' : css`\r\n        background-color: #ffffff28;\r\n        opacity: 1;\r\n    `}\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #b4d9dd83;\r\n        opacity: 1;\r\n    `}\r\n    width: ${props => props.width}px;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import { useContext, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nnamespace ModifyOperations {\r\n\r\n    export type Props = {\r\n        mappingForm: () => void;\r\n        checkableFields: FormUtil.CheckableValue[];\r\n        isInputOK?: boolean;\r\n        firstRegist: () => void;\r\n        modifyRegist: () => void;\r\n    }\r\n\r\n    export const Component = (props: Props) => {\r\n        const { node, isModify, setModify, removeSelf } = useContext(FactoryTreeContext);\r\n\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n        const isComplete = FormUtil.isCompleteCheck(props.checkableFields);\r\n\r\n        return (<>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: isModify,\r\n                        callback: () => {\r\n                            if (wrap.data == null) {\r\n                                removeSelf();\r\n                            } else {\r\n                                props.mappingForm();\r\n                            }\r\n                            setModify(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !isModify || (props.isInputOK ?? isComplete),\r\n                        callback: () => {\r\n                            if (!isModify) {\r\n                                setModify(true);\r\n                            } else {\r\n                                if (wrap.data == null) {\r\n                                    props.firstRegist();\r\n                                } else {\r\n                                    props.modifyRegist();\r\n                                }\r\n                                setModify(false);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default ModifyOperations;","import { type } from \"os\";\r\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport Common from \"../common\";\r\nimport PreviewLogicFrame from \"../preview/previewLogicFrame\";\r\nimport LogicElementUtil from \"./util/logicElementUtil\";\r\nimport LogicUtil from \"./util/logicUtil\";\r\n\r\nexport const FactoryTreeContext = createContext({} as LogicUtil.DetailArgs);\r\n\r\nconst LogicMainteTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    // const [rootData, setRootData] = useState(LogicElementUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    // const [treeDisable, setTreeDisable] = useState(false);\r\n    const [isModify, setModify] = useState<boolean>(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    const rootData = store.libraryData as LogicUtil.WrapElement;\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: LogicUtil.getChildrenDataNode(rootData)\r\n        }\r\n    }, [rootData]);\r\n\r\n    // useEffect(()=> {\r\n    //     store.logicData = rootData;\r\n    //     setStore({...store});\r\n    // }, [rootData]);\r\n\r\n    const setRootData = (rootData: LogicUtil.WrapElement) => {\r\n        store.libraryData = rootData;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const masterNode = useMemo(() => {\r\n        let cur: TreeUtil.ElementNode | null = focusNode;\r\n        while (cur != null) {\r\n            const type = (cur.data as LogicUtil.WrapElement).type;\r\n            if (['logic-item', 'seed-item'].includes(type)) return cur;\r\n            cur = cur.parent;\r\n        };\r\n        return null;\r\n    }, [focusNode]);\r\n\r\n    /**\r\n     * プレビューダイアログを表示する\r\n     */\r\n    const openPreviewDialog = () => {\r\n        if (masterNode == null) return;\r\n        store.system.dialog = (\r\n            <PreviewLogicFrame.Component\r\n                master={masterNode.data as LogicUtil.WrapElement}\r\n                rootData={rootData}\r\n                closeButtonAction={() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n            onKeyDown={(e) => {\r\n                // console.log(e.key);\r\n                if (isModify || focusNode == null) return;\r\n                switch (e.key) {\r\n                    case 'ArrowRight': {\r\n                        if (focusNode.children.length > 0) {\r\n                            if (!focusNode.isOpen) focusNode.isOpen = true;\r\n                            else setFocusNode(focusNode.children[0]);\r\n                            setInvalidate({});\r\n                        }\r\n                    } break;\r\n                    case 'ArrowLeft': {\r\n                        if (focusNode.isOpen) focusNode.isOpen = false;\r\n                        else {\r\n                            if (focusNode.parent != null) setFocusNode(focusNode.parent);\r\n                        }\r\n                        setInvalidate({});\r\n                    } break;\r\n                    case 'ArrowUp': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n) {\r\n                                    if (i === 0) {\r\n                                        setFocusNode(focusNode.parent);\r\n                                        setInvalidate({});\r\n                                    } else {\r\n                                        setFocusNode(list[i - 1]);\r\n                                        setInvalidate({});\r\n                                    }\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case 'ArrowDown': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n && i < list.length - 1) {\r\n                                    setFocusNode(list[i + 1]);\r\n                                    setInvalidate({});\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case ' ': {\r\n                        if (masterNode != null) openPreviewDialog();\r\n                    } break;\r\n                }\r\n            }}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview',\r\n                                isEnable: masterNode != null,\r\n                                callback: openPreviewDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return LogicUtil.getNodeDisplayJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={isModify}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <_DetailDiv>\r\n                    <_DetailHeader>\r\n                        <_DetailHeaderLabel>{LogicUtil.getTypeName(focusNode)}</_DetailHeaderLabel>\r\n                    </_DetailHeader>\r\n                    <FactoryTreeContext.Provider value={{\r\n                        rootData,\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        isModify,\r\n                        setModify,\r\n                        // treeDisable,\r\n                        setRootData,\r\n                        removeSelf: () => {\r\n                            const node = focusNode as TreeUtil.ElementNode;\r\n                            let index = -1;\r\n                            node.parent?.children.forEach((n, i) => {\r\n                                if (n == node) index = i;\r\n                            });\r\n                            node.parent?.children.splice(index, 1);\r\n                            const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n                            const listName = LogicElementUtil.getListParamName(parentWrap.type);\r\n                            if (listName == null) return;\r\n                            const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n                            list.splice(index, 1);\r\n                            setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                            setInvalidate({});\r\n                        }\r\n                    }}>\r\n                        <_DetailMainDiv>{LogicUtil.getDetailComponent(focusNode)}</_DetailMainDiv>\r\n                    </FactoryTreeContext.Provider>\r\n                </_DetailDiv>\r\n            </_PropsDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default LogicMainteTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #6c8186;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d87b;\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _TreeHeadHalf = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    background-color: #7fbdb47a;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #9fa9b6;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _DetailDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\nconst _DetailHeader = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #b4b29e; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _DetailHeaderLabel = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #a10000;\r\n    /* background-color: #bbd0d3; */\r\n    border: solid 1px #a10000;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 20px);\r\n    margin: 5px 0 0 10px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DetailMainDiv = styled.div`\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 44px);\r\n    margin: 0 0 0 4px;\r\n    background-color: #cfd3cc;\r\n    border: solid 1px #0026a1;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorArgumentMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'argument-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentMng;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ParamUtil from \"../util/paramUtil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\n\r\nnamespace SendTemplateDialog {\r\n\r\n    const FRAME_WIDTH = 450;\r\n    const FRAME_HEIGHT = 160;\r\n    const COMPONENT_WIDTH = 296;\r\n\r\n    export const ConnectParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, input property name!';\r\n\r\n        /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n        const paramNameList = useMemo(() => {\r\n            const owner = (LogicElementUtil.getInnerWrap(props.node.parent?.data as LogicUtil.WrapElement, 'inherit-logic') as LogicUtil.WrapElement).data;\r\n            return LogicElementUtil.getParamNameList(owner);\r\n        }, [props.node]);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    // Sendにパラメータを追加\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: xName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }] }\r\n                    ), props.node);\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: yName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }] }\r\n                    ), props.node);\r\n\r\n                    // 派生ロジックに引数を追加\r\n                    const logicNode = LogicElementUtil.getInnerNode(props.node.parent as TreeUtil.ElementNode, 'inherit-logic') as TreeUtil.ElementNode;\r\n                    const hasArgNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') != undefined;\r\n                    if (!hasArgNode) {\r\n                        LogicElementUtil.insertChild({\r\n                            type: 'argument-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeArgumentManager\r\n                        }, logicNode, 0);\r\n                    }\r\n                    const argNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') as TreeUtil.ElementNode;\r\n\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: xName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: yName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n\r\n                    // 派生ロジックの座標に引数を設定\r\n                    const behaviorNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'behavior-mng') as TreeUtil.ElementNode;\r\n                    const setParamValue = (prpName: string, argName: string) => {\r\n                        const params = behaviorNode.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                        const targetParam = params.find(param => param.name === prpName) as LogicUtil.NodeParamItem;\r\n                        targetParam.formulaItems = ['var'];\r\n                        targetParam.values = [{ type: 'argument', value: argName }];\r\n                    }\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_X, xName.value);\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_Y, yName.value);\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (yName.value !== '') list.push(yName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[yName]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (xName.value !== '') list.push(xName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[xName]}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n\r\n    export const SetParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, select property name!';\r\n\r\n        const list = useMemo(() => {\r\n            return props.node.children.map(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                return (wrap.data as LogicUtil.NodeParamItem).name;\r\n            });\r\n        }, []);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    const paramList = props.node.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                    const xParam = paramList.find(param => param.name === xName.value) as LogicUtil.NodeParamItem;\r\n                    const yParam = paramList.find(param => param.name === yName.value) as LogicUtil.NodeParamItem;\r\n                    xParam.formulaItems = ['var'];\r\n                    xParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }];\r\n                    yParam.formulaItems = ['var'];\r\n                    yParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }];\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== yName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== xName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SendTemplateDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #d0e7e718;\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport GloballDialog from \"../../../../dialog/globalDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorArgumentItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const logicNode = node.parent?.parent as TreeUtil.ElementNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n        setName({ ...name, value: param.name });\r\n        setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, argType]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeArgumentItem = {\r\n                    name: name.value,\r\n                    valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n                syncArgumentAdd(logicNode, name.value);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(logicNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = reservedList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeArgumentItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'color' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getArgumentRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    // DependしているInheritのSendパラメータを同期する\r\n                                    syncArgumentDel(logicNode, name.value);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentItem;\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param node 引数のノード\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param logicNode ロジックノード\r\n*/\r\nconst syncArgumentName = (logicNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n    const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n    if (fieldMng != undefined) {\r\n        syncFormula((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n    }\r\n    const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n    if (visualMng != undefined) {\r\n        syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n    if (behaviorMng != undefined) {\r\n        syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n    if (inhMng != undefined) {\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n            // Inherit配下のField要素のチェック\r\n            if (inhfld != null) {\r\n                syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n            // Extend要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            // Send要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        });\r\n    }\r\n\r\n    const syncParamName = (params: LogicUtil.WrapElement[]) => {\r\n        params.forEach(wrap => {\r\n            const item = wrap.data as LogicUtil.NodeParamItem;\r\n            if (item.name === prevName) {\r\n                item.name = newName;\r\n            }\r\n        });\r\n    }\r\n    if (wrap.type === 'logic-item') {\r\n\r\n        // dependしている箇所を全て反映するために再帰で洗う\r\n        const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n            const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n            if (inhMng == undefined) return;\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    const inhLogic = LogicElementUtil.getInnerWrapFixed(inh, 'inherit-logic').data as LogicUtil.NodeLogicItem;\r\n                    runRec(inhLogic);\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    const sendMng = LogicElementUtil.getInnerWrapFixed(inh, 'send-mng').data as LogicUtil.NodeParamManager;\r\n                    syncParamName(sendMng.params);\r\n                }\r\n            });\r\n        }\r\n        // ロジックを全て調査する\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(logic => {\r\n            runRec((logic.data as LogicUtil.WrapElement).data);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        const root = (rootNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeRoot;\r\n        const defs = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        console.log(defs.length);\r\n        defs.forEach(wrap => {\r\n            const interfaceWrap = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng');\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(interfaceWrap, 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            syncParamName(sendMng.params);\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const connWrap = logicNode.parent?.data as LogicUtil.WrapElement;\r\n        const sendMng = LogicElementUtil.getInnerWrapFixed(connWrap, 'send-mng').data as LogicUtil.NodeParamManager;\r\n        syncParamName(sendMng.params);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の更新に伴い、参照先のSend管理に処理（callback）を行う\r\n * @param logicNode ロジックノード\r\n * @param callback 処理\r\n */\r\nconst syncArgumentCallback = (\r\n    logicNode: TreeUtil.ElementNode,\r\n    callback: (sendNode: TreeUtil.ElementNode) => void\r\n) => {\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n\r\n    if (wrap.type === 'logic-item') {\r\n        const runRec = (logicNode: TreeUtil.ElementNode) => {\r\n            const inhMngNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'inherit-mng');\r\n            if (inhMngNode == undefined) return;\r\n            inhMngNode.children.forEach(child => {\r\n                const conn = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    runRec(LogicElementUtil.getInnerNodeFixed(child, 'inherit-logic'));\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    callback(LogicElementUtil.getInnerNodeFixed(child, 'send-mng'));\r\n                }\r\n            });\r\n        }\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(child => {\r\n            runRec(child);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        rootNode.children[0].children.forEach(seedNode => {\r\n            const interfaceNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'interface-mng');\r\n            const sendNode = LogicElementUtil.getInnerNodeFixed(interfaceNode, 'seedsend-mng');\r\n            const seed = (seedNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n            if (seed.entry === logicItem.name) {\r\n                callback(sendNode);\r\n            }\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const sendNode = LogicElementUtil.getInnerNodeFixed(logicNode.parent as TreeUtil.ElementNode, 'send-mng');\r\n        callback(sendNode);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentAdd = (logicNode: TreeUtil.ElementNode, newArgName: string) => {\r\n    const addNewParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n            { name: newArgName, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n        );\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        sendMng.params.push(paramWrap);\r\n        sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n    }\r\n    syncArgumentCallback(logicNode, addNewParam);\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentDel = (logicNode: TreeUtil.ElementNode, delArgName: string) => {\r\n    const delArgParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        let delIndex = -1;\r\n        sendMng.params.some((param, i) => {\r\n            if ((param.data as LogicUtil.NodeParamItem).name == delArgName) {\r\n                delIndex = i;\r\n                return 1;\r\n            }\r\n        });\r\n        sendMng.params.splice(delIndex, 1);\r\n        sendNode.children.splice(delIndex, 1);\r\n    }\r\n    syncArgumentCallback(logicNode, delArgParam);\r\n}","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Seed',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seed-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedManager).defs.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorLogicMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Logic',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'logic-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\n\r\nconst EditorLogicItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [isConnect, hasArgNode, hasFieldNode, hasConnectNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        return [\r\n            parentType === 'connector',\r\n            list.includes('argument-mng'),\r\n            list.includes('field-mng'),\r\n            list.includes('inherit-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        if (!isConnect) {\r\n            const param = wrap.data as LogicUtil.NodeLogicItem;\r\n            setName({ ...name, value: param.name });\r\n        }\r\n    };\r\n\r\n    /** 既存のロジック名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => {\r\n        // インヘリットの場合、名前を持たないため取得しない\r\n        if (wrap.type === 'inherit-logic') return [];\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node, isConnect]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 引数要素の有無を判定\r\n     */\r\n    const hasArgument = () => {\r\n        const argumentNode = LogicElementUtil.getInnerNode(node, 'argument-mng');\r\n        if (argumentNode == null) return false;\r\n        return argumentNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'field-mng');\r\n        if (fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 派生要素の有無を判定\r\n     */\r\n    const hasInherit = () => {\r\n        const inheritNode = LogicElementUtil.getInnerNode(node, 'inherit-mng');\r\n        if (inheritNode == null) return false;\r\n        return inheritNode.children.length > 0;\r\n    }\r\n\r\n    return (<>\r\n        {isConnect ? <></> : (<>\r\n            <ModifyOperations.Component\r\n                mappingForm={mappingForm}\r\n                checkableFields={[name]}\r\n                firstRegist={() => {\r\n                    const element: LogicUtil.NodeLogicItem = {\r\n                        name: name.value,\r\n                        mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                    };\r\n                    element.name = name.value;\r\n                    wrap.data = element;\r\n\r\n                    element.mngs.forEach(mng => {\r\n                        const newNode = TreeUtil.createNode(mng, node);\r\n                        const data = (newNode.data as LogicUtil.WrapElement).data;\r\n                        (data as LogicUtil.NodeParamManager).params.forEach(param => {\r\n                            newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                        });\r\n                        node.children.push(newNode);\r\n                    });\r\n                    invalidate();\r\n                    setStore({ ...store });\r\n                }}\r\n                modifyRegist={() => {\r\n                    const param = wrap.data as LogicUtil.NodeLogicItem;\r\n                    const prevName = param.name;\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n                    // 名前が変わった場合、参照箇所も修正する\r\n                    if (prevName !== param.name) {\r\n                        syncLogicName(node, prevName, param.name);\r\n                    }\r\n                }}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"param\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Name\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={200}\r\n                                isReadOnly={!isModify}\r\n                                checkable={name}\r\n                                setCheckable={setName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => !existNameList.includes(value),\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n        </>)}\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Argument'}\r\n                        width={300}\r\n                        isUse={hasArgNode}\r\n                        isEnable={!hasArgument()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasArgNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'argument-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as LogicUtil.NodeArgumentManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            if (hasArgNode) listPos++;\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'field-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Inherit'}\r\n                            width={300}\r\n                            isUse={hasConnectNode}\r\n                            isEnable={!hasInherit()}\r\n                            callback={() => {\r\n                                let listPos = 2;\r\n                                if (hasArgNode) listPos++;\r\n                                if (hasFieldNode) listPos++;\r\n                                toggleElement(\r\n                                    hasConnectNode,\r\n                                    listPos,\r\n                                    {\r\n                                        type: 'inherit-mng',\r\n                                        data: {\r\n                                            inherits: []\r\n                                        } as LogicUtil.NodeConnectManager\r\n                                    }\r\n                                );\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        {isConnect ? <></> : (\r\n            <FormUtil.BorderPanel\r\n                title=\"operation\"\r\n                isEnable={!isModify}\r\n                innerJsx={<>\r\n                    {LogicElementUtil.getReplicateButton(node, !isModify, 'logic', store, setStore, invalidate)}\r\n                    {/* <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Replicate',\r\n                                isEnable: !isModify,\r\n                                // isEnable: false,\r\n                                callback: () => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Replicate this logic.\"\r\n                                        buttons={[\r\n                                            {\r\n                                                label: 'Cancel',\r\n                                                callback: () => {\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                label: 'Enter',\r\n                                                callback: () => {\r\n                                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                                    const name = wrap.data[namable] as string;\r\n                                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                    // mappingForm();\r\n                                                    invalidate();\r\n                                                }\r\n                                            }\r\n                                        ]}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    /> */}\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Delete',\r\n                                callback: () => {\r\n                                    const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                    const refers = getLocgicRefers(node, param.name);\r\n                                    if (refers.length === 0) {\r\n                                        removeSelf();\r\n                                    } else {\r\n                                        store.system.dialog = <ConfirmDialog.Component\r\n                                            message={`[${param.name}] is referenced in the Inherit.\\n${refers}`}\r\n                                        />;\r\n                                        setStore({ ...store });\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                    {/* 並び順入れ替えボタン */}\r\n                    {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n                </>}\r\n            />\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicItem;\r\n\r\n/**\r\n * ロジックを参照しているInheritのリストを返す。\r\n * @param node 現在のノード\r\n * @param logicName ロジック名\r\n * @returns 参照Inheritリスト\r\n */\r\nexport const getLocgicRefers = (node: TreeUtil.ElementNode, logicName: string) => {\r\n\r\n    const refers: string[] = [];\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        refers.push(conn.id);\r\n    }\r\n    searchLogicReferInherit(node, logicName, callback);\r\n    return refers;\r\n}\r\n\r\n/**\r\n * ロジック名の変更に伴い、参照しているインヘリットを同期する\r\n * @param node ロジックノード\r\n */\r\nconst syncLogicName = (node: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        conn.depend = newName;\r\n    }\r\n    searchLogicReferInherit(node, prevName, callback);\r\n}\r\n\r\nconst searchLogicReferInherit = (\r\n    node: TreeUtil.ElementNode,\r\n    logicName: string,\r\n    callback: (conn: LogicUtil.NodeInheritConnector) => void\r\n) => {\r\n    const logicMngNode = node.parent as TreeUtil.ElementNode\r\n    const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng == undefined) return;\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n            if (conn.method === 'create') {\r\n                const inhLogic = LogicElementUtil.getInnerWrap(inh, 'inherit-logic');\r\n                runRec(inhLogic?.data);\r\n            } else {\r\n                if (conn.depend === logicName) {\r\n                    callback(conn);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    logicMngNode.children.forEach(logic => {\r\n        runRec((logic.data as LogicUtil.WrapElement).data);\r\n    });\r\n}","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype FormProps = {\r\n    inputType: FormUtil.CheckableValue;\r\n    value: FormUtil.CheckableValue;\r\n};\r\n\r\nenum Level {\r\n    FIELD = 0,\r\n    INITIAL,\r\n    INHERIT_FIELD,\r\n    INHERIT_EXTEND,\r\n    INHERIT_SEND\r\n}\r\n\r\nconst EditorParamItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    /** 名前 */\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    /** 式 */\r\n    const [formulaItems, setFormulaItems] = useState<string[]>([]);\r\n    /** 変数の入力フォーム */\r\n    const [varFormList, setVarFormList] = useState<FormProps[]>([]);\r\n    // const [formJsxList, setFaormJsxList] = useState<JSX.Element[]>([]);\r\n\r\n    const isField = wrap.type === 'field-item';\r\n    const isCondition = wrap.type === 'condition-item';\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        setName({ value: param.name, errors: [] });\r\n        setFormulaItems(param.formulaItems.slice());\r\n        setVarFormList(param.values.map(v => {\r\n            return {\r\n                inputType: { value: v.type, errors: [] },\r\n                value: { value: v.value, errors: [] }\r\n            }\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const level: Level = useMemo(() => {\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        switch (parentType) {\r\n            case 'field-mng': return Level.FIELD;\r\n            case 'visual-mng':\r\n            case 'behavior-mng': return Level.INITIAL;\r\n            case 'inhfld-mng': return Level.INHERIT_FIELD;\r\n            case 'extend-mng': return Level.INHERIT_EXTEND;\r\n            case 'send-mng': return Level.INHERIT_SEND;\r\n        }\r\n        return -1;\r\n    }, [node]);\r\n\r\n    /**\r\n     * 引数とフィールド変数のキーリストを取得する。\r\n     */\r\n    const [argumentList, fieldKeyList] = useMemo(() => {\r\n        let argumentList: string[] = [];\r\n        const fieldKeys: string[] = [];\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const targetTypes: LogicUtil.NodeType[] = ['field-mng', 'behavior-mng', 'visual-mng', 'inhfld-mng', 'send-mng', 'extend-mng'];\r\n        if (targetTypes.includes(parentType)) {\r\n            const getLogicNode = () => {\r\n                switch (parentType) {\r\n                    case 'field-mng':\r\n                    case 'visual-mng':\r\n                    case 'behavior-mng': return node.parent?.parent;\r\n                    case 'inhfld-mng':\r\n                    case 'send-mng':\r\n                    case 'extend-mng': return node?.parent?.parent?.parent?.parent;\r\n                }\r\n            };\r\n            const logicItem = (getLogicNode()?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n            // 引数リストを追加\r\n            const argMng = logicItem.mngs.find(mng => mng.type === 'argument-mng');\r\n            if (argMng != undefined) {\r\n                argumentList = (argMng.data as LogicUtil.NodeArgumentManager).\r\n                    args.map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n            }\r\n            // 変数リストを追加\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (level >= Level.INITIAL && fieldMng != undefined) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                    fieldKeys.push(fieldName);\r\n                });\r\n            }\r\n        } else if (parentType === 'seedsend-mng') {\r\n            // シード配下のSendは特別に扱う（どのレベルにも属さない）\r\n            const argMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'seedarg-mng');\r\n            if (argMng != null) {\r\n                argumentList = (argMng.data as LogicUtil.NodeSeedArgManager).\r\n                    args.map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n            } else throw new Error('argMng is undefined.');\r\n        }\r\n        if (level >= Level.INHERIT_FIELD) {\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_RAD);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_LEN);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.RADIUS);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_R);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_G);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_B);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // フィールドキーにInherit配下のFieldパラメータを追加\r\n            if (level >= Level.INHERIT_EXTEND) {\r\n                const inhfldNode = LogicElementUtil.getInnerNode(node.parent?.parent as TreeUtil.ElementNode, 'inhfld-mng');\r\n                if (inhfldNode != null) {\r\n                    const fieldMng = (inhfldNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeFieldManager;\r\n                    fieldMng.fields.forEach(field => {\r\n                        const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                        fieldKeys.push(fieldName);\r\n                    });\r\n                }\r\n            }\r\n            // フィールドキーにExtendパラメータを追加\r\n            if (level === Level.INHERIT_SEND) {\r\n                const extendWrap = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'extend-mng') as LogicUtil.WrapElement;\r\n                const extendElement = extendWrap.data as LogicUtil.NodeParamManager;\r\n                //Extendにloop_countのパラメータがある場合\r\n                if (extendElement.params.find(\r\n                    param => (param.data as LogicUtil.NodeParamItem).name === ParamUtil.ExtendParamType.LOOP_COUNT\r\n                ) != undefined) {\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_COUNT);\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_ITERATE);\r\n                }\r\n            }\r\n        }\r\n        return [argumentList, fieldKeys];\r\n    }, [node]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const paramNameList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (item === 'var') num++;\r\n        });\r\n\r\n        if (varFormList.length < num) {\r\n            const addNum = num - varFormList.length;\r\n            for (let i = 0; i < addNum; i++) varFormList.push({\r\n                inputType: { value: 'direct', errors: [] },\r\n                value: { value: '', errors: [] }\r\n            });\r\n            setVarFormList(varFormList.slice());\r\n        } else if (varFormList.length > num) {\r\n            const delNum = varFormList.length - num;\r\n            for (let i = 0; i < delNum; i++) varFormList.splice(varFormList.length - delNum, delNum);\r\n            setVarFormList(varFormList.slice());\r\n        }\r\n    }, [formulaItems]);\r\n\r\n    /** 「(」の数-「)」の数 */\r\n    const parenthesisBalance = useMemo(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (['(', 'rand(', 'integer('].includes(item)) num++;\r\n            else if (item === ')') num--;\r\n        });\r\n        return num;\r\n    }, [formulaItems]);\r\n\r\n    /** 値の入力フォームのJSX */\r\n    const formJsxList = useMemo(() => {\r\n        return varFormList.map((v, i) => {\r\n\r\n            const getValueForm = (): JSX.Element => {\r\n                const type = v.inputType.value as LogicUtil.ParamInputType;\r\n                if (type === 'direct') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isNumber\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else {\r\n                    let list: string[] = [];\r\n                    if (type === 'argument') {\r\n                        list = argumentList;\r\n                    } else if (type === 'field') {\r\n                        list = fieldKeyList;\r\n                    } else if (type === 'self') {\r\n                        list = ParamUtil.SelfParams;\r\n                    } else if (type === 'constant') {\r\n                        list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                    }\r\n                    return (\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            list={list.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n            return <FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={`var_${i}`}\r\n                labelWidth={90}\r\n                marginTop={i === 0 ? 4 : 0}\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        checkable={v.inputType}\r\n                        width={142}\r\n                        isReadOnly={!isModify}\r\n                        setCheckable={(checkable) => {\r\n                            varFormList[i].inputType = checkable;\r\n                            if (isModify) {\r\n                                varFormList[i].value.value = checkable.value === 'direct' ? '0' : '';\r\n                            }\r\n                            setVarFormList(varFormList.slice());\r\n                        }}\r\n                        list={LogicUtil.ParamInputTypes.filter(item => {\r\n                            switch (item) {\r\n                                case 'direct':\r\n                                case 'constant':\r\n                                case 'argument': return true;\r\n                                case 'field': return level >= Level.INITIAL;\r\n                                case 'self': return level >= Level.INHERIT_FIELD;\r\n                            }\r\n                        }).map(item => {\r\n                            return { value: item, labelText: item };\r\n                        })}\r\n                    />\r\n                    {getValueForm()}\r\n                </>}\r\n            />;\r\n        });\r\n    }, [varFormList, isModify]);\r\n\r\n    const getFormulaJsx = () => {\r\n        let num = 0;\r\n        const jsxList: JSX.Element[] = [];\r\n        formulaItems.forEach((item) => {\r\n            if (jsxList.length > 0) {\r\n                jsxList.push(<span key={jsxList.length}>&nbsp;</span>);\r\n            }\r\n            if (item === 'var') {\r\n                jsxList.push(<_Var key={jsxList.length}>{`$\\{var_${num}}`}</_Var>);\r\n                num++;\r\n            } else {\r\n                jsxList.push(<_Sig key={jsxList.length}>{item}</_Sig>);\r\n            }\r\n        });\r\n        return jsxList;\r\n    }\r\n\r\n    const isLastVar = () => formulaItems.length > 0 && ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const isFormulaOK = parenthesisBalance === 0 && varFormList.length > 0 &&\r\n        ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const hasFormError = !isFormulaOK || varFormList.find(varForm => varForm.value.errors.length > 0) != undefined;\r\n\r\n\r\n    const getFormulaItem = (label: string, width: number, isEnable: boolean, value: string) => {\r\n        return {\r\n            label, width, isEnable,\r\n            callback: () => {\r\n                formulaItems.push(value);\r\n                setFormulaItems(formulaItems.slice());\r\n            }\r\n        };\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeParamItem = {\r\n                    name: name.value,\r\n                    formulaItems: formulaItems.slice(),\r\n                    values: varFormList.map(varForm => {\r\n                        return {\r\n                            type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                            value: varForm.value.value\r\n                        }\r\n                    })\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n            }}\r\n            isInputOK={parenthesisBalance === 0 && !hasFormError && name.errors.length === 0}\r\n            modifyRegist={() => {\r\n                const data = wrap.data as LogicUtil.NodeParamItem;\r\n                data.formulaItems = formulaItems.slice();\r\n                data.values = varFormList.map(varForm => {\r\n                    return {\r\n                        type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                        value: varForm.value.value\r\n                    }\r\n                });\r\n                if (isField) {\r\n                    const prevName = data.name;\r\n                    data.name = name.value;\r\n                    if (prevName !== name.value) {\r\n                        syncFieldName(node.parent as TreeUtil.ElementNode, prevName, name.value);\r\n                    }\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify || !isField}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = paramNameList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeParamItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('+', 50, isModify && isLastVar(), '+'),\r\n                        getFormulaItem('-', 50, isModify && isLastVar(), '-'),\r\n                        getFormulaItem('*', 50, isModify && isLastVar(), '*'),\r\n                        getFormulaItem('/', 50, isModify && isLastVar(), '/'),\r\n                        getFormulaItem('%', 50, isModify && isLastVar(), '%'),\r\n                        getFormulaItem('(', 35, isModify && !isLastVar(), '('),\r\n                        getFormulaItem(')', 35, isModify && isLastVar() && parenthesisBalance > 0, ')'),\r\n                        {\r\n                            label: 'del',\r\n                            width: 60,\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            callback: () => {\r\n                                formulaItems.splice(formulaItems.length - 1, 1);\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {!isCondition ? <></> : (\r\n                    <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            getFormulaItem('<', 50, isModify && isLastVar(), '<'),\r\n                            getFormulaItem('<=', 50, isModify && isLastVar(), '<='),\r\n                            getFormulaItem('=', 50, isModify && isLastVar(), '='),\r\n                            getFormulaItem('>=', 50, isModify && isLastVar(), '>='),\r\n                            getFormulaItem('>', 50, isModify && isLastVar(), '>'),\r\n                            getFormulaItem('&&', 50, isModify && isLastVar(), '&&'),\r\n                            getFormulaItem('||', 50, isModify && isLastVar(), '||'),\r\n                        ]}\r\n                    />\r\n                )}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('var', 70, isModify && !isLastVar(), 'var'),\r\n                        getFormulaItem('rand', 80, isModify && !isLastVar(), 'rand('),\r\n                        getFormulaItem('integer', 80, isModify && !isLastVar(), 'integer('),\r\n                        {\r\n                            label: 'clear',\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            width: 90,\r\n                            callback: () => {\r\n                                setFormulaItems([]);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_Formula\r\n                    isInvalid={!isFormulaOK}\r\n                >{getFormulaJsx()}</_Formula>\r\n                {formJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify && isField}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'field', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getFieldRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {!isField ? <></> : LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorParamItem;\r\n\r\n/**\r\n * ノードの変数を参照している箇所のリストを返す。\r\n * @param node 変数のノード\r\n * @param argName 変数名\r\n * @returns 参照パラメータリスト\r\n */\r\nexport const getFieldRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n * フィールド名の変更に伴い、式で参照している変数を同期する\r\n * @param mngNode ノード\r\n */\r\nexport const syncFieldName = (mngNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const type = (mngNode.data as LogicUtil.WrapElement).type;\r\n    if (type === 'field-mng') {\r\n        const logic = (mngNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n\r\n        const visualMng = logic.mngs.find(mng => mng.type === 'visual-mng');\r\n        if (visualMng != undefined) {\r\n            syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const behaviorMng = logic.mngs.find(mng => mng.type === 'behavior-mng');\r\n        if (behaviorMng != undefined) {\r\n            syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                // Inherit配下のField要素のチェック\r\n                if (inhfld != null) {\r\n                    syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                }\r\n                // Extend要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    } else if (type === 'inhfld-mng') {\r\n        const inheritWrap = mngNode.parent?.data as LogicUtil.WrapElement;\r\n\r\n        // Extend要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        // Send要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n}\r\n\r\nconst _Formula = styled.div<{\r\n    isInvalid: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 12px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    overflow-wrap: break-word;\r\n    height: 100px;//calc(100% - 4px);\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    background-color: #ffffff8b;\r\n    ${props => !props.isInvalid ? '' : css`\r\n        background-color: #ffe8628a;\r\n    `}\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    padding: 0 0 0 4px;\r\n    vertical-align: top;\r\n    margin: 5px 0 0 6px;\r\n`;\r\nconst _Var = styled.span`\r\n    color: #e70013;\r\n`;\r\nconst _Sig = styled.span`\r\n    color: #3333339d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorBehiviorMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [isVector, hasDecayParam, hasGravityParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.BehaviorParamType.VEC_X),\r\n            list.includes(ParamUtil.ModulateParamType.DECAY_RATE),\r\n            list.includes(ParamUtil.ModulateParamType.GRAVITY_VAL)\r\n        ]\r\n    }, [node]);\r\n\r\n    const exchangeElements = (flag: boolean, listPos: number,\r\n        trueParamElements: LogicUtil.NodeParamItem[],\r\n        falseParamElements: LogicUtil.NodeParamItem[]\r\n    ) => {\r\n        const size = (flag ? trueParamElements : falseParamElements).length;\r\n        LogicElementUtil.removeChild(node, listPos, size);\r\n\r\n        (flag ? trueParamElements : falseParamElements).forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    const exchangeVectorMethod = () => {\r\n        exchangeElements(!isVector, 3,\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_X, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_Y, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ],\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_RAD, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_LEN, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ]\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            mng.params.splice(listPos, size);\r\n            node.children.splice(listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                mng.params.splice(listPos + i, 0, wrap);\r\n                const newNode = TreeUtil.createNode(wrap, node);\r\n                node.children.splice(listPos + i, 0, newNode);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Vector method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Direction method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={!isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"modulate\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Decay'}\r\n                            width={300}\r\n                            isUse={hasDecayParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDecayParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_RATE,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.9' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Gravity'}\r\n                            width={300}\r\n                            isUse={hasGravityParam}\r\n                            callback={() => {\r\n                                toggleElements(hasGravityParam, !hasDecayParam ? 5 : 7, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_VAL,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.2' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorBehiviorMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype Medhod = 'blank' | 'particle' | 'snake'\r\n\r\nconst EditorVisualMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [drawMethod, hasDisappearParam, hasShrinkParam, hasFlashParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        let drawMethod: Medhod = 'blank';\r\n        if(list.length > 0) {\r\n            drawMethod = list.includes(ParamUtil.VisualParamType.THICKNESS) ? 'snake' : 'particle';\r\n        }\r\n        return [\r\n            drawMethod,\r\n            list.includes(ParamUtil.EffectParamType.DISAPPEAR_START),\r\n            list.includes(ParamUtil.EffectParamType.SHRINK_START),\r\n            list.includes(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME)\r\n        ]\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    const addElements = (paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        paramElements.forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n    const removeElements = (elementNameList: string[]) => {\r\n        const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        elementNameList.forEach((name) => {\r\n            mng.params.forEach((param, i) => {\r\n                if((param.data as LogicUtil.NodeParamItem).name === name) {\r\n                    LogicElementUtil.removeChild(node, i, 1);\r\n                }\r\n            });\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam || hasFlashParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'None'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'blank'}\r\n                            callback={() => {\r\n                                mng.params.length = 0;\r\n                                node.children.length = 0;\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Snake Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'snake'}\r\n                            callback={() => {\r\n                                removeElements([\r\n                                    ParamUtil.VisualParamType.RADIUS\r\n                                ]);\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.THICKNESS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Particle Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'particle'}\r\n                            callback={() => {\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.RADIUS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '20' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"effect\"\r\n            isEnable={!isModify && drawMethod !== 'blank'}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Disappear'}\r\n                            width={300}\r\n                            isUse={hasDisappearParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDisappearParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.DISAPPEAR_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Shrink'}\r\n                            width={300}\r\n                            isUse={hasShrinkParam}\r\n                            callback={() => {\r\n                                toggleElements(hasShrinkParam, !hasDisappearParam ? 5 : 6, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.SHRINK_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Flash'}\r\n                            width={300}\r\n                            isUse={hasFlashParam}\r\n                            callback={() => {\r\n                                toggleElements(hasFlashParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_APPEAR_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_HIDE_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorVisualMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInheritConnMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeConnectManager;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Inherit',\r\n                        callback: () => {\r\n                            const wrap: LogicUtil.WrapElement = {\r\n                                type: 'connector',\r\n                                data: null\r\n                            }\r\n                            mng.inherits.push(wrap);\r\n                            const newNode = TreeUtil.createNode(wrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorInheritConnector = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, invalidate, setModify, isModify, removeSelf, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const [condition, setCondition] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [identify, setIdentify] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [method, setMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [depend, setDepend] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n        setMethod({ ...method, value: param.method });\r\n        setDepend({ ...depend, value: param.depend });\r\n        setIdentify({ ...identify, value: param.id });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n            // 派生識別名（自動命名）の初期値を取得\r\n            const defaultName = LogicElementUtil.getNumberingOnPrefixName('id_', node.parent as TreeUtil.ElementNode);\r\n            setIdentify({ ...identify, value: defaultName });\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const isCreate = method.value === 'create';\r\n\r\n    const hasFieldNode = useMemo(() => {\r\n        return LogicElementUtil.getInnerNode(node, 'inhfld-mng') != null;\r\n    }, [node]);\r\n\r\n    /** 引用するロジックリスト */\r\n    const logicList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return inheritMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    /** 同階層の既存のインヘリットIDを取得（重複チェックに使用） */\r\n    const idList = useMemo(() => {\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    const initConnectorNode = (param: LogicUtil.NodeInheritConnector) => {\r\n        param.mngs = [];\r\n        node.children = [];\r\n        param.mngs.push({\r\n            type: 'extend-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        param.mngs.push({\r\n            type: 'send-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        if (isCreate) {\r\n            param.mngs.push({\r\n                type: 'inherit-logic',\r\n                data: {\r\n                    mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                } as LogicUtil.NodeInheritItem\r\n            });\r\n        }\r\n        wrap.data = param;\r\n\r\n        param.mngs.forEach(mng => {\r\n            const newNode = TreeUtil.createNode(mng, node);\r\n            const data = (newNode.data as LogicUtil.WrapElement);\r\n            switch (data.type) {\r\n                case 'inherit-logic': {\r\n                    LogicElementUtil.syncTreeElementFromWrap(newNode);\r\n                } break;\r\n                case 'send-mng': {\r\n                    const connector = (newNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.method === 'depend') {\r\n                        console.log('initSendParams');\r\n                        initSendParams(newNode, rootData);\r\n                    }\r\n                } break;\r\n            }\r\n            node.children.push(newNode);\r\n        });\r\n    }\r\n\r\n    const getSendParamList = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement): string[] => {\r\n        const connector = (sendNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = inheritMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement) => {\r\n        const sendParamList = getSendParamList(sendNode, rootData);\r\n        // console.log(sendParamList);\r\n        const wrap = sendNode.data as LogicUtil.WrapElement;\r\n        const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n                sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'inhfld-mng');\r\n        if(fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n\r\n    const isDisable = wrap.data == null ? false : (wrap.data as LogicUtil.NodeInheritConnector).disable ?? false;\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[identify, method, depend]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeInheritConnector = {\r\n                    method: method.value as LogicUtil.InheritMethod,\r\n                    depend: depend.value,\r\n                    id: identify.value,\r\n                    mngs: []\r\n                };\r\n                initConnectorNode(param);\r\n                invalidate();\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                const isChange = param.method !== method.value || param.depend !== depend.value;\r\n                param.method = method.value as LogicUtil.InheritMethod;\r\n                param.depend = depend.value;\r\n                param.id = identify.value;\r\n                wrap.data = param;\r\n\r\n                if (isChange) {\r\n                    initConnectorNode(param);\r\n                }\r\n                invalidate();\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={method}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                // createが選択されたらdependを空にする\r\n                                if (checkable.value === 'create') {\r\n                                    setDepend({ ...depend, value: '' });\r\n                                }\r\n                                setMethod(checkable);\r\n                            }}\r\n                            list={LogicUtil.ConnectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Depend\"\r\n                    isEnabled={method.value === 'depend'}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={depend}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setDepend}\r\n                            list={logicList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            dependency={[method]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => {\r\n                                        return method.value !== 'depend' || ValidateUtil.checkRequired(value);\r\n                                    },\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Identify\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={identify}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setIdentify}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !idList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                0,\r\n                                {\r\n                                    type: 'inhfld-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Disable'}\r\n                        width={300}\r\n                        isUse={isDisable}\r\n                        isEnable={!isModify}\r\n                        callback={() => {\r\n                            const data = (wrap.data as LogicUtil.NodeInheritConnector);\r\n                            if (isDisable) {\r\n                                data.disable = undefined;\r\n                            } else {\r\n                                data.disable = true;\r\n                            }\r\n                            invalidate();\r\n                        }}\r\n                    />}\r\n                />\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'inherit', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Edit local',\r\n                            isEnable: !isModify && !isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Create a clone from the depended inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                                                const logicList = logicMng.defs.map(def => def.data as LogicUtil.NodeLogicItem);\r\n                                                // ディペンドしているロジックを取得\r\n                                                const dependLogic = logicList.find(inherit => inherit.name === depend.value);\r\n                                                if (dependLogic != undefined) {\r\n                                                    const cloneLogic = JSON.parse(JSON.stringify(dependLogic)) as LogicUtil.NodeLogicItem;\r\n                                                    const connectItem: LogicUtil.NodeInheritItem = {\r\n                                                        mngs: cloneLogic.mngs\r\n                                                    };\r\n                                                    const newWrap: LogicUtil.WrapElement = {\r\n                                                        type: 'inherit-logic',\r\n                                                        data: connectItem\r\n                                                    };\r\n                                                    const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                                                    // 子要素の展開\r\n                                                    newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                    const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                    param.method = 'create';\r\n                                                    param.depend = '';\r\n                                                    mappingForm();\r\n                                                }\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Detach global',\r\n                            isEnable: !isModify && isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Detach a clone from the this inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                let rootNode = node;\r\n                                                while (rootNode.parent != null) rootNode = rootNode.parent;\r\n                                                const inheritNode = node.children.find(el => (el.data as LogicUtil.WrapElement).type === 'inherit-logic');\r\n                                                const logicMngNode = rootNode.children.find(el => (el.data as LogicUtil.WrapElement).type === 'logic-mng');\r\n                                                if (logicMngNode == undefined || inheritNode == undefined) return;\r\n                                                const inherit = (inheritNode.data as LogicUtil.WrapElement).data;\r\n                                                const clone = JSON.parse(JSON.stringify((inherit))) as LogicUtil.NodeInheritItem;\r\n                                                // ロジック名（自動命名）を取得\r\n                                                const defaultName = LogicElementUtil.getNumberingOnPrefixName('clone_inherit_', logicMngNode);\r\n                                                const logicItem: LogicUtil.NodeLogicItem = {\r\n                                                    ...clone,\r\n                                                    name: defaultName\r\n                                                };\r\n                                                const newWrap: LogicUtil.WrapElement = {\r\n                                                    type: 'logic-item',\r\n                                                    data: logicItem\r\n                                                };\r\n\r\n                                                // ロジックマネージャに追加\r\n                                                const newNode = LogicElementUtil.addChild(newWrap, logicMngNode);\r\n                                                // 子要素の展開\r\n                                                newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                // 自身（コネクタ）からインヘリット要素を削除\r\n                                                LogicElementUtil.removeChild(node, 2, 1);\r\n\r\n                                                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                param.method = 'depend';\r\n                                                param.depend = logicItem.name;\r\n                                                mappingForm();\r\n\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnector;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport DrawUtil from \"../../../graphic/drawUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\n\r\nnamespace LogicFormUtil {\r\n\r\n    export const buildPreviewForms = (\r\n        isReadOnly: boolean,\r\n        argumentList: LogicUtil.NodeSeedArgItem[],\r\n        formgrpList: LogicUtil.NodeFromGrpItem[],\r\n        formList: FormUtil.CheckableValue[],\r\n        setFormList: ((formList: FormUtil.CheckableValue[]) => void)\r\n    ): JSX.Element[] => {\r\n        const list: JSX.Element[] = [];\r\n        const usedGrps: string[] = [];\r\n        formList.forEach((form, i) => {\r\n            const argument = argumentList[i];\r\n            const formgrp = formgrpList.find(grp => grp.args.includes(argument.name));\r\n            if (formgrp != undefined) {\r\n                // 設定済みであれば追加しない\r\n                if (usedGrps.includes(formgrp.name)) return 1;\r\n                // 利用済みリストに追加\r\n                usedGrps.push(formgrp.name);\r\n                const targetForms: number[] = [];\r\n                argumentList.forEach((arg, j) => {\r\n                    if (formgrp.args.includes(arg.name)) {\r\n                        targetForms.push(j);\r\n                    }\r\n                });\r\n                const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                    r: Number(formList[targetForms[0]].value),\r\n                    g: Number(formList[targetForms[1]].value),\r\n                    b: Number(formList[targetForms[2]].value),\r\n                    a: 255\r\n                }).substring(0, 7);\r\n                // console.log(colorCode);\r\n                list.push(<div key={i}>\r\n                    <FormUtil.Record\r\n                        jsx={\r\n                            <_Message>{formgrp.name}: <_Type>color </_Type><_Range>({0} ～ {255} respectively)</_Range></_Message>\r\n                        }\r\n                    />\r\n                    <FormUtil.Record\r\n                        jsx={<>\r\n                            {targetForms.map((formIndex, j) => {\r\n                                return (\r\n                                    <FormUtil.TextField\r\n                                        key={formIndex}\r\n                                        width={72}\r\n                                        marginLeft={j === 0 ? 5 : 4}\r\n                                        isNumber\r\n                                        isReadOnly={isReadOnly}\r\n                                        checkable={formList[formIndex]}\r\n                                        setCheckable={() => {\r\n                                            setFormList(formList.slice());\r\n                                        }}\r\n                                        validates={[\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            },\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkNumberRange(value, argument.min, argument.max),\r\n                                                errorType: 'value'\r\n                                            }\r\n                                        ]}\r\n                                    />\r\n                                );\r\n                            })}\r\n                            <_Color type=\"color\" value={colorCode}\r\n                                disabled={isReadOnly}\r\n                                onChange={(value) => {\r\n                                    const rgba = DrawUtil.convertRgbaFromColorCode(value.target.value + 'ff');\r\n                                    if (rgba != null) {\r\n                                        formList[targetForms[0]].value = rgba.r.toString();\r\n                                        formList[targetForms[1]].value = rgba.g.toString();\r\n                                        formList[targetForms[2]].value = rgba.b.toString();\r\n                                    }\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                            />\r\n                        </>}\r\n                    />\r\n                </div>);\r\n            } else {\r\n                let labelName = argument.name;\r\n                if (argument.disp != undefined) labelName = argument.disp;\r\n                list.push(<div key={i}>\r\n                    <FormUtil.Record\r\n                        jsx={\r\n                            <_Message>{labelName}: <_Type>number </_Type><_Range>({argument.min} ～ {argument.max})</_Range></_Message>\r\n                        }\r\n                    />\r\n                    <FormUtil.Record\r\n                        jsx={<>\r\n                            <FormUtil.TextField\r\n                                width={142}\r\n                                marginLeft={6}\r\n                                isNumber\r\n                                isReadOnly={isReadOnly}\r\n                                step={argument.step}\r\n                                checkable={form}\r\n                                setCheckable={() => {\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, argument.min, argument.max),\r\n                                        errorType: 'value'\r\n                                    }\r\n                                ]}\r\n                            />\r\n                            <_Tsumami type=\"range\" value={Number(form.value)} min={argument.min} max={argument.max} step={argument.step}\r\n                                disabled={isReadOnly}\r\n                                onChange={(value) => {\r\n                                    formList[i] = { ...form, value: value.target.value };\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                            />\r\n                        </>}\r\n                    />\r\n                </div>);\r\n            }\r\n        });\r\n        return list;\r\n    }\r\n}\r\n\r\nexport default LogicFormUtil;\r\n\r\n\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    overflow: hidden;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Type = styled.span`\r\n    color: #c10000;\r\n    font-weight: 600;\r\n`;\r\nconst _Range = styled.span`\r\n    color: #423e84fb;\r\n`;\r\n\r\nconst _Tsumami = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 11px 0 0 6px;\r\n    width: calc(100% - 160px);\r\n`;\r\n\r\nconst _Color = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 3px 0 0 6px;\r\n    width: 100px;\r\n    height: 34px;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSendManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const isDepend = () => {\r\n        const conn = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        return conn.method === 'depend';\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"template\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Connect Position',\r\n                            isEnable: !isDepend(),\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.ConnectParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Set Position',\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.SetParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSendManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFieldMng = () => {\r\n    const { invalidate, node, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Field',\r\n                        callback: () => {\r\n                            // const newWrap: FactoryUtil.WrapNode = FactoryUtil.createParamWrap('field-item',\r\n                            //     { name: '', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                            // );\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'field-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFieldMng;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorExtendMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [hasLoopParam, hasInvokeParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name as ParamUtil.ExtendParam;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.ExtendParamType.LOOP_COUNT),\r\n            list.includes(ParamUtil.ExtendParamType.INVOKE)\r\n        ]\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Loop'}\r\n                            width={300}\r\n                            isUse={hasLoopParam}\r\n                            callback={() => {\r\n                                toggleElement(hasLoopParam, 0, {\r\n                                    type: 'param-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.LOOP_COUNT,\r\n                                        formulaItems: ['var'],\r\n                                        values: [{ type: 'direct', value: '1' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Invoke'}\r\n                            width={300}\r\n                            isUse={hasInvokeParam}\r\n                            callback={() => {\r\n                                toggleElement(hasInvokeParam, hasLoopParam ? 1 : 0, {\r\n                                    type: 'condition-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.INVOKE,\r\n                                        formulaItems: ['var', '=', 'var'],\r\n                                        values: [{ type: 'direct', value: '0' }, { type: 'direct', value: '0' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorExtendMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\n\r\nconst EditorSeedItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [entry, setEntry] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [permit, setPermit] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setEntry({ ...entry, value: param.entry });\r\n        setPermit({ ...permit, value: param.permit })\r\n    };\r\n\r\n    /** 既存のシード名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    // 引用するロジックリスト\r\n    const logicNameList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const logicMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return logicMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    const getSendParamList = (): string[] => {\r\n        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n        const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = logicMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = () => {\r\n        const sendParamList = getSendParamList();\r\n        const sendNode = LogicElementUtil.getInnerNode(node, 'interface-mng', 'seedsend-mng') as TreeUtil.ElementNode;\r\n        const params = ((sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('seedsend-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n            }\r\n        });\r\n        LogicElementUtil.syncTreeElementFromWrap(sendNode);\r\n    }\r\n\r\n    const getDefaultSeedMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'interface-mng',\r\n                data: {\r\n                    mngs: [\r\n                        {\r\n                            type: 'seedarg-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeSeedArgManager\r\n                        },\r\n                        {\r\n                            type: 'seedsend-mng',\r\n                            data: {\r\n                                params: []\r\n                            } as LogicUtil.NodeSeedSendManager\r\n                        },\r\n                    ]\r\n                } as LogicUtil.NodeInterfaceMng\r\n            },\r\n            {\r\n                type: 'thumbnail-mng',\r\n                data: {\r\n                    items: []\r\n                } as LogicUtil.NodeThumnailManager\r\n            },\r\n            {\r\n                type: 'sample-mng',\r\n                data: {\r\n                    samples: []\r\n                } as LogicUtil.NodeSampleManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, entry, permit]}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSeedItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    entry: entry.value,\r\n                    permit: permit.value as LogicUtil.PermitType,\r\n                    mngs: getDefaultSeedMngs()\r\n                };\r\n                wrap.data = element;\r\n\r\n                LogicElementUtil.syncTreeElementFromWrap(node);\r\n                // 参照しているロジックの引数をSendに設定\r\n                initSendParams();\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedItem;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.permit = permit.value as LogicUtil.PermitType;\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 24),\r\n                                    errorType: \"length\"\r\n                                },\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Entry\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={entry}\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setEntry}\r\n                            list={logicNameList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Permit\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={permit}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setPermit}\r\n                            list={LogicUtil.PermitTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'seed', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedItem;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext as LogicTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorThumbnailMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(LogicTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeThumnailManager;\r\n\r\n    const hasSample = useMemo(() => {\r\n        const sampleMngNode = LogicElementUtil.getInnerNode(node.parent as TreeUtil.ElementNode, 'sample-mng') as TreeUtil.ElementNode;\r\n        return sampleMngNode.children.length as number > 0;\r\n    }, []);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={hasSample}\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Thumbnail',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'thumbnail-item',\r\n                                data: null\r\n                            }\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport Particle from \"../../../../graphic/particle\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst WND_SIZE = 100;\r\n\r\nconst EditorThumbnailItem = () => {\r\n    const { rootData, node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n    const data = wrap.data as LogicUtil.NodeThumbnailItem;\r\n\r\n\r\n    const seedWrap = node.parent?.parent?.data as LogicUtil.WrapElement;\r\n    const sampleMng = LogicElementUtil.getInnerWrap(seedWrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n    const samples = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [urls, setUrls] = useState<string[]>([]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n        setName({ ...name, value: param.name });\r\n        setFrame({ ...frame, value: param.frame.toString() });\r\n    };\r\n    \r\n    /** 既存のサムネイル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n            setTimeout(() => {\r\n                const urls: string[] = [];\r\n                samples.forEach((sample, i) => {\r\n                    urls.push(getThumbnailURL(data.frame, i));\r\n                });\r\n                setUrls(urls);\r\n            }, 1);\r\n        }\r\n    }, [node]);\r\n\r\n    const getSeedValueMap = (sampleNo: number): PreviewUtil.ValueMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ValueMap[] = argMng.args.map((arg, i) => {\r\n            const name = (arg.data as LogicUtil.NodeSeedArgItem).name;\r\n            const value = samples[sampleNo].values[i];\r\n            return { name, value }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams.map(item => {\r\n            return { name: item.name, value: PreviewUtil.convertParamsToValue(item.name, sendParams, argMap) ?? 0 }\r\n        });\r\n    }\r\n\r\n    const getThumbnailURL = (targetFrame: number, sampleNo: number) => {\r\n        console.log('create start!');\r\n        const owner: Particle.Instance[] = [];\r\n\r\n        let frameCnt = 0;\r\n        do {\r\n            if (frameCnt === 0) {\r\n                const seed = (node.parent?.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n                const logicManager = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                const logic = logicManager.defs.find(logic => (logic.data as LogicUtil.NodeLogicItem).name === seed.entry);\r\n                if (logic == undefined) break;\r\n\r\n                const sendValueMapList = getSeedValueMap(sampleNo);\r\n                owner.push(new Particle.Instance(\r\n                    PreviewUtil.buildLogicProps(owner, logic.data, rootData, sendValueMapList))\r\n                );\r\n            }\r\n\r\n            if (frameCnt === targetFrame) {\r\n                return CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                });\r\n            }\r\n\r\n            // パーティクルの更新\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                particle.update();\r\n            }\r\n\r\n            // 死滅したパーティクルの削除\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frameCnt > 500 || owner.length > 3000) break;\r\n            frameCnt++;\r\n        } while (owner.length > 0);\r\n        return '';\r\n    }\r\n\r\n    const pictureJsxList = useMemo(() => {\r\n        const sampleMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n        return sampleMng.samples.map((wrap, i) => {\r\n            const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n\r\n            const url = urls[i];\r\n            const imgJsx = url == undefined ? <></> : <_IMG src={urls[i]} />;\r\n            return (\r\n                <_SampleDiv key={i}>-\r\n                    <_SampleName>{sample.name}</_SampleName>\r\n                    <_CanvasDiv>\r\n                        {imgJsx}\r\n                    </_CanvasDiv>\r\n                </_SampleDiv>\r\n            );\r\n        });\r\n    }, [node, urls]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, frame]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeThumbnailItem = {\r\n                    name: name.value,\r\n                    frame: Number(frame.value),\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n                param.name = name.value;\r\n                param.frame = Number(frame.value);\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"preview\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {pictureJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailItem;\r\n\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactDetArgumentMng from \"../detail/logic/editorArgumentMng\";\r\nimport EditorArgumentItem from \"../detail/logic/editorArgumentItem\";\r\nimport FactDetSeedMng from \"../detail/seed/editorSeedMng\";\r\nimport EditorLogicMng from \"../detail/logic/editorLogicMng\";\r\nimport EditorLogicItem from \"../detail/logic/editorLogicItem\";\r\nimport EditorParamItem from \"../detail/logic/editorParamItem\";\r\nimport FactDetBehiviorMng from \"../detail/logic/editorBehiviorMng\";\r\nimport EditorVisualMng from \"../detail/logic/editorVisualMng\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport EditorInheritConnMng from \"../detail/logic/editorInheritConnMng\";\r\nimport EditorInheritConnector from \"../detail/logic/editorInheritConnector\";\r\nimport EditorSendManager from \"../detail/logic/editorSendManager\";\r\nimport EditorFieldMng from \"../detail/logic/editorFieldMng\";\r\nimport EditorExtendMng from \"../detail/logic/editorExtendMng\";\r\nimport EditorSeedItem from \"../detail/seed/editorSeedItem\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"./logicElementUtil\";\r\nimport EditorThumbnailMng from \"../detail/seed/editorThumbnailMng\";\r\nimport EditorThumbnailItem from \"../detail/seed/editorThumbnailItem\";\r\nimport EditorSampleItem from \"../detail/seed/editorSampleItem\";\r\nimport EditorSampleMng from \"../detail/seed/editorSampleMng\";\r\nimport EditorInterfaceManager from \"../detail/seed/editorInterfaceManager\";\r\nimport EditorSeedArgMng from \"../detail/seed/editorSeedArgMng\";\r\nimport EditorSeedArgItem from \"../detail/seed/editorSeedArgItem\";\r\nimport EditorSeedSendMng from \"../detail/seed/editorSeedSendMng\";\r\nimport EditorFormgrpItem from \"../detail/seed/editorFormgrpItem\";\r\nimport EditorFormgrpMng from \"../detail/seed/editorFormgrpMng\";\r\n\r\nnamespace LogicUtil {\r\n\r\n    export type DetailArgs = {\r\n        rootData: LogicUtil.WrapElement;\r\n        node: TreeUtil.ElementNode;\r\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\r\n        invalidate: () => void;\r\n        isModify: boolean;\r\n        setModify: (isModify: boolean) => void;\r\n        // setRootData: React.Dispatch<React.SetStateAction<WrapElement>>;\r\n        setRootData: (rootData: WrapElement) => void;\r\n        removeSelf: () => void;\r\n    }\r\n\r\n    /**\r\n     * 変数名チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkFieldName = (str: string) => {\r\n        // 1文字目が数値でないこと\r\n        const isNoHeadNumber = !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].\r\n            includes(str.substring(0, 1));\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyz_';\r\n        return isNoHeadNumber && ValidateUtil.checkIncludesChars(str, list);\r\n    }\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'seed-mng' |\r\n        'logic-mng' |\r\n        'seed-item' |\r\n        'logic-item' |\r\n        'argument-mng' |\r\n        'argument-item' |\r\n        'field-mng' |\r\n        'field-item' |\r\n        'visual-mng' |\r\n        'behavior-mng' |\r\n        'inhfld-mng' |\r\n        'extend-mng' |\r\n        'inherit-mng' |\r\n        'connector' |\r\n        'inherit-logic' |\r\n        'send-mng' |\r\n        'send-item' |\r\n        'param-item' |\r\n        'condition-item' |\r\n        'interface-mng' |\r\n        'sample-mng' |\r\n        'sample-item' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-item' |\r\n        'seedarg-mng' |\r\n        'seedsend-mng' |\r\n        'seedarg-item' |\r\n        'seedsend-item' |\r\n        'formgrp-mng' |\r\n        'formgrp-item'\r\n        ;\r\n\r\n    export const ArgTypes = ['number', 'color'] as const;\r\n    export type ArgumentType = typeof ArgTypes[number];\r\n\r\n    export const ParamInputTypes = ['direct', 'constant', 'argument', 'self', 'field'] as const;\r\n    export type ParamInputType = typeof ParamInputTypes[number];\r\n\r\n    export const ConnectTypes = ['create', 'depend'] as const;\r\n    export type InheritMethod = typeof ConnectTypes[number];\r\n\r\n    export const PermitTypes = ['develop', 'private', 'release'] as const;\r\n    export type PermitType = typeof PermitTypes[number];\r\n\r\n    export const FromGrpMedhods = ['color', 'list'] as const;\r\n    export type FromGrpMethod = typeof FromGrpMedhods[number];\r\n\r\n    export type ParamProps = {\r\n        type: ParamInputType;\r\n        value: string;\r\n    }\r\n\r\n    export type WrapElement = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        seedMng: WrapElement;\r\n        logicMng: WrapElement;\r\n    }\r\n    export type NodeSeedManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicItem = {\r\n        name: string;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInterfaceMng = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInheritItem = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeParamManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeParamItem = {\r\n        name: string;\r\n        formulaItems: string[];\r\n        values: ParamProps[];\r\n    }\r\n\r\n    export type NodeArgumentItem = {\r\n        name: string;\r\n        valueType: ArgumentType;\r\n    }\r\n    export type NodeThumbnailItem = {\r\n        name: string;\r\n        frame: number;\r\n    }\r\n    export type NodeArgumentManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeFieldManager = {\r\n        fields: WrapElement[];\r\n    }\r\n    export type NodeSampleManager = {\r\n        samples: WrapElement[];\r\n    }\r\n    export type NodeSampleItem = {\r\n        name: string;\r\n        values: number[];\r\n    }\r\n\r\n    // export type NodeExtendManager = {\r\n    //     mngs: WrapElement[];\r\n    // }\r\n    export type NodeConnectManager = {\r\n        inherits: WrapElement[];\r\n    }\r\n    export type NodeInheritConnector = {\r\n        method: InheritMethod;\r\n        depend: string;\r\n        id: string;\r\n        disable?: boolean;\r\n        mngs: WrapElement[];\r\n    }\r\n\r\n    export type NodeSeedItem = {\r\n        name: string;\r\n        disp?: string;\r\n        entry: string;\r\n        permit: PermitType;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeThumnailManager = {\r\n        items: WrapElement[];\r\n    }\r\n    export type NodeSeedArgManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeSeedSendManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeSeedArgItem = {\r\n        name: string;\r\n        disp?: string;\r\n        min: number;\r\n        max: number;\r\n        step: number;\r\n        defval: number | undefined;\r\n    }\r\n    export type NodeFromgrpManager = {\r\n        defines: WrapElement[];\r\n    }\r\n    export type NodeFromGrpItem = {\r\n        name: string;\r\n        method: FromGrpMethod;\r\n        args: string[];\r\n    }\r\n\r\n    const COLOR_ROOT = '#a1a1a1';\r\n    const COLOR_METHOD = '#cca67b';\r\n    const COLOR_MNG = '#37a2bd';\r\n    const COLOR_LIST = '#b85f5f';\r\n    const COLOR_ITEM = '#ae628c';\r\n    const COLOR_DISABLE = '#685b79';\r\n    const COLOR_PARAM = '#8dae62';\r\n    const COLOR_FIELD = '#cec256';\r\n    const COLOR_THUMBNAIL = '#8283be';\r\n    const COLOR_CONDITION = '#56ce7e';\r\n\r\n    export const getNodeDisplayJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapElement;\r\n        switch (wrap.type) {\r\n            case 'root': {\r\n                return <_Category backgroundColor={COLOR_ROOT}>Library</_Category>;\r\n            }\r\n            case 'seed-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Seed Manager</_Category>;\r\n            }\r\n            case 'logic-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Logic Manager</_Category>;\r\n            }\r\n            case 'visual-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Visual</_Category>;\r\n            }\r\n            case 'extend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Extend</_Category>;\r\n            }\r\n            case 'seed-item': {\r\n                let detailJsx = <>...</>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedItem;\r\n                    detailJsx = <span>{data.name}&nbsp;<_Span color=\"#ffe89ba6\">entry:&nbsp;</_Span><_Field>{data.entry}</_Field></span>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Seed</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                    \r\n                </>;\r\n            }\r\n            case 'logic-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Logic</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-logic': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Logic</_Category>;\r\n            }\r\n            case 'argument-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'inhfld-mng':\r\n            case 'field-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Field Manager</_Category>;\r\n            }\r\n            case 'behavior-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Behavior</_Category>;\r\n            }\r\n            case 'inherit-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Inherit Manager</_Category>;\r\n            }\r\n            case 'connector': {\r\n                let detailJsx = <span>...</span>;\r\n                let color = COLOR_ITEM;\r\n                let isDisable = false;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeInheritConnector;\r\n                    detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}</_Span></span>;\r\n                    if (data.method === 'depend') {\r\n                        detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}:&nbsp;</_Span><_Field>{data.depend}</_Field></span>;\r\n                    }\r\n                    if (data.disable ?? false) {\r\n                        color = COLOR_DISABLE;\r\n                        isDisable = true;\r\n                    }\r\n                }\r\n                return (<>\r\n                    <_Category backgroundColor={color} isDisable={isDisable}>Inherit</_Category>\r\n                    {detailJsx == undefined ? <></> : <_EditableValue>{detailJsx}</_EditableValue>}\r\n                </>);\r\n            }\r\n            // パラメータ要素\r\n            case 'param-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_PARAM}>Param<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 条件要素\r\n            case 'condition-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_CONDITION}>Condition<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 変数要素\r\n            case 'field-item': {\r\n                let nameJsx = <span>...</span>;\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeParamItem;\r\n                    nameJsx = <_Detail>&nbsp;[{data.name}]</_Detail>;\r\n                    let result: JSX.Element[] = [];\r\n                    let varCnt = 0;\r\n                    data.formulaItems.forEach((formula, i) => {\r\n                        let str = <_Signature key={i}>{formula}</_Signature>;\r\n                        if (formula === 'var') {\r\n                            const v = data.values[varCnt];\r\n                            if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                            else str = <span key={i}>{v.value}</span>;\r\n                            varCnt++;\r\n                        }\r\n                        result.push(str);\r\n                    });\r\n                    detailJsx = <>{result}</>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Field{nameJsx}</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'argument-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeArgumentItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.valueType})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'send-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'thumbnail-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Thumnail Manager</_Category>;\r\n            }\r\n            case 'thumbnail-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeThumbnailItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.frame})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_THUMBNAIL}>Thumbnail</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'sample-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Preset Manager</_Category>;\r\n            }\r\n            case 'sample-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSampleItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Preset</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'interface-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Interface</_Category>;\r\n            }\r\n            case 'seedarg-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'seedarg-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedArgItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.min}～{data.max})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'seedsend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'formgrp-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Group Manager</_Category>;\r\n            }\r\n            case 'formgrp-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeFromGrpItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.method})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Group<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n        }\r\n        return <_Category backgroundColor={'#ffffff'}>XXXXX</_Category>;\r\n    }\r\n\r\n    export const getTypeName = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return '';\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return 'Root';\r\n            case 'seed-mng': return 'Seed Manager';\r\n            case 'logic-mng': return 'Logic Manager';\r\n            case 'seed-item': return 'Seed Item';\r\n            case 'logic-item': return 'Logic Item';\r\n            case 'argument-mng': return 'Argument Manager';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'Field Manager';\r\n            case 'field-item': return 'Field Item';\r\n            case 'visual-mng': return 'Visual Manager';\r\n            case 'seedarg-item':\r\n            case 'argument-item': return 'Argument Item';\r\n            case 'extend-mng': return 'Extend Manager';\r\n            case 'behavior-mng': return 'Behavior Manager';\r\n            case 'inherit-mng': return 'Inherit Manager';\r\n            case 'connector': return 'Inherit Connector';\r\n            case 'inherit-logic': return 'Inherit Logic';\r\n            case 'send-mng': return 'Send Manager';\r\n            case 'send-item': return 'Send Item';\r\n            case 'param-item': return 'Param Item';\r\n            case 'condition-item': return 'Condition Item';\r\n            case 'interface-mng': return 'Interface Manager';\r\n            case 'thumbnail-mng': return 'Thumbnail Manager';\r\n            case 'thumbnail-item': return 'Thumbnail Item';\r\n            case 'sample-mng': return 'Preset Manager';\r\n            case 'sample-item': return 'Preset Item';\r\n            case 'seedarg-mng': return 'Argument Manager';\r\n            case 'seedsend-mng': return 'Send';\r\n            case 'formgrp-mng': return 'Group Manager';\r\n            case 'formgrp-item': return 'Group Item';\r\n        }\r\n    }\r\n\r\n    export const getDetailComponent = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return <></>;\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return <></>;\r\n            case 'seed-mng': return <FactDetSeedMng />;\r\n            case 'logic-mng': return <EditorLogicMng />;\r\n            case 'seed-item': return <EditorSeedItem />;\r\n            case 'logic-item': return <EditorLogicItem />;\r\n            case 'argument-mng': return <FactDetArgumentMng />;\r\n            case 'argument-item': return <EditorArgumentItem />;\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return <EditorFieldMng />;\r\n            case 'visual-mng': return <EditorVisualMng />;\r\n            case 'extend-mng': return <EditorExtendMng />;\r\n            case 'behavior-mng': return <FactDetBehiviorMng />;\r\n            case 'inherit-mng': return <EditorInheritConnMng />;\r\n            case 'connector': return <EditorInheritConnector />;\r\n            case 'inherit-logic': return <EditorLogicItem />;\r\n            case 'send-mng': return <EditorSendManager />;\r\n            case 'field-item':\r\n            case 'param-item':\r\n            case 'condition-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': return <EditorParamItem />;\r\n            case 'interface-mng': return <EditorInterfaceManager />;\r\n            case 'sample-mng': return <EditorSampleMng />;\r\n            case 'sample-item': return <EditorSampleItem />;\r\n            case 'thumbnail-mng': return <EditorThumbnailMng />;\r\n            case 'thumbnail-item': return <EditorThumbnailItem />;\r\n            case 'seedarg-mng': return <EditorSeedArgMng />;\r\n            case 'seedarg-item': return <EditorSeedArgItem />;\r\n            case 'seedsend-mng': return <EditorSeedSendMng />;\r\n            case 'formgrp-item': return <EditorFormgrpItem />;\r\n            case 'formgrp-mng': return <EditorFormgrpMng />;\r\n        }\r\n    }\r\n\r\n    export const getChildrenElementNode = (node: TreeUtil.ElementNode): TreeUtil.ElementNode[] => {\r\n        const wrapNode = node.data as WrapElement;\r\n        const get = (listName: string) => {\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const elementNode = TreeUtil.createNode(wrap, node);\r\n                elementNode.children = getChildrenElementNode(elementNode);\r\n                return elementNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n\r\n    export const getChildrenDataNode = (wrapNode: LogicUtil.WrapElement): TreeUtil.DataNode[] => {\r\n        const get = (listName: string) => {\r\n\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const treeNode: TreeUtil.DataNode = {\r\n                    data: wrap,\r\n                    children: getChildrenDataNode(wrap)\r\n                };\r\n                return treeNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as LogicUtil.NodeRoot;\r\n                return [\r\n                    { data: node.seedMng, children: getChildrenDataNode(node.seedMng) },\r\n                    { data: node.logicMng, children: getChildrenDataNode(node.logicMng) }\r\n                ];\r\n            }\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n}\r\n\r\nexport default LogicUtil;\r\n\r\nconst _Category = styled.div<{\r\n    backgroundColor: string;\r\n    isDisable?: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: ${props => props.backgroundColor};\r\n    /* width: 100%; */\r\n    ${props => !(props.isDisable ?? false) ? '' : css`\r\n        text-decoration: line-through;\r\n        color: #00054dac;\r\n    `}\r\n    border-radius: 4px 0 0 4px;\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n    border: solid 1px #000000d2;\r\n`;\r\nconst _Detail = styled.span`\r\n    color: #000b69bd;\r\n`;\r\n\r\nconst _EditableValue = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #0c0c0c;\r\n    color: #ebebeb;\r\n    border-radius: 0 4px 4px 0;\r\n    /* width: 100%; */\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n`;\r\nconst _Span = styled.span<{\r\n    color: string;\r\n}>`\r\n    color: ${props => props.color};\r\n`;\r\nconst _ValueType = styled.span`\r\n    color: #fff9d6b9;\r\n`;\r\nconst _Signature = styled.span`\r\n    color: #ffffff78;\r\n`;\r\nconst _Field = styled.span`\r\n    color: #ff2d2d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../util/logicFormUtil\";\r\n\r\nconst EditorSampleItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [paramForms, setParamForms] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSampleItem;\r\n        setName({ ...name, value: param.name });\r\n        setParamForms(param.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のサンプル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const [seedargList, formgrpList]: [LogicUtil.NodeSeedArgItem[], LogicUtil.NodeFromGrpItem[]] = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'seedarg-mng');\r\n        const argInfoList = (argMng.data as LogicUtil.NodeSeedArgManager).\r\n            args.map(arg => {\r\n                return arg.data as LogicUtil.NodeSeedArgItem;\r\n            });\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        const formgrpMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'formgrp-mng');\r\n        if (formgrpMng != null) {\r\n            formgrpList = (formgrpMng.data as LogicUtil.NodeFromgrpManager).\r\n                defines.map(arg => {\r\n                    return arg.data as LogicUtil.NodeFromGrpItem;\r\n                });\r\n        }\r\n        return [argInfoList, formgrpList];\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setParamForms(seedargList.map(arg => {\r\n                let defval = ' ';\r\n                if (arg.defval != undefined) defval = arg.defval.toString();\r\n                return { value: defval, errors: [] };\r\n            }));\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const formList = useMemo(() => {\r\n        return LogicFormUtil.buildPreviewForms(\r\n            !isModify, seedargList, formgrpList, paramForms, setParamForms\r\n        );\r\n        // return paramForms.map((paramForm, i) => {\r\n        //     const arg = argInfoList[i];\r\n        //     return <FormUtil.FormRecord key={i}\r\n        //         titleLabel={arg.name}\r\n        //         jsx={\r\n        //             <FormUtil.TextField\r\n        //                 width={150}\r\n        //                 isReadOnly={!isModify}\r\n        //                 checkable={paramForm}\r\n        //                 setCheckable={(checkable) => {\r\n        //                     paramForms[i] = checkable;\r\n        //                     setParamForms(paramForms.slice());\r\n        //                 }}\r\n        //                 isNumber\r\n        //                 step={arg.step}\r\n        //                 validates={[\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkRequired(value),\r\n        //                         errorType: \"required\"\r\n        //                     },\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkNumberRange(value, arg.min, arg.max),\r\n        //                         errorType: \"value\"\r\n        //                     },\r\n        //                 ]}\r\n        //             />\r\n        //         }\r\n        //     />\r\n        // });\r\n    }, [paramForms, isModify]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name].concat(paramForms)}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSampleItem = {\r\n                    name: name.value,\r\n                    values: []\r\n                };\r\n                paramForms.forEach((form, i) => {\r\n                    element.values[i] = Number(form.value);\r\n                });\r\n                wrap.data = element;\r\n\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSampleItem;\r\n                param.name = name.value;\r\n                paramForms.forEach((form, i) => {\r\n                    param.values[i] = Number(form.value);\r\n                });\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {formList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'preset', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSampleMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Preset',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'sample-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSampleManager).samples.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleMng;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInterfaceManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const argMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedarg-mng');\r\n    const sendMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedsend-mng');\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(node.parent as TreeUtil.ElementNode, 'sample-mng');\r\n\r\n    const [hasGroupNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        return [\r\n            list.includes('formgrp-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const hasArgument = (): boolean => {\r\n        return argMngNode.children.length > 0;\r\n    }\r\n\r\n    /**\r\n     * グループ要素の有無を判定\r\n     */\r\n    const hasGroup = () => {\r\n        const groupMngNode = LogicElementUtil.getInnerNode(node, 'formgrp-mng');\r\n        if (groupMngNode == null) return false;\r\n        return groupMngNode.children.length > 0;\r\n    }\r\n\r\n    const execute = () => {\r\n        // const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n        // 既存の引数を削除\r\n        if (hasArgument()) {\r\n\r\n            LogicElementUtil.removeChildAll(argMngNode);\r\n            LogicElementUtil.removeChildAll(sampleMngNode);\r\n        }\r\n\r\n        sendMngNode.children.forEach(child => {\r\n            const send = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem;\r\n            send.formulaItems = ['var'];\r\n            send.values = [{ type: 'argument', value: send.name }];\r\n\r\n            const newArgData: LogicUtil.NodeSeedArgItem = {\r\n                name: send.name,\r\n                step: 1,\r\n                min: -9999,\r\n                max: 9999,\r\n                defval: 0\r\n            }\r\n            const newArgWrap: LogicUtil.WrapElement = {\r\n                type: 'seedarg-item',\r\n                data: newArgData\r\n            };\r\n            const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n            argMng.args.push(newArgWrap);\r\n            argMngNode.children.push(TreeUtil.createNode(newArgWrap, argMngNode));\r\n            invalidate();\r\n        });\r\n    }\r\n\r\n    const initDefaultSetting = () => {\r\n        if (!hasArgument()) {\r\n            execute();\r\n        } else {\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Are you sure you want to delete the existing element?\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        callback: () => {\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Execute',\r\n                        callback: () => {\r\n                            execute();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            setStore({ ...store });\r\n        }\r\n        invalidate();\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Group'}\r\n                        width={300}\r\n                        isUse={hasGroupNode}\r\n                        isEnable={!hasGroup()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasGroupNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'formgrp-mng',\r\n                                    data: {\r\n                                        defines: []\r\n                                    } as LogicUtil.NodeFromgrpManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Initialize Params',\r\n                        callback: initDefaultSetting\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInterfaceManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedArgMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seedarg-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedArgManager).args.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedArgMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorSeedArgItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [min, setMin] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [max, setMax] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [step, setStep] = useState<FormUtil.CheckableValue>({ value: '1', errors: [] });\r\n    const [defval, setDefval] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    const seedNode = node.parent?.parent?.parent as TreeUtil.ElementNode;\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setMin({ ...min, value: param.min.toString() });\r\n        setMax({ ...max, value: param.max.toString() });\r\n        setStep({ ...step, value: param.step.toString() });\r\n        setDefval({ ...defval, value: param.defval == undefined ? '' : param.defval.toString() });\r\n        // setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, min, max, step, defval]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeSeedArgItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    min: Number(min.value),\r\n                    max: Number(max.value),\r\n                    step: Number(step.value),\r\n                    defval: defval.value === '' ? undefined : Number(defval.value),\r\n                    // valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                wrap.data = param;\r\n                syncArgumentAdd(seedNode as TreeUtil.ElementNode, param);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.min = Number(min.value);\r\n                param.max = Number(max.value);\r\n                param.step = Number(step.value);\r\n                param.defval = defval.value === '' ? undefined : Number(defval.value);\r\n                // param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(seedNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 16),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Min\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={min}\r\n                            setCheckable={setMin}\r\n                            isNumber\r\n                            dependency={[max]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) < Number(max.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Max\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={max}\r\n                            setCheckable={setMax}\r\n                            isNumber\r\n                            dependency={[min]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) > Number(min.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Step\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={step}\r\n                            setCheckable={setStep}\r\n                            isNumber\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Default\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={defval}\r\n                            setCheckable={setDefval}\r\n                            isNumber\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'color' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                /> */}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'argument', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                                const refers = getArgumentRefers(seedNode, param.name);\r\n                                if (refers.length === 0) {\r\n                                    const curIndex = LogicElementUtil.getCurrentIndex(node);\r\n                                    if (curIndex === -1) throw new Error('[curIndex] is -1.');\r\n                                    syncArgumentDel(seedNode, curIndex);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtonsCallback(node, invalidate, (index, isUpper) => {\r\n                    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n                    const offset = isUpper ? -1 : 1;\r\n                    sampleMng.samples.forEach(wrap => {\r\n                        const values = (wrap.data as LogicUtil.NodeSampleItem).values;\r\n                        const swapNode = values[index];\r\n                        values[index] = values[index + offset];\r\n                        values[index + offset] = swapNode;\r\n                    });\r\n                })}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (seedNode: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    const sendMng = sendMngWrap.data as LogicUtil.NodeSeedSendManager;\r\n    sendMng.params.forEach(wrap => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        param.values.forEach(varItem => {\r\n            if (varItem.type === 'argument' && varItem.value === argName) {\r\n                refers.push(param.name);\r\n            }\r\n        });\r\n    });\r\n    return refers;\r\n}\r\n\r\nexport default EditorSeedArgItem;\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param seedNode Seedノード\r\n*/\r\nconst syncArgumentName = (seedNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    syncFormula((sendMngWrap.data as LogicUtil.NodeParamManager).params);\r\n\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Sample管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentAdd = (seedNode: TreeUtil.ElementNode, arg: LogicUtil.NodeSeedArgItem) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.push(arg.defval ?? arg.min);\r\n    });\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentDel = (seedNode: TreeUtil.ElementNode, delIndex: number) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.splice(delIndex, 1);\r\n    });\r\n}","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedSendMng = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const getSendParamList = (): string[] => {\r\n    //     const connector = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n    //     const isCreate = connector.method === 'create';\r\n    //     let targetWrap: LogicUtil.WrapElement | null = null;\r\n    //     if (!isCreate) {\r\n    //         const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n    //         const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n    //         const dependItem = inheritMng.defs.find(wrap => {\r\n    //             return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n    //         });\r\n    //         if (dependItem != undefined) targetWrap = dependItem;\r\n    //     } else {\r\n    //         targetWrap = (node.parent?.children[node.parent?.children.length - 1].data as LogicUtil.WrapElement)\r\n    //     }\r\n    //     if (targetWrap != null) {\r\n    //         const argWrap = (targetWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n    //         if (argWrap.type === 'argument-mng') {\r\n    //             return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n    //                 return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n    //             });\r\n    //         }\r\n    //     }\r\n    //     return [];\r\n    // }\r\n\r\n    // const update = () => {\r\n    //     const sendParamList = getSendParamList();\r\n    //     const curSize = node.children.length;\r\n    //     const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n    //     // 不要なパラメータを削除\r\n    //     for (let i = curSize - 1; i >= 0; i--) {\r\n    //         const name = (params[i].data as LogicUtil.NodeParamItem).name;\r\n    //         if (!sendParamList.includes(name)) {\r\n    //             node.children.splice(i, 1);\r\n    //             params.splice(i, 1);\r\n    //         }\r\n    //     }\r\n    //     // 必要な存在しないパラメータを追加\r\n    //     const curParamList = params.map(param => {\r\n    //         return (param.data as LogicUtil.NodeParamItem).name;\r\n    //     });\r\n    //     sendParamList.forEach(param => {\r\n    //         if (!curParamList.includes(param)) {\r\n    //             const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n    //                 { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n    //             );\r\n    //             params.push(paramWrap);\r\n    //             node.children.push(TreeUtil.createNode(paramWrap, node));\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    return (<>\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedSendMng;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorFormgrpItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [groupMethod, setGroupMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [targetList, setTargetList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n        setName({ ...name, value: param.name });\r\n        setGroupMethod({ ...groupMethod, value: param.method });\r\n        setTargetList(param.args.map(arg => {\r\n            return { value: arg, errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const seedargs = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed(node.parent?.parent?.data as LogicUtil.WrapElement, 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        return argMng.args.map(wrap => (wrap.data as LogicUtil.NodeSeedArgItem).name);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, groupMethod].concat(targetList)}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeFromGrpItem = {\r\n                    name: name.value,\r\n                    method: groupMethod.value as LogicUtil.FromGrpMethod,\r\n                    args: targetList.map(form => form.value)\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n                param.name = name.value;\r\n                param.method = groupMethod.value as LogicUtil.FromGrpMethod;\r\n                param.args = targetList.map(form => form.value);\r\n                wrap.data = param;\r\n\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 24),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={groupMethod}\r\n                            setCheckable={(checkable) => {\r\n                                const type = checkable.value as LogicUtil.FromGrpMethod;\r\n                                if (type === 'color') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(3).fill({ value: '', errors: [] }));\r\n                                } else {\r\n                                    setTargetList([]);\r\n                                }\r\n                                setGroupMethod({...checkable});\r\n                            }}\r\n                            list={LogicUtil.FromGrpMedhods.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'list' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n                {targetList.map((target, i) => {\r\n                    let formName = 'Target_';\r\n                    if (groupMethod.value === 'color') {\r\n                        switch (i) {\r\n                            case 0: formName += 'R'; break;\r\n                            case 1: formName += 'G'; break;\r\n                            case 2: formName += 'B'; break;\r\n                        }\r\n                    } else {\r\n                        formName += `_${i}`;\r\n                    }\r\n                    return (\r\n                        <FormUtil.FormRecord\r\n                            key={i}\r\n                            titleLabel={formName}\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={target}\r\n                                    setCheckable={(checkable) => {\r\n                                        targetList[i] = checkable;\r\n                                        setTargetList(targetList.slice());\r\n                                    }}\r\n                                    list={seedargs.map(item => {\r\n                                        return { value: item, labelText: item }\r\n                                    })}\r\n                                    headBlank\r\n                                    width={250}\r\n                                    isReadOnly={!isModify}\r\n                                    validates={\r\n                                        [\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            },\r\n                                            {\r\n                                                checker: (value) => targetList.find((target, j) => i !== j && target.value === value) == undefined,\r\n                                                errorType: \"relation\"\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                    dependency={targetList}\r\n                                />\r\n                            }\r\n                        />\r\n                    );\r\n                })}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: removeSelf\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFormgrpMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Group',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'formgrp-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeFromgrpManager).defines.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpMng;","import { assert } from \"console\";\r\nimport { Store } from \"../../../../redux/store/store\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../dialog/confirmDialog\";\r\nimport Particle from \"../../../graphic/particle\";\r\nimport StoryUtil from \"../../launcher/util/storyUtil\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport ParamUtil from \"./paramUtil\";\r\n\r\n\r\nnamespace LogicElementUtil {\r\n\r\n    export const getInnerNode = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode | null => {\r\n\r\n        let cur: TreeUtil.ElementNode | null = node;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const target = cur.children.find(child => (child.data as LogicUtil.WrapElement).type === type);\r\n            if (target == undefined) cur = null;\r\n            else cur = target;\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerNodeFixed = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode => {\r\n        const innerNode = getInnerNode(node, ...typeList);\r\n        if (innerNode == null) throw new Error('[innerNode] is null.');\r\n        return innerNode as TreeUtil.ElementNode;\r\n    }\r\n\r\n    export const getInnerWrap = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement | null => {\r\n\r\n        let cur: LogicUtil.WrapElement | null = wrap;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const listName = getListParamName(cur.type);\r\n            if (listName == null) cur = null;\r\n            else {\r\n                const list = cur.data[`${listName}`] as LogicUtil.WrapElement[];\r\n                const target = list.find(child => child.type === type);\r\n                if (target == undefined) cur = null;\r\n                else cur = target;\r\n            }\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerWrapFixed = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement => {\r\n        const innerWrap = getInnerWrap(wrap, ...typeList);\r\n        if (innerWrap == null) throw new Error('[innerWrap] is null.');\r\n        return innerWrap as LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const addChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode) => {\r\n        return insertChild(wrapElement, node, node.children.length);\r\n    }\r\n\r\n    export const insertChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode, listPos: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, 0, wrapElement);\r\n        const newNode = TreeUtil.createNode(wrapElement, node);\r\n        node.children.splice(listPos, 0, newNode);\r\n        return newNode;\r\n    }\r\n\r\n    export const removeChild = (node: TreeUtil.ElementNode, listPos: number, size: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, size);\r\n        node.children.splice(listPos, size);\r\n    }\r\n\r\n    export const removeChildAll = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].length = 0;\r\n        node.children.length = 0;\r\n    }\r\n\r\n    export const isHead = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[0] == node;\r\n    }\r\n\r\n    export const isTail = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[ownerChildren.length - 1] == node;\r\n    }\r\n\r\n    export const getCurrentIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(parentWrap.type);\r\n        if (listName == null || parentWrap.data == null) return -1;\r\n        const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n        const curIndex = list.findIndex(wrap => wrap == node.data);\r\n        return curIndex;\r\n    }\r\n\r\n    const swapOrder = (node: TreeUtil.ElementNode, offset: number) => {\r\n        if (node.parent == null) return;\r\n        const ownerChildren = node.parent.children;\r\n        const wrap = node.parent.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        const ownDataChildren = wrap.data[`${listName}`] as LogicUtil.WrapElement[];\r\n\r\n        let curNo = getCurrentIndex(node);\r\n        if (curNo === -1) return;\r\n\r\n        // ツリーノードの入れ替え\r\n        const swapNode = ownerChildren[curNo];\r\n        ownerChildren[curNo] = ownerChildren[curNo + offset];\r\n        ownerChildren[curNo + offset] = swapNode;\r\n        // データ要素の入れ替え\r\n        const swapData = ownDataChildren[curNo];\r\n        ownDataChildren[curNo] = ownDataChildren[curNo + offset];\r\n        ownDataChildren[curNo + offset] = swapData;\r\n    }\r\n\r\n    export const getSwapButtons = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        ...dependencyMngNodes: TreeUtil.ElementNode[]\r\n    ) => {\r\n        return getSwapButtonsCallback(node, invalidate, (curIndex, isUpper) => {\r\n            if (dependencyMngNodes.length > 0) {\r\n                dependencyMngNodes.forEach(depNode => {\r\n                    swapOrder(depNode.children[curIndex], isUpper ? -1 : 1);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    export const getSwapButtonsCallback = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        callback: (curIndex: number, isUpper: boolean) => void\r\n    ) => {\r\n        const curIndex = getCurrentIndex(node);\r\n        return <>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↑',\r\n                        isEnable: !LogicElementUtil.isHead(node),\r\n                        callback: () => {\r\n                            swapOrder(node, -1);\r\n                            callback(curIndex, true);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↓',\r\n                        isEnable: !LogicElementUtil.isTail(node),\r\n                        callback: () => {\r\n                            swapOrder(node, 1);\r\n                            callback(curIndex, false);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>;\r\n    }\r\n\r\n    /**\r\n     * 同レベル階層に自身ノードの複製を作成する\r\n     * @param node コピー対象のノード\r\n     * @param newName コピー後の名称\r\n     */\r\n    export const replicateSameLevel = (node: TreeUtil.ElementNode, newName: string) => {\r\n        if (node.parent == null) return;\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const cloneBase = wrap.data;\r\n        const cloneDest = JSON.parse(JSON.stringify((cloneBase)));\r\n\r\n        const newWrap: LogicUtil.WrapElement = {\r\n            type: wrap.type,\r\n            data: cloneDest\r\n        };\r\n        const namable = getNamableProps(wrap.type);\r\n        newWrap.data[namable] = newName;\r\n\r\n        // ロジックマネージャに追加\r\n        const newNode = LogicElementUtil.addChild(newWrap, node.parent);\r\n        // 子要素の展開\r\n        newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n    }\r\n\r\n    export const getReplicateButton = (\r\n        node: TreeUtil.ElementNode,\r\n        isEnable: boolean,\r\n        targetElement: string, store: Store,\r\n        setStore: (store: Store) => void,\r\n        invalidate: () => void\r\n    ): JSX.Element => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        return <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[{\r\n                label: 'Replicate',\r\n                isEnable,\r\n                // isEnable: false,\r\n                callback: () => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={`Replicate this ${targetElement}.`}\r\n                        buttons={[\r\n                            {\r\n                                label: 'Cancel',\r\n                                callback: () => {\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Enter',\r\n                                callback: () => {\r\n                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                    const name = wrap.data[namable] as string;\r\n                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                    // mappingForm();\r\n                                    invalidate();\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }\r\n            }]}\r\n        />;\r\n    }\r\n\r\n    export const getListParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return 'defs';\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            // case 'root':\r\n            case 'logic-item': return 'mngs';\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return 'params';\r\n            case 'inherit-mng': return 'inherits';\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return 'args';\r\n            case 'sample-mng': return 'samples';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'fields';\r\n            case 'thumbnail-mng': return 'items';\r\n            case 'formgrp-mng': return 'defines';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getIdentifyParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'argument-item':\r\n            case 'field-item':\r\n            case 'seed-item':\r\n            case 'thumbnail-item':\r\n            case 'seedarg-item':\r\n            case 'sample-item':\r\n            case 'formgrp-item':\r\n            case 'logic-item': return 'name';\r\n            case 'connector': return 'id';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getNamableProps = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'connector': return 'id';\r\n            case 'seed-item':\r\n            case 'argument-item':\r\n            case 'seedarg-item':\r\n            case 'field-item':\r\n            case 'sample-item':\r\n            case 'thumbnail-item':\r\n            case 'logic-item': return 'name';\r\n        }\r\n        throw new Error('Namable props not found.');\r\n    }\r\n\r\n    export const syncTreeElementFromWrap = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        if (listName == null) return;\r\n        (wrap.data[listName] as any[]).forEach(childWrap => {\r\n            const newNode = TreeUtil.createNode(childWrap, node);\r\n            node.children.push(newNode);\r\n            syncTreeElementFromWrap(newNode);\r\n        });\r\n    }\r\n\r\n    export const createParamWrap = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem): LogicUtil.WrapElement => {\r\n        return { type: type, data: paramDataList };\r\n    }\r\n    export const createParamWrapList = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem[]): LogicUtil.WrapElement[] => {\r\n        return paramDataList.map(data => {\r\n            return { type: type, data: data };\r\n        });\r\n    }\r\n\r\n    export const createVisualParams = (): LogicUtil.WrapElement[] => {\r\n        const type = ParamUtil.VisualParamType;\r\n        return createParamWrapList('param-item', [\r\n            { name: type.RADIUS, formulaItems: ['var'], values: [{ type: 'direct', value: '20' }] },\r\n            { name: type.COLOR_R, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_G, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_B, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_A, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n        ]);\r\n    }\r\n\r\n    export const createBehaviorParams = (): LogicUtil.WrapElement[] => {\r\n        const list: LogicUtil.NodeParamItem[] = [];\r\n        const type = ParamUtil.BehaviorParamType;\r\n        list.push({\r\n            name: type.LIMIT,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '30' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        return createParamWrapList('param-item', list);\r\n    }\r\n\r\n    export const getDefaultLogicMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'visual-mng',\r\n                data: {\r\n                    params: createVisualParams()\r\n                } as LogicUtil.NodeParamManager\r\n            },\r\n            {\r\n                type: 'behavior-mng',\r\n                data: {\r\n                    params: createBehaviorParams()\r\n                } as LogicUtil.NodeParamManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    export const getInitialData = (): LogicUtil.WrapElement => {\r\n        return {\r\n            type: 'root',\r\n            data: {\r\n                seedMng: {\r\n                    type: 'seed-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeSeedManager\r\n                } as LogicUtil.WrapElement,\r\n                logicMng: {\r\n                    type: 'logic-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeLogicManager\r\n                } as LogicUtil.WrapElement\r\n            } as LogicUtil.NodeRoot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 同階層の名前パラメータを持つ要素より、既存の名前一覧を取得する。\r\n     * @param node 現在のノード\r\n     * @returns 同階層の既存の名前一覧\r\n     */\r\n    export const getExistNameList = (node: TreeUtil.ElementNode) => {\r\n        const nameList: string[] = [];\r\n        const curWrap = node.data as LogicUtil.WrapElement;\r\n        const nameParam = getIdentifyParamName(curWrap.type);\r\n        const mngWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listParam = getListParamName(mngWrap.type);\r\n        if (listParam == null || nameParam == null) throw Error('List param or identifiy param not found.');\r\n        const list = mngWrap.data[listParam] as LogicUtil.WrapElement[];\r\n        list.forEach(wrap => {\r\n            if (wrap.data != null && curWrap != wrap) {\r\n                nameList.push(wrap.data[nameParam]);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getLogicNameList = (mng: LogicUtil.NodeLogicManager) => {\r\n        const nameList: string[] = [];\r\n        mng.defs.forEach(logic => {\r\n            if (logic.data != null) {\r\n                nameList.push((logic.data as LogicUtil.NodeLogicItem).name);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getParamNameList = (curLogicOwner: LogicUtil.NodeLogicItem) => {\r\n        const nameList: string[] = [];\r\n\r\n        // システム固有のパラメータ名を取得\r\n        ParamUtil.VisualParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.BehaviorParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.SelfParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ExtendParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.EffectParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ModulateParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.Constants.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n\r\n        // 引数のパラメータ名を取得\r\n        const argMng = curLogicOwner.mngs.find(mng => mng.type === 'argument-mng');\r\n        if (argMng != undefined) {\r\n            const args = (argMng.data as LogicUtil.NodeArgumentManager).args;\r\n            args.forEach(arg => {\r\n                if (arg.data != null) {\r\n                    nameList.push((arg.data as LogicUtil.NodeArgumentItem).name);\r\n                }\r\n            });\r\n        }\r\n        // フィールドのパラメータ名を取得\r\n        const fieldMng = curLogicOwner.mngs.find(mng => mng.type === 'field-mng');\r\n        if (fieldMng != undefined) {\r\n            const fields = (fieldMng.data as LogicUtil.NodeFieldManager).fields;\r\n            fields.forEach(field => {\r\n                if (field.data != null) {\r\n                    nameList.push((field.data as LogicUtil.NodeParamItem).name);\r\n                }\r\n            });\r\n        }\r\n        return nameList;\r\n    }\r\n\r\n    /**\r\n     * 子要素の接頭連番をチェックし、重複しない名称を返す。\r\n     * @param prefix 接頭語\r\n     * @param node 基準となるノード\r\n     */\r\n    export const getNumberingOnPrefixName = (prefix: string, node: TreeUtil.ElementNode) => {\r\n        let num = 0;\r\n        // 接頭番号を取得\r\n        while (true) {\r\n            const check = node.children.find(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                if (wrap.data == null) return false;\r\n                console.log(wrap);\r\n                return wrap.data[getNamableProps(wrap.type)] === `${prefix}${num}`;\r\n            });\r\n            if (check != undefined) num++;\r\n            else break;\r\n        }\r\n        return `${prefix}${num}`;\r\n    }\r\n\r\n    /**\r\n     * パラメータの式で参照されている変数を検索し、\r\n     * 任意の処理（callback）を実行する。\r\n     * @param node 現在のノード\r\n     * @param callback 処理\r\n     */\r\n    export const searchVariableReferInFormula = (node: TreeUtil.ElementNode, callback: Function) => {\r\n\r\n        const mngType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const getLogicItem = () => {\r\n            switch (mngType) {\r\n                case 'field-mng':\r\n                case 'argument-mng': return node.parent?.parent?.data as LogicUtil.WrapElement;\r\n                case 'inhfld-mng': return node.parent?.parent?.parent?.parent?.data as LogicUtil.WrapElement;\r\n            }\r\n        }\r\n        const logicItem = getLogicItem()?.data as LogicUtil.NodeLogicItem;\r\n        if (mngType === 'argument-mng') {\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (fieldMng != undefined) {\r\n                callback((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n        }\r\n        if (mngType !== 'inhfld-mng') {\r\n            const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n            if (visualMng != undefined) {\r\n                callback((visualMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n            const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n            if (behaviorMng != undefined) {\r\n                callback((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n        }\r\n        const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                if (mngType !== 'inhfld-mng') {\r\n                    const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                    // Inherit配下のField要素のチェック\r\n                    if (inhfld != null) {\r\n                        callback((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                    }\r\n                }\r\n                // Extend要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    }\r\n\r\n    export const findSeedWrap = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const root = rootData.data as LogicUtil.NodeRoot;\r\n        const seed = (root.seedMng.data as LogicUtil.NodeSeedManager).defs.find(def => {\r\n            const seedItem = def.data as LogicUtil.NodeSeedItem;\r\n            return seedItem.name === seedId;\r\n        });\r\n        if (seed == undefined) throw new Error();\r\n        return seed;\r\n    }\r\n\r\n    export const doParticleJob = (rootData: LogicUtil.WrapElement, fuse: StoryUtil.Fuse, owner: Particle.Instance[]) => {\r\n        const seedWrap = findSeedWrap(rootData, fuse.seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        const getSendingValueMap = () => {\r\n            const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const valueMap = seedargMng.args.map((wrap, i) => {\r\n                const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                return { name: seedarg.name, value: fuse.values[i] }\r\n            });\r\n\r\n            // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n            return sendParams.map(item => {\r\n                const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                return { name: item.name, value }\r\n            });\r\n        }\r\n\r\n        owner.push(new Particle.Instance(\r\n            PreviewUtil.buildLogicProps(owner, getOrigin(), rootData, getSendingValueMap())\r\n        ));\r\n    }\r\n\r\n    export type SeedProps = {\r\n        seed: LogicUtil.NodeSeedItem;\r\n        logic: LogicUtil.NodeLogicItem;\r\n        seedargList: LogicUtil.NodeSeedArgItem[];\r\n        seedsendList: LogicUtil.NodeParamItem[];\r\n        thumbnailList: LogicUtil.NodeThumbnailItem[];\r\n    }\r\n    export const getSeedProperties = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const seedWrap = findSeedWrap(rootData, seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n        const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        const seedargList = seedargMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n        const seedsendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n        const seedsendList = seedsendMng.params.map(wrap => wrap.data as LogicUtil.NodeParamItem);\r\n        const thumbnailMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'thumbnail-mng').data as LogicUtil.NodeThumnailManager;\r\n        const thumbnailList = thumbnailMng.items.map(wrap => wrap.data as LogicUtil.NodeThumbnailItem);\r\n       \r\n        return {\r\n            seed, logic: getOrigin(), seedargList, seedsendList, thumbnailList\r\n        }\r\n    }\r\n}\r\n\r\nexport default LogicElementUtil;","import Particle from \"../../graphic/particle\";\r\n\r\nexport namespace BuildUtil {\r\n\r\n    export type RunParticleProps = {\r\n        /** フレームの上限（過ぎると停止） */\r\n        limitFrame: number,\r\n        /** パーティクル数の上限（超えると停止） */\r\n        limitParticle: number,\r\n        /** 最低保証フレーム */\r\n        guaranteeFrame?: number,\r\n        /** 1フレーム経過ごとに実行する処理のコールバック */\r\n        doIterate: (frame: number, owner: Particle.Instance[]) => void,\r\n        /** 最終フレーム（ループから抜けた直後）に実行する処理のコールバック */\r\n        doEnd?: (frame: number, owner: Particle.Instance[]) => void\r\n    };\r\n\r\n    export type DivideProps = {\r\n        num: number;\r\n        standbyEvent: () => void;\r\n        countUpEvent: () => void;\r\n    }\r\n    export const run = (props: RunParticleProps) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        const owner: Particle.Instance[] = [];\r\n        let frame = 0;\r\n\r\n        while (true) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frame > props.limitFrame ||\r\n                owner.length > props.limitParticle ||\r\n                frame > minFrame && owner.length === 0\r\n            ) break;\r\n            frame++;\r\n        };\r\n\r\n        if (props.doEnd != undefined) {\r\n            props.doEnd(frame, owner);\r\n        }\r\n    }\r\n\r\n    export const runPaging = (props: RunParticleProps, owner: Particle.Instance[], beginFrame: number, advanceFrame: number) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        // const owner: Particle.Instance[] = [];\r\n\r\n        let frame = beginFrame;\r\n        while (frame - beginFrame < advanceFrame) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            // if (frame > props.limitFrame ||\r\n            //     owner.length > props.limitParticle ||\r\n            //     frame > minFrame && owner.length === 0\r\n            // ) {\r\n            //     if (props.doEnd != undefined) {\r\n            //         props.doEnd(frame, owner);\r\n            //     }\r\n            //     break;\r\n            // }\r\n            frame++;\r\n        };\r\n    }\r\n}","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ReactLoading from 'react-loading';\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport PreviewLogicInputForm from \"./inputForm/previewLogicInputForm\";\r\nimport PreviewSeedInputForm from \"./inputForm/previewSeedInputForm\";\r\nimport { BuildUtil } from \"./buildUtil\";\r\n\r\nnamespace PreviewLogicFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        master: LogicUtil.WrapElement;\r\n        rootData: LogicUtil.WrapElement;\r\n        closeButtonAction: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n\r\n        const [sceens, setSceens] = useState<string[]>([]);\r\n        const [frameCnt, setFrameCnt] = useState<number>(-1);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isBuild, setBuild] = useState<boolean>(false);\r\n        const [progress, setProgress] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const [sendingValueMap, setSendingValueMap] = useState<((() => PreviewUtil.ValueMap[]) | null)>(null);\r\n\r\n        const isSeed = props.master.type === 'seed-item';\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n        useEffect(() => {\r\n            if (isBuild) build();\r\n        }, [isBuild]);\r\n\r\n        const build = () => {\r\n            if (sendingValueMap == null) return;\r\n            setCur(0);\r\n            const sceens: string[] = [];\r\n            BuildUtil.run({\r\n                limitFrame: 500,\r\n                limitParticle: 3000,\r\n                doIterate: (frame, owner) => {\r\n                    if (frame === 0) {\r\n                        const getOrigin = () => {\r\n                            if (!isSeed) return props.master.data as LogicUtil.NodeLogicItem;\r\n                            else {\r\n                                const seed = props.master.data as LogicUtil.NodeSeedItem;\r\n                                const root = props.rootData.data as LogicUtil.NodeRoot;\r\n                                const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                                return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                            }\r\n                        }\r\n                        owner.push(new Particle.Instance(\r\n                            PreviewUtil.buildLogicProps(owner, getOrigin(), props.rootData, sendingValueMap as any)\r\n                        ));\r\n                    }\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n\r\n                        // 経過フレーム、要素数の表示\r\n                        ctx.globalAlpha = 1;\r\n                        ctx.font = '16pt Arial';\r\n                        ctx.fillStyle = '#ffffff';\r\n                        ctx.fillText(`${frame}`, 6, 24);\r\n                        ctx.fillStyle = '#ffec5c';\r\n                        ctx.fillText(`${owner.length}`, 6, 44);\r\n\r\n                        // ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    setFrameCnt(frame);\r\n                    setSceens(sceens);\r\n\r\n                    setBuild(false);\r\n                    setTabIndex(1);\r\n                }\r\n            });\r\n        }\r\n\r\n        const isInputOK = sendingValueMap != null;\r\n\r\n        const buildTabJsx = (\r\n            <_Wrap>\r\n                <_Blind isEnable={isBuild}>\r\n                    {/* <ReactLoading type='spinningBubbles' /> */}\r\n                    <_Msg>Now building...</_Msg>\r\n                </_Blind>\r\n                <_FormDiv\r\n                    isSeed={props.master.type === 'seed-item'}\r\n                >\r\n                    {!isSeed ? (\r\n                        <PreviewLogicInputForm\r\n                            logicWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                        />\r\n                    ) : (\r\n                        <PreviewSeedInputForm\r\n                            seedWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                        />\r\n                    )}\r\n                </_FormDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Build',\r\n                            isEnable: isInputOK && !isBuild,\r\n                            callback: () => {\r\n                                setBuild(true);\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    if (tabIndex === 0) {\r\n                        if (isInputOK && e.key === ' ') build();\r\n                    } else {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                            } break;\r\n                            case 'ArrowRight': {\r\n                                if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                            } break;\r\n                            case ' ': {\r\n                                setPlay(!isPlay);\r\n                            } break;\r\n                        }\r\n                    }\r\n                    if (!isPlay && e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }\r\n                }\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Build', enable: true, cont: buildTabJsx },\r\n                            { name: 'Play', enable: frameCnt !== -1, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={props.closeButtonAction}\r\n                >×</_CloseButton>\r\n            </_Frame >\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLogicFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _FormDiv = styled.div<{\r\n    isSeed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 580px;\r\n    background-color: #c5cfd6df;\r\n    ${props => !props.isSeed ? '' : css`\r\n        background-color: #c6d6c5df;\r\n    `}\r\n    overflow-y: auto;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #c5c5c5df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;\r\n\r\n\r\nconst _Blind = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: ${props => !props.isEnable ? 'none;' : 'inline-block;'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000552cd;\r\n    z-index: 99;\r\n`;\r\n\r\nconst _Msg = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    margin: 240px 0 0 110px;\r\n    /* background-color: #26f055cd; */\r\n    color: white;\r\n    font-size: 56px;\r\n    font-weight: 600;\r\n\r\n`;","import { useState, useMemo, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewLogicInputForm = (props: {\r\n    logicWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const argumentList: string[] = useMemo(() => {\r\n        let list: string[] = [];\r\n        const argWrap = LogicElementUtil.getInnerWrap(props.logicWrap, 'argument-mng');\r\n        if (argWrap != null) {\r\n            list = (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                const argItem = arg.data as LogicUtil.NodeArgumentItem;\r\n                return argItem.name;\r\n            });\r\n        }\r\n        return list;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFormList(argumentList.map(arg => {\r\n            return { value: arg, errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        if (formList.find(form => form.errors.length > 0) == undefined) {\r\n            props.setSendingValueMap(() => {\r\n                return formList.map((form, i) => {\r\n                    return { name: argumentList.map(arg => arg)[i], value: Number(form.value) }\r\n                });\r\n            })\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return <>{\r\n        formList.map((form, i) => {\r\n            const argument = argumentList[i];\r\n            return (<FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={argument}\r\n                labelWidth={250}\r\n                jsx={\r\n                    <FormUtil.TextField\r\n                        width={312}\r\n                        isNumber\r\n                        checkable={form}\r\n                        setCheckable={() => {\r\n                            setFormList(formList.slice());\r\n                        }}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            }\r\n                        ]}\r\n                    />\r\n                }\r\n            />);\r\n        })\r\n    }</>\r\n}\r\n\r\nexport default PreviewLogicInputForm;","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../factory/util/logicFormUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewSeedInputForm = (props: {\r\n    seedWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [formgrpList, seedargList, presetList]: [LogicUtil.NodeFromGrpItem[], LogicUtil.NodeSeedArgItem[], LogicUtil.NodeSampleItem[]] = useMemo(() => {\r\n        const formgrpWrap = LogicElementUtil.getInnerWrap(props.seedWrap, 'interface-mng', 'formgrp-mng');\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        if (formgrpWrap != null) {\r\n            formgrpList = (formgrpWrap.data as LogicUtil.NodeFromgrpManager).defines.map(def => def.data as LogicUtil.NodeFromGrpItem);\r\n        }\r\n\r\n        const argWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedarg-mng');\r\n        const argumentList = (argWrap.data as LogicUtil.NodeSeedArgManager).args.map(arg => arg.data as LogicUtil.NodeSeedArgItem);\r\n\r\n        const sampleWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'sample-mng');\r\n        const sampleList = (sampleWrap.data as LogicUtil.NodeSampleManager).samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n        return [formgrpList, argumentList, sampleList];\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        setFormList(seedargList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (formList.find(form => form.errors.length > 0) == undefined) {\r\n            props.setSendingValueMap(() => {\r\n                const valueMap = formList.map((form, i) => {\r\n                    return { name: seedargList.map(arg => arg.name)[i], value: Number(form.value) }\r\n                });\r\n\r\n                // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                const sendMng = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                return sendParams.map(item => {\r\n                    const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                    if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                    return { name: item.name, value }\r\n                });\r\n            });\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"Preset\"\r\n            innerJsx={<FormUtil.Record\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        width={402}\r\n                        checkable={template}\r\n                        setCheckable={setTemplate}\r\n                        headBlank\r\n                        list={presetList.map((sample, i) => {\r\n                            return {\r\n                                labelText: sample.name,\r\n                                value: i.toString()\r\n                            }\r\n                        })}\r\n                    />\r\n                    <FormUtil.ButtonItem\r\n                        button={{\r\n                            label: 'Apply',\r\n                            isEnable: template.value !== '',\r\n                            callback: () => {\r\n                                const selectedIndex = Number(template.value);\r\n                                const values = presetList[selectedIndex].values;\r\n                                values.forEach((value, i) => {\r\n                                    formList[i].value = value.toString();\r\n                                });\r\n                                setFormList(formList.slice());\r\n                            }\r\n                        }}\r\n                    />\r\n                </>}\r\n            />}\r\n        />\r\n        {LogicFormUtil.buildPreviewForms(\r\n            false, seedargList, formgrpList, formList, setFormList\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default PreviewSeedInputForm;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\n\r\nnamespace PreviewLauncherFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        sceens: string[];\r\n        frameCnt: number;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const sceens = props.sceens;\r\n        const frameCnt = props.frameCnt;\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                        } break;\r\n                        case 'ArrowRight': {\r\n                            if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                        } break;\r\n                        case ' ': {\r\n                            setPlay(!isPlay);\r\n                        } break;\r\n                    }\r\n                    if (e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }}\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Play', enable: true, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLauncherFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #aed5d8e0;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport assert from \"assert\";\r\n\r\nnamespace NameDefDialog {\r\n\r\n    export const Component = (props: {\r\n        targetSeq: number,\r\n        type?: ProjectType,\r\n        source?: string,\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const width = 500;\r\n        const height = 150;\r\n\r\n        const isCreate = props.targetSeq === -1;\r\n        const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n        const getDefaultName = () => {\r\n            return props.targetSeq === -1 ? '' : (projects.find(p => p.seq === props.targetSeq) as StoreCloud.Project).name;\r\n        }\r\n\r\n        useEffect(() => {\r\n            name.value = getDefaultName();\r\n            setName({ ...name });\r\n        }, []);\r\n\r\n        const [existNames] = useMemo(() => {\r\n            return [\r\n                projects.map(item => item.name)\r\n            ];\r\n        }, []);\r\n\r\n        const registCreate = () => {\r\n            if(props.type == undefined || props.source == undefined) throw assert;\r\n            const result = findProjectMaxSeq();\r\n            result.then((maxSeq) => {\r\n                const newProject: StoreCloud.Project = {\r\n                    seq: Number(maxSeq + 1),\r\n                    name: name.value,\r\n                    type: props.type as ProjectType,\r\n                    source: props.source as string,\r\n                    lastmod: ''\r\n                };\r\n                projects.push(newProject);\r\n                insertProject(store.system.user?.seq as number, newProject).then(() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            });\r\n        }\r\n\r\n        const registUpdate = () => {\r\n            const targetItem = projects.find(item => item.seq === props.targetSeq);\r\n            if (targetItem != undefined) {\r\n                updateProjectName(props.targetSeq, name.value).then(() => {\r\n                    targetItem.name = name.value;\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            }\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: isCreate ? 'Create' : 'Update',\r\n                isEnable: name.errors.length === 0,\r\n                callback: () => {\r\n                    if (isCreate) registCreate();\r\n                    else registUpdate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, input new name!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => LogicUtil.checkFieldName(value),\r\n                                //     errorType: \"value\"\r\n                                // },\r\n                                {\r\n                                    checker: (value) => !existNames.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NameDefDialog;\r\n\r\nconst findProjectMaxSeq = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT max(seq) m FROM prjcttbl`);\r\n    const results = await response.json();\r\n    return results[0].m;\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, type, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.type}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import DataUtil from \"../../utils/dataUtil\";\r\nimport PreviewLogicFrame from \"../create/preview/previewLogicFrame\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport LogicUtil from \"../create/factory/util/logicUtil\";\r\nimport LogicElementUtil from \"../create/factory/util/logicElementUtil\";\r\nimport styled, { css } from \"styled-components\";\r\nimport StoryUtil from \"../create/launcher/util/storyUtil\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport PreviewUtil from \"../create/preview/previewUtil\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport PreviewLauncherFrame from \"../create/preview/previewLauncherFrame\";\r\nimport { BuildUtil } from \"../create/preview/buildUtil\";\r\nimport Particle from \"../graphic/particle\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    seedList: SeedProps[];\r\n}\r\ntype StoryProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    libraryData: LogicUtil.WrapElement;\r\n    scenarioData: StoryUtil.StoryData;\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\ntype StoryPreviewProps = {\r\n    sceens: string[];\r\n    useFrame: number;\r\n}\r\n\r\nexport type PagingField = {\r\n    useFrame: number;\r\n    curFrame: number;\r\n    sceens: string[];\r\n    owner: Particle.Instance[];\r\n}\r\n\r\nconst PROGRESS_VAL = 1;\r\n\r\nconst DirectLinkManager = (props: {\r\n    projectSeq: number;\r\n}) => {\r\n    const [libData, setLibData] = useState<LibProps | null>(null);\r\n    const [storyData, setStoryData] = useState<StoryProps | null>(null);\r\n    const [storyPreviewProps, setStoryPreviewProps] = useState<StoryPreviewProps | null>(null);\r\n    const [buildCache, setBuildCache] = useState<null | PagingField>(null);\r\n\r\n    const [seedSeq, setSeedSeq] = useState(-1);\r\n\r\n    useEffect(() => {\r\n\r\n        findProject(props.projectSeq).then(resList => {\r\n            if (resList.length > 0) {\r\n                const res = resList[0];\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const data = JSON.parse(DataUtil.unZip(res.source));\r\n                // シナリオであるかどうかの判定\r\n                if (!data.hasOwnProperty('scenarioData')) {\r\n                    const rootData = data as LogicUtil.WrapElement;\r\n                    const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                    const seedList: SeedProps[] = seedMng.defs\r\n                        .filter(wrap => {\r\n                            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                            return seed.permit === 'release';\r\n                        })\r\n                        .map(wrap => {\r\n                            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                            const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                            return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                        });\r\n                    setLibData({\r\n                        name, ownerId, lastmod, rootData, seedList\r\n                    });\r\n                } else {\r\n                    const scenarioProps = data as StoryUtil.ScenarioFileProps;\r\n                    setStoryData({\r\n                        name, ownerId, lastmod, libraryData: scenarioProps.libraryData, scenarioData: scenarioProps.scenarioData\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (buildCache == null || storyData == null) return;\r\n        if (buildCache.useFrame != 0 && buildCache.curFrame == buildCache.useFrame) {\r\n            setStoryPreviewProps({\r\n                sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n            });\r\n            return;\r\n        }\r\n\r\n        const fuseList = storyData.scenarioData.fuseList;\r\n        const limitFrame = storyData.scenarioData.limitFrame;\r\n        const limitParticle = storyData.scenarioData.limitParticle;\r\n        const minFrame = fuseList[0].frame;\r\n        const logicData = storyData.libraryData;\r\n        if (buildCache.useFrame === 0) {\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n                    fuseList.some(fuse => {\r\n                        if (fuse.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                        } else if (fuse.frame > frame) return 1;\r\n                    });\r\n                },\r\n                doEnd: (frame) => {\r\n                    buildCache.useFrame = frame;\r\n                }\r\n            });\r\n            setBuildCache({ ...buildCache });\r\n        } else {\r\n\r\n            BuildUtil.runPaging({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    fuseList.some(fuse => {\r\n                        if (fuse.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                        } else if (fuse.frame > frame) return 1;\r\n                    });\r\n\r\n                    buildCache.sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                // doEnd: () => {\r\n                //     setStoryPreviewProps({\r\n                //         sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                //     });\r\n                // }\r\n            }, buildCache.owner, buildCache.curFrame, PROGRESS_VAL);\r\n            buildCache.curFrame += PROGRESS_VAL;\r\n            if (buildCache.curFrame > buildCache.useFrame) {\r\n                buildCache.curFrame = buildCache.useFrame;\r\n            }\r\n            setBuildCache({ ...buildCache });\r\n        }\r\n    }, [buildCache]);\r\n\r\n    /**\r\n     * プレビューオールダイアログを表示する\r\n     */\r\n    const openPreviewAllDialog = () => {\r\n        setBuildCache({\r\n            useFrame: 0,\r\n            curFrame: 0,\r\n            owner: [],\r\n            sceens: []\r\n        });\r\n    }\r\n\r\n    const getJsx = () => {\r\n        let jsx = <></>;\r\n        if (libData != null) {\r\n            if (seedSeq === -1) {\r\n                jsx = <>\r\n                    <_Header>{libData.name}</_Header>\r\n                    {libData.seedList.map((seed, i) => {\r\n                        const seedName = seed.disp ?? seed.name;\r\n                        return (<_Item key={i}\r\n                            onClick={() => {\r\n                                setSeedSeq(i);\r\n                            }}\r\n                        >\r\n                            <_SeedName>{seedName}</_SeedName>\r\n                            <_ArgCnt> [{seed.argCount} arguments]</_ArgCnt>\r\n                        </_Item>);\r\n                    })}\r\n                </>;\r\n            } else {\r\n                jsx = <PreviewLogicFrame.Component\r\n                    master={libData.seedList[seedSeq].master}\r\n                    rootData={libData.rootData}\r\n                    closeButtonAction={() => {\r\n                        setSeedSeq(-1);\r\n                    }}\r\n                />\r\n            }\r\n        } else if (storyData != null) {\r\n            if (storyPreviewProps == null) {\r\n                const getBlindJsx = () => {\r\n                    if (buildCache == null) return <></>;\r\n                    const rate = buildCache.curFrame / buildCache.useFrame * 100;\r\n                    const isStandby = buildCache.useFrame === 0;\r\n                    return (\r\n                        <_Blind>\r\n                            <_ProgressBox><_ProgressVal rate={rate} /></_ProgressBox>\r\n                            <_RateVal isStandby={isStandby}>{isStandby ? 'Calculating...' : `${Math.floor(rate)}%`}</_RateVal>\r\n                        </_Blind>\r\n                    );\r\n                }\r\n                jsx = <>\r\n                    {getBlindJsx()}\r\n                    <_Header>{storyData.name}</_Header>\r\n                    <FormUtil.ButtonRecord align=\"center\" buttons={[\r\n                        {\r\n                            label: 'Build',\r\n                            callback() {\r\n                                openPreviewAllDialog();\r\n                            },\r\n                        }\r\n                    ]} />\r\n                </>;\r\n            } else {\r\n                jsx = <PreviewLauncherFrame.Component\r\n                    sceens={storyPreviewProps.sceens}\r\n                    frameCnt={storyPreviewProps.useFrame}\r\n                />\r\n            }\r\n        }\r\n        return jsx;\r\n    }\r\n\r\n    return getJsx();\r\n}\r\n\r\nexport default DirectLinkManager;\r\n\r\n\r\nconst findProject = async (conteseq: number) => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE seq = ${conteseq}\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #002910c0;\r\n    z-index: 10;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _ProgressBox = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relaltive;\r\n    width: calc(100% - 20px);\r\n    height: 40px;\r\n    margin: 200px 0 0 10px;\r\n    background-color: #ffffff29;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    background-color: #ffffffc1;\r\n`;\r\n\r\nconst _RateVal = styled.div<{\r\n    isStandby: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #0000003b;\r\n\r\n    color: #ffffff;\r\n    ${props => !props.isStandby ? '' : css`\r\n        color: #f50000;\r\n    `}\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background: linear-gradient(to bottom, #00215e, #000000, #00215e);\r\n\r\n    color: #e0e0e0;\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #abc9e6;\r\n`;\r\n\r\nconst _ArgCnt = styled.span<{\r\n}>`\r\n    color: #fbffbf;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport DirectLinkManager from \"./directLinkManager\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\n\r\ntype ScreenBean = {\r\n    adjLeft: number;\r\n    adjTop: number;\r\n    rate: number;\r\n}\r\n\r\n// export const CONTENTS_WIDTH = 576;\r\n// export const CONTENTS_HEIGHT = 1024;\r\n\r\n\r\nexport const CONTENTS_WIDTH = 600;\r\nexport const CONTENTS_HEIGHT = 660;\r\n\r\nconst MobileRoot = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const [isPermit, setPermit] = useState(true);\r\n    const [screen, setScreen] = useState<ScreenBean>({ adjLeft: 0, adjTop: 0, rate: 1 });\r\n    const ref = useRef<null | HTMLDivElement>(null);\r\n\r\n    const projectSeq = DataUtil.getDecryptionedProjectSeq(props.hashKey);\r\n\r\n    const update = () => {\r\n        if (ref.current != null) {\r\n            // const [clientWidth, clientHeight] = [window.innerWidth, window.innerHeight];\r\n\r\n            const rect = ref.current.getBoundingClientRect();\r\n            const [clientWidth, clientHeight] = [rect.width, rect.height];\r\n\r\n            const cw = CONTENTS_WIDTH;\r\n            const ch = CONTENTS_HEIGHT;\r\n\r\n            const isFitSide = clientHeight / ch > clientWidth / cw;\r\n\r\n            const rate = !isFitSide ? clientHeight / ch : clientWidth / cw;\r\n            const adjLeft = !isFitSide ? clientWidth / 2 - (cw * rate / 2) : 0;\r\n            const adjTop = !isFitSide ? 0 : clientHeight / 2 - (ch * rate / 2);\r\n\r\n            setScreen({ adjLeft, adjTop, rate });\r\n        }\r\n    }\r\n\r\n    // window.addEventListener('DOMContentLoaded', () => {\r\n    //     if (!isSmartPhone()) {\r\n    //         window.addEventListener('resize', update);\r\n    //     } else {\r\n    //         window.addEventListener('orientationchange resize', () => {\r\n    //             update();\r\n    //             setPermit(window.orientation === 0);\r\n    //         });\r\n    //     }\r\n    // });\r\n\r\n    // window.onorientationchange = () => {\r\n    //   setOrientation(window.orientation);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        update();\r\n        console.log(navigator.userAgent);\r\n        if (isSmartPhone()) {\r\n            setPermit(window.orientation === 0);\r\n        }\r\n        if (!isSmartPhone()) {\r\n            window.addEventListener('resize', ()=>{\r\n                update();\r\n            });\r\n        } else {\r\n            window.addEventListener('orientationchange resize', () => {\r\n                alert('change');\r\n                update();\r\n                setPermit(window.orientation === 0);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    let jsx = <_Error>Make your smartphone vertical!</_Error>;\r\n    if (isPermit) {\r\n        jsx = (\r\n            <_Contents>\r\n                <DirectLinkManager projectSeq={projectSeq} />\r\n            </_Contents>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap ref={ref}>\r\n            <_Frame left={screen.adjLeft} top={screen.adjTop} rate={screen.rate}>\r\n                {jsx}\r\n            </_Frame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MobileRoot;\r\n\r\nconst isSmartPhone = () => {\r\n    // UserAgentからのスマホ判定\r\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 10px);\r\n  height: calc(100% - 10px);\r\n  background-color: #9eadc9;\r\n  margin: 5px 0 0 5px; */\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst _Frame = styled.div<{\r\n    left: number;\r\n    top: number;\r\n    rate: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: ${props => props.top}px;\r\n  left: ${props => props.left}px;\r\n  transform-origin: top left;\r\n  /* width: 100%;\r\n  height: 100%; */\r\n  transform: scale(${props => props.rate});\r\n`;\r\n\r\nconst _Contents = styled.div`\r\n  display: inline-block;\r\n  width: ${CONTENTS_WIDTH}px;\r\n  height: ${CONTENTS_HEIGHT}px;\r\n  background-color: #929292;\r\n`;\r\n\r\nconst _Error = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #750000;\r\n    color: white;\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\n\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport Particle from \"../../../graphic/particle\";\r\nimport StoryUtil from \"../util/storyUtil\";\r\nimport { BuildUtil } from \"../../preview/buildUtil\";\r\n\r\nconst StoryFuseAnalysis = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [divide, setDivide] = useState<FormUtil.CheckableValue>({ value: '20', errors: [] });\r\n    const [peak, setPeak] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n    const [total, setTotal] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n\r\n    const [countList, setCountList] = useState<number[]>([]);\r\n\r\n    const scenarioData = store.storyData as StoryUtil.StoryData;\r\n    const limitFrame = scenarioData.limitFrame;\r\n    const limitParticle = scenarioData.limitParticle;\r\n    const defList = scenarioData.fuseList;\r\n\r\n    const logicData = store.libraryData as LogicUtil.WrapElement;\r\n\r\n    const execute = () => {\r\n        const minFrame = defList[0].frame;\r\n        const divRate = 1 / Number(divide.value);\r\n        const countList: number[] = [];\r\n        let peak = 0;\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            guaranteeFrame: minFrame,\r\n            doIterate: (frame, owner) => {\r\n                const def = defList.find(def => def.frame === frame);\r\n                if (def != undefined) {\r\n                    const seedWrap = LogicElementUtil.findSeedWrap(logicData, def.seedId);\r\n                    const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n                    const getOrigin = () => {\r\n                        const root = logicData.data as LogicUtil.NodeRoot;\r\n                        const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                        return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                    }\r\n                    const getSendingValueMap = () => {\r\n                        const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n                        const valueMap = seedargMng.args.map((wrap, i) => {\r\n                            const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                            return { name: seedarg.name, value: def.values[i] }\r\n                        });\r\n\r\n                        // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                        const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                        return sendParams.map(item => {\r\n                            const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                            if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                            return { name: item.name, value }\r\n                        });\r\n                    }\r\n\r\n                    owner.push(new Particle.Instance(\r\n                        PreviewUtil.buildLogicProps(owner, getOrigin(), logicData, getSendingValueMap())\r\n                    ));\r\n                }\r\n\r\n                const pastRate = frame / limitFrame;\r\n                const needPoint = (countList.length + 1);\r\n                const curPoint = pastRate / divRate;\r\n                if (curPoint >= needPoint) {\r\n                    countList.push(owner.length);\r\n                }\r\n\r\n                if (owner.length > peak) peak = owner.length;\r\n            },\r\n            doEnd: (frame) => {\r\n                setTotal({ ...total, value: frame.toString() })\r\n            }\r\n        });\r\n        setPeak({ ...total, value: peak.toString() })\r\n        setCountList(countList);\r\n        // console.log(countList);\r\n    };\r\n\r\n    const itemJsxList = useMemo(() => {\r\n        const divRate = 1 / Number(divide.value);\r\n        const rateHeight = divRate / 1;\r\n        return countList.map((count, i) => {\r\n            const rate = count / limitParticle;\r\n            return (\r\n                <_AnalisisItem key={i}\r\n                    rate={rate * 100}\r\n                    height={rateHeight * 100}\r\n                />\r\n            );\r\n        });\r\n    }, [countList]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <FormUtil.BorderPanel\r\n                title=\"Property\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Divide\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isNumber\r\n                                checkable={divide}\r\n                                setCheckable={setDivide}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 5, 200),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Analysis',\r\n                                isEnable: divide.errors.length === 0 && defList.length > 0,\r\n                                callback: execute\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Result\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Peak\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={150}\r\n                                isNumber\r\n                                checkable={peak}\r\n                                isReadOnly\r\n                                setCheckable={setPeak}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"End frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={150}\r\n                                isNumber\r\n                                checkable={total}\r\n                                isReadOnly\r\n                                setCheckable={setTotal}\r\n                            />\r\n                        }\r\n                    />\r\n                    <_AnalisisDiv>\r\n                        {itemJsxList}\r\n                    </_AnalisisDiv>\r\n                </>}\r\n            />\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default StoryFuseAnalysis;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _AnalisisDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #000000d3;\r\n    width: calc(100% - 16px);\r\n    height: 500px;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _AnalisisItem = styled.div<{\r\n    rate: number;\r\n    height: number;\r\n}>`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #ededed77; */\r\n    background: linear-gradient(to bottom, #d1ceda, #b3aec2, #d1ceda);\r\n    width: ${props => props.rate}%;\r\n    height: calc(${props => props.height}% - 1px);\r\n    margin: 1px 0 0 0;\r\n    /* height: 20px; */\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport LogicFormUtil from \"../../factory/util/logicFormUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport StoryUtil from \"../util/storyUtil\";\r\nimport { FuseBean } from \"../storyTab\";\r\n\r\n\r\nconst StoryProperty = (props: {\r\n    newFrame: FormUtil.CheckableValue;\r\n    setNewFrame: (newFrame: FormUtil.CheckableValue) => void;\r\n    defBean: StoryUtil.Fuse;\r\n    seedList: FuseBean[];\r\n    isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: (frame: number, seedId: string, values: number[]) => void;\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const scenarioData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const [seed, setSeed] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const newFrame = props.newFrame;\r\n    const setNewFrame = props.setNewFrame;\r\n    const isInputOK = seed.errors.length === 0 && newFrame.errors.length === 0 && formList.find(form => form.errors.length > 0) == undefined;\r\n\r\n\r\n    const mapping = () => {\r\n        setNewFrame({ ...newFrame, value: props.defBean.frame.toString() });\r\n        setSeed({ ...seed, value: props.defBean.seedId.toString() });\r\n        setFormList(props.defBean.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.defBean == undefined) return;\r\n        if (props.defBean.seedId === '') {\r\n            setNewFrame({ ...newFrame, value: '' });\r\n            setSeed({ ...seed, value: '' });\r\n            setFormList([]);\r\n        } else {\r\n            mapping();\r\n        }\r\n    }, [props.defBean]);\r\n\r\n    const initFormList = (seedId: string) => {\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seedId;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n        }\r\n        setFormList(argumentList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }\r\n\r\n    const propertiesFormJsx = useMemo(() => {\r\n        if (seed.value === '') return <></>;\r\n\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        let presetList: LogicUtil.NodeSampleItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seed.value;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n            formgrpList = activeSeed.formgrps;\r\n            presetList = activeSeed.presets;\r\n        }\r\n        return (<>\r\n            <FormUtil.BorderPanel\r\n                title=\"Preset\"\r\n                innerJsx={<FormUtil.Record\r\n                    jsx={<>\r\n                        <FormUtil.Combobox\r\n                            width={250}\r\n                            checkable={template}\r\n                            setCheckable={setTemplate}\r\n                            headBlank\r\n                            list={presetList.map((sample, i) => {\r\n                                return {\r\n                                    labelText: sample.name,\r\n                                    value: i.toString()\r\n                                }\r\n                            })}\r\n                            isReadOnly={!props.isModify}\r\n                        />\r\n                        <FormUtil.ButtonItem\r\n                            button={{\r\n                                label: 'Apply',\r\n                                isEnable: template.value !== '',\r\n                                callback: () => {\r\n                                    const selectedIndex = Number(template.value);\r\n                                    const values = presetList[selectedIndex].values;\r\n                                    values.forEach((value, i) => {\r\n                                        formList[i].value = value.toString();\r\n                                    });\r\n                                    setFormList(formList.slice());\r\n                                }\r\n                            }}\r\n                        />\r\n                    </>}\r\n                />}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Properties\"\r\n                innerJsx={<>{\r\n                    LogicFormUtil.buildPreviewForms(\r\n                        !props.isModify, argumentList, formgrpList, formList, setFormList\r\n                    )\r\n                }</>}\r\n            />\r\n        </>);\r\n    }, [template, formList, props.isModify]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: props.isModify,\r\n                        callback: () => {\r\n                            props.cancelAction();\r\n                            setTemplate({ ...template, value: '' });\r\n                            mapping();\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !props.isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !props.isModify || isInputOK,\r\n                        callback: () => {\r\n                            props.modifyAction(\r\n                                Number(newFrame.value),\r\n                                seed.value,\r\n                                formList.map(form => Number(form.value))\r\n                            );\r\n                            setTemplate({ ...template, value: '' });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Base\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isReadOnly={!props.isModify}\r\n                                isNumber\r\n                                checkable={newFrame}\r\n                                setCheckable={setNewFrame}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 0, scenarioData.limitFrame),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Seed\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                checkable={seed}\r\n                                setCheckable={(checkable) => {\r\n                                    initFormList(checkable.value);\r\n                                    setSeed({ ...checkable });\r\n                                }}\r\n                                list={props.seedList.map(seed => {\r\n                                    return { value: seed.name, labelText: seed.disp ?? seed.name }\r\n                                })}\r\n                                headBlank\r\n                                width={250}\r\n                                isReadOnly={!props.isModify}\r\n                                validates={\r\n                                    [\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n            {propertiesFormJsx}\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default StoryProperty;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #dbebd6;\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport StoryUtil from \"../util/storyUtil\";\r\n\r\n\r\nconst StoryEnvironment = (props: {\r\n    isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: () => void;\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [particle, setParticle] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const data = store.storyData as StoryUtil.StoryData;\r\n\r\n    const mapping = () => {\r\n        setFrame({ ...frame, value: data.limitFrame.toString() });\r\n        setParticle({ ...particle, value: data.limitParticle.toString() });\r\n    }\r\n    useEffect(() => {\r\n        mapping();\r\n    }, []);\r\n\r\n    const isInputOK = particle.errors.length === 0 && frame.errors.length === 0;\r\n\r\n    const maxLimit = data.fuseList.map(def => def.frame).reduce((prev, cur) => {\r\n        return prev > cur ? prev : cur;\r\n    }, 0);\r\n\r\n    return (<_Wrap>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Cancel',\r\n                    isEnable: props.isModify,\r\n                    callback: () => {\r\n                        mapping();\r\n                        props.cancelAction();\r\n                    }\r\n                },\r\n                {\r\n                    label: !props.isModify ? 'Modify' : 'Regist',\r\n                    isEnable: !props.isModify || isInputOK,\r\n                    callback: () => {\r\n                        data.limitFrame = Number(frame.value);\r\n                        data.limitParticle = Number(particle.value);\r\n                        setStore({ ...store });\r\n                        props.modifyAction();\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Limit\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!props.isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkNumberRange(value, maxLimit, 1000),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Particle\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!props.isModify}\r\n                            isNumber\r\n                            checkable={particle}\r\n                            setCheckable={setParticle}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkNumberRange(value, 100, 5000),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </_Wrap>)\r\n}\r\n\r\nexport default StoryEnvironment;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import { useContext, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { JsxEmit } from \"typescript\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport { FuseBean } from \"./storyTab\";\r\nimport StoryUtil from \"./util/storyUtil\";\r\n\r\nconst ITEM_WIDTH = 10;\r\nconst DIV_CNT = 5;\r\n\r\nconst TimelineFrame = (props: {\r\n    newFrameValue: number;\r\n    setNewFrameValue: (num: number) => void;\r\n    isModify: boolean;\r\n    focus: number;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const scenarioData = store.storyData as StoryUtil.StoryData;\r\n    const fuseList = scenarioData.fuseList;\r\n    const cacheList = store.scenarioCacheList;\r\n    const limitFrame = scenarioData.limitFrame;\r\n\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const fusePosJsxList = useMemo(() => {\r\n        if(cacheList.length !== fuseList.length) return [];\r\n        const newFrameRate = props.newFrameValue / limitFrame;\r\n        return fuseList.map((fuse, i) => {\r\n            const rate = props.isModify && props.focus === i ? newFrameRate : fuse.frame / limitFrame;\r\n            const x = rate * 100;\r\n            const y = 5 + i * (ITEM_WIDTH + 3);\r\n            const cache = store.scenarioCacheList.find(cache => cache.seq === fuse.seq) as StoryUtil.Cache;\r\n            const sus = cache.useFrame / limitFrame * 100;\r\n            return (<div key={i}>\r\n                {props.isModify && props.focus === i ? (\r\n                    <_Line x={x} />\r\n                ) : <></>}\r\n                <_Item\r\n                    x={x} y={y}\r\n                    isFocus={i === props.focus}\r\n                />\r\n                <_Sustain\r\n                    x={x}\r\n                    y={y}\r\n                    sus={sus}\r\n                />\r\n            </div>);\r\n        });\r\n    }, [limitFrame, props.focus, fuseList, props.isModify, props.newFrameValue, cacheList]);\r\n\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i < DIV_CNT + 1; i++) {\r\n            const rate = i / DIV_CNT;\r\n            const value = Math.floor(limitFrame * rate);\r\n            jsxList.push(\r\n                <_Memori\r\n                    key={i}\r\n                    x={rate * 100}\r\n                >{value}</_Memori>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [limitFrame]);\r\n\r\n    return (<>\r\n        <_MeasureDiv>\r\n            {memoriJsxList}\r\n        </_MeasureDiv>\r\n        <_Wrap\r\n            ref={ref}\r\n            isModify={props.isModify}\r\n            onClick={(e) => {\r\n                if (!props.isModify) return;\r\n                if (ref != null) {\r\n                    const dom = ref.current as HTMLDivElement;\r\n                    const rect = dom.getBoundingClientRect();\r\n                    const pos = e.clientX - rect.x;\r\n                    const rate = pos / rect.width;\r\n                    const newFrame = Math.floor(limitFrame * rate);\r\n                    props.setNewFrameValue(newFrame);\r\n                }\r\n            }}>\r\n            {fusePosJsxList}\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default TimelineFrame;\r\n\r\nconst MEASURE_WIDTH = 40;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #f2d9341a;\r\n    /* border-bottom: 3px solid #fff; */\r\n    box-sizing: border-box;\r\n    width: calc(100% - 36px);\r\n    height: ${MEASURE_WIDTH}px;\r\n    margin: 2px 0 0 18px;\r\n`;\r\nconst _Memori = styled.div<{\r\n    x: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* background-color: #ffffff31; */\r\n    width: 30px;\r\n    height: 20px;\r\n    left: calc(${props => props.x}% - 18px);\r\n    bottom: 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Wrap = styled.div<{\r\n    isModify: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b3d0b937;\r\n    /* border: 1px solid #ffffff4c; */\r\n    ${props => !props.isModify ? '' : css`\r\n        background-color: #ff000049;\r\n    `}\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 36px);\r\n    height: calc(100% - ${MEASURE_WIDTH + 8}px);\r\n    margin: 2px 0 0 18px;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #ffffff8d;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #ffb222;\r\n    `}\r\n    /* border: solid 1px #000000; */\r\n    border-radius: ${ITEM_WIDTH}px;\r\n    width: ${ITEM_WIDTH}px;\r\n    height: ${ITEM_WIDTH}px;\r\n    left: calc(${props => props.x}% - ${ITEM_WIDTH / 2}px);\r\n    top: ${props => props.y}px;\r\n`;\r\nconst _Sustain = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    sus: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #bfffb324;\r\n    /* border: solid 1px #000000; */\r\n    /* border-radius: ${ITEM_WIDTH}px; */\r\n    width: ${props => props.sus}%;\r\n    height: ${ITEM_WIDTH / 2}px;\r\n    left: calc(${props => props.x}%);\r\n    top: calc(${props => props.y}px + ${ITEM_WIDTH / 4}px);\r\n`;\r\nconst _Line = styled.div<{\r\n    x: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #ff0000f0;\r\n    left: ${props => props.x}%;\r\n    top: 0;\r\n    width: 1px;\r\n    height: 100%;\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryFuseAnalysis from \"./tab/storyFuseAnalysis\";\r\nimport StoryProperty from \"./tab/storyProperty\";\r\nimport StoryEnvironment from \"./tab/storyEnvironment\";\r\nimport TimelineFrame from \"./timelineFrame\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport PreviewUtil from \"../preview/previewUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport PreviewLauncherFrame from \"../preview/previewLauncherFrame\";\r\nimport StoryUtil from \"./util/storyUtil\";\r\nimport { BuildUtil } from \"../preview/buildUtil\";\r\n\r\nexport type FuseBean = {\r\n    name: string;\r\n    disp?: string;\r\n    args: LogicUtil.NodeSeedArgItem[];\r\n    formgrps: LogicUtil.NodeFromGrpItem[];\r\n    presets: LogicUtil.NodeSampleItem[];\r\n};\r\n\r\nconst StoryTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const scenarioData = store.storyData as StoryUtil.StoryData;\r\n    const limitFrame = scenarioData.limitFrame;\r\n    const limitParticle = scenarioData.limitParticle;\r\n\r\n    const [newFrame, setNewFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [defList, setDefList] = useState<LaunchDef[]>([]);\r\n    const [isFuseEdit, setFuseEdit] = useState<boolean>(false);\r\n    const [isEnvEdit, setEnvEdit] = useState<boolean>(false);\r\n    const [tabActiveIndex, setTabActiveIndex] = useState<number>(0);\r\n    const [focus, setFocus] = useState<number>(-1);\r\n\r\n    const fuseList = scenarioData.fuseList;\r\n\r\n    const setFuseList = (fuseList: StoryUtil.Fuse[]) => {\r\n        scenarioData.fuseList = fuseList;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const seedList: FuseBean[] = useMemo(() => {\r\n        if (store.libraryData == null) return [];\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        const seedWrapList = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        return seedWrapList.map(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n\r\n            // 引数リストを取得\r\n            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const args = argMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n\r\n            // フォームグループリストを取得\r\n            const groupMng = LogicElementUtil.getInnerWrap(wrap, 'interface-mng', 'formgrp-mng');\r\n            let formgrps: LogicUtil.NodeFromGrpItem[] = [];\r\n            if (groupMng != null) {\r\n                formgrps = (groupMng.data as LogicUtil.NodeFromgrpManager).defines.map(wrap => wrap.data as LogicUtil.NodeFromGrpItem);\r\n            }\r\n\r\n            // プリセットリストを取得\r\n            const sampleMng = LogicElementUtil.getInnerWrap(wrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n            const presets = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n            return {\r\n                name: seed.name,\r\n                disp: seed.disp,\r\n                args, formgrps, presets\r\n            }\r\n        });\r\n    }, [store.libraryData]);\r\n\r\n    useEffect(() => {\r\n        if (scenarioData.fuseList.length > 0) {\r\n            const scenarioCacheList: StoryUtil.Cache[] = [];\r\n            scenarioData.fuseList.forEach((fuse) => {\r\n                const newCache: StoryUtil.Cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n                updateCache(fuse, newCache);\r\n                scenarioCacheList.push(newCache);\r\n            });\r\n            store.scenarioCacheList = scenarioCacheList;\r\n            setStore({ ...store });\r\n        }\r\n    }, [scenarioData]);\r\n\r\n    const createSeq = () => {\r\n        return fuseList\r\n            .map(def => def.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    const add = () => {\r\n        const seq = createSeq();\r\n        fuseList.push({ seq, frame: 0, seedId: '', values: [] });\r\n        setFuseList(fuseList.slice());\r\n        setFocus(fuseList.length - 1);\r\n        store.scenarioCacheList.push({ seq, thumbList: [], useFrame: 0 });\r\n        setTabActiveIndex(2);\r\n        setFuseEdit(true);\r\n    }\r\n\r\n    const fuseJsxList = useMemo(() => {\r\n        return fuseList.map((fuse, i) => {\r\n\r\n            const cache = store.scenarioCacheList.find(cache => cache.seq === fuse.seq);\r\n\r\n            let thumbJsx: JSX.Element[] = [];\r\n            if (cache != undefined) {\r\n                thumbJsx = cache.thumbList.slice(0, 3).map((thumb, j) => {\r\n                    const imgJsx = thumb == undefined ? <></> : <_IMG src={thumb.url} />;\r\n                    return (\r\n                        <_SampleDiv key={j}>-\r\n                            <_SampleName>{thumb.name}</_SampleName>\r\n                            <_CanvasDiv>\r\n                                {imgJsx}\r\n                            </_CanvasDiv>\r\n                        </_SampleDiv>\r\n                    );\r\n                });\r\n            };\r\n            return (\r\n                <_ItemDiv key={i}\r\n                    isEnable={!isFuseEdit || focus === i}\r\n                >\r\n                    <_ItemFrame isFocus={i === focus}\r\n                        onClick={() => {\r\n                            setFocus(i);\r\n                        }}\r\n                    >\r\n                        {fuse.seedId === '' ? (\r\n                            <_PropRecord>Creating...</_PropRecord>\r\n                        ) : (<>\r\n                            <_FrameRecord>{fuse.frame}</_FrameRecord>\r\n                            {/* <_SeedRecord>{def.seedName}: {def.seq}</_SeedRecord> */}\r\n                            <_SeedRecord>{fuse.seedId}</_SeedRecord>\r\n                            <_ThumbFrame>\r\n                                {thumbJsx}\r\n                            </_ThumbFrame>\r\n                            {fuse.values.map((val, j) => {\r\n                                const seedBean = seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n                                const name = seedBean.args[j].name;\r\n                                return (\r\n                                    <_PropRecord key={j}><_Title>{name}: </_Title>{val}</_PropRecord>\r\n                                );\r\n                            })}\r\n                        </>)}\r\n                    </_ItemFrame>\r\n                </_ItemDiv>\r\n            );\r\n        });\r\n    }, [fuseList, focus, isFuseEdit, store.scenarioCacheList]);\r\n\r\n    /**\r\n     * プレビューオールダイアログを表示する\r\n     */\r\n    const openPreviewAllDialog = () => {\r\n        const minFrame = fuseList[0].frame;\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        const sceens: string[] = [];\r\n        let useFrame: number = 0;\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            guaranteeFrame: minFrame,\r\n            doIterate: (frame, owner) => {\r\n\r\n                fuseList.some(def => {\r\n                    if (def.frame === frame) {\r\n                        LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                    } else if (def.frame > frame) return 1;\r\n                });\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                }));\r\n            },\r\n            doEnd: (frame) => {\r\n                useFrame = frame;\r\n            }\r\n        });\r\n        store.system.dialog = (\r\n            <PreviewLauncherFrame.Component\r\n                sceens={sceens}\r\n                frameCnt={useFrame}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * プレビューソロダイアログを表示する\r\n     */\r\n    const openPreviewSoloDialog = () => {\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        const sceens: string[] = [];\r\n        let useFrame: number = 0;\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            doIterate: (frame, owner) => {\r\n\r\n                const def = fuseList[focus];\r\n                if (frame === 0) {\r\n                    LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                }\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                }));\r\n            },\r\n            doEnd: (frame) => {\r\n                useFrame = frame;\r\n            }\r\n        });\r\n        store.system.dialog = (\r\n            <PreviewLauncherFrame.Component\r\n                sceens={sceens}\r\n                frameCnt={useFrame}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const updateCache = (fuse: StoryUtil.Fuse, cache: StoryUtil.Cache) => {\r\n\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        cache.thumbList = [];\r\n        cache.useFrame = 0;\r\n        const seedProps = LogicElementUtil.getSeedProperties(logicData, fuse.seedId);\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            doIterate: (frame, owner) => {\r\n                if (frame === 0) {\r\n                    LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                }\r\n\r\n                const thumb = seedProps.thumbnailList.find(thumb => thumb.frame === frame);\r\n                if (thumb != undefined) {\r\n                    const url = CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    });\r\n                    cache.thumbList.push({ name: thumb.name, url });\r\n                }\r\n            },\r\n            doEnd: (frame) => {\r\n                cache.useFrame = frame;\r\n            }\r\n        });\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const isCreate = fuseList.length === 0 ? false : fuseList[fuseList.length - 1].seedId === '';\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n        >\r\n            <_ListDiv>\r\n                <_ListHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview All',\r\n                                isEnable: !isFuseEdit,\r\n                                callback: openPreviewAllDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_ListHead>\r\n                <_ListHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Add',\r\n                                isEnable: !isFuseEdit,\r\n                                callback: add\r\n                            },\r\n                            {\r\n                                label: 'Delete',\r\n                                isEnable: !isFuseEdit && focus != -1,\r\n                                callback: () => {\r\n                                    fuseList.splice(focus, 1);\r\n                                    setFuseList(fuseList.slice());\r\n                                    if (focus > 0) {\r\n                                        setFocus(focus - 1);\r\n                                    } else if (focus === 0 && fuseList.length === 0) {\r\n                                        setFocus(-1);\r\n                                        setTabActiveIndex(0);\r\n                                    }\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Replicate',\r\n                                isEnable: !isFuseEdit && focus != -1,\r\n                                callback: () => {\r\n                                    const cloneFuse = JSON.parse(JSON.stringify(fuseList[focus])) as StoryUtil.Fuse;\r\n                                    const newSeq = createSeq();\r\n                                    cloneFuse.seq = newSeq;\r\n                                    fuseList.splice(focus, 0, cloneFuse);\r\n                                    setFuseList(fuseList.slice());\r\n                                    setFocus(focus + 1);\r\n\r\n                                    // const baseCache = store.launchCacheList.find(cache => cache.seq === defList[focus].seq) as Cache;\r\n                                    // console.log(baseCache);\r\n                                    // const cloneCache = JSON.parse(JSON.stringify(baseCache)) as Cache;\r\n                                    // cloneCache.seq = newSeq;\r\n                                    const newCache: StoryUtil.Cache = { seq: newSeq, thumbList: [], useFrame: 0 };\r\n                                    updateCache(cloneFuse, newCache);\r\n                                    store.scenarioCacheList.push(newCache);\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Preview Solo',\r\n                                isEnable: !isFuseEdit && focus != -1,\r\n                                callback: openPreviewSoloDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_ListHead>\r\n                <_ListBody>\r\n                    <_Timeline><TimelineFrame\r\n                        newFrameValue={Number(newFrame.value)}\r\n                        setNewFrameValue={(num: number) => {\r\n                            setNewFrame({ ...newFrame, value: num.toString() })\r\n                        }}\r\n                        isModify={isFuseEdit}\r\n                        focus={focus}\r\n                        seedList={seedList}\r\n                    /></_Timeline>\r\n                    <_ListMain>\r\n                        {fuseJsxList}\r\n                    </_ListMain>\r\n                </_ListBody>\r\n            </_ListDiv>\r\n            <_RightDiv>\r\n                <_RightInner>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            {\r\n                                name: 'Environment', enable: !isFuseEdit, cont: <StoryEnvironment\r\n                                    isModify={isEnvEdit}\r\n                                    cancelAction={() => {\r\n                                        setEnvEdit(false);\r\n                                    }}\r\n                                    modifyAction={() => {\r\n                                        if (!isEnvEdit) {\r\n                                            setEnvEdit(true);\r\n                                        } else {\r\n                                            setEnvEdit(false);\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            },\r\n                            { name: 'Analysis', enable: !isFuseEdit && !isEnvEdit, cont: <StoryFuseAnalysis /> },\r\n                            {\r\n                                name: 'Property', enable: !isEnvEdit && focus != -1, cont: <StoryProperty\r\n                                    newFrame={newFrame}\r\n                                    setNewFrame={setNewFrame}\r\n                                    defBean={fuseList[focus]}\r\n                                    seedList={seedList}\r\n                                    isModify={isFuseEdit}\r\n                                    cancelAction={() => {\r\n                                        setFuseEdit(false);\r\n                                        if (isCreate) {\r\n                                            fuseList.splice(fuseList.length - 1, 1);\r\n                                            setFuseList(fuseList.slice());\r\n                                            setFocus(focus - 1);\r\n                                            if (fuseList.length === 0) {\r\n                                                setTabActiveIndex(0);\r\n                                            }\r\n                                        }\r\n                                    }}\r\n                                    modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                        if (!isFuseEdit) {\r\n                                            setFuseEdit(true);\r\n                                        } else {\r\n                                            const fuse = fuseList[focus];\r\n                                            fuse.frame = frame;\r\n                                            fuse.seedId = seedId;\r\n                                            fuse.values = values;\r\n                                            const seq = fuse.seq;\r\n                                            const cache = store.scenarioCacheList.find(cache => cache.seq === seq) as StoryUtil.Cache;\r\n                                            updateCache(fuse, cache);\r\n                                            fuseList.sort((a, b) => {\r\n                                                return a.frame - b.frame;\r\n                                            });\r\n                                            setFuseList(fuseList.slice());\r\n                                            setFocus(fuseList.findIndex(def => def.seq === seq));\r\n                                            setFuseEdit(false);\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            }\r\n                        ]}\r\n                        selectTabIndex={setTabActiveIndex}\r\n                        activeNo={tabActiveIndex}\r\n                    />\r\n                </_RightInner>\r\n            </_RightDiv>\r\n            {/* <_Blind isVisible={isBackingWnd}>\r\n                    <_Contents>{!isBackingWnd ? <></> : <BackingEditorFrame />}</_Contents>\r\n                </_Blind> */}\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default StoryTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #1e1c22;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _ListDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #653fd6; */\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst LIST_HEAD = 40;\r\nconst TIMELINE_WIDTH = 240;\r\n\r\nconst _ListHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d8;\r\n    width: 100%;\r\n    height: ${LIST_HEAD}px;\r\n`;\r\n\r\nconst _ListBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: calc(100% - ${LIST_HEAD * 2}px);\r\n`;\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #00071b;\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: ${TIMELINE_WIDTH}px;\r\n`;\r\nconst _ListMain = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #c551b6; */\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: calc(100% - ${TIMELINE_WIDTH}px);\r\n    overflow-x: auto;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _RightDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c1c0c4;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\nconst _RightInner = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n`;\r\n\r\nconst _TabContWrap = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 630px;\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    /* opacity: 0.9; */\r\n    overflow: hidden;\r\n`;\r\n\r\n\r\nconst _ItemDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    background: linear-gradient(to right, #3a383d, #8d8999, #3a383d);\r\n    vertical-align: top;\r\n    width: 220px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n    background: linear-gradient(to right, #66626b, #b7b2c7, #66626b);\r\n    }\r\n`;\r\n\r\nconst _ItemFrame = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #8997bd29;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #d7eb7d83;\r\n    `}\r\n    border: 1px solid #2c3577;\r\n    border-radius: 2px;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _PropRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    /* margin-top: 1px; */\r\n    height: 24px;\r\n    /* background: linear-gradient(to bottom, #aaaaaa89, #e1e1e18a, #aaaaaa89); */\r\n    /* font-size: 20px; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #555555;\r\n    font-style: italic;\r\n    line-height: 22px;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Title = styled.span`\r\n    color: #f00;\r\n`;\r\n\r\n\r\nconst _FrameRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    height: 35px;\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    color: #132693;\r\n    font-style: italic;\r\n    line-height: 34px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\nconst _SeedRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    height: 35px;\r\n    font-size: 26px;\r\n    font-style: italic;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    line-height: 34px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ThumbFrame = styled.div<{}>`\r\n    display: inline-block;\r\n    /* background-color: #4b09ff; */\r\n    width: 100%;\r\n`;\r\nconst WND_SIZE = 65;\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport { ProjectType, ProjectTypes } from \"../../../redux/store/store\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\n\r\nnamespace NewProjectDialog {\r\n\r\n    type CloudLibInfo = {\r\n        seq: number;\r\n        name: string;\r\n        ownerId: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    type LocalLibInfo = {\r\n        fileName: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const Component = (props: {\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [type, setType] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const [selectedLib, setSelectedLib] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [localLib, setLocalLib] = useState<null | LocalLibInfo>(null);\r\n\r\n        const [cloudLibs, setCloudLibs] = useState<null | CloudLibInfo[]>(null);\r\n\r\n        const width = 500;\r\n        const height = 340;\r\n\r\n        // useEffect(() => {\r\n        //     setType({ ...type });\r\n        // }, []);\r\n\r\n        const getStoryLib = () => {\r\n            let storyLib: LogicUtil.WrapElement | null = null;\r\n            if (cloudLibs != null) {\r\n                const lib = cloudLibs.find(lib => lib.seq === Number(selectedLib.value));\r\n                if (lib != undefined) {\r\n                    storyLib = lib.rootData;\r\n                }\r\n            } else if (localLib != null) {\r\n                storyLib = localLib.rootData;\r\n            }\r\n            return storyLib;\r\n        }\r\n\r\n        const usingHash = useMemo(() => {\r\n            let hash = '-';\r\n            const lib = getStoryLib();\r\n            if (lib != null) {\r\n                hash = DataUtil.getSHA256Hash(JSON.stringify(lib));\r\n            }\r\n            return hash;\r\n        }, [selectedLib, localLib]);\r\n\r\n        const isCreateEnabled = () => {\r\n            if (type.value === '') return false;\r\n            if ((type.value as ProjectType) === 'story') {\r\n                return usingHash !== '-';\r\n            }\r\n            return true;\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Create',\r\n                isEnable: isCreateEnabled(),\r\n                callback: () => {\r\n                    const projectType = type.value as ProjectType;\r\n                    if (projectType as ProjectType === 'library') {\r\n                        store.libraryData = LogicElementUtil.getInitialData();\r\n                    } else {\r\n                        store.libraryData = getStoryLib();\r\n                        store.storyData = {\r\n                            limitFrame: 300,\r\n                            limitParticle: 3000,\r\n                            fuseList: []\r\n                        };\r\n                    }\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, select project type!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={type}\r\n                            width={178}\r\n                            setCheckable={(checkable => {\r\n                                setType(checkable);\r\n                                if (checkable.value as ProjectType !== 'story') {\r\n                                    setCloudLibs(null);\r\n                                    setLocalLib(null);\r\n                                    setSelectedLib({ value: '', errors: [] });\r\n                                }\r\n                            })}\r\n                            list={ProjectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.BorderPanel\r\n                    title=\"Story\"\r\n                    isEnable={type.value as ProjectType === 'story'}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Source\"\r\n                            jsx={<>\r\n                                <FormUtil.ButtonItem\r\n                                    button={{\r\n                                        label: 'Cloud',\r\n                                        width: 120,\r\n                                        callback: () => {\r\n                                            findAllReleaseProjectList().then(resList => {\r\n                                                setCloudLibs(resList.map(res => {\r\n                                                    return {\r\n                                                        name: res.name,\r\n                                                        ownerId: res.owner,\r\n                                                        seq: res.seq,\r\n                                                        rootData: JSON.parse(DataUtil.unZip(res.source))\r\n                                                    }\r\n                                                }));\r\n                                                setLocalLib(null);\r\n                                            });\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                <FormUtil.ButtonItem\r\n                                    button={{\r\n                                        label: 'Local',\r\n                                        width: 120,\r\n                                        callback: () => {\r\n                                            (async () => {\r\n                                                const [fileHandle] = await window.showOpenFilePicker();\r\n                                                const file = await fileHandle.getFile();\r\n                                                const fileContents = await file.text();\r\n                                                const text = DataUtil.unZip(fileContents);\r\n                                                setLocalLib({\r\n                                                    fileName: file.name,\r\n                                                    rootData: JSON.parse(text)\r\n                                                });\r\n                                                setCloudLibs(null);\r\n                                                setSelectedLib({ value: '', errors: [] });\r\n                                            })();\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </>}\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Cloud\"\r\n                            isEnabled={cloudLibs != null}\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    marginLeft={2}\r\n                                    checkable={selectedLib}\r\n                                    width={278}\r\n                                    setCheckable={setSelectedLib}\r\n                                    list={(cloudLibs ?? []).map((item) => {\r\n                                        // const disp = `${item.ownerId}: ${item.name}`;\r\n                                        return { value: item.seq.toString(), labelText: item.name };\r\n                                    })}\r\n                                    headBlank\r\n                                    validates={[\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Local\"\r\n                            isEnabled={localLib != null}\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={localLib == null ? '' : localLib.fileName}\r\n                                    isRecordItem\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Hash\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={usingHash}\r\n                                    isRecordItem\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewProjectDialog;\r\n\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport { ProjectType, ProjectTypes } from \"../../../redux/store/store\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\n\r\nnamespace NewProjectDialogStoryOnly {\r\n\r\n    type CloudLibInfo = {\r\n        seq: number;\r\n        name: string;\r\n        ownerId: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const Component = (props: {\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [selectedLib, setSelectedLib] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [cloudLibs, setCloudLibs] = useState<null | CloudLibInfo[]>(null);\r\n\r\n        const width = 500;\r\n        const height = 180;\r\n\r\n        useEffect(() => {\r\n            findAllReleaseProjectList().then(resList => {\r\n                setCloudLibs(resList.map(res => {\r\n                    return {\r\n                        name: res.name,\r\n                        ownerId: res.owner,\r\n                        seq: res.seq,\r\n                        rootData: JSON.parse(DataUtil.unZip(res.source))\r\n                    }\r\n                }));\r\n            });\r\n        }, []);\r\n\r\n        const getStoryLib = () => {\r\n            let storyLib: LogicUtil.WrapElement | null = null;\r\n            if (cloudLibs != null) {\r\n                const lib = cloudLibs.find(lib => lib.seq === Number(selectedLib.value));\r\n                if (lib != undefined) {\r\n                    storyLib = lib.rootData;\r\n                }\r\n            }\r\n            return storyLib;\r\n        }\r\n\r\n        const usingHash = useMemo(() => {\r\n            let hash = '-';\r\n            const lib = getStoryLib();\r\n            if (lib != null) {\r\n                hash = DataUtil.getSHA256Hash(JSON.stringify(lib));\r\n            }\r\n            return hash;\r\n        }, [selectedLib]);\r\n\r\n        const isCreateEnabled = () => {\r\n            return usingHash !== '-';\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Create',\r\n                isEnable: isCreateEnabled(),\r\n                callback: () => {\r\n                    store.libraryData = getStoryLib();\r\n                    store.storyData = {\r\n                        limitFrame: 300,\r\n                        limitParticle: 3000,\r\n                        fuseList: []\r\n                    };\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, select library!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Cloud\"\r\n                    isEnabled={cloudLibs != null}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={selectedLib}\r\n                            width={278}\r\n                            setCheckable={setSelectedLib}\r\n                            list={(cloudLibs ?? []).map((item) => {\r\n                                // const disp = `${item.ownerId}: ${item.name}`;\r\n                                return { value: item.seq.toString(), labelText: item.name };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Hash\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            value={usingHash}\r\n                            isRecordItem\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewProjectDialogStoryOnly;\r\n\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import assert from \"assert\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryUtil from \"../launcher/util/storyUtil\";\r\nimport NameDefDialog from \"./nameDefDialog\";\r\nimport NewProjectDialog from \"./newProjectDialog\";\r\nimport NewProjectDialogStoryOnly from \"./newProjectDialogStoryOnly\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n    const listItemJsx = store.cloud == null ? [] : store.cloud.projects.map((project, i) => {\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    setFcsListIdx(i);\r\n                    console.log(DataUtil.getHashedFromProjectSeq(project.seq));\r\n                }}\r\n                onContextMenu={() => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={DataUtil.getDirectUrl(project.type, project.seq)}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }}\r\n            >\r\n                <_Status type={project.type}>[{project.type}] </_Status>\r\n                <_Name>{project.name}</_Name>\r\n                {/* <_Date> -{item.lastmod}</_Date> */}\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    const getProjectType = () => {\r\n        let str = '-';\r\n        if (store.libraryData != null) str = 'library';\r\n        if (store.storyData != null) str = 'story';\r\n        return str;\r\n    }\r\n\r\n    const hasData = store.libraryData != null;\r\n    const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n    useEffect(() => {\r\n        if (store.cloud == null) {\r\n            setFcsListIdx(-1);\r\n        }\r\n    }, [store.cloud]);\r\n\r\n    const [elementSize, developCnt, privateCnt, releaseCnt, logicCnt, fuseCnt] = useMemo(() => {\r\n        if (store.libraryData == null) return [0, 0, 0, 0, 0, 0];\r\n        let size = 0;\r\n        const incrRec = (wrap: LogicUtil.WrapElement) => {\r\n            size++;\r\n            const listName = LogicElementUtil.getListParamName(wrap.type);\r\n            if (listName != null) {\r\n                const list = wrap.data[listName] as LogicUtil.WrapElement[];\r\n                list.forEach(wrap => incrRec(wrap));\r\n            }\r\n        }\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        incrRec(root.logicMng);\r\n        incrRec(root.seedMng);\r\n\r\n        let developCnt = 0;\r\n        let privateCnt = 0;\r\n        let releaseCnt = 0;\r\n        let fuseCnt = 0;\r\n        const seedMng = root.seedMng.data as LogicUtil.NodeSeedManager;\r\n        seedMng.defs.forEach(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n            switch (seed.permit) {\r\n                case 'develop': developCnt++; break;\r\n                case 'private': privateCnt++; break;\r\n                case 'release': releaseCnt++; break;\r\n            }\r\n        });\r\n\r\n        const logicMng = root.logicMng.data as LogicUtil.NodeLogicManager;\r\n\r\n        if (store.storyData != null) {\r\n            fuseCnt = store.storyData.fuseList.length;\r\n        }\r\n        return [size, developCnt, privateCnt, releaseCnt, logicMng.defs.length, fuseCnt];\r\n    }, [store.libraryData]);\r\n\r\n    \r\n    const getData = (type: ProjectType) => {\r\n        switch (type) {\r\n            case 'library': {\r\n                return store.libraryData;\r\n            }\r\n            case 'story': {\r\n                const data: StoryUtil.ScenarioFileProps = {\r\n                    libraryData: store.libraryData as LogicUtil.WrapElement,\r\n                    scenarioData: store.storyData as StoryUtil.StoryData\r\n                };\r\n                return data;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを新規アップロードする\r\n     */\r\n    const uploadCloud = () => {\r\n        const type = getProjectType() as ProjectType;\r\n        const source = DataUtil.gZip(JSON.stringify(getData(type)));\r\n        store.system.dialog = <NameDefDialog.Component\r\n            targetSeq={-1}\r\n            type={type}\r\n            source={source}\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを上書き更新する\r\n     */\r\n    const overwriteCloudFile = () => {\r\n        const type = getProjectType() as ProjectType;\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.gZip(JSON.stringify(getData(type)));\r\n        updateProjectSource(curPrj.seq, getProjectType(), source).then(() => {\r\n            curPrj.source = source;\r\n            curPrj.type = type;\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Update project succesful!\"\r\n            />;\r\n            setStore({ ...store });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 選択中のクラウド上のファイルを読み込む\r\n     */\r\n    const cloneCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.unZip(curPrj.source);\r\n        const data = JSON.parse(source);\r\n        switch (curPrj.type) {\r\n            case 'library': {\r\n                store.libraryData = data;\r\n            } break;\r\n            case 'story': {\r\n                const scenarioFileProps = data as StoryUtil.ScenarioFileProps;\r\n                store.libraryData = scenarioFileProps.libraryData;\r\n                store.storyData = scenarioFileProps.scenarioData;\r\n            } break;\r\n        }\r\n        store.system.dialog = <ConfirmDialog.Component\r\n            message=\"Clone project succesful!\"\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    const saveLocalFile = () => {\r\n        switch (getProjectType() as ProjectType) {\r\n            case 'library': DataUtil.saveLibraryFile(store, setStore); break;\r\n            case 'story': DataUtil.saveScenarioFile(store, setStore); break;\r\n        }\r\n    }\r\n\r\n    const getNewSaveButton = () => {\r\n        switch (tabIndex) {\r\n            // Cloud\r\n            case 0: return {\r\n                label: 'Upload cloud',\r\n                width: 210,\r\n                isEnable: hasData && store.cloud != null,\r\n                callback: uploadCloud\r\n            }\r\n            // Local\r\n            case 1: return {\r\n                label: 'Save file',\r\n                width: 210,\r\n                isEnable: hasData && store.fileHandle == null,\r\n                callback: () => {\r\n                    // store.fileHandle = null;\r\n                    // setStore({...store});\r\n                    saveLocalFile();\r\n                }\r\n            }\r\n        }\r\n        throw assert;\r\n    }\r\n\r\n    const getOverwriteButton = () => {\r\n        switch (tabIndex) {\r\n            // Cloud\r\n            case 0: return {\r\n                label: 'Overwrite',\r\n                width: 210,\r\n                isEnable: fcsListIdx != -1 && hasData,\r\n                callback: overwriteCloudFile\r\n            }\r\n            // Local\r\n            case 1: return {\r\n                label: 'Overwrite',\r\n                width: 210,\r\n                isEnable: hasData && store.fileHandle != null,\r\n                callback: () => {\r\n                    // store.fileHandle = null;\r\n                    // setStore({...store});\r\n                    saveLocalFile();\r\n                }\r\n            }\r\n        }\r\n        throw assert;\r\n    }\r\n\r\n    const cloudJsx = (<_ContDiv isEnable={store.cloud != null}>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Load',\r\n                    isEnable: !hasData && fcsListIdx !== -1 && projects[fcsListIdx].source !== '',\r\n                    callback: cloneCloudFile\r\n                },\r\n                {\r\n                    label: 'Rename',\r\n                    width: 110,\r\n                    isEnable: fcsListIdx != -1,\r\n                    callback: () => {\r\n                        store.system.dialog = <NameDefDialog.Component\r\n                            targetSeq={projects[fcsListIdx].seq}\r\n                        />;\r\n                        setStore({ ...store });\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Delete',\r\n                    width: 110,\r\n                    isEnable: fcsListIdx != -1,\r\n                    callback: () => {\r\n                        deleteProject(projects[fcsListIdx].seq).then(() => {\r\n                            store.system.dialog = <ConfirmDialog.Component\r\n                                message=\"Delete project succesful!\"\r\n                            />;\r\n                            projects.splice(fcsListIdx, 1);\r\n                            setFcsListIdx(fcsListIdx - 1);\r\n                            setStore({ ...store });\r\n                        });\r\n                    }\r\n                },\r\n            ]}\r\n        />\r\n        <_ListDiv>\r\n            {listItemJsx}\r\n        </_ListDiv>\r\n    </_ContDiv>);\r\n\r\n    const localJsx = (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Load',\r\n                    width: 100,\r\n                    isEnable: !hasData,\r\n                    callback: () => { DataUtil.loadFile(store, setStore) }\r\n                },\r\n                {\r\n                    label: 'Disconnect',\r\n                    width: 160,\r\n                    isEnable: store.fileHandle != null,\r\n                    callback: () => {\r\n                        store.fileHandle = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                },\r\n            ]}\r\n        />\r\n    </>);\r\n\r\n    return (<_Wrap>\r\n        <_HeaderDiv>\r\n            <FormUtil.ButtonRecord\r\n                align=\"left\"\r\n                buttons={[\r\n                    {\r\n                        label: 'New Project',\r\n                        isEnable: !hasData,\r\n                        callback: () => {\r\n\r\n                            store.system.dialog = store.env.isEditLibrary ? <NewProjectDialog.Component /> : <NewProjectDialogStoryOnly.Component />;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Clear',\r\n                        width: 100,\r\n                        isEnable: hasData,\r\n                        callback: () => {\r\n                            store.libraryData = null;\r\n                            store.storyData = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                ]}\r\n            />\r\n        </_HeaderDiv>\r\n        <_BodyDiv>\r\n            <_LeftDiv isEnable={true}>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'Cloud', enable: true, cont: cloudJsx },\r\n                        { name: 'Local', enable: true, cont: localJsx },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_LeftDiv>\r\n            <_RighttDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getNewSaveButton(),\r\n                        getOverwriteButton()\r\n                    ]}\r\n                />\r\n                <FormUtil.BorderPanel\r\n                    title=\"Project\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Type\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={getProjectType()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Private\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : privateCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Release\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : releaseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Logic\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Elements\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : elementSize.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Hash\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    // width={340}\r\n                                    isRecordItem\r\n                                    value={!hasData ? '-' : DataUtil.getSHA256Hash(JSON.stringify(store.libraryData))}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Fuses\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : fuseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n                {/* <FormUtil.BorderPanel\r\n                    title=\"File\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Type\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={getProjectType()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                /> */}\r\n            </_RighttDiv>\r\n        </_BodyDiv>\r\n\r\n    </_Wrap >);\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst updateProjectSource = async (seq: number, type: string, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set type = '${type}', source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from prjcttbl where seq = ${seq};`)\r\n}\r\n\r\nconst HEADER_WIDTH = 40;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    background-color: #ebebeb30;\r\n`;\r\n\r\nconst _HeaderDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_WIDTH}px;\r\n    background-color: #d1f5f32f;\r\n`;\r\n\r\nconst _BodyDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_WIDTH}px);\r\n    background-color: #221a212c;\r\n`;\r\n\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #ffe3fb53; */\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ContDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 38px);\r\n    box-sizing: border-box;\r\n    background-color: #f0ecd43d;\r\n    border: 1px solid #002c8a;\r\n    border-radius: 4px;\r\n`;\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    type: ProjectType | '';\r\n}>`\r\n    color: #0000006d;\r\n    ${props => props.type === 'library' ? css`color: #b90000be;` : ''}\r\n    ${props => props.type === 'story' ? css`color: #003bb9bd;` : ''}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\nconst _RighttDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #cbf7cd2d;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane, TabElements } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport LogicMainteTab from \"./factory/logicMainteTab\";\r\nimport StoryTab from \"./launcher/storyTab\";\r\nimport ManageTab from \"./manage/manageTab\";\r\n\r\nconst CreateChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const getProjectType = () => {\r\n        let str = '-';\r\n        if (store.libraryData != null) str = 'library';\r\n        if (store.storyData != null) str = 'scenario';\r\n        return str;\r\n    };\r\n    const projectType = getProjectType();\r\n\r\n    const tabElements: TabElements[] = [];\r\n    tabElements.push({ name: 'Manage', enable: true, cont: <ManageTab /> });\r\n    tabElements.push({ name: 'Story', enable: projectType === 'scenario', cont: projectType === 'scenario' ? <StoryTab /> : <></> });\r\n    if (store.env.isEditLibrary) {\r\n        tabElements.push({ name: 'Library', enable: projectType === 'library', cont: <LogicMainteTab /> });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={tabElements}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CreateChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport TreeUtil from \"../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../create/factory/util/logicUtil\";\r\nimport PreviewLogicFrame from \"../create/preview/previewLogicFrame\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    isOpen: boolean;\r\n    seedList: SeedProps[];\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\n\r\nconst PublishFrame = (props: {\r\n    setLibCnt: (artsCnt: number) => void;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [libList, setLibList] = useState<LibProps[]>([]);\r\n\r\n    useEffect(() => {\r\n        findAllReleaseProjectList().then((resList) => {\r\n            const libList: LibProps[] = [];\r\n            resList.forEach(res => {\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const rootData = JSON.parse(DataUtil.unZip(res.source)) as LogicUtil.WrapElement;\r\n                const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                const seedList: SeedProps[] = seedMng.defs\r\n                    .filter(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        return seed.permit === 'release';\r\n                    })\r\n                    .map(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                        const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                        return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                    });\r\n                libList.push({\r\n                    name, ownerId, lastmod, rootData, seedList, isOpen: false\r\n                });\r\n            });\r\n            setLibList(libList);\r\n            props.setLibCnt(libList.length);\r\n        });\r\n    }, []);\r\n\r\n    const download = (plainData: string) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        window.showSaveFilePicker(options).then((handle) => {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await handle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"Successfully download!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        }).catch(() => {\r\n            console.log('キャンセルされました');\r\n        });\r\n    }\r\n\r\n    const libListJsx = libList\r\n        .filter(lib => lib.seedList.length > 0).map((lib, i) => {\r\n            const dispCnt = !lib.isOpen ? 0 : lib.seedList.length;\r\n            return (<_Item key={i} count={dispCnt}>\r\n                <_Header onClick={() => {\r\n                    // window.open(DataUtil.getPreviewURL(score.seq), '_blank');\r\n                }}>\r\n                    <_Owner>{`${lib.ownerId}`}</_Owner>\r\n                    <_CName onClick={() => {\r\n                        download(JSON.stringify(lib.rootData));\r\n                    }}>{`${lib.name}`}</_CName><_CDate>{lib.lastmod}</_CDate>\r\n                </_Header>\r\n                <_DetailMain count={dispCnt}>\r\n                    {lib.seedList.map((seed, j) => {\r\n                        let labelName = seed.name;\r\n                        if (seed.disp != undefined) labelName = seed.disp;\r\n                        return (\r\n                            <_SeedItemFrame key={j} onClick={() => {\r\n                                store.system.dialog = (\r\n                                    <PreviewLogicFrame.Component\r\n                                        master={seed.master}\r\n                                        rootData={lib.rootData}\r\n                                        closeButtonAction={() => {\r\n                                            store.system.dialog = null;\r\n                                            setStore({ ...store });\r\n                                        }}\r\n                                    />\r\n                                );\r\n                                setStore({ ...store });\r\n                            }}>\r\n                                <_SeedItemInner>\r\n                                    <_SeedName>{labelName}</_SeedName>\r\n                                    <_SeedArgCnt>{` [${seed.argCount} arguments]`}</_SeedArgCnt>\r\n                                </_SeedItemInner>\r\n                            </_SeedItemFrame>\r\n                        );\r\n                    })}\r\n                </_DetailMain>\r\n                <_DetailOpen onClick={() => {\r\n                    libList[i].isOpen = !libList[i].isOpen;\r\n                    setLibList(libList.slice());\r\n                }}>\r\n                    <_CSummary>{` ${lib.seedList.length} seeds ▼`}</_CSummary>\r\n                </_DetailOpen>\r\n            </_Item>);\r\n        });\r\n\r\n    return (\r\n        <_ListFrame>{libListJsx}</_ListFrame>\r\n    );\r\n}\r\n\r\nexport default PublishFrame;\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #929292;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst SEED_HEIGTH = 40;\r\nconst _Item = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${props => (props.count > 0 ? 8 : 0) + 89 + props.count * SEED_HEIGTH}px;\r\n    /* border-bottom: 1px solid #262626; */\r\n    /* background-color: #2e2e2e; */\r\n    /* background: linear-gradient(to bottom, transparent, #4f4f4f); */\r\n    margin: 2px 0 0 0;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    } */\r\n    transition: height 200ms;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100%);\r\n    height: 60px;\r\n    /* background-color: #c9e3df; */\r\n    background: linear-gradient(to bottom, #b9b9b9, #e2e2e2, #b9b9b9);\r\n    /* margin: 4px 0 0 4px; */\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff);\r\n    } */\r\n`;\r\nconst _DetailMain = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 40px);\r\n    height: ${props => (props.count > 0 ? 8 : 0) + props.count * SEED_HEIGTH}px;\r\n    background-color: #c7c7c7;\r\n    border-radius: 0 0 2px 2px;\r\n    margin: 0 0 0 20px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    transition: height 200ms;\r\n    overflow-y: hidden;\r\n`;\r\nconst _DetailOpen = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 60px);\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    margin: 0 0 0 30px;\r\n    background-color: #b1b1b1;\r\n    /* border-radius: 0 0 2px 2px; */\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    clip-path: polygon(7.5% 100%, 0% 0%, 100% 0%, 92.5% 100%);\r\n    \r\n    &:hover {\r\n        background-color: #c6d1a1;\r\n    }\r\n`;\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    \r\n    &:hover {\r\n        color: #db3333;\r\n    }\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CSummary = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 25px;\r\n    font-size: 22px;\r\n    line-height: 22px;\r\n    font-weight: 600;\r\n    color: #fffffad6;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _SeedItemFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${SEED_HEIGTH}px;\r\n    /* background-color: #a3b9c0; */\r\n    margin: 2px 0 0 0;\r\n    /* padding-left: 4px; */\r\n    text-align: left;\r\n`;\r\nconst _SeedItemInner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 2px;\r\n    border: 1px solid #0000002e;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    line-height: 29px;\r\n    font-weight: 600;\r\n    padding: 0 0 0 5px;\r\n    &:hover {\r\n        background-color: #bbd4dc;\r\n    }\r\n`;\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #000f74;\r\n`;\r\nconst _SeedArgCnt = styled.span<{\r\n}>`\r\n    color: #c7020265;\r\n`;","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\ntype NotePorp = {\r\n    version: string;\r\n    date: string;\r\n    note: string;\r\n}\r\n\r\nconst ReleaseNote = () => {\r\n    const { store } = useContext(GlobalContext);\r\n\r\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\r\n    useEffect(() => {\r\n        fetch('assets/release_note.json')\r\n            .then(response => response.json()) // (2) レスポンスデータを取得\r\n            .then(json => { // (3)レスポンスデータを処理\r\n                const list = json as NotePorp[];\r\n                setJsx(list.map((item, i) => {\r\n                    const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n                    return (\r\n                        <_Item key={i}>\r\n                            <_Header>v{item.version} ({item.date})</_Header>\r\n                            <_Detail>{record}</_Detail>\r\n                        </_Item>\r\n                    );\r\n                }));\r\n            });\r\n    }, []);\r\n    return (<_ListFrame>{jsx}</_ListFrame>);\r\n}\r\n\r\nexport default ReleaseNote;\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    /* height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px); */\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #bfcace;\r\n    border: 1px solid #9b9b9b;\r\n    border-radius: 6px;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    font-weight: 600;\r\n    /* background-color: #8bdbf8; */\r\n    color: #494975;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    /* background-color: #dafce4; */\r\n    color: #754949;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PublishFrame from \"./publishFrame\";\r\nimport ReleaseNote from \"./releaseNote\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [userCount, setUserCount] = useState(0);\r\n    const [artsCnt, setArtsCnt] = useState(0);\r\n\r\n    useEffect(() => {\r\n        countUsers().then(cnt => {\r\n            setUserCount(cnt);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <ReleaseNote />\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{artsCnt} libruary have been published.</_MessageRecord>\r\n            <PublishFrame setLibCnt={setArtsCnt}/>\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeChannel;\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nexport const findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT seq, (select id from user_tbl where seq = prj.seq) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { VscGitPullRequestCreate } from 'react-icons/vsc';\r\nimport CreateChannel from \"../create/createChannel\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <HomeChannel /> },\r\n                    { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <CreateChannel /> },\r\n                ]}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport CanvasUtil from '../../utils/canvasUtil';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <_Logo src={logo} />\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2023 Pixel Flare All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#00103d, #475fa3);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    /* color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-shadow: 1px 2px 22px #0000003d; */\r\n    text-align: center;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    /* & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    } */\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #ebe7ab;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n    /* height: 200%; */\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport StoreSystem from \"../../redux/store/storeSystem\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../utils/form/validateUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst WIDTH = 750;\r\nconst HEIGHT = 600;\r\n/**\r\n * アカウントフレームのコンポーネント\r\n * @returns \r\n */\r\nconst AccountFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [oldPass, setOldPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPass, setNewPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPassConfirm, setNewPassConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n    const [emailList, setEmailList] = useState<string[]>([]);\r\n\r\n    const [isModify, setModify] = useState(false);\r\n    const loginProps = store.system.user as StoreSystem.User;\r\n\r\n    const reloadInfo = () => {\r\n        setUserId({ ...userId, value: loginProps.id });\r\n        setNewPass({ ...newPass, value: '' });\r\n        setNewPassConfirm({ ...newPassConfirm, value: '' });\r\n        setEmail({ ...email, value: loginProps.email });\r\n        setOldPass({ ...oldPass, value: loginProps.password });\r\n    }\r\n\r\n    useEffect(() => {\r\n        DataUtil.findUserInfoList().then(list => {\r\n\r\n            const userIdList: string[] = [];\r\n            const emailList: string[] = [];\r\n            list.forEach(info => {\r\n                if (info.id !== loginProps.id) userIdList.push(info.id);\r\n                if (info.email !== '') emailList.push(info.email);\r\n            });\r\n            setUserIdList(userIdList);\r\n            setEmailList(emailList);\r\n        });\r\n\r\n        const hash = DataUtil.getHashedFromUserSeq(loginProps.seq);\r\n\r\n        // ユーザページのURLに変更する。\r\n        window.history.replaceState('', '', `/#/user?v=${hash}`);\r\n\r\n        reloadInfo();\r\n\r\n        // 閉じる際にURLを元に戻す\r\n        return () => {\r\n            // alert('destroy');\r\n            window.history.replaceState('', '', `/#/`);\r\n        }\r\n    }, []);\r\n\r\n    const userTabJsx: JSX.Element = (\r\n        <_Wrap>\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'user id'}\r\n                checkable={userId}\r\n                setCheckable={setUserId}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !userIdList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass'}\r\n                isPassword\r\n                checkable={newPass}\r\n                setCheckable={setNewPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPassConfirm.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPassConfirm]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass*'}\r\n                isPassword\r\n                checkable={newPassConfirm}\r\n                setCheckable={setNewPassConfirm}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPass.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPass]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'email'}\r\n                checkable={email}\r\n                setCheckable={setEmail}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => {\r\n                            return value.length === 0 || value.split('@').length === 2;\r\n                        },\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !emailList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                // width={500}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'old pass'}\r\n                isPassword\r\n                checkable={oldPass}\r\n                setCheckable={setOldPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => value === loginProps.password,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                // dependency={[passwordConfirm]}\r\n                width={300}\r\n                marginTop={55}\r\n                isReadOnly={!isModify}\r\n            />\r\n        </_Wrap>\r\n    );\r\n\r\n    // 登録ボタンの活性状態\r\n    const permitRegist = (\r\n        userId.errors.length === 0\r\n        && newPass.errors.length === 0\r\n        && newPassConfirm.errors.length === 0\r\n        && email.errors.length === 0\r\n        && oldPass.errors.length === 0\r\n    );\r\n\r\n    const updateUserInfo = () => {\r\n        const passwordStr = newPass.value.length === 0 ? '' : `,password = '${newPass.value}'`;\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `UPDATE user_tbl SET id = '${userId.value}', email = '${email.value}'${passwordStr}\r\n            WHERE seq = ${loginProps?.seq}`\r\n        ).then(() => {\r\n            loginProps.id = userId.value;\r\n            if (newPass.value.length > 0) {\r\n                loginProps.password = newPass.value;\r\n            }\r\n            loginProps.email = email.value;\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Modify successful!\" />;\r\n            setStore({...store});\r\n        });\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <FormUtil.Message\r\n                    message=\"If you bookmark this page, you can easily login by URL.\"\r\n                />\r\n            </_Header>\r\n            <_Body>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'User', enable: true, cont: userTabJsx },\r\n                        { name: 'Security', enable: false, cont: <></> },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_Body>\r\n            <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        {\r\n                            label: 'Close',\r\n                            callback: () => {\r\n                                // dispatcher.system.closeDialog();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Cancel',\r\n                            isEnable: isModify,\r\n                            callback: () => {\r\n                                setModify(false);\r\n                                reloadInfo();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isModify ? 'Modify' : 'Regist',\r\n                            isEnable: !isModify || permitRegist,\r\n                            callback: () => {\r\n                                if (!isModify) {\r\n                                    setModify(true);\r\n                                    setOldPass({ ...oldPass, value: '' });\r\n                                }\r\n                                else {\r\n                                    updateUserInfo();\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\n\r\nexport default AccountFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7eb;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    /* text-align: center; */\r\n`;\r\nconst _Body = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 100px);\r\n    padding: 4px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport AccountFrame from \"../accountFrame\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginCreateAccount = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isRegist, setRegist] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [passwordConfirm, setPasswordConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n\r\n    const createAuthText = () => {\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n        const list = '0123456789';\r\n        let text = '';\r\n        for (let i = 0; i < 6; i++) {\r\n            text += list.charAt(Math.random() * list.length);\r\n        }\r\n        return text;\r\n    };\r\n\r\n    /** 既存のユーザIDリストを格納 */\r\n    useEffect(() => {\r\n        DataUtil.findUserIdList().then(list => {\r\n            setUserIdList(list);\r\n        });\r\n\r\n        // fetch('https://api.ipify.org/?format=json').then(res => {\r\n        //     res.json().then(data => {\r\n        //         alert(data['ip']);\r\n        //     });\r\n        // });\r\n    }, []);\r\n\r\n    const [authCollation, setAuthCollation] = useState<string>(createAuthText());\r\n    const [authInput, setAuthInput] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    /** キャッシュした認証画像 */\r\n    const authPicture = useMemo(() => {\r\n        return CanvasUtil.getAuthTextURL(authCollation);\r\n\r\n    }, [authCollation]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n                case 'relation': list.push('[password] does not match confirm.'); break;\r\n            }\r\n        }\r\n        if (passwordConfirm.errors.length > 0) {\r\n            switch (passwordConfirm.errors[0]) {\r\n                case 'length': list.push('[password *] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    const registAction = () => {\r\n\r\n        (async () => {\r\n            let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n            let results = await response.json();\r\n            console.log(JSON.stringify(results[0].cnt));\r\n            const isExist = results[0].cnt > 0;\r\n            if (isExist) {\r\n                setMessageList(['That user id has already been recorded.']);\r\n            } else {\r\n                const nextSeq = await DataUtil.getNextUserSeq();\r\n                console.log(nextSeq);\r\n                await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(seq, id, password) VALUES(${nextSeq}, '${userId.value}', '${password.value}')`);\r\n                store.system.user = {\r\n                    seq: nextSeq,\r\n                    id: userId.value,\r\n                    password: password.value,\r\n                    email: '',\r\n                };\r\n                store.cloud = {\r\n                    projects: []\r\n                };\r\n                store.system.dialog = (<ConfirmDialog.Component\r\n                    message='You have successfully created an account!'\r\n                    buttons={[\r\n                        {\r\n                            label: 'OK',\r\n                            callback: () => {\r\n                                store.system.dialog = (<AccountFrame />);\r\n                                setStore({...store});\r\n                            }\r\n                        }\r\n                    ]}\r\n                />);\r\n                setStore({...store});\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0 && passwordConfirm.errors.length === 0;\r\n    }\r\n    const isAuthOK = () => {\r\n        return authInput.errors.length === 0 && authCollation === authInput.value;\r\n    }\r\n\r\n    return (<>\r\n\r\n        <_Frame isVisible={!isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass (Confirm).'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            },\r\n                            {\r\n                                checker: (value) => !userIdList.includes(value),\r\n                                errorType: \"relation\"\r\n                            },\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === passwordConfirm.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[passwordConfirm]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password*'}\r\n                        isPassword\r\n                        checkable={passwordConfirm}\r\n                        setCheckable={setPasswordConfirm}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === password.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[password]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Enter', isEnable: isLoginInfoOK(), callback: () => {\r\n                                    setRegist(true);\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Proof not a robot\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, input the same 6 number as the picture.'}\r\n                    />\r\n                    <_AuthText src={authPicture} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Change', callback: () => {\r\n                                    setAuthCollation(createAuthText());\r\n                                    setAuthInput({ value: '', errors: [] });\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                    {/* 照合する文字列 */}\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'6 numbers'}\r\n                        checkable={authInput}\r\n                        setCheckable={setAuthInput}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Regist', isEnable: isAuthOK(), callback: registAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setRegist(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginCreateAccount;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n\r\nconst _AuthText = styled.img<{\r\n}>`\r\n    display: block;\r\n    text-align: center;\r\n    margin: 4px auto;\r\n    background-color: #f7f0f0;\r\n    border: 1px solid #888888;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginLogin = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isForget, setForget] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        // alert(`Confirmation passwords don't match.`);\r\n        (async () => {\r\n            const results = await DataUtil.findUserInfoLogin(userId.value, password.value);\r\n            console.log(JSON.stringify(results));\r\n            if (results.length > 0) {\r\n                store.system.user = {\r\n                    seq: results[0].seq,\r\n                    id: results[0].id,\r\n                    password: results[0].password,\r\n                    email: results[0].email,\r\n                };\r\n                const resPrjList = await findUserProjectList(results[0].seq);\r\n                console.log(JSON.stringify(resPrjList));\r\n                store.cloud = {\r\n                    projects: resPrjList.map(res => ({\r\n                        source: res.source,\r\n                        type: res.type,\r\n                        name: res.name,\r\n                        seq: res.seq,\r\n                        lastmod: res.lastmod\r\n                    }))\r\n                };\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                    message=\"Login successful!\"\r\n                />;\r\n                setStore({ ...store });\r\n            } else {\r\n                setMessageList(['Incorrect user id or password.']);\r\n                // setPassword({ ...password, value: '' });\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0;\r\n    }\r\n\r\n    return (<>\r\n        <_Frame isVisible={!isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Enter', isEnable: isLoginInfoOK(), callback: enterAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Forgot your login information?\"\r\n                clickAction={() => {\r\n                    setForget(true);\r\n                }}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Email\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Submit login information to account address.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'email'}\r\n                        checkable={email}\r\n                        setCheckable={setEmail}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => {\r\n                                    return value.length === 0 || value.split('@').length === 2;\r\n                                },\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={500}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Send', isEnable: email.errors.length === 0, callback: () => {\r\n                                    DataUtil.findUserInfoFromEmail(email.value).then((list) => {\r\n                                        if (list.length > 0) {\r\n                                            const info = list[0];\r\n                                            const hash = DataUtil.getHashedFromUserSeq(info.seq);\r\n                                            const url = `https://demo-app.licresia.com/#/user?v=${hash}`;\r\n                                            DataUtil.sendQueryRequestToMailAPI({\r\n                                                from: 'info@licresia.com',\r\n                                                to: email.value,\r\n                                                subject: '【LiCreSia】support',\r\n                                                text: `Your login information is as follows.\\n\\nURL: ${url}\\nUSR ID: ${info.id}`\r\n                                            });\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"Your login information has been sent!\" />);\r\n                                        } else {\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"This email address is not registered.\" />);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setForget(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginLogin;\r\n\r\n\r\nexport const findUserProjectList = async (userSeq: number) => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT owner, seq, type, name, source, lastmod FROM prjcttbl WHERE owner = ${userSeq} order by seq`);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LoginCreateAccount from \"./loginCreateAccount\";\r\nimport LoginLogin from \"./loginLogin\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 500;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_LogoDiv>\r\n                <img src={logo} />\r\n            </_LogoDiv>\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {!isCreate ? <LoginLogin /> : <LoginCreateAccount />}\r\n            {/* <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        { name: 'Close', callback: closeAction },\r\n                        { name: 'Enter', callback: enterAction },\r\n                    ]}\r\n                />\r\n            </_Footer> */}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #bf808075;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n    background-color: #bf8080a2;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #c7a73e;\r\n        `}\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport LoginFrame from \"../dialog/login/loginFrame\";\r\nimport AccountFrame from \"../dialog/accountFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const user = store.system.user;\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (user != null) {\r\n            setUserId('@' + user.id);\r\n        }\r\n    }, [user]);\r\n\r\n    const authButtonJsx = user == null ? (\r\n        <_LoginButton onClick={() => {\r\n            store.system.dialog = <LoginFrame />;\r\n            setStore({ ...store });\r\n            console.log(window.location.origin);\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Login / Sign up\r\n        </_LoginButton>\r\n    ) : (<>\r\n        <_UserName\r\n            isEntry={user != null}\r\n            onClick={() => {\r\n                store.system.dialog = <AccountFrame />;\r\n                setStore({ ...store });\r\n            }}\r\n        >{userId}</_UserName>\r\n        <_LoginButton onClick={() => {\r\n            store.system.user = null;\r\n            store.cloud = null;\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message={'Logout.\\nSee you next time!'}\r\n            />;\r\n            setStore({ ...store });\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Logout\r\n        </_LoginButton>\r\n    </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Logo src={logo} />\r\n            <_Menu>\r\n                {authButtonJsx}\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    font-style: italic;\r\n    text-shadow: 1px 2px 3px #dbdbdb6a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #9fc2d1;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #ececec;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #9afff292;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #ff393983;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 180px;\r\n    height: 100%;\r\n    padding: 3px 0;\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { Redirect } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst DirectLogin = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        const seq = DataUtil.getDecryptionedUserSeq(props.hashKey);\r\n        console.log(seq);\r\n        DataUtil.findUserInfoFromSeq(seq).then(resList => {\r\n            console.log(resList);\r\n            if (resList.length > 0) {\r\n                const loginProps = resList[0];\r\n                // store.userEnv.login = loginProps;\r\n                // dispatcher.system.setUserEnv(store.userEnv);\r\n            }\r\n        });\r\n    }, []);\r\n    // if (store.userEnv.login == null) {\r\n    //     return <></>;\r\n    // } else {\r\n    //     return <Redirect to=\"/\" />;\r\n    //     // return <MainFrame />;\r\n    // }\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nexport default DirectLogin;","\r\nimport { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst ModeSelectDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Frame\r\n            width={600}\r\n            height={500}\r\n        >\r\n            <_ModeDiv onClick={()=>{\r\n                store.env.isEditLibrary = false;\r\n                store.env.isUseLocalFile = false;\r\n                store.system.dialog = null;\r\n                setStore({...store});\r\n            }}>\r\n                <_SubTitle>For beginner users</_SubTitle>\r\n                <_MainTitle>Story only</_MainTitle>\r\n                <_DetailMsg>You can borrow existing libraries developed by craftsmen and create original digital art stories.</_DetailMsg>\r\n            </_ModeDiv>\r\n            <_ModeDiv onClick={()=>{\r\n                store.system.dialog = null;\r\n                setStore({...store});\r\n            }}>\r\n                <_SubTitle>For advanced users</_SubTitle>\r\n                <_MainTitle>Story and library</_MainTitle>\r\n                <_DetailMsg>You can develop the library you need to create digital art from scratch. The developed library can be provided to many begginer users.</_DetailMsg>\r\n            </_ModeDiv>\r\n        </_Frame>\r\n    );\r\n};\r\n\r\nexport default ModeSelectDialog;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #8a90c9e1;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _ModeDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    height: calc(50% - 12px);\r\n    margin: 8px 0 0 10px;\r\n    background-color: #2c2a47b9;\r\n    border: solid 1px #050447;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #514e6bb8;\r\n    }\r\n`;\r\n\r\nconst _SubTitle = styled.div<{\r\n}>`\r\n    display: block;\r\n    font-size: 32px;\r\n    color: #ffe15dce;\r\n    font-weight: 600;\r\n    margin: 0 0 0 8px;\r\n`;\r\n\r\nconst _MainTitle = styled.div<{\r\n}>`\r\n    display: block;\r\n    font-size: 48px;\r\n    color: #e3ecec;\r\n    font-weight: 600;\r\n    margin: 0 0 0 8px;\r\n`;\r\n\r\nconst _DetailMsg = styled.div<{\r\n}>`\r\n    display: block;\r\n    background-color: #ffffff2e;\r\n    width: calc(100% - 20px);\r\n    height: 106px;\r\n    font-size: 22px;\r\n    color: #ff6c6c;\r\n    /* font-weight: 600; */\r\n    border-radius: 4px;\r\n    /* border: solid 1px #ffffff4e; */\r\n    box-sizing: border-box;\r\n    padding: 0 4px;\r\n    margin: 15px 0 0 10px;\r\n`;","import { createContext, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MobileRoot from '../mobile/mobileRoot';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\nimport DirectView from './directView';\r\nimport DirectLogin from './directLogin';\r\nimport ModeSelectDialog from './modeSelectDialog';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    setStore: React.Dispatch<React.SetStateAction<Store>>;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    // const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const [store, setStore] = useState(initialStore);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    const splashJsx = !store.system.isSplash ? <></> : (\r\n        <Splash\r\n            remove={() => {\r\n                store.system.isSplash = false;\r\n                store.system.dialog = <ModeSelectDialog />\r\n                setStore({ ...store });\r\n            }}\r\n        />\r\n    );\r\n    return (\r\n        <GlobalContext.Provider value={{ store, setStore }}>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    {splashJsx}\r\n                    <_Wrap>\r\n                        <GloballDialog />\r\n                        <TotalHeader />\r\n                        <_MainDiv>\r\n                            <MainFrame />\r\n                        </_MainDiv>\r\n                    </_Wrap>\r\n                </Route>\r\n                <Route path=\"/test\" exact >\r\n                    <_Wrap>\r\n                    </_Wrap>\r\n                </Route>\r\n                <Route path=\"/library\" exact >\r\n                    <MobileRoot hashKey={str} />\r\n                </Route>\r\n                <Route path=\"/story\" exact >\r\n                    <MobileRoot hashKey={str} />\r\n                </Route>\r\n                <Route path=\"/user\" exact >\r\n                    <DirectLogin hashKey={str} />\r\n                </Route>\r\n            </Switch>\r\n        </GlobalContext.Provider>\r\n    );\r\n\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    min-width: 1200px;\r\n    min-height: 900px;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #364887;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import zlib from \"zlib\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport { sha256 } from 'js-sha256';\r\nimport Hashids from 'hashids';\r\nimport { ProjectType, Store } from \"../redux/store/store\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport ConfirmDialog from \"../contents/dialog/confirmDialog\";\r\nimport StoryUtil from \"../contents/create/launcher/util/storyUtil\";\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5001';\r\n    export const DB_SERVER_DOMAIN = 'https://hkdev-db.glitch.me';\r\n    // export const DB_SERVER_DOMAIN = 'https://crud-server001.glitch.me';\r\n\r\n    // export const APP_SERVER_DOMAIN = 'http://localhost:4333';\r\n    export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/pf_apps/v1.6.1';\r\n    // export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    const DATABASE_NAME = 'pf1';\r\n\r\n    const getUserHashBuilder = () => {\r\n        return new Hashids('pf-user', 8);\r\n    }\r\n\r\n    export const getHashedFromUserSeq = (seq: number) => {\r\n        const hashids = getUserHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\r\n        const hashids = getUserHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    const getScoreHashBuilder = () => {\r\n        return new Hashids('pf', 8);\r\n    }\r\n\r\n    export const getHashedFromProjectSeq = (seq: number) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedProjectSeq = (hashedSeq: string) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    export const getPreviewURL = (scoreSeq: number) => {\r\n        const hashedKey = getHashedFromProjectSeq(scoreSeq);\r\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql, databaseName: DATABASE_NAME })\r\n        }\r\n    }\r\n\r\n    export type SendMailParam = {\r\n        from: string,\r\n        to: string,\r\n        subject: string,\r\n        text: string\r\n    }\r\n\r\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(json)\r\n        }\r\n    }\r\n\r\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/mail',\r\n            createSendMailRequestInit(json)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserInfoList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\r\n        const results = await response.json();\r\n        return results as { id: string, email: string }[];\r\n    };\r\n\r\n    export const findUserIdList = async () => {\r\n        const results = await findUserInfoList();\r\n        return (results as { id: string }[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfoFromEmail = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserInfoFromSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoLogin = async (id: string, password: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const getNextUserSeq = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\r\n        const results = await response.json();\r\n        const nextSeq = (results[0]['seq'] as number) + 1;\r\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\r\n\r\n        return nextSeq;\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findScore = async (scoreSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT (select id from user_tbl where seq = score.user_seq) as owner, dispnam, data FROM scoretbl score WHERE seq = ${scoreSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const loadFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            store.fileHandle = fileHandle;\r\n            const text = DataUtil.unZip(fileContents);\r\n            const data = JSON.parse(text);\r\n            // シナリオであるかどうかの判定\r\n            if (!data.hasOwnProperty('scenarioData')) {\r\n                store.libraryData = data;\r\n            } else {\r\n                const scenarioProps = data as StoryUtil.ScenarioFileProps;\r\n                store.libraryData = scenarioProps.libraryData;\r\n                store.storyData = scenarioProps.scenarioData;\r\n            }\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Successfully file loaded!\" />;\r\n            setStore({ ...store });\r\n        })();\r\n    }\r\n\r\n    export const saveFileBak = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.libraryData as LogicUtil.WrapElement;\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        const plainData = JSON.stringify(rootData);\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const saveLibraryFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.libraryData as LogicUtil.WrapElement;\r\n        const plainData = JSON.stringify(rootData);\r\n        saveFile(store, setStore, plainData, 'plgc');\r\n    }\r\n\r\n    export const saveScenarioFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const data: StoryUtil.ScenarioFileProps = {\r\n            libraryData: store.libraryData as LogicUtil.WrapElement,\r\n            scenarioData: store.storyData as StoryUtil.StoryData\r\n        }\r\n        const plainData = JSON.stringify(data);\r\n        saveFile(store, setStore, plainData, 'pstr');\r\n    }\r\n\r\n    export const saveFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>, plainData: string, extension: string) => {\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': [`.${extension}`],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const getSHA256Hash = (original: string) => {\r\n        return sha256(original);\r\n    }\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n\r\n    export const getDirectUrl = (type: ProjectType, seq: number) => {\r\n        return `${APP_SERVER_DOMAIN}/#/${type}?v=${getHashedFromProjectSeq(seq)}`;\r\n    }\r\n}\r\n\r\nexport default DataUtil;"],"sourceRoot":""}