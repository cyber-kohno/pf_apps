{"version":3,"sources":["system/utils/dataUtil.tsx","App.tsx","reportWebVitals.ts","index.tsx","system/contents/dialog/confirmDialog.tsx","system/utils/form/formUtiil.tsx","system/redux/store/store.tsx","system/utils/systemConst.tsx","system/contents/dialog/globalDialog.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/utils/treeUtil.tsx","system/utils/canvasUtil.tsx","system/contents/graphic/particle.tsx","system/contents/graphic/drawUtil.tsx","system/contents/graphic/vectorUtil.tsx","system/contents/create/factory/util/paramUtil.tsx","system/contents/create/preview/modulateBuilder.tsx","system/contents/create/preview/previewUtil.tsx","system/utils/form/validateUtil.tsx","system/contents/create/factory/detail/logic/editorArgumentMng.tsx","system/contents/create/factory/detail/common/modifyOperations.tsx","system/contents/create/factory/detail/logic/editorParamItem.tsx","system/contents/create/factory/detail/logic/editorArgumentItem.tsx","system/contents/create/factory/detail/seed/editorSeedMng.tsx","system/contents/create/factory/detail/logic/editorLogicMng.tsx","system/contents/create/factory/detail/logic/editorLogicItem.tsx","system/contents/create/factory/detail/logic/editorBehiviorMng.tsx","system/contents/create/factory/detail/logic/editorVisualMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnector.tsx","system/contents/create/factory/dialog/sendTemplateDialog.tsx","system/contents/create/factory/detail/logic/editorSendManager.tsx","system/contents/create/factory/detail/logic/editorFieldMng.tsx","system/contents/create/factory/detail/logic/editorExtendMng.tsx","system/contents/create/factory/detail/seed/editorSeedItem.tsx","system/contents/create/factory/detail/seed/editorThumbnailMng.tsx","system/contents/create/factory/detail/seed/editorThumbnailItem.tsx","system/contents/create/factory/util/logicFormUtil.tsx","system/contents/create/factory/detail/seed/editorSampleItem.tsx","system/contents/create/factory/detail/seed/editorSampleMng.tsx","system/contents/create/factory/detail/seed/editorInterfaceManager.tsx","system/contents/create/factory/detail/seed/editorSeedArgMng.tsx","system/contents/create/factory/detail/seed/editorSeedArgItem.tsx","system/contents/create/factory/detail/seed/editorSeedSendMng.tsx","system/contents/create/factory/detail/seed/editorFormgrpItem.tsx","system/contents/create/factory/detail/seed/editorFormgrpMng.tsx","system/contents/create/factory/util/logicUtil.tsx","system/contents/create/factory/util/logicElementUtil.tsx","system/contents/create/preview/inputForm/previewLogicInputForm.tsx","system/contents/create/preview/inputForm/previewSeedInputForm.tsx","system/contents/create/preview/previewLogicFrame.tsx","system/contents/create/factory/logicMainteTab.tsx","system/contents/create/manage/nameDefDialog.tsx","system/contents/create/manage/manageTab.tsx","system/contents/create/launcher/tab/launchAnalysis.tsx","system/contents/create/launcher/tab/launchProperty.tsx","system/contents/create/launcher/tab/launchEnvironment.tsx","system/contents/create/launcher/timelineFrame.tsx","system/contents/create/preview/previewLauncherFrame.tsx","system/contents/create/launcher/launcherTab.tsx","system/contents/create/createChannel.tsx","system/contents/entry/directView.tsx","system/contents/entry/directLogin.tsx","system/contents/home/publishFrame.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/dialog/accountFrame.tsx","system/contents/dialog/login/loginCreateAccount.tsx","system/contents/dialog/login/loginLogin.tsx","system/contents/dialog/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","system/base/design/styles.tsx"],"names":["DB_SERVER_DOMAIN","APP_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","seq","hash","encode","Base64","hashedSeq","hashids","Number","decode","getHashedFromScoreSeq","sendQueryRequestToAPI","scoreSeq","hashedKey","json","fetch","mode","method","headers","Accept","body","JSON","stringify","createSendMailRequestInit","queryType","sql","databaseName","createQueryRequestInit","findUserInfoList","a","response","results","map","res","id","email","password","nextSeq","DataUtil","userSeq","store","setStore","window","showOpenFilePicker","fileHandle","getFile","file","text","fileContents","unZip","console","log","logicData","parse","system","dialog","Component","message","rootData","plainData","createWritable","writable","gZip","write","close","showSaveFilePicker","types","accept","then","handle","catch","original","sha256","val","content","encodeURIComponent","zlib","gzipSync","toString","buffer","Buffer","from","result","unzipSync","decodeURIComponent","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","App","useEffect","document","oncontextmenu","onkeydown","e","ctrlKey","includes","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","ConfirmDialog","props","useContext","GlobalContext","width","height","buttons","label","callback","_Frame","_Main","_Inner","split","msg","i","Message","isCenter","ButtonRecord","align","styled","div","FormUtil","checkables","forEach","checkable","errors","length","type","isPassword","validaters","validates","dependency","dep","value","getErrors","validater","checker","push","errorType","setCheckable","_Record","isEnable","isVisible","textAlign","marginTop","marginBottom","undefined","titleLabel","_ItemnLabel","_ItemnInputBak","hasTitle","placeholder","onChange","target","readOnly","isReadOnly","jsx","labelWidth","_FixedLabel","useState","isNaN","setNaN","isNumber","concat","step","_ItemnInput","valueAsNumber","onBlur","marginLeft","headBlank","list","slice","unshift","labelText","_ItemCombobox","item","_Option","disabled","isDisabled","button","_Button","onClick","_Message","isLink","clickAction","_BorderText","title","_BorderPanel","innerJsx","_InfoDiv","color","textRecords","isRelation","isUse","_Switch","find","css","Styles","CSS_BUTTON_DISABLE","CSS_LABEL_MIDIUM","input","select","option","FONT_MIDIUM","CSS_LABEL_SMALL","FONT_SMALL","initialStore","isSplash","user","launchData","limitFrame","limitParticle","defList","launchCacheList","cloud","SystemConst","GloballDialog","_Blind","ChannelPane","activeNo","setActiveNo","_LabelList","tabElements","tab","index","name","icon","isActive","selectTab","selectTabIndex","_ContList","cont","ChannelLabel","_Item","_Icon","_Label","ChannelContents","_Contents","TabbedPane","tabRecordNum","enable","TabLabel","_TabLabel","TabContents","TreeUtil","data","parent","depth","isOpen","children","node","parentNode","isDisable","focusNode","ref","useRef","buildElementNodeFromData","build","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","jsxList","useMemo","buildJsxRecords","element","spaceList","isCurrent","current","scrollWidth","tempNode","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","clickEvent","onDoubleClick","getLabelJsx","invalidate","_Wrap","createURL","draw","canvas","createElement","ctx","getContext","toDataURL","CanvasUtil","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillStyle","fillText","adjust","measureText","save","WIDTH","AUTH_TEXT_WIDTH","SIZE","AUTH_TEXT_HEIGHT","rotate","Math","PI","char","charAt","fontRand","random","alphaRand","Particle","owner","pos","prevPos","vec","frame","limit","isLive","drawer","extend","update","x","xy","y","this","param","radiusBase","radius","self","flashAppearFrame","appearFrame","unitFrame","flashHideFrame","shrinkStartRate","start","floor","g","createRadialGradient","grads","rgba","convertRgbaFromColorCode","r","b","offset","convertColorCodeFromRgba","grad","addColorStop","globalAlpha","disappearStartRate","beginPath","arc","fill","code","parseInt","substring","r1","g1","b1","a1","rate","DrawUtil","VectorUtil","rad","len","syncFromXY","sqrt","atan2","syncFromRad","cos","sin","VisualParamType","BehaviorParamType","Object","values","SelfParamType","ExtendParamType","EffectParamType","ModulateParamType","ConstantType","ParamUtil","ModulateBuilder","extendList","decayRate","decayLimit","gravity","gravityLimit","SCREEN_WIDTH","SCREEN_HEIGHT","searchElement","origin","sends","createParticleRec","cur","valueMapList","ConstantValueMap","fieldMng","mngs","fields","field","paramItem","convertFormulaToValue","visualParams","params","behaviorParams","getVisualParam","convertParamsToValue","getBehaviorParam","LIMIT","POS_X","POS_Y","Vector","VEC_X","VEC_Y","VEC_RAD","VEC_LEN","connectMng","inherits","connect","connector","disable","logicItem","wrap","logicMng","defs","def","searchDependLogic","depend","addValueMap","FRAME","itrfldValueMap","loopCnt","extendParams","loopCntVal","LOOP_COUNT","convertParamsToBoolean","INVOKE","iterateValueMap","LOOP_ITERATE","sendValueMapList","Instance","DECAY_LIMIT","DECAY_RATE","GRAVITY_VAL","GRAVITY_LIMIT","RADIUS","colorR","COLOR_R","colorG","COLOR_G","colorB","COLOR_B","colorA","COLOR_A","disappearStart","DISAPPEAR_START","shrinkStart","SHRINK_START","FLASH_APPEAR_FRAME","FLASH_HIDE_FRAME","createGradDrawer","warpList","formula","v","valueMap","m","formulaStr","varCnt","formulaItems","str","convertFormulaToBoolean","RADIAN_ROUND","minFrame","guaranteeFrame","doIterate","particle","splice","doEnd","PreviewUtil","min","max","checkIncludesChars","ch","indexOf","num","conditions","ValidateUtil","EditorArgumentMng","FactoryTreeContext","setFocusNode","BorderPanel","newNode","LogicElementUtil","addChild","ModifyOperations","isModify","setModify","removeSelf","isComplete","isCompleteCheck","checkableFields","mappingForm","isInputOK","firstRegist","modifyRegist","Level","EditorArgumentItem","logicNode","setName","argType","setArgType","reservedList","getParamNameList","valueType","syncArgumentAdd","prevName","syncArgumentName","FormRecord","TextField","checkRequired","checkStringLength","LogicUtil","checkFieldName","filter","Combobox","ArgTypes","refers","getArgumentRefers","syncArgumentDel","getSwapButtons","argName","searchVariableReferInFormula","varItem","newName","syncFormula","mng","visualMng","behaviorMng","inhMng","inh","inhfld","getInnerWrap","syncParamName","runRec","logic","conn","inhLogic","getInnerWrapFixed","sendMng","seedMng","interfaceWrap","connWrap","syncArgumentCallback","inhMngNode","getInnerNodeFixed","seedNode","interfaceNode","sendNode","entry","newArgName","paramWrap","createParamWrap","createNode","delArgName","delIndex","some","EditorSeedMng","itemWrap","EditorLogicMng","EditorLogicItem","el","isConnect","hasArgNode","hasFieldNode","hasConnectNode","existNameList","getExistNameList","toggleElement","hasNode","listPos","wrapElement","removeChild","insertChild","getDefaultLogicMngs","syncLogicName","Record","Switch","argumentNode","getInnerNode","hasArgument","args","fieldNode","hasField","inheritNode","hasInherit","getReplicateButton","getLocgicRefers","logicName","searchLogicReferInherit","logicMngNode","EditorParamItem","setFormulaItems","varFormList","setVarFormList","isField","isCondition","inputType","level","FIELD","INITIAL","INHERIT_FIELD","INHERIT_EXTEND","INHERIT_SEND","argumentList","fieldKeys","parentType","getLogicNode","argMng","arg","fieldName","Error","inhfldNode","fieldKeyList","paramNameList","addNum","delNum","parenthesisBalance","formJsxList","ParamInputTypes","SelfParams","getValueForm","isLastVar","isFormulaOK","hasFormError","varForm","getFormulaItem","syncFieldName","_Formula","isInvalid","_Var","_Sig","getFormulaJsx","getFieldRefers","mngNode","inheritWrap","span","EditorBehiviorMng","isVector","hasDecayParam","hasGravityParam","exchangeVectorMethod","flag","trueParamElements","falseParamElements","size","exchangeElements","toggleElements","paramElements","EditorVisualMng","drawMethod","THICKNESS","hasDisappearParam","hasShrinkParam","hasFlashParam","EditorInheritConnMng","EditorInheritConnector","identify","setIdentify","setMethod","setDepend","defaultName","getNumberingOnPrefixName","isCreate","logicList","idList","initConnectorNode","syncTreeElementFromWrap","initSendParams","sendParamList","dependItem","argWrap","getSendParamList","curParamList","isChange","ConnectTypes","dependLogic","inherit","newWrap","getChildrenElementNode","rootNode","clone","COMPONENT_WIDTH","xName","setXName","yName","setYName","checkItems","argNode","behaviorNode","setParamValue","prpName","targetParam","paramList","xParam","yParam","SendTemplateDialog","EditorSendManager","isDepend","ConnectParentPosition","SetParentPosition","EditorFieldMng","EditorExtendMng","hasLoopParam","hasInvokeParam","EditorSeedItem","disp","setDisp","setEntry","permit","setPermit","logicNameList","seed","items","samples","PermitTypes","EditorThumbnailMng","LogicTreeContext","hasSample","WND_SIZE","EditorThumbnailItem","seedWrap","setFrame","urls","setUrls","setTimeout","sample","getThumbnailURL","getSeedValueMap","sampleNo","argMap","sendParams","send","targetFrame","frameCnt","buildLogicProps","par","pictureJsxList","imgJsx","_IMG","src","_SampleDiv","_SampleName","_CanvasDiv","img","LogicFormUtil","formgrpList","formList","setFormList","usedGrps","form","argument","formgrp","grp","targetForms","j","colorCode","_Type","_Range","formIndex","checkNumberRange","_Color","labelName","_Tsumami","EditorSampleItem","paramForms","setParamForms","argInfoList","formgrpMng","defines","seedargList","defval","buildPreviewForms","EditorSampleMng","EditorInterfaceManager","argMngNode","sendMngNode","sampleMngNode","hasGroupNode","execute","removeChildAll","newArgWrap","groupMngNode","hasGroup","EditorSeedArgMng","EditorSeedArgItem","setMin","setMax","setStep","setDefval","curIndex","getCurrentIndex","getSwapButtonsCallback","isUpper","sampleMng","swapNode","sendMngWrap","EditorSeedSendMng","EditorFormgrpItem","groupMethod","setGroupMethod","targetList","setTargetList","seedargs","Array","FromGrpMedhods","formName","EditorFormgrpMng","COLOR_METHOD","COLOR_MNG","COLOR_LIST","COLOR_ITEM","COLOR_FIELD","isFocus","_Category","backgroundColor","detailJsx","_Span","_Field","_EditableValue","_Signature","_Detail","nameJsx","_ValueType","wrapNode","get","listName","elementNode","getChildrenDataNode","typeList","innerNode","getListParamName","innerWrap","ownerChildren","parentWrap","findIndex","swapOrder","ownDataChildren","curNo","swapData","dependencyMngNodes","depNode","isHead","isTail","cloneBase","cloneDest","namable","getNamableProps","targetElement","replicateSameLevel","getIdentifyParamName","childWrap","createParamWrapList","paramDataList","createVisualParams","createBehaviorParams","findSeedWrap","nameList","curWrap","nameParam","mngWrap","listParam","curLogicOwner","VisualParams","BehaviorParams","ExtendParams","EffectParams","ModulateParams","Constants","prefix","mngType","getLogicItem","seedId","getOrigin","getSendingValueMap","seedsendList","thumbnailList","PreviewLogicInputForm","logicWrap","setSendingValueMap","PreviewSeedInputForm","template","setTemplate","formgrpWrap","presetList","ButtonItem","selectedIndex","PreviewLogicFrame","sceens","setSceens","setFrameCnt","tabIndex","setTabIndex","setCur","isBuild","setBuild","isPlay","setPlay","sendingValueMap","isSeed","master","runParticleLogic","buildTabJsx","_Msg","_FormDiv","previewTabJsx","_ProgressDiv","clickX","pageX","clientRect","getBoundingClientRect","left","pageXOffset","_ProgressVal","onKeyDown","_CloseButton","createContext","LogicMainteTab","setInvalidate","masterNode","openPreviewDialog","n","_TreeDiv","_TreeHead","_TreeBody","Frame","getNodeDisplayJsx","_PropsDiv","_DetailDiv","_DetailHeader","_DetailHeaderLabel","getTypeName","Provider","setRootData","_DetailMainDiv","getDetailComponent","NameDefDialog","targetSeq","projects","p","existNames","findProjectMaxSeq","maxSeq","newProject","source","lastmod","insertProject","targetItem","updateProjectName","registUpdate","req","ManageTab","fcsListIdx","setFcsListIdx","listItemJsx","exist","_ListItem","_Status","isExist","_Name","hasData","incrRec","root","developCnt","privateCnt","releaseCnt","logicSize","logicCnt","_HeaderDiv","getInitialData","_BodyDiv","_LeftDiv","updateProjectSource","deleteProject","_ListDiv","_RighttDiv","loadFile","saveFile","FixedText","getSHA256Hash","LaunchAnalysis","divide","setDivide","peak","setPeak","total","setTotal","countList","setCountList","itemJsxList","rateHeight","count","_AnalisisItem","divRate","pastRate","needPoint","_AnalisisDiv","LaunchProperty","setSeed","newFrame","setNewFrame","mapping","defBean","propertiesFormJsx","activeSeed","seedList","formgrps","presets","cancelAction","modifyAction","initFormList","LaunchEnvironment","setParticle","maxLimit","reduce","prev","ITEM_WIDTH","TimelineFrame","defPosJsxList","newFrameRate","newFrameValue","focus","sus","cache","useFrame","_Line","_Sustain","memoriJsxList","DIV_CNT","_Memori","_MeasureDiv","rect","clientX","setNewFrameValue","MEASURE_WIDTH","PreviewLauncherFrame","LauncherTab","isDefEdit","setDefEdit","isEnvEdit","setEnvEdit","tabActiveIndex","setTabActiveIndex","setFocus","setDefList","groupMng","createSeq","defJsxList","thumbJsx","thumbList","thumb","url","_ItemDiv","_ItemFrame","_PropRecord","_FrameRecord","_SeedRecord","_ThumbFrame","_Title","updateCache","seedProps","getSeedProperties","doParticleJob","_ListHead","cloneDef","newSeq","newCache","_ListBody","_Timeline","_ListMain","_RightDiv","_RightInner","sort","LIST_HEAD","CreateChannel","SCORE_TAB_MARGIN","DirectView","getDecryptionedScoreSeq","hashKey","to","DirectLogin","getDecryptionedUserSeq","findUserInfoFromSeq","resList","PublishFrame","libList","setLibList","findAllReleaseProjectList","ownerId","argCount","setLibCnt","libListJsx","lib","dispCnt","_Header","_Owner","_CName","_CDate","_DetailMain","_SeedItemFrame","_SeedItemInner","_SeedName","_SeedArgCnt","_DetailOpen","_CSummary","_ListFrame","ReleaseNote","setJsx","record","note","version","HOME_USER_DIV_HEIGHT","HomeChannel","userCount","setUserCount","artsCnt","setArtsCnt","countUsers","cnt","_Left","_MessageRecord","_Right","MainFrame","basename","process","RouterManage","URLSearchParams","useLocation","search","path","exact","MAIN_FRAME_MARGIN","Splash","isSwitch","setSwitch","timerId","setTimerId","remove","clearTimeout","_NowLoading","_Copylight","fadeIn","keyframes","AccountFrame","userId","setUserId","oldPass","setOldPass","newPass","setNewPass","newPassConfirm","setNewPassConfirm","setEmail","userIdList","setUserIdList","emailList","setEmailList","loginProps","reloadInfo","info","getHashedFromUserSeq","history","replaceState","userTabJsx","InputTextFormBak","checkAsciiChars","permitRegist","_Body","_Footer","passwordStr","updateUserInfo","LoginCreateAccount","isRegist","setRegist","setPassword","passwordConfirm","setPasswordConfirm","messageList","setMessageList","createAuthText","findUserIdList","authCollation","setAuthCollation","authInput","setAuthInput","authPicture","getAuthTextURL","InfoFrame","_AuthText","getNextUserSeq","MessageLink","LoginLogin","isForget","setForget","findUserInfoLogin","findUserProjectList","resPrjList","findUserInfoFromEmail","sendQueryRequestToMailAPI","subject","LoginFrame","setCreate","logo","getLogoURL","_TypeSwitch","_LogoDiv","TotalHeader","authButtonJsx","_LoginButton","location","_UserName","isEntry","_Logo","_Menu","_Language","_MenuItem","TOTAL_HEADER_WIDTH","SystemEntry","_MainDiv","CSS_LABEL"],"mappings":"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","file":"static/js/main.34befeab.chunk.js","sourcesContent":["import zlib from \"zlib\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport { sha256 } from 'js-sha256';\r\nimport Hashids from 'hashids';\r\nimport { Store } from \"../redux/store/store\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport ConfirmDialog from \"../contents/dialog/confirmDialog\";\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5001';\r\n    // export const DB_SERVER_DOMAIN = 'https://hkdev-db.glitch.me';\r\n    export const DB_SERVER_DOMAIN = 'https://crud-server001.glitch.me';\r\n\r\n    export const APP_SERVER_DOMAIN = 'http://localhost:4333';\r\n    // export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/pa_app/v1.3.x';\r\n    // export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    const DATABASE_NAME = 'pa';\r\n    // const DATABASE_NAME = 'pf_v1.4.x';\r\n\r\n    const getUserHashBuilder = () => {\r\n        return new Hashids('pa-user', 8);\r\n    }\r\n\r\n    export const getHashedFromUserSeq = (seq: number) => {\r\n        const hashids = getUserHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\r\n        const hashids = getUserHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    const getScoreHashBuilder = () => {\r\n        return new Hashids('pa', 8);\r\n    }\r\n\r\n    export const getHashedFromScoreSeq = (seq: number) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedScoreSeq = (hashedSeq: string) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    export const getPreviewURL = (scoreSeq: number) => {\r\n        const hashedKey = getHashedFromScoreSeq(scoreSeq);\r\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql, databaseName: DATABASE_NAME })\r\n        }\r\n    }\r\n\r\n    export type SendMailParam = {\r\n        from: string,\r\n        to: string,\r\n        subject: string,\r\n        text: string\r\n    }\r\n\r\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(json)\r\n        }\r\n    }\r\n\r\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/mail',\r\n            createSendMailRequestInit(json)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserInfoList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\r\n        const results = await response.json();\r\n        return results as { id: string, email: string }[];\r\n    };\r\n\r\n    export const findUserIdList = async () => {\r\n        const results = await findUserInfoList();\r\n        return (results as { id: string }[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfoFromEmail = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserInfoFromSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoLogin = async (id: string, password: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const getNextUserSeq = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\r\n        const results = await response.json();\r\n        const nextSeq = (results[0]['seq'] as number) + 1;\r\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\r\n\r\n        return nextSeq;\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findScore = async (scoreSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT (select id from user_tbl where seq = score.user_seq) as owner, dispnam, data FROM scoretbl score WHERE seq = ${scoreSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n\r\n    export const loadFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            store.fileHandle =fileHandle;\r\n            const text = DataUtil.unZip(fileContents);\r\n            console.log(text);\r\n            store.logicData = JSON.parse(text);\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Successfully file loaded!\" />;\r\n            setStore({ ...store });\r\n        })();\r\n    }\r\n\r\n    export const saveFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.logicData as LogicUtil.WrapElement;\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        const plainData = JSON.stringify(rootData);\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const getSHA256Hash = (original: string) => {\r\n        return sha256(original);\r\n    }\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n}\r\n\r\nexport default DataUtil;","import React, { useEffect } from 'react';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst REACT_APP_AUTH0_DOMAIN = 'dev-a0p0m4lr.us.auth0.com';\nconst REACT_APP_AUTH0_CLIENT_ID = 'ABaWpYVBZwTr3tkyxhq1kWh2YwT4epew';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport { useContext } from \"react\";\r\n\r\nnamespace ConfirmDialog {\r\n\r\n    export const Component = (props: {\r\n        message: string;\r\n        width?: number;\r\n        height?: number;\r\n        buttons?: FormUtil.ButtonProps[];\r\n    }) => {\r\n\r\n        const {store,  setStore } = useContext(GlobalContext);\r\n\r\n        const width = props.width ?? 600;\r\n        const height = props.height ?? 150;\r\n        const buttons = props.buttons ?? [\r\n            {\r\n                label: 'OK',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({...store});\r\n                }\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main><_Inner>\r\n                    {props.message.split('\\n').map((msg, i) => {\r\n                        return <FormUtil.Message\r\n                            key={i}\r\n                            message={msg}\r\n                            isCenter\r\n                        />\r\n                    })}\r\n                </_Inner></_Main>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons} />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 110px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* background-color: #bb6868e1; */\r\n`;","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport ValidateUtil from \"./validateUtil\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nnamespace FormUtil {\r\n\r\n    export type CheckableValue = {\r\n        value: string;\r\n        errors: ValidateUtil.ErrorType[];\r\n    }\r\n\r\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\r\n        let result = true;\r\n        checkables.forEach(checkable => {\r\n            if (checkable.errors.length > 0) {\r\n                result = false;\r\n                return 1;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    export const InputTextFormBak = (props: {\r\n        titleLabel?: string;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        isCenter?: boolean;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        marginTop?: number;\r\n        isReadOnly?: boolean;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const type = props.isPassword ?? false ? 'password' : 'text';\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency);\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\r\n                <_ItemnInputBak\r\n                    type={type}\r\n                    value={props.checkable.value}\r\n                    hasTitle={props.titleLabel != undefined}\r\n                    width={props.width}\r\n                    isCenter={props.isCenter ?? false}\r\n                    placeholder={props.placeholder}\r\n                    onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        props.checkable.value = value;\r\n                        props.checkable.errors = getErrors(value);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }}\r\n                    errorType={errors.length === 0 ? undefined : errors[0]}\r\n                    readOnly={props.isReadOnly}\r\n                />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n\r\n    export const Record = (props: {\r\n        isEnable?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FormRecord = (props: {\r\n        titleLabel?: string;\r\n        labelWidth?: number;\r\n        isEnable?: boolean;\r\n        isVisible?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={props.isVisible ?? true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={props.labelWidth}>{props.titleLabel}</_ItemnLabel>}\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FixedText = (props: {\r\n        value: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        marginLeft?: number;\r\n    }) => {\r\n\r\n        return (\r\n            <_FixedLabel width={props.width}>{props.value}</_FixedLabel>\r\n        );\r\n    }\r\n\r\n    export const TextField = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        isNumber?: boolean;\r\n        marginLeft?: number;\r\n        step?: number;\r\n    }) => {\r\n        const [isNaN, setNaN] = useState(false);\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        let type = props.isPassword ?? false ? 'password' : 'text';\r\n        if (props.isNumber ?? false) {\r\n            type = 'number';\r\n        }\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n        const step = props.step ?? 1;\r\n\r\n        return (\r\n            <_ItemnInput\r\n                type={type}\r\n                value={value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                step={step}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                    if (type === 'number') {\r\n                        setNaN(Number.isNaN(e.target.valueAsNumber));\r\n                    }\r\n                }}\r\n                onBlur={() => {\r\n                    if (type === 'number') {\r\n                        if (isNaN) props.checkable.value = ' ';\r\n                        else props.checkable.value = Number(value).toString();\r\n                        // console.log(`[${props.checkable.value}]`);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }\r\n                }}\r\n                errorType={errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\r\n\r\n    export const Combobox = (props: {\r\n        list: ComboboxItemProps[];\r\n        headBlank?: boolean;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n        const headBlank = props.headBlank ?? false;\r\n        const list = props.list.slice();\r\n        if (headBlank) list.unshift({ value: '', labelText: '' });\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n\r\n        useEffect(() => {\r\n            // console.log('value: ' + props.checkable.value);\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        return (\r\n            <_ItemCombobox\r\n                value={props.checkable.value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    props.checkable.value = value;\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n\r\n                }}\r\n                errorType={errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            >{list.map((item, i) => {\r\n                return (\r\n                    <_Option key={i}\r\n                        value={item.value}\r\n                        disabled={item.isDisabled ?? false}\r\n                        isDisabled={item.isDisabled ?? false}\r\n                    >{item.labelText}</_Option>\r\n                );\r\n            })}</_ItemCombobox>\r\n        );\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        label: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ButtonRecord = (props: {\r\n        buttons: ButtonProps[],\r\n        align?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const align = props.align ?? 'right';\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={align}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.buttons.map((button, i) => {\r\n                    return (\r\n                        <_Button\r\n                            key={i}\r\n                            isCenter={align === 'center'}\r\n                            isEnable={button.isEnable ?? true}\r\n                            width={button.width}\r\n                            onClick={button.callback}\r\n                        >{button.label}</_Button>\r\n                    );\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const ButtonItem = (props: {\r\n        button: ButtonProps\r\n    }) => {\r\n        return (\r\n            <_Button\r\n                isCenter={false}\r\n                isEnable={props.button.isEnable ?? true}\r\n                width={props.button.width}\r\n                onClick={props.button.callback}\r\n            >{props.button.label}</_Button>\r\n        );\r\n    }\r\n\r\n    export const Message = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const MessageLink = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        clickAction: () => void;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isLink={true}\r\n                    onClick={props.clickAction}\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        // const title = props.title ?? 'title pl';\r\n        return (<>\r\n            <_BorderText>{props.title}</_BorderText>\r\n            <_BorderPanel isEnable={props.isEnable ?? true}>{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export const InfoFrame = (props: {\r\n        height?: number;\r\n        textRecords: string[];\r\n    }) => {\r\n        const height = props.height ?? 70;\r\n        const color = '#1a9900';\r\n        return (<>\r\n            <_InfoDiv height={height} color={color}>\r\n                {props.textRecords.map((text, i) => {\r\n                    return <span key={i}>{text}<br /></span>;\r\n                })}\r\n            </_InfoDiv>\r\n        </>);\r\n    };\r\n\r\n    export const Switch = (props: {\r\n        label: string;\r\n        isUse: boolean;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        isRelation?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isRelation = props.isRelation ?? false;\r\n        const callback = isRelation && props.isUse ? () => { } : props.callback;\r\n        return (\r\n            <_Switch\r\n                isRelation={isRelation}\r\n                isUse={props.isUse}\r\n                isEnable={props.isEnable ?? true}\r\n                width={props.width}\r\n                onClick={callback}\r\n            >{props.label}</_Switch>\r\n        );\r\n    }\r\n\r\n    export const checkItems = (list: CheckableValue[]) => {\r\n        return list.find(item => item.errors.length > 0) == undefined;\r\n    }\r\n}\r\n\r\nexport default FormUtil;\r\n\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n    textAlign: 'left' | 'center' | 'right';\r\n    marginTop: number;\r\n    marginBottom: number;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    width: 100%;\r\n    height: 40px;\r\n    margin-top: ${props => props.marginTop}px;\r\n    margin-bottom: ${props => props.marginBottom}px;\r\n    /* background-color: #b3b4c4; */\r\n    /* border: 1px solid #000; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    text-align: ${props => props.textAlign};\r\n`;\r\n\r\nconst _ItemnLabel = styled.div<{\r\n    labelWidth?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.labelWidth ?? 140}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #c3c3c3fc, #d8d8d8, #c3c3c3fc);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n`;\r\n\r\nconst _FixedLabel = styled.div<{\r\n    width?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #0c0e86;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c51a;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n    overflow-x: hidden;\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n`;\r\n\r\nconst _ItemnInputBak = styled.input<{\r\n    readOnly?: boolean;\r\n    isCenter: boolean;\r\n    hasTitle: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${props => !props.hasTitle ? css`\r\n    ` : css`\r\n        width: calc(100% - 152px);\r\n    `}\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    margin-top: 2px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    /* ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    } */\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemCombobox = styled.select<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n        pointer-events: none;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _Option = styled.option<{\r\n    isDisabled: boolean;\r\n}>`\r\n    ${props => !props.isDisabled ? '' : css`\r\n        color: #0000004b;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n    isLink?: boolean;\r\n    isCenter: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #002c52;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => !props.isLink ? '' : css`\r\n        color: #0459a3;\r\n        user-select: none;\r\n        text-decoration: underline;\r\n        &:hover {\r\n            color: #68a4d8;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #cdcdcd, #ebebeb, #cdcdcd);\r\n    border: 1px solid #747474;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isUse: boolean;\r\n    isEnable: boolean;\r\n    width?: number;\r\n    isRelation: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    color: #515151;\r\n    border: 1px solid #747474;\r\n    ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\r\n    ` : css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#ddc1d979' : '#d898b3'};\r\n        color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n    `}\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\r\n        ` : css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#d3a1cb79' : '#d898b3'};\r\n            color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _BorderText = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: #990000;\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    background-color: #dcddce;\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    margin: 4px 0 0 0;\r\n    display: inline-block;\r\n    background-color: #e7e5e561;\r\n    border: solid 1px #949494;\r\n    width: 100%;\r\n    height: ${props => props.height}px;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: ${props => props.color};\r\n    overflow-y: auto;\r\n`;","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport { Cache, LaunchData } from \"../../contents/create/launcher/launcherTab\";\r\nimport StoreCloud from \"./storeCloud\";\r\nimport StoreSystem from \"./storeSystem\";\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    system: StoreSystem.Param;\r\n    logicData: LogicUtil.WrapElement | null;\r\n    launchData: LaunchData;\r\n    launchCacheList: Cache[];\r\n    cloud: StoreCloud.Props | null;\r\n    fileHandle: FileSystemFileHandle | null\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    system: {\r\n        isSplash: false,\r\n        user: null,\r\n        dialog: null,\r\n    },\r\n    logicData: null,\r\n    launchData: {\r\n        limitFrame: 300,\r\n        limitParticle: 3000,\r\n        defList: []\r\n    },\r\n    launchCacheList: [],\r\n    cloud: null,\r\n    fileHandle: null,\r\n}","\r\nnamespace SystemConst {\r\n    export const AUTH_TEXT_WIDTH = 350;\r\n    export const AUTH_TEXT_HEIGHT = 70;\r\n}\r\n\r\nexport default SystemConst;\r\n\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n\r\n// ホームチャンネル\r\nexport const HOME_USER_DIV_HEIGHT = 400;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const dialog = store.system.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            store.system.dialog = null;\r\n            setStore({...store});\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: (index: number)=>void;\r\n    tabRecordNum?: number;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    enable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabRecordNum = props.tabRecordNum ?? 1;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList tabRecordNum={tabRecordNum}>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isEnable={tab.enable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList tabRecordNum={tabRecordNum}>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={!tab.enable ? <></> : tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isEnable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: inline-block;\r\n    height: ${props => 35 * props.tabRecordNum}px;\r\n    text-align: left;\r\n    /* background-color: #ac3b3b; */\r\n    width: 100%;\r\n`;\r\nconst _ContList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\r\n    border-radius: 0 6px 6px 6px;\r\n    /* box-shadow: 0 2px 0 0 #000b3a48; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    \r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                margin-top: 5px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${props.isEnable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        // parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        const ref = useRef({} as HTMLDivElement);\r\n\r\n        /**\r\n         * データを元に再帰的に以下のツリーを構成する。\r\n         * @returns ツリー\r\n         */\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        useEffect(() => {\r\n            if (focusNode != null && focusNode.parent != null) {\r\n                focusNode.parent.isOpen = true;\r\n            }\r\n        }, [focusNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            // console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    // 親判定\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    // 兄弟判定\r\n                    if (result === false && focusNode != null && focusNode.parent != null) {\r\n                        result = focusNode.parent.children.find(node => node == element) != undefined;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        width={ref.current.scrollWidth}\r\n                        isActive={isCurrent}\r\n                        isRelation={!isDisable && isRelationNode()}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap\r\n                ref={ref}\r\n                isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #374a54;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #1f3642;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n    isRelation: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #459cff46;\r\n    `}\r\n    opacity: 0.3;\r\n    ${props => !props.isRelation ? '' : css`\r\n        background-color: #ffffff28;\r\n        opacity: 1;\r\n    `}\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #b4d9dd83;\r\n        opacity: 1;\r\n    `}\r\n    width: ${props => props.width}px;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import SystemConst from \"./systemConst\";\r\n\r\nnamespace CanvasUtil {\r\n\r\n    /**\r\n     * Canvasに任意の描画をし、画像のURLを取得する\r\n     * @param width 幅\r\n     * @param height 高さ\r\n     * @param draw 描画\r\n     * @returns 画像のURL\r\n     */\r\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        draw(ctx);\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    export const getLogoURL = () => {\r\n        return CanvasUtil.createURL(360, 80, (ctx) => {\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.fillRect(0, 0, 350, 80);\r\n\r\n            ctx.shadowColor = \"#555\";\r\n            ctx.shadowOffsetX = 2;\r\n            ctx.shadowOffsetY = 1;\r\n            ctx.shadowBlur = 5;\r\n            ctx.font = 'italic 50pt Arial';\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.fillText('Pixel ', 14, 64);\r\n            const adjust = ctx.measureText('Pixel ').width;\r\n            ctx.fillStyle = '#6ea0c4';\r\n            ctx.fillText('Flare', 14 + adjust, 64);\r\n            ctx.save();\r\n        });\r\n    }\r\n\r\n    export const getAuthTextURL = (text: string) => {\r\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\r\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\r\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\r\n            ctx.rotate(1 * Math.PI / 180);\r\n            for (let i = 0; i < text.length; i++) {\r\n                const char = text.charAt(i);\r\n\r\n                const fontRand = Math.random() * 60;\r\n                const alphaRand = Math.random() * 60;\r\n                ctx.font = `${20 + fontRand}pt Arial`;\r\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\r\n                ctx.fillText(char, i * SIZE, 60);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CanvasUtil;","import VectorUtil from \"./vectorUtil\";\r\n\r\nnamespace Particle {\r\n\r\n    export type Props = {\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        limit: number;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n    }\r\n\r\n    export class Instance {\r\n\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        prevPos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        frame: number;\r\n        limit: number;\r\n        isLive: boolean;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n\r\n        constructor(props: Props) {\r\n            this.owner = props.owner;\r\n            this.pos = props.pos;\r\n            this.prevPos = props.pos;\r\n            this.vec = props.vec;\r\n\r\n            this.frame = 0;\r\n            this.limit = props.limit;\r\n            this.isLive = true;\r\n            this.drawer = props.drawer;\r\n            this.extend = props.extend;\r\n        }\r\n\r\n        update = () => {\r\n\r\n            this.pos.x += this.vec.xy.x;\r\n            this.pos.y += this.vec.xy.y;\r\n\r\n            this.extend.forEach(callback => callback(this));\r\n\r\n            if (this.frame === this.limit) {\r\n                this.isLive = false;\r\n            }\r\n            this.frame++;\r\n        }\r\n\r\n        draw = (ctx: CanvasRenderingContext2D) => {\r\n            this.drawer(this, ctx);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Particle;","import Particle from \"./particle\";\r\n\r\nnamespace DrawUtil {\r\n\r\n    export type Rgba = {\r\n        r: number;\r\n        g: number;\r\n        b: number;\r\n        a: number;\r\n    }\r\n\r\n    export type ColorStop = {\r\n        offset: number;\r\n        color: string;\r\n    }\r\n\r\n    export type DrawerParam = {\r\n        color: string;\r\n        radius?: number;\r\n        disappearStartRate?: number;\r\n        shrinkStartRate?: number;\r\n        flashAppearFrame?: number;\r\n        flashHideFrame?: number;\r\n    }\r\n\r\n    export const createGradDrawer = (param: DrawerParam) => {\r\n\r\n        /** 基準となる半径 */\r\n        const radiusBase = param.radius ?? 30;\r\n        return (self: Particle.Instance, ctx: CanvasRenderingContext2D) => {\r\n            if (param.flashAppearFrame != undefined) {\r\n                const appearFrame = param.flashAppearFrame;\r\n                const hideFrame = (param.flashHideFrame as number);\r\n                const unitFrame = appearFrame + hideFrame;\r\n                if ((self.frame % unitFrame) >= appearFrame) return;\r\n            }\r\n\r\n            let radius = radiusBase;\r\n            if (param.shrinkStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.shrinkStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    const rate = (limit - frame) / limit;\r\n                    radius *= rate;\r\n                }\r\n            }\r\n\r\n            const x = self.pos.x;\r\n            const y = self.pos.y;\r\n            const g = ctx.createRadialGradient(x, y, 1, x, y, radius);\r\n\r\n            const grads: ColorStop[] = [];\r\n            const rgba = convertRgbaFromColorCode(param.color) ?? { r: 255, g: 255, b: 255, a: 255 };\r\n            grads.push({ offset: 0, color: convertColorCodeFromRgba({ r: 255, g: 255, b: 255, a: Math.floor(rgba.a * 0.9) }) });\r\n            grads.push({ offset: 0.2, color: convertColorCodeFromRgba({ ...rgba, a: Math.floor(rgba.a * 0.15) }) });\r\n            grads.push({ offset: 1, color: convertColorCodeFromRgba({ ...rgba, a: 1 }) });\r\n\r\n            grads.forEach(grad => {\r\n                g.addColorStop(grad.offset, grad.color);\r\n            });\r\n\r\n            ctx.globalAlpha = 1;\r\n            if (param.disappearStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.disappearStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    ctx.globalAlpha = (limit - frame) / limit;\r\n                }\r\n            }\r\n\r\n            ctx.fillStyle = g;\r\n            // ctx.fillStyle = param.color;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n        };\r\n    }\r\n\r\n    export const convertRgbaFromColorCode = (code: string): Rgba | null => {\r\n        const div = code.split('#');\r\n        if (div.length !== 2 || div[1].length < 6) return null;\r\n\r\n        const value = div[1];\r\n        const r = Number.parseInt(value.substring(0, 2), 16);\r\n        const g = Number.parseInt(value.substring(2, 4), 16);\r\n        const b = Number.parseInt(value.substring(4, 6), 16);\r\n        let a = 1;\r\n        if (value.length === 8) {\r\n            a = Number.parseInt(value.substring(6, 8), 16);\r\n        }\r\n        return { r, g, b, a };\r\n    }\r\n\r\n    export const convertColorCodeFromRgba = (rgba: Rgba): string => {\r\n        const r1 = (Math.floor(rgba.r));\r\n        const g1 = (Math.floor(rgba.g));\r\n        const b1 = (Math.floor(rgba.b));\r\n        const a1 = (Math.floor(rgba.a));\r\n        const r = ('00' + r1.toString(16)).slice(-2);\r\n        const g = ('00' + g1.toString(16)).slice(-2);\r\n        const b = ('00' + b1.toString(16)).slice(-2);\r\n        const a = ('00' + a1.toString(16)).slice(-2);\r\n        return `#${r}${g}${b}${a}`;\r\n    }\r\n\r\n    export const toWhite = (color: string, rate: number): string => {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport default DrawUtil;","namespace VectorUtil {\r\n\r\n    export type XY = {\r\n        x: number, y: number;\r\n    }\r\n\r\n    export class Vector {\r\n\r\n        xy: XY;\r\n        rad: number;\r\n        len: number;\r\n\r\n        constructor(xy: XY) {\r\n            this.xy = xy;\r\n            this.rad = 0;\r\n            this.len = 0;\r\n            this.syncFromXY();\r\n        }\r\n\r\n        syncFromXY = () => {\r\n            this.len = Math.sqrt(this.xy.x * this.xy.x + this.xy.y * this.xy.y);\r\n            this.rad = Math.atan2(this.xy.y, this.xy.x);\r\n        }\r\n\r\n        syncFromRad = () => {\r\n            this.xy.x = Math.cos(this.rad) * this.len;\r\n            this.xy.y = Math.sin(this.rad) * this.len;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default VectorUtil;","\r\nnamespace ParamUtil {\r\n    export enum VisualParamType {\r\n        RADIUS = 'radius',\r\n        COLOR_R = 'color_r',\r\n        COLOR_G = 'color_g',\r\n        COLOR_B = 'color_b',\r\n        COLOR_A = 'color_a',\r\n        THICKNESS = 'thickness',\r\n    }\r\n    export const VisualParams = Object.values(VisualParamType);\r\n    export type VisualParam = typeof VisualParams[number];\r\n\r\n    export enum BehaviorParamType {\r\n        LIMIT = 'limit',\r\n        POS_X = 'pos_x',\r\n        POS_Y = 'pos_y',\r\n        VEC_X = 'vec_x',\r\n        VEC_Y = 'vec_y',\r\n        VEC_RAD = 'vec_radian',\r\n        VEC_LEN = 'vec_length',\r\n    }\r\n    export const BehaviorParams = Object.values(BehaviorParamType);\r\n    export type BehaviorParam = typeof BehaviorParams[number];\r\n\r\n    export enum SelfParamType {\r\n        FRAME = 'self_frame',\r\n        LIMIT = 'self_limit',\r\n        POS_X = 'self_pos_x',\r\n        POS_Y = 'self_pos_y',\r\n        VEC_X = 'self_vec_x',\r\n        VEC_Y = 'self_vec_y',\r\n        VEC_RAD = 'self_vec_radian',\r\n        VEC_LEN = 'self_vec_length',\r\n    }\r\n    export const SelfParams = Object.values(SelfParamType);\r\n    export type SelfParam = typeof SelfParams[number];\r\n\r\n    export enum ExtendParamType {\r\n        LOOP_COUNT = 'loop_count',\r\n        LOOP_ITERATE = 'loop_iterate',\r\n        INVOKE = 'invoke',\r\n    }\r\n    export const ExtendParams = Object.values(ExtendParamType);\r\n    export type ExtendParam = typeof ExtendParams[number];\r\n\r\n    export enum EffectParamType {\r\n        DISAPPEAR_START = 'disappear_start',\r\n        SHRINK_START = 'shrink_start',\r\n        FLASH_APPEAR_FRAME = 'flash_appear_frame',\r\n        FLASH_HIDE_FRAME = 'flash_hide_frame',\r\n    }\r\n    export const EffectParams = Object.values(EffectParamType);\r\n    export type EffectParam = typeof EffectParams[number];\r\n\r\n    export enum ModulateParamType {\r\n        DECAY_RATE = 'decay_rate',\r\n        DECAY_LIMIT = 'decay_limit',\r\n        GRAVITY_VAL = 'gravity_val',\r\n        GRAVITY_LIMIT = 'gravity_limit',\r\n    }\r\n    export const ModulateParams = Object.values(ModulateParamType);\r\n    export type ModulateParam = typeof ModulateParams[number];\r\n\r\n    export enum ConstantType {\r\n        SCREEN_WIDTH = 'screen_width',\r\n        SCREEN_HEIGHT = 'screen_height',\r\n        PI = 'pi',\r\n        RADIAN_ROUND = 'radian_round',\r\n    }\r\n    export const Constants = Object.values(ConstantType);\r\n    export type Constant = typeof Constants[number];\r\n\r\n}\r\n\r\nexport default ParamUtil;","import Particle from \"../../graphic/particle\";\r\n\r\nnamespace ModulateBuilder {\r\n\r\n    type ModulateParam = {\r\n        decayRate?: number;\r\n        decayLimit?: number;\r\n        gravity?: number;\r\n        gravityLimit?: number;\r\n    }\r\n\r\n    export const build = (extendList: ((self: Particle.Instance) => void)[], param: ModulateParam) => {\r\n        \r\n        // 減衰メソッド\r\n        if (param.decayRate != undefined && param.decayLimit != undefined) {\r\n            const decayLimit = param.decayLimit;\r\n            const decayRate = param.decayRate;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.len > decayLimit) {\r\n                    self.vec.len = self.vec.len * decayRate;\r\n                    self.vec.syncFromRad();\r\n                }\r\n            });\r\n        }\r\n        // 重力メソッド\r\n        if (param.gravity != undefined && param.gravityLimit != undefined) {\r\n            const gravityLimit = param.gravityLimit;\r\n            const gravity = param.gravity;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.xy.y < gravityLimit) {\r\n                    self.vec.xy.y += gravity;\r\n                    self.vec.syncFromXY();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModulateBuilder;","import DrawUtil from \"../../graphic/drawUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport ParamUtil from \"../factory/util/paramUtil\";\r\nimport ModulateBuilder from \"./modulateBuilder\";\r\n\r\nnamespace PreviewUtil {\r\n\r\n    export const SCREEN_WIDTH = 550;\r\n    export const SCREEN_HEIGHT = 550;\r\n\r\n    export type ValueMap = {\r\n        name: string;\r\n        value: number;\r\n    }\r\n\r\n    export const buildLogicProps = (\r\n        owner: Particle.Instance[],\r\n        origin: LogicUtil.NodeLogicItem,\r\n        rootData: LogicUtil.WrapElement,\r\n        sends: ValueMap[]\r\n    ): Particle.Props => {\r\n\r\n        /**\r\n         * ディペンドするロジック要素を識別名から探して返す。\r\n         * @param name ロジックの識別名\r\n         * @returns ロジック要素\r\n         */\r\n        const searchDependLogic = (name: string): LogicUtil.NodeLogicItem | null => {\r\n            const mng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n            const wrap = mng.defs.find(def => (def.data as LogicUtil.NodeLogicItem).name === name);\r\n            if (wrap == undefined) return null;\r\n            return wrap.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        /**\r\n         * 再帰的にパーティクルを生成する。\r\n         * @param cur ルートとなるロジック要素\r\n         * @param sends 親要素から送られてきたフィールド\r\n         * @returns パーティクルのプロパティ\r\n         */\r\n        const createParticleRec = (cur: LogicUtil.NodeLogicItem, sends: ValueMap[]): Particle.Props => {\r\n            let valueMapList: ValueMap[] = sends.concat(ConstantValueMap);\r\n\r\n\r\n            // フィールドのパラメータを取得\r\n            const fieldMng = searchElement('field-mng', cur.mngs);\r\n            if (fieldMng != null) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                    valueMapList.push({ name: paramItem.name, value });\r\n                });\r\n            }\r\n\r\n            const visualParams = (searchElement('visual-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n            const behaviorParams = (searchElement('behavior-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n\r\n            const getVisualParam = (name: string) => {\r\n                return convertParamsToValue(name, visualParams, valueMapList);\r\n            }\r\n            const getBehaviorParam = (name: string) => {\r\n                return convertParamsToValue(name, behaviorParams, valueMapList);\r\n            }\r\n\r\n            // Behaviorのパラメータを取得\r\n            const limit = Math.floor(getBehaviorParam(ParamUtil.BehaviorParamType.LIMIT) as number);\r\n            const pos = {\r\n                x: getBehaviorParam(ParamUtil.BehaviorParamType.POS_X) as number,\r\n                y: getBehaviorParam(ParamUtil.BehaviorParamType.POS_Y) as number\r\n            };\r\n            const vec = new VectorUtil.Vector({ x: 0, y: 0 });\r\n            const isVectorMethod = behaviorParams.find(param => param.name === ParamUtil.BehaviorParamType.VEC_X) != undefined;\r\n            if (isVectorMethod) {\r\n                vec.xy.x = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_X) as number;\r\n                vec.xy.y = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_Y) as number;\r\n                vec.syncFromXY();\r\n            } else {\r\n                vec.rad = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_RAD) as number;\r\n                vec.len = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_LEN) as number;\r\n                vec.syncFromRad();\r\n            }\r\n\r\n            /**\r\n             * 追加動作（子要素、エフェクト、モデュレート）\r\n             */\r\n            const extendList: ((self: Particle.Instance) => void)[] = [];\r\n\r\n            // 子要素を生成する\r\n            const connectMng = searchElement('inherit-mng', cur.mngs);\r\n            if (connectMng != null) {\r\n\r\n                // パーティクル情報のフィールド追加\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_X, value: pos.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_Y, value: pos.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_RAD, value: vec.rad });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_LEN, value: vec.len });\r\n\r\n                const connects = (connectMng.data as LogicUtil.NodeConnectManager).inherits;\r\n\r\n                connects.forEach(connect => {\r\n                    const connector = connect.data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.disable ?? false) return;\r\n\r\n                    const logicItem = connector.method === 'create' ?\r\n                        searchElement('inherit-logic', connector.mngs)?.data as LogicUtil.NodeLogicItem :\r\n                        searchDependLogic(connector.depend);\r\n\r\n                    if (logicItem != null) {\r\n\r\n                        extendList.push((self: Particle.Instance) => {\r\n\r\n                            const addValueMap = (item: ValueMap) => {\r\n                                const map = valueMapList.find(map => map.name === item.name);\r\n                                if (map != undefined) map.value = item.value;\r\n                                else valueMapList.push(item);\r\n                            }\r\n                            addValueMap({ name: ParamUtil.SelfParamType.FRAME, value: self.frame });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.LIMIT, value: self.limit });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_X, value: self.pos.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_Y, value: self.pos.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_X, value: self.vec.xy.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_Y, value: self.vec.xy.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_RAD, value: self.vec.rad });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_LEN, value: self.vec.len });\r\n\r\n                            // Inherit配下のフィールドのパラメータを取得\r\n                            const itrfldValueMap: ValueMap[] = [];\r\n                            const fieldMng = searchElement('inhfld-mng', connector.mngs);\r\n                            if (fieldMng != null) {\r\n                                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                                    itrfldValueMap.push({ name: paramItem.name, value });\r\n                                });\r\n                            }\r\n\r\n                            let loopCnt = 1;\r\n                            const extendItem = searchElement('extend-mng', connector.mngs) as LogicUtil.WrapElement;\r\n                            const extendParams = (extendItem.data as LogicUtil.NodeParamManager).params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                            const loopCntVal = convertParamsToValue(ParamUtil.ExtendParamType.LOOP_COUNT, extendParams, valueMapList.concat(itrfldValueMap));\r\n\r\n                            // 派生条件\r\n                            const isInvoke = convertParamsToBoolean(ParamUtil.ExtendParamType.INVOKE, extendParams, valueMapList) ?? true;\r\n\r\n                            // 条件を満たさない場合、以下の処理（パーティクルの生成）を行わない\r\n                            if (!isInvoke) return;\r\n\r\n                            // イテレータを利用している場合\r\n                            if (loopCntVal != undefined) {\r\n                                loopCnt = loopCntVal;\r\n                            }\r\n\r\n                            for (let i = 0; i < loopCnt; i++) {\r\n\r\n                                // イテレータ関連のパラメータを追加\r\n                                const iterateValueMap: ValueMap[] = [\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_COUNT, value: loopCnt },\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_ITERATE, value: i }\r\n                                ];\r\n\r\n                                const sendItem = searchElement('send-mng', connector.mngs)?.data as LogicUtil.NodeParamManager;\r\n                                const params = sendItem.params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                                const sendValueMapList: ValueMap[] = params.map(item => {\r\n                                    return { name: item.name, value: convertParamsToValue(item.name, params, valueMapList.concat(itrfldValueMap).concat(iterateValueMap)) ?? 0 }\r\n                                });\r\n\r\n                                const props = createParticleRec(\r\n                                    logicItem,\r\n                                    sendValueMapList\r\n                                );\r\n                                self.owner.push(new Particle.Instance(props));\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            // モデュレート（動きの変化）を付与\r\n            ModulateBuilder.build(extendList, {\r\n                decayLimit: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_LIMIT),\r\n                decayRate: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_RATE),\r\n                gravity: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_VAL),\r\n                gravityLimit: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_LIMIT),\r\n            });\r\n\r\n            // Visualのパラメータを取得\r\n            const radius = getVisualParam(ParamUtil.VisualParamType.RADIUS);\r\n            const colorR = getVisualParam(ParamUtil.VisualParamType.COLOR_R);\r\n            const colorG = getVisualParam(ParamUtil.VisualParamType.COLOR_G);\r\n            const colorB = getVisualParam(ParamUtil.VisualParamType.COLOR_B);\r\n            const colorA = getVisualParam(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // エフェクト付与\r\n            const disappearStart = getVisualParam(ParamUtil.EffectParamType.DISAPPEAR_START);\r\n            const shrinkStart = getVisualParam(ParamUtil.EffectParamType.SHRINK_START);\r\n            const flashAppearFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME);\r\n            const flashHideFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_HIDE_FRAME);\r\n\r\n            let drawer: (self: Particle.Instance, ctx: CanvasRenderingContext2D) => void = () => { };\r\n            if (radius != undefined) {\r\n                drawer = DrawUtil.createGradDrawer({\r\n                    radius: radius,\r\n                    color: DrawUtil.convertColorCodeFromRgba({\r\n                        r: colorR as number,\r\n                        g: colorG as number,\r\n                        b: colorB as number,\r\n                        a: colorA as number,\r\n                    }),\r\n                    disappearStartRate: disappearStart,\r\n                    shrinkStartRate: shrinkStart,\r\n                    flashAppearFrame,\r\n                    flashHideFrame,\r\n                });\r\n            }\r\n\r\n            return {\r\n                owner, pos, vec,\r\n                limit, drawer,\r\n                extend: extendList\r\n            };\r\n        }\r\n\r\n        return createParticleRec(origin, sends);\r\n    }\r\n\r\n    const searchElement = (type: LogicUtil.NodeType, warpList: LogicUtil.WrapElement[]) => {\r\n        return warpList.find(wrap => wrap.type === type) ?? null;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param valueMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToValue = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): number | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToValue(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToValue = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): number => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(ret);\r\n        return ret;\r\n    }\r\n\r\n    export const convertParamsToBoolean = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): boolean | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToBoolean(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToBoolean = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): boolean => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item, i) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            else if (item === '=') str = '==';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(formulaStr);\r\n        return ret;\r\n    }\r\n\r\n    export const ConstantValueMap: ValueMap[] = [\r\n        { name: ParamUtil.ConstantType.SCREEN_WIDTH, value: SCREEN_WIDTH },\r\n        { name: ParamUtil.ConstantType.SCREEN_HEIGHT, value: SCREEN_HEIGHT },\r\n        { name: ParamUtil.ConstantType.PI, value: 3.14159265359 },\r\n        { name: ParamUtil.ConstantType.RADIAN_ROUND, value: 3.14159265359 * 2 }\r\n    ];\r\n\r\n    export type RunParticleProps = {\r\n        /** フレームの上限（過ぎると停止） */\r\n        limitFrame: number,\r\n        /** パーティクル数の上限（超えると停止） */\r\n        limitParticle: number,\r\n        /** 最低保証フレーム */\r\n        guaranteeFrame?: number,\r\n        /** 1フレーム経過ごとに実行する処理のコールバック */\r\n        doIterate: (frame: number, owner: Particle.Instance[]) => void,\r\n        /** 最終フレーム（ループから抜けた直後）に実行する処理のコールバック */\r\n        doEnd?: (frame: number, owner: Particle.Instance[]) => void\r\n    };\r\n\r\n    export const runParticleLogic = (props: RunParticleProps) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        const owner: Particle.Instance[] = [];\r\n        let frame = 0;\r\n        while (true) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            // // 死滅したパーティクルの削除\r\n            // for (let i = owner.length - 1; i >= 0; i--) {\r\n            //     const particle = owner[i];\r\n            //     if (!particle.isLive) {\r\n            //         owner.splice(i, 1);\r\n            //     }\r\n            // }\r\n\r\n            if (frame > props.limitFrame ||\r\n                owner.length > props.limitParticle ||\r\n                frame > minFrame && owner.length === 0\r\n            ) break;\r\n            frame++;\r\n        };\r\n\r\n        if (props.doEnd != undefined) {\r\n            props.doEnd(frame, owner);\r\n        }\r\n    }\r\n}\r\n\r\nexport default PreviewUtil;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\r\n\r\n    export type Validate = {\r\n        checker: (value: string) => boolean;\r\n        errorType: ErrorType;\r\n        message?: string;\r\n    }\r\n\r\n    /**\r\n     * 必須チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkRequired = (str: string) => {\r\n        return str.length > 0;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length === 0 || (str.length >= min && str.length <= max);\r\n    }\r\n\r\n    /**\r\n     * 半角英数時チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        return checkIncludesChars(str, list);\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列で構成されているかチェック\r\n     * @param str 検証する文字列\r\n     * @param list 入力を許す対象文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkIncludesChars = (str: string, list: string) => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            const ch = str.charAt(i);\r\n            if (list.indexOf(ch) === -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列が数値に変換できるかチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumber = (str: string) => {\r\n        return !isNaN(Number(str));\r\n    }\r\n\r\n    /**\r\n     * 数値の値の範囲をチェック\r\n     * @param str 検証する文字列\r\n     * @param min 下限\r\n     * @param max 上限\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumberRange = (str: string, min: number, max: number) => {\r\n        if (!isNaN(Number(str))) {\r\n            const num = Number(str);\r\n            return num >= min && num <= max;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default ValidateUtil;\r\n","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorArgumentMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'argument-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentMng;","import { useContext, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nnamespace ModifyOperations {\r\n\r\n    export type Props = {\r\n        mappingForm: () => void;\r\n        checkableFields: FormUtil.CheckableValue[];\r\n        isInputOK?: boolean;\r\n        firstRegist: () => void;\r\n        modifyRegist: () => void;\r\n    }\r\n\r\n    export const Component = (props: Props) => {\r\n        const { node, isModify, setModify, removeSelf } = useContext(FactoryTreeContext);\r\n\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n        const isComplete = FormUtil.isCompleteCheck(props.checkableFields);\r\n\r\n        return (<>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: isModify,\r\n                        callback: () => {\r\n                            if (wrap.data == null) {\r\n                                removeSelf();\r\n                            } else {\r\n                                props.mappingForm();\r\n                            }\r\n                            setModify(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !isModify || (props.isInputOK ?? isComplete),\r\n                        callback: () => {\r\n                            if (!isModify) {\r\n                                setModify(true);\r\n                            } else {\r\n                                if (wrap.data == null) {\r\n                                    props.firstRegist();\r\n                                } else {\r\n                                    props.modifyRegist();\r\n                                }\r\n                                setModify(false);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default ModifyOperations;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype FormProps = {\r\n    inputType: FormUtil.CheckableValue;\r\n    value: FormUtil.CheckableValue;\r\n};\r\n\r\nenum Level {\r\n    FIELD = 0,\r\n    INITIAL,\r\n    INHERIT_FIELD,\r\n    INHERIT_EXTEND,\r\n    INHERIT_SEND\r\n}\r\n\r\nconst EditorParamItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    /** 名前 */\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    /** 式 */\r\n    const [formulaItems, setFormulaItems] = useState<string[]>([]);\r\n    /** 変数の入力フォーム */\r\n    const [varFormList, setVarFormList] = useState<FormProps[]>([]);\r\n    // const [formJsxList, setFaormJsxList] = useState<JSX.Element[]>([]);\r\n\r\n    const isField = wrap.type === 'field-item';\r\n    const isCondition = wrap.type === 'condition-item';\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        setName({ value: param.name, errors: [] });\r\n        setFormulaItems(param.formulaItems.slice());\r\n        setVarFormList(param.values.map(v => {\r\n            return {\r\n                inputType: { value: v.type, errors: [] },\r\n                value: { value: v.value, errors: [] }\r\n            }\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const level: Level = useMemo(() => {\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        switch (parentType) {\r\n            case 'field-mng': return Level.FIELD;\r\n            case 'visual-mng':\r\n            case 'behavior-mng': return Level.INITIAL;\r\n            case 'inhfld-mng': return Level.INHERIT_FIELD;\r\n            case 'extend-mng': return Level.INHERIT_EXTEND;\r\n            case 'send-mng': return Level.INHERIT_SEND;\r\n        }\r\n        return -1;\r\n    }, [node]);\r\n\r\n    /**\r\n     * 引数とフィールド変数のキーリストを取得する。\r\n     */\r\n    const [argumentList, fieldKeyList] = useMemo(() => {\r\n        let argumentList: string[] = [];\r\n        const fieldKeys: string[] = [];\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const targetTypes: LogicUtil.NodeType[] = ['field-mng', 'behavior-mng', 'visual-mng', 'inhfld-mng', 'send-mng', 'extend-mng'];\r\n        if (targetTypes.includes(parentType)) {\r\n            const getLogicNode = () => {\r\n                switch (parentType) {\r\n                    case 'field-mng':\r\n                    case 'visual-mng':\r\n                    case 'behavior-mng': return node.parent?.parent;\r\n                    case 'inhfld-mng':\r\n                    case 'send-mng':\r\n                    case 'extend-mng': return node?.parent?.parent?.parent?.parent;\r\n                }\r\n            };\r\n            const logicItem = (getLogicNode()?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n            // 引数リストを追加\r\n            const argMng = logicItem.mngs.find(mng => mng.type === 'argument-mng');\r\n            if (argMng != undefined) {\r\n                argumentList = (argMng.data as LogicUtil.NodeArgumentManager).\r\n                    args.map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n            }\r\n            // 変数リストを追加\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (level >= Level.INITIAL && fieldMng != undefined) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                    fieldKeys.push(fieldName);\r\n                });\r\n            }\r\n        } else if (parentType === 'seedsend-mng') {\r\n            // シード配下のSendは特別に扱う（どのレベルにも属さない）\r\n            const argMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'seedarg-mng');\r\n            if (argMng != null) {\r\n                argumentList = (argMng.data as LogicUtil.NodeSeedArgManager).\r\n                    args.map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n            } else throw new Error('argMng is undefined.');\r\n        }\r\n        if (level >= Level.INHERIT_FIELD) {\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_RAD);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_LEN);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.RADIUS);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_R);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_G);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_B);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // フィールドキーにInherit配下のFieldパラメータを追加\r\n            if (level >= Level.INHERIT_EXTEND) {\r\n                const inhfldNode = LogicElementUtil.getInnerNode(node.parent?.parent as TreeUtil.ElementNode, 'inhfld-mng');\r\n                if (inhfldNode != null) {\r\n                    const fieldMng = (inhfldNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeFieldManager;\r\n                    fieldMng.fields.forEach(field => {\r\n                        const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                        fieldKeys.push(fieldName);\r\n                    });\r\n                }\r\n            }\r\n            // フィールドキーにExtendパラメータを追加\r\n            if (level === Level.INHERIT_SEND) {\r\n                const extendWrap = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'extend-mng') as LogicUtil.WrapElement;\r\n                const extendElement = extendWrap.data as LogicUtil.NodeParamManager;\r\n                //Extendにloop_countのパラメータがある場合\r\n                if (extendElement.params.find(\r\n                    param => (param.data as LogicUtil.NodeParamItem).name === ParamUtil.ExtendParamType.LOOP_COUNT\r\n                ) != undefined) {\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_COUNT);\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_ITERATE);\r\n                }\r\n            }\r\n        }\r\n        return [argumentList, fieldKeys];\r\n    }, [node]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const paramNameList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (item === 'var') num++;\r\n        });\r\n\r\n        if (varFormList.length < num) {\r\n            const addNum = num - varFormList.length;\r\n            for (let i = 0; i < addNum; i++) varFormList.push({\r\n                inputType: { value: 'direct', errors: [] },\r\n                value: { value: '', errors: [] }\r\n            });\r\n            setVarFormList(varFormList.slice());\r\n        } else if (varFormList.length > num) {\r\n            const delNum = varFormList.length - num;\r\n            for (let i = 0; i < delNum; i++) varFormList.splice(varFormList.length - delNum, delNum);\r\n            setVarFormList(varFormList.slice());\r\n        }\r\n    }, [formulaItems]);\r\n\r\n    /** 「(」の数-「)」の数 */\r\n    const parenthesisBalance = useMemo(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (['(', 'rand(', 'integer('].includes(item)) num++;\r\n            else if (item === ')') num--;\r\n        });\r\n        return num;\r\n    }, [formulaItems]);\r\n\r\n    /** 値の入力フォームのJSX */\r\n    const formJsxList = useMemo(() => {\r\n        return varFormList.map((v, i) => {\r\n\r\n            const getValueForm = (): JSX.Element => {\r\n                const type = v.inputType.value as LogicUtil.ParamInputType;\r\n                if (type === 'direct') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isNumber\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else {\r\n                    let list: string[] = [];\r\n                    if (type === 'argument') {\r\n                        list = argumentList;\r\n                    } else if (type === 'field') {\r\n                        list = fieldKeyList;\r\n                    } else if (type === 'self') {\r\n                        list = ParamUtil.SelfParams;\r\n                    } else if (type === 'constant') {\r\n                        list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                    }\r\n                    return (\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            list={list.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n            return <FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={`var_${i}`}\r\n                labelWidth={90}\r\n                marginTop={i === 0 ? 4 : 0}\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        checkable={v.inputType}\r\n                        width={142}\r\n                        isReadOnly={!isModify}\r\n                        setCheckable={(checkable) => {\r\n                            varFormList[i].inputType = checkable;\r\n                            if (isModify) {\r\n                                varFormList[i].value.value = checkable.value === 'direct' ? '0' : '';\r\n                            }\r\n                            setVarFormList(varFormList.slice());\r\n                        }}\r\n                        list={LogicUtil.ParamInputTypes.filter(item => {\r\n                            switch (item) {\r\n                                case 'direct':\r\n                                case 'constant':\r\n                                case 'argument': return true;\r\n                                case 'field': return level >= Level.INITIAL;\r\n                                case 'self': return level >= Level.INHERIT_FIELD;\r\n                            }\r\n                        }).map(item => {\r\n                            return { value: item, labelText: item };\r\n                        })}\r\n                    />\r\n                    {getValueForm()}\r\n                </>}\r\n            />;\r\n        });\r\n    }, [varFormList, isModify]);\r\n\r\n    const getFormulaJsx = () => {\r\n        let num = 0;\r\n        const jsxList: JSX.Element[] = [];\r\n        formulaItems.forEach((item) => {\r\n            if (jsxList.length > 0) {\r\n                jsxList.push(<span key={jsxList.length}>&nbsp;</span>);\r\n            }\r\n            if (item === 'var') {\r\n                jsxList.push(<_Var key={jsxList.length}>{`$\\{var_${num}}`}</_Var>);\r\n                num++;\r\n            } else {\r\n                jsxList.push(<_Sig key={jsxList.length}>{item}</_Sig>);\r\n            }\r\n        });\r\n        return jsxList;\r\n    }\r\n\r\n    const isLastVar = () => formulaItems.length > 0 && ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const isFormulaOK = parenthesisBalance === 0 && varFormList.length > 0 &&\r\n        ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const hasFormError = !isFormulaOK || varFormList.find(varForm => varForm.value.errors.length > 0) != undefined;\r\n\r\n\r\n    const getFormulaItem = (label: string, width: number, isEnable: boolean, value: string) => {\r\n        return {\r\n            label, width, isEnable,\r\n            callback: () => {\r\n                formulaItems.push(value);\r\n                setFormulaItems(formulaItems.slice());\r\n            }\r\n        };\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeParamItem = {\r\n                    name: name.value,\r\n                    formulaItems: formulaItems.slice(),\r\n                    values: varFormList.map(varForm => {\r\n                        return {\r\n                            type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                            value: varForm.value.value\r\n                        }\r\n                    })\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n            }}\r\n            isInputOK={parenthesisBalance === 0 && !hasFormError && name.errors.length === 0}\r\n            modifyRegist={() => {\r\n                const data = wrap.data as LogicUtil.NodeParamItem;\r\n                data.formulaItems = formulaItems.slice();\r\n                data.values = varFormList.map(varForm => {\r\n                    return {\r\n                        type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                        value: varForm.value.value\r\n                    }\r\n                });\r\n                if (isField) {\r\n                    const prevName = data.name;\r\n                    data.name = name.value;\r\n                    if (prevName !== name.value) {\r\n                        syncFieldName(node.parent as TreeUtil.ElementNode, prevName, name.value);\r\n                    }\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify || !isField}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = paramNameList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeParamItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('+', 50, isModify && isLastVar(), '+'),\r\n                        getFormulaItem('-', 50, isModify && isLastVar(), '-'),\r\n                        getFormulaItem('*', 50, isModify && isLastVar(), '*'),\r\n                        getFormulaItem('/', 50, isModify && isLastVar(), '/'),\r\n                        getFormulaItem('%', 50, isModify && isLastVar(), '%'),\r\n                        getFormulaItem('(', 35, isModify && !isLastVar(), '('),\r\n                        getFormulaItem(')', 35, isModify && isLastVar() && parenthesisBalance > 0, ')'),\r\n                        {\r\n                            label: 'del',\r\n                            width: 60,\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            callback: () => {\r\n                                formulaItems.splice(formulaItems.length - 1, 1);\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {!isCondition ? <></> : (\r\n                    <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            getFormulaItem('<', 50, isModify && isLastVar(), '<'),\r\n                            getFormulaItem('<=', 50, isModify && isLastVar(), '<='),\r\n                            getFormulaItem('=', 50, isModify && isLastVar(), '='),\r\n                            getFormulaItem('>=', 50, isModify && isLastVar(), '>='),\r\n                            getFormulaItem('>', 50, isModify && isLastVar(), '>'),\r\n                            getFormulaItem('&&', 50, isModify && isLastVar(), '&&'),\r\n                            getFormulaItem('||', 50, isModify && isLastVar(), '||'),\r\n                        ]}\r\n                    />\r\n                )}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('var', 70, isModify && !isLastVar(), 'var'),\r\n                        getFormulaItem('rand', 80, isModify && !isLastVar(), 'rand('),\r\n                        getFormulaItem('integer', 80, isModify && !isLastVar(), 'integer('),\r\n                        {\r\n                            label: 'clear',\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            width: 90,\r\n                            callback: () => {\r\n                                setFormulaItems([]);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_Formula\r\n                    isInvalid={!isFormulaOK}\r\n                >{getFormulaJsx()}</_Formula>\r\n                {formJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify && isField}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'field', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getFieldRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {!isField ? <></> : LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorParamItem;\r\n\r\n/**\r\n * ノードの変数を参照している箇所のリストを返す。\r\n * @param node 変数のノード\r\n * @param argName 変数名\r\n * @returns 参照パラメータリスト\r\n */\r\nexport const getFieldRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n * フィールド名の変更に伴い、式で参照している変数を同期する\r\n * @param mngNode ノード\r\n */\r\nexport const syncFieldName = (mngNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const type = (mngNode.data as LogicUtil.WrapElement).type;\r\n    if (type === 'field-mng') {\r\n        const logic = (mngNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n\r\n        const visualMng = logic.mngs.find(mng => mng.type === 'visual-mng');\r\n        if (visualMng != undefined) {\r\n            syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const behaviorMng = logic.mngs.find(mng => mng.type === 'behavior-mng');\r\n        if (behaviorMng != undefined) {\r\n            syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                // Inherit配下のField要素のチェック\r\n                if (inhfld != null) {\r\n                    syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                }\r\n                // Extend要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    } else if (type === 'inhfld-mng') {\r\n        const inheritWrap = mngNode.parent?.data as LogicUtil.WrapElement;\r\n\r\n        // Extend要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        // Send要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n}\r\n\r\nconst _Formula = styled.div<{\r\n    isInvalid: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 12px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    overflow-wrap: break-word;\r\n    height: 100px;//calc(100% - 4px);\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    background-color: #ffffff8b;\r\n    ${props => !props.isInvalid ? '' : css`\r\n        background-color: #ffe8628a;\r\n    `}\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    padding: 0 0 0 4px;\r\n    vertical-align: top;\r\n    margin: 5px 0 0 6px;\r\n`;\r\nconst _Var = styled.span`\r\n    color: #e70013;\r\n`;\r\nconst _Sig = styled.span`\r\n    color: #3333339d;\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport GloballDialog from \"../../../../dialog/globalDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorArgumentItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const logicNode = node.parent?.parent as TreeUtil.ElementNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n        setName({ ...name, value: param.name });\r\n        setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, argType]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeArgumentItem = {\r\n                    name: name.value,\r\n                    valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n                syncArgumentAdd(logicNode, name.value);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(logicNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = reservedList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeArgumentItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'color' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getArgumentRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    // DependしているInheritのSendパラメータを同期する\r\n                                    syncArgumentDel(logicNode, name.value);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentItem;\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param node 引数のノード\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param logicNode ロジックノード\r\n*/\r\nconst syncArgumentName = (logicNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n    const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n    if (fieldMng != undefined) {\r\n        syncFormula((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n    }\r\n    const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n    if (visualMng != undefined) {\r\n        syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n    if (behaviorMng != undefined) {\r\n        syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n    if (inhMng != undefined) {\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n            // Inherit配下のField要素のチェック\r\n            if (inhfld != null) {\r\n                syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n            // Extend要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            // Send要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        });\r\n    }\r\n\r\n    const syncParamName = (params: LogicUtil.WrapElement[]) => {\r\n        params.forEach(wrap => {\r\n            const item = wrap.data as LogicUtil.NodeParamItem;\r\n            if (item.name === prevName) {\r\n                item.name = newName;\r\n            }\r\n        });\r\n    }\r\n    if (wrap.type === 'logic-item') {\r\n\r\n        // dependしている箇所を全て反映するために再帰で洗う\r\n        const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n            const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n            if (inhMng == undefined) return;\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    const inhLogic = LogicElementUtil.getInnerWrapFixed(inh, 'inherit-logic').data as LogicUtil.NodeLogicItem;\r\n                    runRec(inhLogic);\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    const sendMng = LogicElementUtil.getInnerWrapFixed(inh, 'send-mng').data as LogicUtil.NodeParamManager;\r\n                    syncParamName(sendMng.params);\r\n                }\r\n            });\r\n        }\r\n        // ロジックを全て調査する\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(logic => {\r\n            runRec((logic.data as LogicUtil.WrapElement).data);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        const root = (rootNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeRoot;\r\n        const defs = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        console.log(defs.length);\r\n        defs.forEach(wrap => {\r\n            const interfaceWrap = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng');\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(interfaceWrap, 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            syncParamName(sendMng.params);\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const connWrap = logicNode.parent?.data as LogicUtil.WrapElement;\r\n        const sendMng = LogicElementUtil.getInnerWrapFixed(connWrap, 'send-mng').data as LogicUtil.NodeParamManager;\r\n        syncParamName(sendMng.params);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の更新に伴い、参照先のSend管理に処理（callback）を行う\r\n * @param logicNode ロジックノード\r\n * @param callback 処理\r\n */\r\nconst syncArgumentCallback = (\r\n    logicNode: TreeUtil.ElementNode,\r\n    callback: (sendNode: TreeUtil.ElementNode) => void\r\n) => {\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n\r\n    if (wrap.type === 'logic-item') {\r\n        const runRec = (logicNode: TreeUtil.ElementNode) => {\r\n            const inhMngNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'inherit-mng');\r\n            if (inhMngNode == undefined) return;\r\n            inhMngNode.children.forEach(child => {\r\n                const conn = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    runRec(LogicElementUtil.getInnerNodeFixed(child, 'inherit-logic'));\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    callback(LogicElementUtil.getInnerNodeFixed(child, 'send-mng'));\r\n                }\r\n            });\r\n        }\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(child => {\r\n            runRec(child);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        rootNode.children[0].children.forEach(seedNode => {\r\n            const interfaceNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'interface-mng');\r\n            const sendNode = LogicElementUtil.getInnerNodeFixed(interfaceNode, 'seedsend-mng');\r\n            const seed = (seedNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n            if (seed.entry === logicItem.name) {\r\n                callback(sendNode);\r\n            }\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const sendNode = LogicElementUtil.getInnerNodeFixed(logicNode.parent as TreeUtil.ElementNode, 'send-mng');\r\n        callback(sendNode);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentAdd = (logicNode: TreeUtil.ElementNode, newArgName: string) => {\r\n    const addNewParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n            { name: newArgName, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n        );\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        sendMng.params.push(paramWrap);\r\n        sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n    }\r\n    syncArgumentCallback(logicNode, addNewParam);\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentDel = (logicNode: TreeUtil.ElementNode, delArgName: string) => {\r\n    const delArgParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        let delIndex = -1;\r\n        sendMng.params.some((param, i) => {\r\n            if ((param.data as LogicUtil.NodeParamItem).name == delArgName) {\r\n                delIndex = i;\r\n                return 1;\r\n            }\r\n        });\r\n        sendMng.params.splice(delIndex, 1);\r\n        sendNode.children.splice(delIndex, 1);\r\n    }\r\n    syncArgumentCallback(logicNode, delArgParam);\r\n}","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Seed',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seed-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedManager).defs.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorLogicMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Logic',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'logic-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\n\r\nconst EditorLogicItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [isConnect, hasArgNode, hasFieldNode, hasConnectNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        return [\r\n            parentType === 'connector',\r\n            list.includes('argument-mng'),\r\n            list.includes('field-mng'),\r\n            list.includes('inherit-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        if (!isConnect) {\r\n            const param = wrap.data as LogicUtil.NodeLogicItem;\r\n            setName({ ...name, value: param.name });\r\n        }\r\n    };\r\n\r\n    /** 既存のロジック名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => {\r\n        // インヘリットの場合、名前を持たないため取得しない\r\n        if (wrap.type === 'inherit-logic') return [];\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node, isConnect]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 引数要素の有無を判定\r\n     */\r\n    const hasArgument = () => {\r\n        const argumentNode = LogicElementUtil.getInnerNode(node, 'argument-mng');\r\n        if (argumentNode == null) return false;\r\n        return argumentNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'field-mng');\r\n        if (fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 派生要素の有無を判定\r\n     */\r\n    const hasInherit = () => {\r\n        const inheritNode = LogicElementUtil.getInnerNode(node, 'inherit-mng');\r\n        if (inheritNode == null) return false;\r\n        return inheritNode.children.length > 0;\r\n    }\r\n\r\n    return (<>\r\n        {isConnect ? <></> : (<>\r\n            <ModifyOperations.Component\r\n                mappingForm={mappingForm}\r\n                checkableFields={[name]}\r\n                firstRegist={() => {\r\n                    const element: LogicUtil.NodeLogicItem = {\r\n                        name: name.value,\r\n                        mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                    };\r\n                    element.name = name.value;\r\n                    wrap.data = element;\r\n\r\n                    element.mngs.forEach(mng => {\r\n                        const newNode = TreeUtil.createNode(mng, node);\r\n                        const data = (newNode.data as LogicUtil.WrapElement).data;\r\n                        (data as LogicUtil.NodeParamManager).params.forEach(param => {\r\n                            newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                        });\r\n                        node.children.push(newNode);\r\n                    });\r\n                    invalidate();\r\n                    setStore({ ...store });\r\n                }}\r\n                modifyRegist={() => {\r\n                    const param = wrap.data as LogicUtil.NodeLogicItem;\r\n                    const prevName = param.name;\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n                    // 名前が変わった場合、参照箇所も修正する\r\n                    if (prevName !== param.name) {\r\n                        syncLogicName(node, prevName, param.name);\r\n                    }\r\n                }}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"param\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Name\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={200}\r\n                                isReadOnly={!isModify}\r\n                                checkable={name}\r\n                                setCheckable={setName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => !existNameList.includes(value),\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n        </>)}\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Argument'}\r\n                        width={300}\r\n                        isUse={hasArgNode}\r\n                        isEnable={!hasArgument()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasArgNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'argument-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as LogicUtil.NodeArgumentManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            if (hasArgNode) listPos++;\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'field-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Inherit'}\r\n                            width={300}\r\n                            isUse={hasConnectNode}\r\n                            isEnable={!hasInherit()}\r\n                            callback={() => {\r\n                                let listPos = 2;\r\n                                if (hasArgNode) listPos++;\r\n                                if (hasFieldNode) listPos++;\r\n                                toggleElement(\r\n                                    hasConnectNode,\r\n                                    listPos,\r\n                                    {\r\n                                        type: 'inherit-mng',\r\n                                        data: {\r\n                                            inherits: []\r\n                                        } as LogicUtil.NodeConnectManager\r\n                                    }\r\n                                );\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        {isConnect ? <></> : (\r\n            <FormUtil.BorderPanel\r\n                title=\"operation\"\r\n                isEnable={!isModify}\r\n                innerJsx={<>\r\n                    {LogicElementUtil.getReplicateButton(node, !isModify, 'logic', store, setStore, invalidate)}\r\n                    {/* <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Replicate',\r\n                                isEnable: !isModify,\r\n                                // isEnable: false,\r\n                                callback: () => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Replicate this logic.\"\r\n                                        buttons={[\r\n                                            {\r\n                                                label: 'Cancel',\r\n                                                callback: () => {\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                label: 'Enter',\r\n                                                callback: () => {\r\n                                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                                    const name = wrap.data[namable] as string;\r\n                                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                    // mappingForm();\r\n                                                    invalidate();\r\n                                                }\r\n                                            }\r\n                                        ]}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    /> */}\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Delete',\r\n                                callback: () => {\r\n                                    const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                    const refers = getLocgicRefers(node, param.name);\r\n                                    if (refers.length === 0) {\r\n                                        removeSelf();\r\n                                    } else {\r\n                                        store.system.dialog = <ConfirmDialog.Component\r\n                                            message={`[${param.name}] is referenced in the Inherit.\\n${refers}`}\r\n                                        />;\r\n                                        setStore({ ...store });\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                    {/* 並び順入れ替えボタン */}\r\n                    {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n                </>}\r\n            />\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicItem;\r\n\r\n/**\r\n * ロジックを参照しているInheritのリストを返す。\r\n * @param node 現在のノード\r\n * @param logicName ロジック名\r\n * @returns 参照Inheritリスト\r\n */\r\nexport const getLocgicRefers = (node: TreeUtil.ElementNode, logicName: string) => {\r\n\r\n    const refers: string[] = [];\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        refers.push(conn.id);\r\n    }\r\n    searchLogicReferInherit(node, logicName, callback);\r\n    return refers;\r\n}\r\n\r\n/**\r\n * ロジック名の変更に伴い、参照しているインヘリットを同期する\r\n * @param node ロジックノード\r\n */\r\nconst syncLogicName = (node: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        conn.depend = newName;\r\n    }\r\n    searchLogicReferInherit(node, prevName, callback);\r\n}\r\n\r\nconst searchLogicReferInherit = (\r\n    node: TreeUtil.ElementNode,\r\n    logicName: string,\r\n    callback: (conn: LogicUtil.NodeInheritConnector) => void\r\n) => {\r\n    const logicMngNode = node.parent as TreeUtil.ElementNode\r\n    const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng == undefined) return;\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n            if (conn.method === 'create') {\r\n                const inhLogic = LogicElementUtil.getInnerWrap(inh, 'inherit-logic');\r\n                runRec(inhLogic?.data);\r\n            } else {\r\n                if (conn.depend === logicName) {\r\n                    callback(conn);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    logicMngNode.children.forEach(logic => {\r\n        runRec((logic.data as LogicUtil.WrapElement).data);\r\n    });\r\n}","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorBehiviorMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [isVector, hasDecayParam, hasGravityParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.BehaviorParamType.VEC_X),\r\n            list.includes(ParamUtil.ModulateParamType.DECAY_RATE),\r\n            list.includes(ParamUtil.ModulateParamType.GRAVITY_VAL)\r\n        ]\r\n    }, [node]);\r\n\r\n    const exchangeElements = (flag: boolean, listPos: number,\r\n        trueParamElements: LogicUtil.NodeParamItem[],\r\n        falseParamElements: LogicUtil.NodeParamItem[]\r\n    ) => {\r\n        const size = (flag ? trueParamElements : falseParamElements).length;\r\n        LogicElementUtil.removeChild(node, listPos, size);\r\n\r\n        (flag ? trueParamElements : falseParamElements).forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    const exchangeVectorMethod = () => {\r\n        exchangeElements(!isVector, 3,\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_X, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_Y, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ],\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_RAD, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_LEN, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ]\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            mng.params.splice(listPos, size);\r\n            node.children.splice(listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                mng.params.splice(listPos + i, 0, wrap);\r\n                const newNode = TreeUtil.createNode(wrap, node);\r\n                node.children.splice(listPos + i, 0, newNode);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Vector method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Direction method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={!isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"modulate\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Decay'}\r\n                            width={300}\r\n                            isUse={hasDecayParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDecayParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_RATE,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.9' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Gravity'}\r\n                            width={300}\r\n                            isUse={hasGravityParam}\r\n                            callback={() => {\r\n                                toggleElements(hasGravityParam, !hasDecayParam ? 5 : 7, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_VAL,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.2' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorBehiviorMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype Medhod = 'blank' | 'particle' | 'snake'\r\n\r\nconst EditorVisualMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [drawMethod, hasDisappearParam, hasShrinkParam, hasFlashParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        let drawMethod: Medhod = 'blank';\r\n        if(list.length > 0) {\r\n            drawMethod = list.includes(ParamUtil.VisualParamType.THICKNESS) ? 'snake' : 'particle';\r\n        }\r\n        return [\r\n            drawMethod,\r\n            list.includes(ParamUtil.EffectParamType.DISAPPEAR_START),\r\n            list.includes(ParamUtil.EffectParamType.SHRINK_START),\r\n            list.includes(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME)\r\n        ]\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    const addElements = (paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        paramElements.forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n    const removeElements = (elementNameList: string[]) => {\r\n        const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        elementNameList.forEach((name) => {\r\n            mng.params.forEach((param, i) => {\r\n                if((param.data as LogicUtil.NodeParamItem).name === name) {\r\n                    LogicElementUtil.removeChild(node, i, 1);\r\n                }\r\n            });\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam || hasFlashParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'None'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'blank'}\r\n                            callback={() => {\r\n                                mng.params.length = 0;\r\n                                node.children.length = 0;\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Snake Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'snake'}\r\n                            callback={() => {\r\n                                removeElements([\r\n                                    ParamUtil.VisualParamType.RADIUS\r\n                                ]);\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.THICKNESS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Particle Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'particle'}\r\n                            callback={() => {\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.RADIUS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '20' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"effect\"\r\n            isEnable={!isModify && drawMethod !== 'blank'}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Disappear'}\r\n                            width={300}\r\n                            isUse={hasDisappearParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDisappearParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.DISAPPEAR_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Shrink'}\r\n                            width={300}\r\n                            isUse={hasShrinkParam}\r\n                            callback={() => {\r\n                                toggleElements(hasShrinkParam, !hasDisappearParam ? 5 : 6, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.SHRINK_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Flash'}\r\n                            width={300}\r\n                            isUse={hasFlashParam}\r\n                            callback={() => {\r\n                                toggleElements(hasFlashParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_APPEAR_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_HIDE_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorVisualMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInheritConnMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeConnectManager;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Inherit',\r\n                        callback: () => {\r\n                            const wrap: LogicUtil.WrapElement = {\r\n                                type: 'connector',\r\n                                data: null\r\n                            }\r\n                            mng.inherits.push(wrap);\r\n                            const newNode = TreeUtil.createNode(wrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorInheritConnector = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, invalidate, setModify, isModify, removeSelf, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const [condition, setCondition] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [identify, setIdentify] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [method, setMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [depend, setDepend] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n        setMethod({ ...method, value: param.method });\r\n        setDepend({ ...depend, value: param.depend });\r\n        setIdentify({ ...identify, value: param.id });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n            // 派生識別名（自動命名）の初期値を取得\r\n            const defaultName = LogicElementUtil.getNumberingOnPrefixName('id_', node.parent as TreeUtil.ElementNode);\r\n            setIdentify({ ...identify, value: defaultName });\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const isCreate = method.value === 'create';\r\n\r\n    const hasFieldNode = useMemo(() => {\r\n        return LogicElementUtil.getInnerNode(node, 'inhfld-mng') != null;\r\n    }, [node]);\r\n\r\n    /** 引用するロジックリスト */\r\n    const logicList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return inheritMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    /** 同階層の既存のインヘリットIDを取得（重複チェックに使用） */\r\n    const idList = useMemo(() => {\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    const initConnectorNode = (param: LogicUtil.NodeInheritConnector) => {\r\n        param.mngs = [];\r\n        node.children = [];\r\n        param.mngs.push({\r\n            type: 'extend-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        param.mngs.push({\r\n            type: 'send-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        if (isCreate) {\r\n            param.mngs.push({\r\n                type: 'inherit-logic',\r\n                data: {\r\n                    mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                } as LogicUtil.NodeInheritItem\r\n            });\r\n        }\r\n        wrap.data = param;\r\n\r\n        param.mngs.forEach(mng => {\r\n            const newNode = TreeUtil.createNode(mng, node);\r\n            const data = (newNode.data as LogicUtil.WrapElement);\r\n            switch (data.type) {\r\n                case 'inherit-logic': {\r\n                    LogicElementUtil.syncTreeElementFromWrap(newNode);\r\n                } break;\r\n                case 'send-mng': {\r\n                    const connector = (newNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.method === 'depend') {\r\n                        console.log('initSendParams');\r\n                        initSendParams(newNode, rootData);\r\n                    }\r\n                } break;\r\n            }\r\n            node.children.push(newNode);\r\n        });\r\n    }\r\n\r\n    const getSendParamList = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement): string[] => {\r\n        const connector = (sendNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = inheritMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement) => {\r\n        const sendParamList = getSendParamList(sendNode, rootData);\r\n        // console.log(sendParamList);\r\n        const wrap = sendNode.data as LogicUtil.WrapElement;\r\n        const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n                sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'inhfld-mng');\r\n        if(fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n\r\n    const isDisable = wrap.data == null ? false : (wrap.data as LogicUtil.NodeInheritConnector).disable ?? false;\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[identify, method, depend]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeInheritConnector = {\r\n                    method: method.value as LogicUtil.InheritMethod,\r\n                    depend: depend.value,\r\n                    id: identify.value,\r\n                    mngs: []\r\n                };\r\n                initConnectorNode(param);\r\n                invalidate();\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                const isChange = param.method !== method.value || param.depend !== depend.value;\r\n                param.method = method.value as LogicUtil.InheritMethod;\r\n                param.depend = depend.value;\r\n                param.id = identify.value;\r\n                wrap.data = param;\r\n\r\n                if (isChange) {\r\n                    initConnectorNode(param);\r\n                }\r\n                invalidate();\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={method}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                // createが選択されたらdependを空にする\r\n                                if (checkable.value === 'create') {\r\n                                    setDepend({ ...depend, value: '' });\r\n                                }\r\n                                setMethod(checkable);\r\n                            }}\r\n                            list={LogicUtil.ConnectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Depend\"\r\n                    isEnable={method.value === 'depend'}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={depend}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setDepend}\r\n                            list={logicList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            dependency={[method]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => {\r\n                                        return method.value !== 'depend' || ValidateUtil.checkRequired(value);\r\n                                    },\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Identify\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={identify}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setIdentify}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !idList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                0,\r\n                                {\r\n                                    type: 'inhfld-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Disable'}\r\n                        width={300}\r\n                        isUse={isDisable}\r\n                        isEnable={!isModify}\r\n                        callback={() => {\r\n                            const data = (wrap.data as LogicUtil.NodeInheritConnector);\r\n                            if (isDisable) {\r\n                                data.disable = undefined;\r\n                            } else {\r\n                                data.disable = true;\r\n                            }\r\n                            invalidate();\r\n                        }}\r\n                    />}\r\n                />\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'inherit', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Edit local',\r\n                            isEnable: !isModify && !isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Create a clone from the depended inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                                                const logicList = logicMng.defs.map(def => def.data as LogicUtil.NodeLogicItem);\r\n                                                // ディペンドしているロジックを取得\r\n                                                const dependLogic = logicList.find(inherit => inherit.name === depend.value);\r\n                                                if (dependLogic != undefined) {\r\n                                                    const cloneLogic = JSON.parse(JSON.stringify(dependLogic)) as LogicUtil.NodeLogicItem;\r\n                                                    const connectItem: LogicUtil.NodeInheritItem = {\r\n                                                        mngs: cloneLogic.mngs\r\n                                                    };\r\n                                                    const newWrap: LogicUtil.WrapElement = {\r\n                                                        type: 'inherit-logic',\r\n                                                        data: connectItem\r\n                                                    };\r\n                                                    const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                                                    // 子要素の展開\r\n                                                    newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                    const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                    param.method = 'create';\r\n                                                    param.depend = '';\r\n                                                    mappingForm();\r\n                                                }\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Detach global',\r\n                            isEnable: !isModify && isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Detach a clone from the this inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                let rootNode = node;\r\n                                                while (rootNode.parent != null) rootNode = rootNode.parent;\r\n                                                const inheritNode = node.children.find(el => (el.data as LogicUtil.WrapElement).type === 'inherit-logic');\r\n                                                const logicMngNode = rootNode.children.find(el => (el.data as LogicUtil.WrapElement).type === 'logic-mng');\r\n                                                if (logicMngNode == undefined || inheritNode == undefined) return;\r\n                                                const inherit = (inheritNode.data as LogicUtil.WrapElement).data;\r\n                                                const clone = JSON.parse(JSON.stringify((inherit))) as LogicUtil.NodeInheritItem;\r\n                                                // ロジック名（自動命名）を取得\r\n                                                const defaultName = LogicElementUtil.getNumberingOnPrefixName('clone_inherit_', logicMngNode);\r\n                                                const logicItem: LogicUtil.NodeLogicItem = {\r\n                                                    ...clone,\r\n                                                    name: defaultName\r\n                                                };\r\n                                                const newWrap: LogicUtil.WrapElement = {\r\n                                                    type: 'logic-item',\r\n                                                    data: logicItem\r\n                                                };\r\n\r\n                                                // ロジックマネージャに追加\r\n                                                const newNode = LogicElementUtil.addChild(newWrap, logicMngNode);\r\n                                                // 子要素の展開\r\n                                                newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                // 自身（コネクタ）からインヘリット要素を削除\r\n                                                LogicElementUtil.removeChild(node, 2, 1);\r\n\r\n                                                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                param.method = 'depend';\r\n                                                param.depend = logicItem.name;\r\n                                                mappingForm();\r\n\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnector;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ParamUtil from \"../util/paramUtil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\n\r\nnamespace SendTemplateDialog {\r\n\r\n    const FRAME_WIDTH = 450;\r\n    const FRAME_HEIGHT = 160;\r\n    const COMPONENT_WIDTH = 296;\r\n\r\n    export const ConnectParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, input property name!';\r\n\r\n        /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n        const paramNameList = useMemo(() => {\r\n            const owner = (LogicElementUtil.getInnerWrap(props.node.parent?.data as LogicUtil.WrapElement, 'inherit-logic') as LogicUtil.WrapElement).data;\r\n            return LogicElementUtil.getParamNameList(owner);\r\n        }, [props.node]);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    // Sendにパラメータを追加\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: xName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }] }\r\n                    ), props.node);\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: yName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }] }\r\n                    ), props.node);\r\n\r\n                    // 派生ロジックに引数を追加\r\n                    const logicNode = LogicElementUtil.getInnerNode(props.node.parent as TreeUtil.ElementNode, 'inherit-logic') as TreeUtil.ElementNode;\r\n                    const hasArgNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') != undefined;\r\n                    if (!hasArgNode) {\r\n                        LogicElementUtil.insertChild({\r\n                            type: 'argument-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeArgumentManager\r\n                        }, logicNode, 0);\r\n                    }\r\n                    const argNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') as TreeUtil.ElementNode;\r\n\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: xName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: yName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n\r\n                    // 派生ロジックの座標に引数を設定\r\n                    const behaviorNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'behavior-mng') as TreeUtil.ElementNode;\r\n                    const setParamValue = (prpName: string, argName: string) => {\r\n                        const params = behaviorNode.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                        const targetParam = params.find(param => param.name === prpName) as LogicUtil.NodeParamItem;\r\n                        targetParam.formulaItems = ['var'];\r\n                        targetParam.values = [{ type: 'argument', value: argName }];\r\n                    }\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_X, xName.value);\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_Y, yName.value);\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (yName.value !== '') list.push(yName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[yName]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (xName.value !== '') list.push(xName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[xName]}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n\r\n    export const SetParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, select property name!';\r\n\r\n        const list = useMemo(() => {\r\n            return props.node.children.map(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                return (wrap.data as LogicUtil.NodeParamItem).name;\r\n            });\r\n        }, []);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    const paramList = props.node.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                    const xParam = paramList.find(param => param.name === xName.value) as LogicUtil.NodeParamItem;\r\n                    const yParam = paramList.find(param => param.name === yName.value) as LogicUtil.NodeParamItem;\r\n                    xParam.formulaItems = ['var'];\r\n                    xParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }];\r\n                    yParam.formulaItems = ['var'];\r\n                    yParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }];\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== yName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== xName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SendTemplateDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #d0e7e718;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSendManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const isDepend = () => {\r\n        const conn = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        return conn.method === 'depend';\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"template\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Connect Position',\r\n                            isEnable: !isDepend(),\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.ConnectParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Set Position',\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.SetParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSendManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFieldMng = () => {\r\n    const { invalidate, node, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Field',\r\n                        callback: () => {\r\n                            // const newWrap: FactoryUtil.WrapNode = FactoryUtil.createParamWrap('field-item',\r\n                            //     { name: '', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                            // );\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'field-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFieldMng;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorExtendMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [hasLoopParam, hasInvokeParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name as ParamUtil.ExtendParam;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.ExtendParamType.LOOP_COUNT),\r\n            list.includes(ParamUtil.ExtendParamType.INVOKE)\r\n        ]\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Loop'}\r\n                            width={300}\r\n                            isUse={hasLoopParam}\r\n                            callback={() => {\r\n                                toggleElement(hasLoopParam, 0, {\r\n                                    type: 'param-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.LOOP_COUNT,\r\n                                        formulaItems: ['var'],\r\n                                        values: [{ type: 'direct', value: '1' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Invoke'}\r\n                            width={300}\r\n                            isUse={hasInvokeParam}\r\n                            callback={() => {\r\n                                toggleElement(hasInvokeParam, hasLoopParam ? 1 : 0, {\r\n                                    type: 'condition-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.INVOKE,\r\n                                        formulaItems: ['var', '=', 'var'],\r\n                                        values: [{ type: 'direct', value: '0' }, { type: 'direct', value: '0' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorExtendMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\n\r\nconst EditorSeedItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [entry, setEntry] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [permit, setPermit] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setEntry({ ...entry, value: param.entry });\r\n        setPermit({ ...permit, value: param.permit })\r\n    };\r\n\r\n    /** 既存のシード名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    // 引用するロジックリスト\r\n    const logicNameList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const logicMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return logicMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    const getSendParamList = (): string[] => {\r\n        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n        const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = logicMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = () => {\r\n        const sendParamList = getSendParamList();\r\n        const sendNode = LogicElementUtil.getInnerNode(node, 'interface-mng', 'seedsend-mng') as TreeUtil.ElementNode;\r\n        const params = ((sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('seedsend-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n            }\r\n        });\r\n        LogicElementUtil.syncTreeElementFromWrap(sendNode);\r\n    }\r\n\r\n    const getDefaultSeedMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'interface-mng',\r\n                data: {\r\n                    mngs: [\r\n                        {\r\n                            type: 'seedarg-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeSeedArgManager\r\n                        },\r\n                        {\r\n                            type: 'seedsend-mng',\r\n                            data: {\r\n                                params: []\r\n                            } as LogicUtil.NodeSeedSendManager\r\n                        },\r\n                    ]\r\n                } as LogicUtil.NodeInterfaceMng\r\n            },\r\n            {\r\n                type: 'thumbnail-mng',\r\n                data: {\r\n                    items: []\r\n                } as LogicUtil.NodeThumnailManager\r\n            },\r\n            {\r\n                type: 'sample-mng',\r\n                data: {\r\n                    samples: []\r\n                } as LogicUtil.NodeSampleManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, entry, permit]}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSeedItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    entry: entry.value,\r\n                    permit: permit.value as LogicUtil.PermitType,\r\n                    mngs: getDefaultSeedMngs()\r\n                };\r\n                wrap.data = element;\r\n\r\n                LogicElementUtil.syncTreeElementFromWrap(node);\r\n                // 参照しているロジックの引数をSendに設定\r\n                initSendParams();\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedItem;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.permit = permit.value as LogicUtil.PermitType;\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 24),\r\n                                    errorType: \"length\"\r\n                                },\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Entry\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={entry}\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setEntry}\r\n                            list={logicNameList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Permit\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={permit}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setPermit}\r\n                            list={LogicUtil.PermitTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'seed', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedItem;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext as LogicTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorThumbnailMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(LogicTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeThumnailManager;\r\n\r\n    const hasSample = useMemo(() => {\r\n        const sampleMngNode = LogicElementUtil.getInnerNode(node.parent as TreeUtil.ElementNode, 'sample-mng') as TreeUtil.ElementNode;\r\n        return sampleMngNode.children.length as number > 0;\r\n    }, []);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={hasSample}\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Thumbnail',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'thumbnail-item',\r\n                                data: null\r\n                            }\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport Particle from \"../../../../graphic/particle\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst WND_SIZE = 100;\r\n\r\nconst EditorThumbnailItem = () => {\r\n    const { rootData, node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n    const data = wrap.data as LogicUtil.NodeThumbnailItem;\r\n\r\n\r\n    const seedWrap = node.parent?.parent?.data as LogicUtil.WrapElement;\r\n    const sampleMng = LogicElementUtil.getInnerWrap(seedWrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n    const samples = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [urls, setUrls] = useState<string[]>([]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n        setName({ ...name, value: param.name });\r\n        setFrame({ ...frame, value: param.frame.toString() });\r\n    };\r\n    \r\n    /** 既存のサムネイル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n            setTimeout(() => {\r\n                const urls: string[] = [];\r\n                samples.forEach((sample, i) => {\r\n                    urls.push(getThumbnailURL(data.frame, i));\r\n                });\r\n                setUrls(urls);\r\n            }, 1);\r\n        }\r\n    }, [node]);\r\n\r\n    const getSeedValueMap = (sampleNo: number): PreviewUtil.ValueMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ValueMap[] = argMng.args.map((arg, i) => {\r\n            const name = (arg.data as LogicUtil.NodeSeedArgItem).name;\r\n            const value = samples[sampleNo].values[i];\r\n            return { name, value }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams.map(item => {\r\n            return { name: item.name, value: PreviewUtil.convertParamsToValue(item.name, sendParams, argMap) ?? 0 }\r\n        });\r\n    }\r\n\r\n    const getThumbnailURL = (targetFrame: number, sampleNo: number) => {\r\n        console.log('create start!');\r\n        const owner: Particle.Instance[] = [];\r\n\r\n        let frameCnt = 0;\r\n        do {\r\n            if (frameCnt === 0) {\r\n                const seed = (node.parent?.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n                const logicManager = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                const logic = logicManager.defs.find(logic => (logic.data as LogicUtil.NodeLogicItem).name === seed.entry);\r\n                if (logic == undefined) break;\r\n\r\n                const sendValueMapList = getSeedValueMap(sampleNo);\r\n                owner.push(new Particle.Instance(\r\n                    PreviewUtil.buildLogicProps(owner, logic.data, rootData, sendValueMapList))\r\n                );\r\n            }\r\n\r\n            if (frameCnt === targetFrame) {\r\n                return CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                });\r\n            }\r\n\r\n            // パーティクルの更新\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                particle.update();\r\n            }\r\n\r\n            // 死滅したパーティクルの削除\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frameCnt > 500 || owner.length > 3000) break;\r\n            frameCnt++;\r\n        } while (owner.length > 0);\r\n        return '';\r\n    }\r\n\r\n    const pictureJsxList = useMemo(() => {\r\n        const sampleMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n        return sampleMng.samples.map((wrap, i) => {\r\n            const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n\r\n            const url = urls[i];\r\n            const imgJsx = url == undefined ? <></> : <_IMG src={urls[i]} />;\r\n            return (\r\n                <_SampleDiv key={i}>-\r\n                    <_SampleName>{sample.name}</_SampleName>\r\n                    <_CanvasDiv>\r\n                        {imgJsx}\r\n                    </_CanvasDiv>\r\n                </_SampleDiv>\r\n            );\r\n        });\r\n    }, [node, urls]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, frame]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeThumbnailItem = {\r\n                    name: name.value,\r\n                    frame: Number(frame.value),\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n                param.name = name.value;\r\n                param.frame = Number(frame.value);\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"preview\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {pictureJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailItem;\r\n\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport DrawUtil from \"../../../graphic/drawUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\n\r\nnamespace LogicFormUtil {\r\n\r\n    export const buildPreviewForms = (\r\n        isReadOnly: boolean,\r\n        argumentList: LogicUtil.NodeSeedArgItem[],\r\n        formgrpList: LogicUtil.NodeFromGrpItem[],\r\n        formList: FormUtil.CheckableValue[],\r\n        setFormList: ((formList: FormUtil.CheckableValue[]) => void)\r\n    ): JSX.Element[] => {\r\n        const list: JSX.Element[] = [];\r\n        const usedGrps: string[] = [];\r\n        formList.forEach((form, i) => {\r\n            const argument = argumentList[i];\r\n            const formgrp = formgrpList.find(grp => grp.args.includes(argument.name));\r\n            if (formgrp != undefined) {\r\n                // 設定済みであれば追加しない\r\n                if (usedGrps.includes(formgrp.name)) return 1;\r\n                // 利用済みリストに追加\r\n                usedGrps.push(formgrp.name);\r\n                const targetForms: number[] = [];\r\n                argumentList.forEach((arg, j) => {\r\n                    if (formgrp.args.includes(arg.name)) {\r\n                        targetForms.push(j);\r\n                    }\r\n                });\r\n                const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                    r: Number(formList[targetForms[0]].value),\r\n                    g: Number(formList[targetForms[1]].value),\r\n                    b: Number(formList[targetForms[2]].value),\r\n                    a: 255\r\n                }).substring(0, 7);\r\n                // console.log(colorCode);\r\n                list.push(<div key={i}>\r\n                    <FormUtil.Record\r\n                        jsx={\r\n                            <_Message>{formgrp.name}: <_Type>color </_Type><_Range>({0} ～ {255} respectively)</_Range></_Message>\r\n                        }\r\n                    />\r\n                    <FormUtil.Record\r\n                        jsx={<>\r\n                            {targetForms.map((formIndex, j) => {\r\n                                return (\r\n                                    <FormUtil.TextField\r\n                                        key={formIndex}\r\n                                        width={72}\r\n                                        marginLeft={j === 0 ? 5 : 4}\r\n                                        isNumber\r\n                                        isReadOnly={isReadOnly}\r\n                                        checkable={formList[formIndex]}\r\n                                        setCheckable={() => {\r\n                                            setFormList(formList.slice());\r\n                                        }}\r\n                                        validates={[\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            },\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkNumberRange(value, argument.min, argument.max),\r\n                                                errorType: 'value'\r\n                                            }\r\n                                        ]}\r\n                                    />\r\n                                );\r\n                            })}\r\n                            <_Color type=\"color\" value={colorCode}\r\n                                disabled={isReadOnly}\r\n                                onChange={(value) => {\r\n                                    const rgba = DrawUtil.convertRgbaFromColorCode(value.target.value + 'ff');\r\n                                    if (rgba != null) {\r\n                                        formList[targetForms[0]].value = rgba.r.toString();\r\n                                        formList[targetForms[1]].value = rgba.g.toString();\r\n                                        formList[targetForms[2]].value = rgba.b.toString();\r\n                                    }\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                            />\r\n                        </>}\r\n                    />\r\n                </div>);\r\n            } else {\r\n                let labelName = argument.name;\r\n                if(argument.disp != undefined) labelName = argument.disp;\r\n                list.push(<div key={i}>\r\n                    <FormUtil.Record\r\n                        jsx={\r\n                            <_Message>{labelName}: <_Type>number </_Type><_Range>({argument.min} ～ {argument.max})</_Range></_Message>\r\n                        }\r\n                    />\r\n                    <FormUtil.Record\r\n                        jsx={<>\r\n                            <FormUtil.TextField\r\n                                width={142}\r\n                                marginLeft={6}\r\n                                isNumber\r\n                                isReadOnly={isReadOnly}\r\n                                step={argument.step}\r\n                                checkable={form}\r\n                                setCheckable={() => {\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, argument.min, argument.max),\r\n                                        errorType: 'value'\r\n                                    }\r\n                                ]}\r\n                            />\r\n                            <_Tsumami type=\"range\" value={Number(form.value)} min={argument.min} max={argument.max} step={argument.step}\r\n                                disabled={isReadOnly}\r\n                                onChange={(value) => {\r\n                                    formList[i] = { ...form, value: value.target.value };\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                            />\r\n                        </>}\r\n                    />\r\n                </div>);\r\n            }\r\n        });\r\n        return list;\r\n    }\r\n}\r\n\r\nexport default LogicFormUtil;\r\n\r\n\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n`;\r\n\r\nconst _Type = styled.span`\r\n    color: #c10000;\r\n    font-weight: 600;\r\n`;\r\nconst _Range = styled.span`\r\n    color: #423e84fb;\r\n`;\r\n\r\nconst _Tsumami = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 11px 0 0 6px;\r\n    width: calc(100% - 160px);\r\n`;\r\n\r\nconst _Color = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 3px 0 0 6px;\r\n    width: 100px;\r\n    height: 34px;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../util/logicFormUtil\";\r\n\r\nconst EditorSampleItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [paramForms, setParamForms] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSampleItem;\r\n        setName({ ...name, value: param.name });\r\n        setParamForms(param.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のサンプル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const [seedargList, formgrpList]: [LogicUtil.NodeSeedArgItem[], LogicUtil.NodeFromGrpItem[]] = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'seedarg-mng');\r\n        const argInfoList = (argMng.data as LogicUtil.NodeSeedArgManager).\r\n            args.map(arg => {\r\n                return arg.data as LogicUtil.NodeSeedArgItem;\r\n            });\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        const formgrpMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'formgrp-mng');\r\n        if (formgrpMng != null) {\r\n            formgrpList = (formgrpMng.data as LogicUtil.NodeFromgrpManager).\r\n                defines.map(arg => {\r\n                    return arg.data as LogicUtil.NodeFromGrpItem;\r\n                });\r\n        }\r\n        return [argInfoList, formgrpList];\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setParamForms(seedargList.map(arg => {\r\n                let defval = ' ';\r\n                if (arg.defval != undefined) defval = arg.defval.toString();\r\n                return { value: defval, errors: [] };\r\n            }));\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const formList = useMemo(() => {\r\n        return LogicFormUtil.buildPreviewForms(\r\n            !isModify, seedargList, formgrpList, paramForms, setParamForms\r\n        );\r\n        // return paramForms.map((paramForm, i) => {\r\n        //     const arg = argInfoList[i];\r\n        //     return <FormUtil.FormRecord key={i}\r\n        //         titleLabel={arg.name}\r\n        //         jsx={\r\n        //             <FormUtil.TextField\r\n        //                 width={150}\r\n        //                 isReadOnly={!isModify}\r\n        //                 checkable={paramForm}\r\n        //                 setCheckable={(checkable) => {\r\n        //                     paramForms[i] = checkable;\r\n        //                     setParamForms(paramForms.slice());\r\n        //                 }}\r\n        //                 isNumber\r\n        //                 step={arg.step}\r\n        //                 validates={[\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkRequired(value),\r\n        //                         errorType: \"required\"\r\n        //                     },\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkNumberRange(value, arg.min, arg.max),\r\n        //                         errorType: \"value\"\r\n        //                     },\r\n        //                 ]}\r\n        //             />\r\n        //         }\r\n        //     />\r\n        // });\r\n    }, [paramForms, isModify]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name].concat(paramForms)}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSampleItem = {\r\n                    name: name.value,\r\n                    values: []\r\n                };\r\n                paramForms.forEach((form, i) => {\r\n                    element.values[i] = Number(form.value);\r\n                });\r\n                wrap.data = element;\r\n\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSampleItem;\r\n                param.name = name.value;\r\n                paramForms.forEach((form, i) => {\r\n                    param.values[i] = Number(form.value);\r\n                });\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {formList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'preset', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSampleMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Preset',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'sample-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSampleManager).samples.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleMng;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInterfaceManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const argMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedarg-mng');\r\n    const sendMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedsend-mng');\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(node.parent as TreeUtil.ElementNode, 'sample-mng');\r\n\r\n    const [hasGroupNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        return [\r\n            list.includes('formgrp-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const hasArgument = (): boolean => {\r\n        return argMngNode.children.length > 0;\r\n    }\r\n\r\n    /**\r\n     * グループ要素の有無を判定\r\n     */\r\n    const hasGroup = () => {\r\n        const groupMngNode = LogicElementUtil.getInnerNode(node, 'formgrp-mng');\r\n        if (groupMngNode == null) return false;\r\n        return groupMngNode.children.length > 0;\r\n    }\r\n\r\n    const execute = () => {\r\n        // const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n        // 既存の引数を削除\r\n        if (hasArgument()) {\r\n\r\n            LogicElementUtil.removeChildAll(argMngNode);\r\n            LogicElementUtil.removeChildAll(sampleMngNode);\r\n        }\r\n\r\n        sendMngNode.children.forEach(child => {\r\n            const send = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem;\r\n            send.formulaItems = ['var'];\r\n            send.values = [{ type: 'argument', value: send.name }];\r\n\r\n            const newArgData: LogicUtil.NodeSeedArgItem = {\r\n                name: send.name,\r\n                step: 1,\r\n                min: -9999,\r\n                max: 9999,\r\n                defval: 0\r\n            }\r\n            const newArgWrap: LogicUtil.WrapElement = {\r\n                type: 'seedarg-item',\r\n                data: newArgData\r\n            };\r\n            const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n            argMng.args.push(newArgWrap);\r\n            argMngNode.children.push(TreeUtil.createNode(newArgWrap, argMngNode));\r\n            invalidate();\r\n        });\r\n    }\r\n\r\n    const initDefaultSetting = () => {\r\n        if (!hasArgument()) {\r\n            execute();\r\n        } else {\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Are you sure you want to delete the existing element?\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        callback: () => {\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Execute',\r\n                        callback: () => {\r\n                            execute();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            setStore({ ...store });\r\n        }\r\n        invalidate();\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Group'}\r\n                        width={300}\r\n                        isUse={hasGroupNode}\r\n                        isEnable={!hasGroup()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasGroupNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'formgrp-mng',\r\n                                    data: {\r\n                                        defines: []\r\n                                    } as LogicUtil.NodeFromgrpManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Initialize Params',\r\n                        callback: initDefaultSetting\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInterfaceManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedArgMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seedarg-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedArgManager).args.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedArgMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorSeedArgItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [min, setMin] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [max, setMax] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [step, setStep] = useState<FormUtil.CheckableValue>({ value: '1', errors: [] });\r\n    const [defval, setDefval] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    const seedNode = node.parent?.parent?.parent as TreeUtil.ElementNode;\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setMin({ ...min, value: param.min.toString() });\r\n        setMax({ ...max, value: param.max.toString() });\r\n        setStep({ ...step, value: param.step.toString() });\r\n        setDefval({ ...defval, value: param.defval == undefined ? '' : param.defval.toString() });\r\n        // setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, min, max, step, defval]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeSeedArgItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    min: Number(min.value),\r\n                    max: Number(max.value),\r\n                    step: Number(step.value),\r\n                    defval: defval.value === '' ? undefined : Number(defval.value),\r\n                    // valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                wrap.data = param;\r\n                syncArgumentAdd(seedNode as TreeUtil.ElementNode, param);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.min = Number(min.value);\r\n                param.max = Number(max.value);\r\n                param.step = Number(step.value);\r\n                param.defval = defval.value === '' ? undefined : Number(defval.value);\r\n                // param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(seedNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 16),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Min\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={min}\r\n                            setCheckable={setMin}\r\n                            isNumber\r\n                            dependency={[max]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) < Number(max.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Max\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={max}\r\n                            setCheckable={setMax}\r\n                            isNumber\r\n                            dependency={[min]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) > Number(min.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Step\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={step}\r\n                            setCheckable={setStep}\r\n                            isNumber\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Default\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={defval}\r\n                            setCheckable={setDefval}\r\n                            isNumber\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'color' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                /> */}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'argument', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                                const refers = getArgumentRefers(seedNode, param.name);\r\n                                if (refers.length === 0) {\r\n                                    const curIndex = LogicElementUtil.getCurrentIndex(node);\r\n                                    if (curIndex === -1) throw new Error('[curIndex] is -1.');\r\n                                    syncArgumentDel(seedNode, curIndex);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtonsCallback(node, invalidate, (index, isUpper) => {\r\n                    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n                    const offset = isUpper ? -1 : 1;\r\n                    sampleMng.samples.forEach(wrap => {\r\n                        const values = (wrap.data as LogicUtil.NodeSampleItem).values;\r\n                        const swapNode = values[index];\r\n                        values[index] = values[index + offset];\r\n                        values[index + offset] = swapNode;\r\n                    });\r\n                })}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (seedNode: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    const sendMng = sendMngWrap.data as LogicUtil.NodeSeedSendManager;\r\n    sendMng.params.forEach(wrap => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        param.values.forEach(varItem => {\r\n            if (varItem.type === 'argument' && varItem.value === argName) {\r\n                refers.push(param.name);\r\n            }\r\n        });\r\n    });\r\n    return refers;\r\n}\r\n\r\nexport default EditorSeedArgItem;\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param seedNode Seedノード\r\n*/\r\nconst syncArgumentName = (seedNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    syncFormula((sendMngWrap.data as LogicUtil.NodeParamManager).params);\r\n\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Sample管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentAdd = (seedNode: TreeUtil.ElementNode, arg: LogicUtil.NodeSeedArgItem) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.push(arg.defval ?? arg.min);\r\n    });\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentDel = (seedNode: TreeUtil.ElementNode, delIndex: number) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.splice(delIndex, 1);\r\n    });\r\n}","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedSendMng = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const getSendParamList = (): string[] => {\r\n    //     const connector = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n    //     const isCreate = connector.method === 'create';\r\n    //     let targetWrap: LogicUtil.WrapElement | null = null;\r\n    //     if (!isCreate) {\r\n    //         const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n    //         const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n    //         const dependItem = inheritMng.defs.find(wrap => {\r\n    //             return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n    //         });\r\n    //         if (dependItem != undefined) targetWrap = dependItem;\r\n    //     } else {\r\n    //         targetWrap = (node.parent?.children[node.parent?.children.length - 1].data as LogicUtil.WrapElement)\r\n    //     }\r\n    //     if (targetWrap != null) {\r\n    //         const argWrap = (targetWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n    //         if (argWrap.type === 'argument-mng') {\r\n    //             return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n    //                 return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n    //             });\r\n    //         }\r\n    //     }\r\n    //     return [];\r\n    // }\r\n\r\n    // const update = () => {\r\n    //     const sendParamList = getSendParamList();\r\n    //     const curSize = node.children.length;\r\n    //     const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n    //     // 不要なパラメータを削除\r\n    //     for (let i = curSize - 1; i >= 0; i--) {\r\n    //         const name = (params[i].data as LogicUtil.NodeParamItem).name;\r\n    //         if (!sendParamList.includes(name)) {\r\n    //             node.children.splice(i, 1);\r\n    //             params.splice(i, 1);\r\n    //         }\r\n    //     }\r\n    //     // 必要な存在しないパラメータを追加\r\n    //     const curParamList = params.map(param => {\r\n    //         return (param.data as LogicUtil.NodeParamItem).name;\r\n    //     });\r\n    //     sendParamList.forEach(param => {\r\n    //         if (!curParamList.includes(param)) {\r\n    //             const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n    //                 { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n    //             );\r\n    //             params.push(paramWrap);\r\n    //             node.children.push(TreeUtil.createNode(paramWrap, node));\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    return (<>\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedSendMng;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorFormgrpItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [groupMethod, setGroupMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [targetList, setTargetList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n        setName({ ...name, value: param.name });\r\n        setGroupMethod({ ...groupMethod, value: param.method });\r\n        setTargetList(param.args.map(arg => {\r\n            return { value: arg, errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const seedargs = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed(node.parent?.parent?.data as LogicUtil.WrapElement, 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        return argMng.args.map(wrap => (wrap.data as LogicUtil.NodeSeedArgItem).name);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, groupMethod].concat(targetList)}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeFromGrpItem = {\r\n                    name: name.value,\r\n                    method: groupMethod.value as LogicUtil.FromGrpMethod,\r\n                    args: targetList.map(form => form.value)\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n                param.name = name.value;\r\n                param.method = groupMethod.value as LogicUtil.FromGrpMethod;\r\n                param.args = targetList.map(form => form.value);\r\n                wrap.data = param;\r\n\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 24),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={groupMethod}\r\n                            setCheckable={(checkable) => {\r\n                                const type = checkable.value as LogicUtil.FromGrpMethod;\r\n                                if (type === 'color') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(3).fill({ value: '', errors: [] }));\r\n                                } else {\r\n                                    setTargetList([]);\r\n                                }\r\n                                setGroupMethod({...checkable});\r\n                            }}\r\n                            list={LogicUtil.FromGrpMedhods.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'list' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n                {targetList.map((target, i) => {\r\n                    let formName = 'Target_';\r\n                    if (groupMethod.value === 'color') {\r\n                        switch (i) {\r\n                            case 0: formName += 'R'; break;\r\n                            case 1: formName += 'G'; break;\r\n                            case 2: formName += 'B'; break;\r\n                        }\r\n                    } else {\r\n                        formName += `_${i}`;\r\n                    }\r\n                    return (\r\n                        <FormUtil.FormRecord\r\n                            key={i}\r\n                            titleLabel={formName}\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={target}\r\n                                    setCheckable={(checkable) => {\r\n                                        targetList[i] = checkable;\r\n                                        setTargetList(targetList.slice());\r\n                                    }}\r\n                                    list={seedargs.map(item => {\r\n                                        return { value: item, labelText: item }\r\n                                    })}\r\n                                    headBlank\r\n                                    width={250}\r\n                                    isReadOnly={!isModify}\r\n                                    validates={\r\n                                        [\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            },\r\n                                            {\r\n                                                checker: (value) => targetList.find((target, j) => i !== j && target.value === value) == undefined,\r\n                                                errorType: \"relation\"\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                    dependency={targetList}\r\n                                />\r\n                            }\r\n                        />\r\n                    );\r\n                })}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: removeSelf\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFormgrpMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Group',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'formgrp-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeFromgrpManager).defines.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpMng;","import styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactDetArgumentMng from \"../detail/logic/editorArgumentMng\";\r\nimport EditorArgumentItem from \"../detail/logic/editorArgumentItem\";\r\nimport FactDetSeedMng from \"../detail/seed/editorSeedMng\";\r\nimport EditorLogicMng from \"../detail/logic/editorLogicMng\";\r\nimport EditorLogicItem from \"../detail/logic/editorLogicItem\";\r\nimport EditorParamItem from \"../detail/logic/editorParamItem\";\r\nimport FactDetBehiviorMng from \"../detail/logic/editorBehiviorMng\";\r\nimport EditorVisualMng from \"../detail/logic/editorVisualMng\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport EditorInheritConnMng from \"../detail/logic/editorInheritConnMng\";\r\nimport EditorInheritConnector from \"../detail/logic/editorInheritConnector\";\r\nimport EditorSendManager from \"../detail/logic/editorSendManager\";\r\nimport EditorFieldMng from \"../detail/logic/editorFieldMng\";\r\nimport EditorExtendMng from \"../detail/logic/editorExtendMng\";\r\nimport EditorSeedItem from \"../detail/seed/editorSeedItem\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"./logicElementUtil\";\r\nimport EditorThumbnailMng from \"../detail/seed/editorThumbnailMng\";\r\nimport EditorThumbnailItem from \"../detail/seed/editorThumbnailItem\";\r\nimport EditorSampleItem from \"../detail/seed/editorSampleItem\";\r\nimport EditorSampleMng from \"../detail/seed/editorSampleMng\";\r\nimport EditorInterfaceManager from \"../detail/seed/editorInterfaceManager\";\r\nimport EditorSeedArgMng from \"../detail/seed/editorSeedArgMng\";\r\nimport EditorSeedArgItem from \"../detail/seed/editorSeedArgItem\";\r\nimport EditorSeedSendMng from \"../detail/seed/editorSeedSendMng\";\r\nimport EditorFormgrpItem from \"../detail/seed/editorFormgrpItem\";\r\nimport EditorFormgrpMng from \"../detail/seed/editorFormgrpMng\";\r\n\r\nnamespace LogicUtil {\r\n\r\n    export type DetailArgs = {\r\n        rootData: LogicUtil.WrapElement;\r\n        node: TreeUtil.ElementNode;\r\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\r\n        invalidate: () => void;\r\n        isModify: boolean;\r\n        setModify: (isModify: boolean) => void;\r\n        // setRootData: React.Dispatch<React.SetStateAction<WrapElement>>;\r\n        setRootData: (rootData: WrapElement) => void;\r\n        removeSelf: () => void;\r\n    }\r\n\r\n    /**\r\n     * 変数名チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkFieldName = (str: string) => {\r\n        // 1文字目が数値でないこと\r\n        const isNoHeadNumber = !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].\r\n            includes(str.substring(0, 1));\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyz_';\r\n        return isNoHeadNumber && ValidateUtil.checkIncludesChars(str, list);\r\n    }\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'seed-mng' |\r\n        'logic-mng' |\r\n        'seed-item' |\r\n        'logic-item' |\r\n        'argument-mng' |\r\n        'argument-item' |\r\n        'field-mng' |\r\n        'field-item' |\r\n        'visual-mng' |\r\n        'behavior-mng' |\r\n        'inhfld-mng' |\r\n        'extend-mng' |\r\n        'inherit-mng' |\r\n        'connector' |\r\n        'inherit-logic' |\r\n        'send-mng' |\r\n        'send-item' |\r\n        'param-item' |\r\n        'condition-item' |\r\n        'interface-mng' |\r\n        'sample-mng' |\r\n        'sample-item' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-item' |\r\n        'seedarg-mng' |\r\n        'seedsend-mng' |\r\n        'seedarg-item' |\r\n        'seedsend-item' |\r\n        'formgrp-mng' |\r\n        'formgrp-item'\r\n        ;\r\n\r\n    export const ArgTypes = ['number', 'color'] as const;\r\n    export type ArgumentType = typeof ArgTypes[number];\r\n\r\n    export const ParamInputTypes = ['direct', 'constant', 'argument', 'self', 'field'] as const;\r\n    export type ParamInputType = typeof ParamInputTypes[number];\r\n\r\n    export const ConnectTypes = ['create', 'depend'] as const;\r\n    export type InheritMethod = typeof ConnectTypes[number];\r\n\r\n    export const PermitTypes = ['develop', 'private', 'release'] as const;\r\n    export type PermitType = typeof PermitTypes[number];\r\n\r\n    export const FromGrpMedhods = ['color', 'list'] as const;\r\n    export type FromGrpMethod = typeof FromGrpMedhods[number];\r\n\r\n    export type ParamProps = {\r\n        type: ParamInputType;\r\n        value: string;\r\n    }\r\n\r\n    export type WrapElement = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        seedMng: WrapElement;\r\n        logicMng: WrapElement;\r\n    }\r\n    export type NodeSeedManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicItem = {\r\n        name: string;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInterfaceMng = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInheritItem = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeParamManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeParamItem = {\r\n        name: string;\r\n        formulaItems: string[];\r\n        values: ParamProps[];\r\n    }\r\n\r\n    export type NodeArgumentItem = {\r\n        name: string;\r\n        valueType: ArgumentType;\r\n    }\r\n    export type NodeThumbnailItem = {\r\n        name: string;\r\n        frame: number;\r\n    }\r\n    export type NodeArgumentManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeFieldManager = {\r\n        fields: WrapElement[];\r\n    }\r\n    export type NodeSampleManager = {\r\n        samples: WrapElement[];\r\n    }\r\n    export type NodeSampleItem = {\r\n        name: string;\r\n        values: number[];\r\n    }\r\n\r\n    // export type NodeExtendManager = {\r\n    //     mngs: WrapElement[];\r\n    // }\r\n    export type NodeConnectManager = {\r\n        inherits: WrapElement[];\r\n    }\r\n    export type NodeInheritConnector = {\r\n        method: InheritMethod;\r\n        depend: string;\r\n        id: string;\r\n        disable?: boolean;\r\n        mngs: WrapElement[];\r\n    }\r\n\r\n    export type NodeSeedItem = {\r\n        name: string;\r\n        disp?: string;\r\n        entry: string;\r\n        permit: PermitType;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeThumnailManager = {\r\n        items: WrapElement[];\r\n    }\r\n    export type NodeSeedArgManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeSeedSendManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeSeedArgItem = {\r\n        name: string;\r\n        disp?: string;\r\n        min: number;\r\n        max: number;\r\n        step: number;\r\n        defval: number | undefined;\r\n    }\r\n    export type NodeFromgrpManager = {\r\n        defines: WrapElement[];\r\n    }\r\n    export type NodeFromGrpItem = {\r\n        name: string;\r\n        method: FromGrpMethod;\r\n        args: string[];\r\n    }\r\n\r\n    const COLOR_ROOT = '#a1a1a1';\r\n    const COLOR_METHOD = '#cca67b';\r\n    const COLOR_MNG = '#37a2bd';\r\n    const COLOR_LIST = '#b85f5f';\r\n    const COLOR_ITEM = '#ae628c';\r\n    const COLOR_DISABLE = '#685b79';\r\n    const COLOR_PARAM = '#8dae62';\r\n    const COLOR_FIELD = '#cec256';\r\n    const COLOR_THUMBNAIL = '#8283be';\r\n    const COLOR_CONDITION = '#56ce7e';\r\n\r\n    export const getNodeDisplayJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapElement;\r\n        switch (wrap.type) {\r\n            case 'root': {\r\n                return <_Category backgroundColor={COLOR_ROOT}>Library</_Category>;\r\n            }\r\n            case 'seed-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Seed Manager</_Category>;\r\n            }\r\n            case 'logic-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Logic Manager</_Category>;\r\n            }\r\n            case 'visual-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Visual</_Category>;\r\n            }\r\n            case 'extend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Extend</_Category>;\r\n            }\r\n            case 'seed-item': {\r\n                let detailJsx = <>...</>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedItem;\r\n                    detailJsx = <span>{data.name}&nbsp;<_Span color=\"#ffe89ba6\">entry:&nbsp;</_Span><_Field>{data.entry}</_Field></span>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Seed</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                    \r\n                </>;\r\n            }\r\n            case 'logic-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Logic</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-logic': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Logic</_Category>;\r\n            }\r\n            case 'argument-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'inhfld-mng':\r\n            case 'field-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Field Manager</_Category>;\r\n            }\r\n            case 'behavior-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Behavior</_Category>;\r\n            }\r\n            case 'inherit-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Inherit Manager</_Category>;\r\n            }\r\n            case 'connector': {\r\n                let detailJsx = <span>...</span>;\r\n                let color = COLOR_ITEM;\r\n                let isDisable = false;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeInheritConnector;\r\n                    detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}</_Span></span>;\r\n                    if (data.method === 'depend') {\r\n                        detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}:&nbsp;</_Span><_Field>{data.depend}</_Field></span>;\r\n                    }\r\n                    if (data.disable ?? false) {\r\n                        color = COLOR_DISABLE;\r\n                        isDisable = true;\r\n                    }\r\n                }\r\n                return (<>\r\n                    <_Category backgroundColor={color} isDisable={isDisable}>Inherit</_Category>\r\n                    {detailJsx == undefined ? <></> : <_EditableValue>{detailJsx}</_EditableValue>}\r\n                </>);\r\n            }\r\n            // パラメータ要素\r\n            case 'param-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_PARAM}>Param<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 条件要素\r\n            case 'condition-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_CONDITION}>Condition<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 変数要素\r\n            case 'field-item': {\r\n                let nameJsx = <span>...</span>;\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeParamItem;\r\n                    nameJsx = <_Detail>&nbsp;[{data.name}]</_Detail>;\r\n                    let result: JSX.Element[] = [];\r\n                    let varCnt = 0;\r\n                    data.formulaItems.forEach((formula, i) => {\r\n                        let str = <_Signature key={i}>{formula}</_Signature>;\r\n                        if (formula === 'var') {\r\n                            const v = data.values[varCnt];\r\n                            if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                            else str = <span key={i}>{v.value}</span>;\r\n                            varCnt++;\r\n                        }\r\n                        result.push(str);\r\n                    });\r\n                    detailJsx = <>{result}</>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Field{nameJsx}</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'argument-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeArgumentItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.valueType})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'send-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'thumbnail-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Thumnail Manager</_Category>;\r\n            }\r\n            case 'thumbnail-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeThumbnailItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.frame})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_THUMBNAIL}>Thumbnail</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'sample-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Preset Manager</_Category>;\r\n            }\r\n            case 'sample-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSampleItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Preset</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'interface-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Interface</_Category>;\r\n            }\r\n            case 'seedarg-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'seedarg-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedArgItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.min}～{data.max})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'seedsend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'formgrp-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Group Manager</_Category>;\r\n            }\r\n            case 'formgrp-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeFromGrpItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.method})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Group<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n        }\r\n        return <_Category backgroundColor={'#ffffff'}>XXXXX</_Category>;\r\n    }\r\n\r\n    export const getTypeName = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return '';\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return 'Root';\r\n            case 'seed-mng': return 'Seed Manager';\r\n            case 'logic-mng': return 'Logic Manager';\r\n            case 'seed-item': return 'Seed Item';\r\n            case 'logic-item': return 'Logic Item';\r\n            case 'argument-mng': return 'Argument Manager';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'Field Manager';\r\n            case 'field-item': return 'Field Item';\r\n            case 'visual-mng': return 'Visual Manager';\r\n            case 'seedarg-item':\r\n            case 'argument-item': return 'Argument Item';\r\n            case 'extend-mng': return 'Extend Manager';\r\n            case 'behavior-mng': return 'Behavior Manager';\r\n            case 'inherit-mng': return 'Inherit Manager';\r\n            case 'connector': return 'Inherit Connector';\r\n            case 'inherit-logic': return 'Inherit Logic';\r\n            case 'send-mng': return 'Send Manager';\r\n            case 'send-item': return 'Send Item';\r\n            case 'param-item': return 'Param Item';\r\n            case 'condition-item': return 'Condition Item';\r\n            case 'interface-mng': return 'Interface Manager';\r\n            case 'thumbnail-mng': return 'Thumbnail Manager';\r\n            case 'thumbnail-item': return 'Thumbnail Item';\r\n            case 'sample-mng': return 'Preset Manager';\r\n            case 'sample-item': return 'Preset Item';\r\n            case 'seedarg-mng': return 'Argument Manager';\r\n            case 'seedsend-mng': return 'Send';\r\n            case 'formgrp-mng': return 'Group Manager';\r\n            case 'formgrp-item': return 'Group Item';\r\n        }\r\n    }\r\n\r\n    export const getDetailComponent = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return <></>;\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return <></>;\r\n            case 'seed-mng': return <FactDetSeedMng />;\r\n            case 'logic-mng': return <EditorLogicMng />;\r\n            case 'seed-item': return <EditorSeedItem />;\r\n            case 'logic-item': return <EditorLogicItem />;\r\n            case 'argument-mng': return <FactDetArgumentMng />;\r\n            case 'argument-item': return <EditorArgumentItem />;\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return <EditorFieldMng />;\r\n            case 'visual-mng': return <EditorVisualMng />;\r\n            case 'extend-mng': return <EditorExtendMng />;\r\n            case 'behavior-mng': return <FactDetBehiviorMng />;\r\n            case 'inherit-mng': return <EditorInheritConnMng />;\r\n            case 'connector': return <EditorInheritConnector />;\r\n            case 'inherit-logic': return <EditorLogicItem />;\r\n            case 'send-mng': return <EditorSendManager />;\r\n            case 'field-item':\r\n            case 'param-item':\r\n            case 'condition-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': return <EditorParamItem />;\r\n            case 'interface-mng': return <EditorInterfaceManager />;\r\n            case 'sample-mng': return <EditorSampleMng />;\r\n            case 'sample-item': return <EditorSampleItem />;\r\n            case 'thumbnail-mng': return <EditorThumbnailMng />;\r\n            case 'thumbnail-item': return <EditorThumbnailItem />;\r\n            case 'seedarg-mng': return <EditorSeedArgMng />;\r\n            case 'seedarg-item': return <EditorSeedArgItem />;\r\n            case 'seedsend-mng': return <EditorSeedSendMng />;\r\n            case 'formgrp-item': return <EditorFormgrpItem />;\r\n            case 'formgrp-mng': return <EditorFormgrpMng />;\r\n        }\r\n    }\r\n\r\n    export const getChildrenElementNode = (node: TreeUtil.ElementNode): TreeUtil.ElementNode[] => {\r\n        const wrapNode = node.data as WrapElement;\r\n        const get = (listName: string) => {\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const elementNode = TreeUtil.createNode(wrap, node);\r\n                elementNode.children = getChildrenElementNode(elementNode);\r\n                return elementNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n\r\n    export const getChildrenDataNode = (wrapNode: LogicUtil.WrapElement): TreeUtil.DataNode[] => {\r\n        const get = (listName: string) => {\r\n\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const treeNode: TreeUtil.DataNode = {\r\n                    data: wrap,\r\n                    children: getChildrenDataNode(wrap)\r\n                };\r\n                return treeNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as LogicUtil.NodeRoot;\r\n                return [\r\n                    { data: node.seedMng, children: getChildrenDataNode(node.seedMng) },\r\n                    { data: node.logicMng, children: getChildrenDataNode(node.logicMng) }\r\n                ];\r\n            }\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n}\r\n\r\nexport default LogicUtil;\r\n\r\nconst _Category = styled.div<{\r\n    backgroundColor: string;\r\n    isDisable?: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: ${props => props.backgroundColor};\r\n    /* width: 100%; */\r\n    ${props => !(props.isDisable ?? false) ? '' : css`\r\n        text-decoration: line-through;\r\n        color: #00054dac;\r\n    `}\r\n    border-radius: 4px 0 0 4px;\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n    border: solid 1px #000000d2;\r\n`;\r\nconst _Detail = styled.span`\r\n    color: #000b69bd;\r\n`;\r\n\r\nconst _EditableValue = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #0c0c0c;\r\n    color: #ebebeb;\r\n    border-radius: 0 4px 4px 0;\r\n    /* width: 100%; */\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n`;\r\nconst _Span = styled.span<{\r\n    color: string;\r\n}>`\r\n    color: ${props => props.color};\r\n`;\r\nconst _ValueType = styled.span`\r\n    color: #fff9d6b9;\r\n`;\r\nconst _Signature = styled.span`\r\n    color: #ffffff78;\r\n`;\r\nconst _Field = styled.span`\r\n    color: #ff2d2d;\r\n`;","import { assert } from \"console\";\r\nimport { Store } from \"../../../../redux/store/store\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../dialog/confirmDialog\";\r\nimport Particle from \"../../../graphic/particle\";\r\nimport { LaunchDef } from \"../../launcher/launcherTab\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport ParamUtil from \"./paramUtil\";\r\n\r\n\r\nnamespace LogicElementUtil {\r\n\r\n    export const getInnerNode = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode | null => {\r\n\r\n        let cur: TreeUtil.ElementNode | null = node;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const target = cur.children.find(child => (child.data as LogicUtil.WrapElement).type === type);\r\n            if (target == undefined) cur = null;\r\n            else cur = target;\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerNodeFixed = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode => {\r\n        const innerNode = getInnerNode(node, ...typeList);\r\n        if (innerNode == null) throw new Error('[innerNode] is null.');\r\n        return innerNode as TreeUtil.ElementNode;\r\n    }\r\n\r\n    export const getInnerWrap = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement | null => {\r\n\r\n        let cur: LogicUtil.WrapElement | null = wrap;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const listName = getListParamName(cur.type);\r\n            if (listName == null) cur = null;\r\n            else {\r\n                const list = cur.data[`${listName}`] as LogicUtil.WrapElement[];\r\n                const target = list.find(child => child.type === type);\r\n                if (target == undefined) cur = null;\r\n                else cur = target;\r\n            }\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerWrapFixed = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement => {\r\n        const innerWrap = getInnerWrap(wrap, ...typeList);\r\n        if (innerWrap == null) throw new Error('[innerWrap] is null.');\r\n        return innerWrap as LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const addChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode) => {\r\n        return insertChild(wrapElement, node, node.children.length);\r\n    }\r\n\r\n    export const insertChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode, listPos: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, 0, wrapElement);\r\n        const newNode = TreeUtil.createNode(wrapElement, node);\r\n        node.children.splice(listPos, 0, newNode);\r\n        return newNode;\r\n    }\r\n\r\n    export const removeChild = (node: TreeUtil.ElementNode, listPos: number, size: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, size);\r\n        node.children.splice(listPos, size);\r\n    }\r\n\r\n    export const removeChildAll = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].length = 0;\r\n        node.children.length = 0;\r\n    }\r\n\r\n    export const isHead = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[0] == node;\r\n    }\r\n\r\n    export const isTail = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[ownerChildren.length - 1] == node;\r\n    }\r\n\r\n    export const getCurrentIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(parentWrap.type);\r\n        if (listName == null || parentWrap.data == null) return -1;\r\n        const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n        const curIndex = list.findIndex(wrap => wrap == node.data);\r\n        return curIndex;\r\n    }\r\n\r\n    const swapOrder = (node: TreeUtil.ElementNode, offset: number) => {\r\n        if (node.parent == null) return;\r\n        const ownerChildren = node.parent.children;\r\n        const wrap = node.parent.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        const ownDataChildren = wrap.data[`${listName}`] as LogicUtil.WrapElement[];\r\n\r\n        let curNo = getCurrentIndex(node);\r\n        if (curNo === -1) return;\r\n\r\n        // ツリーノードの入れ替え\r\n        const swapNode = ownerChildren[curNo];\r\n        ownerChildren[curNo] = ownerChildren[curNo + offset];\r\n        ownerChildren[curNo + offset] = swapNode;\r\n        // データ要素の入れ替え\r\n        const swapData = ownDataChildren[curNo];\r\n        ownDataChildren[curNo] = ownDataChildren[curNo + offset];\r\n        ownDataChildren[curNo + offset] = swapData;\r\n    }\r\n\r\n    export const getSwapButtons = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        ...dependencyMngNodes: TreeUtil.ElementNode[]\r\n    ) => {\r\n        return getSwapButtonsCallback(node, invalidate, (curIndex, isUpper) => {\r\n            if (dependencyMngNodes.length > 0) {\r\n                dependencyMngNodes.forEach(depNode => {\r\n                    swapOrder(depNode.children[curIndex], isUpper ? -1 : 1);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    export const getSwapButtonsCallback = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        callback: (curIndex: number, isUpper: boolean) => void\r\n    ) => {\r\n        const curIndex = getCurrentIndex(node);\r\n        return <>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↑',\r\n                        isEnable: !LogicElementUtil.isHead(node),\r\n                        callback: () => {\r\n                            swapOrder(node, -1);\r\n                            callback(curIndex, true);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↓',\r\n                        isEnable: !LogicElementUtil.isTail(node),\r\n                        callback: () => {\r\n                            swapOrder(node, 1);\r\n                            callback(curIndex, false);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>;\r\n    }\r\n\r\n    /**\r\n     * 同レベル階層に自身ノードの複製を作成する\r\n     * @param node コピー対象のノード\r\n     * @param newName コピー後の名称\r\n     */\r\n    export const replicateSameLevel = (node: TreeUtil.ElementNode, newName: string) => {\r\n        if (node.parent == null) return;\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const cloneBase = wrap.data;\r\n        const cloneDest = JSON.parse(JSON.stringify((cloneBase)));\r\n\r\n        const newWrap: LogicUtil.WrapElement = {\r\n            type: wrap.type,\r\n            data: cloneDest\r\n        };\r\n        const namable = getNamableProps(wrap.type);\r\n        newWrap.data[namable] = newName;\r\n\r\n        // ロジックマネージャに追加\r\n        const newNode = LogicElementUtil.addChild(newWrap, node.parent);\r\n        // 子要素の展開\r\n        newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n    }\r\n\r\n    export const getReplicateButton = (\r\n        node: TreeUtil.ElementNode,\r\n        isEnable: boolean,\r\n        targetElement: string, store: Store,\r\n        setStore: (store: Store) => void,\r\n        invalidate: () => void\r\n    ): JSX.Element => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        return <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[{\r\n                label: 'Replicate',\r\n                isEnable,\r\n                // isEnable: false,\r\n                callback: () => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={`Replicate this ${targetElement}.`}\r\n                        buttons={[\r\n                            {\r\n                                label: 'Cancel',\r\n                                callback: () => {\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Enter',\r\n                                callback: () => {\r\n                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                    const name = wrap.data[namable] as string;\r\n                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                    // mappingForm();\r\n                                    invalidate();\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }\r\n            }]}\r\n        />;\r\n    }\r\n\r\n    export const getListParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return 'defs';\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            // case 'root':\r\n            case 'logic-item': return 'mngs';\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return 'params';\r\n            case 'inherit-mng': return 'inherits';\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return 'args';\r\n            case 'sample-mng': return 'samples';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'fields';\r\n            case 'thumbnail-mng': return 'items';\r\n            case 'formgrp-mng': return 'defines';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getIdentifyParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'argument-item':\r\n            case 'field-item':\r\n            case 'seed-item':\r\n            case 'thumbnail-item':\r\n            case 'seedarg-item':\r\n            case 'sample-item':\r\n            case 'formgrp-item':\r\n            case 'logic-item': return 'name';\r\n            case 'connector': return 'id';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getNamableProps = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'connector': return 'id';\r\n            case 'seed-item':\r\n            case 'argument-item':\r\n            case 'seedarg-item':\r\n            case 'field-item':\r\n            case 'sample-item':\r\n            case 'thumbnail-item':\r\n            case 'logic-item': return 'name';\r\n        }\r\n        throw new Error('Namable props not found.');\r\n    }\r\n\r\n    export const syncTreeElementFromWrap = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        if (listName == null) return;\r\n        (wrap.data[listName] as any[]).forEach(childWrap => {\r\n            const newNode = TreeUtil.createNode(childWrap, node);\r\n            node.children.push(newNode);\r\n            syncTreeElementFromWrap(newNode);\r\n        });\r\n    }\r\n\r\n    export const createParamWrap = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem): LogicUtil.WrapElement => {\r\n        return { type: type, data: paramDataList };\r\n    }\r\n    export const createParamWrapList = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem[]): LogicUtil.WrapElement[] => {\r\n        return paramDataList.map(data => {\r\n            return { type: type, data: data };\r\n        });\r\n    }\r\n\r\n    export const createVisualParams = (): LogicUtil.WrapElement[] => {\r\n        const type = ParamUtil.VisualParamType;\r\n        return createParamWrapList('param-item', [\r\n            { name: type.RADIUS, formulaItems: ['var'], values: [{ type: 'direct', value: '20' }] },\r\n            { name: type.COLOR_R, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_G, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_B, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_A, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n        ]);\r\n    }\r\n\r\n    export const createBehaviorParams = (): LogicUtil.WrapElement[] => {\r\n        const list: LogicUtil.NodeParamItem[] = [];\r\n        const type = ParamUtil.BehaviorParamType;\r\n        list.push({\r\n            name: type.LIMIT,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '30' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        return createParamWrapList('param-item', list);\r\n    }\r\n\r\n    export const getDefaultLogicMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'visual-mng',\r\n                data: {\r\n                    params: createVisualParams()\r\n                } as LogicUtil.NodeParamManager\r\n            },\r\n            {\r\n                type: 'behavior-mng',\r\n                data: {\r\n                    params: createBehaviorParams()\r\n                } as LogicUtil.NodeParamManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    export const getInitialData = (): LogicUtil.WrapElement => {\r\n        return {\r\n            type: 'root',\r\n            data: {\r\n                seedMng: {\r\n                    type: 'seed-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeSeedManager\r\n                } as LogicUtil.WrapElement,\r\n                logicMng: {\r\n                    type: 'logic-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeLogicManager\r\n                } as LogicUtil.WrapElement\r\n            } as LogicUtil.NodeRoot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 同階層の名前パラメータを持つ要素より、既存の名前一覧を取得する。\r\n     * @param node 現在のノード\r\n     * @returns 同階層の既存の名前一覧\r\n     */\r\n    export const getExistNameList = (node: TreeUtil.ElementNode) => {\r\n        const nameList: string[] = [];\r\n        const curWrap = node.data as LogicUtil.WrapElement;\r\n        const nameParam = getIdentifyParamName(curWrap.type);\r\n        const mngWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listParam = getListParamName(mngWrap.type);\r\n        if (listParam == null || nameParam == null) throw Error('List param or identifiy param not found.');\r\n        const list = mngWrap.data[listParam] as LogicUtil.WrapElement[];\r\n        list.forEach(wrap => {\r\n            if (wrap.data != null && curWrap != wrap) {\r\n                nameList.push(wrap.data[nameParam]);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getLogicNameList = (mng: LogicUtil.NodeLogicManager) => {\r\n        const nameList: string[] = [];\r\n        mng.defs.forEach(logic => {\r\n            if (logic.data != null) {\r\n                nameList.push((logic.data as LogicUtil.NodeLogicItem).name);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getParamNameList = (curLogicOwner: LogicUtil.NodeLogicItem) => {\r\n        const nameList: string[] = [];\r\n\r\n        // システム固有のパラメータ名を取得\r\n        ParamUtil.VisualParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.BehaviorParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.SelfParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ExtendParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.EffectParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ModulateParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.Constants.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n\r\n        // 引数のパラメータ名を取得\r\n        const argMng = curLogicOwner.mngs.find(mng => mng.type === 'argument-mng');\r\n        if (argMng != undefined) {\r\n            const args = (argMng.data as LogicUtil.NodeArgumentManager).args;\r\n            args.forEach(arg => {\r\n                if (arg.data != null) {\r\n                    nameList.push((arg.data as LogicUtil.NodeArgumentItem).name);\r\n                }\r\n            });\r\n        }\r\n        // フィールドのパラメータ名を取得\r\n        const fieldMng = curLogicOwner.mngs.find(mng => mng.type === 'field-mng');\r\n        if (fieldMng != undefined) {\r\n            const fields = (fieldMng.data as LogicUtil.NodeFieldManager).fields;\r\n            fields.forEach(field => {\r\n                if (field.data != null) {\r\n                    nameList.push((field.data as LogicUtil.NodeParamItem).name);\r\n                }\r\n            });\r\n        }\r\n        return nameList;\r\n    }\r\n\r\n    /**\r\n     * 子要素の接頭連番をチェックし、重複しない名称を返す。\r\n     * @param prefix 接頭語\r\n     * @param node 基準となるノード\r\n     */\r\n    export const getNumberingOnPrefixName = (prefix: string, node: TreeUtil.ElementNode) => {\r\n        let num = 0;\r\n        // 接頭番号を取得\r\n        while (true) {\r\n            const check = node.children.find(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                if (wrap.data == null) return false;\r\n                console.log(wrap);\r\n                return wrap.data[getNamableProps(wrap.type)] === `${prefix}${num}`;\r\n            });\r\n            if (check != undefined) num++;\r\n            else break;\r\n        }\r\n        return `${prefix}${num}`;\r\n    }\r\n\r\n    /**\r\n     * パラメータの式で参照されている変数を検索し、\r\n     * 任意の処理（callback）を実行する。\r\n     * @param node 現在のノード\r\n     * @param callback 処理\r\n     */\r\n    export const searchVariableReferInFormula = (node: TreeUtil.ElementNode, callback: Function) => {\r\n\r\n        const mngType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const getLogicItem = () => {\r\n            switch (mngType) {\r\n                case 'field-mng':\r\n                case 'argument-mng': return node.parent?.parent?.data as LogicUtil.WrapElement;\r\n                case 'inhfld-mng': return node.parent?.parent?.parent?.parent?.data as LogicUtil.WrapElement;\r\n            }\r\n        }\r\n        const logicItem = getLogicItem()?.data as LogicUtil.NodeLogicItem;\r\n        if (mngType === 'argument-mng') {\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (fieldMng != undefined) {\r\n                callback((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n        }\r\n        if (mngType !== 'inhfld-mng') {\r\n            const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n            if (visualMng != undefined) {\r\n                callback((visualMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n            const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n            if (behaviorMng != undefined) {\r\n                callback((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n        }\r\n        const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                if (mngType !== 'inhfld-mng') {\r\n                    const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                    // Inherit配下のField要素のチェック\r\n                    if (inhfld != null) {\r\n                        callback((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                    }\r\n                }\r\n                // Extend要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    }\r\n\r\n    export const findSeedWrap = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const root = rootData.data as LogicUtil.NodeRoot;\r\n        const seed = (root.seedMng.data as LogicUtil.NodeSeedManager).defs.find(def => {\r\n            const seedItem = def.data as LogicUtil.NodeSeedItem;\r\n            return seedItem.name === seedId;\r\n        });\r\n        if (seed == undefined) throw new Error();\r\n        return seed;\r\n    }\r\n\r\n    export const doParticleJob = (rootData: LogicUtil.WrapElement, def: LaunchDef, owner: Particle.Instance[]) => {\r\n        const seedWrap = findSeedWrap(rootData, def.seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        const getSendingValueMap = () => {\r\n            const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const valueMap = seedargMng.args.map((wrap, i) => {\r\n                const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                return { name: seedarg.name, value: def.values[i] }\r\n            });\r\n\r\n            // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n            return sendParams.map(item => {\r\n                const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                return { name: item.name, value }\r\n            });\r\n        }\r\n\r\n        owner.push(new Particle.Instance(\r\n            PreviewUtil.buildLogicProps(owner, getOrigin(), rootData, getSendingValueMap())\r\n        ));\r\n    }\r\n\r\n    export type SeedProps = {\r\n        seed: LogicUtil.NodeSeedItem;\r\n        logic: LogicUtil.NodeLogicItem;\r\n        seedargList: LogicUtil.NodeSeedArgItem[];\r\n        seedsendList: LogicUtil.NodeParamItem[];\r\n        thumbnailList: LogicUtil.NodeThumbnailItem[];\r\n    }\r\n    export const getSeedProperties = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const seedWrap = findSeedWrap(rootData, seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n        const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        const seedargList = seedargMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n        const seedsendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n        const seedsendList = seedsendMng.params.map(wrap => wrap.data as LogicUtil.NodeParamItem);\r\n        const thumbnailMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'thumbnail-mng').data as LogicUtil.NodeThumnailManager;\r\n        const thumbnailList = thumbnailMng.items.map(wrap => wrap.data as LogicUtil.NodeThumbnailItem);\r\n       \r\n        return {\r\n            seed, logic: getOrigin(), seedargList, seedsendList, thumbnailList\r\n        }\r\n    }\r\n}\r\n\r\nexport default LogicElementUtil;","import { useState, useMemo, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewLogicInputForm = (props: {\r\n    logicWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const argumentList: string[] = useMemo(() => {\r\n        let list: string[] = [];\r\n        const argWrap = LogicElementUtil.getInnerWrap(props.logicWrap, 'argument-mng');\r\n        if (argWrap != null) {\r\n            list = (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                const argItem = arg.data as LogicUtil.NodeArgumentItem;\r\n                return argItem.name;\r\n            });\r\n        }\r\n        return list;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFormList(argumentList.map(arg => {\r\n            return { value: arg, errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        if (formList.find(form => form.errors.length > 0) == undefined) {\r\n            props.setSendingValueMap(() => {\r\n                return formList.map((form, i) => {\r\n                    return { name: argumentList.map(arg => arg)[i], value: Number(form.value) }\r\n                });\r\n            })\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return <>{\r\n        formList.map((form, i) => {\r\n            const argument = argumentList[i];\r\n            return (<FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={argument}\r\n                labelWidth={250}\r\n                jsx={\r\n                    <FormUtil.TextField\r\n                        width={312}\r\n                        isNumber\r\n                        checkable={form}\r\n                        setCheckable={() => {\r\n                            setFormList(formList.slice());\r\n                        }}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            }\r\n                        ]}\r\n                    />\r\n                }\r\n            />);\r\n        })\r\n    }</>\r\n}\r\n\r\nexport default PreviewLogicInputForm;","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../factory/util/logicFormUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewSeedInputForm = (props: {\r\n    seedWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [formgrpList, seedargList, presetList]: [LogicUtil.NodeFromGrpItem[], LogicUtil.NodeSeedArgItem[], LogicUtil.NodeSampleItem[]] = useMemo(() => {\r\n        const formgrpWrap = LogicElementUtil.getInnerWrap(props.seedWrap, 'interface-mng', 'formgrp-mng');\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        if (formgrpWrap != null) {\r\n            formgrpList = (formgrpWrap.data as LogicUtil.NodeFromgrpManager).defines.map(def => def.data as LogicUtil.NodeFromGrpItem);\r\n        }\r\n\r\n        const argWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedarg-mng');\r\n        const argumentList = (argWrap.data as LogicUtil.NodeSeedArgManager).args.map(arg => arg.data as LogicUtil.NodeSeedArgItem);\r\n\r\n        const sampleWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'sample-mng');\r\n        const sampleList = (sampleWrap.data as LogicUtil.NodeSampleManager).samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n        return [formgrpList, argumentList, sampleList];\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        setFormList(seedargList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (formList.find(form => form.errors.length > 0) == undefined) {\r\n            props.setSendingValueMap(() => {\r\n                const valueMap = formList.map((form, i) => {\r\n                    return { name: seedargList.map(arg => arg.name)[i], value: Number(form.value) }\r\n                });\r\n\r\n                // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                const sendMng = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                return sendParams.map(item => {\r\n                    const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                    if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                    return { name: item.name, value }\r\n                });\r\n            });\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"Preset\"\r\n            innerJsx={<FormUtil.Record\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        width={402}\r\n                        checkable={template}\r\n                        setCheckable={setTemplate}\r\n                        headBlank\r\n                        list={presetList.map((sample, i) => {\r\n                            return {\r\n                                labelText: sample.name,\r\n                                value: i.toString()\r\n                            }\r\n                        })}\r\n                    />\r\n                    <FormUtil.ButtonItem\r\n                        button={{\r\n                            label: 'Apply',\r\n                            isEnable: template.value !== '',\r\n                            callback: () => {\r\n                                const selectedIndex = Number(template.value);\r\n                                const values = presetList[selectedIndex].values;\r\n                                values.forEach((value, i) => {\r\n                                    formList[i].value = value.toString();\r\n                                });\r\n                                setFormList(formList.slice());\r\n                            }\r\n                        }}\r\n                    />\r\n                </>}\r\n            />}\r\n        />\r\n        {LogicFormUtil.buildPreviewForms(\r\n            false, seedargList, formgrpList, formList, setFormList\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default PreviewSeedInputForm;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ReactLoading from 'react-loading';\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport PreviewLogicInputForm from \"./inputForm/previewLogicInputForm\";\r\nimport PreviewSeedInputForm from \"./inputForm/previewSeedInputForm\";\r\n\r\nnamespace PreviewLogicFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        master: LogicUtil.WrapElement;\r\n        rootData: LogicUtil.WrapElement;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n\r\n        const [sceens, setSceens] = useState<string[]>([]);\r\n        const [frameCnt, setFrameCnt] = useState<number>(-1);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isBuild, setBuild] = useState<boolean>(false);\r\n        const [progress, setProgress] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const [sendingValueMap, setSendingValueMap] = useState<((() => PreviewUtil.ValueMap[]) | null)>(null);\r\n\r\n        const isSeed = props.master.type === 'seed-item';\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n        useEffect(() => {\r\n            if (isBuild) build();\r\n        }, [isBuild]);\r\n\r\n        const build = () => {\r\n            if (sendingValueMap == null) return;\r\n            setCur(0);\r\n            const sceens: string[] = [];\r\n            PreviewUtil.runParticleLogic({\r\n                limitFrame: 500,\r\n                limitParticle: 3000,\r\n                doIterate: (frame, owner) => {\r\n                    if (frame === 0) {\r\n                        const getOrigin = () => {\r\n                            if (!isSeed) return props.master.data as LogicUtil.NodeLogicItem;\r\n                            else {\r\n                                const seed = props.master.data as LogicUtil.NodeSeedItem;\r\n                                const root = props.rootData.data as LogicUtil.NodeRoot;\r\n                                const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                                return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                            }\r\n                        }\r\n                        owner.push(new Particle.Instance(\r\n                            PreviewUtil.buildLogicProps(owner, getOrigin(), props.rootData, sendingValueMap as any)\r\n                        ));\r\n                    }\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n\r\n                        // 経過フレーム、要素数の表示\r\n                        ctx.globalAlpha = 1;\r\n                        ctx.font = '16pt Arial';\r\n                        ctx.fillStyle = '#ffffff';\r\n                        ctx.fillText(`${frame}`, 6, 24);\r\n                        ctx.fillStyle = '#ffec5c';\r\n                        ctx.fillText(`${owner.length}`, 6, 44);\r\n\r\n                        // ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    setFrameCnt(frame);\r\n                    setSceens(sceens);\r\n\r\n                    setBuild(false);\r\n                    setTabIndex(1);\r\n                }\r\n            });\r\n        }\r\n\r\n        const isInputOK = sendingValueMap != null;\r\n\r\n        const buildTabJsx = (\r\n            <_Wrap>\r\n                <_Blind isEnable={isBuild}>\r\n                    {/* <ReactLoading type='spinningBubbles' /> */}\r\n                    <_Msg>Now building...</_Msg>\r\n                </_Blind>\r\n                <_FormDiv\r\n                    isSeed={props.master.type === 'seed-item'}\r\n                >\r\n                    {!isSeed ? (\r\n                        <PreviewLogicInputForm\r\n                            logicWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                        />\r\n                    ) : (\r\n                        <PreviewSeedInputForm\r\n                            seedWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                        />\r\n                    )}\r\n                </_FormDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Build',\r\n                            isEnable: isInputOK && !isBuild,\r\n                            callback: () => {\r\n                                setBuild(true);\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    if (tabIndex === 0) {\r\n                        if (isInputOK && e.key === ' ') build();\r\n                    } else {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                            } break;\r\n                            case 'ArrowRight': {\r\n                                if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                            } break;\r\n                            case ' ': {\r\n                                setPlay(!isPlay);\r\n                            } break;\r\n                        }\r\n                    }\r\n                    if (!isPlay && e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }\r\n                }\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Build', enable: true, cont: buildTabJsx },\r\n                            { name: 'Play', enable: frameCnt !== -1, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame >\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLogicFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _FormDiv = styled.div<{\r\n    isSeed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 580px;\r\n    background-color: #c5cfd6df;\r\n    ${props => !props.isSeed ? '' : css`\r\n        background-color: #c6d6c5df;\r\n    `}\r\n    overflow-y: auto;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #c5c5c5df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;\r\n\r\n\r\nconst _Blind = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: ${props => !props.isEnable ? 'none;' : 'inline-block;'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000552cd;\r\n    z-index: 99;\r\n`;\r\n\r\nconst _Msg = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    margin: 240px 0 0 110px;\r\n    /* background-color: #26f055cd; */\r\n    color: white;\r\n    font-size: 56px;\r\n    font-weight: 600;\r\n\r\n`;","import { type } from \"os\";\r\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport Common from \"../common\";\r\nimport PreviewLogicFrame from \"../preview/previewLogicFrame\";\r\nimport LogicElementUtil from \"./util/logicElementUtil\";\r\nimport LogicUtil from \"./util/logicUtil\";\r\n\r\nexport const FactoryTreeContext = createContext({} as LogicUtil.DetailArgs);\r\n\r\nconst LogicMainteTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    // const [rootData, setRootData] = useState(LogicElementUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    // const [treeDisable, setTreeDisable] = useState(false);\r\n    const [isModify, setModify] = useState<boolean>(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    const rootData = store.logicData as LogicUtil.WrapElement;\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: LogicUtil.getChildrenDataNode(rootData)\r\n        }\r\n    }, [rootData]);\r\n\r\n    // useEffect(()=> {\r\n    //     store.logicData = rootData;\r\n    //     setStore({...store});\r\n    // }, [rootData]);\r\n\r\n    const setRootData = (rootData: LogicUtil.WrapElement) => {\r\n        store.logicData = rootData;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const masterNode = useMemo(() => {\r\n        let cur: TreeUtil.ElementNode | null = focusNode;\r\n        while (cur != null) {\r\n            const type = (cur.data as LogicUtil.WrapElement).type;\r\n            if (['logic-item', 'seed-item'].includes(type)) return cur;\r\n            cur = cur.parent;\r\n        };\r\n        return null;\r\n    }, [focusNode]);\r\n\r\n    /**\r\n     * プレビューダイアログを表示する\r\n     */\r\n    const openPreviewDialog = () => {\r\n        if (masterNode == null) return;\r\n        store.system.dialog = (\r\n            <PreviewLogicFrame.Component\r\n                master={masterNode.data as LogicUtil.WrapElement}\r\n                rootData={rootData}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n            onKeyDown={(e) => {\r\n                // console.log(e.key);\r\n                if (isModify || focusNode == null) return;\r\n                switch (e.key) {\r\n                    case 'ArrowRight': {\r\n                        if (focusNode.children.length > 0) {\r\n                            if (!focusNode.isOpen) focusNode.isOpen = true;\r\n                            else setFocusNode(focusNode.children[0]);\r\n                            setInvalidate({});\r\n                        }\r\n                    } break;\r\n                    case 'ArrowLeft': {\r\n                        if (focusNode.isOpen) focusNode.isOpen = false;\r\n                        else {\r\n                            if (focusNode.parent != null) setFocusNode(focusNode.parent);\r\n                        }\r\n                        setInvalidate({});\r\n                    } break;\r\n                    case 'ArrowUp': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n) {\r\n                                    if (i === 0) {\r\n                                        setFocusNode(focusNode.parent);\r\n                                        setInvalidate({});\r\n                                    } else {\r\n                                        setFocusNode(list[i - 1]);\r\n                                        setInvalidate({});\r\n                                    }\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case 'ArrowDown': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n && i < list.length - 1) {\r\n                                    setFocusNode(list[i + 1]);\r\n                                    setInvalidate({});\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case ' ': {\r\n                        if (masterNode != null) openPreviewDialog();\r\n                    } break;\r\n                }\r\n            }}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview',\r\n                                isEnable: masterNode != null,\r\n                                callback: openPreviewDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return LogicUtil.getNodeDisplayJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={isModify}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <_DetailDiv>\r\n                    <_DetailHeader>\r\n                        <_DetailHeaderLabel>{LogicUtil.getTypeName(focusNode)}</_DetailHeaderLabel>\r\n                    </_DetailHeader>\r\n                    <FactoryTreeContext.Provider value={{\r\n                        rootData,\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        isModify,\r\n                        setModify,\r\n                        // treeDisable,\r\n                        setRootData,\r\n                        removeSelf: () => {\r\n                            const node = focusNode as TreeUtil.ElementNode;\r\n                            let index = -1;\r\n                            node.parent?.children.forEach((n, i) => {\r\n                                if (n == node) index = i;\r\n                            });\r\n                            node.parent?.children.splice(index, 1);\r\n                            const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n                            const listName = LogicElementUtil.getListParamName(parentWrap.type);\r\n                            if (listName == null) return;\r\n                            const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n                            list.splice(index, 1);\r\n                            setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                            setInvalidate({});\r\n                        }\r\n                    }}>\r\n                        <_DetailMainDiv>{LogicUtil.getDetailComponent(focusNode)}</_DetailMainDiv>\r\n                    </FactoryTreeContext.Provider>\r\n                </_DetailDiv>\r\n            </_PropsDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default LogicMainteTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #6c8186;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d87b;\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _TreeHeadHalf = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    background-color: #7fbdb47a;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #9fa9b6;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _DetailDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\nconst _DetailHeader = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #b4b29e; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _DetailHeaderLabel = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #a10000;\r\n    /* background-color: #bbd0d3; */\r\n    border: solid 1px #a10000;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 20px);\r\n    margin: 5px 0 0 10px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DetailMainDiv = styled.div`\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 44px);\r\n    margin: 0 0 0 4px;\r\n    background-color: #cfd3cc;\r\n    border: solid 1px #0026a1;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\n\r\nnamespace NameDefDialog {\r\n\r\n    export const Component = (props: {\r\n        targetSeq: number\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const width = 500;\r\n        const height = 150;\r\n\r\n        const isCreate = props.targetSeq === -1;\r\n        const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n        const getDefaultName = () => {\r\n            return props.targetSeq === -1 ? '' : (projects.find(p => p.seq === props.targetSeq) as StoreCloud.Project).name;\r\n        }\r\n\r\n        useEffect(() => {\r\n            name.value = getDefaultName();\r\n            setName({ ...name });\r\n        }, []);\r\n\r\n        const [existNames] = useMemo(() => {\r\n            return [\r\n                projects.map(item => item.name)\r\n            ];\r\n        }, []);\r\n\r\n        const registCreate = () => {\r\n            const result = findProjectMaxSeq();\r\n            result.then((maxSeq) => {\r\n                const newProject = {\r\n                    seq: maxSeq + 1,\r\n                    name: name.value,\r\n                    source: '',\r\n                    lastmod: ''\r\n                };\r\n                projects.push(newProject);\r\n                insertProject(store.system.user?.seq as number, newProject).then(() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            });\r\n        }\r\n\r\n        const registUpdate = () => {\r\n            const targetItem = projects.find(item => item.seq === props.targetSeq);\r\n            if (targetItem != undefined) {\r\n                updateProjectName(props.targetSeq, name.value).then(() => {\r\n                    targetItem.name = name.value;\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            }\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: isCreate ? 'Create' : 'Update',\r\n                isEnable: name.errors.length === 0,\r\n                callback: () => {\r\n                    if (isCreate) registCreate();\r\n                    else registUpdate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, input new name!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => LogicUtil.checkFieldName(value),\r\n                                //     errorType: \"value\"\r\n                                // },\r\n                                {\r\n                                    checker: (value) => !existNames.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NameDefDialog;\r\n\r\nconst findProjectMaxSeq = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT max(seq) m FROM prjcttbl`);\r\n    const results = await response.json();\r\n    return results[0].m;\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport NameDefDialog from \"./nameDefDialog\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n    const listItemJsx = store.cloud == null ? [] : store.cloud.projects.map((item, i) => {\r\n        const exist = item.source !== '';\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    setFcsListIdx(i);\r\n                }}\r\n            >\r\n                <_Status isExist={exist}>[{!exist ? 'Blank' : 'Logic'}] </_Status>\r\n                <_Name>{item.name}</_Name>\r\n                {/* <_Date> -{item.lastmod}</_Date> */}\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    const hasData = store.logicData != null;\r\n    const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n    useEffect(()=>{\r\n        if(store.cloud == null) {\r\n            setFcsListIdx(-1);\r\n        }\r\n    }, [store.cloud]);\r\n\r\n    const [logicSize, developCnt, privateCnt, releaseCnt, logicCnt] = useMemo(() => {\r\n        if (store.logicData == null) return [0, 0, 0, 0, 0];\r\n        let size = 0;\r\n        const incrRec = (wrap: LogicUtil.WrapElement) => {\r\n            size++;\r\n            const listName = LogicElementUtil.getListParamName(wrap.type);\r\n            if (listName != null) {\r\n                const list = wrap.data[listName] as LogicUtil.WrapElement[];\r\n                list.forEach(wrap => incrRec(wrap));\r\n            }\r\n        }\r\n        const root = store.logicData.data as LogicUtil.NodeRoot;\r\n        incrRec(root.logicMng);\r\n        incrRec(root.seedMng);\r\n\r\n        let developCnt = 0;\r\n        let privateCnt = 0;\r\n        let releaseCnt = 0;\r\n        const seedMng = root.seedMng.data as LogicUtil.NodeSeedManager;\r\n        seedMng.defs.forEach(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n            switch (seed.permit) {\r\n                case 'develop': developCnt++; break;\r\n                case 'private': privateCnt++; break;\r\n                case 'release': releaseCnt++; break;\r\n            }\r\n        });\r\n\r\n        const logicMng = root.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return [size, developCnt, privateCnt, releaseCnt, logicMng.defs.length];\r\n    }, [store.logicData]);\r\n\r\n    return (<_Wrap>\r\n        <_HeaderDiv>\r\n            <FormUtil.ButtonRecord\r\n                align=\"left\"\r\n                buttons={[\r\n                    {\r\n                        label: 'New Project',\r\n                        isEnable: !hasData,\r\n                        callback: () => {\r\n                            store.logicData = LogicElementUtil.getInitialData();\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                ]}\r\n            />\r\n        </_HeaderDiv>\r\n        <_BodyDiv>\r\n            <_LeftDiv isEnable={store.cloud != null}>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Create',\r\n                            width: 110,\r\n                            isEnable: true,\r\n                            callback: () => {\r\n                                store.system.dialog = <NameDefDialog.Component\r\n                                    targetSeq={-1}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Upload',\r\n                            width: 110,\r\n                            isEnable: fcsListIdx != -1 && hasData,\r\n                            callback: () => {\r\n                                const source = DataUtil.gZip(JSON.stringify(store.logicData));\r\n                                updateProjectSource(projects[fcsListIdx].seq, source).then(() => {\r\n                                    const project = projects[fcsListIdx];\r\n                                    project.source = source;\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Update project succesful!\"\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Delete',\r\n                            width: 110,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                deleteProject(projects[fcsListIdx].seq).then(() => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Delete project succesful!\"\r\n                                    />;\r\n                                    projects.splice(fcsListIdx, 1);\r\n                                    setFcsListIdx(fcsListIdx - 1);\r\n                                    setStore({ ...store });\r\n                                });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Rename',\r\n                            width: 110,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                store.system.dialog = <NameDefDialog.Component\r\n                                    targetSeq={projects[fcsListIdx].seq}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_ListDiv>\r\n                    {listItemJsx}\r\n                </_ListDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Clone',\r\n                            isEnable: !hasData && fcsListIdx !== -1 && projects[fcsListIdx].source !== '',\r\n                            callback: () => {\r\n                                const source = DataUtil.unZip(projects[fcsListIdx].source);\r\n                                store.logicData = JSON.parse(source);\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Clone project succesful!\"\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_LeftDiv>\r\n            <_RighttDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Load',\r\n                            width: 100,\r\n                            isEnable: !hasData,\r\n                            callback: () => { DataUtil.loadFile(store, setStore) }\r\n                        },\r\n                        {\r\n                            label: store.fileHandle == null ? 'Save' : 'Overwrite',\r\n                            width: 140,\r\n                            isEnable: hasData,\r\n                            callback: () => { DataUtil.saveFile(store, setStore) }\r\n                        },\r\n                        {\r\n                            label: 'Disconnect',\r\n                            width: 160,\r\n                            isEnable: store.fileHandle != null,\r\n                            callback: () => {\r\n                                store.fileHandle = null;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Clear',\r\n                            width: 100,\r\n                            isEnable: hasData,\r\n                            callback: () => {\r\n                                store.logicData = null;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <FormUtil.BorderPanel\r\n                    title=\"Project\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Private\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : privateCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Release\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : releaseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Logic\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Launcher\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Size\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicSize.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Hash\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    width={340}\r\n                                    value={!hasData ? '-' : DataUtil.getSHA256Hash(JSON.stringify(store.logicData))}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n            </_RighttDiv>\r\n        </_BodyDiv>\r\n\r\n    </_Wrap >);\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst updateProjectSource = async (seq: number, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from prjcttbl where seq = ${seq};`)\r\n}\r\n\r\nconst HEADER_WIDTH = 40;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    background-color: #ebebeb30;\r\n`;\r\n\r\nconst _HeaderDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_WIDTH}px;\r\n    background-color: #d1f5f32f;\r\n`;\r\n\r\nconst _BodyDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_WIDTH}px);\r\n    background-color: #221a212c;\r\n`;\r\n\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #ffe3fb53;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 86px);\r\n    box-sizing: border-box;\r\n    background-color: #f0ecd43d;\r\n    border: 1px solid #002c8a;\r\n    border-radius: 4px;\r\n`;\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    isExist: boolean;\r\n}>`\r\n    ${props => !props.isExist ? css`color: #0000006d;` : `color: #b90000be;`}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\nconst _RighttDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #cbf7cd2d;\r\n    vertical-align: top;\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\n\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport Particle from \"../../../graphic/particle\";\r\n\r\nconst LaunchAnalysis = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [divide, setDivide] = useState<FormUtil.CheckableValue>({ value: '20', errors: [] });\r\n    const [peak, setPeak] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n    const [total, setTotal] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n\r\n    const [countList, setCountList] = useState<number[]>([]);\r\n\r\n    const limitFrame = store.launchData.limitFrame;\r\n    const limitParticle = store.launchData.limitParticle;\r\n    const defList = store.launchData.defList;\r\n\r\n    const logicData = store.logicData as LogicUtil.WrapElement;\r\n\r\n    const execute = () => {\r\n        const minFrame = defList[0].frame;\r\n        const divRate = 1 / Number(divide.value);\r\n        const countList: number[] = [];\r\n        let peak = 0;\r\n        PreviewUtil.runParticleLogic({\r\n            limitFrame,\r\n            limitParticle,\r\n            guaranteeFrame: minFrame,\r\n            doIterate: (frame, owner) => {\r\n                const def = defList.find(def => def.frame === frame);\r\n                if (def != undefined) {\r\n                    const seedWrap = LogicElementUtil.findSeedWrap(logicData, def.seedId);\r\n                    const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n                    const getOrigin = () => {\r\n                        const root = logicData.data as LogicUtil.NodeRoot;\r\n                        const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                        return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                    }\r\n                    const getSendingValueMap = () => {\r\n                        const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n                        const valueMap = seedargMng.args.map((wrap, i) => {\r\n                            const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                            return { name: seedarg.name, value: def.values[i] }\r\n                        });\r\n\r\n                        // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                        const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                        return sendParams.map(item => {\r\n                            const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                            if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                            return { name: item.name, value }\r\n                        });\r\n                    }\r\n\r\n                    owner.push(new Particle.Instance(\r\n                        PreviewUtil.buildLogicProps(owner, getOrigin(), logicData, getSendingValueMap())\r\n                    ));\r\n                }\r\n\r\n                const pastRate = frame / limitFrame;\r\n                const needPoint = (countList.length + 1);\r\n                const curPoint = pastRate / divRate;\r\n                if (curPoint >= needPoint) {\r\n                    countList.push(owner.length);\r\n                }\r\n\r\n                if(owner.length > peak) peak = owner.length;\r\n            },\r\n            doEnd: (frame) => {\r\n                setTotal({...total, value: frame.toString()})\r\n            }\r\n        });\r\n        setPeak({...total, value: peak.toString()})\r\n        setCountList(countList);\r\n        // console.log(countList);\r\n    };\r\n\r\n    const itemJsxList = useMemo(() => {\r\n        const divRate = 1 / Number(divide.value);\r\n        const rateHeight = divRate /1;\r\n        return countList.map((count, i) => {\r\n            const rate = count / limitParticle;\r\n            return (\r\n                <_AnalisisItem key={i}\r\n                    rate={rate * 100}\r\n                    height={rateHeight * 100}\r\n                />\r\n            );\r\n        });\r\n    }, [countList]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <FormUtil.BorderPanel\r\n                title=\"Property\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Divide\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isNumber\r\n                                checkable={divide}\r\n                                setCheckable={setDivide}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 5, 200),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Analysis',\r\n                                isEnable: divide.errors.length === 0 && defList.length > 0,\r\n                                callback: execute\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Result\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Peak\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={150}\r\n                                isNumber\r\n                                checkable={peak}\r\n                                isReadOnly\r\n                                setCheckable={setPeak}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"End frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={150}\r\n                                isNumber\r\n                                checkable={total}\r\n                                isReadOnly\r\n                                setCheckable={setTotal}\r\n                            />\r\n                        }\r\n                    />\r\n                    <_AnalisisDiv>\r\n                        {itemJsxList}\r\n                    </_AnalisisDiv>\r\n                </>}\r\n            />\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default LaunchAnalysis;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _AnalisisDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #000000d3;\r\n    width: calc(100% - 16px);\r\n    height: 500px;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _AnalisisItem = styled.div<{\r\n    rate: number;\r\n    height: number;\r\n}>`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #ededed77; */\r\n    background: linear-gradient(to bottom, #d1ceda, #b3aec2, #d1ceda);\r\n    width: ${props => props.rate}%;\r\n    height: calc(${props => props.height}% - 1px);\r\n    margin: 1px 0 0 0;\r\n    /* height: 20px; */\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport { LaunchDef, SeedBean } from \"../launcherTab\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport LogicFormUtil from \"../../factory/util/logicFormUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst LaunchProperty = (props: {\r\n    newFrame: FormUtil.CheckableValue;\r\n    setNewFrame: (newFrame: FormUtil.CheckableValue) => void;\r\n    defBean: LaunchDef;\r\n    seedList: SeedBean[];\r\n    isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: (frame: number, seedId: string, values: number[]) => void;\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [seed, setSeed] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const newFrame = props.newFrame;\r\n    const setNewFrame = props.setNewFrame;\r\n    const isInputOK = seed.errors.length === 0 && newFrame.errors.length === 0 && formList.find(form => form.errors.length > 0) == undefined;\r\n\r\n\r\n    const mapping = () => {\r\n        setNewFrame({ ...newFrame, value: props.defBean.frame.toString() });\r\n        setSeed({ ...seed, value: props.defBean.seedId.toString() });\r\n        setFormList(props.defBean.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.defBean == undefined) return;\r\n        if (props.defBean.seedId === '') {\r\n            setNewFrame({ ...newFrame, value: '' });\r\n            setSeed({ ...seed, value: '' });\r\n            setFormList([]);\r\n        } else {\r\n            mapping();\r\n        }\r\n    }, [props.defBean]);\r\n\r\n    const initFormList = (seedId: string) => {\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seedId;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n        }\r\n        setFormList(argumentList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }\r\n\r\n    const propertiesFormJsx = useMemo(() => {\r\n        if (seed.value === '') return <></>;\r\n\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        let presetList: LogicUtil.NodeSampleItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seed.value;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n            formgrpList = activeSeed.formgrps;\r\n            presetList = activeSeed.presets;\r\n        }\r\n        return (<>\r\n            <FormUtil.BorderPanel\r\n                title=\"Preset\"\r\n                innerJsx={<FormUtil.Record\r\n                    jsx={<>\r\n                        <FormUtil.Combobox\r\n                            width={250}\r\n                            checkable={template}\r\n                            setCheckable={setTemplate}\r\n                            headBlank\r\n                            list={presetList.map((sample, i) => {\r\n                                return {\r\n                                    labelText: sample.name,\r\n                                    value: i.toString()\r\n                                }\r\n                            })}\r\n                            isReadOnly={!props.isModify}\r\n                        />\r\n                        <FormUtil.ButtonItem\r\n                            button={{\r\n                                label: 'Apply',\r\n                                isEnable: template.value !== '',\r\n                                callback: () => {\r\n                                    const selectedIndex = Number(template.value);\r\n                                    const values = presetList[selectedIndex].values;\r\n                                    values.forEach((value, i) => {\r\n                                        formList[i].value = value.toString();\r\n                                    });\r\n                                    setFormList(formList.slice());\r\n                                }\r\n                            }}\r\n                        />\r\n                    </>}\r\n                />}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Properties\"\r\n                innerJsx={<>{\r\n                    LogicFormUtil.buildPreviewForms(\r\n                        !props.isModify, argumentList, formgrpList, formList, setFormList\r\n                    )\r\n                }</>}\r\n            />\r\n        </>);\r\n    }, [template, formList, props.isModify]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: props.isModify,\r\n                        callback: () => {\r\n                            props.cancelAction();\r\n                            setTemplate({ ...template, value: '' });\r\n                            mapping();\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !props.isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !props.isModify || isInputOK,\r\n                        callback: () => {\r\n                            props.modifyAction(\r\n                                Number(newFrame.value),\r\n                                seed.value,\r\n                                formList.map(form => Number(form.value))\r\n                            );\r\n                            setTemplate({ ...template, value: '' });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Base\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isReadOnly={!props.isModify}\r\n                                isNumber\r\n                                checkable={newFrame}\r\n                                setCheckable={setNewFrame}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 0, store.launchData.limitFrame),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Seed\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                checkable={seed}\r\n                                setCheckable={(checkable) => {\r\n                                    initFormList(checkable.value);\r\n                                    setSeed({ ...checkable });\r\n                                }}\r\n                                list={props.seedList.map(seed => {\r\n                                    return { value: seed.name, labelText: seed.name }\r\n                                })}\r\n                                headBlank\r\n                                width={200}\r\n                                isReadOnly={!props.isModify}\r\n                                validates={\r\n                                    [\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n            {propertiesFormJsx}\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default LaunchProperty;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #dbebd6;\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst LaunchEnvironment = (props: {\r\n    isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: () => void;\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [particle, setParticle] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const data = store.launchData;\r\n\r\n    const mapping = () => {\r\n        setFrame({ ...frame, value: data.limitFrame.toString() });\r\n        setParticle({ ...particle, value: data.limitParticle.toString() });\r\n    }\r\n    useEffect(() => {\r\n        mapping();\r\n    }, []);\r\n\r\n    const isInputOK = particle.errors.length === 0 && frame.errors.length === 0;\r\n\r\n    const maxLimit = data.defList.map(def => def.frame).reduce((prev, cur) => {\r\n        return prev > cur ? prev : cur;\r\n    }, 0);\r\n\r\n    return (<_Wrap>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Cancel',\r\n                    isEnable: props.isModify,\r\n                    callback: () => {\r\n                        mapping();\r\n                        props.cancelAction();\r\n                    }\r\n                },\r\n                {\r\n                    label: !props.isModify ? 'Modify' : 'Regist',\r\n                    isEnable: !props.isModify || isInputOK,\r\n                    callback: () => {\r\n                        data.limitFrame = Number(frame.value);\r\n                        data.limitParticle = Number(particle.value);\r\n                        setStore({ ...store });\r\n                        props.modifyAction();\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Limit\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!props.isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkNumberRange(value, maxLimit, 1000),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Particle\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!props.isModify}\r\n                            isNumber\r\n                            checkable={particle}\r\n                            setCheckable={setParticle}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkNumberRange(value, 100, 5000),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </_Wrap>)\r\n}\r\n\r\nexport default LaunchEnvironment;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import { useContext, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { JsxEmit } from \"typescript\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport { Cache, LaunchDef, SeedBean } from \"./launcherTab\";\r\n\r\nconst ITEM_WIDTH = 10;\r\nconst DIV_CNT = 5;\r\n\r\nconst TimelineFrame = (props: {\r\n    newFrameValue: number;\r\n    setNewFrameValue: (num: number) => void;\r\n    isModify: boolean;\r\n    focus: number;\r\n    seedList: SeedBean[];\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const defList = store.launchData.defList;\r\n    const limitFrame = store.launchData.limitFrame;\r\n\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const defPosJsxList = useMemo(() => {\r\n\r\n        const newFrameRate = props.newFrameValue / limitFrame;\r\n        return defList.map((def, i) => {\r\n            const rate = props.isModify && props.focus === i ? newFrameRate : def.frame / limitFrame;\r\n            const x = rate * 100;\r\n            const y = 5 + i * (ITEM_WIDTH + 3);\r\n            const cache = store.launchCacheList.find(cache => cache.seq === def.seq) as Cache;\r\n            const sus = cache.useFrame / limitFrame * 100;\r\n            return (<div key={i}>\r\n                {props.isModify && props.focus === i ? (\r\n                    <_Line x={x} />\r\n                ) : <></>}\r\n                <_Item\r\n                    x={x} y={y}\r\n                    isFocus={i === props.focus}\r\n                />\r\n                <_Sustain\r\n                    x={x}\r\n                    y={y}\r\n                    sus={sus}\r\n                />\r\n            </div>);\r\n        });\r\n    }, [limitFrame, props.focus, defList, props.isModify, props.newFrameValue]);\r\n\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i < DIV_CNT + 1; i++) {\r\n            const rate = i / DIV_CNT;\r\n            const value = Math.floor(limitFrame * rate);\r\n            jsxList.push(\r\n                <_Memori\r\n                    key={i}\r\n                    x={rate * 100}\r\n                >{value}</_Memori>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [limitFrame]);\r\n\r\n    return (<>\r\n        <_MeasureDiv>\r\n            {memoriJsxList}\r\n        </_MeasureDiv>\r\n        <_Wrap\r\n            ref={ref}\r\n            isModify={props.isModify}\r\n            onClick={(e) => {\r\n                if (!props.isModify) return;\r\n                if (ref != null) {\r\n                    const dom = ref.current as HTMLDivElement;\r\n                    const rect = dom.getBoundingClientRect();\r\n                    const pos = e.clientX - rect.x;\r\n                    const rate = pos / rect.width;\r\n                    const newFrame = Math.floor(limitFrame * rate);\r\n                    props.setNewFrameValue(newFrame);\r\n                }\r\n            }}>\r\n            {defPosJsxList}\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default TimelineFrame;\r\n\r\nconst MEASURE_WIDTH = 40;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #f2d9341a;\r\n    /* border-bottom: 3px solid #fff; */\r\n    box-sizing: border-box;\r\n    width: calc(100% - 36px);\r\n    height: ${MEASURE_WIDTH}px;\r\n    margin: 2px 0 0 18px;\r\n`;\r\nconst _Memori = styled.div<{\r\n    x: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* background-color: #ffffff31; */\r\n    width: 30px;\r\n    height: 20px;\r\n    left: calc(${props => props.x}% - 18px);\r\n    bottom: 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Wrap = styled.div<{\r\n    isModify: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b3d0b937;\r\n    /* border: 1px solid #ffffff4c; */\r\n    ${props => !props.isModify ? '' : css`\r\n        background-color: #ff000049;\r\n    `}\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 36px);\r\n    height: calc(100% - ${MEASURE_WIDTH + 8}px);\r\n    margin: 2px 0 0 18px;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #ffffff8d;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #ffb222;\r\n    `}\r\n    /* border: solid 1px #000000; */\r\n    border-radius: ${ITEM_WIDTH}px;\r\n    width: ${ITEM_WIDTH}px;\r\n    height: ${ITEM_WIDTH}px;\r\n    left: calc(${props => props.x}% - ${ITEM_WIDTH / 2}px);\r\n    top: ${props => props.y}px;\r\n`;\r\nconst _Sustain = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    sus: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #bfffb324;\r\n    /* border: solid 1px #000000; */\r\n    /* border-radius: ${ITEM_WIDTH}px; */\r\n    width: ${props => props.sus}%;\r\n    height: ${ITEM_WIDTH / 2}px;\r\n    left: calc(${props => props.x}%);\r\n    top: calc(${props => props.y}px + ${ITEM_WIDTH / 4}px);\r\n`;\r\nconst _Line = styled.div<{\r\n    x: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #ff0000f0;\r\n    left: ${props => props.x}%;\r\n    top: 0;\r\n    width: 1px;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\n\r\nnamespace PreviewLauncherFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        sceens: string[];\r\n        frameCnt: number;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const sceens = props.sceens;\r\n        const frameCnt = props.frameCnt;\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                        } break;\r\n                        case 'ArrowRight': {\r\n                            if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                        } break;\r\n                        case ' ': {\r\n                            setPlay(!isPlay);\r\n                        } break;\r\n                    }\r\n                    if (e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }}\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Play', enable: true, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLauncherFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #aed5d8e0;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport LaunchAnalysis from \"./tab/launchAnalysis\";\r\nimport LaunchProperty from \"./tab/launchProperty\";\r\nimport LaunchEnvironment from \"./tab/launchEnvironment\";\r\nimport TimelineFrame from \"./timelineFrame\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport PreviewUtil from \"../preview/previewUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport PreviewLauncherFrame from \"../preview/previewLauncherFrame\";\r\n\r\nexport type LaunchData = {\r\n    limitFrame: number;\r\n    limitParticle: number;\r\n    defList: LaunchDef[];\r\n}\r\n\r\nexport type LaunchDef = {\r\n    seq: number;\r\n    frame: number;\r\n    seedId: string;\r\n    values: number[];\r\n};\r\n\r\nexport type Cache = {\r\n    seq: number;\r\n    thumbList: { url: string, name: string }[];\r\n    useFrame: number;\r\n};\r\n\r\nexport type SeedBean = {\r\n    name: string;\r\n    args: LogicUtil.NodeSeedArgItem[];\r\n    formgrps: LogicUtil.NodeFromGrpItem[];\r\n    presets: LogicUtil.NodeSampleItem[];\r\n};\r\n\r\nconst LauncherTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const limitFrame = store.launchData.limitFrame;\r\n    const limitParticle = store.launchData.limitParticle;\r\n\r\n    const [newFrame, setNewFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [defList, setDefList] = useState<LaunchDef[]>([]);\r\n    const [isDefEdit, setDefEdit] = useState<boolean>(false);\r\n    const [isEnvEdit, setEnvEdit] = useState<boolean>(false);\r\n    const [tabActiveIndex, setTabActiveIndex] = useState<number>(0);\r\n    const [focus, setFocus] = useState<number>(-1);\r\n\r\n    const defList = store.launchData.defList;\r\n\r\n    const setDefList = (defList: LaunchDef[]) => {\r\n        store.launchData.defList = defList;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const seedList: SeedBean[] = useMemo(() => {\r\n        if (store.logicData == null) return [];\r\n        const root = store.logicData.data as LogicUtil.NodeRoot;\r\n        const seedWrapList = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        return seedWrapList.map(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n\r\n            // 引数リストを取得\r\n            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const args = argMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n\r\n            // フォームグループリストを取得\r\n            const groupMng = LogicElementUtil.getInnerWrap(wrap, 'interface-mng', 'formgrp-mng');\r\n            let formgrps: LogicUtil.NodeFromGrpItem[] = [];\r\n            if (groupMng != null) {\r\n                formgrps = (groupMng.data as LogicUtil.NodeFromgrpManager).defines.map(wrap => wrap.data as LogicUtil.NodeFromGrpItem);\r\n            }\r\n\r\n            // プリセットリストを取得\r\n            const sampleMng = LogicElementUtil.getInnerWrap(wrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n            const presets = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n            return {\r\n                name: seed.name,\r\n                args, formgrps, presets\r\n            }\r\n        });\r\n    }, [store.logicData]);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [defList]);\r\n\r\n    const createSeq = () => {\r\n        return defList\r\n            .map(def => def.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    const add = () => {\r\n        const seq = createSeq();\r\n        defList.push({ seq, frame: 0, seedId: '', values: [] });\r\n        setDefList(defList.slice());\r\n        setFocus(defList.length - 1);\r\n        store.launchCacheList.push({ seq, thumbList: [], useFrame: 0 });\r\n        setTabActiveIndex(2);\r\n        setDefEdit(true);\r\n    }\r\n\r\n    const defJsxList = useMemo(() => {\r\n        return defList.map((def, i) => {\r\n\r\n            const cache = store.launchCacheList.find(cache => cache.seq === def.seq);\r\n\r\n            let thumbJsx: JSX.Element[] = [];\r\n            if (cache != undefined) {\r\n                thumbJsx = cache.thumbList.slice(0, 3).map((thumb, j) => {\r\n                    const imgJsx = thumb == undefined ? <></> : <_IMG src={thumb.url} />;\r\n                    return (\r\n                        <_SampleDiv key={j}>-\r\n                            <_SampleName>{thumb.name}</_SampleName>\r\n                            <_CanvasDiv>\r\n                                {imgJsx}\r\n                            </_CanvasDiv>\r\n                        </_SampleDiv>\r\n                    );\r\n                });\r\n            };\r\n            return (\r\n                <_ItemDiv key={i}\r\n                    isEnable={!isDefEdit || focus === i}\r\n                >\r\n                    <_ItemFrame isFocus={i === focus}\r\n                        onClick={() => {\r\n                            setFocus(i);\r\n                        }}\r\n                    >\r\n                        {def.seedId === '' ? (\r\n                            <_PropRecord>Creating...</_PropRecord>\r\n                        ) : (<>\r\n                            <_FrameRecord>{def.frame}</_FrameRecord>\r\n                            {/* <_SeedRecord>{def.seedName}: {def.seq}</_SeedRecord> */}\r\n                            <_SeedRecord>{def.seedId}</_SeedRecord>\r\n                            <_ThumbFrame>\r\n                                {thumbJsx}\r\n                            </_ThumbFrame>\r\n                            {def.values.map((val, j) => {\r\n                                const seedBean = seedList.find(seed => seed.name === def.seedId) as SeedBean;\r\n                                const name = seedBean.args[j].name;\r\n                                return (\r\n                                    <_PropRecord key={j}><_Title>{name}: </_Title>{val}</_PropRecord>\r\n                                );\r\n                            })}\r\n                        </>)}\r\n                    </_ItemFrame>\r\n                </_ItemDiv>\r\n            );\r\n        });\r\n    }, [defList, focus, isDefEdit]);\r\n\r\n    /**\r\n     * プレビューオールダイアログを表示する\r\n     */\r\n    const openPreviewAllDialog = () => {\r\n        const minFrame = defList[0].frame;\r\n        const logicData = store.logicData as LogicUtil.WrapElement;\r\n        const sceens: string[] = [];\r\n        let useFrame: number = 0;\r\n        console.log(limitFrame);\r\n        PreviewUtil.runParticleLogic({\r\n            limitFrame,\r\n            limitParticle,\r\n            guaranteeFrame: minFrame,\r\n            doIterate: (frame, owner) => {\r\n\r\n                defList.some(def => {\r\n                    if (def.frame === frame) {\r\n                        LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                    } else if (def.frame > frame) return 1;\r\n                });\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                }));\r\n            },\r\n            doEnd: (frame) => {\r\n                useFrame = frame;\r\n            }\r\n        });\r\n        store.system.dialog = (\r\n            <PreviewLauncherFrame.Component\r\n                sceens={sceens}\r\n                frameCnt={useFrame}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * プレビューソロダイアログを表示する\r\n     */\r\n    const openPreviewSoloDialog = () => {\r\n        const logicData = store.logicData as LogicUtil.WrapElement;\r\n        const sceens: string[] = [];\r\n        let useFrame: number = 0;\r\n        PreviewUtil.runParticleLogic({\r\n            limitFrame,\r\n            limitParticle,\r\n            doIterate: (frame, owner) => {\r\n\r\n                const def = defList[focus];\r\n                if (frame === 0) {\r\n                    LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                }\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                }));\r\n            },\r\n            doEnd: (frame) => {\r\n                useFrame = frame;\r\n            }\r\n        });\r\n        store.system.dialog = (\r\n            <PreviewLauncherFrame.Component\r\n                sceens={sceens}\r\n                frameCnt={useFrame}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const updateCache = (def: LaunchDef, cache: Cache) => {\r\n\r\n        const logicData = store.logicData as LogicUtil.WrapElement;\r\n        cache.thumbList = [];\r\n        cache.useFrame = 0;\r\n        const seedProps = LogicElementUtil.getSeedProperties(logicData, def.seedId);\r\n        PreviewUtil.runParticleLogic({\r\n            limitFrame,\r\n            limitParticle,\r\n            doIterate: (frame, owner) => {\r\n                if (frame === 0) {\r\n                    LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                }\r\n\r\n                const thumb = seedProps.thumbnailList.find(thumb => thumb.frame === frame);\r\n                if (thumb != undefined) {\r\n                    const url = CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    });\r\n                    cache.thumbList.push({ name: thumb.name, url });\r\n                }\r\n            },\r\n            doEnd: (frame) => {\r\n                cache.useFrame = frame;\r\n            }\r\n        });\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const isCreate = defList.length === 0 ? false : defList[defList.length - 1].seedId === '';\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n        >\r\n            <_ListDiv>\r\n                <_ListHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview All',\r\n                                isEnable: !isDefEdit,\r\n                                callback: openPreviewAllDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_ListHead>\r\n                <_ListHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Add',\r\n                                isEnable: !isDefEdit,\r\n                                callback: add\r\n                            },\r\n                            {\r\n                                label: 'Delete',\r\n                                isEnable: !isDefEdit && focus != -1,\r\n                                callback: () => {\r\n                                    defList.splice(focus, 1);\r\n                                    setDefList(defList.slice());\r\n                                    if (focus > 0) {\r\n                                        setFocus(focus - 1);\r\n                                    } else if (focus === 0 && defList.length === 0) {\r\n                                        setFocus(-1);\r\n                                        setTabActiveIndex(0);\r\n                                    }\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Replicate',\r\n                                isEnable: !isDefEdit && focus != -1,\r\n                                callback: () => {\r\n                                    const cloneDef = JSON.parse(JSON.stringify(defList[focus])) as LaunchDef;\r\n                                    const newSeq = createSeq();\r\n                                    cloneDef.seq = newSeq;\r\n                                    defList.splice(focus, 0, cloneDef);\r\n                                    setDefList(defList.slice());\r\n                                    setFocus(focus + 1);\r\n\r\n                                    // const baseCache = store.launchCacheList.find(cache => cache.seq === defList[focus].seq) as Cache;\r\n                                    // console.log(baseCache);\r\n                                    // const cloneCache = JSON.parse(JSON.stringify(baseCache)) as Cache;\r\n                                    // cloneCache.seq = newSeq;\r\n                                    const newCache: Cache = { seq: newSeq, thumbList: [], useFrame: 0 };\r\n                                    updateCache(cloneDef, newCache);\r\n                                    store.launchCacheList.push(newCache);\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Preview Solo',\r\n                                isEnable: !isDefEdit && focus != -1,\r\n                                callback: openPreviewSoloDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_ListHead>\r\n                <_ListBody>\r\n                    <_Timeline><TimelineFrame\r\n                        newFrameValue={Number(newFrame.value)}\r\n                        setNewFrameValue={(num: number) => {\r\n                            setNewFrame({ ...newFrame, value: num.toString() })\r\n                        }}\r\n                        isModify={isDefEdit}\r\n                        focus={focus}\r\n                        seedList={seedList}\r\n                    /></_Timeline>\r\n                    <_ListMain>\r\n                        {defJsxList}\r\n                    </_ListMain>\r\n                </_ListBody>\r\n            </_ListDiv>\r\n            <_RightDiv>\r\n                <_RightInner>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            {\r\n                                name: 'Environment', enable: !isDefEdit, cont: <LaunchEnvironment\r\n                                    isModify={isEnvEdit}\r\n                                    cancelAction={() => {\r\n                                        setEnvEdit(false);\r\n                                    }}\r\n                                    modifyAction={() => {\r\n                                        if (!isEnvEdit) {\r\n                                            setEnvEdit(true);\r\n                                        } else {\r\n                                            setEnvEdit(false);\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            },\r\n                            { name: 'Analysis', enable: !isDefEdit && !isEnvEdit, cont: <LaunchAnalysis /> },\r\n                            {\r\n                                name: 'Property', enable: !isEnvEdit && focus != -1, cont: <LaunchProperty\r\n                                    newFrame={newFrame}\r\n                                    setNewFrame={setNewFrame}\r\n                                    defBean={defList[focus]}\r\n                                    seedList={seedList}\r\n                                    isModify={isDefEdit}\r\n                                    cancelAction={() => {\r\n                                        setDefEdit(false);\r\n                                        if (isCreate) {\r\n                                            defList.splice(defList.length - 1, 1);\r\n                                            setDefList(defList.slice());\r\n                                            setFocus(focus - 1);\r\n                                            if (defList.length === 0) {\r\n                                                setTabActiveIndex(0);\r\n                                            }\r\n                                        }\r\n                                    }}\r\n                                    modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                        if (!isDefEdit) {\r\n                                            setDefEdit(true);\r\n                                        } else {\r\n                                            const def = defList[focus];\r\n                                            def.frame = frame;\r\n                                            def.seedId = seedId;\r\n                                            def.values = values;\r\n                                            const seq = def.seq;\r\n                                            const cache = store.launchCacheList.find(cache => cache.seq === seq) as Cache;\r\n                                            updateCache(def, cache);\r\n                                            defList.sort((a, b) => {\r\n                                                return a.frame - b.frame;\r\n                                            });\r\n                                            setDefList(defList.slice());\r\n                                            setFocus(defList.findIndex(def => def.seq === seq));\r\n                                            setDefEdit(false);\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            }\r\n                        ]}\r\n                        selectTabIndex={setTabActiveIndex}\r\n                        activeNo={tabActiveIndex}\r\n                    />\r\n                </_RightInner>\r\n            </_RightDiv>\r\n            {/* <_Blind isVisible={isBackingWnd}>\r\n                    <_Contents>{!isBackingWnd ? <></> : <BackingEditorFrame />}</_Contents>\r\n                </_Blind> */}\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default LauncherTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #1e1c22;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _ListDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #653fd6; */\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst LIST_HEAD = 40;\r\nconst TIMELINE_WIDTH = 240;\r\n\r\nconst _ListHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d8;\r\n    width: 100%;\r\n    height: ${LIST_HEAD}px;\r\n`;\r\n\r\nconst _ListBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: calc(100% - ${LIST_HEAD * 2}px);\r\n`;\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #00071b;\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: ${TIMELINE_WIDTH}px;\r\n`;\r\nconst _ListMain = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #c551b6; */\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: calc(100% - ${TIMELINE_WIDTH}px);\r\n    overflow-x: auto;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _RightDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c1c0c4;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\nconst _RightInner = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n`;\r\n\r\nconst _TabContWrap = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 630px;\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    /* opacity: 0.9; */\r\n    overflow: hidden;\r\n`;\r\n\r\n\r\nconst _ItemDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    background: linear-gradient(to right, #3a383d, #8d8999, #3a383d);\r\n    vertical-align: top;\r\n    width: 220px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n    background: linear-gradient(to right, #66626b, #b7b2c7, #66626b);\r\n    }\r\n`;\r\n\r\nconst _ItemFrame = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #8997bd29;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #d7eb7d83;\r\n    `}\r\n    border: 1px solid #2c3577;\r\n    border-radius: 2px;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _PropRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    /* margin-top: 1px; */\r\n    height: 24px;\r\n    /* background: linear-gradient(to bottom, #aaaaaa89, #e1e1e18a, #aaaaaa89); */\r\n    /* font-size: 20px; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #555555;\r\n    font-style: italic;\r\n    line-height: 22px;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Title = styled.span`\r\n    color: #f00;\r\n`;\r\n\r\n\r\nconst _FrameRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    height: 35px;\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    color: #132693;\r\n    font-style: italic;\r\n    line-height: 34px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\nconst _SeedRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    height: 35px;\r\n    font-size: 26px;\r\n    font-style: italic;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    line-height: 34px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ThumbFrame = styled.div<{}>`\r\n    display: inline-block;\r\n    /* background-color: #4b09ff; */\r\n    width: 100%;\r\n`;\r\nconst WND_SIZE = 65;\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport LogicMainteTab from \"./factory/logicMainteTab\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport PreviewTab from \"./manage/manageTab\";\r\nimport LauncherTab from \"./launcher/launcherTab\";\r\nimport Timeline from \"./launcher/launcherTab\";\r\n\r\n\r\nconst CreateChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const hasData = store.logicData != null;\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', enable: true, cont: <ManageTab /> },\r\n                    { name: 'Launcher', enable: hasData, cont: <LauncherTab /> },\r\n                    { name: 'Library', enable: hasData, cont: <LogicMainteTab /> }\r\n                ]}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CreateChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { Redirect } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst DirectView = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const conteseq = DataUtil.getDecryptionedScoreSeq(props.hashKey);\r\n\r\n    // const setScoreData = (owner: string, dispnam: string, data: ScoreData) => {\r\n    //     store.scoreState.focusIndex = 2;\r\n    //     store.scoreState.distIndex = store.scoreState.focusIndex;\r\n    //     dispatcher.score.setScoreState({ ...store.scoreState });\r\n    //     // dispatcher.score.setScoreTabIndex(1);\r\n    //     dispatcher.score.setScoreData(data);\r\n    //     // キャッシュの更新\r\n    //     store.scoreData = data;\r\n    //     CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    //     store.systemState.mainChannelIndex = 5;\r\n    //     store.systemState.scoreTabIndex = 0;\r\n    //     store.systemState.directScore = {\r\n    //         owner, name: dispnam\r\n    //     };\r\n    //     dispatcher.system.setState(store.systemState);\r\n    // };\r\n\r\n    useEffect(() => {\r\n        // DataUtil.findScore(conteseq).then(resList => {\r\n        //     if (resList.length > 0) {\r\n        //         const source = resList[0]['data'];\r\n        //         const owner = resList[0]['owner'];\r\n        //         const dispnam = resList[0]['dispnam'];\r\n        //         const text = DataUtil.unZip(source);\r\n        //         setScoreData(owner, dispnam, JSON.parse(text));\r\n        //     }\r\n        // });\r\n    }, []);\r\n    // if (store.systemState.directScore == null) {\r\n    //     return <></>;\r\n    // } else {\r\n    //     return <Redirect to=\"/\" />;\r\n    //     // return <MainFrame />;\r\n    // }\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nexport default DirectView;","import { Redirect } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst DirectLogin = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        const seq = DataUtil.getDecryptionedUserSeq(props.hashKey);\r\n        console.log(seq);\r\n        DataUtil.findUserInfoFromSeq(seq).then(resList => {\r\n            console.log(resList);\r\n            if (resList.length > 0) {\r\n                const loginProps = resList[0];\r\n                // store.userEnv.login = loginProps;\r\n                // dispatcher.system.setUserEnv(store.userEnv);\r\n            }\r\n        });\r\n    }, []);\r\n    // if (store.userEnv.login == null) {\r\n    //     return <></>;\r\n    // } else {\r\n    //     return <Redirect to=\"/\" />;\r\n    //     // return <MainFrame />;\r\n    // }\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nexport default DirectLogin;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport TreeUtil from \"../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../create/factory/util/logicUtil\";\r\nimport PreviewLogicFrame from \"../create/preview/previewLogicFrame\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    isOpen: boolean;\r\n    seedList: SeedProps[];\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\n\r\nconst PublishFrame = (props: {\r\n    setLibCnt: (artsCnt: number) => void;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [libList, setLibList] = useState<LibProps[]>([]);\r\n\r\n    useEffect(() => {\r\n        findAllReleaseProjectList().then((resList) => {\r\n            const libList: LibProps[] = [];\r\n            resList.forEach(res => {\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const rootData = JSON.parse(DataUtil.unZip(res.source)) as LogicUtil.WrapElement;\r\n                const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                const seedList: SeedProps[] = seedMng.defs\r\n                    .filter(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        return seed.permit === 'release';\r\n                    })\r\n                    .map(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                        const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                        return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                    });\r\n                libList.push({\r\n                    name, ownerId, lastmod, rootData, seedList, isOpen: false\r\n                });\r\n            });\r\n            setLibList(libList);\r\n            props.setLibCnt(libList.length);\r\n        });\r\n    }, []);\r\n\r\n    const download = (plainData: string) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        window.showSaveFilePicker(options).then((handle) => {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await handle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"Successfully download!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        }).catch(() => {\r\n            console.log('キャンセルされました');\r\n        });\r\n    }\r\n\r\n    const libListJsx = libList\r\n        .filter(lib => lib.seedList.length > 0).map((lib, i) => {\r\n            const dispCnt = !lib.isOpen ? 0 : lib.seedList.length;\r\n            return (<_Item key={i} count={dispCnt}>\r\n                <_Header onClick={() => {\r\n                    // window.open(DataUtil.getPreviewURL(score.seq), '_blank');\r\n                }}>\r\n                    <_Owner>{`${lib.ownerId}`}</_Owner>\r\n                    <_CName onClick={() => {\r\n                        download(JSON.stringify(lib.rootData));\r\n                    }}>{`${lib.name}`}</_CName><_CDate>{lib.lastmod}</_CDate>\r\n                </_Header>\r\n                <_DetailMain count={dispCnt}>\r\n                    {lib.seedList.map((seed, j) => {\r\n                        let labelName = seed.name;\r\n                        if (seed.disp != undefined) labelName = seed.disp;\r\n                        return (\r\n                            <_SeedItemFrame key={j} onClick={() => {\r\n                                store.system.dialog = (\r\n                                    <PreviewLogicFrame.Component\r\n                                        master={seed.master}\r\n                                        rootData={lib.rootData}\r\n                                    />\r\n                                );\r\n                                setStore({ ...store });\r\n                            }}>\r\n                                <_SeedItemInner>\r\n                                    <_SeedName>{labelName}</_SeedName>\r\n                                    <_SeedArgCnt>{` [${seed.argCount} arguments]`}</_SeedArgCnt>\r\n                                </_SeedItemInner>\r\n                            </_SeedItemFrame>\r\n                        );\r\n                    })}\r\n                </_DetailMain>\r\n                <_DetailOpen onClick={() => {\r\n                    libList[i].isOpen = !libList[i].isOpen;\r\n                    setLibList(libList.slice());\r\n                }}>\r\n                    <_CSummary>{` ${lib.seedList.length} seeds ▼`}</_CSummary>\r\n                </_DetailOpen>\r\n            </_Item>);\r\n        });\r\n\r\n    return (\r\n        <_ListFrame>{libListJsx}</_ListFrame>\r\n    );\r\n}\r\n\r\nexport default PublishFrame;\r\n\r\nexport const findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #929292;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst SEED_HEIGTH = 40;\r\nconst _Item = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${props => (props.count > 0 ? 8 : 0) + 89 + props.count * SEED_HEIGTH}px;\r\n    /* border-bottom: 1px solid #262626; */\r\n    /* background-color: #2e2e2e; */\r\n    /* background: linear-gradient(to bottom, transparent, #4f4f4f); */\r\n    margin: 2px 0 0 0;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    } */\r\n    transition: height 200ms;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100%);\r\n    height: 60px;\r\n    /* background-color: #c9e3df; */\r\n    background: linear-gradient(to bottom, #c2d5d2, #d9ebe9, #c2d5d2);\r\n    /* margin: 4px 0 0 4px; */\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff);\r\n    } */\r\n`;\r\nconst _DetailMain = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 40px);\r\n    height: ${props => (props.count > 0 ? 8 : 0) + props.count * SEED_HEIGTH}px;\r\n    background-color: #9cc0b1;\r\n    border-radius: 0 0 2px 2px;\r\n    margin: 0 0 0 20px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    transition: height 200ms;\r\n    overflow-y: hidden;\r\n`;\r\nconst _DetailOpen = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 240px);\r\n    height: 25px;\r\n    margin: 0 0 0 120px;\r\n    background-color: #9cc0b1;\r\n    border-radius: 0 0 2px 2px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    &:hover {\r\n        background-color: #c6d1a1;\r\n    }\r\n`;\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    \r\n    &:hover {\r\n        color: #db3333;\r\n    }\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CSummary = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 25px;\r\n    font-size: 22px;\r\n    line-height: 22px;\r\n    font-weight: 600;\r\n    color: #fffffad6;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _SeedItemFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${SEED_HEIGTH}px;\r\n    /* background-color: #a3b9c0; */\r\n    margin: 2px 0 0 0;\r\n    /* padding-left: 4px; */\r\n    text-align: left;\r\n`;\r\nconst _SeedItemInner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 2px;\r\n    border: 1px solid #0000002e;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    line-height: 29px;\r\n    font-weight: 600;\r\n    padding: 0 0 0 5px;\r\n    &:hover {\r\n        background-color: #bbd4dc;\r\n    }\r\n`;\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #000f74;\r\n`;\r\nconst _SeedArgCnt = styled.span<{\r\n}>`\r\n    color: #c7020265;\r\n`;","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\ntype NotePorp = {\r\n    version: string;\r\n    date: string;\r\n    note: string;\r\n}\r\n\r\nconst ReleaseNote = () => {\r\n    const { store } = useContext(GlobalContext);\r\n\r\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\r\n    useEffect(() => {\r\n        fetch('assets/release_note.json')\r\n            .then(response => response.json()) // (2) レスポンスデータを取得\r\n            .then(json => { // (3)レスポンスデータを処理\r\n                const list = json as NotePorp[];\r\n                setJsx(list.map((item, i) => {\r\n                    const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n                    return (\r\n                        <_Item key={i}>\r\n                            <_Header>v{item.version} ({item.date})</_Header>\r\n                            <_Detail>{record}</_Detail>\r\n                        </_Item>\r\n                    );\r\n                }));\r\n            });\r\n    }, []);\r\n    return (<_ListFrame>{jsx}</_ListFrame>);\r\n}\r\n\r\nexport default ReleaseNote;\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    /* height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px); */\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #bfcace;\r\n    border: 1px solid #9b9b9b;\r\n    border-radius: 6px;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    font-weight: 600;\r\n    /* background-color: #8bdbf8; */\r\n    color: #494975;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    /* background-color: #dafce4; */\r\n    color: #754949;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PublishFrame from \"./publishFrame\";\r\nimport ReleaseNote from \"./releaseNote\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [userCount, setUserCount] = useState(0);\r\n    const [artsCnt, setArtsCnt] = useState(0);\r\n\r\n    useEffect(() => {\r\n        countUsers().then(cnt => {\r\n            setUserCount(cnt);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <ReleaseNote />\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{artsCnt} libruary have been published.</_MessageRecord>\r\n            <PublishFrame setLibCnt={setArtsCnt}/>\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeChannel;\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nexport const findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT seq, (select id from user_tbl where seq = prj.seq) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { CgOptions, CgPiano } from 'react-icons/cg';\r\nimport { VscGitPullRequestCreate } from 'react-icons/vsc';\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport CreateChannel from \"../create/createChannel\";\r\nimport DirectView from \"./directView\";\r\nimport DirectLogin from \"./directLogin\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <_Wrap>\r\n                    <ChannelPane\r\n                        tabElements={[\r\n                            { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <HomeChannel /> },\r\n                            { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <CreateChannel/> },\r\n                        ]}\r\n                        activeNo={0}\r\n                    // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n                    />\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/test\" exact >\r\n                <_Wrap>\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/preview\" exact >\r\n                <DirectView hashKey={str} />\r\n            </Route>\r\n            <Route path=\"/user\" exact >\r\n                <DirectLogin hashKey={str} />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <span>L</span>iCreSia\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2022 Licresia All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#868686, #ffffff);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #636363;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport StoreSystem from \"../../redux/store/storeSystem\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../utils/form/validateUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst WIDTH = 750;\r\nconst HEIGHT = 600;\r\n/**\r\n * アカウントフレームのコンポーネント\r\n * @returns \r\n */\r\nconst AccountFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [oldPass, setOldPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPass, setNewPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPassConfirm, setNewPassConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n    const [emailList, setEmailList] = useState<string[]>([]);\r\n\r\n    const [isModify, setModify] = useState(false);\r\n    const loginProps = store.system.user as StoreSystem.User;\r\n\r\n    const reloadInfo = () => {\r\n        setUserId({ ...userId, value: loginProps.id });\r\n        setNewPass({ ...newPass, value: '' });\r\n        setNewPassConfirm({ ...newPassConfirm, value: '' });\r\n        setEmail({ ...email, value: loginProps.email });\r\n        setOldPass({ ...oldPass, value: loginProps.password });\r\n    }\r\n\r\n    useEffect(() => {\r\n        DataUtil.findUserInfoList().then(list => {\r\n\r\n            const userIdList: string[] = [];\r\n            const emailList: string[] = [];\r\n            list.forEach(info => {\r\n                if (info.id !== loginProps.id) userIdList.push(info.id);\r\n                if (info.email !== '') emailList.push(info.email);\r\n            });\r\n            setUserIdList(userIdList);\r\n            setEmailList(emailList);\r\n        });\r\n\r\n        const hash = DataUtil.getHashedFromUserSeq(loginProps.seq);\r\n\r\n        // ユーザページのURLに変更する。\r\n        window.history.replaceState('', '', `/#/user?v=${hash}`);\r\n\r\n        reloadInfo();\r\n\r\n        // 閉じる際にURLを元に戻す\r\n        return () => {\r\n            // alert('destroy');\r\n            window.history.replaceState('', '', `/#/`);\r\n        }\r\n    }, []);\r\n\r\n    const userTabJsx: JSX.Element = (\r\n        <_Wrap>\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'user id'}\r\n                checkable={userId}\r\n                setCheckable={setUserId}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !userIdList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass'}\r\n                isPassword\r\n                checkable={newPass}\r\n                setCheckable={setNewPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPassConfirm.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPassConfirm]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass*'}\r\n                isPassword\r\n                checkable={newPassConfirm}\r\n                setCheckable={setNewPassConfirm}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPass.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPass]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'email'}\r\n                checkable={email}\r\n                setCheckable={setEmail}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => {\r\n                            return value.length === 0 || value.split('@').length === 2;\r\n                        },\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !emailList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                // width={500}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'old pass'}\r\n                isPassword\r\n                checkable={oldPass}\r\n                setCheckable={setOldPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => value === loginProps.password,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                // dependency={[passwordConfirm]}\r\n                width={300}\r\n                marginTop={55}\r\n                isReadOnly={!isModify}\r\n            />\r\n        </_Wrap>\r\n    );\r\n\r\n    // 登録ボタンの活性状態\r\n    const permitRegist = (\r\n        userId.errors.length === 0\r\n        && newPass.errors.length === 0\r\n        && newPassConfirm.errors.length === 0\r\n        && email.errors.length === 0\r\n        && oldPass.errors.length === 0\r\n    );\r\n\r\n    const updateUserInfo = () => {\r\n        const passwordStr = newPass.value.length === 0 ? '' : `,password = '${newPass.value}'`;\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `UPDATE user_tbl SET id = '${userId.value}', email = '${email.value}'${passwordStr}\r\n            WHERE seq = ${loginProps?.seq}`\r\n        ).then(() => {\r\n            loginProps.id = userId.value;\r\n            if (newPass.value.length > 0) {\r\n                loginProps.password = newPass.value;\r\n            }\r\n            loginProps.email = email.value;\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Modify successful!\" />;\r\n            setStore({...store});\r\n        });\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <FormUtil.Message\r\n                    message=\"If you bookmark this page, you can easily login by URL.\"\r\n                />\r\n            </_Header>\r\n            <_Body>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'User', enable: true, cont: userTabJsx },\r\n                        { name: 'Security', enable: false, cont: <></> },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_Body>\r\n            <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        {\r\n                            label: 'Close',\r\n                            callback: () => {\r\n                                // dispatcher.system.closeDialog();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Cancel',\r\n                            isEnable: isModify,\r\n                            callback: () => {\r\n                                setModify(false);\r\n                                reloadInfo();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isModify ? 'Modify' : 'Regist',\r\n                            isEnable: !isModify || permitRegist,\r\n                            callback: () => {\r\n                                if (!isModify) {\r\n                                    setModify(true);\r\n                                    setOldPass({ ...oldPass, value: '' });\r\n                                }\r\n                                else {\r\n                                    updateUserInfo();\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\n\r\nexport default AccountFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7eb;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    /* text-align: center; */\r\n`;\r\nconst _Body = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 100px);\r\n    padding: 4px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport AccountFrame from \"../accountFrame\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginCreateAccount = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isRegist, setRegist] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [passwordConfirm, setPasswordConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n\r\n    const createAuthText = () => {\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n        const list = '0123456789';\r\n        let text = '';\r\n        for (let i = 0; i < 6; i++) {\r\n            text += list.charAt(Math.random() * list.length);\r\n        }\r\n        return text;\r\n    };\r\n\r\n    /** 既存のユーザIDリストを格納 */\r\n    useEffect(() => {\r\n        DataUtil.findUserIdList().then(list => {\r\n            setUserIdList(list);\r\n        });\r\n\r\n        // fetch('https://api.ipify.org/?format=json').then(res => {\r\n        //     res.json().then(data => {\r\n        //         alert(data['ip']);\r\n        //     });\r\n        // });\r\n    }, []);\r\n\r\n    const [authCollation, setAuthCollation] = useState<string>(createAuthText());\r\n    const [authInput, setAuthInput] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    /** キャッシュした認証画像 */\r\n    const authPicture = useMemo(() => {\r\n        return CanvasUtil.getAuthTextURL(authCollation);\r\n\r\n    }, [authCollation]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n                case 'relation': list.push('[password] does not match confirm.'); break;\r\n            }\r\n        }\r\n        if (passwordConfirm.errors.length > 0) {\r\n            switch (passwordConfirm.errors[0]) {\r\n                case 'length': list.push('[password *] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    const registAction = () => {\r\n\r\n        (async () => {\r\n            let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n            let results = await response.json();\r\n            console.log(JSON.stringify(results[0].cnt));\r\n            const isExist = results[0].cnt > 0;\r\n            if (isExist) {\r\n                setMessageList(['That user id has already been recorded.']);\r\n            } else {\r\n                const nextSeq = await DataUtil.getNextUserSeq();\r\n                console.log(nextSeq);\r\n                await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(seq, id, password) VALUES(${nextSeq}, '${userId.value}', '${password.value}')`);\r\n                store.system.user = {\r\n                    seq: nextSeq,\r\n                    id: userId.value,\r\n                    password: password.value,\r\n                    email: '',\r\n                };\r\n                store.cloud = {\r\n                    projects: []\r\n                };\r\n                store.system.dialog = (<ConfirmDialog.Component\r\n                    message='You have successfully created an account!'\r\n                    buttons={[\r\n                        {\r\n                            label: 'OK',\r\n                            callback: () => {\r\n                                store.system.dialog = (<AccountFrame />);\r\n                                setStore({...store});\r\n                            }\r\n                        }\r\n                    ]}\r\n                />);\r\n                setStore({...store});\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0 && passwordConfirm.errors.length === 0;\r\n    }\r\n    const isAuthOK = () => {\r\n        return authInput.errors.length === 0 && authCollation === authInput.value;\r\n    }\r\n\r\n    return (<>\r\n\r\n        <_Frame isVisible={!isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass (Confirm).'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            },\r\n                            {\r\n                                checker: (value) => !userIdList.includes(value),\r\n                                errorType: \"relation\"\r\n                            },\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === passwordConfirm.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[passwordConfirm]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password*'}\r\n                        isPassword\r\n                        checkable={passwordConfirm}\r\n                        setCheckable={setPasswordConfirm}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === password.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[password]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Enter', isEnable: isLoginInfoOK(), callback: () => {\r\n                                    setRegist(true);\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Proof not a robot\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, input the same 6 number as the picture.'}\r\n                    />\r\n                    <_AuthText src={authPicture} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Change', callback: () => {\r\n                                    setAuthCollation(createAuthText());\r\n                                    setAuthInput({ value: '', errors: [] });\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                    {/* 照合する文字列 */}\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'6 numbers'}\r\n                        checkable={authInput}\r\n                        setCheckable={setAuthInput}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Regist', isEnable: isAuthOK(), callback: registAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setRegist(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginCreateAccount;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n\r\nconst _AuthText = styled.img<{\r\n}>`\r\n    display: block;\r\n    text-align: center;\r\n    margin: 4px auto;\r\n    background-color: #f7f0f0;\r\n    border: 1px solid #888888;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginLogin = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isForget, setForget] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        // alert(`Confirmation passwords don't match.`);\r\n        (async () => {\r\n            const results = await DataUtil.findUserInfoLogin(userId.value, password.value);\r\n            console.log(JSON.stringify(results));\r\n            if (results.length > 0) {\r\n                store.system.user = {\r\n                    seq: results[0].seq,\r\n                    id: results[0].id,\r\n                    password: results[0].password,\r\n                    email: results[0].email,\r\n                };\r\n                const resPrjList = await findUserProjectList(results[0].seq);\r\n                console.log(JSON.stringify(resPrjList));\r\n                store.cloud = {\r\n                    projects: resPrjList.map(res => ({\r\n                        source: res.source,\r\n                        name: res.name,\r\n                        seq: res.seq,\r\n                        lastmod: res.lastmod\r\n                    }))\r\n                };\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                    message=\"Login successful!\"\r\n                />;\r\n                setStore({ ...store });\r\n            } else {\r\n                setMessageList(['Incorrect user id or password.']);\r\n                // setPassword({ ...password, value: '' });\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0;\r\n    }\r\n\r\n    return (<>\r\n        <_Frame isVisible={!isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Enter', isEnable: isLoginInfoOK(), callback: enterAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Forgot your login information?\"\r\n                clickAction={() => {\r\n                    setForget(true);\r\n                }}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Email\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Submit login information to account address.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'email'}\r\n                        checkable={email}\r\n                        setCheckable={setEmail}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => {\r\n                                    return value.length === 0 || value.split('@').length === 2;\r\n                                },\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={500}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Send', isEnable: email.errors.length === 0, callback: () => {\r\n                                    DataUtil.findUserInfoFromEmail(email.value).then((list) => {\r\n                                        if (list.length > 0) {\r\n                                            const info = list[0];\r\n                                            const hash = DataUtil.getHashedFromUserSeq(info.seq);\r\n                                            const url = `https://demo-app.licresia.com/#/user?v=${hash}`;\r\n                                            DataUtil.sendQueryRequestToMailAPI({\r\n                                                from: 'info@licresia.com',\r\n                                                to: email.value,\r\n                                                subject: '【LiCreSia】support',\r\n                                                text: `Your login information is as follows.\\n\\nURL: ${url}\\nUSR ID: ${info.id}`\r\n                                            });\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"Your login information has been sent!\" />);\r\n                                        } else {\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"This email address is not registered.\" />);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setForget(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginLogin;\r\n\r\n\r\nexport const findUserProjectList = async (userSeq: number) => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT owner, seq, name, source, lastmod FROM prjcttbl WHERE owner = ${userSeq} order by seq`);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LoginCreateAccount from \"./loginCreateAccount\";\r\nimport LoginLogin from \"./loginLogin\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 500;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_LogoDiv>\r\n                <img src={logo} />\r\n            </_LogoDiv>\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {!isCreate ? <LoginLogin /> : <LoginCreateAccount />}\r\n            {/* <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        { name: 'Close', callback: closeAction },\r\n                        { name: 'Enter', callback: enterAction },\r\n                    ]}\r\n                />\r\n            </_Footer> */}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #bf808075;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n    background-color: #bf8080a2;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #c7a73e;\r\n        `}\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport LoginFrame from \"../dialog/login/loginFrame\";\r\nimport AccountFrame from \"../dialog/accountFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const user = store.system.user;\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (user != null) {\r\n            setUserId('@' + user.id);\r\n        }\r\n    }, [user]);\r\n\r\n    const authButtonJsx = user == null ? (\r\n        <_LoginButton onClick={() => {\r\n            store.system.dialog = <LoginFrame />;\r\n            setStore({ ...store });\r\n            console.log(window.location.origin);\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Login / Sign up\r\n        </_LoginButton>\r\n    ) : (<>\r\n        <_UserName\r\n            isEntry={user != null}\r\n            onClick={() => {\r\n                store.system.dialog = <AccountFrame />;\r\n                setStore({ ...store });\r\n            }}\r\n        >{userId}</_UserName>\r\n        <_LoginButton onClick={() => {\r\n            store.system.user = null;\r\n            store.cloud = null;\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message={'Logout.\\nSee you next time!'}\r\n            />;\r\n            setStore({ ...store });\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Logout\r\n        </_LoginButton>\r\n    </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Logo src={logo} />\r\n            <_Menu>\r\n                {authButtonJsx}\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    font-style: italic;\r\n    text-shadow: 1px 2px 3px #dbdbdb6a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #9fc2d1;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #ececec;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #9afff292;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #ff393983;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 180px;\r\n    height: 100%;\r\n    padding: 3px 0;\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { createContext, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    setStore: React.Dispatch<React.SetStateAction<Store>>;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, setStore] = useState(initialStore);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, setStore }}>\r\n            <>\r\n                {!store.system.isSplash ? <></> :\r\n                    <Splash\r\n                        remove={() => {\r\n                            setStore({...store, system: {\r\n                                ...store.system, isSplash: false\r\n                            }});\r\n                        }}\r\n                    />}\r\n                <_Wrap>\r\n                    <GloballDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #364887;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 18px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 22px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n"],"sourceRoot":""}