{"version":3,"sources":["system/base/design/styles.tsx","App.tsx","reportWebVitals.ts","index.tsx","system/contents/dialog/confirmDialog.tsx","system/utils/form/formUtiil.tsx","system/redux/store/store.tsx","system/utils/systemConst.tsx","system/contents/dialog/globalDialog.tsx","system/base/components/tab/tabbedPane.tsx","system/utils/canvasUtil.tsx","system/contents/graphic/particle.tsx","system/contents/graphic/drawUtil.tsx","system/contents/graphic/vectorUtil.tsx","system/contents/create/factory/util/paramUtil.tsx","system/contents/create/preview/modulateBuilder.tsx","system/contents/create/preview/previewUtil.tsx","system/utils/form/validateUtil.tsx","system/utils/treeUtil.tsx","system/contents/create/factory/logicMainteTab.tsx","system/contents/create/factory/detail/logic/editorArgumentMng.tsx","system/contents/create/factory/detail/common/modifyOperations.tsx","system/contents/create/factory/detail/logic/editorParamItem.tsx","system/contents/create/factory/detail/logic/editorArgumentItem.tsx","system/contents/create/factory/detail/seed/editorSeedMng.tsx","system/contents/create/factory/detail/logic/editorLogicMng.tsx","system/contents/create/factory/detail/logic/editorLogicItem.tsx","system/contents/create/factory/detail/logic/editorBehiviorMng.tsx","system/contents/create/factory/detail/logic/editorVisualMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnector.tsx","system/contents/create/factory/dialog/sendTemplateDialog.tsx","system/contents/create/factory/detail/logic/editorSendManager.tsx","system/contents/create/factory/detail/logic/editorFieldMng.tsx","system/contents/create/factory/detail/logic/editorExtendMng.tsx","system/contents/create/factory/detail/seed/editorSeedItem.tsx","system/contents/create/factory/detail/seed/editorThumbnailMng.tsx","system/contents/create/factory/detail/seed/editorThumbnailItem.tsx","system/contents/create/factory/util/logicFormUtil.tsx","system/contents/create/factory/detail/seed/editorSampleItem.tsx","system/contents/create/factory/detail/seed/editorSampleMng.tsx","system/contents/create/factory/detail/seed/editorInterfaceManager.tsx","system/contents/create/factory/detail/seed/editorSeedArgMng.tsx","system/contents/create/factory/detail/seed/editorSeedArgItem.tsx","system/contents/create/factory/detail/seed/editorSeedSendMng.tsx","system/contents/create/factory/detail/seed/editorFormgrpItem.tsx","system/contents/create/factory/detail/seed/editorFormgrpMng.tsx","system/contents/create/factory/util/logicUtil.tsx","system/contents/create/factory/util/logicElementUtil.tsx","system/contents/create/preview/inputForm/previewLogicInputForm.tsx","system/contents/create/preview/inputForm/previewSeedInputForm.tsx","system/contents/create/preview/previewLogicFrame.tsx","system/contents/mobile/directLinkManager.tsx","system/contents/mobile/mobileRoot.tsx","system/base/components/tab/channelPane.tsx","system/contents/create/manage/nameDefDialog.tsx","system/contents/create/manage/manageTab.tsx","system/contents/create/launcher/tab/launchAnalysis.tsx","system/contents/create/launcher/tab/launchProperty.tsx","system/contents/create/launcher/tab/launchEnvironment.tsx","system/contents/create/launcher/timelineFrame.tsx","system/contents/create/preview/previewLauncherFrame.tsx","system/contents/create/launcher/launcherTab.tsx","system/contents/create/createChannel.tsx","system/contents/home/publishFrame.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/dialog/accountFrame.tsx","system/contents/dialog/login/loginCreateAccount.tsx","system/contents/dialog/login/loginLogin.tsx","system/contents/dialog/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/directLogin.tsx","system/contents/entry/systemEntry.tsx","system/utils/dataUtil.tsx"],"names":["FONT_SMALL","FONT_MIDIUM","CSS_LABEL","css","Styles","styled","div","App","useEffect","document","oncontextmenu","onkeydown","e","ctrlKey","includes","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","ConfirmDialog","props","useContext","GlobalContext","store","setStore","width","height","buttons","label","callback","system","dialog","_Frame","_Main","_Inner","message","split","map","msg","i","Message","isCenter","ButtonRecord","align","FormUtil","checkables","result","forEach","checkable","errors","length","type","isPassword","validaters","validates","dependency","dep","value","getErrors","validater","checker","push","errorType","setCheckable","_Record","isEnable","isVisible","textAlign","marginTop","marginBottom","undefined","titleLabel","_ItemnLabel","_ItemnInputBak","hasTitle","placeholder","onChange","target","readOnly","isReadOnly","jsx","labelWidth","_FixedLabel","useState","isNaN","setNaN","isNumber","concat","step","_ItemnInput","Number","valueAsNumber","onBlur","toString","marginLeft","headBlank","list","slice","unshift","labelText","_ItemCombobox","item","_Option","disabled","isDisabled","button","_Button","onClick","_Message","isLink","clickAction","_BorderText","title","_BorderPanel","innerJsx","_InfoDiv","color","textRecords","text","isRelation","isUse","_Switch","find","CSS_BUTTON_DISABLE","CSS_LABEL_MIDIUM","input","select","option","CSS_LABEL_SMALL","initialStore","isSplash","user","logicData","launchData","limitFrame","limitParticle","defList","launchCacheList","cloud","fileHandle","isPreviewMode","SystemConst","GloballDialog","_Blind","TabbedPane","activeNo","setActiveNo","tabRecordNum","_LabelList","tabElements","tab","index","name","isActive","enable","selectTab","selectTabIndex","_ContList","cont","TabLabel","_TabLabel","TabContents","_Contents","createURL","draw","canvas","createElement","ctx","getContext","toDataURL","CanvasUtil","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillStyle","fillText","adjust","measureText","save","WIDTH","AUTH_TEXT_WIDTH","SIZE","AUTH_TEXT_HEIGHT","rotate","Math","PI","char","charAt","fontRand","random","alphaRand","Particle","owner","pos","prevPos","vec","frame","limit","isLive","drawer","extend","update","x","xy","y","this","param","radiusBase","radius","self","flashAppearFrame","appearFrame","unitFrame","flashHideFrame","shrinkStartRate","start","floor","g","createRadialGradient","grads","rgba","convertRgbaFromColorCode","r","b","a","offset","convertColorCodeFromRgba","grad","addColorStop","globalAlpha","disappearStartRate","beginPath","arc","fill","code","parseInt","substring","r1","g1","b1","a1","rate","DrawUtil","VectorUtil","rad","len","syncFromXY","sqrt","atan2","syncFromRad","cos","sin","VisualParamType","BehaviorParamType","Object","values","SelfParamType","ExtendParamType","EffectParamType","ModulateParamType","ConstantType","ParamUtil","ModulateBuilder","extendList","decayRate","decayLimit","gravity","gravityLimit","SCREEN_WIDTH","SCREEN_HEIGHT","searchElement","origin","rootData","sends","createParticleRec","cur","valueMapList","ConstantValueMap","fieldMng","mngs","data","fields","field","paramItem","convertFormulaToValue","visualParams","params","behaviorParams","getVisualParam","convertParamsToValue","getBehaviorParam","LIMIT","POS_X","POS_Y","Vector","VEC_X","VEC_Y","VEC_RAD","VEC_LEN","connectMng","inherits","connect","connector","disable","logicItem","method","wrap","logicMng","defs","def","searchDependLogic","depend","addValueMap","FRAME","itrfldValueMap","loopCnt","extendParams","loopCntVal","LOOP_COUNT","convertParamsToBoolean","INVOKE","iterateValueMap","LOOP_ITERATE","sendValueMapList","Instance","build","DECAY_LIMIT","DECAY_RATE","GRAVITY_VAL","GRAVITY_LIMIT","RADIUS","colorR","COLOR_R","colorG","COLOR_G","colorB","COLOR_B","colorA","COLOR_A","disappearStart","DISAPPEAR_START","shrinkStart","SHRINK_START","FLASH_APPEAR_FRAME","FLASH_HIDE_FRAME","createGradDrawer","warpList","formula","v","valueMap","m","formulaStr","varCnt","formulaItems","str","convertFormulaToBoolean","RADIAN_ROUND","minFrame","guaranteeFrame","doIterate","particle","splice","doEnd","PreviewUtil","min","max","checkIncludesChars","ch","indexOf","num","conditions","ValidateUtil","TreeUtil","parent","depth","isOpen","children","node","parentNode","isDisable","focusNode","ref","useRef","buildElementNodeFromData","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","jsxList","useMemo","buildJsxRecords","element","spaceList","isCurrent","current","scrollWidth","tempNode","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","clickEvent","onDoubleClick","getLabelJsx","invalidate","_Wrap","FactoryTreeContext","createContext","LogicMainteTab","setFocusNode","isModify","setModify","setInvalidate","LogicUtil","getChildrenDataNode","masterNode","openPreviewDialog","Component","master","tabIndex","onKeyDown","n","_TreeDiv","_TreeHead","_TreeBody","Frame","getNodeDisplayJsx","_PropsDiv","_DetailDiv","_DetailHeader","_DetailHeaderLabel","getTypeName","Provider","setRootData","removeSelf","parentWrap","listName","LogicElementUtil","getListParamName","_DetailMainDiv","getDetailComponent","EditorArgumentMng","BorderPanel","newNode","addChild","ModifyOperations","isComplete","isCompleteCheck","checkableFields","mappingForm","isInputOK","firstRegist","modifyRegist","Level","EditorArgumentItem","logicNode","setName","argType","setArgType","reservedList","getParamNameList","valueType","syncArgumentAdd","prevName","syncArgumentName","FormRecord","TextField","checkRequired","checkStringLength","checkFieldName","filter","Combobox","ArgTypes","refers","getArgumentRefers","syncArgumentDel","getSwapButtons","argName","searchVariableReferInFormula","varItem","newName","syncFormula","mng","visualMng","behaviorMng","inhMng","inh","inhfld","getInnerWrap","syncParamName","runRec","logic","conn","inhLogic","getInnerWrapFixed","sendMng","seedMng","console","log","interfaceWrap","connWrap","syncArgumentCallback","inhMngNode","getInnerNodeFixed","seedNode","interfaceNode","sendNode","entry","newArgName","paramWrap","createParamWrap","createNode","delArgName","delIndex","some","EditorSeedMng","itemWrap","EditorLogicMng","EditorLogicItem","el","isConnect","hasArgNode","hasFieldNode","hasConnectNode","existNameList","getExistNameList","toggleElement","hasNode","listPos","wrapElement","removeChild","insertChild","getDefaultLogicMngs","syncLogicName","Record","Switch","argumentNode","getInnerNode","hasArgument","args","fieldNode","hasField","inheritNode","hasInherit","getReplicateButton","getLocgicRefers","logicName","searchLogicReferInherit","id","logicMngNode","EditorParamItem","setFormulaItems","varFormList","setVarFormList","isField","isCondition","inputType","level","FIELD","INITIAL","INHERIT_FIELD","INHERIT_EXTEND","INHERIT_SEND","argumentList","fieldKeys","parentType","getLogicNode","argMng","arg","fieldName","Error","inhfldNode","fieldKeyList","paramNameList","addNum","delNum","parenthesisBalance","formJsxList","ParamInputTypes","SelfParams","getValueForm","isLastVar","isFormulaOK","hasFormError","varForm","getFormulaItem","syncFieldName","_Formula","isInvalid","_Var","_Sig","getFormulaJsx","getFieldRefers","mngNode","inheritWrap","span","EditorBehiviorMng","isVector","hasDecayParam","hasGravityParam","exchangeVectorMethod","flag","trueParamElements","falseParamElements","size","exchangeElements","toggleElements","paramElements","EditorVisualMng","drawMethod","THICKNESS","hasDisappearParam","hasShrinkParam","hasFlashParam","EditorInheritConnMng","EditorInheritConnector","identify","setIdentify","setMethod","setDepend","defaultName","getNumberingOnPrefixName","isCreate","logicList","idList","initConnectorNode","syncTreeElementFromWrap","initSendParams","sendParamList","dependItem","argWrap","getSendParamList","curParamList","isChange","ConnectTypes","dependLogic","inherit","newWrap","JSON","parse","stringify","getChildrenElementNode","rootNode","clone","COMPONENT_WIDTH","xName","setXName","yName","setYName","checkItems","argNode","behaviorNode","setParamValue","prpName","targetParam","paramList","xParam","yParam","SendTemplateDialog","EditorSendManager","isDepend","ConnectParentPosition","SetParentPosition","EditorFieldMng","EditorExtendMng","hasLoopParam","hasInvokeParam","EditorSeedItem","disp","setDisp","setEntry","permit","setPermit","logicNameList","seed","items","samples","PermitTypes","EditorThumbnailMng","LogicTreeContext","hasSample","WND_SIZE","EditorThumbnailItem","seedWrap","setFrame","urls","setUrls","setTimeout","sample","getThumbnailURL","getSeedValueMap","sampleNo","argMap","sendParams","send","targetFrame","frameCnt","buildLogicProps","par","pictureJsxList","imgJsx","_IMG","src","_SampleDiv","_SampleName","_CanvasDiv","img","LogicFormUtil","formgrpList","formList","setFormList","usedGrps","form","argument","formgrp","grp","targetForms","j","colorCode","_Type","_Range","formIndex","checkNumberRange","_Color","labelName","_Tsumami","EditorSampleItem","paramForms","setParamForms","argInfoList","formgrpMng","defines","seedargList","defval","buildPreviewForms","EditorSampleMng","EditorInterfaceManager","argMngNode","sendMngNode","sampleMngNode","hasGroupNode","execute","removeChildAll","newArgWrap","groupMngNode","hasGroup","EditorSeedArgMng","EditorSeedArgItem","setMin","setMax","setStep","setDefval","curIndex","getCurrentIndex","getSwapButtonsCallback","isUpper","sampleMng","swapNode","sendMngWrap","EditorSeedSendMng","EditorFormgrpItem","groupMethod","setGroupMethod","targetList","setTargetList","seedargs","Array","FromGrpMedhods","formName","EditorFormgrpMng","COLOR_METHOD","COLOR_MNG","COLOR_LIST","COLOR_ITEM","COLOR_FIELD","isFocus","_Category","backgroundColor","detailJsx","_Span","_Field","_EditableValue","_Signature","_Detail","nameJsx","_ValueType","wrapNode","get","elementNode","typeList","innerNode","innerWrap","ownerChildren","findIndex","swapOrder","ownDataChildren","curNo","swapData","dependencyMngNodes","depNode","isHead","isTail","cloneBase","cloneDest","namable","getNamableProps","targetElement","replicateSameLevel","getIdentifyParamName","childWrap","createParamWrapList","paramDataList","createVisualParams","createBehaviorParams","findSeedWrap","nameList","curWrap","nameParam","mngWrap","listParam","curLogicOwner","VisualParams","BehaviorParams","ExtendParams","EffectParams","ModulateParams","Constants","prefix","mngType","getLogicItem","seedId","getOrigin","getSendingValueMap","seedsendList","thumbnailList","PreviewLogicInputForm","logicWrap","setSendingValueMap","PreviewSeedInputForm","template","setTemplate","formgrpWrap","presetList","ButtonItem","selectedIndex","PreviewLogicFrame","sceens","setSceens","setFrameCnt","setTabIndex","setCur","isBuild","setBuild","isPlay","setPlay","sendingValueMap","isSeed","runParticleLogic","buildTabJsx","_Msg","_FormDiv","previewTabJsx","_ProgressDiv","clickX","pageX","clientRect","getBoundingClientRect","left","window","pageXOffset","_ProgressVal","_CloseButton","DirectLinkManager","libData","setLibData","seedSeq","setSeedSeq","findSeed","libSeq","resList","res","ownerId","lastmod","DataUtil","unZip","source","seedList","argCount","_Item","getJsx","conteseq","sendQueryRequestToAPI","response","json","results","MobileRoot","adjLeft","adjTop","screen","setScreen","getDecryptionedScoreSeq","hashKey","rect","clientWidth","clientHeight","isFitSide","addEventListener","isSmartPhone","top","navigator","userAgent","match","ChannelPane","icon","ChannelLabel","_Icon","_Label","ChannelContents","NameDefDialog","targetSeq","projects","p","seq","existNames","findProjectMaxSeq","maxSeq","newProject","insertProject","targetItem","updateProjectName","registUpdate","req","ManageTab","fcsListIdx","setFcsListIdx","listItemJsx","exist","_ListItem","getHashedFromScoreSeq","_Status","isExist","_Name","hasData","incrRec","root","developCnt","privateCnt","releaseCnt","logicSize","logicCnt","_HeaderDiv","getInitialData","_BodyDiv","_LeftDiv","gZip","updateProjectSource","deleteProject","_ListDiv","_RighttDiv","loadFile","saveFile","FixedText","getSHA256Hash","LaunchAnalysis","divide","setDivide","peak","setPeak","total","setTotal","countList","setCountList","itemJsxList","rateHeight","count","_AnalisisItem","divRate","pastRate","needPoint","_AnalisisDiv","LaunchProperty","setSeed","newFrame","setNewFrame","mapping","defBean","propertiesFormJsx","activeSeed","formgrps","presets","cancelAction","modifyAction","initFormList","LaunchEnvironment","setParticle","maxLimit","reduce","prev","ITEM_WIDTH","TimelineFrame","defPosJsxList","newFrameRate","newFrameValue","focus","sus","cache","useFrame","_Line","_Sustain","memoriJsxList","DIV_CNT","_Memori","_MeasureDiv","clientX","setNewFrameValue","MEASURE_WIDTH","PreviewLauncherFrame","LauncherTab","isDefEdit","setDefEdit","isEnvEdit","setEnvEdit","tabActiveIndex","setTabActiveIndex","setFocus","setDefList","groupMng","createSeq","defJsxList","thumbJsx","thumbList","thumb","url","_ItemDiv","_ItemFrame","_PropRecord","_FrameRecord","_SeedRecord","_ThumbFrame","val","_Title","updateCache","seedProps","getSeedProperties","doParticleJob","_ListHead","cloneDef","newSeq","newCache","_ListBody","_Timeline","_ListMain","_RightDiv","_RightInner","sort","LIST_HEAD","CreateChannel","SCORE_TAB_MARGIN","PublishFrame","libList","setLibList","findAllReleaseProjectList","setLibCnt","libListJsx","lib","dispCnt","_Header","_Owner","_CName","plainData","showSaveFilePicker","types","accept","handle","createWritable","writable","write","close","catch","_CDate","_DetailMain","_SeedItemFrame","_SeedItemInner","_SeedName","_SeedArgCnt","_DetailOpen","_CSummary","_ListFrame","ReleaseNote","setJsx","fetch","record","note","version","date","HOME_USER_DIV_HEIGHT","HomeChannel","userCount","setUserCount","artsCnt","setArtsCnt","countUsers","cnt","_Left","_MessageRecord","_Right","MainFrame","MAIN_FRAME_MARGIN","Splash","isSwitch","setSwitch","timerId","setTimerId","remove","logo","getLogoURL","clearTimeout","_Logo","_NowLoading","_Copylight","fadeIn","keyframes","AccountFrame","userId","setUserId","oldPass","setOldPass","newPass","setNewPass","newPassConfirm","setNewPassConfirm","email","setEmail","userIdList","setUserIdList","emailList","setEmailList","loginProps","reloadInfo","password","findUserInfoList","info","hash","getHashedFromUserSeq","history","replaceState","userTabJsx","InputTextFormBak","checkAsciiChars","permitRegist","_Body","_Footer","passwordStr","updateUserInfo","LoginCreateAccount","isRegist","setRegist","setPassword","passwordConfirm","setPasswordConfirm","messageList","setMessageList","createAuthText","findUserIdList","authCollation","setAuthCollation","authInput","setAuthInput","authPicture","getAuthTextURL","InfoFrame","_AuthText","getNextUserSeq","nextSeq","MessageLink","LoginLogin","isForget","setForget","findUserInfoLogin","findUserProjectList","resPrjList","findUserInfoFromEmail","sendQueryRequestToMailAPI","from","to","subject","userSeq","LoginFrame","setCreate","_TypeSwitch","_LogoDiv","TotalHeader","authButtonJsx","_LoginButton","location","_UserName","isEntry","_Menu","_Language","_MenuItem","TOTAL_HEADER_WIDTH","DirectLogin","getDecryptionedUserSeq","findUserInfoFromSeq","RouterManage","SystemEntry","basename","process","URLSearchParams","useLocation","search","splashJsx","path","exact","_MainDiv","DB_SERVER_DOMAIN","APP_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","encode","Base64","hashedSeq","hashids","decode","scoreSeq","hashedKey","mode","headers","Accept","body","createSendMailRequestInit","queryType","sql","databaseName","createQueryRequestInit","showOpenFilePicker","getFile","file","fileContents","original","sha256","content","encodeURIComponent","zlib","gzipSync","buffer","Buffer","unzipSync","decodeURIComponent","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace"],"mappings":"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","file":"static/js/main.5a206acf.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 18px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 22px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import React, { useEffect } from 'react';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst REACT_APP_AUTH0_DOMAIN = 'dev-a0p0m4lr.us.auth0.com';\nconst REACT_APP_AUTH0_CLIENT_ID = 'ABaWpYVBZwTr3tkyxhq1kWh2YwT4epew';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport { useContext } from \"react\";\r\n\r\nnamespace ConfirmDialog {\r\n\r\n    export const Component = (props: {\r\n        message: string;\r\n        width?: number;\r\n        height?: number;\r\n        buttons?: FormUtil.ButtonProps[];\r\n    }) => {\r\n\r\n        const {store,  setStore } = useContext(GlobalContext);\r\n\r\n        const width = props.width ?? 600;\r\n        const height = props.height ?? 150;\r\n        const buttons = props.buttons ?? [\r\n            {\r\n                label: 'OK',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({...store});\r\n                }\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main><_Inner>\r\n                    {props.message.split('\\n').map((msg, i) => {\r\n                        return <FormUtil.Message\r\n                            key={i}\r\n                            message={msg}\r\n                            isCenter\r\n                        />\r\n                    })}\r\n                </_Inner></_Main>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons} />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 110px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* background-color: #bb6868e1; */\r\n`;","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport ValidateUtil from \"./validateUtil\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nnamespace FormUtil {\r\n\r\n    export type CheckableValue = {\r\n        value: string;\r\n        errors: ValidateUtil.ErrorType[];\r\n    }\r\n\r\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\r\n        let result = true;\r\n        checkables.forEach(checkable => {\r\n            if (checkable.errors.length > 0) {\r\n                result = false;\r\n                return 1;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    export const InputTextFormBak = (props: {\r\n        titleLabel?: string;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        isCenter?: boolean;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        marginTop?: number;\r\n        isReadOnly?: boolean;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const type = props.isPassword ?? false ? 'password' : 'text';\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency);\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\r\n                <_ItemnInputBak\r\n                    type={type}\r\n                    value={props.checkable.value}\r\n                    hasTitle={props.titleLabel != undefined}\r\n                    width={props.width}\r\n                    isCenter={props.isCenter ?? false}\r\n                    placeholder={props.placeholder}\r\n                    onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        props.checkable.value = value;\r\n                        props.checkable.errors = getErrors(value);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }}\r\n                    errorType={errors.length === 0 ? undefined : errors[0]}\r\n                    readOnly={props.isReadOnly}\r\n                />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n\r\n    export const Record = (props: {\r\n        isEnable?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FormRecord = (props: {\r\n        titleLabel?: string;\r\n        labelWidth?: number;\r\n        isEnable?: boolean;\r\n        isVisible?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={props.isVisible ?? true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={props.labelWidth}>{props.titleLabel}</_ItemnLabel>}\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FixedText = (props: {\r\n        value: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        marginLeft?: number;\r\n    }) => {\r\n\r\n        return (\r\n            <_FixedLabel width={props.width}>{props.value}</_FixedLabel>\r\n        );\r\n    }\r\n\r\n    export const TextField = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        isNumber?: boolean;\r\n        marginLeft?: number;\r\n        step?: number;\r\n    }) => {\r\n        const [isNaN, setNaN] = useState(false);\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        let type = props.isPassword ?? false ? 'password' : 'text';\r\n        if (props.isNumber ?? false) {\r\n            type = 'number';\r\n        }\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n        const step = props.step ?? 1;\r\n\r\n        return (\r\n            <_ItemnInput\r\n                type={type}\r\n                value={value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                step={step}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                    if (type === 'number') {\r\n                        setNaN(Number.isNaN(e.target.valueAsNumber));\r\n                    }\r\n                }}\r\n                onBlur={() => {\r\n                    if (type === 'number') {\r\n                        if (isNaN) props.checkable.value = ' ';\r\n                        else props.checkable.value = Number(value).toString();\r\n                        // console.log(`[${props.checkable.value}]`);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }\r\n                }}\r\n                errorType={errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\r\n\r\n    export const Combobox = (props: {\r\n        list: ComboboxItemProps[];\r\n        headBlank?: boolean;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n        const headBlank = props.headBlank ?? false;\r\n        const list = props.list.slice();\r\n        if (headBlank) list.unshift({ value: '', labelText: '' });\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n\r\n        useEffect(() => {\r\n            // console.log('value: ' + props.checkable.value);\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        return (\r\n            <_ItemCombobox\r\n                value={props.checkable.value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    props.checkable.value = value;\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n\r\n                }}\r\n                errorType={errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            >{list.map((item, i) => {\r\n                return (\r\n                    <_Option key={i}\r\n                        value={item.value}\r\n                        disabled={item.isDisabled ?? false}\r\n                        isDisabled={item.isDisabled ?? false}\r\n                    >{item.labelText}</_Option>\r\n                );\r\n            })}</_ItemCombobox>\r\n        );\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        label: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ButtonRecord = (props: {\r\n        buttons: ButtonProps[],\r\n        align?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const align = props.align ?? 'right';\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={align}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.buttons.map((button, i) => {\r\n                    return (\r\n                        <_Button\r\n                            key={i}\r\n                            isCenter={align === 'center'}\r\n                            isEnable={button.isEnable ?? true}\r\n                            width={button.width}\r\n                            onClick={button.callback}\r\n                        >{button.label}</_Button>\r\n                    );\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const ButtonItem = (props: {\r\n        button: ButtonProps\r\n    }) => {\r\n        return (\r\n            <_Button\r\n                isCenter={false}\r\n                isEnable={props.button.isEnable ?? true}\r\n                width={props.button.width}\r\n                onClick={props.button.callback}\r\n            >{props.button.label}</_Button>\r\n        );\r\n    }\r\n\r\n    export const Message = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const MessageLink = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        clickAction: () => void;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isLink={true}\r\n                    onClick={props.clickAction}\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        // const title = props.title ?? 'title pl';\r\n        return (<>\r\n            <_BorderText>{props.title}</_BorderText>\r\n            <_BorderPanel isEnable={props.isEnable ?? true}>{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export const InfoFrame = (props: {\r\n        height?: number;\r\n        textRecords: string[];\r\n    }) => {\r\n        const height = props.height ?? 70;\r\n        const color = '#1a9900';\r\n        return (<>\r\n            <_InfoDiv height={height} color={color}>\r\n                {props.textRecords.map((text, i) => {\r\n                    return <span key={i}>{text}<br /></span>;\r\n                })}\r\n            </_InfoDiv>\r\n        </>);\r\n    };\r\n\r\n    export const Switch = (props: {\r\n        label: string;\r\n        isUse: boolean;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        isRelation?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isRelation = props.isRelation ?? false;\r\n        const callback = isRelation && props.isUse ? () => { } : props.callback;\r\n        return (\r\n            <_Switch\r\n                isRelation={isRelation}\r\n                isUse={props.isUse}\r\n                isEnable={props.isEnable ?? true}\r\n                width={props.width}\r\n                onClick={callback}\r\n            >{props.label}</_Switch>\r\n        );\r\n    }\r\n\r\n    export const checkItems = (list: CheckableValue[]) => {\r\n        return list.find(item => item.errors.length > 0) == undefined;\r\n    }\r\n}\r\n\r\nexport default FormUtil;\r\n\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n    textAlign: 'left' | 'center' | 'right';\r\n    marginTop: number;\r\n    marginBottom: number;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    width: 100%;\r\n    height: 40px;\r\n    margin-top: ${props => props.marginTop}px;\r\n    margin-bottom: ${props => props.marginBottom}px;\r\n    /* background-color: #b3b4c4; */\r\n    /* border: 1px solid #000; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    text-align: ${props => props.textAlign};\r\n`;\r\n\r\nconst _ItemnLabel = styled.div<{\r\n    labelWidth?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.labelWidth ?? 140}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #c3c3c3fc, #d8d8d8, #c3c3c3fc);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n`;\r\n\r\nconst _FixedLabel = styled.div<{\r\n    width?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #0c0e86;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c51a;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n    overflow-x: hidden;\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n`;\r\n\r\nconst _ItemnInputBak = styled.input<{\r\n    readOnly?: boolean;\r\n    isCenter: boolean;\r\n    hasTitle: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${props => !props.hasTitle ? css`\r\n    ` : css`\r\n        width: calc(100% - 152px);\r\n    `}\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    margin-top: 2px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    /* ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    } */\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemCombobox = styled.select<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n        pointer-events: none;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _Option = styled.option<{\r\n    isDisabled: boolean;\r\n}>`\r\n    ${props => !props.isDisabled ? '' : css`\r\n        color: #0000004b;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n    isLink?: boolean;\r\n    isCenter: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #002c52;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => !props.isLink ? '' : css`\r\n        color: #0459a3;\r\n        user-select: none;\r\n        text-decoration: underline;\r\n        &:hover {\r\n            color: #68a4d8;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #cdcdcd, #ebebeb, #cdcdcd);\r\n    border: 1px solid #747474;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isUse: boolean;\r\n    isEnable: boolean;\r\n    width?: number;\r\n    isRelation: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    color: #515151;\r\n    border: 1px solid #747474;\r\n    ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\r\n    ` : css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#ddc1d979' : '#d898b3'};\r\n        color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n    `}\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\r\n        ` : css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#d3a1cb79' : '#d898b3'};\r\n            color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _BorderText = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: #990000;\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    background-color: #dcddce;\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    margin: 4px 0 0 0;\r\n    display: inline-block;\r\n    background-color: #e7e5e561;\r\n    border: solid 1px #949494;\r\n    width: 100%;\r\n    height: ${props => props.height}px;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: ${props => props.color};\r\n    overflow-y: auto;\r\n`;","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport { Cache, LaunchData } from \"../../contents/create/launcher/launcherTab\";\r\nimport StoreCloud from \"./storeCloud\";\r\nimport StoreSystem from \"./storeSystem\";\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    system: StoreSystem.Param;\r\n    logicData: LogicUtil.WrapElement | null;\r\n    launchData: LaunchData;\r\n    launchCacheList: Cache[];\r\n    cloud: StoreCloud.Props | null;\r\n    fileHandle: FileSystemFileHandle | null;\r\n    isPreviewMode: boolean;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    system: {\r\n        isSplash: true,\r\n        user: null,\r\n        dialog: null,\r\n    },\r\n    logicData: null,\r\n    launchData: {\r\n        limitFrame: 300,\r\n        limitParticle: 3000,\r\n        defList: []\r\n    },\r\n    launchCacheList: [],\r\n    cloud: null,\r\n    fileHandle: null,\r\n    isPreviewMode: false,\r\n}","\r\nnamespace SystemConst {\r\n    export const AUTH_TEXT_WIDTH = 350;\r\n    export const AUTH_TEXT_HEIGHT = 70;\r\n}\r\n\r\nexport default SystemConst;\r\n\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n\r\n// ホームチャンネル\r\nexport const HOME_USER_DIV_HEIGHT = 400;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const dialog = store.system.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            store.system.dialog = null;\r\n            setStore({...store});\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: (index: number)=>void;\r\n    tabRecordNum?: number;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    enable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabRecordNum = props.tabRecordNum ?? 1;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList tabRecordNum={tabRecordNum}>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isEnable={tab.enable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList tabRecordNum={tabRecordNum}>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={!tab.enable ? <></> : tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isEnable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: inline-block;\r\n    height: ${props => 35 * props.tabRecordNum}px;\r\n    text-align: left;\r\n    /* background-color: #ac3b3b; */\r\n    width: 100%;\r\n`;\r\nconst _ContList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\r\n    border-radius: 0 6px 6px 6px;\r\n    /* box-shadow: 0 2px 0 0 #000b3a48; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    \r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                margin-top: 5px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${props.isEnable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import SystemConst from \"./systemConst\";\r\n\r\nnamespace CanvasUtil {\r\n\r\n    /**\r\n     * Canvasに任意の描画をし、画像のURLを取得する\r\n     * @param width 幅\r\n     * @param height 高さ\r\n     * @param draw 描画\r\n     * @returns 画像のURL\r\n     */\r\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        draw(ctx);\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    export const getLogoURL = () => {\r\n        return CanvasUtil.createURL(360, 80, (ctx) => {\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.fillRect(0, 0, 350, 80);\r\n\r\n            ctx.shadowColor = \"#555\";\r\n            ctx.shadowOffsetX = 2;\r\n            ctx.shadowOffsetY = 1;\r\n            ctx.shadowBlur = 5;\r\n            ctx.font = 'italic 50pt Arial';\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.fillText('Pixel ', 14, 64);\r\n            const adjust = ctx.measureText('Pixel ').width;\r\n            ctx.fillStyle = '#6ea0c4';\r\n            ctx.fillText('Flare', 14 + adjust, 64);\r\n            ctx.save();\r\n        });\r\n    }\r\n\r\n    export const getAuthTextURL = (text: string) => {\r\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\r\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\r\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\r\n            ctx.rotate(1 * Math.PI / 180);\r\n            for (let i = 0; i < text.length; i++) {\r\n                const char = text.charAt(i);\r\n\r\n                const fontRand = Math.random() * 60;\r\n                const alphaRand = Math.random() * 60;\r\n                ctx.font = `${20 + fontRand}pt Arial`;\r\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\r\n                ctx.fillText(char, i * SIZE, 60);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CanvasUtil;","import VectorUtil from \"./vectorUtil\";\r\n\r\nnamespace Particle {\r\n\r\n    export type Props = {\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        limit: number;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n    }\r\n\r\n    export class Instance {\r\n\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        prevPos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        frame: number;\r\n        limit: number;\r\n        isLive: boolean;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n\r\n        constructor(props: Props) {\r\n            this.owner = props.owner;\r\n            this.pos = props.pos;\r\n            this.prevPos = props.pos;\r\n            this.vec = props.vec;\r\n\r\n            this.frame = 0;\r\n            this.limit = props.limit;\r\n            this.isLive = true;\r\n            this.drawer = props.drawer;\r\n            this.extend = props.extend;\r\n        }\r\n\r\n        update = () => {\r\n\r\n            this.pos.x += this.vec.xy.x;\r\n            this.pos.y += this.vec.xy.y;\r\n\r\n            this.extend.forEach(callback => callback(this));\r\n\r\n            if (this.frame === this.limit) {\r\n                this.isLive = false;\r\n            }\r\n            this.frame++;\r\n        }\r\n\r\n        draw = (ctx: CanvasRenderingContext2D) => {\r\n            this.drawer(this, ctx);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Particle;","import Particle from \"./particle\";\r\n\r\nnamespace DrawUtil {\r\n\r\n    export type Rgba = {\r\n        r: number;\r\n        g: number;\r\n        b: number;\r\n        a: number;\r\n    }\r\n\r\n    export type ColorStop = {\r\n        offset: number;\r\n        color: string;\r\n    }\r\n\r\n    export type DrawerParam = {\r\n        color: string;\r\n        radius?: number;\r\n        disappearStartRate?: number;\r\n        shrinkStartRate?: number;\r\n        flashAppearFrame?: number;\r\n        flashHideFrame?: number;\r\n    }\r\n\r\n    export const createGradDrawer = (param: DrawerParam) => {\r\n\r\n        /** 基準となる半径 */\r\n        const radiusBase = param.radius ?? 30;\r\n        return (self: Particle.Instance, ctx: CanvasRenderingContext2D) => {\r\n            if (param.flashAppearFrame != undefined) {\r\n                const appearFrame = param.flashAppearFrame;\r\n                const hideFrame = (param.flashHideFrame as number);\r\n                const unitFrame = appearFrame + hideFrame;\r\n                if ((self.frame % unitFrame) >= appearFrame) return;\r\n            }\r\n\r\n            let radius = radiusBase;\r\n            if (param.shrinkStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.shrinkStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    const rate = (limit - frame) / limit;\r\n                    radius *= rate;\r\n                }\r\n            }\r\n\r\n            const x = self.pos.x;\r\n            const y = self.pos.y;\r\n            const g = ctx.createRadialGradient(x, y, 1, x, y, radius);\r\n\r\n            const grads: ColorStop[] = [];\r\n            const rgba = convertRgbaFromColorCode(param.color) ?? { r: 255, g: 255, b: 255, a: 255 };\r\n            grads.push({ offset: 0, color: convertColorCodeFromRgba({ r: 255, g: 255, b: 255, a: Math.floor(rgba.a * 0.9) }) });\r\n            grads.push({ offset: 0.2, color: convertColorCodeFromRgba({ ...rgba, a: Math.floor(rgba.a * 0.15) }) });\r\n            grads.push({ offset: 1, color: convertColorCodeFromRgba({ ...rgba, a: 1 }) });\r\n\r\n            grads.forEach(grad => {\r\n                g.addColorStop(grad.offset, grad.color);\r\n            });\r\n\r\n            ctx.globalAlpha = 1;\r\n            if (param.disappearStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.disappearStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    ctx.globalAlpha = (limit - frame) / limit;\r\n                }\r\n            }\r\n\r\n            ctx.fillStyle = g;\r\n            // ctx.fillStyle = param.color;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n        };\r\n    }\r\n\r\n    export const convertRgbaFromColorCode = (code: string): Rgba | null => {\r\n        const div = code.split('#');\r\n        if (div.length !== 2 || div[1].length < 6) return null;\r\n\r\n        const value = div[1];\r\n        const r = Number.parseInt(value.substring(0, 2), 16);\r\n        const g = Number.parseInt(value.substring(2, 4), 16);\r\n        const b = Number.parseInt(value.substring(4, 6), 16);\r\n        let a = 1;\r\n        if (value.length === 8) {\r\n            a = Number.parseInt(value.substring(6, 8), 16);\r\n        }\r\n        return { r, g, b, a };\r\n    }\r\n\r\n    export const convertColorCodeFromRgba = (rgba: Rgba): string => {\r\n        const r1 = (Math.floor(rgba.r));\r\n        const g1 = (Math.floor(rgba.g));\r\n        const b1 = (Math.floor(rgba.b));\r\n        const a1 = (Math.floor(rgba.a));\r\n        const r = ('00' + r1.toString(16)).slice(-2);\r\n        const g = ('00' + g1.toString(16)).slice(-2);\r\n        const b = ('00' + b1.toString(16)).slice(-2);\r\n        const a = ('00' + a1.toString(16)).slice(-2);\r\n        return `#${r}${g}${b}${a}`;\r\n    }\r\n\r\n    export const toWhite = (color: string, rate: number): string => {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport default DrawUtil;","namespace VectorUtil {\r\n\r\n    export type XY = {\r\n        x: number, y: number;\r\n    }\r\n\r\n    export class Vector {\r\n\r\n        xy: XY;\r\n        rad: number;\r\n        len: number;\r\n\r\n        constructor(xy: XY) {\r\n            this.xy = xy;\r\n            this.rad = 0;\r\n            this.len = 0;\r\n            this.syncFromXY();\r\n        }\r\n\r\n        syncFromXY = () => {\r\n            this.len = Math.sqrt(this.xy.x * this.xy.x + this.xy.y * this.xy.y);\r\n            this.rad = Math.atan2(this.xy.y, this.xy.x);\r\n        }\r\n\r\n        syncFromRad = () => {\r\n            this.xy.x = Math.cos(this.rad) * this.len;\r\n            this.xy.y = Math.sin(this.rad) * this.len;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default VectorUtil;","\r\nnamespace ParamUtil {\r\n    export enum VisualParamType {\r\n        RADIUS = 'radius',\r\n        COLOR_R = 'color_r',\r\n        COLOR_G = 'color_g',\r\n        COLOR_B = 'color_b',\r\n        COLOR_A = 'color_a',\r\n        THICKNESS = 'thickness',\r\n    }\r\n    export const VisualParams = Object.values(VisualParamType);\r\n    export type VisualParam = typeof VisualParams[number];\r\n\r\n    export enum BehaviorParamType {\r\n        LIMIT = 'limit',\r\n        POS_X = 'pos_x',\r\n        POS_Y = 'pos_y',\r\n        VEC_X = 'vec_x',\r\n        VEC_Y = 'vec_y',\r\n        VEC_RAD = 'vec_radian',\r\n        VEC_LEN = 'vec_length',\r\n    }\r\n    export const BehaviorParams = Object.values(BehaviorParamType);\r\n    export type BehaviorParam = typeof BehaviorParams[number];\r\n\r\n    export enum SelfParamType {\r\n        FRAME = 'self_frame',\r\n        LIMIT = 'self_limit',\r\n        POS_X = 'self_pos_x',\r\n        POS_Y = 'self_pos_y',\r\n        VEC_X = 'self_vec_x',\r\n        VEC_Y = 'self_vec_y',\r\n        VEC_RAD = 'self_vec_radian',\r\n        VEC_LEN = 'self_vec_length',\r\n    }\r\n    export const SelfParams = Object.values(SelfParamType);\r\n    export type SelfParam = typeof SelfParams[number];\r\n\r\n    export enum ExtendParamType {\r\n        LOOP_COUNT = 'loop_count',\r\n        LOOP_ITERATE = 'loop_iterate',\r\n        INVOKE = 'invoke',\r\n    }\r\n    export const ExtendParams = Object.values(ExtendParamType);\r\n    export type ExtendParam = typeof ExtendParams[number];\r\n\r\n    export enum EffectParamType {\r\n        DISAPPEAR_START = 'disappear_start',\r\n        SHRINK_START = 'shrink_start',\r\n        FLASH_APPEAR_FRAME = 'flash_appear_frame',\r\n        FLASH_HIDE_FRAME = 'flash_hide_frame',\r\n    }\r\n    export const EffectParams = Object.values(EffectParamType);\r\n    export type EffectParam = typeof EffectParams[number];\r\n\r\n    export enum ModulateParamType {\r\n        DECAY_RATE = 'decay_rate',\r\n        DECAY_LIMIT = 'decay_limit',\r\n        GRAVITY_VAL = 'gravity_val',\r\n        GRAVITY_LIMIT = 'gravity_limit',\r\n    }\r\n    export const ModulateParams = Object.values(ModulateParamType);\r\n    export type ModulateParam = typeof ModulateParams[number];\r\n\r\n    export enum ConstantType {\r\n        SCREEN_WIDTH = 'screen_width',\r\n        SCREEN_HEIGHT = 'screen_height',\r\n        PI = 'pi',\r\n        RADIAN_ROUND = 'radian_round',\r\n    }\r\n    export const Constants = Object.values(ConstantType);\r\n    export type Constant = typeof Constants[number];\r\n\r\n}\r\n\r\nexport default ParamUtil;","import Particle from \"../../graphic/particle\";\r\n\r\nnamespace ModulateBuilder {\r\n\r\n    type ModulateParam = {\r\n        decayRate?: number;\r\n        decayLimit?: number;\r\n        gravity?: number;\r\n        gravityLimit?: number;\r\n    }\r\n\r\n    export const build = (extendList: ((self: Particle.Instance) => void)[], param: ModulateParam) => {\r\n        \r\n        // 減衰メソッド\r\n        if (param.decayRate != undefined && param.decayLimit != undefined) {\r\n            const decayLimit = param.decayLimit;\r\n            const decayRate = param.decayRate;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.len > decayLimit) {\r\n                    self.vec.len = self.vec.len * decayRate;\r\n                    self.vec.syncFromRad();\r\n                }\r\n            });\r\n        }\r\n        // 重力メソッド\r\n        if (param.gravity != undefined && param.gravityLimit != undefined) {\r\n            const gravityLimit = param.gravityLimit;\r\n            const gravity = param.gravity;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.xy.y < gravityLimit) {\r\n                    self.vec.xy.y += gravity;\r\n                    self.vec.syncFromXY();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModulateBuilder;","import DrawUtil from \"../../graphic/drawUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport ParamUtil from \"../factory/util/paramUtil\";\r\nimport ModulateBuilder from \"./modulateBuilder\";\r\n\r\nnamespace PreviewUtil {\r\n\r\n    export const SCREEN_WIDTH = 550;\r\n    export const SCREEN_HEIGHT = 550;\r\n\r\n    export type ValueMap = {\r\n        name: string;\r\n        value: number;\r\n    }\r\n\r\n    export const buildLogicProps = (\r\n        owner: Particle.Instance[],\r\n        origin: LogicUtil.NodeLogicItem,\r\n        rootData: LogicUtil.WrapElement,\r\n        sends: ValueMap[]\r\n    ): Particle.Props => {\r\n\r\n        /**\r\n         * ディペンドするロジック要素を識別名から探して返す。\r\n         * @param name ロジックの識別名\r\n         * @returns ロジック要素\r\n         */\r\n        const searchDependLogic = (name: string): LogicUtil.NodeLogicItem | null => {\r\n            const mng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n            const wrap = mng.defs.find(def => (def.data as LogicUtil.NodeLogicItem).name === name);\r\n            if (wrap == undefined) return null;\r\n            return wrap.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        /**\r\n         * 再帰的にパーティクルを生成する。\r\n         * @param cur ルートとなるロジック要素\r\n         * @param sends 親要素から送られてきたフィールド\r\n         * @returns パーティクルのプロパティ\r\n         */\r\n        const createParticleRec = (cur: LogicUtil.NodeLogicItem, sends: ValueMap[]): Particle.Props => {\r\n            let valueMapList: ValueMap[] = sends.concat(ConstantValueMap);\r\n\r\n\r\n            // フィールドのパラメータを取得\r\n            const fieldMng = searchElement('field-mng', cur.mngs);\r\n            if (fieldMng != null) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                    valueMapList.push({ name: paramItem.name, value });\r\n                });\r\n            }\r\n\r\n            const visualParams = (searchElement('visual-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n            const behaviorParams = (searchElement('behavior-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n\r\n            const getVisualParam = (name: string) => {\r\n                return convertParamsToValue(name, visualParams, valueMapList);\r\n            }\r\n            const getBehaviorParam = (name: string) => {\r\n                return convertParamsToValue(name, behaviorParams, valueMapList);\r\n            }\r\n\r\n            // Behaviorのパラメータを取得\r\n            const limit = Math.floor(getBehaviorParam(ParamUtil.BehaviorParamType.LIMIT) as number);\r\n            const pos = {\r\n                x: getBehaviorParam(ParamUtil.BehaviorParamType.POS_X) as number,\r\n                y: getBehaviorParam(ParamUtil.BehaviorParamType.POS_Y) as number\r\n            };\r\n            const vec = new VectorUtil.Vector({ x: 0, y: 0 });\r\n            const isVectorMethod = behaviorParams.find(param => param.name === ParamUtil.BehaviorParamType.VEC_X) != undefined;\r\n            if (isVectorMethod) {\r\n                vec.xy.x = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_X) as number;\r\n                vec.xy.y = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_Y) as number;\r\n                vec.syncFromXY();\r\n            } else {\r\n                vec.rad = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_RAD) as number;\r\n                vec.len = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_LEN) as number;\r\n                vec.syncFromRad();\r\n            }\r\n\r\n            /**\r\n             * 追加動作（子要素、エフェクト、モデュレート）\r\n             */\r\n            const extendList: ((self: Particle.Instance) => void)[] = [];\r\n\r\n            // 子要素を生成する\r\n            const connectMng = searchElement('inherit-mng', cur.mngs);\r\n            if (connectMng != null) {\r\n\r\n                // パーティクル情報のフィールド追加\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_X, value: pos.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_Y, value: pos.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_RAD, value: vec.rad });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_LEN, value: vec.len });\r\n\r\n                const connects = (connectMng.data as LogicUtil.NodeConnectManager).inherits;\r\n\r\n                connects.forEach(connect => {\r\n                    const connector = connect.data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.disable ?? false) return;\r\n\r\n                    const logicItem = connector.method === 'create' ?\r\n                        searchElement('inherit-logic', connector.mngs)?.data as LogicUtil.NodeLogicItem :\r\n                        searchDependLogic(connector.depend);\r\n\r\n                    if (logicItem != null) {\r\n\r\n                        extendList.push((self: Particle.Instance) => {\r\n\r\n                            const addValueMap = (item: ValueMap) => {\r\n                                const map = valueMapList.find(map => map.name === item.name);\r\n                                if (map != undefined) map.value = item.value;\r\n                                else valueMapList.push(item);\r\n                            }\r\n                            addValueMap({ name: ParamUtil.SelfParamType.FRAME, value: self.frame });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.LIMIT, value: self.limit });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_X, value: self.pos.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_Y, value: self.pos.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_X, value: self.vec.xy.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_Y, value: self.vec.xy.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_RAD, value: self.vec.rad });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_LEN, value: self.vec.len });\r\n\r\n                            // Inherit配下のフィールドのパラメータを取得\r\n                            const itrfldValueMap: ValueMap[] = [];\r\n                            const fieldMng = searchElement('inhfld-mng', connector.mngs);\r\n                            if (fieldMng != null) {\r\n                                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                                    itrfldValueMap.push({ name: paramItem.name, value });\r\n                                });\r\n                            }\r\n\r\n                            let loopCnt = 1;\r\n                            const extendItem = searchElement('extend-mng', connector.mngs) as LogicUtil.WrapElement;\r\n                            const extendParams = (extendItem.data as LogicUtil.NodeParamManager).params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                            const loopCntVal = convertParamsToValue(ParamUtil.ExtendParamType.LOOP_COUNT, extendParams, valueMapList.concat(itrfldValueMap));\r\n\r\n                            // 派生条件\r\n                            const isInvoke = convertParamsToBoolean(ParamUtil.ExtendParamType.INVOKE, extendParams, valueMapList) ?? true;\r\n\r\n                            // 条件を満たさない場合、以下の処理（パーティクルの生成）を行わない\r\n                            if (!isInvoke) return;\r\n\r\n                            // イテレータを利用している場合\r\n                            if (loopCntVal != undefined) {\r\n                                loopCnt = loopCntVal;\r\n                            }\r\n\r\n                            for (let i = 0; i < loopCnt; i++) {\r\n\r\n                                // イテレータ関連のパラメータを追加\r\n                                const iterateValueMap: ValueMap[] = [\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_COUNT, value: loopCnt },\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_ITERATE, value: i }\r\n                                ];\r\n\r\n                                const sendItem = searchElement('send-mng', connector.mngs)?.data as LogicUtil.NodeParamManager;\r\n                                const params = sendItem.params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                                const sendValueMapList: ValueMap[] = params.map(item => {\r\n                                    return { name: item.name, value: convertParamsToValue(item.name, params, valueMapList.concat(itrfldValueMap).concat(iterateValueMap)) ?? 0 }\r\n                                });\r\n\r\n                                const props = createParticleRec(\r\n                                    logicItem,\r\n                                    sendValueMapList\r\n                                );\r\n                                self.owner.push(new Particle.Instance(props));\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            // モデュレート（動きの変化）を付与\r\n            ModulateBuilder.build(extendList, {\r\n                decayLimit: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_LIMIT),\r\n                decayRate: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_RATE),\r\n                gravity: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_VAL),\r\n                gravityLimit: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_LIMIT),\r\n            });\r\n\r\n            // Visualのパラメータを取得\r\n            const radius = getVisualParam(ParamUtil.VisualParamType.RADIUS);\r\n            const colorR = getVisualParam(ParamUtil.VisualParamType.COLOR_R);\r\n            const colorG = getVisualParam(ParamUtil.VisualParamType.COLOR_G);\r\n            const colorB = getVisualParam(ParamUtil.VisualParamType.COLOR_B);\r\n            const colorA = getVisualParam(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // エフェクト付与\r\n            const disappearStart = getVisualParam(ParamUtil.EffectParamType.DISAPPEAR_START);\r\n            const shrinkStart = getVisualParam(ParamUtil.EffectParamType.SHRINK_START);\r\n            const flashAppearFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME);\r\n            const flashHideFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_HIDE_FRAME);\r\n\r\n            let drawer: (self: Particle.Instance, ctx: CanvasRenderingContext2D) => void = () => { };\r\n            if (radius != undefined) {\r\n                drawer = DrawUtil.createGradDrawer({\r\n                    radius: radius,\r\n                    color: DrawUtil.convertColorCodeFromRgba({\r\n                        r: colorR as number,\r\n                        g: colorG as number,\r\n                        b: colorB as number,\r\n                        a: colorA as number,\r\n                    }),\r\n                    disappearStartRate: disappearStart,\r\n                    shrinkStartRate: shrinkStart,\r\n                    flashAppearFrame,\r\n                    flashHideFrame,\r\n                });\r\n            }\r\n\r\n            return {\r\n                owner, pos, vec,\r\n                limit, drawer,\r\n                extend: extendList\r\n            };\r\n        }\r\n\r\n        return createParticleRec(origin, sends);\r\n    }\r\n\r\n    const searchElement = (type: LogicUtil.NodeType, warpList: LogicUtil.WrapElement[]) => {\r\n        return warpList.find(wrap => wrap.type === type) ?? null;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param valueMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToValue = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): number | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToValue(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToValue = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): number => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(ret);\r\n        return ret;\r\n    }\r\n\r\n    export const convertParamsToBoolean = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): boolean | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToBoolean(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToBoolean = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): boolean => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item, i) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            else if (item === '=') str = '==';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(formulaStr);\r\n        return ret;\r\n    }\r\n\r\n    export const ConstantValueMap: ValueMap[] = [\r\n        { name: ParamUtil.ConstantType.SCREEN_WIDTH, value: SCREEN_WIDTH },\r\n        { name: ParamUtil.ConstantType.SCREEN_HEIGHT, value: SCREEN_HEIGHT },\r\n        { name: ParamUtil.ConstantType.PI, value: 3.14159265359 },\r\n        { name: ParamUtil.ConstantType.RADIAN_ROUND, value: 3.14159265359 * 2 }\r\n    ];\r\n\r\n    export type RunParticleProps = {\r\n        /** フレームの上限（過ぎると停止） */\r\n        limitFrame: number,\r\n        /** パーティクル数の上限（超えると停止） */\r\n        limitParticle: number,\r\n        /** 最低保証フレーム */\r\n        guaranteeFrame?: number,\r\n        /** 1フレーム経過ごとに実行する処理のコールバック */\r\n        doIterate: (frame: number, owner: Particle.Instance[]) => void,\r\n        /** 最終フレーム（ループから抜けた直後）に実行する処理のコールバック */\r\n        doEnd?: (frame: number, owner: Particle.Instance[]) => void\r\n    };\r\n\r\n    export const runParticleLogic = (props: RunParticleProps) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        const owner: Particle.Instance[] = [];\r\n        let frame = 0;\r\n        while (true) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            // // 死滅したパーティクルの削除\r\n            // for (let i = owner.length - 1; i >= 0; i--) {\r\n            //     const particle = owner[i];\r\n            //     if (!particle.isLive) {\r\n            //         owner.splice(i, 1);\r\n            //     }\r\n            // }\r\n\r\n            if (frame > props.limitFrame ||\r\n                owner.length > props.limitParticle ||\r\n                frame > minFrame && owner.length === 0\r\n            ) break;\r\n            frame++;\r\n        };\r\n\r\n        if (props.doEnd != undefined) {\r\n            props.doEnd(frame, owner);\r\n        }\r\n    }\r\n}\r\n\r\nexport default PreviewUtil;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\r\n\r\n    export type Validate = {\r\n        checker: (value: string) => boolean;\r\n        errorType: ErrorType;\r\n        message?: string;\r\n    }\r\n\r\n    /**\r\n     * 必須チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkRequired = (str: string) => {\r\n        return str.length > 0;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length === 0 || (str.length >= min && str.length <= max);\r\n    }\r\n\r\n    /**\r\n     * 半角英数時チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        return checkIncludesChars(str, list);\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列で構成されているかチェック\r\n     * @param str 検証する文字列\r\n     * @param list 入力を許す対象文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkIncludesChars = (str: string, list: string) => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            const ch = str.charAt(i);\r\n            if (list.indexOf(ch) === -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列が数値に変換できるかチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumber = (str: string) => {\r\n        return !isNaN(Number(str));\r\n    }\r\n\r\n    /**\r\n     * 数値の値の範囲をチェック\r\n     * @param str 検証する文字列\r\n     * @param min 下限\r\n     * @param max 上限\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumberRange = (str: string, min: number, max: number) => {\r\n        if (!isNaN(Number(str))) {\r\n            const num = Number(str);\r\n            return num >= min && num <= max;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default ValidateUtil;\r\n","import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        // parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        const ref = useRef({} as HTMLDivElement);\r\n\r\n        /**\r\n         * データを元に再帰的に以下のツリーを構成する。\r\n         * @returns ツリー\r\n         */\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        useEffect(() => {\r\n            if (focusNode != null && focusNode.parent != null) {\r\n                focusNode.parent.isOpen = true;\r\n            }\r\n        }, [focusNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            // console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    // 親判定\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    // 兄弟判定\r\n                    if (result === false && focusNode != null && focusNode.parent != null) {\r\n                        result = focusNode.parent.children.find(node => node == element) != undefined;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        width={ref.current.scrollWidth}\r\n                        isActive={isCurrent}\r\n                        isRelation={!isDisable && isRelationNode()}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap\r\n                ref={ref}\r\n                isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #374a54;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #1f3642;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n    isRelation: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #459cff46;\r\n    `}\r\n    opacity: 0.3;\r\n    ${props => !props.isRelation ? '' : css`\r\n        background-color: #ffffff28;\r\n        opacity: 1;\r\n    `}\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #b4d9dd83;\r\n        opacity: 1;\r\n    `}\r\n    width: ${props => props.width}px;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import { type } from \"os\";\r\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport Common from \"../common\";\r\nimport PreviewLogicFrame from \"../preview/previewLogicFrame\";\r\nimport LogicElementUtil from \"./util/logicElementUtil\";\r\nimport LogicUtil from \"./util/logicUtil\";\r\n\r\nexport const FactoryTreeContext = createContext({} as LogicUtil.DetailArgs);\r\n\r\nconst LogicMainteTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    // const [rootData, setRootData] = useState(LogicElementUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    // const [treeDisable, setTreeDisable] = useState(false);\r\n    const [isModify, setModify] = useState<boolean>(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    const rootData = store.logicData as LogicUtil.WrapElement;\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: LogicUtil.getChildrenDataNode(rootData)\r\n        }\r\n    }, [rootData]);\r\n\r\n    // useEffect(()=> {\r\n    //     store.logicData = rootData;\r\n    //     setStore({...store});\r\n    // }, [rootData]);\r\n\r\n    const setRootData = (rootData: LogicUtil.WrapElement) => {\r\n        store.logicData = rootData;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const masterNode = useMemo(() => {\r\n        let cur: TreeUtil.ElementNode | null = focusNode;\r\n        while (cur != null) {\r\n            const type = (cur.data as LogicUtil.WrapElement).type;\r\n            if (['logic-item', 'seed-item'].includes(type)) return cur;\r\n            cur = cur.parent;\r\n        };\r\n        return null;\r\n    }, [focusNode]);\r\n\r\n    /**\r\n     * プレビューダイアログを表示する\r\n     */\r\n    const openPreviewDialog = () => {\r\n        if (masterNode == null) return;\r\n        store.system.dialog = (\r\n            <PreviewLogicFrame.Component\r\n                master={masterNode.data as LogicUtil.WrapElement}\r\n                rootData={rootData}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n            onKeyDown={(e) => {\r\n                // console.log(e.key);\r\n                if (isModify || focusNode == null) return;\r\n                switch (e.key) {\r\n                    case 'ArrowRight': {\r\n                        if (focusNode.children.length > 0) {\r\n                            if (!focusNode.isOpen) focusNode.isOpen = true;\r\n                            else setFocusNode(focusNode.children[0]);\r\n                            setInvalidate({});\r\n                        }\r\n                    } break;\r\n                    case 'ArrowLeft': {\r\n                        if (focusNode.isOpen) focusNode.isOpen = false;\r\n                        else {\r\n                            if (focusNode.parent != null) setFocusNode(focusNode.parent);\r\n                        }\r\n                        setInvalidate({});\r\n                    } break;\r\n                    case 'ArrowUp': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n) {\r\n                                    if (i === 0) {\r\n                                        setFocusNode(focusNode.parent);\r\n                                        setInvalidate({});\r\n                                    } else {\r\n                                        setFocusNode(list[i - 1]);\r\n                                        setInvalidate({});\r\n                                    }\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case 'ArrowDown': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n && i < list.length - 1) {\r\n                                    setFocusNode(list[i + 1]);\r\n                                    setInvalidate({});\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case ' ': {\r\n                        if (masterNode != null) openPreviewDialog();\r\n                    } break;\r\n                }\r\n            }}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview',\r\n                                isEnable: masterNode != null,\r\n                                callback: openPreviewDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return LogicUtil.getNodeDisplayJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={isModify}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <_DetailDiv>\r\n                    <_DetailHeader>\r\n                        <_DetailHeaderLabel>{LogicUtil.getTypeName(focusNode)}</_DetailHeaderLabel>\r\n                    </_DetailHeader>\r\n                    <FactoryTreeContext.Provider value={{\r\n                        rootData,\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        isModify,\r\n                        setModify,\r\n                        // treeDisable,\r\n                        setRootData,\r\n                        removeSelf: () => {\r\n                            const node = focusNode as TreeUtil.ElementNode;\r\n                            let index = -1;\r\n                            node.parent?.children.forEach((n, i) => {\r\n                                if (n == node) index = i;\r\n                            });\r\n                            node.parent?.children.splice(index, 1);\r\n                            const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n                            const listName = LogicElementUtil.getListParamName(parentWrap.type);\r\n                            if (listName == null) return;\r\n                            const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n                            list.splice(index, 1);\r\n                            setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                            setInvalidate({});\r\n                        }\r\n                    }}>\r\n                        <_DetailMainDiv>{LogicUtil.getDetailComponent(focusNode)}</_DetailMainDiv>\r\n                    </FactoryTreeContext.Provider>\r\n                </_DetailDiv>\r\n            </_PropsDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default LogicMainteTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #6c8186;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d87b;\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _TreeHeadHalf = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    background-color: #7fbdb47a;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #9fa9b6;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _DetailDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\nconst _DetailHeader = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #b4b29e; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _DetailHeaderLabel = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #a10000;\r\n    /* background-color: #bbd0d3; */\r\n    border: solid 1px #a10000;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 20px);\r\n    margin: 5px 0 0 10px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DetailMainDiv = styled.div`\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 44px);\r\n    margin: 0 0 0 4px;\r\n    background-color: #cfd3cc;\r\n    border: solid 1px #0026a1;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorArgumentMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'argument-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentMng;","import { useContext, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nnamespace ModifyOperations {\r\n\r\n    export type Props = {\r\n        mappingForm: () => void;\r\n        checkableFields: FormUtil.CheckableValue[];\r\n        isInputOK?: boolean;\r\n        firstRegist: () => void;\r\n        modifyRegist: () => void;\r\n    }\r\n\r\n    export const Component = (props: Props) => {\r\n        const { node, isModify, setModify, removeSelf } = useContext(FactoryTreeContext);\r\n\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n        const isComplete = FormUtil.isCompleteCheck(props.checkableFields);\r\n\r\n        return (<>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: isModify,\r\n                        callback: () => {\r\n                            if (wrap.data == null) {\r\n                                removeSelf();\r\n                            } else {\r\n                                props.mappingForm();\r\n                            }\r\n                            setModify(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !isModify || (props.isInputOK ?? isComplete),\r\n                        callback: () => {\r\n                            if (!isModify) {\r\n                                setModify(true);\r\n                            } else {\r\n                                if (wrap.data == null) {\r\n                                    props.firstRegist();\r\n                                } else {\r\n                                    props.modifyRegist();\r\n                                }\r\n                                setModify(false);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default ModifyOperations;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype FormProps = {\r\n    inputType: FormUtil.CheckableValue;\r\n    value: FormUtil.CheckableValue;\r\n};\r\n\r\nenum Level {\r\n    FIELD = 0,\r\n    INITIAL,\r\n    INHERIT_FIELD,\r\n    INHERIT_EXTEND,\r\n    INHERIT_SEND\r\n}\r\n\r\nconst EditorParamItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    /** 名前 */\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    /** 式 */\r\n    const [formulaItems, setFormulaItems] = useState<string[]>([]);\r\n    /** 変数の入力フォーム */\r\n    const [varFormList, setVarFormList] = useState<FormProps[]>([]);\r\n    // const [formJsxList, setFaormJsxList] = useState<JSX.Element[]>([]);\r\n\r\n    const isField = wrap.type === 'field-item';\r\n    const isCondition = wrap.type === 'condition-item';\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        setName({ value: param.name, errors: [] });\r\n        setFormulaItems(param.formulaItems.slice());\r\n        setVarFormList(param.values.map(v => {\r\n            return {\r\n                inputType: { value: v.type, errors: [] },\r\n                value: { value: v.value, errors: [] }\r\n            }\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const level: Level = useMemo(() => {\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        switch (parentType) {\r\n            case 'field-mng': return Level.FIELD;\r\n            case 'visual-mng':\r\n            case 'behavior-mng': return Level.INITIAL;\r\n            case 'inhfld-mng': return Level.INHERIT_FIELD;\r\n            case 'extend-mng': return Level.INHERIT_EXTEND;\r\n            case 'send-mng': return Level.INHERIT_SEND;\r\n        }\r\n        return -1;\r\n    }, [node]);\r\n\r\n    /**\r\n     * 引数とフィールド変数のキーリストを取得する。\r\n     */\r\n    const [argumentList, fieldKeyList] = useMemo(() => {\r\n        let argumentList: string[] = [];\r\n        const fieldKeys: string[] = [];\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const targetTypes: LogicUtil.NodeType[] = ['field-mng', 'behavior-mng', 'visual-mng', 'inhfld-mng', 'send-mng', 'extend-mng'];\r\n        if (targetTypes.includes(parentType)) {\r\n            const getLogicNode = () => {\r\n                switch (parentType) {\r\n                    case 'field-mng':\r\n                    case 'visual-mng':\r\n                    case 'behavior-mng': return node.parent?.parent;\r\n                    case 'inhfld-mng':\r\n                    case 'send-mng':\r\n                    case 'extend-mng': return node?.parent?.parent?.parent?.parent;\r\n                }\r\n            };\r\n            const logicItem = (getLogicNode()?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n            // 引数リストを追加\r\n            const argMng = logicItem.mngs.find(mng => mng.type === 'argument-mng');\r\n            if (argMng != undefined) {\r\n                argumentList = (argMng.data as LogicUtil.NodeArgumentManager).\r\n                    args.map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n            }\r\n            // 変数リストを追加\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (level >= Level.INITIAL && fieldMng != undefined) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                    fieldKeys.push(fieldName);\r\n                });\r\n            }\r\n        } else if (parentType === 'seedsend-mng') {\r\n            // シード配下のSendは特別に扱う（どのレベルにも属さない）\r\n            const argMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'seedarg-mng');\r\n            if (argMng != null) {\r\n                argumentList = (argMng.data as LogicUtil.NodeSeedArgManager).\r\n                    args.map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n            } else throw new Error('argMng is undefined.');\r\n        }\r\n        if (level >= Level.INHERIT_FIELD) {\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_RAD);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_LEN);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.RADIUS);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_R);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_G);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_B);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // フィールドキーにInherit配下のFieldパラメータを追加\r\n            if (level >= Level.INHERIT_EXTEND) {\r\n                const inhfldNode = LogicElementUtil.getInnerNode(node.parent?.parent as TreeUtil.ElementNode, 'inhfld-mng');\r\n                if (inhfldNode != null) {\r\n                    const fieldMng = (inhfldNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeFieldManager;\r\n                    fieldMng.fields.forEach(field => {\r\n                        const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                        fieldKeys.push(fieldName);\r\n                    });\r\n                }\r\n            }\r\n            // フィールドキーにExtendパラメータを追加\r\n            if (level === Level.INHERIT_SEND) {\r\n                const extendWrap = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'extend-mng') as LogicUtil.WrapElement;\r\n                const extendElement = extendWrap.data as LogicUtil.NodeParamManager;\r\n                //Extendにloop_countのパラメータがある場合\r\n                if (extendElement.params.find(\r\n                    param => (param.data as LogicUtil.NodeParamItem).name === ParamUtil.ExtendParamType.LOOP_COUNT\r\n                ) != undefined) {\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_COUNT);\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_ITERATE);\r\n                }\r\n            }\r\n        }\r\n        return [argumentList, fieldKeys];\r\n    }, [node]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const paramNameList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (item === 'var') num++;\r\n        });\r\n\r\n        if (varFormList.length < num) {\r\n            const addNum = num - varFormList.length;\r\n            for (let i = 0; i < addNum; i++) varFormList.push({\r\n                inputType: { value: 'direct', errors: [] },\r\n                value: { value: '', errors: [] }\r\n            });\r\n            setVarFormList(varFormList.slice());\r\n        } else if (varFormList.length > num) {\r\n            const delNum = varFormList.length - num;\r\n            for (let i = 0; i < delNum; i++) varFormList.splice(varFormList.length - delNum, delNum);\r\n            setVarFormList(varFormList.slice());\r\n        }\r\n    }, [formulaItems]);\r\n\r\n    /** 「(」の数-「)」の数 */\r\n    const parenthesisBalance = useMemo(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (['(', 'rand(', 'integer('].includes(item)) num++;\r\n            else if (item === ')') num--;\r\n        });\r\n        return num;\r\n    }, [formulaItems]);\r\n\r\n    /** 値の入力フォームのJSX */\r\n    const formJsxList = useMemo(() => {\r\n        return varFormList.map((v, i) => {\r\n\r\n            const getValueForm = (): JSX.Element => {\r\n                const type = v.inputType.value as LogicUtil.ParamInputType;\r\n                if (type === 'direct') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isNumber\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else {\r\n                    let list: string[] = [];\r\n                    if (type === 'argument') {\r\n                        list = argumentList;\r\n                    } else if (type === 'field') {\r\n                        list = fieldKeyList;\r\n                    } else if (type === 'self') {\r\n                        list = ParamUtil.SelfParams;\r\n                    } else if (type === 'constant') {\r\n                        list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                    }\r\n                    return (\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            list={list.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n            return <FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={`var_${i}`}\r\n                labelWidth={90}\r\n                marginTop={i === 0 ? 4 : 0}\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        checkable={v.inputType}\r\n                        width={142}\r\n                        isReadOnly={!isModify}\r\n                        setCheckable={(checkable) => {\r\n                            varFormList[i].inputType = checkable;\r\n                            if (isModify) {\r\n                                varFormList[i].value.value = checkable.value === 'direct' ? '0' : '';\r\n                            }\r\n                            setVarFormList(varFormList.slice());\r\n                        }}\r\n                        list={LogicUtil.ParamInputTypes.filter(item => {\r\n                            switch (item) {\r\n                                case 'direct':\r\n                                case 'constant':\r\n                                case 'argument': return true;\r\n                                case 'field': return level >= Level.INITIAL;\r\n                                case 'self': return level >= Level.INHERIT_FIELD;\r\n                            }\r\n                        }).map(item => {\r\n                            return { value: item, labelText: item };\r\n                        })}\r\n                    />\r\n                    {getValueForm()}\r\n                </>}\r\n            />;\r\n        });\r\n    }, [varFormList, isModify]);\r\n\r\n    const getFormulaJsx = () => {\r\n        let num = 0;\r\n        const jsxList: JSX.Element[] = [];\r\n        formulaItems.forEach((item) => {\r\n            if (jsxList.length > 0) {\r\n                jsxList.push(<span key={jsxList.length}>&nbsp;</span>);\r\n            }\r\n            if (item === 'var') {\r\n                jsxList.push(<_Var key={jsxList.length}>{`$\\{var_${num}}`}</_Var>);\r\n                num++;\r\n            } else {\r\n                jsxList.push(<_Sig key={jsxList.length}>{item}</_Sig>);\r\n            }\r\n        });\r\n        return jsxList;\r\n    }\r\n\r\n    const isLastVar = () => formulaItems.length > 0 && ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const isFormulaOK = parenthesisBalance === 0 && varFormList.length > 0 &&\r\n        ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const hasFormError = !isFormulaOK || varFormList.find(varForm => varForm.value.errors.length > 0) != undefined;\r\n\r\n\r\n    const getFormulaItem = (label: string, width: number, isEnable: boolean, value: string) => {\r\n        return {\r\n            label, width, isEnable,\r\n            callback: () => {\r\n                formulaItems.push(value);\r\n                setFormulaItems(formulaItems.slice());\r\n            }\r\n        };\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeParamItem = {\r\n                    name: name.value,\r\n                    formulaItems: formulaItems.slice(),\r\n                    values: varFormList.map(varForm => {\r\n                        return {\r\n                            type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                            value: varForm.value.value\r\n                        }\r\n                    })\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n            }}\r\n            isInputOK={parenthesisBalance === 0 && !hasFormError && name.errors.length === 0}\r\n            modifyRegist={() => {\r\n                const data = wrap.data as LogicUtil.NodeParamItem;\r\n                data.formulaItems = formulaItems.slice();\r\n                data.values = varFormList.map(varForm => {\r\n                    return {\r\n                        type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                        value: varForm.value.value\r\n                    }\r\n                });\r\n                if (isField) {\r\n                    const prevName = data.name;\r\n                    data.name = name.value;\r\n                    if (prevName !== name.value) {\r\n                        syncFieldName(node.parent as TreeUtil.ElementNode, prevName, name.value);\r\n                    }\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify || !isField}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = paramNameList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeParamItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('+', 50, isModify && isLastVar(), '+'),\r\n                        getFormulaItem('-', 50, isModify && isLastVar(), '-'),\r\n                        getFormulaItem('*', 50, isModify && isLastVar(), '*'),\r\n                        getFormulaItem('/', 50, isModify && isLastVar(), '/'),\r\n                        getFormulaItem('%', 50, isModify && isLastVar(), '%'),\r\n                        getFormulaItem('(', 35, isModify && !isLastVar(), '('),\r\n                        getFormulaItem(')', 35, isModify && isLastVar() && parenthesisBalance > 0, ')'),\r\n                        {\r\n                            label: 'del',\r\n                            width: 60,\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            callback: () => {\r\n                                formulaItems.splice(formulaItems.length - 1, 1);\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {!isCondition ? <></> : (\r\n                    <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            getFormulaItem('<', 50, isModify && isLastVar(), '<'),\r\n                            getFormulaItem('<=', 50, isModify && isLastVar(), '<='),\r\n                            getFormulaItem('=', 50, isModify && isLastVar(), '='),\r\n                            getFormulaItem('>=', 50, isModify && isLastVar(), '>='),\r\n                            getFormulaItem('>', 50, isModify && isLastVar(), '>'),\r\n                            getFormulaItem('&&', 50, isModify && isLastVar(), '&&'),\r\n                            getFormulaItem('||', 50, isModify && isLastVar(), '||'),\r\n                        ]}\r\n                    />\r\n                )}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('var', 70, isModify && !isLastVar(), 'var'),\r\n                        getFormulaItem('rand', 80, isModify && !isLastVar(), 'rand('),\r\n                        getFormulaItem('integer', 80, isModify && !isLastVar(), 'integer('),\r\n                        {\r\n                            label: 'clear',\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            width: 90,\r\n                            callback: () => {\r\n                                setFormulaItems([]);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_Formula\r\n                    isInvalid={!isFormulaOK}\r\n                >{getFormulaJsx()}</_Formula>\r\n                {formJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify && isField}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'field', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getFieldRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {!isField ? <></> : LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorParamItem;\r\n\r\n/**\r\n * ノードの変数を参照している箇所のリストを返す。\r\n * @param node 変数のノード\r\n * @param argName 変数名\r\n * @returns 参照パラメータリスト\r\n */\r\nexport const getFieldRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n * フィールド名の変更に伴い、式で参照している変数を同期する\r\n * @param mngNode ノード\r\n */\r\nexport const syncFieldName = (mngNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const type = (mngNode.data as LogicUtil.WrapElement).type;\r\n    if (type === 'field-mng') {\r\n        const logic = (mngNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n\r\n        const visualMng = logic.mngs.find(mng => mng.type === 'visual-mng');\r\n        if (visualMng != undefined) {\r\n            syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const behaviorMng = logic.mngs.find(mng => mng.type === 'behavior-mng');\r\n        if (behaviorMng != undefined) {\r\n            syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                // Inherit配下のField要素のチェック\r\n                if (inhfld != null) {\r\n                    syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                }\r\n                // Extend要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    } else if (type === 'inhfld-mng') {\r\n        const inheritWrap = mngNode.parent?.data as LogicUtil.WrapElement;\r\n\r\n        // Extend要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        // Send要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n}\r\n\r\nconst _Formula = styled.div<{\r\n    isInvalid: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 12px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    overflow-wrap: break-word;\r\n    height: 100px;//calc(100% - 4px);\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    background-color: #ffffff8b;\r\n    ${props => !props.isInvalid ? '' : css`\r\n        background-color: #ffe8628a;\r\n    `}\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    padding: 0 0 0 4px;\r\n    vertical-align: top;\r\n    margin: 5px 0 0 6px;\r\n`;\r\nconst _Var = styled.span`\r\n    color: #e70013;\r\n`;\r\nconst _Sig = styled.span`\r\n    color: #3333339d;\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport GloballDialog from \"../../../../dialog/globalDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorArgumentItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const logicNode = node.parent?.parent as TreeUtil.ElementNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n        setName({ ...name, value: param.name });\r\n        setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, argType]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeArgumentItem = {\r\n                    name: name.value,\r\n                    valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n                syncArgumentAdd(logicNode, name.value);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(logicNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = reservedList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeArgumentItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'color' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getArgumentRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    // DependしているInheritのSendパラメータを同期する\r\n                                    syncArgumentDel(logicNode, name.value);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentItem;\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param node 引数のノード\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param logicNode ロジックノード\r\n*/\r\nconst syncArgumentName = (logicNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n    const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n    if (fieldMng != undefined) {\r\n        syncFormula((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n    }\r\n    const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n    if (visualMng != undefined) {\r\n        syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n    if (behaviorMng != undefined) {\r\n        syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n    if (inhMng != undefined) {\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n            // Inherit配下のField要素のチェック\r\n            if (inhfld != null) {\r\n                syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n            // Extend要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            // Send要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        });\r\n    }\r\n\r\n    const syncParamName = (params: LogicUtil.WrapElement[]) => {\r\n        params.forEach(wrap => {\r\n            const item = wrap.data as LogicUtil.NodeParamItem;\r\n            if (item.name === prevName) {\r\n                item.name = newName;\r\n            }\r\n        });\r\n    }\r\n    if (wrap.type === 'logic-item') {\r\n\r\n        // dependしている箇所を全て反映するために再帰で洗う\r\n        const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n            const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n            if (inhMng == undefined) return;\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    const inhLogic = LogicElementUtil.getInnerWrapFixed(inh, 'inherit-logic').data as LogicUtil.NodeLogicItem;\r\n                    runRec(inhLogic);\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    const sendMng = LogicElementUtil.getInnerWrapFixed(inh, 'send-mng').data as LogicUtil.NodeParamManager;\r\n                    syncParamName(sendMng.params);\r\n                }\r\n            });\r\n        }\r\n        // ロジックを全て調査する\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(logic => {\r\n            runRec((logic.data as LogicUtil.WrapElement).data);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        const root = (rootNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeRoot;\r\n        const defs = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        console.log(defs.length);\r\n        defs.forEach(wrap => {\r\n            const interfaceWrap = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng');\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(interfaceWrap, 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            syncParamName(sendMng.params);\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const connWrap = logicNode.parent?.data as LogicUtil.WrapElement;\r\n        const sendMng = LogicElementUtil.getInnerWrapFixed(connWrap, 'send-mng').data as LogicUtil.NodeParamManager;\r\n        syncParamName(sendMng.params);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の更新に伴い、参照先のSend管理に処理（callback）を行う\r\n * @param logicNode ロジックノード\r\n * @param callback 処理\r\n */\r\nconst syncArgumentCallback = (\r\n    logicNode: TreeUtil.ElementNode,\r\n    callback: (sendNode: TreeUtil.ElementNode) => void\r\n) => {\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n\r\n    if (wrap.type === 'logic-item') {\r\n        const runRec = (logicNode: TreeUtil.ElementNode) => {\r\n            const inhMngNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'inherit-mng');\r\n            if (inhMngNode == undefined) return;\r\n            inhMngNode.children.forEach(child => {\r\n                const conn = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    runRec(LogicElementUtil.getInnerNodeFixed(child, 'inherit-logic'));\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    callback(LogicElementUtil.getInnerNodeFixed(child, 'send-mng'));\r\n                }\r\n            });\r\n        }\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(child => {\r\n            runRec(child);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        rootNode.children[0].children.forEach(seedNode => {\r\n            const interfaceNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'interface-mng');\r\n            const sendNode = LogicElementUtil.getInnerNodeFixed(interfaceNode, 'seedsend-mng');\r\n            const seed = (seedNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n            if (seed.entry === logicItem.name) {\r\n                callback(sendNode);\r\n            }\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const sendNode = LogicElementUtil.getInnerNodeFixed(logicNode.parent as TreeUtil.ElementNode, 'send-mng');\r\n        callback(sendNode);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentAdd = (logicNode: TreeUtil.ElementNode, newArgName: string) => {\r\n    const addNewParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n            { name: newArgName, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n        );\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        sendMng.params.push(paramWrap);\r\n        sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n    }\r\n    syncArgumentCallback(logicNode, addNewParam);\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentDel = (logicNode: TreeUtil.ElementNode, delArgName: string) => {\r\n    const delArgParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        let delIndex = -1;\r\n        sendMng.params.some((param, i) => {\r\n            if ((param.data as LogicUtil.NodeParamItem).name == delArgName) {\r\n                delIndex = i;\r\n                return 1;\r\n            }\r\n        });\r\n        sendMng.params.splice(delIndex, 1);\r\n        sendNode.children.splice(delIndex, 1);\r\n    }\r\n    syncArgumentCallback(logicNode, delArgParam);\r\n}","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Seed',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seed-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedManager).defs.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorLogicMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Logic',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'logic-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\n\r\nconst EditorLogicItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [isConnect, hasArgNode, hasFieldNode, hasConnectNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        return [\r\n            parentType === 'connector',\r\n            list.includes('argument-mng'),\r\n            list.includes('field-mng'),\r\n            list.includes('inherit-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        if (!isConnect) {\r\n            const param = wrap.data as LogicUtil.NodeLogicItem;\r\n            setName({ ...name, value: param.name });\r\n        }\r\n    };\r\n\r\n    /** 既存のロジック名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => {\r\n        // インヘリットの場合、名前を持たないため取得しない\r\n        if (wrap.type === 'inherit-logic') return [];\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node, isConnect]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 引数要素の有無を判定\r\n     */\r\n    const hasArgument = () => {\r\n        const argumentNode = LogicElementUtil.getInnerNode(node, 'argument-mng');\r\n        if (argumentNode == null) return false;\r\n        return argumentNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'field-mng');\r\n        if (fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 派生要素の有無を判定\r\n     */\r\n    const hasInherit = () => {\r\n        const inheritNode = LogicElementUtil.getInnerNode(node, 'inherit-mng');\r\n        if (inheritNode == null) return false;\r\n        return inheritNode.children.length > 0;\r\n    }\r\n\r\n    return (<>\r\n        {isConnect ? <></> : (<>\r\n            <ModifyOperations.Component\r\n                mappingForm={mappingForm}\r\n                checkableFields={[name]}\r\n                firstRegist={() => {\r\n                    const element: LogicUtil.NodeLogicItem = {\r\n                        name: name.value,\r\n                        mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                    };\r\n                    element.name = name.value;\r\n                    wrap.data = element;\r\n\r\n                    element.mngs.forEach(mng => {\r\n                        const newNode = TreeUtil.createNode(mng, node);\r\n                        const data = (newNode.data as LogicUtil.WrapElement).data;\r\n                        (data as LogicUtil.NodeParamManager).params.forEach(param => {\r\n                            newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                        });\r\n                        node.children.push(newNode);\r\n                    });\r\n                    invalidate();\r\n                    setStore({ ...store });\r\n                }}\r\n                modifyRegist={() => {\r\n                    const param = wrap.data as LogicUtil.NodeLogicItem;\r\n                    const prevName = param.name;\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n                    // 名前が変わった場合、参照箇所も修正する\r\n                    if (prevName !== param.name) {\r\n                        syncLogicName(node, prevName, param.name);\r\n                    }\r\n                }}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"param\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Name\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={200}\r\n                                isReadOnly={!isModify}\r\n                                checkable={name}\r\n                                setCheckable={setName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => !existNameList.includes(value),\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n        </>)}\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Argument'}\r\n                        width={300}\r\n                        isUse={hasArgNode}\r\n                        isEnable={!hasArgument()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasArgNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'argument-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as LogicUtil.NodeArgumentManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            if (hasArgNode) listPos++;\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'field-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Inherit'}\r\n                            width={300}\r\n                            isUse={hasConnectNode}\r\n                            isEnable={!hasInherit()}\r\n                            callback={() => {\r\n                                let listPos = 2;\r\n                                if (hasArgNode) listPos++;\r\n                                if (hasFieldNode) listPos++;\r\n                                toggleElement(\r\n                                    hasConnectNode,\r\n                                    listPos,\r\n                                    {\r\n                                        type: 'inherit-mng',\r\n                                        data: {\r\n                                            inherits: []\r\n                                        } as LogicUtil.NodeConnectManager\r\n                                    }\r\n                                );\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        {isConnect ? <></> : (\r\n            <FormUtil.BorderPanel\r\n                title=\"operation\"\r\n                isEnable={!isModify}\r\n                innerJsx={<>\r\n                    {LogicElementUtil.getReplicateButton(node, !isModify, 'logic', store, setStore, invalidate)}\r\n                    {/* <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Replicate',\r\n                                isEnable: !isModify,\r\n                                // isEnable: false,\r\n                                callback: () => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Replicate this logic.\"\r\n                                        buttons={[\r\n                                            {\r\n                                                label: 'Cancel',\r\n                                                callback: () => {\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                label: 'Enter',\r\n                                                callback: () => {\r\n                                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                                    const name = wrap.data[namable] as string;\r\n                                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                    // mappingForm();\r\n                                                    invalidate();\r\n                                                }\r\n                                            }\r\n                                        ]}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    /> */}\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Delete',\r\n                                callback: () => {\r\n                                    const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                    const refers = getLocgicRefers(node, param.name);\r\n                                    if (refers.length === 0) {\r\n                                        removeSelf();\r\n                                    } else {\r\n                                        store.system.dialog = <ConfirmDialog.Component\r\n                                            message={`[${param.name}] is referenced in the Inherit.\\n${refers}`}\r\n                                        />;\r\n                                        setStore({ ...store });\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                    {/* 並び順入れ替えボタン */}\r\n                    {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n                </>}\r\n            />\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicItem;\r\n\r\n/**\r\n * ロジックを参照しているInheritのリストを返す。\r\n * @param node 現在のノード\r\n * @param logicName ロジック名\r\n * @returns 参照Inheritリスト\r\n */\r\nexport const getLocgicRefers = (node: TreeUtil.ElementNode, logicName: string) => {\r\n\r\n    const refers: string[] = [];\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        refers.push(conn.id);\r\n    }\r\n    searchLogicReferInherit(node, logicName, callback);\r\n    return refers;\r\n}\r\n\r\n/**\r\n * ロジック名の変更に伴い、参照しているインヘリットを同期する\r\n * @param node ロジックノード\r\n */\r\nconst syncLogicName = (node: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        conn.depend = newName;\r\n    }\r\n    searchLogicReferInherit(node, prevName, callback);\r\n}\r\n\r\nconst searchLogicReferInherit = (\r\n    node: TreeUtil.ElementNode,\r\n    logicName: string,\r\n    callback: (conn: LogicUtil.NodeInheritConnector) => void\r\n) => {\r\n    const logicMngNode = node.parent as TreeUtil.ElementNode\r\n    const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng == undefined) return;\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n            if (conn.method === 'create') {\r\n                const inhLogic = LogicElementUtil.getInnerWrap(inh, 'inherit-logic');\r\n                runRec(inhLogic?.data);\r\n            } else {\r\n                if (conn.depend === logicName) {\r\n                    callback(conn);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    logicMngNode.children.forEach(logic => {\r\n        runRec((logic.data as LogicUtil.WrapElement).data);\r\n    });\r\n}","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorBehiviorMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [isVector, hasDecayParam, hasGravityParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.BehaviorParamType.VEC_X),\r\n            list.includes(ParamUtil.ModulateParamType.DECAY_RATE),\r\n            list.includes(ParamUtil.ModulateParamType.GRAVITY_VAL)\r\n        ]\r\n    }, [node]);\r\n\r\n    const exchangeElements = (flag: boolean, listPos: number,\r\n        trueParamElements: LogicUtil.NodeParamItem[],\r\n        falseParamElements: LogicUtil.NodeParamItem[]\r\n    ) => {\r\n        const size = (flag ? trueParamElements : falseParamElements).length;\r\n        LogicElementUtil.removeChild(node, listPos, size);\r\n\r\n        (flag ? trueParamElements : falseParamElements).forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    const exchangeVectorMethod = () => {\r\n        exchangeElements(!isVector, 3,\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_X, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_Y, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ],\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_RAD, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_LEN, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ]\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            mng.params.splice(listPos, size);\r\n            node.children.splice(listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                mng.params.splice(listPos + i, 0, wrap);\r\n                const newNode = TreeUtil.createNode(wrap, node);\r\n                node.children.splice(listPos + i, 0, newNode);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Vector method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Direction method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={!isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"modulate\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Decay'}\r\n                            width={300}\r\n                            isUse={hasDecayParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDecayParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_RATE,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.9' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Gravity'}\r\n                            width={300}\r\n                            isUse={hasGravityParam}\r\n                            callback={() => {\r\n                                toggleElements(hasGravityParam, !hasDecayParam ? 5 : 7, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_VAL,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.2' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorBehiviorMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype Medhod = 'blank' | 'particle' | 'snake'\r\n\r\nconst EditorVisualMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [drawMethod, hasDisappearParam, hasShrinkParam, hasFlashParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        let drawMethod: Medhod = 'blank';\r\n        if(list.length > 0) {\r\n            drawMethod = list.includes(ParamUtil.VisualParamType.THICKNESS) ? 'snake' : 'particle';\r\n        }\r\n        return [\r\n            drawMethod,\r\n            list.includes(ParamUtil.EffectParamType.DISAPPEAR_START),\r\n            list.includes(ParamUtil.EffectParamType.SHRINK_START),\r\n            list.includes(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME)\r\n        ]\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    const addElements = (paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        paramElements.forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n    const removeElements = (elementNameList: string[]) => {\r\n        const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        elementNameList.forEach((name) => {\r\n            mng.params.forEach((param, i) => {\r\n                if((param.data as LogicUtil.NodeParamItem).name === name) {\r\n                    LogicElementUtil.removeChild(node, i, 1);\r\n                }\r\n            });\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam || hasFlashParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'None'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'blank'}\r\n                            callback={() => {\r\n                                mng.params.length = 0;\r\n                                node.children.length = 0;\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Snake Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'snake'}\r\n                            callback={() => {\r\n                                removeElements([\r\n                                    ParamUtil.VisualParamType.RADIUS\r\n                                ]);\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.THICKNESS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Particle Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'particle'}\r\n                            callback={() => {\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.RADIUS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '20' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"effect\"\r\n            isEnable={!isModify && drawMethod !== 'blank'}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Disappear'}\r\n                            width={300}\r\n                            isUse={hasDisappearParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDisappearParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.DISAPPEAR_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Shrink'}\r\n                            width={300}\r\n                            isUse={hasShrinkParam}\r\n                            callback={() => {\r\n                                toggleElements(hasShrinkParam, !hasDisappearParam ? 5 : 6, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.SHRINK_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Flash'}\r\n                            width={300}\r\n                            isUse={hasFlashParam}\r\n                            callback={() => {\r\n                                toggleElements(hasFlashParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_APPEAR_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_HIDE_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorVisualMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInheritConnMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeConnectManager;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Inherit',\r\n                        callback: () => {\r\n                            const wrap: LogicUtil.WrapElement = {\r\n                                type: 'connector',\r\n                                data: null\r\n                            }\r\n                            mng.inherits.push(wrap);\r\n                            const newNode = TreeUtil.createNode(wrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorInheritConnector = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, invalidate, setModify, isModify, removeSelf, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const [condition, setCondition] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [identify, setIdentify] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [method, setMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [depend, setDepend] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n        setMethod({ ...method, value: param.method });\r\n        setDepend({ ...depend, value: param.depend });\r\n        setIdentify({ ...identify, value: param.id });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n            // 派生識別名（自動命名）の初期値を取得\r\n            const defaultName = LogicElementUtil.getNumberingOnPrefixName('id_', node.parent as TreeUtil.ElementNode);\r\n            setIdentify({ ...identify, value: defaultName });\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const isCreate = method.value === 'create';\r\n\r\n    const hasFieldNode = useMemo(() => {\r\n        return LogicElementUtil.getInnerNode(node, 'inhfld-mng') != null;\r\n    }, [node]);\r\n\r\n    /** 引用するロジックリスト */\r\n    const logicList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return inheritMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    /** 同階層の既存のインヘリットIDを取得（重複チェックに使用） */\r\n    const idList = useMemo(() => {\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    const initConnectorNode = (param: LogicUtil.NodeInheritConnector) => {\r\n        param.mngs = [];\r\n        node.children = [];\r\n        param.mngs.push({\r\n            type: 'extend-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        param.mngs.push({\r\n            type: 'send-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        if (isCreate) {\r\n            param.mngs.push({\r\n                type: 'inherit-logic',\r\n                data: {\r\n                    mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                } as LogicUtil.NodeInheritItem\r\n            });\r\n        }\r\n        wrap.data = param;\r\n\r\n        param.mngs.forEach(mng => {\r\n            const newNode = TreeUtil.createNode(mng, node);\r\n            const data = (newNode.data as LogicUtil.WrapElement);\r\n            switch (data.type) {\r\n                case 'inherit-logic': {\r\n                    LogicElementUtil.syncTreeElementFromWrap(newNode);\r\n                } break;\r\n                case 'send-mng': {\r\n                    const connector = (newNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.method === 'depend') {\r\n                        console.log('initSendParams');\r\n                        initSendParams(newNode, rootData);\r\n                    }\r\n                } break;\r\n            }\r\n            node.children.push(newNode);\r\n        });\r\n    }\r\n\r\n    const getSendParamList = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement): string[] => {\r\n        const connector = (sendNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = inheritMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement) => {\r\n        const sendParamList = getSendParamList(sendNode, rootData);\r\n        // console.log(sendParamList);\r\n        const wrap = sendNode.data as LogicUtil.WrapElement;\r\n        const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n                sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'inhfld-mng');\r\n        if(fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n\r\n    const isDisable = wrap.data == null ? false : (wrap.data as LogicUtil.NodeInheritConnector).disable ?? false;\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[identify, method, depend]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeInheritConnector = {\r\n                    method: method.value as LogicUtil.InheritMethod,\r\n                    depend: depend.value,\r\n                    id: identify.value,\r\n                    mngs: []\r\n                };\r\n                initConnectorNode(param);\r\n                invalidate();\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                const isChange = param.method !== method.value || param.depend !== depend.value;\r\n                param.method = method.value as LogicUtil.InheritMethod;\r\n                param.depend = depend.value;\r\n                param.id = identify.value;\r\n                wrap.data = param;\r\n\r\n                if (isChange) {\r\n                    initConnectorNode(param);\r\n                }\r\n                invalidate();\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={method}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                // createが選択されたらdependを空にする\r\n                                if (checkable.value === 'create') {\r\n                                    setDepend({ ...depend, value: '' });\r\n                                }\r\n                                setMethod(checkable);\r\n                            }}\r\n                            list={LogicUtil.ConnectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Depend\"\r\n                    isEnable={method.value === 'depend'}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={depend}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setDepend}\r\n                            list={logicList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            dependency={[method]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => {\r\n                                        return method.value !== 'depend' || ValidateUtil.checkRequired(value);\r\n                                    },\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Identify\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={identify}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setIdentify}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !idList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                0,\r\n                                {\r\n                                    type: 'inhfld-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Disable'}\r\n                        width={300}\r\n                        isUse={isDisable}\r\n                        isEnable={!isModify}\r\n                        callback={() => {\r\n                            const data = (wrap.data as LogicUtil.NodeInheritConnector);\r\n                            if (isDisable) {\r\n                                data.disable = undefined;\r\n                            } else {\r\n                                data.disable = true;\r\n                            }\r\n                            invalidate();\r\n                        }}\r\n                    />}\r\n                />\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'inherit', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Edit local',\r\n                            isEnable: !isModify && !isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Create a clone from the depended inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                                                const logicList = logicMng.defs.map(def => def.data as LogicUtil.NodeLogicItem);\r\n                                                // ディペンドしているロジックを取得\r\n                                                const dependLogic = logicList.find(inherit => inherit.name === depend.value);\r\n                                                if (dependLogic != undefined) {\r\n                                                    const cloneLogic = JSON.parse(JSON.stringify(dependLogic)) as LogicUtil.NodeLogicItem;\r\n                                                    const connectItem: LogicUtil.NodeInheritItem = {\r\n                                                        mngs: cloneLogic.mngs\r\n                                                    };\r\n                                                    const newWrap: LogicUtil.WrapElement = {\r\n                                                        type: 'inherit-logic',\r\n                                                        data: connectItem\r\n                                                    };\r\n                                                    const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                                                    // 子要素の展開\r\n                                                    newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                    const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                    param.method = 'create';\r\n                                                    param.depend = '';\r\n                                                    mappingForm();\r\n                                                }\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Detach global',\r\n                            isEnable: !isModify && isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Detach a clone from the this inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                let rootNode = node;\r\n                                                while (rootNode.parent != null) rootNode = rootNode.parent;\r\n                                                const inheritNode = node.children.find(el => (el.data as LogicUtil.WrapElement).type === 'inherit-logic');\r\n                                                const logicMngNode = rootNode.children.find(el => (el.data as LogicUtil.WrapElement).type === 'logic-mng');\r\n                                                if (logicMngNode == undefined || inheritNode == undefined) return;\r\n                                                const inherit = (inheritNode.data as LogicUtil.WrapElement).data;\r\n                                                const clone = JSON.parse(JSON.stringify((inherit))) as LogicUtil.NodeInheritItem;\r\n                                                // ロジック名（自動命名）を取得\r\n                                                const defaultName = LogicElementUtil.getNumberingOnPrefixName('clone_inherit_', logicMngNode);\r\n                                                const logicItem: LogicUtil.NodeLogicItem = {\r\n                                                    ...clone,\r\n                                                    name: defaultName\r\n                                                };\r\n                                                const newWrap: LogicUtil.WrapElement = {\r\n                                                    type: 'logic-item',\r\n                                                    data: logicItem\r\n                                                };\r\n\r\n                                                // ロジックマネージャに追加\r\n                                                const newNode = LogicElementUtil.addChild(newWrap, logicMngNode);\r\n                                                // 子要素の展開\r\n                                                newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                // 自身（コネクタ）からインヘリット要素を削除\r\n                                                LogicElementUtil.removeChild(node, 2, 1);\r\n\r\n                                                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                param.method = 'depend';\r\n                                                param.depend = logicItem.name;\r\n                                                mappingForm();\r\n\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnector;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ParamUtil from \"../util/paramUtil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\n\r\nnamespace SendTemplateDialog {\r\n\r\n    const FRAME_WIDTH = 450;\r\n    const FRAME_HEIGHT = 160;\r\n    const COMPONENT_WIDTH = 296;\r\n\r\n    export const ConnectParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, input property name!';\r\n\r\n        /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n        const paramNameList = useMemo(() => {\r\n            const owner = (LogicElementUtil.getInnerWrap(props.node.parent?.data as LogicUtil.WrapElement, 'inherit-logic') as LogicUtil.WrapElement).data;\r\n            return LogicElementUtil.getParamNameList(owner);\r\n        }, [props.node]);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    // Sendにパラメータを追加\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: xName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }] }\r\n                    ), props.node);\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: yName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }] }\r\n                    ), props.node);\r\n\r\n                    // 派生ロジックに引数を追加\r\n                    const logicNode = LogicElementUtil.getInnerNode(props.node.parent as TreeUtil.ElementNode, 'inherit-logic') as TreeUtil.ElementNode;\r\n                    const hasArgNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') != undefined;\r\n                    if (!hasArgNode) {\r\n                        LogicElementUtil.insertChild({\r\n                            type: 'argument-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeArgumentManager\r\n                        }, logicNode, 0);\r\n                    }\r\n                    const argNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') as TreeUtil.ElementNode;\r\n\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: xName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: yName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n\r\n                    // 派生ロジックの座標に引数を設定\r\n                    const behaviorNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'behavior-mng') as TreeUtil.ElementNode;\r\n                    const setParamValue = (prpName: string, argName: string) => {\r\n                        const params = behaviorNode.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                        const targetParam = params.find(param => param.name === prpName) as LogicUtil.NodeParamItem;\r\n                        targetParam.formulaItems = ['var'];\r\n                        targetParam.values = [{ type: 'argument', value: argName }];\r\n                    }\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_X, xName.value);\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_Y, yName.value);\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (yName.value !== '') list.push(yName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[yName]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (xName.value !== '') list.push(xName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[xName]}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n\r\n    export const SetParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, select property name!';\r\n\r\n        const list = useMemo(() => {\r\n            return props.node.children.map(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                return (wrap.data as LogicUtil.NodeParamItem).name;\r\n            });\r\n        }, []);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    const paramList = props.node.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                    const xParam = paramList.find(param => param.name === xName.value) as LogicUtil.NodeParamItem;\r\n                    const yParam = paramList.find(param => param.name === yName.value) as LogicUtil.NodeParamItem;\r\n                    xParam.formulaItems = ['var'];\r\n                    xParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }];\r\n                    yParam.formulaItems = ['var'];\r\n                    yParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }];\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== yName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== xName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SendTemplateDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #d0e7e718;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSendManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const isDepend = () => {\r\n        const conn = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        return conn.method === 'depend';\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"template\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Connect Position',\r\n                            isEnable: !isDepend(),\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.ConnectParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Set Position',\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.SetParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSendManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFieldMng = () => {\r\n    const { invalidate, node, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Field',\r\n                        callback: () => {\r\n                            // const newWrap: FactoryUtil.WrapNode = FactoryUtil.createParamWrap('field-item',\r\n                            //     { name: '', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                            // );\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'field-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFieldMng;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorExtendMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [hasLoopParam, hasInvokeParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name as ParamUtil.ExtendParam;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.ExtendParamType.LOOP_COUNT),\r\n            list.includes(ParamUtil.ExtendParamType.INVOKE)\r\n        ]\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Loop'}\r\n                            width={300}\r\n                            isUse={hasLoopParam}\r\n                            callback={() => {\r\n                                toggleElement(hasLoopParam, 0, {\r\n                                    type: 'param-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.LOOP_COUNT,\r\n                                        formulaItems: ['var'],\r\n                                        values: [{ type: 'direct', value: '1' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Invoke'}\r\n                            width={300}\r\n                            isUse={hasInvokeParam}\r\n                            callback={() => {\r\n                                toggleElement(hasInvokeParam, hasLoopParam ? 1 : 0, {\r\n                                    type: 'condition-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.INVOKE,\r\n                                        formulaItems: ['var', '=', 'var'],\r\n                                        values: [{ type: 'direct', value: '0' }, { type: 'direct', value: '0' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorExtendMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\n\r\nconst EditorSeedItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [entry, setEntry] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [permit, setPermit] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setEntry({ ...entry, value: param.entry });\r\n        setPermit({ ...permit, value: param.permit })\r\n    };\r\n\r\n    /** 既存のシード名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    // 引用するロジックリスト\r\n    const logicNameList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const logicMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return logicMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    const getSendParamList = (): string[] => {\r\n        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n        const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = logicMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = () => {\r\n        const sendParamList = getSendParamList();\r\n        const sendNode = LogicElementUtil.getInnerNode(node, 'interface-mng', 'seedsend-mng') as TreeUtil.ElementNode;\r\n        const params = ((sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('seedsend-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n            }\r\n        });\r\n        LogicElementUtil.syncTreeElementFromWrap(sendNode);\r\n    }\r\n\r\n    const getDefaultSeedMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'interface-mng',\r\n                data: {\r\n                    mngs: [\r\n                        {\r\n                            type: 'seedarg-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeSeedArgManager\r\n                        },\r\n                        {\r\n                            type: 'seedsend-mng',\r\n                            data: {\r\n                                params: []\r\n                            } as LogicUtil.NodeSeedSendManager\r\n                        },\r\n                    ]\r\n                } as LogicUtil.NodeInterfaceMng\r\n            },\r\n            {\r\n                type: 'thumbnail-mng',\r\n                data: {\r\n                    items: []\r\n                } as LogicUtil.NodeThumnailManager\r\n            },\r\n            {\r\n                type: 'sample-mng',\r\n                data: {\r\n                    samples: []\r\n                } as LogicUtil.NodeSampleManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, entry, permit]}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSeedItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    entry: entry.value,\r\n                    permit: permit.value as LogicUtil.PermitType,\r\n                    mngs: getDefaultSeedMngs()\r\n                };\r\n                wrap.data = element;\r\n\r\n                LogicElementUtil.syncTreeElementFromWrap(node);\r\n                // 参照しているロジックの引数をSendに設定\r\n                initSendParams();\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedItem;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.permit = permit.value as LogicUtil.PermitType;\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 24),\r\n                                    errorType: \"length\"\r\n                                },\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Entry\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={entry}\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setEntry}\r\n                            list={logicNameList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Permit\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={permit}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setPermit}\r\n                            list={LogicUtil.PermitTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'seed', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedItem;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext as LogicTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorThumbnailMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(LogicTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeThumnailManager;\r\n\r\n    const hasSample = useMemo(() => {\r\n        const sampleMngNode = LogicElementUtil.getInnerNode(node.parent as TreeUtil.ElementNode, 'sample-mng') as TreeUtil.ElementNode;\r\n        return sampleMngNode.children.length as number > 0;\r\n    }, []);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={hasSample}\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Thumbnail',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'thumbnail-item',\r\n                                data: null\r\n                            }\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport Particle from \"../../../../graphic/particle\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst WND_SIZE = 100;\r\n\r\nconst EditorThumbnailItem = () => {\r\n    const { rootData, node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n    const data = wrap.data as LogicUtil.NodeThumbnailItem;\r\n\r\n\r\n    const seedWrap = node.parent?.parent?.data as LogicUtil.WrapElement;\r\n    const sampleMng = LogicElementUtil.getInnerWrap(seedWrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n    const samples = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [urls, setUrls] = useState<string[]>([]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n        setName({ ...name, value: param.name });\r\n        setFrame({ ...frame, value: param.frame.toString() });\r\n    };\r\n    \r\n    /** 既存のサムネイル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n            setTimeout(() => {\r\n                const urls: string[] = [];\r\n                samples.forEach((sample, i) => {\r\n                    urls.push(getThumbnailURL(data.frame, i));\r\n                });\r\n                setUrls(urls);\r\n            }, 1);\r\n        }\r\n    }, [node]);\r\n\r\n    const getSeedValueMap = (sampleNo: number): PreviewUtil.ValueMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ValueMap[] = argMng.args.map((arg, i) => {\r\n            const name = (arg.data as LogicUtil.NodeSeedArgItem).name;\r\n            const value = samples[sampleNo].values[i];\r\n            return { name, value }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams.map(item => {\r\n            return { name: item.name, value: PreviewUtil.convertParamsToValue(item.name, sendParams, argMap) ?? 0 }\r\n        });\r\n    }\r\n\r\n    const getThumbnailURL = (targetFrame: number, sampleNo: number) => {\r\n        console.log('create start!');\r\n        const owner: Particle.Instance[] = [];\r\n\r\n        let frameCnt = 0;\r\n        do {\r\n            if (frameCnt === 0) {\r\n                const seed = (node.parent?.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n                const logicManager = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                const logic = logicManager.defs.find(logic => (logic.data as LogicUtil.NodeLogicItem).name === seed.entry);\r\n                if (logic == undefined) break;\r\n\r\n                const sendValueMapList = getSeedValueMap(sampleNo);\r\n                owner.push(new Particle.Instance(\r\n                    PreviewUtil.buildLogicProps(owner, logic.data, rootData, sendValueMapList))\r\n                );\r\n            }\r\n\r\n            if (frameCnt === targetFrame) {\r\n                return CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                });\r\n            }\r\n\r\n            // パーティクルの更新\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                particle.update();\r\n            }\r\n\r\n            // 死滅したパーティクルの削除\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frameCnt > 500 || owner.length > 3000) break;\r\n            frameCnt++;\r\n        } while (owner.length > 0);\r\n        return '';\r\n    }\r\n\r\n    const pictureJsxList = useMemo(() => {\r\n        const sampleMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n        return sampleMng.samples.map((wrap, i) => {\r\n            const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n\r\n            const url = urls[i];\r\n            const imgJsx = url == undefined ? <></> : <_IMG src={urls[i]} />;\r\n            return (\r\n                <_SampleDiv key={i}>-\r\n                    <_SampleName>{sample.name}</_SampleName>\r\n                    <_CanvasDiv>\r\n                        {imgJsx}\r\n                    </_CanvasDiv>\r\n                </_SampleDiv>\r\n            );\r\n        });\r\n    }, [node, urls]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, frame]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeThumbnailItem = {\r\n                    name: name.value,\r\n                    frame: Number(frame.value),\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n                param.name = name.value;\r\n                param.frame = Number(frame.value);\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"preview\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {pictureJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailItem;\r\n\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport DrawUtil from \"../../../graphic/drawUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\n\r\nnamespace LogicFormUtil {\r\n\r\n    export const buildPreviewForms = (\r\n        isReadOnly: boolean,\r\n        argumentList: LogicUtil.NodeSeedArgItem[],\r\n        formgrpList: LogicUtil.NodeFromGrpItem[],\r\n        formList: FormUtil.CheckableValue[],\r\n        setFormList: ((formList: FormUtil.CheckableValue[]) => void)\r\n    ): JSX.Element[] => {\r\n        const list: JSX.Element[] = [];\r\n        const usedGrps: string[] = [];\r\n        formList.forEach((form, i) => {\r\n            const argument = argumentList[i];\r\n            const formgrp = formgrpList.find(grp => grp.args.includes(argument.name));\r\n            if (formgrp != undefined) {\r\n                // 設定済みであれば追加しない\r\n                if (usedGrps.includes(formgrp.name)) return 1;\r\n                // 利用済みリストに追加\r\n                usedGrps.push(formgrp.name);\r\n                const targetForms: number[] = [];\r\n                argumentList.forEach((arg, j) => {\r\n                    if (formgrp.args.includes(arg.name)) {\r\n                        targetForms.push(j);\r\n                    }\r\n                });\r\n                const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                    r: Number(formList[targetForms[0]].value),\r\n                    g: Number(formList[targetForms[1]].value),\r\n                    b: Number(formList[targetForms[2]].value),\r\n                    a: 255\r\n                }).substring(0, 7);\r\n                // console.log(colorCode);\r\n                list.push(<div key={i}>\r\n                    <FormUtil.Record\r\n                        jsx={\r\n                            <_Message>{formgrp.name}: <_Type>color </_Type><_Range>({0} ～ {255} respectively)</_Range></_Message>\r\n                        }\r\n                    />\r\n                    <FormUtil.Record\r\n                        jsx={<>\r\n                            {targetForms.map((formIndex, j) => {\r\n                                return (\r\n                                    <FormUtil.TextField\r\n                                        key={formIndex}\r\n                                        width={72}\r\n                                        marginLeft={j === 0 ? 5 : 4}\r\n                                        isNumber\r\n                                        isReadOnly={isReadOnly}\r\n                                        checkable={formList[formIndex]}\r\n                                        setCheckable={() => {\r\n                                            setFormList(formList.slice());\r\n                                        }}\r\n                                        validates={[\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            },\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkNumberRange(value, argument.min, argument.max),\r\n                                                errorType: 'value'\r\n                                            }\r\n                                        ]}\r\n                                    />\r\n                                );\r\n                            })}\r\n                            <_Color type=\"color\" value={colorCode}\r\n                                disabled={isReadOnly}\r\n                                onChange={(value) => {\r\n                                    const rgba = DrawUtil.convertRgbaFromColorCode(value.target.value + 'ff');\r\n                                    if (rgba != null) {\r\n                                        formList[targetForms[0]].value = rgba.r.toString();\r\n                                        formList[targetForms[1]].value = rgba.g.toString();\r\n                                        formList[targetForms[2]].value = rgba.b.toString();\r\n                                    }\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                            />\r\n                        </>}\r\n                    />\r\n                </div>);\r\n            } else {\r\n                let labelName = argument.name;\r\n                if(argument.disp != undefined) labelName = argument.disp;\r\n                list.push(<div key={i}>\r\n                    <FormUtil.Record\r\n                        jsx={\r\n                            <_Message>{labelName}: <_Type>number </_Type><_Range>({argument.min} ～ {argument.max})</_Range></_Message>\r\n                        }\r\n                    />\r\n                    <FormUtil.Record\r\n                        jsx={<>\r\n                            <FormUtil.TextField\r\n                                width={142}\r\n                                marginLeft={6}\r\n                                isNumber\r\n                                isReadOnly={isReadOnly}\r\n                                step={argument.step}\r\n                                checkable={form}\r\n                                setCheckable={() => {\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, argument.min, argument.max),\r\n                                        errorType: 'value'\r\n                                    }\r\n                                ]}\r\n                            />\r\n                            <_Tsumami type=\"range\" value={Number(form.value)} min={argument.min} max={argument.max} step={argument.step}\r\n                                disabled={isReadOnly}\r\n                                onChange={(value) => {\r\n                                    formList[i] = { ...form, value: value.target.value };\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                            />\r\n                        </>}\r\n                    />\r\n                </div>);\r\n            }\r\n        });\r\n        return list;\r\n    }\r\n}\r\n\r\nexport default LogicFormUtil;\r\n\r\n\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n`;\r\n\r\nconst _Type = styled.span`\r\n    color: #c10000;\r\n    font-weight: 600;\r\n`;\r\nconst _Range = styled.span`\r\n    color: #423e84fb;\r\n`;\r\n\r\nconst _Tsumami = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 11px 0 0 6px;\r\n    width: calc(100% - 160px);\r\n`;\r\n\r\nconst _Color = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 3px 0 0 6px;\r\n    width: 100px;\r\n    height: 34px;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../util/logicFormUtil\";\r\n\r\nconst EditorSampleItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [paramForms, setParamForms] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSampleItem;\r\n        setName({ ...name, value: param.name });\r\n        setParamForms(param.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のサンプル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const [seedargList, formgrpList]: [LogicUtil.NodeSeedArgItem[], LogicUtil.NodeFromGrpItem[]] = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'seedarg-mng');\r\n        const argInfoList = (argMng.data as LogicUtil.NodeSeedArgManager).\r\n            args.map(arg => {\r\n                return arg.data as LogicUtil.NodeSeedArgItem;\r\n            });\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        const formgrpMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'formgrp-mng');\r\n        if (formgrpMng != null) {\r\n            formgrpList = (formgrpMng.data as LogicUtil.NodeFromgrpManager).\r\n                defines.map(arg => {\r\n                    return arg.data as LogicUtil.NodeFromGrpItem;\r\n                });\r\n        }\r\n        return [argInfoList, formgrpList];\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setParamForms(seedargList.map(arg => {\r\n                let defval = ' ';\r\n                if (arg.defval != undefined) defval = arg.defval.toString();\r\n                return { value: defval, errors: [] };\r\n            }));\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const formList = useMemo(() => {\r\n        return LogicFormUtil.buildPreviewForms(\r\n            !isModify, seedargList, formgrpList, paramForms, setParamForms\r\n        );\r\n        // return paramForms.map((paramForm, i) => {\r\n        //     const arg = argInfoList[i];\r\n        //     return <FormUtil.FormRecord key={i}\r\n        //         titleLabel={arg.name}\r\n        //         jsx={\r\n        //             <FormUtil.TextField\r\n        //                 width={150}\r\n        //                 isReadOnly={!isModify}\r\n        //                 checkable={paramForm}\r\n        //                 setCheckable={(checkable) => {\r\n        //                     paramForms[i] = checkable;\r\n        //                     setParamForms(paramForms.slice());\r\n        //                 }}\r\n        //                 isNumber\r\n        //                 step={arg.step}\r\n        //                 validates={[\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkRequired(value),\r\n        //                         errorType: \"required\"\r\n        //                     },\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkNumberRange(value, arg.min, arg.max),\r\n        //                         errorType: \"value\"\r\n        //                     },\r\n        //                 ]}\r\n        //             />\r\n        //         }\r\n        //     />\r\n        // });\r\n    }, [paramForms, isModify]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name].concat(paramForms)}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSampleItem = {\r\n                    name: name.value,\r\n                    values: []\r\n                };\r\n                paramForms.forEach((form, i) => {\r\n                    element.values[i] = Number(form.value);\r\n                });\r\n                wrap.data = element;\r\n\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSampleItem;\r\n                param.name = name.value;\r\n                paramForms.forEach((form, i) => {\r\n                    param.values[i] = Number(form.value);\r\n                });\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {formList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'preset', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSampleMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Preset',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'sample-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSampleManager).samples.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleMng;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInterfaceManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const argMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedarg-mng');\r\n    const sendMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedsend-mng');\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(node.parent as TreeUtil.ElementNode, 'sample-mng');\r\n\r\n    const [hasGroupNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        return [\r\n            list.includes('formgrp-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const hasArgument = (): boolean => {\r\n        return argMngNode.children.length > 0;\r\n    }\r\n\r\n    /**\r\n     * グループ要素の有無を判定\r\n     */\r\n    const hasGroup = () => {\r\n        const groupMngNode = LogicElementUtil.getInnerNode(node, 'formgrp-mng');\r\n        if (groupMngNode == null) return false;\r\n        return groupMngNode.children.length > 0;\r\n    }\r\n\r\n    const execute = () => {\r\n        // const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n        // 既存の引数を削除\r\n        if (hasArgument()) {\r\n\r\n            LogicElementUtil.removeChildAll(argMngNode);\r\n            LogicElementUtil.removeChildAll(sampleMngNode);\r\n        }\r\n\r\n        sendMngNode.children.forEach(child => {\r\n            const send = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem;\r\n            send.formulaItems = ['var'];\r\n            send.values = [{ type: 'argument', value: send.name }];\r\n\r\n            const newArgData: LogicUtil.NodeSeedArgItem = {\r\n                name: send.name,\r\n                step: 1,\r\n                min: -9999,\r\n                max: 9999,\r\n                defval: 0\r\n            }\r\n            const newArgWrap: LogicUtil.WrapElement = {\r\n                type: 'seedarg-item',\r\n                data: newArgData\r\n            };\r\n            const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n            argMng.args.push(newArgWrap);\r\n            argMngNode.children.push(TreeUtil.createNode(newArgWrap, argMngNode));\r\n            invalidate();\r\n        });\r\n    }\r\n\r\n    const initDefaultSetting = () => {\r\n        if (!hasArgument()) {\r\n            execute();\r\n        } else {\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Are you sure you want to delete the existing element?\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        callback: () => {\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Execute',\r\n                        callback: () => {\r\n                            execute();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            setStore({ ...store });\r\n        }\r\n        invalidate();\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Group'}\r\n                        width={300}\r\n                        isUse={hasGroupNode}\r\n                        isEnable={!hasGroup()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasGroupNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'formgrp-mng',\r\n                                    data: {\r\n                                        defines: []\r\n                                    } as LogicUtil.NodeFromgrpManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Initialize Params',\r\n                        callback: initDefaultSetting\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInterfaceManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedArgMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seedarg-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedArgManager).args.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedArgMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorSeedArgItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [min, setMin] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [max, setMax] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [step, setStep] = useState<FormUtil.CheckableValue>({ value: '1', errors: [] });\r\n    const [defval, setDefval] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    const seedNode = node.parent?.parent?.parent as TreeUtil.ElementNode;\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setMin({ ...min, value: param.min.toString() });\r\n        setMax({ ...max, value: param.max.toString() });\r\n        setStep({ ...step, value: param.step.toString() });\r\n        setDefval({ ...defval, value: param.defval == undefined ? '' : param.defval.toString() });\r\n        // setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, min, max, step, defval]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeSeedArgItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    min: Number(min.value),\r\n                    max: Number(max.value),\r\n                    step: Number(step.value),\r\n                    defval: defval.value === '' ? undefined : Number(defval.value),\r\n                    // valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                wrap.data = param;\r\n                syncArgumentAdd(seedNode as TreeUtil.ElementNode, param);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.min = Number(min.value);\r\n                param.max = Number(max.value);\r\n                param.step = Number(step.value);\r\n                param.defval = defval.value === '' ? undefined : Number(defval.value);\r\n                // param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(seedNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 16),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Min\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={min}\r\n                            setCheckable={setMin}\r\n                            isNumber\r\n                            dependency={[max]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) < Number(max.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Max\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={max}\r\n                            setCheckable={setMax}\r\n                            isNumber\r\n                            dependency={[min]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) > Number(min.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Step\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={step}\r\n                            setCheckable={setStep}\r\n                            isNumber\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Default\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={defval}\r\n                            setCheckable={setDefval}\r\n                            isNumber\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'color' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                /> */}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'argument', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                                const refers = getArgumentRefers(seedNode, param.name);\r\n                                if (refers.length === 0) {\r\n                                    const curIndex = LogicElementUtil.getCurrentIndex(node);\r\n                                    if (curIndex === -1) throw new Error('[curIndex] is -1.');\r\n                                    syncArgumentDel(seedNode, curIndex);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtonsCallback(node, invalidate, (index, isUpper) => {\r\n                    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n                    const offset = isUpper ? -1 : 1;\r\n                    sampleMng.samples.forEach(wrap => {\r\n                        const values = (wrap.data as LogicUtil.NodeSampleItem).values;\r\n                        const swapNode = values[index];\r\n                        values[index] = values[index + offset];\r\n                        values[index + offset] = swapNode;\r\n                    });\r\n                })}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (seedNode: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    const sendMng = sendMngWrap.data as LogicUtil.NodeSeedSendManager;\r\n    sendMng.params.forEach(wrap => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        param.values.forEach(varItem => {\r\n            if (varItem.type === 'argument' && varItem.value === argName) {\r\n                refers.push(param.name);\r\n            }\r\n        });\r\n    });\r\n    return refers;\r\n}\r\n\r\nexport default EditorSeedArgItem;\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param seedNode Seedノード\r\n*/\r\nconst syncArgumentName = (seedNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    syncFormula((sendMngWrap.data as LogicUtil.NodeParamManager).params);\r\n\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Sample管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentAdd = (seedNode: TreeUtil.ElementNode, arg: LogicUtil.NodeSeedArgItem) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.push(arg.defval ?? arg.min);\r\n    });\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentDel = (seedNode: TreeUtil.ElementNode, delIndex: number) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.splice(delIndex, 1);\r\n    });\r\n}","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedSendMng = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const getSendParamList = (): string[] => {\r\n    //     const connector = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n    //     const isCreate = connector.method === 'create';\r\n    //     let targetWrap: LogicUtil.WrapElement | null = null;\r\n    //     if (!isCreate) {\r\n    //         const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n    //         const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n    //         const dependItem = inheritMng.defs.find(wrap => {\r\n    //             return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n    //         });\r\n    //         if (dependItem != undefined) targetWrap = dependItem;\r\n    //     } else {\r\n    //         targetWrap = (node.parent?.children[node.parent?.children.length - 1].data as LogicUtil.WrapElement)\r\n    //     }\r\n    //     if (targetWrap != null) {\r\n    //         const argWrap = (targetWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n    //         if (argWrap.type === 'argument-mng') {\r\n    //             return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n    //                 return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n    //             });\r\n    //         }\r\n    //     }\r\n    //     return [];\r\n    // }\r\n\r\n    // const update = () => {\r\n    //     const sendParamList = getSendParamList();\r\n    //     const curSize = node.children.length;\r\n    //     const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n    //     // 不要なパラメータを削除\r\n    //     for (let i = curSize - 1; i >= 0; i--) {\r\n    //         const name = (params[i].data as LogicUtil.NodeParamItem).name;\r\n    //         if (!sendParamList.includes(name)) {\r\n    //             node.children.splice(i, 1);\r\n    //             params.splice(i, 1);\r\n    //         }\r\n    //     }\r\n    //     // 必要な存在しないパラメータを追加\r\n    //     const curParamList = params.map(param => {\r\n    //         return (param.data as LogicUtil.NodeParamItem).name;\r\n    //     });\r\n    //     sendParamList.forEach(param => {\r\n    //         if (!curParamList.includes(param)) {\r\n    //             const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n    //                 { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n    //             );\r\n    //             params.push(paramWrap);\r\n    //             node.children.push(TreeUtil.createNode(paramWrap, node));\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    return (<>\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedSendMng;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorFormgrpItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [groupMethod, setGroupMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [targetList, setTargetList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n        setName({ ...name, value: param.name });\r\n        setGroupMethod({ ...groupMethod, value: param.method });\r\n        setTargetList(param.args.map(arg => {\r\n            return { value: arg, errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const seedargs = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed(node.parent?.parent?.data as LogicUtil.WrapElement, 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        return argMng.args.map(wrap => (wrap.data as LogicUtil.NodeSeedArgItem).name);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, groupMethod].concat(targetList)}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeFromGrpItem = {\r\n                    name: name.value,\r\n                    method: groupMethod.value as LogicUtil.FromGrpMethod,\r\n                    args: targetList.map(form => form.value)\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n                param.name = name.value;\r\n                param.method = groupMethod.value as LogicUtil.FromGrpMethod;\r\n                param.args = targetList.map(form => form.value);\r\n                wrap.data = param;\r\n\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 24),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={groupMethod}\r\n                            setCheckable={(checkable) => {\r\n                                const type = checkable.value as LogicUtil.FromGrpMethod;\r\n                                if (type === 'color') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(3).fill({ value: '', errors: [] }));\r\n                                } else {\r\n                                    setTargetList([]);\r\n                                }\r\n                                setGroupMethod({...checkable});\r\n                            }}\r\n                            list={LogicUtil.FromGrpMedhods.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'list' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n                {targetList.map((target, i) => {\r\n                    let formName = 'Target_';\r\n                    if (groupMethod.value === 'color') {\r\n                        switch (i) {\r\n                            case 0: formName += 'R'; break;\r\n                            case 1: formName += 'G'; break;\r\n                            case 2: formName += 'B'; break;\r\n                        }\r\n                    } else {\r\n                        formName += `_${i}`;\r\n                    }\r\n                    return (\r\n                        <FormUtil.FormRecord\r\n                            key={i}\r\n                            titleLabel={formName}\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={target}\r\n                                    setCheckable={(checkable) => {\r\n                                        targetList[i] = checkable;\r\n                                        setTargetList(targetList.slice());\r\n                                    }}\r\n                                    list={seedargs.map(item => {\r\n                                        return { value: item, labelText: item }\r\n                                    })}\r\n                                    headBlank\r\n                                    width={250}\r\n                                    isReadOnly={!isModify}\r\n                                    validates={\r\n                                        [\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            },\r\n                                            {\r\n                                                checker: (value) => targetList.find((target, j) => i !== j && target.value === value) == undefined,\r\n                                                errorType: \"relation\"\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                    dependency={targetList}\r\n                                />\r\n                            }\r\n                        />\r\n                    );\r\n                })}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: removeSelf\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFormgrpMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Group',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'formgrp-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeFromgrpManager).defines.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpMng;","import styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactDetArgumentMng from \"../detail/logic/editorArgumentMng\";\r\nimport EditorArgumentItem from \"../detail/logic/editorArgumentItem\";\r\nimport FactDetSeedMng from \"../detail/seed/editorSeedMng\";\r\nimport EditorLogicMng from \"../detail/logic/editorLogicMng\";\r\nimport EditorLogicItem from \"../detail/logic/editorLogicItem\";\r\nimport EditorParamItem from \"../detail/logic/editorParamItem\";\r\nimport FactDetBehiviorMng from \"../detail/logic/editorBehiviorMng\";\r\nimport EditorVisualMng from \"../detail/logic/editorVisualMng\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport EditorInheritConnMng from \"../detail/logic/editorInheritConnMng\";\r\nimport EditorInheritConnector from \"../detail/logic/editorInheritConnector\";\r\nimport EditorSendManager from \"../detail/logic/editorSendManager\";\r\nimport EditorFieldMng from \"../detail/logic/editorFieldMng\";\r\nimport EditorExtendMng from \"../detail/logic/editorExtendMng\";\r\nimport EditorSeedItem from \"../detail/seed/editorSeedItem\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"./logicElementUtil\";\r\nimport EditorThumbnailMng from \"../detail/seed/editorThumbnailMng\";\r\nimport EditorThumbnailItem from \"../detail/seed/editorThumbnailItem\";\r\nimport EditorSampleItem from \"../detail/seed/editorSampleItem\";\r\nimport EditorSampleMng from \"../detail/seed/editorSampleMng\";\r\nimport EditorInterfaceManager from \"../detail/seed/editorInterfaceManager\";\r\nimport EditorSeedArgMng from \"../detail/seed/editorSeedArgMng\";\r\nimport EditorSeedArgItem from \"../detail/seed/editorSeedArgItem\";\r\nimport EditorSeedSendMng from \"../detail/seed/editorSeedSendMng\";\r\nimport EditorFormgrpItem from \"../detail/seed/editorFormgrpItem\";\r\nimport EditorFormgrpMng from \"../detail/seed/editorFormgrpMng\";\r\n\r\nnamespace LogicUtil {\r\n\r\n    export type DetailArgs = {\r\n        rootData: LogicUtil.WrapElement;\r\n        node: TreeUtil.ElementNode;\r\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\r\n        invalidate: () => void;\r\n        isModify: boolean;\r\n        setModify: (isModify: boolean) => void;\r\n        // setRootData: React.Dispatch<React.SetStateAction<WrapElement>>;\r\n        setRootData: (rootData: WrapElement) => void;\r\n        removeSelf: () => void;\r\n    }\r\n\r\n    /**\r\n     * 変数名チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkFieldName = (str: string) => {\r\n        // 1文字目が数値でないこと\r\n        const isNoHeadNumber = !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].\r\n            includes(str.substring(0, 1));\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyz_';\r\n        return isNoHeadNumber && ValidateUtil.checkIncludesChars(str, list);\r\n    }\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'seed-mng' |\r\n        'logic-mng' |\r\n        'seed-item' |\r\n        'logic-item' |\r\n        'argument-mng' |\r\n        'argument-item' |\r\n        'field-mng' |\r\n        'field-item' |\r\n        'visual-mng' |\r\n        'behavior-mng' |\r\n        'inhfld-mng' |\r\n        'extend-mng' |\r\n        'inherit-mng' |\r\n        'connector' |\r\n        'inherit-logic' |\r\n        'send-mng' |\r\n        'send-item' |\r\n        'param-item' |\r\n        'condition-item' |\r\n        'interface-mng' |\r\n        'sample-mng' |\r\n        'sample-item' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-item' |\r\n        'seedarg-mng' |\r\n        'seedsend-mng' |\r\n        'seedarg-item' |\r\n        'seedsend-item' |\r\n        'formgrp-mng' |\r\n        'formgrp-item'\r\n        ;\r\n\r\n    export const ArgTypes = ['number', 'color'] as const;\r\n    export type ArgumentType = typeof ArgTypes[number];\r\n\r\n    export const ParamInputTypes = ['direct', 'constant', 'argument', 'self', 'field'] as const;\r\n    export type ParamInputType = typeof ParamInputTypes[number];\r\n\r\n    export const ConnectTypes = ['create', 'depend'] as const;\r\n    export type InheritMethod = typeof ConnectTypes[number];\r\n\r\n    export const PermitTypes = ['develop', 'private', 'release'] as const;\r\n    export type PermitType = typeof PermitTypes[number];\r\n\r\n    export const FromGrpMedhods = ['color', 'list'] as const;\r\n    export type FromGrpMethod = typeof FromGrpMedhods[number];\r\n\r\n    export type ParamProps = {\r\n        type: ParamInputType;\r\n        value: string;\r\n    }\r\n\r\n    export type WrapElement = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        seedMng: WrapElement;\r\n        logicMng: WrapElement;\r\n    }\r\n    export type NodeSeedManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicItem = {\r\n        name: string;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInterfaceMng = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInheritItem = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeParamManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeParamItem = {\r\n        name: string;\r\n        formulaItems: string[];\r\n        values: ParamProps[];\r\n    }\r\n\r\n    export type NodeArgumentItem = {\r\n        name: string;\r\n        valueType: ArgumentType;\r\n    }\r\n    export type NodeThumbnailItem = {\r\n        name: string;\r\n        frame: number;\r\n    }\r\n    export type NodeArgumentManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeFieldManager = {\r\n        fields: WrapElement[];\r\n    }\r\n    export type NodeSampleManager = {\r\n        samples: WrapElement[];\r\n    }\r\n    export type NodeSampleItem = {\r\n        name: string;\r\n        values: number[];\r\n    }\r\n\r\n    // export type NodeExtendManager = {\r\n    //     mngs: WrapElement[];\r\n    // }\r\n    export type NodeConnectManager = {\r\n        inherits: WrapElement[];\r\n    }\r\n    export type NodeInheritConnector = {\r\n        method: InheritMethod;\r\n        depend: string;\r\n        id: string;\r\n        disable?: boolean;\r\n        mngs: WrapElement[];\r\n    }\r\n\r\n    export type NodeSeedItem = {\r\n        name: string;\r\n        disp?: string;\r\n        entry: string;\r\n        permit: PermitType;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeThumnailManager = {\r\n        items: WrapElement[];\r\n    }\r\n    export type NodeSeedArgManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeSeedSendManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeSeedArgItem = {\r\n        name: string;\r\n        disp?: string;\r\n        min: number;\r\n        max: number;\r\n        step: number;\r\n        defval: number | undefined;\r\n    }\r\n    export type NodeFromgrpManager = {\r\n        defines: WrapElement[];\r\n    }\r\n    export type NodeFromGrpItem = {\r\n        name: string;\r\n        method: FromGrpMethod;\r\n        args: string[];\r\n    }\r\n\r\n    const COLOR_ROOT = '#a1a1a1';\r\n    const COLOR_METHOD = '#cca67b';\r\n    const COLOR_MNG = '#37a2bd';\r\n    const COLOR_LIST = '#b85f5f';\r\n    const COLOR_ITEM = '#ae628c';\r\n    const COLOR_DISABLE = '#685b79';\r\n    const COLOR_PARAM = '#8dae62';\r\n    const COLOR_FIELD = '#cec256';\r\n    const COLOR_THUMBNAIL = '#8283be';\r\n    const COLOR_CONDITION = '#56ce7e';\r\n\r\n    export const getNodeDisplayJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapElement;\r\n        switch (wrap.type) {\r\n            case 'root': {\r\n                return <_Category backgroundColor={COLOR_ROOT}>Library</_Category>;\r\n            }\r\n            case 'seed-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Seed Manager</_Category>;\r\n            }\r\n            case 'logic-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Logic Manager</_Category>;\r\n            }\r\n            case 'visual-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Visual</_Category>;\r\n            }\r\n            case 'extend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Extend</_Category>;\r\n            }\r\n            case 'seed-item': {\r\n                let detailJsx = <>...</>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedItem;\r\n                    detailJsx = <span>{data.name}&nbsp;<_Span color=\"#ffe89ba6\">entry:&nbsp;</_Span><_Field>{data.entry}</_Field></span>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Seed</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                    \r\n                </>;\r\n            }\r\n            case 'logic-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Logic</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-logic': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Logic</_Category>;\r\n            }\r\n            case 'argument-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'inhfld-mng':\r\n            case 'field-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Field Manager</_Category>;\r\n            }\r\n            case 'behavior-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Behavior</_Category>;\r\n            }\r\n            case 'inherit-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Inherit Manager</_Category>;\r\n            }\r\n            case 'connector': {\r\n                let detailJsx = <span>...</span>;\r\n                let color = COLOR_ITEM;\r\n                let isDisable = false;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeInheritConnector;\r\n                    detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}</_Span></span>;\r\n                    if (data.method === 'depend') {\r\n                        detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}:&nbsp;</_Span><_Field>{data.depend}</_Field></span>;\r\n                    }\r\n                    if (data.disable ?? false) {\r\n                        color = COLOR_DISABLE;\r\n                        isDisable = true;\r\n                    }\r\n                }\r\n                return (<>\r\n                    <_Category backgroundColor={color} isDisable={isDisable}>Inherit</_Category>\r\n                    {detailJsx == undefined ? <></> : <_EditableValue>{detailJsx}</_EditableValue>}\r\n                </>);\r\n            }\r\n            // パラメータ要素\r\n            case 'param-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_PARAM}>Param<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 条件要素\r\n            case 'condition-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_CONDITION}>Condition<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 変数要素\r\n            case 'field-item': {\r\n                let nameJsx = <span>...</span>;\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeParamItem;\r\n                    nameJsx = <_Detail>&nbsp;[{data.name}]</_Detail>;\r\n                    let result: JSX.Element[] = [];\r\n                    let varCnt = 0;\r\n                    data.formulaItems.forEach((formula, i) => {\r\n                        let str = <_Signature key={i}>{formula}</_Signature>;\r\n                        if (formula === 'var') {\r\n                            const v = data.values[varCnt];\r\n                            if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                            else str = <span key={i}>{v.value}</span>;\r\n                            varCnt++;\r\n                        }\r\n                        result.push(str);\r\n                    });\r\n                    detailJsx = <>{result}</>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Field{nameJsx}</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'argument-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeArgumentItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.valueType})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'send-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'thumbnail-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Thumnail Manager</_Category>;\r\n            }\r\n            case 'thumbnail-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeThumbnailItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.frame})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_THUMBNAIL}>Thumbnail</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'sample-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Preset Manager</_Category>;\r\n            }\r\n            case 'sample-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSampleItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Preset</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'interface-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Interface</_Category>;\r\n            }\r\n            case 'seedarg-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'seedarg-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedArgItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.min}～{data.max})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'seedsend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'formgrp-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Group Manager</_Category>;\r\n            }\r\n            case 'formgrp-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeFromGrpItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.method})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Group<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n        }\r\n        return <_Category backgroundColor={'#ffffff'}>XXXXX</_Category>;\r\n    }\r\n\r\n    export const getTypeName = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return '';\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return 'Root';\r\n            case 'seed-mng': return 'Seed Manager';\r\n            case 'logic-mng': return 'Logic Manager';\r\n            case 'seed-item': return 'Seed Item';\r\n            case 'logic-item': return 'Logic Item';\r\n            case 'argument-mng': return 'Argument Manager';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'Field Manager';\r\n            case 'field-item': return 'Field Item';\r\n            case 'visual-mng': return 'Visual Manager';\r\n            case 'seedarg-item':\r\n            case 'argument-item': return 'Argument Item';\r\n            case 'extend-mng': return 'Extend Manager';\r\n            case 'behavior-mng': return 'Behavior Manager';\r\n            case 'inherit-mng': return 'Inherit Manager';\r\n            case 'connector': return 'Inherit Connector';\r\n            case 'inherit-logic': return 'Inherit Logic';\r\n            case 'send-mng': return 'Send Manager';\r\n            case 'send-item': return 'Send Item';\r\n            case 'param-item': return 'Param Item';\r\n            case 'condition-item': return 'Condition Item';\r\n            case 'interface-mng': return 'Interface Manager';\r\n            case 'thumbnail-mng': return 'Thumbnail Manager';\r\n            case 'thumbnail-item': return 'Thumbnail Item';\r\n            case 'sample-mng': return 'Preset Manager';\r\n            case 'sample-item': return 'Preset Item';\r\n            case 'seedarg-mng': return 'Argument Manager';\r\n            case 'seedsend-mng': return 'Send';\r\n            case 'formgrp-mng': return 'Group Manager';\r\n            case 'formgrp-item': return 'Group Item';\r\n        }\r\n    }\r\n\r\n    export const getDetailComponent = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return <></>;\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return <></>;\r\n            case 'seed-mng': return <FactDetSeedMng />;\r\n            case 'logic-mng': return <EditorLogicMng />;\r\n            case 'seed-item': return <EditorSeedItem />;\r\n            case 'logic-item': return <EditorLogicItem />;\r\n            case 'argument-mng': return <FactDetArgumentMng />;\r\n            case 'argument-item': return <EditorArgumentItem />;\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return <EditorFieldMng />;\r\n            case 'visual-mng': return <EditorVisualMng />;\r\n            case 'extend-mng': return <EditorExtendMng />;\r\n            case 'behavior-mng': return <FactDetBehiviorMng />;\r\n            case 'inherit-mng': return <EditorInheritConnMng />;\r\n            case 'connector': return <EditorInheritConnector />;\r\n            case 'inherit-logic': return <EditorLogicItem />;\r\n            case 'send-mng': return <EditorSendManager />;\r\n            case 'field-item':\r\n            case 'param-item':\r\n            case 'condition-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': return <EditorParamItem />;\r\n            case 'interface-mng': return <EditorInterfaceManager />;\r\n            case 'sample-mng': return <EditorSampleMng />;\r\n            case 'sample-item': return <EditorSampleItem />;\r\n            case 'thumbnail-mng': return <EditorThumbnailMng />;\r\n            case 'thumbnail-item': return <EditorThumbnailItem />;\r\n            case 'seedarg-mng': return <EditorSeedArgMng />;\r\n            case 'seedarg-item': return <EditorSeedArgItem />;\r\n            case 'seedsend-mng': return <EditorSeedSendMng />;\r\n            case 'formgrp-item': return <EditorFormgrpItem />;\r\n            case 'formgrp-mng': return <EditorFormgrpMng />;\r\n        }\r\n    }\r\n\r\n    export const getChildrenElementNode = (node: TreeUtil.ElementNode): TreeUtil.ElementNode[] => {\r\n        const wrapNode = node.data as WrapElement;\r\n        const get = (listName: string) => {\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const elementNode = TreeUtil.createNode(wrap, node);\r\n                elementNode.children = getChildrenElementNode(elementNode);\r\n                return elementNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n\r\n    export const getChildrenDataNode = (wrapNode: LogicUtil.WrapElement): TreeUtil.DataNode[] => {\r\n        const get = (listName: string) => {\r\n\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const treeNode: TreeUtil.DataNode = {\r\n                    data: wrap,\r\n                    children: getChildrenDataNode(wrap)\r\n                };\r\n                return treeNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as LogicUtil.NodeRoot;\r\n                return [\r\n                    { data: node.seedMng, children: getChildrenDataNode(node.seedMng) },\r\n                    { data: node.logicMng, children: getChildrenDataNode(node.logicMng) }\r\n                ];\r\n            }\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n}\r\n\r\nexport default LogicUtil;\r\n\r\nconst _Category = styled.div<{\r\n    backgroundColor: string;\r\n    isDisable?: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: ${props => props.backgroundColor};\r\n    /* width: 100%; */\r\n    ${props => !(props.isDisable ?? false) ? '' : css`\r\n        text-decoration: line-through;\r\n        color: #00054dac;\r\n    `}\r\n    border-radius: 4px 0 0 4px;\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n    border: solid 1px #000000d2;\r\n`;\r\nconst _Detail = styled.span`\r\n    color: #000b69bd;\r\n`;\r\n\r\nconst _EditableValue = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #0c0c0c;\r\n    color: #ebebeb;\r\n    border-radius: 0 4px 4px 0;\r\n    /* width: 100%; */\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n`;\r\nconst _Span = styled.span<{\r\n    color: string;\r\n}>`\r\n    color: ${props => props.color};\r\n`;\r\nconst _ValueType = styled.span`\r\n    color: #fff9d6b9;\r\n`;\r\nconst _Signature = styled.span`\r\n    color: #ffffff78;\r\n`;\r\nconst _Field = styled.span`\r\n    color: #ff2d2d;\r\n`;","import { assert } from \"console\";\r\nimport { Store } from \"../../../../redux/store/store\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../dialog/confirmDialog\";\r\nimport Particle from \"../../../graphic/particle\";\r\nimport { LaunchDef } from \"../../launcher/launcherTab\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport ParamUtil from \"./paramUtil\";\r\n\r\n\r\nnamespace LogicElementUtil {\r\n\r\n    export const getInnerNode = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode | null => {\r\n\r\n        let cur: TreeUtil.ElementNode | null = node;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const target = cur.children.find(child => (child.data as LogicUtil.WrapElement).type === type);\r\n            if (target == undefined) cur = null;\r\n            else cur = target;\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerNodeFixed = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode => {\r\n        const innerNode = getInnerNode(node, ...typeList);\r\n        if (innerNode == null) throw new Error('[innerNode] is null.');\r\n        return innerNode as TreeUtil.ElementNode;\r\n    }\r\n\r\n    export const getInnerWrap = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement | null => {\r\n\r\n        let cur: LogicUtil.WrapElement | null = wrap;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const listName = getListParamName(cur.type);\r\n            if (listName == null) cur = null;\r\n            else {\r\n                const list = cur.data[`${listName}`] as LogicUtil.WrapElement[];\r\n                const target = list.find(child => child.type === type);\r\n                if (target == undefined) cur = null;\r\n                else cur = target;\r\n            }\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerWrapFixed = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement => {\r\n        const innerWrap = getInnerWrap(wrap, ...typeList);\r\n        if (innerWrap == null) throw new Error('[innerWrap] is null.');\r\n        return innerWrap as LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const addChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode) => {\r\n        return insertChild(wrapElement, node, node.children.length);\r\n    }\r\n\r\n    export const insertChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode, listPos: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, 0, wrapElement);\r\n        const newNode = TreeUtil.createNode(wrapElement, node);\r\n        node.children.splice(listPos, 0, newNode);\r\n        return newNode;\r\n    }\r\n\r\n    export const removeChild = (node: TreeUtil.ElementNode, listPos: number, size: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, size);\r\n        node.children.splice(listPos, size);\r\n    }\r\n\r\n    export const removeChildAll = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].length = 0;\r\n        node.children.length = 0;\r\n    }\r\n\r\n    export const isHead = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[0] == node;\r\n    }\r\n\r\n    export const isTail = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[ownerChildren.length - 1] == node;\r\n    }\r\n\r\n    export const getCurrentIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(parentWrap.type);\r\n        if (listName == null || parentWrap.data == null) return -1;\r\n        const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n        const curIndex = list.findIndex(wrap => wrap == node.data);\r\n        return curIndex;\r\n    }\r\n\r\n    const swapOrder = (node: TreeUtil.ElementNode, offset: number) => {\r\n        if (node.parent == null) return;\r\n        const ownerChildren = node.parent.children;\r\n        const wrap = node.parent.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        const ownDataChildren = wrap.data[`${listName}`] as LogicUtil.WrapElement[];\r\n\r\n        let curNo = getCurrentIndex(node);\r\n        if (curNo === -1) return;\r\n\r\n        // ツリーノードの入れ替え\r\n        const swapNode = ownerChildren[curNo];\r\n        ownerChildren[curNo] = ownerChildren[curNo + offset];\r\n        ownerChildren[curNo + offset] = swapNode;\r\n        // データ要素の入れ替え\r\n        const swapData = ownDataChildren[curNo];\r\n        ownDataChildren[curNo] = ownDataChildren[curNo + offset];\r\n        ownDataChildren[curNo + offset] = swapData;\r\n    }\r\n\r\n    export const getSwapButtons = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        ...dependencyMngNodes: TreeUtil.ElementNode[]\r\n    ) => {\r\n        return getSwapButtonsCallback(node, invalidate, (curIndex, isUpper) => {\r\n            if (dependencyMngNodes.length > 0) {\r\n                dependencyMngNodes.forEach(depNode => {\r\n                    swapOrder(depNode.children[curIndex], isUpper ? -1 : 1);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    export const getSwapButtonsCallback = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        callback: (curIndex: number, isUpper: boolean) => void\r\n    ) => {\r\n        const curIndex = getCurrentIndex(node);\r\n        return <>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↑',\r\n                        isEnable: !LogicElementUtil.isHead(node),\r\n                        callback: () => {\r\n                            swapOrder(node, -1);\r\n                            callback(curIndex, true);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↓',\r\n                        isEnable: !LogicElementUtil.isTail(node),\r\n                        callback: () => {\r\n                            swapOrder(node, 1);\r\n                            callback(curIndex, false);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>;\r\n    }\r\n\r\n    /**\r\n     * 同レベル階層に自身ノードの複製を作成する\r\n     * @param node コピー対象のノード\r\n     * @param newName コピー後の名称\r\n     */\r\n    export const replicateSameLevel = (node: TreeUtil.ElementNode, newName: string) => {\r\n        if (node.parent == null) return;\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const cloneBase = wrap.data;\r\n        const cloneDest = JSON.parse(JSON.stringify((cloneBase)));\r\n\r\n        const newWrap: LogicUtil.WrapElement = {\r\n            type: wrap.type,\r\n            data: cloneDest\r\n        };\r\n        const namable = getNamableProps(wrap.type);\r\n        newWrap.data[namable] = newName;\r\n\r\n        // ロジックマネージャに追加\r\n        const newNode = LogicElementUtil.addChild(newWrap, node.parent);\r\n        // 子要素の展開\r\n        newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n    }\r\n\r\n    export const getReplicateButton = (\r\n        node: TreeUtil.ElementNode,\r\n        isEnable: boolean,\r\n        targetElement: string, store: Store,\r\n        setStore: (store: Store) => void,\r\n        invalidate: () => void\r\n    ): JSX.Element => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        return <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[{\r\n                label: 'Replicate',\r\n                isEnable,\r\n                // isEnable: false,\r\n                callback: () => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={`Replicate this ${targetElement}.`}\r\n                        buttons={[\r\n                            {\r\n                                label: 'Cancel',\r\n                                callback: () => {\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Enter',\r\n                                callback: () => {\r\n                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                    const name = wrap.data[namable] as string;\r\n                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                    // mappingForm();\r\n                                    invalidate();\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }\r\n            }]}\r\n        />;\r\n    }\r\n\r\n    export const getListParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return 'defs';\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            // case 'root':\r\n            case 'logic-item': return 'mngs';\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return 'params';\r\n            case 'inherit-mng': return 'inherits';\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return 'args';\r\n            case 'sample-mng': return 'samples';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'fields';\r\n            case 'thumbnail-mng': return 'items';\r\n            case 'formgrp-mng': return 'defines';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getIdentifyParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'argument-item':\r\n            case 'field-item':\r\n            case 'seed-item':\r\n            case 'thumbnail-item':\r\n            case 'seedarg-item':\r\n            case 'sample-item':\r\n            case 'formgrp-item':\r\n            case 'logic-item': return 'name';\r\n            case 'connector': return 'id';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getNamableProps = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'connector': return 'id';\r\n            case 'seed-item':\r\n            case 'argument-item':\r\n            case 'seedarg-item':\r\n            case 'field-item':\r\n            case 'sample-item':\r\n            case 'thumbnail-item':\r\n            case 'logic-item': return 'name';\r\n        }\r\n        throw new Error('Namable props not found.');\r\n    }\r\n\r\n    export const syncTreeElementFromWrap = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        if (listName == null) return;\r\n        (wrap.data[listName] as any[]).forEach(childWrap => {\r\n            const newNode = TreeUtil.createNode(childWrap, node);\r\n            node.children.push(newNode);\r\n            syncTreeElementFromWrap(newNode);\r\n        });\r\n    }\r\n\r\n    export const createParamWrap = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem): LogicUtil.WrapElement => {\r\n        return { type: type, data: paramDataList };\r\n    }\r\n    export const createParamWrapList = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem[]): LogicUtil.WrapElement[] => {\r\n        return paramDataList.map(data => {\r\n            return { type: type, data: data };\r\n        });\r\n    }\r\n\r\n    export const createVisualParams = (): LogicUtil.WrapElement[] => {\r\n        const type = ParamUtil.VisualParamType;\r\n        return createParamWrapList('param-item', [\r\n            { name: type.RADIUS, formulaItems: ['var'], values: [{ type: 'direct', value: '20' }] },\r\n            { name: type.COLOR_R, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_G, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_B, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_A, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n        ]);\r\n    }\r\n\r\n    export const createBehaviorParams = (): LogicUtil.WrapElement[] => {\r\n        const list: LogicUtil.NodeParamItem[] = [];\r\n        const type = ParamUtil.BehaviorParamType;\r\n        list.push({\r\n            name: type.LIMIT,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '30' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        return createParamWrapList('param-item', list);\r\n    }\r\n\r\n    export const getDefaultLogicMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'visual-mng',\r\n                data: {\r\n                    params: createVisualParams()\r\n                } as LogicUtil.NodeParamManager\r\n            },\r\n            {\r\n                type: 'behavior-mng',\r\n                data: {\r\n                    params: createBehaviorParams()\r\n                } as LogicUtil.NodeParamManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    export const getInitialData = (): LogicUtil.WrapElement => {\r\n        return {\r\n            type: 'root',\r\n            data: {\r\n                seedMng: {\r\n                    type: 'seed-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeSeedManager\r\n                } as LogicUtil.WrapElement,\r\n                logicMng: {\r\n                    type: 'logic-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeLogicManager\r\n                } as LogicUtil.WrapElement\r\n            } as LogicUtil.NodeRoot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 同階層の名前パラメータを持つ要素より、既存の名前一覧を取得する。\r\n     * @param node 現在のノード\r\n     * @returns 同階層の既存の名前一覧\r\n     */\r\n    export const getExistNameList = (node: TreeUtil.ElementNode) => {\r\n        const nameList: string[] = [];\r\n        const curWrap = node.data as LogicUtil.WrapElement;\r\n        const nameParam = getIdentifyParamName(curWrap.type);\r\n        const mngWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listParam = getListParamName(mngWrap.type);\r\n        if (listParam == null || nameParam == null) throw Error('List param or identifiy param not found.');\r\n        const list = mngWrap.data[listParam] as LogicUtil.WrapElement[];\r\n        list.forEach(wrap => {\r\n            if (wrap.data != null && curWrap != wrap) {\r\n                nameList.push(wrap.data[nameParam]);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getLogicNameList = (mng: LogicUtil.NodeLogicManager) => {\r\n        const nameList: string[] = [];\r\n        mng.defs.forEach(logic => {\r\n            if (logic.data != null) {\r\n                nameList.push((logic.data as LogicUtil.NodeLogicItem).name);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getParamNameList = (curLogicOwner: LogicUtil.NodeLogicItem) => {\r\n        const nameList: string[] = [];\r\n\r\n        // システム固有のパラメータ名を取得\r\n        ParamUtil.VisualParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.BehaviorParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.SelfParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ExtendParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.EffectParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ModulateParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.Constants.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n\r\n        // 引数のパラメータ名を取得\r\n        const argMng = curLogicOwner.mngs.find(mng => mng.type === 'argument-mng');\r\n        if (argMng != undefined) {\r\n            const args = (argMng.data as LogicUtil.NodeArgumentManager).args;\r\n            args.forEach(arg => {\r\n                if (arg.data != null) {\r\n                    nameList.push((arg.data as LogicUtil.NodeArgumentItem).name);\r\n                }\r\n            });\r\n        }\r\n        // フィールドのパラメータ名を取得\r\n        const fieldMng = curLogicOwner.mngs.find(mng => mng.type === 'field-mng');\r\n        if (fieldMng != undefined) {\r\n            const fields = (fieldMng.data as LogicUtil.NodeFieldManager).fields;\r\n            fields.forEach(field => {\r\n                if (field.data != null) {\r\n                    nameList.push((field.data as LogicUtil.NodeParamItem).name);\r\n                }\r\n            });\r\n        }\r\n        return nameList;\r\n    }\r\n\r\n    /**\r\n     * 子要素の接頭連番をチェックし、重複しない名称を返す。\r\n     * @param prefix 接頭語\r\n     * @param node 基準となるノード\r\n     */\r\n    export const getNumberingOnPrefixName = (prefix: string, node: TreeUtil.ElementNode) => {\r\n        let num = 0;\r\n        // 接頭番号を取得\r\n        while (true) {\r\n            const check = node.children.find(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                if (wrap.data == null) return false;\r\n                console.log(wrap);\r\n                return wrap.data[getNamableProps(wrap.type)] === `${prefix}${num}`;\r\n            });\r\n            if (check != undefined) num++;\r\n            else break;\r\n        }\r\n        return `${prefix}${num}`;\r\n    }\r\n\r\n    /**\r\n     * パラメータの式で参照されている変数を検索し、\r\n     * 任意の処理（callback）を実行する。\r\n     * @param node 現在のノード\r\n     * @param callback 処理\r\n     */\r\n    export const searchVariableReferInFormula = (node: TreeUtil.ElementNode, callback: Function) => {\r\n\r\n        const mngType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const getLogicItem = () => {\r\n            switch (mngType) {\r\n                case 'field-mng':\r\n                case 'argument-mng': return node.parent?.parent?.data as LogicUtil.WrapElement;\r\n                case 'inhfld-mng': return node.parent?.parent?.parent?.parent?.data as LogicUtil.WrapElement;\r\n            }\r\n        }\r\n        const logicItem = getLogicItem()?.data as LogicUtil.NodeLogicItem;\r\n        if (mngType === 'argument-mng') {\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (fieldMng != undefined) {\r\n                callback((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n        }\r\n        if (mngType !== 'inhfld-mng') {\r\n            const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n            if (visualMng != undefined) {\r\n                callback((visualMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n            const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n            if (behaviorMng != undefined) {\r\n                callback((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n        }\r\n        const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                if (mngType !== 'inhfld-mng') {\r\n                    const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                    // Inherit配下のField要素のチェック\r\n                    if (inhfld != null) {\r\n                        callback((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                    }\r\n                }\r\n                // Extend要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    }\r\n\r\n    export const findSeedWrap = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const root = rootData.data as LogicUtil.NodeRoot;\r\n        const seed = (root.seedMng.data as LogicUtil.NodeSeedManager).defs.find(def => {\r\n            const seedItem = def.data as LogicUtil.NodeSeedItem;\r\n            return seedItem.name === seedId;\r\n        });\r\n        if (seed == undefined) throw new Error();\r\n        return seed;\r\n    }\r\n\r\n    export const doParticleJob = (rootData: LogicUtil.WrapElement, def: LaunchDef, owner: Particle.Instance[]) => {\r\n        const seedWrap = findSeedWrap(rootData, def.seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        const getSendingValueMap = () => {\r\n            const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const valueMap = seedargMng.args.map((wrap, i) => {\r\n                const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                return { name: seedarg.name, value: def.values[i] }\r\n            });\r\n\r\n            // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n            return sendParams.map(item => {\r\n                const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                return { name: item.name, value }\r\n            });\r\n        }\r\n\r\n        owner.push(new Particle.Instance(\r\n            PreviewUtil.buildLogicProps(owner, getOrigin(), rootData, getSendingValueMap())\r\n        ));\r\n    }\r\n\r\n    export type SeedProps = {\r\n        seed: LogicUtil.NodeSeedItem;\r\n        logic: LogicUtil.NodeLogicItem;\r\n        seedargList: LogicUtil.NodeSeedArgItem[];\r\n        seedsendList: LogicUtil.NodeParamItem[];\r\n        thumbnailList: LogicUtil.NodeThumbnailItem[];\r\n    }\r\n    export const getSeedProperties = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const seedWrap = findSeedWrap(rootData, seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n        const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        const seedargList = seedargMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n        const seedsendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n        const seedsendList = seedsendMng.params.map(wrap => wrap.data as LogicUtil.NodeParamItem);\r\n        const thumbnailMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'thumbnail-mng').data as LogicUtil.NodeThumnailManager;\r\n        const thumbnailList = thumbnailMng.items.map(wrap => wrap.data as LogicUtil.NodeThumbnailItem);\r\n       \r\n        return {\r\n            seed, logic: getOrigin(), seedargList, seedsendList, thumbnailList\r\n        }\r\n    }\r\n}\r\n\r\nexport default LogicElementUtil;","import { useState, useMemo, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewLogicInputForm = (props: {\r\n    logicWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const argumentList: string[] = useMemo(() => {\r\n        let list: string[] = [];\r\n        const argWrap = LogicElementUtil.getInnerWrap(props.logicWrap, 'argument-mng');\r\n        if (argWrap != null) {\r\n            list = (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                const argItem = arg.data as LogicUtil.NodeArgumentItem;\r\n                return argItem.name;\r\n            });\r\n        }\r\n        return list;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFormList(argumentList.map(arg => {\r\n            return { value: arg, errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        if (formList.find(form => form.errors.length > 0) == undefined) {\r\n            props.setSendingValueMap(() => {\r\n                return formList.map((form, i) => {\r\n                    return { name: argumentList.map(arg => arg)[i], value: Number(form.value) }\r\n                });\r\n            })\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return <>{\r\n        formList.map((form, i) => {\r\n            const argument = argumentList[i];\r\n            return (<FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={argument}\r\n                labelWidth={250}\r\n                jsx={\r\n                    <FormUtil.TextField\r\n                        width={312}\r\n                        isNumber\r\n                        checkable={form}\r\n                        setCheckable={() => {\r\n                            setFormList(formList.slice());\r\n                        }}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            }\r\n                        ]}\r\n                    />\r\n                }\r\n            />);\r\n        })\r\n    }</>\r\n}\r\n\r\nexport default PreviewLogicInputForm;","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../factory/util/logicFormUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewSeedInputForm = (props: {\r\n    seedWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [formgrpList, seedargList, presetList]: [LogicUtil.NodeFromGrpItem[], LogicUtil.NodeSeedArgItem[], LogicUtil.NodeSampleItem[]] = useMemo(() => {\r\n        const formgrpWrap = LogicElementUtil.getInnerWrap(props.seedWrap, 'interface-mng', 'formgrp-mng');\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        if (formgrpWrap != null) {\r\n            formgrpList = (formgrpWrap.data as LogicUtil.NodeFromgrpManager).defines.map(def => def.data as LogicUtil.NodeFromGrpItem);\r\n        }\r\n\r\n        const argWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedarg-mng');\r\n        const argumentList = (argWrap.data as LogicUtil.NodeSeedArgManager).args.map(arg => arg.data as LogicUtil.NodeSeedArgItem);\r\n\r\n        const sampleWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'sample-mng');\r\n        const sampleList = (sampleWrap.data as LogicUtil.NodeSampleManager).samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n        return [formgrpList, argumentList, sampleList];\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        setFormList(seedargList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (formList.find(form => form.errors.length > 0) == undefined) {\r\n            props.setSendingValueMap(() => {\r\n                const valueMap = formList.map((form, i) => {\r\n                    return { name: seedargList.map(arg => arg.name)[i], value: Number(form.value) }\r\n                });\r\n\r\n                // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                const sendMng = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                return sendParams.map(item => {\r\n                    const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                    if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                    return { name: item.name, value }\r\n                });\r\n            });\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"Preset\"\r\n            innerJsx={<FormUtil.Record\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        width={402}\r\n                        checkable={template}\r\n                        setCheckable={setTemplate}\r\n                        headBlank\r\n                        list={presetList.map((sample, i) => {\r\n                            return {\r\n                                labelText: sample.name,\r\n                                value: i.toString()\r\n                            }\r\n                        })}\r\n                    />\r\n                    <FormUtil.ButtonItem\r\n                        button={{\r\n                            label: 'Apply',\r\n                            isEnable: template.value !== '',\r\n                            callback: () => {\r\n                                const selectedIndex = Number(template.value);\r\n                                const values = presetList[selectedIndex].values;\r\n                                values.forEach((value, i) => {\r\n                                    formList[i].value = value.toString();\r\n                                });\r\n                                setFormList(formList.slice());\r\n                            }\r\n                        }}\r\n                    />\r\n                </>}\r\n            />}\r\n        />\r\n        {LogicFormUtil.buildPreviewForms(\r\n            false, seedargList, formgrpList, formList, setFormList\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default PreviewSeedInputForm;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ReactLoading from 'react-loading';\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport PreviewLogicInputForm from \"./inputForm/previewLogicInputForm\";\r\nimport PreviewSeedInputForm from \"./inputForm/previewSeedInputForm\";\r\n\r\nnamespace PreviewLogicFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        master: LogicUtil.WrapElement;\r\n        rootData: LogicUtil.WrapElement;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n\r\n        const [sceens, setSceens] = useState<string[]>([]);\r\n        const [frameCnt, setFrameCnt] = useState<number>(-1);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isBuild, setBuild] = useState<boolean>(false);\r\n        const [progress, setProgress] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const [sendingValueMap, setSendingValueMap] = useState<((() => PreviewUtil.ValueMap[]) | null)>(null);\r\n\r\n        const isSeed = props.master.type === 'seed-item';\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n        useEffect(() => {\r\n            if (isBuild) build();\r\n        }, [isBuild]);\r\n\r\n        const build = () => {\r\n            if (sendingValueMap == null) return;\r\n            setCur(0);\r\n            const sceens: string[] = [];\r\n            PreviewUtil.runParticleLogic({\r\n                limitFrame: 500,\r\n                limitParticle: 3000,\r\n                doIterate: (frame, owner) => {\r\n                    if (frame === 0) {\r\n                        const getOrigin = () => {\r\n                            if (!isSeed) return props.master.data as LogicUtil.NodeLogicItem;\r\n                            else {\r\n                                const seed = props.master.data as LogicUtil.NodeSeedItem;\r\n                                const root = props.rootData.data as LogicUtil.NodeRoot;\r\n                                const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                                return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                            }\r\n                        }\r\n                        owner.push(new Particle.Instance(\r\n                            PreviewUtil.buildLogicProps(owner, getOrigin(), props.rootData, sendingValueMap as any)\r\n                        ));\r\n                    }\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n\r\n                        // 経過フレーム、要素数の表示\r\n                        ctx.globalAlpha = 1;\r\n                        ctx.font = '16pt Arial';\r\n                        ctx.fillStyle = '#ffffff';\r\n                        ctx.fillText(`${frame}`, 6, 24);\r\n                        ctx.fillStyle = '#ffec5c';\r\n                        ctx.fillText(`${owner.length}`, 6, 44);\r\n\r\n                        // ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    setFrameCnt(frame);\r\n                    setSceens(sceens);\r\n\r\n                    setBuild(false);\r\n                    setTabIndex(1);\r\n                }\r\n            });\r\n        }\r\n\r\n        const isInputOK = sendingValueMap != null;\r\n\r\n        const buildTabJsx = (\r\n            <_Wrap>\r\n                <_Blind isEnable={isBuild}>\r\n                    {/* <ReactLoading type='spinningBubbles' /> */}\r\n                    <_Msg>Now building...</_Msg>\r\n                </_Blind>\r\n                <_FormDiv\r\n                    isSeed={props.master.type === 'seed-item'}\r\n                >\r\n                    {!isSeed ? (\r\n                        <PreviewLogicInputForm\r\n                            logicWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                        />\r\n                    ) : (\r\n                        <PreviewSeedInputForm\r\n                            seedWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                        />\r\n                    )}\r\n                </_FormDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Build',\r\n                            isEnable: isInputOK && !isBuild,\r\n                            callback: () => {\r\n                                setBuild(true);\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    if (tabIndex === 0) {\r\n                        if (isInputOK && e.key === ' ') build();\r\n                    } else {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                            } break;\r\n                            case 'ArrowRight': {\r\n                                if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                            } break;\r\n                            case ' ': {\r\n                                setPlay(!isPlay);\r\n                            } break;\r\n                        }\r\n                    }\r\n                    if (!isPlay && e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }\r\n                }\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Build', enable: true, cont: buildTabJsx },\r\n                            { name: 'Play', enable: frameCnt !== -1, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame >\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLogicFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _FormDiv = styled.div<{\r\n    isSeed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 580px;\r\n    background-color: #c5cfd6df;\r\n    ${props => !props.isSeed ? '' : css`\r\n        background-color: #c6d6c5df;\r\n    `}\r\n    overflow-y: auto;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #c5c5c5df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;\r\n\r\n\r\nconst _Blind = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: ${props => !props.isEnable ? 'none;' : 'inline-block;'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000552cd;\r\n    z-index: 99;\r\n`;\r\n\r\nconst _Msg = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    margin: 240px 0 0 110px;\r\n    /* background-color: #26f055cd; */\r\n    color: white;\r\n    font-size: 56px;\r\n    font-weight: 600;\r\n\r\n`;","import DataUtil from \"../../utils/dataUtil\";\r\nimport PreviewLogicFrame from \"../create/preview/previewLogicFrame\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport LogicUtil from \"../create/factory/util/logicUtil\";\r\nimport LogicElementUtil from \"../create/factory/util/logicElementUtil\";\r\nimport styled from \"styled-components\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    isOpen: boolean;\r\n    seedList: SeedProps[];\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\n\r\nconst DirectLinkManager = (props: {\r\n    libSeq: number;\r\n}) => {\r\n    const [libData, setLibData] = useState<LibProps | null>(null);\r\n\r\n    const [seedSeq, setSeedSeq] = useState(-1);\r\n\r\n    useEffect(() => {\r\n\r\n        findSeed(props.libSeq).then(resList => {\r\n            if (resList.length > 0) {\r\n                const res = resList[0];\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const rootData = JSON.parse(DataUtil.unZip(res.source)) as LogicUtil.WrapElement;\r\n                const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                const seedList: SeedProps[] = seedMng.defs\r\n                    .filter(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        return seed.permit === 'release';\r\n                    })\r\n                    .map(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                        const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                        return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                    });\r\n                setLibData({\r\n                    name, ownerId, lastmod, rootData, seedList, isOpen: false\r\n                });\r\n                console.log(seedList.length);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const getJsx = () => {\r\n        let jsx = <></>;\r\n        if (libData != null) {\r\n            if (seedSeq === -1) {\r\n                jsx = <>\r\n                    {libData.seedList.map((seed, i) => {\r\n                        const disp = seed.disp ?? seed.name;\r\n                        return (<_Item key={i}\r\n                            onClick={() => {\r\n                                setSeedSeq(i);\r\n                            }}\r\n                        >\r\n                            {disp}\r\n                        </_Item>);\r\n                    })}\r\n                </>;\r\n            } else {\r\n                jsx = <PreviewLogicFrame.Component\r\n                    master={libData.seedList[seedSeq].master}\r\n                    rootData={libData.rootData}\r\n                />\r\n            }\r\n        }\r\n        return jsx;\r\n    }\r\n\r\n    return getJsx();\r\n}\r\n\r\nexport default DirectLinkManager;\r\n\r\n\r\nconst findSeed = async (conteseq: number) => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE seq = ${conteseq}\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n\r\n    color: white;\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport DirectLinkManager from \"./directLinkManager\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\n\r\ntype ScreenBean = {\r\n    adjLeft: number;\r\n    adjTop: number;\r\n    rate: number;\r\n}\r\n\r\n// export const CONTENTS_WIDTH = 576;\r\n// export const CONTENTS_HEIGHT = 1024;\r\n\r\n\r\nexport const CONTENTS_WIDTH = 600;\r\nexport const CONTENTS_HEIGHT = 660;\r\n\r\nconst MobileRoot = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const [screen, setScreen] = useState<ScreenBean>({ adjLeft: 0, adjTop: 0, rate: 1 });\r\n    const ref = useRef<null | HTMLDivElement>(null);\r\n\r\n    const libSeq = DataUtil.getDecryptionedScoreSeq(props.hashKey);\r\n\r\n    const update = () => {\r\n        if (ref.current != null) {\r\n            // const [clientWidth, clientHeight] = [window.innerWidth, window.innerHeight];\r\n\r\n            const rect = ref.current.getBoundingClientRect();\r\n            const [clientWidth, clientHeight] = [rect.width, rect.height];\r\n\r\n            const cw = CONTENTS_WIDTH;\r\n            const ch = CONTENTS_HEIGHT;\r\n\r\n            const isFitSide = clientHeight / ch > clientWidth / cw;\r\n\r\n            const rate = !isFitSide ? clientHeight / ch : clientWidth / cw;\r\n            const adjLeft = !isFitSide ? clientWidth / 2 - (cw * rate / 2) : 0;\r\n            const adjTop = !isFitSide ? 0 : clientHeight / 2 - (ch * rate / 2);\r\n\r\n            setScreen({ adjLeft, adjTop, rate });\r\n        }\r\n    }\r\n\r\n    window.addEventListener('DOMContentLoaded', () => {\r\n        if (!isSmartPhone()) {\r\n            window.addEventListener('resize', update);\r\n        } else {\r\n            window.addEventListener('orientationchange resize', update);\r\n        }\r\n    });\r\n\r\n    // window.onorientationchange = () => {\r\n    //   setOrientation(window.orientation);\r\n    // }\r\n\r\n    useEffect(() => update(), []);\r\n\r\n    return (\r\n        <_Wrap ref={ref}>\r\n            <_Frame left={screen.adjLeft} top={screen.adjTop} rate={screen.rate}>\r\n                <_Contents>\r\n                    <DirectLinkManager libSeq={libSeq}/>\r\n                </_Contents>\r\n            </_Frame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MobileRoot;\r\n\r\nconst isSmartPhone = () => {\r\n    // UserAgentからのスマホ判定\r\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 10px);\r\n  height: calc(100% - 10px);\r\n  background-color: #9eadc9;\r\n  margin: 5px 0 0 5px; */\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst _Frame = styled.div<{\r\n    left: number;\r\n    top: number;\r\n    rate: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: ${props => props.top}px;\r\n  left: ${props => props.left}px;\r\n  transform-origin: top left;\r\n  /* width: 100%;\r\n  height: 100%; */\r\n  transform: scale(${props => props.rate});\r\n`;\r\n\r\nconst _Contents = styled.div`\r\n  display: inline-block;\r\n  width: ${CONTENTS_WIDTH}px;\r\n  height: ${CONTENTS_HEIGHT}px;\r\n  background-color: #929292;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\n\r\nnamespace NameDefDialog {\r\n\r\n    export const Component = (props: {\r\n        targetSeq: number\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const width = 500;\r\n        const height = 150;\r\n\r\n        const isCreate = props.targetSeq === -1;\r\n        const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n        const getDefaultName = () => {\r\n            return props.targetSeq === -1 ? '' : (projects.find(p => p.seq === props.targetSeq) as StoreCloud.Project).name;\r\n        }\r\n\r\n        useEffect(() => {\r\n            name.value = getDefaultName();\r\n            setName({ ...name });\r\n        }, []);\r\n\r\n        const [existNames] = useMemo(() => {\r\n            return [\r\n                projects.map(item => item.name)\r\n            ];\r\n        }, []);\r\n\r\n        const registCreate = () => {\r\n            const result = findProjectMaxSeq();\r\n            result.then((maxSeq) => {\r\n                const newProject = {\r\n                    seq: maxSeq + 1,\r\n                    name: name.value,\r\n                    source: '',\r\n                    lastmod: ''\r\n                };\r\n                projects.push(newProject);\r\n                insertProject(store.system.user?.seq as number, newProject).then(() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            });\r\n        }\r\n\r\n        const registUpdate = () => {\r\n            const targetItem = projects.find(item => item.seq === props.targetSeq);\r\n            if (targetItem != undefined) {\r\n                updateProjectName(props.targetSeq, name.value).then(() => {\r\n                    targetItem.name = name.value;\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            }\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: isCreate ? 'Create' : 'Update',\r\n                isEnable: name.errors.length === 0,\r\n                callback: () => {\r\n                    if (isCreate) registCreate();\r\n                    else registUpdate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, input new name!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => LogicUtil.checkFieldName(value),\r\n                                //     errorType: \"value\"\r\n                                // },\r\n                                {\r\n                                    checker: (value) => !existNames.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NameDefDialog;\r\n\r\nconst findProjectMaxSeq = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT max(seq) m FROM prjcttbl`);\r\n    const results = await response.json();\r\n    return results[0].m;\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport NameDefDialog from \"./nameDefDialog\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n    const listItemJsx = store.cloud == null ? [] : store.cloud.projects.map((item, i) => {\r\n        const exist = item.source !== '';\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    setFcsListIdx(i);\r\n                    console.log(DataUtil.getHashedFromScoreSeq(item.seq));\r\n                }}\r\n            >\r\n                <_Status isExist={exist}>[{!exist ? 'Blank' : 'Logic'}] </_Status>\r\n                <_Name>{item.name}</_Name>\r\n                {/* <_Date> -{item.lastmod}</_Date> */}\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    const hasData = store.logicData != null;\r\n    const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n    useEffect(()=>{\r\n        if(store.cloud == null) {\r\n            setFcsListIdx(-1);\r\n        }\r\n    }, [store.cloud]);\r\n\r\n    const [logicSize, developCnt, privateCnt, releaseCnt, logicCnt] = useMemo(() => {\r\n        if (store.logicData == null) return [0, 0, 0, 0, 0];\r\n        let size = 0;\r\n        const incrRec = (wrap: LogicUtil.WrapElement) => {\r\n            size++;\r\n            const listName = LogicElementUtil.getListParamName(wrap.type);\r\n            if (listName != null) {\r\n                const list = wrap.data[listName] as LogicUtil.WrapElement[];\r\n                list.forEach(wrap => incrRec(wrap));\r\n            }\r\n        }\r\n        const root = store.logicData.data as LogicUtil.NodeRoot;\r\n        incrRec(root.logicMng);\r\n        incrRec(root.seedMng);\r\n\r\n        let developCnt = 0;\r\n        let privateCnt = 0;\r\n        let releaseCnt = 0;\r\n        const seedMng = root.seedMng.data as LogicUtil.NodeSeedManager;\r\n        seedMng.defs.forEach(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n            switch (seed.permit) {\r\n                case 'develop': developCnt++; break;\r\n                case 'private': privateCnt++; break;\r\n                case 'release': releaseCnt++; break;\r\n            }\r\n        });\r\n\r\n        const logicMng = root.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return [size, developCnt, privateCnt, releaseCnt, logicMng.defs.length];\r\n    }, [store.logicData]);\r\n\r\n    return (<_Wrap>\r\n        <_HeaderDiv>\r\n            <FormUtil.ButtonRecord\r\n                align=\"left\"\r\n                buttons={[\r\n                    {\r\n                        label: 'New Project',\r\n                        isEnable: !hasData,\r\n                        callback: () => {\r\n                            store.logicData = LogicElementUtil.getInitialData();\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                ]}\r\n            />\r\n        </_HeaderDiv>\r\n        <_BodyDiv>\r\n            <_LeftDiv isEnable={store.cloud != null}>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Create',\r\n                            width: 110,\r\n                            isEnable: true,\r\n                            callback: () => {\r\n                                store.system.dialog = <NameDefDialog.Component\r\n                                    targetSeq={-1}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Upload',\r\n                            width: 110,\r\n                            isEnable: fcsListIdx != -1 && hasData,\r\n                            callback: () => {\r\n                                const source = DataUtil.gZip(JSON.stringify(store.logicData));\r\n                                updateProjectSource(projects[fcsListIdx].seq, source).then(() => {\r\n                                    const project = projects[fcsListIdx];\r\n                                    project.source = source;\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Update project succesful!\"\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Delete',\r\n                            width: 110,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                deleteProject(projects[fcsListIdx].seq).then(() => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Delete project succesful!\"\r\n                                    />;\r\n                                    projects.splice(fcsListIdx, 1);\r\n                                    setFcsListIdx(fcsListIdx - 1);\r\n                                    setStore({ ...store });\r\n                                });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Rename',\r\n                            width: 110,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                store.system.dialog = <NameDefDialog.Component\r\n                                    targetSeq={projects[fcsListIdx].seq}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_ListDiv>\r\n                    {listItemJsx}\r\n                </_ListDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Clone',\r\n                            isEnable: !hasData && fcsListIdx !== -1 && projects[fcsListIdx].source !== '',\r\n                            callback: () => {\r\n                                const source = DataUtil.unZip(projects[fcsListIdx].source);\r\n                                store.logicData = JSON.parse(source);\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Clone project succesful!\"\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_LeftDiv>\r\n            <_RighttDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Load',\r\n                            width: 100,\r\n                            isEnable: !hasData,\r\n                            callback: () => { DataUtil.loadFile(store, setStore) }\r\n                        },\r\n                        {\r\n                            label: store.fileHandle == null ? 'Save' : 'Overwrite',\r\n                            width: 140,\r\n                            isEnable: hasData,\r\n                            callback: () => { DataUtil.saveFile(store, setStore) }\r\n                        },\r\n                        {\r\n                            label: 'Disconnect',\r\n                            width: 160,\r\n                            isEnable: store.fileHandle != null,\r\n                            callback: () => {\r\n                                store.fileHandle = null;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Clear',\r\n                            width: 100,\r\n                            isEnable: hasData,\r\n                            callback: () => {\r\n                                store.logicData = null;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <FormUtil.BorderPanel\r\n                    title=\"Project\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Private\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : privateCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Release\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : releaseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Logic\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Launcher\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Size\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicSize.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Hash\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    width={340}\r\n                                    value={!hasData ? '-' : DataUtil.getSHA256Hash(JSON.stringify(store.logicData))}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n            </_RighttDiv>\r\n        </_BodyDiv>\r\n\r\n    </_Wrap >);\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst updateProjectSource = async (seq: number, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from prjcttbl where seq = ${seq};`)\r\n}\r\n\r\nconst HEADER_WIDTH = 40;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    background-color: #ebebeb30;\r\n`;\r\n\r\nconst _HeaderDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_WIDTH}px;\r\n    background-color: #d1f5f32f;\r\n`;\r\n\r\nconst _BodyDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_WIDTH}px);\r\n    background-color: #221a212c;\r\n`;\r\n\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #ffe3fb53;\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 86px);\r\n    box-sizing: border-box;\r\n    background-color: #f0ecd43d;\r\n    border: 1px solid #002c8a;\r\n    border-radius: 4px;\r\n`;\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    isExist: boolean;\r\n}>`\r\n    ${props => !props.isExist ? css`color: #0000006d;` : `color: #b90000be;`}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\nconst _RighttDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #cbf7cd2d;\r\n    vertical-align: top;\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\n\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport Particle from \"../../../graphic/particle\";\r\n\r\nconst LaunchAnalysis = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [divide, setDivide] = useState<FormUtil.CheckableValue>({ value: '20', errors: [] });\r\n    const [peak, setPeak] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n    const [total, setTotal] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n\r\n    const [countList, setCountList] = useState<number[]>([]);\r\n\r\n    const limitFrame = store.launchData.limitFrame;\r\n    const limitParticle = store.launchData.limitParticle;\r\n    const defList = store.launchData.defList;\r\n\r\n    const logicData = store.logicData as LogicUtil.WrapElement;\r\n\r\n    const execute = () => {\r\n        const minFrame = defList[0].frame;\r\n        const divRate = 1 / Number(divide.value);\r\n        const countList: number[] = [];\r\n        let peak = 0;\r\n        PreviewUtil.runParticleLogic({\r\n            limitFrame,\r\n            limitParticle,\r\n            guaranteeFrame: minFrame,\r\n            doIterate: (frame, owner) => {\r\n                const def = defList.find(def => def.frame === frame);\r\n                if (def != undefined) {\r\n                    const seedWrap = LogicElementUtil.findSeedWrap(logicData, def.seedId);\r\n                    const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n                    const getOrigin = () => {\r\n                        const root = logicData.data as LogicUtil.NodeRoot;\r\n                        const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                        return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                    }\r\n                    const getSendingValueMap = () => {\r\n                        const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n                        const valueMap = seedargMng.args.map((wrap, i) => {\r\n                            const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                            return { name: seedarg.name, value: def.values[i] }\r\n                        });\r\n\r\n                        // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                        const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                        return sendParams.map(item => {\r\n                            const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                            if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                            return { name: item.name, value }\r\n                        });\r\n                    }\r\n\r\n                    owner.push(new Particle.Instance(\r\n                        PreviewUtil.buildLogicProps(owner, getOrigin(), logicData, getSendingValueMap())\r\n                    ));\r\n                }\r\n\r\n                const pastRate = frame / limitFrame;\r\n                const needPoint = (countList.length + 1);\r\n                const curPoint = pastRate / divRate;\r\n                if (curPoint >= needPoint) {\r\n                    countList.push(owner.length);\r\n                }\r\n\r\n                if(owner.length > peak) peak = owner.length;\r\n            },\r\n            doEnd: (frame) => {\r\n                setTotal({...total, value: frame.toString()})\r\n            }\r\n        });\r\n        setPeak({...total, value: peak.toString()})\r\n        setCountList(countList);\r\n        // console.log(countList);\r\n    };\r\n\r\n    const itemJsxList = useMemo(() => {\r\n        const divRate = 1 / Number(divide.value);\r\n        const rateHeight = divRate /1;\r\n        return countList.map((count, i) => {\r\n            const rate = count / limitParticle;\r\n            return (\r\n                <_AnalisisItem key={i}\r\n                    rate={rate * 100}\r\n                    height={rateHeight * 100}\r\n                />\r\n            );\r\n        });\r\n    }, [countList]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <FormUtil.BorderPanel\r\n                title=\"Property\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Divide\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isNumber\r\n                                checkable={divide}\r\n                                setCheckable={setDivide}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 5, 200),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Analysis',\r\n                                isEnable: divide.errors.length === 0 && defList.length > 0,\r\n                                callback: execute\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Result\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Peak\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={150}\r\n                                isNumber\r\n                                checkable={peak}\r\n                                isReadOnly\r\n                                setCheckable={setPeak}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"End frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={150}\r\n                                isNumber\r\n                                checkable={total}\r\n                                isReadOnly\r\n                                setCheckable={setTotal}\r\n                            />\r\n                        }\r\n                    />\r\n                    <_AnalisisDiv>\r\n                        {itemJsxList}\r\n                    </_AnalisisDiv>\r\n                </>}\r\n            />\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default LaunchAnalysis;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _AnalisisDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #000000d3;\r\n    width: calc(100% - 16px);\r\n    height: 500px;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _AnalisisItem = styled.div<{\r\n    rate: number;\r\n    height: number;\r\n}>`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #ededed77; */\r\n    background: linear-gradient(to bottom, #d1ceda, #b3aec2, #d1ceda);\r\n    width: ${props => props.rate}%;\r\n    height: calc(${props => props.height}% - 1px);\r\n    margin: 1px 0 0 0;\r\n    /* height: 20px; */\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport { LaunchDef, SeedBean } from \"../launcherTab\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport LogicFormUtil from \"../../factory/util/logicFormUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst LaunchProperty = (props: {\r\n    newFrame: FormUtil.CheckableValue;\r\n    setNewFrame: (newFrame: FormUtil.CheckableValue) => void;\r\n    defBean: LaunchDef;\r\n    seedList: SeedBean[];\r\n    isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: (frame: number, seedId: string, values: number[]) => void;\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [seed, setSeed] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const newFrame = props.newFrame;\r\n    const setNewFrame = props.setNewFrame;\r\n    const isInputOK = seed.errors.length === 0 && newFrame.errors.length === 0 && formList.find(form => form.errors.length > 0) == undefined;\r\n\r\n\r\n    const mapping = () => {\r\n        setNewFrame({ ...newFrame, value: props.defBean.frame.toString() });\r\n        setSeed({ ...seed, value: props.defBean.seedId.toString() });\r\n        setFormList(props.defBean.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.defBean == undefined) return;\r\n        if (props.defBean.seedId === '') {\r\n            setNewFrame({ ...newFrame, value: '' });\r\n            setSeed({ ...seed, value: '' });\r\n            setFormList([]);\r\n        } else {\r\n            mapping();\r\n        }\r\n    }, [props.defBean]);\r\n\r\n    const initFormList = (seedId: string) => {\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seedId;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n        }\r\n        setFormList(argumentList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }\r\n\r\n    const propertiesFormJsx = useMemo(() => {\r\n        if (seed.value === '') return <></>;\r\n\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        let presetList: LogicUtil.NodeSampleItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seed.value;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n            formgrpList = activeSeed.formgrps;\r\n            presetList = activeSeed.presets;\r\n        }\r\n        return (<>\r\n            <FormUtil.BorderPanel\r\n                title=\"Preset\"\r\n                innerJsx={<FormUtil.Record\r\n                    jsx={<>\r\n                        <FormUtil.Combobox\r\n                            width={250}\r\n                            checkable={template}\r\n                            setCheckable={setTemplate}\r\n                            headBlank\r\n                            list={presetList.map((sample, i) => {\r\n                                return {\r\n                                    labelText: sample.name,\r\n                                    value: i.toString()\r\n                                }\r\n                            })}\r\n                            isReadOnly={!props.isModify}\r\n                        />\r\n                        <FormUtil.ButtonItem\r\n                            button={{\r\n                                label: 'Apply',\r\n                                isEnable: template.value !== '',\r\n                                callback: () => {\r\n                                    const selectedIndex = Number(template.value);\r\n                                    const values = presetList[selectedIndex].values;\r\n                                    values.forEach((value, i) => {\r\n                                        formList[i].value = value.toString();\r\n                                    });\r\n                                    setFormList(formList.slice());\r\n                                }\r\n                            }}\r\n                        />\r\n                    </>}\r\n                />}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Properties\"\r\n                innerJsx={<>{\r\n                    LogicFormUtil.buildPreviewForms(\r\n                        !props.isModify, argumentList, formgrpList, formList, setFormList\r\n                    )\r\n                }</>}\r\n            />\r\n        </>);\r\n    }, [template, formList, props.isModify]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: props.isModify,\r\n                        callback: () => {\r\n                            props.cancelAction();\r\n                            setTemplate({ ...template, value: '' });\r\n                            mapping();\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !props.isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !props.isModify || isInputOK,\r\n                        callback: () => {\r\n                            props.modifyAction(\r\n                                Number(newFrame.value),\r\n                                seed.value,\r\n                                formList.map(form => Number(form.value))\r\n                            );\r\n                            setTemplate({ ...template, value: '' });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Base\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isReadOnly={!props.isModify}\r\n                                isNumber\r\n                                checkable={newFrame}\r\n                                setCheckable={setNewFrame}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 0, store.launchData.limitFrame),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Seed\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                checkable={seed}\r\n                                setCheckable={(checkable) => {\r\n                                    initFormList(checkable.value);\r\n                                    setSeed({ ...checkable });\r\n                                }}\r\n                                list={props.seedList.map(seed => {\r\n                                    return { value: seed.name, labelText: seed.name }\r\n                                })}\r\n                                headBlank\r\n                                width={200}\r\n                                isReadOnly={!props.isModify}\r\n                                validates={\r\n                                    [\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n            {propertiesFormJsx}\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default LaunchProperty;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #dbebd6;\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\n\r\n\r\nconst LaunchEnvironment = (props: {\r\n    isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: () => void;\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [particle, setParticle] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const data = store.launchData;\r\n\r\n    const mapping = () => {\r\n        setFrame({ ...frame, value: data.limitFrame.toString() });\r\n        setParticle({ ...particle, value: data.limitParticle.toString() });\r\n    }\r\n    useEffect(() => {\r\n        mapping();\r\n    }, []);\r\n\r\n    const isInputOK = particle.errors.length === 0 && frame.errors.length === 0;\r\n\r\n    const maxLimit = data.defList.map(def => def.frame).reduce((prev, cur) => {\r\n        return prev > cur ? prev : cur;\r\n    }, 0);\r\n\r\n    return (<_Wrap>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Cancel',\r\n                    isEnable: props.isModify,\r\n                    callback: () => {\r\n                        mapping();\r\n                        props.cancelAction();\r\n                    }\r\n                },\r\n                {\r\n                    label: !props.isModify ? 'Modify' : 'Regist',\r\n                    isEnable: !props.isModify || isInputOK,\r\n                    callback: () => {\r\n                        data.limitFrame = Number(frame.value);\r\n                        data.limitParticle = Number(particle.value);\r\n                        setStore({ ...store });\r\n                        props.modifyAction();\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Limit\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!props.isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkNumberRange(value, maxLimit, 1000),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Particle\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!props.isModify}\r\n                            isNumber\r\n                            checkable={particle}\r\n                            setCheckable={setParticle}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkNumberRange(value, 100, 5000),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </_Wrap>)\r\n}\r\n\r\nexport default LaunchEnvironment;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import { useContext, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { JsxEmit } from \"typescript\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport { Cache, LaunchDef, SeedBean } from \"./launcherTab\";\r\n\r\nconst ITEM_WIDTH = 10;\r\nconst DIV_CNT = 5;\r\n\r\nconst TimelineFrame = (props: {\r\n    newFrameValue: number;\r\n    setNewFrameValue: (num: number) => void;\r\n    isModify: boolean;\r\n    focus: number;\r\n    seedList: SeedBean[];\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const defList = store.launchData.defList;\r\n    const limitFrame = store.launchData.limitFrame;\r\n\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const defPosJsxList = useMemo(() => {\r\n\r\n        const newFrameRate = props.newFrameValue / limitFrame;\r\n        return defList.map((def, i) => {\r\n            const rate = props.isModify && props.focus === i ? newFrameRate : def.frame / limitFrame;\r\n            const x = rate * 100;\r\n            const y = 5 + i * (ITEM_WIDTH + 3);\r\n            const cache = store.launchCacheList.find(cache => cache.seq === def.seq) as Cache;\r\n            const sus = cache.useFrame / limitFrame * 100;\r\n            return (<div key={i}>\r\n                {props.isModify && props.focus === i ? (\r\n                    <_Line x={x} />\r\n                ) : <></>}\r\n                <_Item\r\n                    x={x} y={y}\r\n                    isFocus={i === props.focus}\r\n                />\r\n                <_Sustain\r\n                    x={x}\r\n                    y={y}\r\n                    sus={sus}\r\n                />\r\n            </div>);\r\n        });\r\n    }, [limitFrame, props.focus, defList, props.isModify, props.newFrameValue]);\r\n\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i < DIV_CNT + 1; i++) {\r\n            const rate = i / DIV_CNT;\r\n            const value = Math.floor(limitFrame * rate);\r\n            jsxList.push(\r\n                <_Memori\r\n                    key={i}\r\n                    x={rate * 100}\r\n                >{value}</_Memori>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [limitFrame]);\r\n\r\n    return (<>\r\n        <_MeasureDiv>\r\n            {memoriJsxList}\r\n        </_MeasureDiv>\r\n        <_Wrap\r\n            ref={ref}\r\n            isModify={props.isModify}\r\n            onClick={(e) => {\r\n                if (!props.isModify) return;\r\n                if (ref != null) {\r\n                    const dom = ref.current as HTMLDivElement;\r\n                    const rect = dom.getBoundingClientRect();\r\n                    const pos = e.clientX - rect.x;\r\n                    const rate = pos / rect.width;\r\n                    const newFrame = Math.floor(limitFrame * rate);\r\n                    props.setNewFrameValue(newFrame);\r\n                }\r\n            }}>\r\n            {defPosJsxList}\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default TimelineFrame;\r\n\r\nconst MEASURE_WIDTH = 40;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #f2d9341a;\r\n    /* border-bottom: 3px solid #fff; */\r\n    box-sizing: border-box;\r\n    width: calc(100% - 36px);\r\n    height: ${MEASURE_WIDTH}px;\r\n    margin: 2px 0 0 18px;\r\n`;\r\nconst _Memori = styled.div<{\r\n    x: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* background-color: #ffffff31; */\r\n    width: 30px;\r\n    height: 20px;\r\n    left: calc(${props => props.x}% - 18px);\r\n    bottom: 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Wrap = styled.div<{\r\n    isModify: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b3d0b937;\r\n    /* border: 1px solid #ffffff4c; */\r\n    ${props => !props.isModify ? '' : css`\r\n        background-color: #ff000049;\r\n    `}\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 36px);\r\n    height: calc(100% - ${MEASURE_WIDTH + 8}px);\r\n    margin: 2px 0 0 18px;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #ffffff8d;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #ffb222;\r\n    `}\r\n    /* border: solid 1px #000000; */\r\n    border-radius: ${ITEM_WIDTH}px;\r\n    width: ${ITEM_WIDTH}px;\r\n    height: ${ITEM_WIDTH}px;\r\n    left: calc(${props => props.x}% - ${ITEM_WIDTH / 2}px);\r\n    top: ${props => props.y}px;\r\n`;\r\nconst _Sustain = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    sus: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #bfffb324;\r\n    /* border: solid 1px #000000; */\r\n    /* border-radius: ${ITEM_WIDTH}px; */\r\n    width: ${props => props.sus}%;\r\n    height: ${ITEM_WIDTH / 2}px;\r\n    left: calc(${props => props.x}%);\r\n    top: calc(${props => props.y}px + ${ITEM_WIDTH / 4}px);\r\n`;\r\nconst _Line = styled.div<{\r\n    x: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #ff0000f0;\r\n    left: ${props => props.x}%;\r\n    top: 0;\r\n    width: 1px;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\n\r\nnamespace PreviewLauncherFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        sceens: string[];\r\n        frameCnt: number;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const sceens = props.sceens;\r\n        const frameCnt = props.frameCnt;\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                        } break;\r\n                        case 'ArrowRight': {\r\n                            if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                        } break;\r\n                        case ' ': {\r\n                            setPlay(!isPlay);\r\n                        } break;\r\n                    }\r\n                    if (e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }}\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Play', enable: true, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLauncherFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #aed5d8e0;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport LaunchAnalysis from \"./tab/launchAnalysis\";\r\nimport LaunchProperty from \"./tab/launchProperty\";\r\nimport LaunchEnvironment from \"./tab/launchEnvironment\";\r\nimport TimelineFrame from \"./timelineFrame\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport PreviewUtil from \"../preview/previewUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport PreviewLauncherFrame from \"../preview/previewLauncherFrame\";\r\n\r\nexport type LaunchData = {\r\n    limitFrame: number;\r\n    limitParticle: number;\r\n    defList: LaunchDef[];\r\n}\r\n\r\nexport type LaunchDef = {\r\n    seq: number;\r\n    frame: number;\r\n    seedId: string;\r\n    values: number[];\r\n};\r\n\r\nexport type Cache = {\r\n    seq: number;\r\n    thumbList: { url: string, name: string }[];\r\n    useFrame: number;\r\n};\r\n\r\nexport type SeedBean = {\r\n    name: string;\r\n    args: LogicUtil.NodeSeedArgItem[];\r\n    formgrps: LogicUtil.NodeFromGrpItem[];\r\n    presets: LogicUtil.NodeSampleItem[];\r\n};\r\n\r\nconst LauncherTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const limitFrame = store.launchData.limitFrame;\r\n    const limitParticle = store.launchData.limitParticle;\r\n\r\n    const [newFrame, setNewFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [defList, setDefList] = useState<LaunchDef[]>([]);\r\n    const [isDefEdit, setDefEdit] = useState<boolean>(false);\r\n    const [isEnvEdit, setEnvEdit] = useState<boolean>(false);\r\n    const [tabActiveIndex, setTabActiveIndex] = useState<number>(0);\r\n    const [focus, setFocus] = useState<number>(-1);\r\n\r\n    const defList = store.launchData.defList;\r\n\r\n    const setDefList = (defList: LaunchDef[]) => {\r\n        store.launchData.defList = defList;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const seedList: SeedBean[] = useMemo(() => {\r\n        if (store.logicData == null) return [];\r\n        const root = store.logicData.data as LogicUtil.NodeRoot;\r\n        const seedWrapList = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        return seedWrapList.map(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n\r\n            // 引数リストを取得\r\n            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const args = argMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n\r\n            // フォームグループリストを取得\r\n            const groupMng = LogicElementUtil.getInnerWrap(wrap, 'interface-mng', 'formgrp-mng');\r\n            let formgrps: LogicUtil.NodeFromGrpItem[] = [];\r\n            if (groupMng != null) {\r\n                formgrps = (groupMng.data as LogicUtil.NodeFromgrpManager).defines.map(wrap => wrap.data as LogicUtil.NodeFromGrpItem);\r\n            }\r\n\r\n            // プリセットリストを取得\r\n            const sampleMng = LogicElementUtil.getInnerWrap(wrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n            const presets = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n            return {\r\n                name: seed.name,\r\n                args, formgrps, presets\r\n            }\r\n        });\r\n    }, [store.logicData]);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [defList]);\r\n\r\n    const createSeq = () => {\r\n        return defList\r\n            .map(def => def.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    const add = () => {\r\n        const seq = createSeq();\r\n        defList.push({ seq, frame: 0, seedId: '', values: [] });\r\n        setDefList(defList.slice());\r\n        setFocus(defList.length - 1);\r\n        store.launchCacheList.push({ seq, thumbList: [], useFrame: 0 });\r\n        setTabActiveIndex(2);\r\n        setDefEdit(true);\r\n    }\r\n\r\n    const defJsxList = useMemo(() => {\r\n        return defList.map((def, i) => {\r\n\r\n            const cache = store.launchCacheList.find(cache => cache.seq === def.seq);\r\n\r\n            let thumbJsx: JSX.Element[] = [];\r\n            if (cache != undefined) {\r\n                thumbJsx = cache.thumbList.slice(0, 3).map((thumb, j) => {\r\n                    const imgJsx = thumb == undefined ? <></> : <_IMG src={thumb.url} />;\r\n                    return (\r\n                        <_SampleDiv key={j}>-\r\n                            <_SampleName>{thumb.name}</_SampleName>\r\n                            <_CanvasDiv>\r\n                                {imgJsx}\r\n                            </_CanvasDiv>\r\n                        </_SampleDiv>\r\n                    );\r\n                });\r\n            };\r\n            return (\r\n                <_ItemDiv key={i}\r\n                    isEnable={!isDefEdit || focus === i}\r\n                >\r\n                    <_ItemFrame isFocus={i === focus}\r\n                        onClick={() => {\r\n                            setFocus(i);\r\n                        }}\r\n                    >\r\n                        {def.seedId === '' ? (\r\n                            <_PropRecord>Creating...</_PropRecord>\r\n                        ) : (<>\r\n                            <_FrameRecord>{def.frame}</_FrameRecord>\r\n                            {/* <_SeedRecord>{def.seedName}: {def.seq}</_SeedRecord> */}\r\n                            <_SeedRecord>{def.seedId}</_SeedRecord>\r\n                            <_ThumbFrame>\r\n                                {thumbJsx}\r\n                            </_ThumbFrame>\r\n                            {def.values.map((val, j) => {\r\n                                const seedBean = seedList.find(seed => seed.name === def.seedId) as SeedBean;\r\n                                const name = seedBean.args[j].name;\r\n                                return (\r\n                                    <_PropRecord key={j}><_Title>{name}: </_Title>{val}</_PropRecord>\r\n                                );\r\n                            })}\r\n                        </>)}\r\n                    </_ItemFrame>\r\n                </_ItemDiv>\r\n            );\r\n        });\r\n    }, [defList, focus, isDefEdit]);\r\n\r\n    /**\r\n     * プレビューオールダイアログを表示する\r\n     */\r\n    const openPreviewAllDialog = () => {\r\n        const minFrame = defList[0].frame;\r\n        const logicData = store.logicData as LogicUtil.WrapElement;\r\n        const sceens: string[] = [];\r\n        let useFrame: number = 0;\r\n        console.log(limitFrame);\r\n        PreviewUtil.runParticleLogic({\r\n            limitFrame,\r\n            limitParticle,\r\n            guaranteeFrame: minFrame,\r\n            doIterate: (frame, owner) => {\r\n\r\n                defList.some(def => {\r\n                    if (def.frame === frame) {\r\n                        LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                    } else if (def.frame > frame) return 1;\r\n                });\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                }));\r\n            },\r\n            doEnd: (frame) => {\r\n                useFrame = frame;\r\n            }\r\n        });\r\n        store.system.dialog = (\r\n            <PreviewLauncherFrame.Component\r\n                sceens={sceens}\r\n                frameCnt={useFrame}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * プレビューソロダイアログを表示する\r\n     */\r\n    const openPreviewSoloDialog = () => {\r\n        const logicData = store.logicData as LogicUtil.WrapElement;\r\n        const sceens: string[] = [];\r\n        let useFrame: number = 0;\r\n        PreviewUtil.runParticleLogic({\r\n            limitFrame,\r\n            limitParticle,\r\n            doIterate: (frame, owner) => {\r\n\r\n                const def = defList[focus];\r\n                if (frame === 0) {\r\n                    LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                }\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                }));\r\n            },\r\n            doEnd: (frame) => {\r\n                useFrame = frame;\r\n            }\r\n        });\r\n        store.system.dialog = (\r\n            <PreviewLauncherFrame.Component\r\n                sceens={sceens}\r\n                frameCnt={useFrame}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const updateCache = (def: LaunchDef, cache: Cache) => {\r\n\r\n        const logicData = store.logicData as LogicUtil.WrapElement;\r\n        cache.thumbList = [];\r\n        cache.useFrame = 0;\r\n        const seedProps = LogicElementUtil.getSeedProperties(logicData, def.seedId);\r\n        PreviewUtil.runParticleLogic({\r\n            limitFrame,\r\n            limitParticle,\r\n            doIterate: (frame, owner) => {\r\n                if (frame === 0) {\r\n                    LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                }\r\n\r\n                const thumb = seedProps.thumbnailList.find(thumb => thumb.frame === frame);\r\n                if (thumb != undefined) {\r\n                    const url = CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    });\r\n                    cache.thumbList.push({ name: thumb.name, url });\r\n                }\r\n            },\r\n            doEnd: (frame) => {\r\n                cache.useFrame = frame;\r\n            }\r\n        });\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const isCreate = defList.length === 0 ? false : defList[defList.length - 1].seedId === '';\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n        >\r\n            <_ListDiv>\r\n                <_ListHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview All',\r\n                                isEnable: !isDefEdit,\r\n                                callback: openPreviewAllDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_ListHead>\r\n                <_ListHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Add',\r\n                                isEnable: !isDefEdit,\r\n                                callback: add\r\n                            },\r\n                            {\r\n                                label: 'Delete',\r\n                                isEnable: !isDefEdit && focus != -1,\r\n                                callback: () => {\r\n                                    defList.splice(focus, 1);\r\n                                    setDefList(defList.slice());\r\n                                    if (focus > 0) {\r\n                                        setFocus(focus - 1);\r\n                                    } else if (focus === 0 && defList.length === 0) {\r\n                                        setFocus(-1);\r\n                                        setTabActiveIndex(0);\r\n                                    }\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Replicate',\r\n                                isEnable: !isDefEdit && focus != -1,\r\n                                callback: () => {\r\n                                    const cloneDef = JSON.parse(JSON.stringify(defList[focus])) as LaunchDef;\r\n                                    const newSeq = createSeq();\r\n                                    cloneDef.seq = newSeq;\r\n                                    defList.splice(focus, 0, cloneDef);\r\n                                    setDefList(defList.slice());\r\n                                    setFocus(focus + 1);\r\n\r\n                                    // const baseCache = store.launchCacheList.find(cache => cache.seq === defList[focus].seq) as Cache;\r\n                                    // console.log(baseCache);\r\n                                    // const cloneCache = JSON.parse(JSON.stringify(baseCache)) as Cache;\r\n                                    // cloneCache.seq = newSeq;\r\n                                    const newCache: Cache = { seq: newSeq, thumbList: [], useFrame: 0 };\r\n                                    updateCache(cloneDef, newCache);\r\n                                    store.launchCacheList.push(newCache);\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Preview Solo',\r\n                                isEnable: !isDefEdit && focus != -1,\r\n                                callback: openPreviewSoloDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_ListHead>\r\n                <_ListBody>\r\n                    <_Timeline><TimelineFrame\r\n                        newFrameValue={Number(newFrame.value)}\r\n                        setNewFrameValue={(num: number) => {\r\n                            setNewFrame({ ...newFrame, value: num.toString() })\r\n                        }}\r\n                        isModify={isDefEdit}\r\n                        focus={focus}\r\n                        seedList={seedList}\r\n                    /></_Timeline>\r\n                    <_ListMain>\r\n                        {defJsxList}\r\n                    </_ListMain>\r\n                </_ListBody>\r\n            </_ListDiv>\r\n            <_RightDiv>\r\n                <_RightInner>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            {\r\n                                name: 'Environment', enable: !isDefEdit, cont: <LaunchEnvironment\r\n                                    isModify={isEnvEdit}\r\n                                    cancelAction={() => {\r\n                                        setEnvEdit(false);\r\n                                    }}\r\n                                    modifyAction={() => {\r\n                                        if (!isEnvEdit) {\r\n                                            setEnvEdit(true);\r\n                                        } else {\r\n                                            setEnvEdit(false);\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            },\r\n                            { name: 'Analysis', enable: !isDefEdit && !isEnvEdit, cont: <LaunchAnalysis /> },\r\n                            {\r\n                                name: 'Property', enable: !isEnvEdit && focus != -1, cont: <LaunchProperty\r\n                                    newFrame={newFrame}\r\n                                    setNewFrame={setNewFrame}\r\n                                    defBean={defList[focus]}\r\n                                    seedList={seedList}\r\n                                    isModify={isDefEdit}\r\n                                    cancelAction={() => {\r\n                                        setDefEdit(false);\r\n                                        if (isCreate) {\r\n                                            defList.splice(defList.length - 1, 1);\r\n                                            setDefList(defList.slice());\r\n                                            setFocus(focus - 1);\r\n                                            if (defList.length === 0) {\r\n                                                setTabActiveIndex(0);\r\n                                            }\r\n                                        }\r\n                                    }}\r\n                                    modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                        if (!isDefEdit) {\r\n                                            setDefEdit(true);\r\n                                        } else {\r\n                                            const def = defList[focus];\r\n                                            def.frame = frame;\r\n                                            def.seedId = seedId;\r\n                                            def.values = values;\r\n                                            const seq = def.seq;\r\n                                            const cache = store.launchCacheList.find(cache => cache.seq === seq) as Cache;\r\n                                            updateCache(def, cache);\r\n                                            defList.sort((a, b) => {\r\n                                                return a.frame - b.frame;\r\n                                            });\r\n                                            setDefList(defList.slice());\r\n                                            setFocus(defList.findIndex(def => def.seq === seq));\r\n                                            setDefEdit(false);\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            }\r\n                        ]}\r\n                        selectTabIndex={setTabActiveIndex}\r\n                        activeNo={tabActiveIndex}\r\n                    />\r\n                </_RightInner>\r\n            </_RightDiv>\r\n            {/* <_Blind isVisible={isBackingWnd}>\r\n                    <_Contents>{!isBackingWnd ? <></> : <BackingEditorFrame />}</_Contents>\r\n                </_Blind> */}\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default LauncherTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #1e1c22;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _ListDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #653fd6; */\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst LIST_HEAD = 40;\r\nconst TIMELINE_WIDTH = 240;\r\n\r\nconst _ListHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d8;\r\n    width: 100%;\r\n    height: ${LIST_HEAD}px;\r\n`;\r\n\r\nconst _ListBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: calc(100% - ${LIST_HEAD * 2}px);\r\n`;\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #00071b;\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: ${TIMELINE_WIDTH}px;\r\n`;\r\nconst _ListMain = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #c551b6; */\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: calc(100% - ${TIMELINE_WIDTH}px);\r\n    overflow-x: auto;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _RightDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c1c0c4;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\nconst _RightInner = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n`;\r\n\r\nconst _TabContWrap = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 630px;\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    /* opacity: 0.9; */\r\n    overflow: hidden;\r\n`;\r\n\r\n\r\nconst _ItemDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    background: linear-gradient(to right, #3a383d, #8d8999, #3a383d);\r\n    vertical-align: top;\r\n    width: 220px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n    background: linear-gradient(to right, #66626b, #b7b2c7, #66626b);\r\n    }\r\n`;\r\n\r\nconst _ItemFrame = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #8997bd29;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #d7eb7d83;\r\n    `}\r\n    border: 1px solid #2c3577;\r\n    border-radius: 2px;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _PropRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    /* margin-top: 1px; */\r\n    height: 24px;\r\n    /* background: linear-gradient(to bottom, #aaaaaa89, #e1e1e18a, #aaaaaa89); */\r\n    /* font-size: 20px; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #555555;\r\n    font-style: italic;\r\n    line-height: 22px;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Title = styled.span`\r\n    color: #f00;\r\n`;\r\n\r\n\r\nconst _FrameRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    height: 35px;\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    color: #132693;\r\n    font-style: italic;\r\n    line-height: 34px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\nconst _SeedRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    height: 35px;\r\n    font-size: 26px;\r\n    font-style: italic;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    line-height: 34px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ThumbFrame = styled.div<{}>`\r\n    display: inline-block;\r\n    /* background-color: #4b09ff; */\r\n    width: 100%;\r\n`;\r\nconst WND_SIZE = 65;\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport LogicMainteTab from \"./factory/logicMainteTab\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport PreviewTab from \"./manage/manageTab\";\r\nimport LauncherTab from \"./launcher/launcherTab\";\r\nimport Timeline from \"./launcher/launcherTab\";\r\n\r\n\r\nconst CreateChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const hasData = store.logicData != null;\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', enable: true, cont: <ManageTab /> },\r\n                    { name: 'Launcher', enable: hasData, cont: <LauncherTab /> },\r\n                    { name: 'Library', enable: hasData, cont: <LogicMainteTab /> }\r\n                ]}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CreateChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport TreeUtil from \"../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../create/factory/util/logicUtil\";\r\nimport PreviewLogicFrame from \"../create/preview/previewLogicFrame\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    isOpen: boolean;\r\n    seedList: SeedProps[];\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\n\r\nconst PublishFrame = (props: {\r\n    setLibCnt: (artsCnt: number) => void;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [libList, setLibList] = useState<LibProps[]>([]);\r\n\r\n    useEffect(() => {\r\n        findAllReleaseProjectList().then((resList) => {\r\n            const libList: LibProps[] = [];\r\n            resList.forEach(res => {\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const rootData = JSON.parse(DataUtil.unZip(res.source)) as LogicUtil.WrapElement;\r\n                const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                const seedList: SeedProps[] = seedMng.defs\r\n                    .filter(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        return seed.permit === 'release';\r\n                    })\r\n                    .map(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                        const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                        return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                    });\r\n                libList.push({\r\n                    name, ownerId, lastmod, rootData, seedList, isOpen: false\r\n                });\r\n            });\r\n            setLibList(libList);\r\n            props.setLibCnt(libList.length);\r\n        });\r\n    }, []);\r\n\r\n    const download = (plainData: string) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        window.showSaveFilePicker(options).then((handle) => {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await handle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"Successfully download!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        }).catch(() => {\r\n            console.log('キャンセルされました');\r\n        });\r\n    }\r\n\r\n    const libListJsx = libList\r\n        .filter(lib => lib.seedList.length > 0).map((lib, i) => {\r\n            const dispCnt = !lib.isOpen ? 0 : lib.seedList.length;\r\n            return (<_Item key={i} count={dispCnt}>\r\n                <_Header onClick={() => {\r\n                    // window.open(DataUtil.getPreviewURL(score.seq), '_blank');\r\n                }}>\r\n                    <_Owner>{`${lib.ownerId}`}</_Owner>\r\n                    <_CName onClick={() => {\r\n                        download(JSON.stringify(lib.rootData));\r\n                    }}>{`${lib.name}`}</_CName><_CDate>{lib.lastmod}</_CDate>\r\n                </_Header>\r\n                <_DetailMain count={dispCnt}>\r\n                    {lib.seedList.map((seed, j) => {\r\n                        let labelName = seed.name;\r\n                        if (seed.disp != undefined) labelName = seed.disp;\r\n                        return (\r\n                            <_SeedItemFrame key={j} onClick={() => {\r\n                                store.system.dialog = (\r\n                                    <PreviewLogicFrame.Component\r\n                                        master={seed.master}\r\n                                        rootData={lib.rootData}\r\n                                    />\r\n                                );\r\n                                setStore({ ...store });\r\n                            }}>\r\n                                <_SeedItemInner>\r\n                                    <_SeedName>{labelName}</_SeedName>\r\n                                    <_SeedArgCnt>{` [${seed.argCount} arguments]`}</_SeedArgCnt>\r\n                                </_SeedItemInner>\r\n                            </_SeedItemFrame>\r\n                        );\r\n                    })}\r\n                </_DetailMain>\r\n                <_DetailOpen onClick={() => {\r\n                    libList[i].isOpen = !libList[i].isOpen;\r\n                    setLibList(libList.slice());\r\n                }}>\r\n                    <_CSummary>{` ${lib.seedList.length} seeds ▼`}</_CSummary>\r\n                </_DetailOpen>\r\n            </_Item>);\r\n        });\r\n\r\n    return (\r\n        <_ListFrame>{libListJsx}</_ListFrame>\r\n    );\r\n}\r\n\r\nexport default PublishFrame;\r\n\r\nexport const findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #929292;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst SEED_HEIGTH = 40;\r\nconst _Item = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${props => (props.count > 0 ? 8 : 0) + 89 + props.count * SEED_HEIGTH}px;\r\n    /* border-bottom: 1px solid #262626; */\r\n    /* background-color: #2e2e2e; */\r\n    /* background: linear-gradient(to bottom, transparent, #4f4f4f); */\r\n    margin: 2px 0 0 0;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    } */\r\n    transition: height 200ms;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100%);\r\n    height: 60px;\r\n    /* background-color: #c9e3df; */\r\n    background: linear-gradient(to bottom, #c2d5d2, #d9ebe9, #c2d5d2);\r\n    /* margin: 4px 0 0 4px; */\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff);\r\n    } */\r\n`;\r\nconst _DetailMain = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 40px);\r\n    height: ${props => (props.count > 0 ? 8 : 0) + props.count * SEED_HEIGTH}px;\r\n    background-color: #9cc0b1;\r\n    border-radius: 0 0 2px 2px;\r\n    margin: 0 0 0 20px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    transition: height 200ms;\r\n    overflow-y: hidden;\r\n`;\r\nconst _DetailOpen = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 240px);\r\n    height: 25px;\r\n    margin: 0 0 0 120px;\r\n    background-color: #9cc0b1;\r\n    border-radius: 0 0 2px 2px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    \r\n    &:hover {\r\n        background-color: #c6d1a1;\r\n    }\r\n`;\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    \r\n    &:hover {\r\n        color: #db3333;\r\n    }\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CSummary = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 25px;\r\n    font-size: 22px;\r\n    line-height: 22px;\r\n    font-weight: 600;\r\n    color: #fffffad6;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _SeedItemFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${SEED_HEIGTH}px;\r\n    /* background-color: #a3b9c0; */\r\n    margin: 2px 0 0 0;\r\n    /* padding-left: 4px; */\r\n    text-align: left;\r\n`;\r\nconst _SeedItemInner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 2px;\r\n    border: 1px solid #0000002e;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    line-height: 29px;\r\n    font-weight: 600;\r\n    padding: 0 0 0 5px;\r\n    &:hover {\r\n        background-color: #bbd4dc;\r\n    }\r\n`;\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #000f74;\r\n`;\r\nconst _SeedArgCnt = styled.span<{\r\n}>`\r\n    color: #c7020265;\r\n`;","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\ntype NotePorp = {\r\n    version: string;\r\n    date: string;\r\n    note: string;\r\n}\r\n\r\nconst ReleaseNote = () => {\r\n    const { store } = useContext(GlobalContext);\r\n\r\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\r\n    useEffect(() => {\r\n        fetch('assets/release_note.json')\r\n            .then(response => response.json()) // (2) レスポンスデータを取得\r\n            .then(json => { // (3)レスポンスデータを処理\r\n                const list = json as NotePorp[];\r\n                setJsx(list.map((item, i) => {\r\n                    const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n                    return (\r\n                        <_Item key={i}>\r\n                            <_Header>v{item.version} ({item.date})</_Header>\r\n                            <_Detail>{record}</_Detail>\r\n                        </_Item>\r\n                    );\r\n                }));\r\n            });\r\n    }, []);\r\n    return (<_ListFrame>{jsx}</_ListFrame>);\r\n}\r\n\r\nexport default ReleaseNote;\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    /* height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px); */\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #bfcace;\r\n    border: 1px solid #9b9b9b;\r\n    border-radius: 6px;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    font-weight: 600;\r\n    /* background-color: #8bdbf8; */\r\n    color: #494975;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    /* background-color: #dafce4; */\r\n    color: #754949;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PublishFrame from \"./publishFrame\";\r\nimport ReleaseNote from \"./releaseNote\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [userCount, setUserCount] = useState(0);\r\n    const [artsCnt, setArtsCnt] = useState(0);\r\n\r\n    useEffect(() => {\r\n        countUsers().then(cnt => {\r\n            setUserCount(cnt);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <ReleaseNote />\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{artsCnt} libruary have been published.</_MessageRecord>\r\n            <PublishFrame setLibCnt={setArtsCnt}/>\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeChannel;\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nexport const findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT seq, (select id from user_tbl where seq = prj.seq) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { VscGitPullRequestCreate } from 'react-icons/vsc';\r\nimport CreateChannel from \"../create/createChannel\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <HomeChannel /> },\r\n                    { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <CreateChannel /> },\r\n                ]}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport CanvasUtil from '../../utils/canvasUtil';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <_Logo src={logo} />\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2023 Pixel Flare All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#00103d, #475fa3);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    /* color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-shadow: 1px 2px 22px #0000003d; */\r\n    text-align: center;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    /* & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    } */\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #ebe7ab;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n    /* height: 200%; */\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport StoreSystem from \"../../redux/store/storeSystem\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../utils/form/validateUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst WIDTH = 750;\r\nconst HEIGHT = 600;\r\n/**\r\n * アカウントフレームのコンポーネント\r\n * @returns \r\n */\r\nconst AccountFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [oldPass, setOldPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPass, setNewPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPassConfirm, setNewPassConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n    const [emailList, setEmailList] = useState<string[]>([]);\r\n\r\n    const [isModify, setModify] = useState(false);\r\n    const loginProps = store.system.user as StoreSystem.User;\r\n\r\n    const reloadInfo = () => {\r\n        setUserId({ ...userId, value: loginProps.id });\r\n        setNewPass({ ...newPass, value: '' });\r\n        setNewPassConfirm({ ...newPassConfirm, value: '' });\r\n        setEmail({ ...email, value: loginProps.email });\r\n        setOldPass({ ...oldPass, value: loginProps.password });\r\n    }\r\n\r\n    useEffect(() => {\r\n        DataUtil.findUserInfoList().then(list => {\r\n\r\n            const userIdList: string[] = [];\r\n            const emailList: string[] = [];\r\n            list.forEach(info => {\r\n                if (info.id !== loginProps.id) userIdList.push(info.id);\r\n                if (info.email !== '') emailList.push(info.email);\r\n            });\r\n            setUserIdList(userIdList);\r\n            setEmailList(emailList);\r\n        });\r\n\r\n        const hash = DataUtil.getHashedFromUserSeq(loginProps.seq);\r\n\r\n        // ユーザページのURLに変更する。\r\n        window.history.replaceState('', '', `/#/user?v=${hash}`);\r\n\r\n        reloadInfo();\r\n\r\n        // 閉じる際にURLを元に戻す\r\n        return () => {\r\n            // alert('destroy');\r\n            window.history.replaceState('', '', `/#/`);\r\n        }\r\n    }, []);\r\n\r\n    const userTabJsx: JSX.Element = (\r\n        <_Wrap>\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'user id'}\r\n                checkable={userId}\r\n                setCheckable={setUserId}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !userIdList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass'}\r\n                isPassword\r\n                checkable={newPass}\r\n                setCheckable={setNewPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPassConfirm.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPassConfirm]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass*'}\r\n                isPassword\r\n                checkable={newPassConfirm}\r\n                setCheckable={setNewPassConfirm}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPass.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPass]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'email'}\r\n                checkable={email}\r\n                setCheckable={setEmail}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => {\r\n                            return value.length === 0 || value.split('@').length === 2;\r\n                        },\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !emailList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                // width={500}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'old pass'}\r\n                isPassword\r\n                checkable={oldPass}\r\n                setCheckable={setOldPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => value === loginProps.password,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                // dependency={[passwordConfirm]}\r\n                width={300}\r\n                marginTop={55}\r\n                isReadOnly={!isModify}\r\n            />\r\n        </_Wrap>\r\n    );\r\n\r\n    // 登録ボタンの活性状態\r\n    const permitRegist = (\r\n        userId.errors.length === 0\r\n        && newPass.errors.length === 0\r\n        && newPassConfirm.errors.length === 0\r\n        && email.errors.length === 0\r\n        && oldPass.errors.length === 0\r\n    );\r\n\r\n    const updateUserInfo = () => {\r\n        const passwordStr = newPass.value.length === 0 ? '' : `,password = '${newPass.value}'`;\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `UPDATE user_tbl SET id = '${userId.value}', email = '${email.value}'${passwordStr}\r\n            WHERE seq = ${loginProps?.seq}`\r\n        ).then(() => {\r\n            loginProps.id = userId.value;\r\n            if (newPass.value.length > 0) {\r\n                loginProps.password = newPass.value;\r\n            }\r\n            loginProps.email = email.value;\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Modify successful!\" />;\r\n            setStore({...store});\r\n        });\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <FormUtil.Message\r\n                    message=\"If you bookmark this page, you can easily login by URL.\"\r\n                />\r\n            </_Header>\r\n            <_Body>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'User', enable: true, cont: userTabJsx },\r\n                        { name: 'Security', enable: false, cont: <></> },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_Body>\r\n            <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        {\r\n                            label: 'Close',\r\n                            callback: () => {\r\n                                // dispatcher.system.closeDialog();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Cancel',\r\n                            isEnable: isModify,\r\n                            callback: () => {\r\n                                setModify(false);\r\n                                reloadInfo();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isModify ? 'Modify' : 'Regist',\r\n                            isEnable: !isModify || permitRegist,\r\n                            callback: () => {\r\n                                if (!isModify) {\r\n                                    setModify(true);\r\n                                    setOldPass({ ...oldPass, value: '' });\r\n                                }\r\n                                else {\r\n                                    updateUserInfo();\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\n\r\nexport default AccountFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7eb;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    /* text-align: center; */\r\n`;\r\nconst _Body = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 100px);\r\n    padding: 4px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport AccountFrame from \"../accountFrame\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginCreateAccount = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isRegist, setRegist] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [passwordConfirm, setPasswordConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n\r\n    const createAuthText = () => {\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n        const list = '0123456789';\r\n        let text = '';\r\n        for (let i = 0; i < 6; i++) {\r\n            text += list.charAt(Math.random() * list.length);\r\n        }\r\n        return text;\r\n    };\r\n\r\n    /** 既存のユーザIDリストを格納 */\r\n    useEffect(() => {\r\n        DataUtil.findUserIdList().then(list => {\r\n            setUserIdList(list);\r\n        });\r\n\r\n        // fetch('https://api.ipify.org/?format=json').then(res => {\r\n        //     res.json().then(data => {\r\n        //         alert(data['ip']);\r\n        //     });\r\n        // });\r\n    }, []);\r\n\r\n    const [authCollation, setAuthCollation] = useState<string>(createAuthText());\r\n    const [authInput, setAuthInput] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    /** キャッシュした認証画像 */\r\n    const authPicture = useMemo(() => {\r\n        return CanvasUtil.getAuthTextURL(authCollation);\r\n\r\n    }, [authCollation]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n                case 'relation': list.push('[password] does not match confirm.'); break;\r\n            }\r\n        }\r\n        if (passwordConfirm.errors.length > 0) {\r\n            switch (passwordConfirm.errors[0]) {\r\n                case 'length': list.push('[password *] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    const registAction = () => {\r\n\r\n        (async () => {\r\n            let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n            let results = await response.json();\r\n            console.log(JSON.stringify(results[0].cnt));\r\n            const isExist = results[0].cnt > 0;\r\n            if (isExist) {\r\n                setMessageList(['That user id has already been recorded.']);\r\n            } else {\r\n                const nextSeq = await DataUtil.getNextUserSeq();\r\n                console.log(nextSeq);\r\n                await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(seq, id, password) VALUES(${nextSeq}, '${userId.value}', '${password.value}')`);\r\n                store.system.user = {\r\n                    seq: nextSeq,\r\n                    id: userId.value,\r\n                    password: password.value,\r\n                    email: '',\r\n                };\r\n                store.cloud = {\r\n                    projects: []\r\n                };\r\n                store.system.dialog = (<ConfirmDialog.Component\r\n                    message='You have successfully created an account!'\r\n                    buttons={[\r\n                        {\r\n                            label: 'OK',\r\n                            callback: () => {\r\n                                store.system.dialog = (<AccountFrame />);\r\n                                setStore({...store});\r\n                            }\r\n                        }\r\n                    ]}\r\n                />);\r\n                setStore({...store});\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0 && passwordConfirm.errors.length === 0;\r\n    }\r\n    const isAuthOK = () => {\r\n        return authInput.errors.length === 0 && authCollation === authInput.value;\r\n    }\r\n\r\n    return (<>\r\n\r\n        <_Frame isVisible={!isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass (Confirm).'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            },\r\n                            {\r\n                                checker: (value) => !userIdList.includes(value),\r\n                                errorType: \"relation\"\r\n                            },\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === passwordConfirm.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[passwordConfirm]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password*'}\r\n                        isPassword\r\n                        checkable={passwordConfirm}\r\n                        setCheckable={setPasswordConfirm}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === password.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[password]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Enter', isEnable: isLoginInfoOK(), callback: () => {\r\n                                    setRegist(true);\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Proof not a robot\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, input the same 6 number as the picture.'}\r\n                    />\r\n                    <_AuthText src={authPicture} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Change', callback: () => {\r\n                                    setAuthCollation(createAuthText());\r\n                                    setAuthInput({ value: '', errors: [] });\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                    {/* 照合する文字列 */}\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'6 numbers'}\r\n                        checkable={authInput}\r\n                        setCheckable={setAuthInput}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Regist', isEnable: isAuthOK(), callback: registAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setRegist(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginCreateAccount;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n\r\nconst _AuthText = styled.img<{\r\n}>`\r\n    display: block;\r\n    text-align: center;\r\n    margin: 4px auto;\r\n    background-color: #f7f0f0;\r\n    border: 1px solid #888888;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginLogin = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isForget, setForget] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        // alert(`Confirmation passwords don't match.`);\r\n        (async () => {\r\n            const results = await DataUtil.findUserInfoLogin(userId.value, password.value);\r\n            console.log(JSON.stringify(results));\r\n            if (results.length > 0) {\r\n                store.system.user = {\r\n                    seq: results[0].seq,\r\n                    id: results[0].id,\r\n                    password: results[0].password,\r\n                    email: results[0].email,\r\n                };\r\n                const resPrjList = await findUserProjectList(results[0].seq);\r\n                console.log(JSON.stringify(resPrjList));\r\n                store.cloud = {\r\n                    projects: resPrjList.map(res => ({\r\n                        source: res.source,\r\n                        name: res.name,\r\n                        seq: res.seq,\r\n                        lastmod: res.lastmod\r\n                    }))\r\n                };\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                    message=\"Login successful!\"\r\n                />;\r\n                setStore({ ...store });\r\n            } else {\r\n                setMessageList(['Incorrect user id or password.']);\r\n                // setPassword({ ...password, value: '' });\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0;\r\n    }\r\n\r\n    return (<>\r\n        <_Frame isVisible={!isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Enter', isEnable: isLoginInfoOK(), callback: enterAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Forgot your login information?\"\r\n                clickAction={() => {\r\n                    setForget(true);\r\n                }}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Email\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Submit login information to account address.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'email'}\r\n                        checkable={email}\r\n                        setCheckable={setEmail}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => {\r\n                                    return value.length === 0 || value.split('@').length === 2;\r\n                                },\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={500}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Send', isEnable: email.errors.length === 0, callback: () => {\r\n                                    DataUtil.findUserInfoFromEmail(email.value).then((list) => {\r\n                                        if (list.length > 0) {\r\n                                            const info = list[0];\r\n                                            const hash = DataUtil.getHashedFromUserSeq(info.seq);\r\n                                            const url = `https://demo-app.licresia.com/#/user?v=${hash}`;\r\n                                            DataUtil.sendQueryRequestToMailAPI({\r\n                                                from: 'info@licresia.com',\r\n                                                to: email.value,\r\n                                                subject: '【LiCreSia】support',\r\n                                                text: `Your login information is as follows.\\n\\nURL: ${url}\\nUSR ID: ${info.id}`\r\n                                            });\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"Your login information has been sent!\" />);\r\n                                        } else {\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"This email address is not registered.\" />);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setForget(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginLogin;\r\n\r\n\r\nexport const findUserProjectList = async (userSeq: number) => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT owner, seq, name, source, lastmod FROM prjcttbl WHERE owner = ${userSeq} order by seq`);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LoginCreateAccount from \"./loginCreateAccount\";\r\nimport LoginLogin from \"./loginLogin\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 500;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_LogoDiv>\r\n                <img src={logo} />\r\n            </_LogoDiv>\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {!isCreate ? <LoginLogin /> : <LoginCreateAccount />}\r\n            {/* <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        { name: 'Close', callback: closeAction },\r\n                        { name: 'Enter', callback: enterAction },\r\n                    ]}\r\n                />\r\n            </_Footer> */}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #bf808075;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n    background-color: #bf8080a2;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #c7a73e;\r\n        `}\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport LoginFrame from \"../dialog/login/loginFrame\";\r\nimport AccountFrame from \"../dialog/accountFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const user = store.system.user;\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (user != null) {\r\n            setUserId('@' + user.id);\r\n        }\r\n    }, [user]);\r\n\r\n    const authButtonJsx = user == null ? (\r\n        <_LoginButton onClick={() => {\r\n            store.system.dialog = <LoginFrame />;\r\n            setStore({ ...store });\r\n            console.log(window.location.origin);\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Login / Sign up\r\n        </_LoginButton>\r\n    ) : (<>\r\n        <_UserName\r\n            isEntry={user != null}\r\n            onClick={() => {\r\n                store.system.dialog = <AccountFrame />;\r\n                setStore({ ...store });\r\n            }}\r\n        >{userId}</_UserName>\r\n        <_LoginButton onClick={() => {\r\n            store.system.user = null;\r\n            store.cloud = null;\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message={'Logout.\\nSee you next time!'}\r\n            />;\r\n            setStore({ ...store });\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Logout\r\n        </_LoginButton>\r\n    </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Logo src={logo} />\r\n            <_Menu>\r\n                {authButtonJsx}\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    font-style: italic;\r\n    text-shadow: 1px 2px 3px #dbdbdb6a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #9fc2d1;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #ececec;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #9afff292;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #ff393983;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 180px;\r\n    height: 100%;\r\n    padding: 3px 0;\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { Redirect } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst DirectLogin = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        const seq = DataUtil.getDecryptionedUserSeq(props.hashKey);\r\n        console.log(seq);\r\n        DataUtil.findUserInfoFromSeq(seq).then(resList => {\r\n            console.log(resList);\r\n            if (resList.length > 0) {\r\n                const loginProps = resList[0];\r\n                // store.userEnv.login = loginProps;\r\n                // dispatcher.system.setUserEnv(store.userEnv);\r\n            }\r\n        });\r\n    }, []);\r\n    // if (store.userEnv.login == null) {\r\n    //     return <></>;\r\n    // } else {\r\n    //     return <Redirect to=\"/\" />;\r\n    //     // return <MainFrame />;\r\n    // }\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nexport default DirectLogin;","import { createContext, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MobileRoot from '../mobile/mobileRoot';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\nimport DirectView from './directView';\r\nimport DirectLogin from './directLogin';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    setStore: React.Dispatch<React.SetStateAction<Store>>;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    // const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const [store, setStore] = useState(initialStore);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    const splashJsx = !store.system.isSplash ? <></> : (\r\n        <Splash\r\n            remove={() => {\r\n                setStore({\r\n                    ...store, system: {\r\n                        ...store.system, isSplash: false\r\n                    }\r\n                });\r\n            }}\r\n        />\r\n    );\r\n    return (\r\n        <GlobalContext.Provider value={{ store, setStore }}>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    {splashJsx}\r\n                    <_Wrap>\r\n                        <GloballDialog />\r\n                        <TotalHeader />\r\n                        <_MainDiv>\r\n                            <MainFrame />\r\n                        </_MainDiv>\r\n                    </_Wrap>\r\n                </Route>\r\n                <Route path=\"/test\" exact >\r\n                    <_Wrap>\r\n                    </_Wrap>\r\n                </Route>\r\n                <Route path=\"/preview\" exact >\r\n                    <MobileRoot hashKey={str} />\r\n                </Route>\r\n                <Route path=\"/user\" exact >\r\n                    <DirectLogin hashKey={str} />\r\n                </Route>\r\n            </Switch>\r\n        </GlobalContext.Provider>\r\n    );\r\n\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #364887;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import zlib from \"zlib\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport { sha256 } from 'js-sha256';\r\nimport Hashids from 'hashids';\r\nimport { Store } from \"../redux/store/store\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport ConfirmDialog from \"../contents/dialog/confirmDialog\";\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5001';\r\n    // export const DB_SERVER_DOMAIN = 'https://hkdev-db.glitch.me';\r\n    export const DB_SERVER_DOMAIN = 'https://crud-server001.glitch.me';\r\n\r\n    export const APP_SERVER_DOMAIN = 'http://localhost:4333';\r\n    // export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/pa_app/v1.3.x';\r\n    // export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    const DATABASE_NAME = 'pa';\r\n    // const DATABASE_NAME = 'pf_v1.4.x';\r\n\r\n    const getUserHashBuilder = () => {\r\n        return new Hashids('pa-user', 8);\r\n    }\r\n\r\n    export const getHashedFromUserSeq = (seq: number) => {\r\n        const hashids = getUserHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\r\n        const hashids = getUserHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    const getScoreHashBuilder = () => {\r\n        return new Hashids('pf', 8);\r\n    }\r\n\r\n    export const getHashedFromScoreSeq = (seq: number) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedScoreSeq = (hashedSeq: string) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    export const getPreviewURL = (scoreSeq: number) => {\r\n        const hashedKey = getHashedFromScoreSeq(scoreSeq);\r\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql, databaseName: DATABASE_NAME })\r\n        }\r\n    }\r\n\r\n    export type SendMailParam = {\r\n        from: string,\r\n        to: string,\r\n        subject: string,\r\n        text: string\r\n    }\r\n\r\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(json)\r\n        }\r\n    }\r\n\r\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/mail',\r\n            createSendMailRequestInit(json)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserInfoList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\r\n        const results = await response.json();\r\n        return results as { id: string, email: string }[];\r\n    };\r\n\r\n    export const findUserIdList = async () => {\r\n        const results = await findUserInfoList();\r\n        return (results as { id: string }[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfoFromEmail = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserInfoFromSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoLogin = async (id: string, password: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const getNextUserSeq = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\r\n        const results = await response.json();\r\n        const nextSeq = (results[0]['seq'] as number) + 1;\r\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\r\n\r\n        return nextSeq;\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findScore = async (scoreSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT (select id from user_tbl where seq = score.user_seq) as owner, dispnam, data FROM scoretbl score WHERE seq = ${scoreSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n\r\n    export const loadFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            store.fileHandle =fileHandle;\r\n            const text = DataUtil.unZip(fileContents);\r\n            console.log(text);\r\n            store.logicData = JSON.parse(text);\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Successfully file loaded!\" />;\r\n            setStore({ ...store });\r\n        })();\r\n    }\r\n\r\n    export const saveFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.logicData as LogicUtil.WrapElement;\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        const plainData = JSON.stringify(rootData);\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const getSHA256Hash = (original: string) => {\r\n        return sha256(original);\r\n    }\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n}\r\n\r\nexport default DataUtil;"],"sourceRoot":""}