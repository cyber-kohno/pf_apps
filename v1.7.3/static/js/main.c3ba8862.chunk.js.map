{"version":3,"sources":["system/base/design/styles.tsx","App.tsx","reportWebVitals.ts","index.tsx","system/contents/dialog/confirmDialog.tsx","system/redux/store/store.tsx","system/contents/entry/directLogin.tsx","system/base/components/tab/tabbedPane.tsx","system/utils/systemConst.tsx","system/utils/canvasUtil.tsx","system/contents/graphic/particle.tsx","system/contents/graphic/drawUtil.tsx","system/contents/graphic/vectorUtil.tsx","system/contents/create/factory/util/paramUtil.tsx","system/contents/create/preview/modulateBuilder.tsx","system/contents/create/preview/previewUtil.tsx","system/utils/form/validateUtil.tsx","system/utils/treeUtil.tsx","system/contents/create/factory/detail/common/modifyOperations.tsx","system/contents/create/factory/logicMainteTab.tsx","system/contents/create/factory/detail/logic/editorArgumentMng.tsx","system/contents/create/factory/dialog/sendTemplateDialog.tsx","system/contents/create/factory/detail/logic/editorArgumentItem.tsx","system/contents/create/factory/detail/seed/editorSeedMng.tsx","system/contents/create/factory/detail/logic/editorLogicMng.tsx","system/contents/create/factory/detail/logic/editorLogicItem.tsx","system/contents/create/factory/detail/logic/editorParamItem.tsx","system/contents/create/factory/detail/logic/editorBehiviorMng.tsx","system/contents/create/factory/detail/logic/editorVisualMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnMng.tsx","system/contents/create/factory/detail/logic/editorInheritConnector.tsx","system/contents/create/factory/util/logicFormUtil.tsx","system/contents/create/factory/detail/logic/editorSendManager.tsx","system/contents/create/factory/detail/logic/editorFieldMng.tsx","system/contents/create/factory/detail/logic/editorExtendMng.tsx","system/contents/create/factory/detail/seed/editorSeedItem.tsx","system/contents/create/factory/detail/seed/editorThumbnailMng.tsx","system/contents/create/factory/detail/seed/editorThumbnailItem.tsx","system/contents/create/factory/util/logicUtil.tsx","system/contents/create/factory/detail/seed/editorSampleItem.tsx","system/contents/create/factory/detail/seed/editorSampleMng.tsx","system/contents/create/factory/detail/seed/editorInterfaceManager.tsx","system/contents/create/factory/detail/seed/editorSeedArgMng.tsx","system/contents/create/factory/detail/seed/editorSeedArgItem.tsx","system/contents/create/factory/detail/seed/editorSeedSendMng.tsx","system/contents/create/factory/detail/seed/editorFormgrpItem.tsx","system/contents/create/factory/detail/seed/editorFormgrpMng.tsx","system/contents/create/factory/util/logicElementUtil.tsx","system/contents/create/preview/previewLauncherFrame.tsx","system/contents/create/preview/inputForm/previewLogicInputForm.tsx","system/contents/create/preview/inputForm/previewSeedInputForm.tsx","system/contents/create/preview/buildUtil.tsx","system/contents/create/preview/previewLogicFrame.tsx","system/contents/create/manage/nameDefDialog.tsx","system/sp/directLinkManager.tsx","system/sp/mobileRoot.tsx","system/contents/dialog/globalDialog.tsx","system/contents/dialog/accountFrame.tsx","system/contents/dialog/login/loginCreateAccount.tsx","system/contents/dialog/login/loginLogin.tsx","system/contents/dialog/login/loginFrame.tsx","system/contents/entry/totalHeader.tsx","system/base/components/tab/channelPane.tsx","system/contents/create/launcher/tab/storyFuseAnalysis.tsx","system/contents/create/launcher/tab/storyProperty.tsx","system/contents/create/launcher/tab/storyEnvironment.tsx","system/contents/create/launcher/timelineFrame.tsx","system/contents/create/launcher/storyTab.tsx","system/contents/create/manage/newProjectDialog.tsx","system/contents/create/manage/newProjectDialogStoryOnly.tsx","system/sp/spUtil.tsx","system/contents/create/manage/manageTab.tsx","system/contents/create/createChannel.tsx","system/contents/home/publishFrame.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/modeSelectDialog.tsx","system/contents/entry/splash.tsx","system/contents/entry/pCRoot.tsx","system/sp/contents/sPHomeChannel.tsx","system/sp/contents/etc/shareDialog.tsx","system/sp/contents/sPManageFrame.tsx","system/sp/contents/edit/fuseMainteDialog.tsx","system/sp/contents/edit/fuseList.tsx","system/sp/contents/edit/frameLine.tsx","system/sp/contents/edit/sPEditStoryFrame.tsx","system/sp/contents/sPCreateChannel.tsx","system/sp/sPRoot.tsx","system/redux/dispatcher/dispatcher.tsx","system/contents/entry/systemEntry.tsx","system/utils/form/formUtiil.tsx","system/utils/dataUtil.tsx"],"names":["Styles","_Styles","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","FONT_LARGE","css","_templateObject7","_taggedTemplateLiteral","CSS_LABEL_SMALL","_templateObject8","CSS_LABEL_MIDIUM","_templateObject9","CSS_BUTTON_DISABLE","_templateObject10","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","App","useEffect","document","oncontextmenu","onkeydown","e","ctrlKey","includes","key","_jsx","SystemEntry","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","children","getElementById","ConfirmDialog","Component","props","_props$width","_props$height","_props$buttons","_useContext","useContext","GlobalContext","store","setStore","width","height","buttons","label","callback","system","dialog","_objectSpread","_jsxs","_Frame","_Main","_Inner","message","split","map","msg","i","FormUtil","Message","isCenter","ButtonRecord","align","ProjectTypes","initialStore","isSplash","user","isModeSelect","canDialogClose","isSPMode","logoutActions","env","isEditLibrary","isUseLocalFile","libraryData","storyData","fuseCacheList","cloud","fileHandle","DirectLogin","seq","DataUtil","getDecryptionedUserSeq","hashKey","console","log","findUserInfoFromSeq","resList","length","Redirect","to","TabbedPane","_props$tabRecordNum","_useState","useState","activeNo","_useState2","_slicedToArray","setActiveNo","tabRecordNum","_Fragment","_LabelList","tabElements","tab","index","TabLabel","name","isActive","isEnable","enable","selectTab","undefined","selectTabIndex","_ContList","TabContents","cont","_TabLabel","onClick","_Contents","SystemConst","AUTH_TEXT_WIDTH","_SystemConst","AUTH_TEXT_HEIGHT","CanvasUtil","_CanvasUtil","createURL","draw","canvas","createElement","ctx","getContext","toDataURL","getLogoURL","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillStyle","fillText","adjust","measureText","save","getAuthTextURL","text","WIDTH","SIZE","rotate","Math","PI","char","charAt","fontRand","random","alphaRand","concat","Instance","_createClass","_this","_classCallCheck","owner","pos","prevPos","vec","frame","limit","isLive","drawer","extend","update","x","xy","y","forEach","this","_Particle","Particle","_DrawUtil","createGradDrawer","param","_param$radius","radiusBase","radius","self","_convertRgbaFromColor","flashAppearFrame","appearFrame","unitFrame","flashHideFrame","shrinkStartRate","start","floor","g","createRadialGradient","grads","rgba","convertRgbaFromColorCode","color","r","b","a","push","offset","convertColorCodeFromRgba","grad","addColorStop","globalAlpha","disappearStartRate","beginPath","arc","fill","code","value","Number","parseInt","substring","r1","g1","b1","a1","toString","slice","toWhite","rate","DrawUtil","Vector","rad","len","syncFromXY","sqrt","atan2","syncFromRad","cos","sin","_VectorUtil","VectorUtil","VisualParamType","_ParamUtil","VisualParams","Object","values","BehaviorParamType","BehaviorParams","SelfParamType","SelfParams","ExtendParamType","ExtendParams","EffectParamType","EffectParams","ModulateParamType","ModulateParams","ConstantType","Constants","ParamUtil","ModulateBuilder","build","extendList","decayRate","decayLimit","gravity","gravityLimit","PreviewUtil","_PreviewUtil","SCREEN_WIDTH","SCREEN_HEIGHT","searchElement","buildLogicProps","origin","rootData","sends","createParticleRec","cur","_searchElement","_searchElement2","valueMapList","ConstantValueMap","fieldMng","mngs","data","fields","field","paramItem","convertFormulaToValue","visualParams","params","behaviorParams","getVisualParam","convertParamsToValue","getBehaviorParam","LIMIT","POS_X","POS_Y","find","VEC_X","VEC_Y","VEC_RAD","VEC_LEN","connectMng","inherits","connect","_connector$disable","_searchElement3","connector","disable","logicItem","method","wrap","logicMng","defs","def","searchDependLogic","depend","_convertParamsToBoole","addValueMap","item","FRAME","itrfldValueMap","loopCnt","extendParams","loopCntVal","LOOP_COUNT","convertParamsToBoolean","INVOKE","_loop","_searchElement4","iterateValueMap","LOOP_ITERATE","sendValueMapList","_convertParamsToValue","DECAY_LIMIT","DECAY_RATE","GRAVITY_VAL","GRAVITY_LIMIT","RADIUS","colorR","COLOR_R","colorG","COLOR_G","colorB","COLOR_B","colorA","COLOR_A","disappearStart","DISAPPEAR_START","shrinkStart","SHRINK_START","FLASH_APPEAR_FRAME","FLASH_HIDE_FRAME","type","warpList","_warpList$find","formula","v","valueMap","m","formulaStr","varCnt","formulaItems","str","convertFormulaToBoolean","RADIAN_ROUND","ValidateUtil","_ValidateUtil","checkRequired","checkStringLength","min","max","checkAsciiChars","checkIncludesChars","list","ch","indexOf","checkNumber","isNaN","checkNumberRange","num","checkAll","conditions","result","TreeUtil","_TreeUtil","createNode","parent","depth","isOpen","getChildIndex","node","parentNode","Frame","_props$isDisable","_props$focusNode","isDisable","focusNode","ref","useRef","buildElementNodeFromData","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","jsxList","useMemo","buildJsxRecords","element","spaceList","isCurrent","_Record","current","scrollWidth","isRelation","tempNode","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","clickEvent","onDoubleClick","getLabelJsx","invalidate","_Wrap","ModifyOperations","_templateObject11","_templateObject12","FactoryTreeContext","createContext","LogicMainteTab","setFocusNode","_useState3","_useState4","isModify","setModify","_useState5","_useState6","setInvalidate","LogicUtil","getChildrenDataNode","masterNode","openPreviewDialog","PreviewLogicFrame","master","closeButtonAction","tabIndex","onKeyDown","n","_TreeDiv","_TreeHead","_TreeBody","getNodeDisplayJsx","_PropsDiv","_DetailDiv","_DetailHeader","_DetailHeaderLabel","getTypeName","Provider","setRootData","removeSelf","_node$parent","_node$parent2","_node$parent3","splice","parentWrap","listName","LogicElementUtil","getListParamName","_DetailMainDiv","getDetailComponent","EditorArgumentMng","isVisible","BorderPanel","title","innerJsx","newNode","addChild","_props$isInputOK","isComplete","isCompleteCheck","checkableFields","mappingForm","isInputOK","firstRegist","modifyRegist","SendTemplateDialog","EditorArgumentItem","_useContext2","logicNode","errors","setName","argType","setArgType","reservedList","_node$parent2$parent","getParamNameList","valueType","syncArgumentAdd","prevName","syncArgumentName","FormRecord","titleLabel","jsx","TextField","isReadOnly","checkable","setCheckable","validates","checker","errorType","checkFieldName","filter","Combobox","ArgTypes","labelText","isDisabled","headBlank","refers","getArgumentRefers","syncArgumentDel","getSwapButtons","argName","searchVariableReferInFormula","varItem","newName","syncFormula","mng","visualMng","behaviorMng","inhMng","inh","_LogicElementUtil$get","_LogicElementUtil$get2","inhfld","getInnerWrap","syncParamName","_logicNode$parent","runRec","logic","conn","inhLogic","getInnerWrapFixed","sendMng","seedMng","interfaceWrap","_logicNode$parent2","connWrap","syncArgumentCallback","_logicNode$parent3","inhMngNode","getInnerNodeFixed","seedNode","interfaceNode","sendNode","entry","newArgName","paramWrap","createParamWrap","delArgName","delIndex","some","EditorSeedMng","itemWrap","EditorLogicMng","EditorLogicItem","_useMemo","el","_useMemo2","isConnect","hasArgNode","hasFieldNode","hasConnectNode","existNameList","getExistNameList","toggleElement","hasNode","listPos","wrapElement","removeChild","insertChild","getDefaultLogicMngs","syncLogicName","Record","textAlign","Switch","isUse","argumentNode","getInnerNode","hasArgument","args","fieldNode","hasField","inheritNode","hasInherit","getReplicateButton","getLocgicRefers","logicName","searchLogicReferInherit","id","logicMngNode","Level","EditorParamItem","setFormulaItems","varFormList","setVarFormList","isField","isCondition","inputType","level","FIELD","INITIAL","INHERIT_FIELD","INHERIT_EXTEND","INHERIT_SEND","argumentList","fieldKeys","parentType","_getLogicNode","_node$parent4","_node$parent4$parent","_node$parent4$parent$","getLogicNode","argMng","arg","fieldName","_node$parent5","Error","_node$parent6","inhfldNode","_node$parent7","fieldKeyList","paramNameList","_node$parent8","_node$parent8$parent","addNum","delNum","parenthesisBalance","formJsxList","labelWidth","marginTop","ParamInputTypes","marginLeft","isNumber","getValueForm","isLastVar","isFormulaOK","hasFormError","varForm","getFormulaItem","syncFieldName","_Formula","isInvalid","_Var","_Sig","getFormulaJsx","getFieldRefers","mngNode","_mngNode$parent","_mngNode$parent2","_LogicElementUtil$get3","_LogicElementUtil$get4","inheritWrap","span","EditorBehiviorMng","isVector","hasDecayParam","hasGravityParam","exchangeVectorMethod","flag","trueParamElements","falseParamElements","size","exchangeElements","toggleElements","paramElements","EditorVisualMng","drawMethod","THICKNESS","hasDisappearParam","hasShrinkParam","hasFlashParam","EditorInheritConnMng","EditorInheritConnector","_disable","identify","setIdentify","setMethod","setDepend","defaultName","getNumberingOnPrefixName","isCreate","logicList","idList","initConnectorNode","syncTreeElementFromWrap","_newNode$parent","initSendParams","sendParamList","_sendNode$parent","dependItem","argWrap","getSendParamList","curParamList","isChange","ConnectTypes","isEnabled","dependency","dependLogic","inherit","newWrap","JSON","parse","stringify","getChildrenElementNode","rootNode","clone","_SendTemplateDialog","COMPONENT_WIDTH","ConnectParentPosition","xName","setXName","yName","setYName","_props$node$parent","checkItems","argNode","behaviorNode","setParamValue","prpName","targetParam","SetParentPosition","_useState7","_useState8","paramList","xParam","yParam","LogicFormUtil","EditorSendManager","isDepend","EditorFieldMng","EditorExtendMng","hasLoopParam","hasInvokeParam","EditorSeedItem","disp","setDisp","setEntry","permit","setPermit","_param$disp","logicNameList","seed","items","samples","PermitTypes","EditorThumbnailMng","LogicTreeContext","hasSample","WND_SIZE","EditorThumbnailItem","_node$parent$parent","seedWrap","setFrame","urls","setUrls","setTimeout","sample","getThumbnailURL","targetFrame","sampleNo","frameCnt","_node$parent3$parent","argMap","sendParams","send","_PreviewUtil$convertP","getSeedValueMap","par","_ret","pictureJsxList","imgJsx","_IMG","src","_SampleDiv","_SampleName","_CanvasDiv","img","buildPreviewForms","formgrpList","formList","setFormList","usedGrps","form","argument","formgrp","grp","targetForms","j","colorCode","_Message","_Type","_Range","formIndex","_Color","disabled","onChange","target","labelName","step","_Tsumami","input","EditorSampleItem","paramForms","setParamForms","argInfoList","formgrpMng","defines","seedargList","defval","EditorSampleMng","EditorInterfaceManager","argMngNode","sendMngNode","sampleMngNode","hasGroupNode","execute","removeChildAll","newArgWrap","groupMngNode","hasGroup","EditorSeedArgMng","EditorSeedArgItem","setMin","setMax","_useState9","_useState10","setStep","_useState11","_useState12","setDefval","_useState13","_useState14","isPosX","setPosX","_param$isPosX","curIndex","getCurrentIndex","getSwapButtonsCallback","isUpper","sampleMng","swapNode","sendMngWrap","_arg$defval","EditorSeedSendMng","EditorFormgrpItem","groupMethod","setGroupMethod","targetList","setTargetList","seedargs","Array","FromGrpMedhods","formName","EditorFormgrpMng","_LogicUtil","COLOR_METHOD","COLOR_MNG","COLOR_LIST","COLOR_ITEM","COLOR_FIELD","isFocus","_Category","backgroundColor","detailJsx","_Span","_Field","_EditableValue","_data2$disable","_Signature","_Detail","nameJsx","_ValueType","FactDetSeedMng","FactDetArgumentMng","FactDetBehiviorMng","wrapNode","get","elementNode","_LogicElementUtil","_len","arguments","typeList","_key","_len2","_key2","innerNode","apply","_len3","_key3","_len4","_key4","innerWrap","isHead","isTail","ownerChildren","findIndex","swapOrder","ownDataChildren","curNo","swapData","_len5","dependencyMngNodes","_key5","depNode","replicateSameLevel","cloneBase","cloneDest","namable","getNamableProps","targetElement","getIdentifyParamName","childWrap","createParamWrapList","paramDataList","createVisualParams","createBehaviorParams","findSeedWrap","getInitialData","nameList","curWrap","nameParam","mngWrap","listParam","getLogicNameList","curLogicOwner","prefix","_getLogicItem","mngType","_node$parent5$parent","_node$parent5$parent$","_node$parent5$parent$2","getLogicItem","seedId","doParticleJob","fuse","_logicMng$defs$find","getOrigin","getSendingValueMap","getSeedProperties","seedsendList","thumbnailList","_logicMng$defs$find2","PreviewLauncherFrame","PreviewLogicInputForm","logicWrap","setSendingValueMap","PreviewSeedInputForm","template","setTemplate","formgrpWrap","presetList","ButtonItem","button","selectedIndex","setTabIndex","setCur","isPlay","setPlay","sceens","previewTabJsx","_ProgressDiv","clickX","pageX","clientRect","getBoundingClientRect","left","window","pageXOffset","_ProgressVal","_CloseButton","closeAction","BuildUtil","_BuildUtil","run","_props$guaranteeFrame","minFrame","guaranteeFrame","doIterate","particle","limitFrame","limitParticle","doEnd","runPaging","beginFrame","advanceFrame","_props$guaranteeFrame2","BuildFrame","dispatcher","storyPreviewProps","setStoryPreviewProps","useFrame","curFrame","buildCache","setBuildCache","logicData","fuseList","updateStore","isStandby","_Blind","_ProgressBox","_RateVal","getJsx","setSceens","setFrameCnt","isBuild","setBuild","_useState15","_useState16","sendingValueMap","isSeed","buildTabJsx","_Msg","_FormDiv","NameDefDialog","DirectLinkManager","libData","setLibData","setStoryData","seedSeq","setSeedSeq","findProject","projectSeq","res","ownerId","lastmod","unZip","source","hasOwnProperty","scenarioProps","scenarioData","seedList","argCount","_Header","_seed$disp","seedName","_Item","_SeedName","_ArgCnt","getBlindJsx","isIconButton","icon","VscSettingsGear","_asyncToGenerator","_regeneratorRuntime","mark","_callee","conteseq","response","results","_context","prev","next","sendQueryRequestToAPI","sent","json","abrupt","stop","_x","MobileRoot","isPermit","adjLeft","adjTop","screen","setScreen","getDecryptionedProjectSeq","rect","clientWidth","clientHeight","isFitSide","navigator","userAgent","isSmartPhone","orientation","addEventListener","alert","_Error","top","match","GloballDialog","AccountFrame","userId","setUserId","oldPass","setOldPass","newPass","setNewPass","newPassConfirm","setNewPassConfirm","email","setEmail","userIdList","setUserIdList","emailList","setEmailList","_useState17","_useState18","loginProps","reloadInfo","password","findUserInfoList","info","hash","getHashedFromUserSeq","history","replaceState","userTabJsx","InputTextFormBak","isPassword","permitRegist","_Body","_Footer","passwordStr","updateUserInfo","LoginCreateAccount","isRegist","setRegist","setPassword","passwordConfirm","setPasswordConfirm","messageList","setMessageList","createAuthText","findUserIdList","authCollation","setAuthCollation","authInput","setAuthInput","authPicture","placeholder","InfoFrame","textRecords","_AuthText","nextSeq","cnt","getNextUserSeq","projects","MessageLink","clickAction","LoginLogin","isForget","setForget","resPrjList","findUserInfoLogin","findUserProjectList","findUserInfoFromEmail","url","sendQueryRequestToMailAPI","from","subject","_ref2","_callee2","userSeq","storyOnly","_context2","_x2","LoginFrame","setCreate","logo","_LogoDiv","_TypeSwitch","TotalHeader","authButtonJsx","_LoginButton","location","ImUser","_UserName","isEntry","func","_Logo","_Menu","_Language","MdOutlineLanguage","_MenuItem","TOTAL_HEADER_WIDTH","ChannelPane","_props$isLandscape","isLandscape","ChannelLabel","ChannelContents","_Icon","_Label","_templateObject13","_templateObject14","_templateObject15","_templateObject16","StoryFuseAnalysis","divide","setDivide","peak","setPeak","total","setTotal","countList","setCountList","defList","itemJsxList","rateHeight","count","_AnalisisItem","divRate","pastRate","needPoint","_AnalisisDiv","StoryProperty","setSeed","newFrame","setNewFrame","mapping","curFuse","propertiesFormJsx","activeSeed","formgrps","presets","cancelAction","modifyAction","initFormList","StoryEnvironment","setParticle","maxLimit","reduce","ITEM_WIDTH","TimelineFrame","cacheList","fusePosJsxList","newFrameRate","newFrameValue","focus","sus","cache","_Line","_Sustain","memoriJsxList","DIV_CNT","_Memori","_MeasureDiv","clientX","setNewFrameValue","MEASURE_WIDTH","StoryTab","isFuseEdit","setFuseEdit","isEnvEdit","setEnvEdit","tabActiveIndex","setTabActiveIndex","setFocus","setFuseList","groupMng","scenarioCacheList","newCache","thumbList","updateCache","createSeq","fuseJsxList","thumbJsx","thumb","_ItemDiv","_ItemFrame","_PropRecord","_FrameRecord","_SeedRecord","_ThumbFrame","val","_Title","seedProps","_ListDiv","_ListHead","cloneFuse","newSeq","_ListBody","_Timeline","_ListMain","_RightDiv","_RightInner","sort","LIST_HEAD","_templateObject17","_templateObject18","_templateObject19","_templateObject20","_templateObject21","_templateObject22","_templateObject23","_templateObject24","_store$cloud","targetSeq","p","existNames","assert","findProjectMaxSeq","maxSeq","_store$system$user","newProject","insertProject","registCreate","targetItem","updateProjectName","registUpdate","marginBottom","NewProjectDialog","req","_ref3","_callee3","_context3","_x3","_x4","setType","selectedLib","setSelectedLib","localLib","setLocalLib","cloudLibs","setCloudLibs","getStoryLib","storyLib","lib","usingHash","getSHA256Hash","findAllReleaseProjectList","_callee4","_yield$window$showOpe","_yield$window$showOpe2","file","fileContents","_context4","showOpenFilePicker","getFile","fileName","FixedText","isRecordItem","NewProjectDialogStoryOnly","selectedType","setSelectedType","MdCancelPresentation","AiOutlineEnter","extendAction","SPUtil","_SPUtil","ManageTab","fcsListIdx","setFcsListIdx","listItemJsx","project","_ListItem","getHashedFromProjectSeq","onContextMenu","getDirectUrl","_Status","_Name","getProjectType","hasData","incrRec","root","developCnt","privateCnt","releaseCnt","fuseCnt","elementSize","logicCnt","getData","uploadCloud","gZip","overwriteCloudFile","curPrj","updateProjectSource","saveLocalFile","saveLibraryFile","saveScenarioFile","cloudJsx","_ContDiv","scenarioFileProps","deleteProject","localJsx","loadFile","_HeaderDiv","_BodyDiv","_LeftDiv","_RighttDiv","getNewSaveButton","getOverwriteButton","CreateChannel","projectType","SCORE_TAB_MARGIN","PublishFrame","libList","setLibList","setLibCnt","libListJsx","dispCnt","_Owner","_CName","plainData","showSaveFilePicker","types","accept","handle","writable","createWritable","write","close","catch","_CDate","_DetailMain","_SeedItemFrame","_SeedItemInner","_SeedArgCnt","_DetailOpen","_CSummary","_ListFrame","ReleaseNote","setJsx","fetch","record","note","version","date","HOME_USER_DIV_HEIGHT","HomeChannel","userCount","setUserCount","artsCnt","setArtsCnt","countUsers","_Left","_MessageRecord","_Right","MainFrame","AiFillHome","VscGitPullRequestCreate","MAIN_FRAME_MARGIN","ModeSelectDialog","_ModeDiv","_SubTitle","_MainTitle","_DetailMsg","Splash","isSwitch","setSwitch","timerId","setTimerId","remove","clearTimeout","_NowLoading","_Copylight","fadeIn","keyframes","PCRoot","splashJsx","_MainDiv","ShareDialog","SPHomeChannel","getURL","APP_SERVER_DOMAIN","setText","_TextAreaDiv","TextArea","_UrlDiv","readOnly","InstapaperShareButton","_SnsIconFrame","AiOutlineInstagram","TwitterShareButton","AiOutlineTwitter","MailruShareButton","AiOutlineMail","FacebookShareButton","AiOutlineFacebook","LineShareButton","about","BsLine","textarea","SPManageFrame","_Share","BsFillShareFill","MdClear","IoCreateOutline","setEdit","FiUpload","FaRegSave","FiDownload","MdOutlineDriveFileRenameOutline","RiDeleteBinLine","FuseMainteDialog","preset","setPreset","fuseSeq","story","COL_WIDTH_LIST","OPTION_BUTTON_WIDTH","FuseList","recordJsxList","_Img","_RecordWrap","_RecordCont","_ColWrap","_TextItem","_ImageItem","_Option","FiEdit","ImCopy","focusSeq","cloneCache","GrView","openPreviewSoloDialog","_HeaderItem","_BodyScrollDiv","isEditable","FrameLine","startY","setStartY","startX","setStartX","frameRateJsxList","posXIndex","range","_FrameRate","isCurr","putAction","moveAction","prevFocusSeq","nowFocusSeq","releaseAction","_FrameLineDiv","isEdit","onMouseDown","clientY","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","touches","pageY","onTouchMove","onTouchEnd","onTouchCancel","_FrameListDiv","SPEditStoryFrame","isPreview","setPreview","setSeedId","interval","setInterval","VscPreview","IoSave","_SeedDiv","AiOutlineAppstoreAdd","newFuseProps","_FuseListFrame","SPCreateChannel","SwitchTwoFace","label1","label2","rate1","rate2","SPRoot","_SplashDiv","cw","_ChannelWrap","Dispatcher","openPreviewAllDialog","RouterManage","HashRouter","basename","process","URLSearchParams","useLocation","search","Route","path","exact","_FormUtil","checkables","_props$isPassword","_props$validates","_props$dependency","_props$isEnable","_props$isCenter","_props$marginTop","_props$marginBottom","_props$isCenter2","validaters","dep","getErrors","validater","_ItemnLabel","_ItemnInputBak","hasTitle","_props$isEnable2","_props$textAlign","_props$marginTop2","_props$marginBottom2","_props$labelWidth","_props$isEnabled","_props$isVisible","_props$textAlign2","_props$marginTop3","_props$marginBottom3","lablelWidth","DEFAULT_LABEL_WIDTH","_FixedLabel","_props$isPassword2","_props$isNumber","_props$validates2","_props$dependency2","_props$step","_props$isEnabled2","setNaN","_ItemnInput","valueAsNumber","onBlur","_props$validates3","_props$dependency3","_props$headBlank","_props$isEnabled3","_props$width2","unshift","_ItemCombobox","_item$isDisabled","_item$isDisabled2","_props$validates4","_props$dependency4","_ItemnTextArea","_props$align","_props$marginTop4","_props$marginBottom4","_button$isEnable","_button$isEnable2","_Button","_IconButton","_button$isEnable3","_button$isEnable4","_props$isCenter3","_props$marginTop5","_props$marginBottom5","_props$isCenter4","_props$isCenter5","_props$marginTop6","_props$marginBottom6","_props$isCenter6","isLink","_props$isEnable3","_props$backgroundColo","_BorderText","_BorderPanel","_props$height2","_InfoDiv","_props$isRelation","_props$isEnable4","_Switch","_props$isEnable5","_props$isEditable","_SwitchTwoFace","_SwitchItem","isLeft","_props$marginLeft","select","_props$marginLeft2","option","_templateObject25","_templateObject26","_templateObject28","_templateObject27","_templateObject29","_templateObject30","_templateObject31","_templateObject33","_templateObject32","_templateObject34","_templateObject35","_templateObject36","_templateObject38","_templateObject37","_templateObject40","_templateObject39","_templateObject41","_templateObject42","_templateObject43","_templateObject44","_templateObject45","_templateObject46","_templateObject47","_templateObject48","_templateObject49","_templateObject50","_templateObject51","_templateObject52","_templateObject53","_templateObject54","_templateObject55","_DataUtil","DB_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","encode","Base64","hashedSeq","hashids","decode","getPreviewURL","scoreSeq","hashedKey","mode","headers","Accept","body","createSendMailRequestInit","queryType","sql","databaseName","createQueryRequestInit","saveFile","_ref4","_ref5","_callee5","_context5","_callee6","_context6","findUserScoreList","_ref7","_callee7","_context7","_x5","findScore","_ref8","_callee8","_context8","_x6","_callee9","_context9","saveFileBak","_callee10","_context10","_callee11","_context11","extension","options","_callee12","_context12","_callee13","_context13","original","sha256","content","encodeURIComponent","zlib","gzipSync","buffer","Buffer","unzipSync","decodeURIComponent","getStringFromDate","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace"],"mappings":"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","file":"static/js/main.c3ba8862.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 18px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 22px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import React, { useEffect } from 'react';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nconst App = () => {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport { useContext } from \"react\";\r\n\r\nnamespace ConfirmDialog {\r\n\r\n    export const Component = (props: {\r\n        message: string;\r\n        width?: number;\r\n        height?: number;\r\n        buttons?: FormUtil.ButtonProps[];\r\n    }) => {\r\n\r\n        const {store,  setStore } = useContext(GlobalContext);\r\n\r\n        const width = props.width ?? 600;\r\n        const height = props.height ?? 150;\r\n        const buttons = props.buttons ?? [\r\n            {\r\n                label: 'OK',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({...store});\r\n                }\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main><_Inner>\r\n                    {props.message.split('\\n').map((msg, i) => {\r\n                        return <FormUtil.Message\r\n                            key={i}\r\n                            message={msg}\r\n                            isCenter\r\n                        />\r\n                    })}\r\n                </_Inner></_Main>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons} />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 110px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* background-color: #bb6868e1; */\r\n`;","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport StoreCloud from \"./storeCloud\";\r\nimport StoreSystem from \"./storeSystem\";\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    system: StoreSystem.Param;\r\n    env: StoreSystem.Env;\r\n    libraryData: LogicUtil.WrapElement | null;\r\n    storyData: StoryUtil.StoryData | null;\r\n    fuseCacheList: StoryUtil.Cache[];\r\n    cloud: StoreCloud.Props | null;\r\n    fileHandle: FileSystemFileHandle | null;\r\n}\r\n\r\n\r\nexport const ProjectTypes = ['library', 'story'] as const;\r\nexport type ProjectType = typeof ProjectTypes[number];\r\n\r\nexport const initialStore: Store = {\r\n    system: {\r\n        isSplash: true,\r\n        user: null,\r\n        dialog: null,\r\n        isModeSelect: false,\r\n        canDialogClose: false,\r\n        isSPMode: false,\r\n        logoutActions: []\r\n    },\r\n    env: {\r\n        isEditLibrary: true,\r\n        isUseLocalFile: true\r\n    },\r\n    libraryData: null,\r\n    storyData: null,\r\n    fuseCacheList: [],\r\n    cloud: null,\r\n    fileHandle: null,\r\n}","import { Redirect } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst DirectLogin = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        const seq = DataUtil.getDecryptionedUserSeq(props.hashKey);\r\n        console.log(seq);\r\n        DataUtil.findUserInfoFromSeq(seq).then(resList => {\r\n            console.log(resList);\r\n            if (resList.length > 0) {\r\n                const loginProps = resList[0];\r\n                // store.userEnv.login = loginProps;\r\n                // dispatcher.system.setUserEnv(store.userEnv);\r\n            }\r\n        });\r\n    }, []);\r\n    // if (store.userEnv.login == null) {\r\n    //     return <></>;\r\n    // } else {\r\n    //     return <Redirect to=\"/\" />;\r\n    //     // return <MainFrame />;\r\n    // }\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nexport default DirectLogin;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: (index: number)=>void;\r\n    tabRecordNum?: number;\r\n}\r\n\r\nexport type TabElements = {\r\n    name: string;\r\n    enable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabRecordNum = props.tabRecordNum ?? 1;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList tabRecordNum={tabRecordNum}>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isEnable={tab.enable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList tabRecordNum={tabRecordNum}>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={!tab.enable ? <></> : tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isEnable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: inline-block;\r\n    height: ${props => 35 * props.tabRecordNum}px;\r\n    text-align: left;\r\n    /* background-color: #ac3b3b; */\r\n    width: 100%;\r\n`;\r\nconst _ContList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\r\n    border-radius: 0 6px 6px 6px;\r\n    /* box-shadow: 0 2px 0 0 #000b3a48; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    \r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                margin-top: 5px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${props.isEnable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","\r\nnamespace SystemConst {\r\n    export const AUTH_TEXT_WIDTH = 350;\r\n    export const AUTH_TEXT_HEIGHT = 70;\r\n}\r\n\r\nexport default SystemConst;\r\n\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n\r\n// ホームチャンネル\r\nexport const HOME_USER_DIV_HEIGHT = 400;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import SystemConst from \"./systemConst\";\r\n\r\nnamespace CanvasUtil {\r\n\r\n    /**\r\n     * Canvasに任意の描画をし、画像のURLを取得する\r\n     * @param width 幅\r\n     * @param height 高さ\r\n     * @param draw 描画\r\n     * @returns 画像のURL\r\n     */\r\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        draw(ctx);\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    export const getLogoURL = () => {\r\n        return CanvasUtil.createURL(360, 80, (ctx) => {\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.fillRect(0, 0, 350, 80);\r\n\r\n            ctx.shadowColor = \"#555\";\r\n            ctx.shadowOffsetX = 2;\r\n            ctx.shadowOffsetY = 1;\r\n            ctx.shadowBlur = 5;\r\n            ctx.font = 'italic 50pt Arial';\r\n            ctx.fillStyle = '#c6dce2';\r\n            ctx.fillText('Pixel ', 14, 64);\r\n            const adjust = ctx.measureText('Pixel ').width;\r\n            ctx.fillStyle = '#768fc4';\r\n            ctx.fillText('Flare', 14 + adjust, 64);\r\n            ctx.save();\r\n        });\r\n    }\r\n\r\n    export const getAuthTextURL = (text: string) => {\r\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\r\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\r\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\r\n            ctx.rotate(1 * Math.PI / 180);\r\n            for (let i = 0; i < text.length; i++) {\r\n                const char = text.charAt(i);\r\n\r\n                const fontRand = Math.random() * 60;\r\n                const alphaRand = Math.random() * 60;\r\n                ctx.font = `${20 + fontRand}pt Arial`;\r\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\r\n                ctx.fillText(char, i * SIZE, 60);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CanvasUtil;","import VectorUtil from \"./vectorUtil\";\r\n\r\nnamespace Particle {\r\n\r\n    export type Props = {\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        limit: number;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n    }\r\n\r\n    export class Instance {\r\n\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        prevPos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        frame: number;\r\n        limit: number;\r\n        isLive: boolean;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n\r\n        constructor(props: Props) {\r\n            this.owner = props.owner;\r\n            this.pos = props.pos;\r\n            this.prevPos = props.pos;\r\n            this.vec = props.vec;\r\n\r\n            this.frame = 0;\r\n            this.limit = props.limit;\r\n            this.isLive = true;\r\n            this.drawer = props.drawer;\r\n            this.extend = props.extend;\r\n        }\r\n\r\n        update = () => {\r\n\r\n            this.pos.x += this.vec.xy.x;\r\n            this.pos.y += this.vec.xy.y;\r\n\r\n            this.extend.forEach(callback => callback(this));\r\n\r\n            if (this.frame === this.limit) {\r\n                this.isLive = false;\r\n            }\r\n            this.frame++;\r\n        }\r\n\r\n        draw = (ctx: CanvasRenderingContext2D) => {\r\n            this.drawer(this, ctx);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Particle;","import Particle from \"./particle\";\r\n\r\nnamespace DrawUtil {\r\n\r\n    export type Rgba = {\r\n        r: number;\r\n        g: number;\r\n        b: number;\r\n        a: number;\r\n    }\r\n\r\n    export type ColorStop = {\r\n        offset: number;\r\n        color: string;\r\n    }\r\n\r\n    export type DrawerParam = {\r\n        color: string;\r\n        radius?: number;\r\n        disappearStartRate?: number;\r\n        shrinkStartRate?: number;\r\n        flashAppearFrame?: number;\r\n        flashHideFrame?: number;\r\n    }\r\n\r\n    export const createGradDrawer = (param: DrawerParam) => {\r\n\r\n        /** 基準となる半径 */\r\n        const radiusBase = param.radius ?? 30;\r\n        return (self: Particle.Instance, ctx: CanvasRenderingContext2D) => {\r\n            if (param.flashAppearFrame != undefined) {\r\n                const appearFrame = param.flashAppearFrame;\r\n                const hideFrame = (param.flashHideFrame as number);\r\n                const unitFrame = appearFrame + hideFrame;\r\n                if ((self.frame % unitFrame) >= appearFrame) return;\r\n            }\r\n\r\n            let radius = radiusBase;\r\n            if (param.shrinkStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.shrinkStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    const rate = (limit - frame) / limit;\r\n                    radius *= rate;\r\n                }\r\n            }\r\n\r\n            const x = self.pos.x;\r\n            const y = self.pos.y;\r\n            const g = ctx.createRadialGradient(x, y, 1, x, y, radius);\r\n\r\n            const grads: ColorStop[] = [];\r\n            const rgba = convertRgbaFromColorCode(param.color) ?? { r: 255, g: 255, b: 255, a: 255 };\r\n            grads.push({ offset: 0, color: convertColorCodeFromRgba({ r: 255, g: 255, b: 255, a: Math.floor(rgba.a * 0.9) }) });\r\n            grads.push({ offset: 0.2, color: convertColorCodeFromRgba({ ...rgba, a: Math.floor(rgba.a * 0.15) }) });\r\n            grads.push({ offset: 1, color: convertColorCodeFromRgba({ ...rgba, a: 1 }) });\r\n\r\n            grads.forEach(grad => {\r\n                g.addColorStop(grad.offset, grad.color);\r\n            });\r\n\r\n            ctx.globalAlpha = 1;\r\n            if (param.disappearStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.disappearStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    ctx.globalAlpha = (limit - frame) / limit;\r\n                }\r\n            }\r\n\r\n            ctx.fillStyle = g;\r\n            // ctx.fillStyle = param.color;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n        };\r\n    }\r\n\r\n    export const convertRgbaFromColorCode = (code: string): Rgba | null => {\r\n        const div = code.split('#');\r\n        if (div.length !== 2 || div[1].length < 6) return null;\r\n\r\n        const value = div[1];\r\n        const r = Number.parseInt(value.substring(0, 2), 16);\r\n        const g = Number.parseInt(value.substring(2, 4), 16);\r\n        const b = Number.parseInt(value.substring(4, 6), 16);\r\n        let a = 1;\r\n        if (value.length === 8) {\r\n            a = Number.parseInt(value.substring(6, 8), 16);\r\n        }\r\n        return { r, g, b, a };\r\n    }\r\n\r\n    export const convertColorCodeFromRgba = (rgba: Rgba): string => {\r\n        const r1 = (Math.floor(rgba.r));\r\n        const g1 = (Math.floor(rgba.g));\r\n        const b1 = (Math.floor(rgba.b));\r\n        const a1 = (Math.floor(rgba.a));\r\n        const r = ('00' + r1.toString(16)).slice(-2);\r\n        const g = ('00' + g1.toString(16)).slice(-2);\r\n        const b = ('00' + b1.toString(16)).slice(-2);\r\n        const a = ('00' + a1.toString(16)).slice(-2);\r\n        return `#${r}${g}${b}${a}`;\r\n    }\r\n\r\n    export const toWhite = (color: string, rate: number): string => {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport default DrawUtil;","namespace VectorUtil {\r\n\r\n    export type XY = {\r\n        x: number, y: number;\r\n    }\r\n\r\n    export class Vector {\r\n\r\n        xy: XY;\r\n        rad: number;\r\n        len: number;\r\n\r\n        constructor(xy: XY) {\r\n            this.xy = xy;\r\n            this.rad = 0;\r\n            this.len = 0;\r\n            this.syncFromXY();\r\n        }\r\n\r\n        syncFromXY = () => {\r\n            this.len = Math.sqrt(this.xy.x * this.xy.x + this.xy.y * this.xy.y);\r\n            this.rad = Math.atan2(this.xy.y, this.xy.x);\r\n        }\r\n\r\n        syncFromRad = () => {\r\n            this.xy.x = Math.cos(this.rad) * this.len;\r\n            this.xy.y = Math.sin(this.rad) * this.len;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default VectorUtil;","\r\nnamespace ParamUtil {\r\n    export enum VisualParamType {\r\n        RADIUS = 'radius',\r\n        COLOR_R = 'color_r',\r\n        COLOR_G = 'color_g',\r\n        COLOR_B = 'color_b',\r\n        COLOR_A = 'color_a',\r\n        THICKNESS = 'thickness',\r\n    }\r\n    export const VisualParams = Object.values(VisualParamType);\r\n    export type VisualParam = typeof VisualParams[number];\r\n\r\n    export enum BehaviorParamType {\r\n        LIMIT = 'limit',\r\n        POS_X = 'pos_x',\r\n        POS_Y = 'pos_y',\r\n        VEC_X = 'vec_x',\r\n        VEC_Y = 'vec_y',\r\n        VEC_RAD = 'vec_radian',\r\n        VEC_LEN = 'vec_length',\r\n    }\r\n    export const BehaviorParams = Object.values(BehaviorParamType);\r\n    export type BehaviorParam = typeof BehaviorParams[number];\r\n\r\n    export enum SelfParamType {\r\n        FRAME = 'self_frame',\r\n        LIMIT = 'self_limit',\r\n        POS_X = 'self_pos_x',\r\n        POS_Y = 'self_pos_y',\r\n        VEC_X = 'self_vec_x',\r\n        VEC_Y = 'self_vec_y',\r\n        VEC_RAD = 'self_vec_radian',\r\n        VEC_LEN = 'self_vec_length',\r\n    }\r\n    export const SelfParams = Object.values(SelfParamType);\r\n    export type SelfParam = typeof SelfParams[number];\r\n\r\n    export enum ExtendParamType {\r\n        LOOP_COUNT = 'loop_count',\r\n        LOOP_ITERATE = 'loop_iterate',\r\n        INVOKE = 'invoke',\r\n    }\r\n    export const ExtendParams = Object.values(ExtendParamType);\r\n    export type ExtendParam = typeof ExtendParams[number];\r\n\r\n    export enum EffectParamType {\r\n        DISAPPEAR_START = 'disappear_start',\r\n        SHRINK_START = 'shrink_start',\r\n        FLASH_APPEAR_FRAME = 'flash_appear_frame',\r\n        FLASH_HIDE_FRAME = 'flash_hide_frame',\r\n    }\r\n    export const EffectParams = Object.values(EffectParamType);\r\n    export type EffectParam = typeof EffectParams[number];\r\n\r\n    export enum ModulateParamType {\r\n        DECAY_RATE = 'decay_rate',\r\n        DECAY_LIMIT = 'decay_limit',\r\n        GRAVITY_VAL = 'gravity_val',\r\n        GRAVITY_LIMIT = 'gravity_limit',\r\n    }\r\n    export const ModulateParams = Object.values(ModulateParamType);\r\n    export type ModulateParam = typeof ModulateParams[number];\r\n\r\n    export enum ConstantType {\r\n        SCREEN_WIDTH = 'screen_width',\r\n        SCREEN_HEIGHT = 'screen_height',\r\n        PI = 'pi',\r\n        RADIAN_ROUND = 'radian_round',\r\n    }\r\n    export const Constants = Object.values(ConstantType);\r\n    export type Constant = typeof Constants[number];\r\n\r\n}\r\n\r\nexport default ParamUtil;","import Particle from \"../../graphic/particle\";\r\n\r\nnamespace ModulateBuilder {\r\n\r\n    type ModulateParam = {\r\n        decayRate?: number;\r\n        decayLimit?: number;\r\n        gravity?: number;\r\n        gravityLimit?: number;\r\n    }\r\n\r\n    export const build = (extendList: ((self: Particle.Instance) => void)[], param: ModulateParam) => {\r\n        \r\n        // 減衰メソッド\r\n        if (param.decayRate != undefined && param.decayLimit != undefined) {\r\n            const decayLimit = param.decayLimit;\r\n            const decayRate = param.decayRate;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.len > decayLimit) {\r\n                    self.vec.len = self.vec.len * decayRate;\r\n                    self.vec.syncFromRad();\r\n                }\r\n            });\r\n        }\r\n        // 重力メソッド\r\n        if (param.gravity != undefined && param.gravityLimit != undefined) {\r\n            const gravityLimit = param.gravityLimit;\r\n            const gravity = param.gravity;\r\n            extendList.push((self: Particle.Instance) => {\r\n\r\n                if (self.vec.xy.y < gravityLimit) {\r\n                    self.vec.xy.y += gravity;\r\n                    self.vec.syncFromXY();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModulateBuilder;","import DrawUtil from \"../../graphic/drawUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport ParamUtil from \"../factory/util/paramUtil\";\r\nimport ModulateBuilder from \"./modulateBuilder\";\r\n\r\nnamespace PreviewUtil {\r\n\r\n    export const SCREEN_WIDTH = 550;\r\n    export const SCREEN_HEIGHT = 550;\r\n\r\n    export type ValueMap = {\r\n        name: string;\r\n        value: number;\r\n    }\r\n\r\n    export const buildLogicProps = (\r\n        owner: Particle.Instance[],\r\n        origin: LogicUtil.NodeLogicItem,\r\n        rootData: LogicUtil.WrapElement,\r\n        sends: ValueMap[]\r\n    ): Particle.Props => {\r\n\r\n        /**\r\n         * ディペンドするロジック要素を識別名から探して返す。\r\n         * @param name ロジックの識別名\r\n         * @returns ロジック要素\r\n         */\r\n        const searchDependLogic = (name: string): LogicUtil.NodeLogicItem | null => {\r\n            const mng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n            const wrap = mng.defs.find(def => (def.data as LogicUtil.NodeLogicItem).name === name);\r\n            if (wrap == undefined) return null;\r\n            return wrap.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        /**\r\n         * 再帰的にパーティクルを生成する。\r\n         * @param cur ルートとなるロジック要素\r\n         * @param sends 親要素から送られてきたフィールド\r\n         * @returns パーティクルのプロパティ\r\n         */\r\n        const createParticleRec = (cur: LogicUtil.NodeLogicItem, sends: ValueMap[]): Particle.Props => {\r\n            let valueMapList: ValueMap[] = sends.concat(ConstantValueMap);\r\n\r\n\r\n            // フィールドのパラメータを取得\r\n            const fieldMng = searchElement('field-mng', cur.mngs);\r\n            if (fieldMng != null) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                    valueMapList.push({ name: paramItem.name, value });\r\n                });\r\n            }\r\n\r\n            const visualParams = (searchElement('visual-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n            const behaviorParams = (searchElement('behavior-mng', cur.mngs)?.data as LogicUtil.NodeParamManager).\r\n                params.map(param => param.data as LogicUtil.NodeParamItem);\r\n\r\n            const getVisualParam = (name: string) => {\r\n                return convertParamsToValue(name, visualParams, valueMapList);\r\n            }\r\n            const getBehaviorParam = (name: string) => {\r\n                return convertParamsToValue(name, behaviorParams, valueMapList);\r\n            }\r\n\r\n            // Behaviorのパラメータを取得\r\n            const limit = Math.floor(getBehaviorParam(ParamUtil.BehaviorParamType.LIMIT) as number);\r\n            const pos = {\r\n                x: getBehaviorParam(ParamUtil.BehaviorParamType.POS_X) as number,\r\n                y: getBehaviorParam(ParamUtil.BehaviorParamType.POS_Y) as number\r\n            };\r\n            const vec = new VectorUtil.Vector({ x: 0, y: 0 });\r\n            const isVectorMethod = behaviorParams.find(param => param.name === ParamUtil.BehaviorParamType.VEC_X) != undefined;\r\n            if (isVectorMethod) {\r\n                vec.xy.x = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_X) as number;\r\n                vec.xy.y = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_Y) as number;\r\n                vec.syncFromXY();\r\n            } else {\r\n                vec.rad = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_RAD) as number;\r\n                vec.len = getBehaviorParam(ParamUtil.BehaviorParamType.VEC_LEN) as number;\r\n                vec.syncFromRad();\r\n            }\r\n\r\n            /**\r\n             * 追加動作（子要素、エフェクト、モデュレート）\r\n             */\r\n            const extendList: ((self: Particle.Instance) => void)[] = [];\r\n\r\n            // 子要素を生成する\r\n            const connectMng = searchElement('inherit-mng', cur.mngs);\r\n            if (connectMng != null) {\r\n\r\n                // パーティクル情報のフィールド追加\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_X, value: pos.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.POS_Y, value: pos.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.x });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_X, value: vec.xy.y });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_RAD, value: vec.rad });\r\n                valueMapList.push({ name: ParamUtil.BehaviorParamType.VEC_LEN, value: vec.len });\r\n\r\n                const connects = (connectMng.data as LogicUtil.NodeConnectManager).inherits;\r\n\r\n                connects.forEach(connect => {\r\n                    const connector = connect.data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.disable ?? false) return;\r\n\r\n                    const logicItem = connector.method === 'create' ?\r\n                        searchElement('inherit-logic', connector.mngs)?.data as LogicUtil.NodeLogicItem :\r\n                        searchDependLogic(connector.depend);\r\n\r\n                    if (logicItem != null) {\r\n\r\n                        extendList.push((self: Particle.Instance) => {\r\n\r\n                            const addValueMap = (item: ValueMap) => {\r\n                                const map = valueMapList.find(map => map.name === item.name);\r\n                                if (map != undefined) map.value = item.value;\r\n                                else valueMapList.push(item);\r\n                            }\r\n                            addValueMap({ name: ParamUtil.SelfParamType.FRAME, value: self.frame });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.LIMIT, value: self.limit });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_X, value: self.pos.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.POS_Y, value: self.pos.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_X, value: self.vec.xy.x });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_Y, value: self.vec.xy.y });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_RAD, value: self.vec.rad });\r\n                            addValueMap({ name: ParamUtil.SelfParamType.VEC_LEN, value: self.vec.len });\r\n\r\n                            // Inherit配下のフィールドのパラメータを取得\r\n                            const itrfldValueMap: ValueMap[] = [];\r\n                            const fieldMng = searchElement('inhfld-mng', connector.mngs);\r\n                            if (fieldMng != null) {\r\n                                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                                    const paramItem = field.data as LogicUtil.NodeParamItem;\r\n                                    const value = convertFormulaToValue(paramItem, valueMapList);\r\n                                    itrfldValueMap.push({ name: paramItem.name, value });\r\n                                });\r\n                            }\r\n\r\n                            let loopCnt = 1;\r\n                            const extendItem = searchElement('extend-mng', connector.mngs) as LogicUtil.WrapElement;\r\n                            const extendParams = (extendItem.data as LogicUtil.NodeParamManager).params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                            const loopCntVal = convertParamsToValue(ParamUtil.ExtendParamType.LOOP_COUNT, extendParams, valueMapList.concat(itrfldValueMap));\r\n\r\n                            // 派生条件\r\n                            const isInvoke = convertParamsToBoolean(ParamUtil.ExtendParamType.INVOKE, extendParams, valueMapList) ?? true;\r\n\r\n                            // 条件を満たさない場合、以下の処理（パーティクルの生成）を行わない\r\n                            if (!isInvoke) return;\r\n\r\n                            // イテレータを利用している場合\r\n                            if (loopCntVal != undefined) {\r\n                                loopCnt = loopCntVal;\r\n                            }\r\n\r\n                            for (let i = 0; i < loopCnt; i++) {\r\n\r\n                                // イテレータ関連のパラメータを追加\r\n                                const iterateValueMap: ValueMap[] = [\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_COUNT, value: loopCnt },\r\n                                    { name: ParamUtil.ExtendParamType.LOOP_ITERATE, value: i }\r\n                                ];\r\n\r\n                                const sendItem = searchElement('send-mng', connector.mngs)?.data as LogicUtil.NodeParamManager;\r\n                                const params = sendItem.params.map(param => param.data as LogicUtil.NodeParamItem);\r\n                                const sendValueMapList: ValueMap[] = params.map(item => {\r\n                                    return { name: item.name, value: convertParamsToValue(item.name, params, valueMapList.concat(itrfldValueMap).concat(iterateValueMap)) ?? 0 }\r\n                                });\r\n\r\n                                const props = createParticleRec(\r\n                                    logicItem,\r\n                                    sendValueMapList\r\n                                );\r\n                                self.owner.push(new Particle.Instance(props));\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            // モデュレート（動きの変化）を付与\r\n            ModulateBuilder.build(extendList, {\r\n                decayLimit: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_LIMIT),\r\n                decayRate: getBehaviorParam(ParamUtil.ModulateParamType.DECAY_RATE),\r\n                gravity: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_VAL),\r\n                gravityLimit: getBehaviorParam(ParamUtil.ModulateParamType.GRAVITY_LIMIT),\r\n            });\r\n\r\n            // Visualのパラメータを取得\r\n            const radius = getVisualParam(ParamUtil.VisualParamType.RADIUS);\r\n            const colorR = getVisualParam(ParamUtil.VisualParamType.COLOR_R);\r\n            const colorG = getVisualParam(ParamUtil.VisualParamType.COLOR_G);\r\n            const colorB = getVisualParam(ParamUtil.VisualParamType.COLOR_B);\r\n            const colorA = getVisualParam(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // エフェクト付与\r\n            const disappearStart = getVisualParam(ParamUtil.EffectParamType.DISAPPEAR_START);\r\n            const shrinkStart = getVisualParam(ParamUtil.EffectParamType.SHRINK_START);\r\n            const flashAppearFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME);\r\n            const flashHideFrame = getVisualParam(ParamUtil.EffectParamType.FLASH_HIDE_FRAME);\r\n\r\n            let drawer: (self: Particle.Instance, ctx: CanvasRenderingContext2D) => void = () => { };\r\n            if (radius != undefined) {\r\n                drawer = DrawUtil.createGradDrawer({\r\n                    radius: radius,\r\n                    color: DrawUtil.convertColorCodeFromRgba({\r\n                        r: colorR as number,\r\n                        g: colorG as number,\r\n                        b: colorB as number,\r\n                        a: colorA as number,\r\n                    }),\r\n                    disappearStartRate: disappearStart,\r\n                    shrinkStartRate: shrinkStart,\r\n                    flashAppearFrame,\r\n                    flashHideFrame,\r\n                });\r\n            }\r\n\r\n            return {\r\n                owner, pos, vec,\r\n                limit, drawer,\r\n                extend: extendList\r\n            };\r\n        }\r\n\r\n        return createParticleRec(origin, sends);\r\n    }\r\n\r\n    const searchElement = (type: LogicUtil.NodeType, warpList: LogicUtil.WrapElement[]) => {\r\n        return warpList.find(wrap => wrap.type === type) ?? null;\r\n    }\r\n\r\n    /**\r\n     * 式を計算して結果の値を返す\r\n     * @param name プロパティ名\r\n     * @param params パラメータ要素\r\n     * @param valueMapList 値変換マップ\r\n     * @returns 算出された値\r\n     */\r\n    export const convertParamsToValue = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): number | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToValue(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToValue = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): number => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(ret);\r\n        return ret;\r\n    }\r\n\r\n    export const convertParamsToBoolean = (name: string, params: LogicUtil.NodeParamItem[], valueMapList: ValueMap[]): boolean | undefined => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return undefined;\r\n        return convertFormulaToBoolean(formula, valueMapList);\r\n    }\r\n\r\n    const convertFormulaToBoolean = (formula: LogicUtil.NodeParamItem, valueMapList: ValueMap[]): boolean => {\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item, i) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            else if (item === '=') str = '==';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        // console.log(formulaStr);\r\n        return ret;\r\n    }\r\n\r\n    export const ConstantValueMap: ValueMap[] = [\r\n        { name: ParamUtil.ConstantType.SCREEN_WIDTH, value: SCREEN_WIDTH },\r\n        { name: ParamUtil.ConstantType.SCREEN_HEIGHT, value: SCREEN_HEIGHT },\r\n        { name: ParamUtil.ConstantType.PI, value: 3.14159265359 },\r\n        { name: ParamUtil.ConstantType.RADIAN_ROUND, value: 3.14159265359 * 2 }\r\n    ];\r\n}\r\n\r\nexport default PreviewUtil;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\r\n\r\n    export type Validate = {\r\n        checker: (value: string) => boolean;\r\n        errorType: ErrorType;\r\n        message?: string;\r\n    }\r\n\r\n    /**\r\n     * 必須チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkRequired = (str: string) => {\r\n        return str.length > 0;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length === 0 || (str.length >= min && str.length <= max);\r\n    }\r\n\r\n    /**\r\n     * 半角英数時チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        return checkIncludesChars(str, list);\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列で構成されているかチェック\r\n     * @param str 検証する文字列\r\n     * @param list 入力を許す対象文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkIncludesChars = (str: string, list: string) => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            const ch = str.charAt(i);\r\n            if (list.indexOf(ch) === -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列が数値に変換できるかチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumber = (str: string) => {\r\n        return !isNaN(Number(str));\r\n    }\r\n\r\n    /**\r\n     * 数値の値の範囲をチェック\r\n     * @param str 検証する文字列\r\n     * @param min 下限\r\n     * @param max 上限\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumberRange = (str: string, min: number, max: number) => {\r\n        if (!isNaN(Number(str))) {\r\n            const num = Number(str);\r\n            return num >= min && num <= max;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default ValidateUtil;\r\n","import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        // parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        const ref = useRef({} as HTMLDivElement);\r\n\r\n        /**\r\n         * データを元に再帰的に以下のツリーを構成する。\r\n         * @returns ツリー\r\n         */\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        useEffect(() => {\r\n            if (focusNode != null && focusNode.parent != null) {\r\n                focusNode.parent.isOpen = true;\r\n            }\r\n        }, [focusNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            // console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    // 親判定\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    // 兄弟判定\r\n                    if (result === false && focusNode != null && focusNode.parent != null) {\r\n                        result = focusNode.parent.children.find(node => node == element) != undefined;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        width={ref.current.scrollWidth}\r\n                        isActive={isCurrent}\r\n                        isRelation={!isDisable && isRelationNode()}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap\r\n                ref={ref}\r\n                isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #374a54;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #1f3642;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    width: number;\r\n    isActive: boolean;\r\n    isRelation: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #459cff46;\r\n    `}\r\n    opacity: 0.3;\r\n    ${props => !props.isRelation ? '' : css`\r\n        background-color: #ffffff28;\r\n        opacity: 1;\r\n    `}\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #b4d9dd83;\r\n        opacity: 1;\r\n    `}\r\n    width: ${props => props.width}px;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import { useContext, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nnamespace ModifyOperations {\r\n\r\n    export type Props = {\r\n        mappingForm: () => void;\r\n        checkableFields: FormUtil.CheckableValue[];\r\n        isInputOK?: boolean;\r\n        firstRegist: () => void;\r\n        modifyRegist: () => void;\r\n    }\r\n\r\n    export const Component = (props: Props) => {\r\n        const { node, isModify, setModify, removeSelf } = useContext(FactoryTreeContext);\r\n\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n        const isComplete = FormUtil.isCompleteCheck(props.checkableFields);\r\n\r\n        return (<>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: isModify,\r\n                        callback: () => {\r\n                            if (wrap.data == null) {\r\n                                removeSelf();\r\n                            } else {\r\n                                props.mappingForm();\r\n                            }\r\n                            setModify(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !isModify || (props.isInputOK ?? isComplete),\r\n                        callback: () => {\r\n                            if (!isModify) {\r\n                                setModify(true);\r\n                            } else {\r\n                                if (wrap.data == null) {\r\n                                    props.firstRegist();\r\n                                } else {\r\n                                    props.modifyRegist();\r\n                                }\r\n                                setModify(false);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default ModifyOperations;","import { type } from \"os\";\r\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport Common from \"../common\";\r\nimport PreviewLogicFrame from \"../preview/previewLogicFrame\";\r\nimport LogicElementUtil from \"./util/logicElementUtil\";\r\nimport LogicUtil from \"./util/logicUtil\";\r\n\r\nexport const FactoryTreeContext = createContext({} as LogicUtil.DetailArgs);\r\n\r\nconst LogicMainteTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    // const [rootData, setRootData] = useState(LogicElementUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    // const [treeDisable, setTreeDisable] = useState(false);\r\n    const [isModify, setModify] = useState<boolean>(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    const rootData = store.libraryData as LogicUtil.WrapElement;\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: LogicUtil.getChildrenDataNode(rootData)\r\n        }\r\n    }, [rootData]);\r\n\r\n    // useEffect(()=> {\r\n    //     store.logicData = rootData;\r\n    //     setStore({...store});\r\n    // }, [rootData]);\r\n\r\n    const setRootData = (rootData: LogicUtil.WrapElement) => {\r\n        store.libraryData = rootData;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const masterNode = useMemo(() => {\r\n        let cur: TreeUtil.ElementNode | null = focusNode;\r\n        while (cur != null) {\r\n            const type = (cur.data as LogicUtil.WrapElement).type;\r\n            if (['logic-item', 'seed-item'].includes(type)) return cur;\r\n            cur = cur.parent;\r\n        };\r\n        return null;\r\n    }, [focusNode]);\r\n\r\n    /**\r\n     * プレビューダイアログを表示する\r\n     */\r\n    const openPreviewDialog = () => {\r\n        if (masterNode == null) return;\r\n        store.system.dialog = (\r\n            <PreviewLogicFrame.Component\r\n                master={masterNode.data as LogicUtil.WrapElement}\r\n                rootData={rootData}\r\n                closeButtonAction={() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n            onKeyDown={(e) => {\r\n                // console.log(e.key);\r\n                if (isModify || focusNode == null) return;\r\n                switch (e.key) {\r\n                    case 'ArrowRight': {\r\n                        if (focusNode.children.length > 0) {\r\n                            if (!focusNode.isOpen) focusNode.isOpen = true;\r\n                            else setFocusNode(focusNode.children[0]);\r\n                            setInvalidate({});\r\n                        }\r\n                    } break;\r\n                    case 'ArrowLeft': {\r\n                        if (focusNode.isOpen) focusNode.isOpen = false;\r\n                        else {\r\n                            if (focusNode.parent != null) setFocusNode(focusNode.parent);\r\n                        }\r\n                        setInvalidate({});\r\n                    } break;\r\n                    case 'ArrowUp': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n) {\r\n                                    if (i === 0) {\r\n                                        setFocusNode(focusNode.parent);\r\n                                        setInvalidate({});\r\n                                    } else {\r\n                                        setFocusNode(list[i - 1]);\r\n                                        setInvalidate({});\r\n                                    }\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case 'ArrowDown': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n && i < list.length - 1) {\r\n                                    setFocusNode(list[i + 1]);\r\n                                    setInvalidate({});\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case ' ': {\r\n                        if (masterNode != null) openPreviewDialog();\r\n                    } break;\r\n                }\r\n            }}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview',\r\n                                isEnable: masterNode != null,\r\n                                callback: openPreviewDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return LogicUtil.getNodeDisplayJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={isModify}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <_DetailDiv>\r\n                    <_DetailHeader>\r\n                        <_DetailHeaderLabel>{LogicUtil.getTypeName(focusNode)}</_DetailHeaderLabel>\r\n                    </_DetailHeader>\r\n                    <FactoryTreeContext.Provider value={{\r\n                        rootData,\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        isModify,\r\n                        setModify,\r\n                        // treeDisable,\r\n                        setRootData,\r\n                        removeSelf: () => {\r\n                            const node = focusNode as TreeUtil.ElementNode;\r\n                            let index = -1;\r\n                            node.parent?.children.forEach((n, i) => {\r\n                                if (n == node) index = i;\r\n                            });\r\n                            node.parent?.children.splice(index, 1);\r\n                            const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n                            const listName = LogicElementUtil.getListParamName(parentWrap.type);\r\n                            if (listName == null) return;\r\n                            const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n                            list.splice(index, 1);\r\n                            setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                            setInvalidate({});\r\n                        }\r\n                    }}>\r\n                        <_DetailMainDiv>{LogicUtil.getDetailComponent(focusNode)}</_DetailMainDiv>\r\n                    </FactoryTreeContext.Provider>\r\n                </_DetailDiv>\r\n            </_PropsDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default LogicMainteTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #6c8186;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d87b;\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _TreeHeadHalf = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    background-color: #7fbdb47a;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #9fa9b6;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _DetailDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\nconst _DetailHeader = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #b4b29e; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _DetailHeaderLabel = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #a10000;\r\n    /* background-color: #bbd0d3; */\r\n    border: solid 1px #a10000;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 20px);\r\n    margin: 5px 0 0 10px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DetailMainDiv = styled.div`\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 44px);\r\n    margin: 0 0 0 4px;\r\n    background-color: #cfd3cc;\r\n    border: solid 1px #0026a1;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorArgumentMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'argument-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentMng;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../util/logicUtil\";\r\nimport ParamUtil from \"../util/paramUtil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../util/logicElementUtil\";\r\n\r\nnamespace SendTemplateDialog {\r\n\r\n    const FRAME_WIDTH = 450;\r\n    const FRAME_HEIGHT = 160;\r\n    const COMPONENT_WIDTH = 296;\r\n\r\n    export const ConnectParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, input property name!';\r\n\r\n        /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n        const paramNameList = useMemo(() => {\r\n            const owner = (LogicElementUtil.getInnerWrap(props.node.parent?.data as LogicUtil.WrapElement, 'inherit-logic') as LogicUtil.WrapElement).data;\r\n            return LogicElementUtil.getParamNameList(owner);\r\n        }, [props.node]);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    // Sendにパラメータを追加\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: xName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }] }\r\n                    ), props.node);\r\n                    LogicElementUtil.addChild(LogicElementUtil.createParamWrap('send-item',\r\n                        { name: yName.value, formulaItems: ['var'], values: [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }] }\r\n                    ), props.node);\r\n\r\n                    // 派生ロジックに引数を追加\r\n                    const logicNode = LogicElementUtil.getInnerNode(props.node.parent as TreeUtil.ElementNode, 'inherit-logic') as TreeUtil.ElementNode;\r\n                    const hasArgNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') != undefined;\r\n                    if (!hasArgNode) {\r\n                        LogicElementUtil.insertChild({\r\n                            type: 'argument-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeArgumentManager\r\n                        }, logicNode, 0);\r\n                    }\r\n                    const argNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'argument-mng') as TreeUtil.ElementNode;\r\n\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: xName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n                    LogicElementUtil.addChild({\r\n                        type: 'argument-item',\r\n                        data: {\r\n                            name: yName.value,\r\n                            valueType: 'number'\r\n                        } as LogicUtil.NodeArgumentItem\r\n                    }, argNode);\r\n\r\n                    // 派生ロジックの座標に引数を設定\r\n                    const behaviorNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'behavior-mng') as TreeUtil.ElementNode;\r\n                    const setParamValue = (prpName: string, argName: string) => {\r\n                        const params = behaviorNode.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                        const targetParam = params.find(param => param.name === prpName) as LogicUtil.NodeParamItem;\r\n                        targetParam.formulaItems = ['var'];\r\n                        targetParam.values = [{ type: 'argument', value: argName }];\r\n                    }\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_X, xName.value);\r\n                    setParamValue(ParamUtil.BehaviorParamType.POS_Y, yName.value);\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (yName.value !== '') list.push(yName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[yName]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => {\r\n                                            const list = paramNameList.slice();\r\n                                            if (xName.value !== '') list.push(xName.value);\r\n                                            return !list.includes(value);\r\n                                        },\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                                dependency={[xName]}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n\r\n    export const SetParentPosition = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        invalidate: () => void;\r\n    }) => {\r\n\r\n        const { store, setStore } = useContext(GlobalContext);\r\n\r\n        const [xName, setXName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [yName, setYName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const message = 'Please, select property name!';\r\n\r\n        const list = useMemo(() => {\r\n            return props.node.children.map(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                return (wrap.data as LogicUtil.NodeParamItem).name;\r\n            });\r\n        }, []);\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Execute',\r\n                isEnable: FormUtil.checkItems([xName, yName]),\r\n                callback: () => {\r\n                    const paramList = props.node.children.map(child => (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem);\r\n                    const xParam = paramList.find(param => param.name === xName.value) as LogicUtil.NodeParamItem;\r\n                    const yParam = paramList.find(param => param.name === yName.value) as LogicUtil.NodeParamItem;\r\n                    xParam.formulaItems = ['var'];\r\n                    xParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_X }];\r\n                    yParam.formulaItems = ['var'];\r\n                    yParam.values = [{ type: 'self', value: ParamUtil.SelfParamType.POS_Y }];\r\n\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    props.invalidate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={FRAME_WIDTH} height={FRAME_HEIGHT}>\r\n                <_Inner>\r\n                    <FormUtil.Message\r\n                        message={message}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_x\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={xName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setXName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== yName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"self_pos_y\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                marginLeft={2}\r\n                                checkable={yName}\r\n                                width={COMPONENT_WIDTH}\r\n                                setCheckable={setYName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                                headBlank\r\n                                list={list.filter(item => item !== xName.value).map(item => ({\r\n                                    value: item, labelText: item\r\n                                }))}\r\n                            />\r\n                        }\r\n                    />\r\n                </_Inner>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SendTemplateDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    background-color: #d0e7e718;\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport GloballDialog from \"../../../../dialog/globalDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorArgumentItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const logicNode = node.parent?.parent as TreeUtil.ElementNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n        setName({ ...name, value: param.name });\r\n        setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, argType]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeArgumentItem = {\r\n                    name: name.value,\r\n                    valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n                syncArgumentAdd(logicNode, name.value);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(logicNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = reservedList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeArgumentItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'color' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getArgumentRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    // DependしているInheritのSendパラメータを同期する\r\n                                    syncArgumentDel(logicNode, name.value);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorArgumentItem;\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param node 引数のノード\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param logicNode ロジックノード\r\n*/\r\nconst syncArgumentName = (logicNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n    const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n    if (fieldMng != undefined) {\r\n        syncFormula((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n    }\r\n    const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n    if (visualMng != undefined) {\r\n        syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n    if (behaviorMng != undefined) {\r\n        syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n    const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n    if (inhMng != undefined) {\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n            // Inherit配下のField要素のチェック\r\n            if (inhfld != null) {\r\n                syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n            // Extend要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            // Send要素のチェック\r\n            syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        });\r\n    }\r\n\r\n    const syncParamName = (params: LogicUtil.WrapElement[]) => {\r\n        params.forEach(wrap => {\r\n            const item = wrap.data as LogicUtil.NodeParamItem;\r\n            if (item.name === prevName) {\r\n                item.name = newName;\r\n            }\r\n        });\r\n    }\r\n    if (wrap.type === 'logic-item') {\r\n\r\n        // dependしている箇所を全て反映するために再帰で洗う\r\n        const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n            const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n            if (inhMng == undefined) return;\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    const inhLogic = LogicElementUtil.getInnerWrapFixed(inh, 'inherit-logic').data as LogicUtil.NodeLogicItem;\r\n                    runRec(inhLogic);\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    const sendMng = LogicElementUtil.getInnerWrapFixed(inh, 'send-mng').data as LogicUtil.NodeParamManager;\r\n                    syncParamName(sendMng.params);\r\n                }\r\n            });\r\n        }\r\n        // ロジックを全て調査する\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(logic => {\r\n            runRec((logic.data as LogicUtil.WrapElement).data);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        const root = (rootNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeRoot;\r\n        const defs = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        console.log(defs.length);\r\n        defs.forEach(wrap => {\r\n            const interfaceWrap = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng');\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(interfaceWrap, 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            syncParamName(sendMng.params);\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const connWrap = logicNode.parent?.data as LogicUtil.WrapElement;\r\n        const sendMng = LogicElementUtil.getInnerWrapFixed(connWrap, 'send-mng').data as LogicUtil.NodeParamManager;\r\n        syncParamName(sendMng.params);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の更新に伴い、参照先のSend管理に処理（callback）を行う\r\n * @param logicNode ロジックノード\r\n * @param callback 処理\r\n */\r\nconst syncArgumentCallback = (\r\n    logicNode: TreeUtil.ElementNode,\r\n    callback: (sendNode: TreeUtil.ElementNode) => void\r\n) => {\r\n    const wrap = logicNode.data as LogicUtil.WrapElement;\r\n    const logicItem = wrap.data as LogicUtil.NodeLogicItem;\r\n\r\n    if (wrap.type === 'logic-item') {\r\n        const runRec = (logicNode: TreeUtil.ElementNode) => {\r\n            const inhMngNode = logicNode.children.find(child => (child.data as LogicUtil.WrapElement).type === 'inherit-mng');\r\n            if (inhMngNode == undefined) return;\r\n            inhMngNode.children.forEach(child => {\r\n                const conn = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                if (conn.method === 'create') {\r\n                    runRec(LogicElementUtil.getInnerNodeFixed(child, 'inherit-logic'));\r\n                } else if (conn.method === 'depend' && conn.depend === logicItem.name) {\r\n                    callback(LogicElementUtil.getInnerNodeFixed(child, 'send-mng'));\r\n                }\r\n            });\r\n        }\r\n        const logicMngNode = logicNode.parent as TreeUtil.ElementNode;\r\n        logicMngNode.children.forEach(child => {\r\n            runRec(child);\r\n        });\r\n        // シードを全て調査する\r\n        const rootNode = logicNode.parent?.parent as TreeUtil.ElementNode;\r\n        rootNode.children[0].children.forEach(seedNode => {\r\n            const interfaceNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'interface-mng');\r\n            const sendNode = LogicElementUtil.getInnerNodeFixed(interfaceNode, 'seedsend-mng');\r\n            const seed = (seedNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n            if (seed.entry === logicItem.name) {\r\n                callback(sendNode);\r\n            }\r\n        });\r\n    } else if (wrap.type === 'inherit-logic') {\r\n        const sendNode = LogicElementUtil.getInnerNodeFixed(logicNode.parent as TreeUtil.ElementNode, 'send-mng');\r\n        callback(sendNode);\r\n    }\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentAdd = (logicNode: TreeUtil.ElementNode, newArgName: string) => {\r\n    const addNewParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n            { name: newArgName, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n        );\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        sendMng.params.push(paramWrap);\r\n        sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n    }\r\n    syncArgumentCallback(logicNode, addNewParam);\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param logicNode ロジックノード\r\n */\r\nconst syncArgumentDel = (logicNode: TreeUtil.ElementNode, delArgName: string) => {\r\n    const delArgParam = (sendNode: TreeUtil.ElementNode) => {\r\n        const sendMng = (sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        let delIndex = -1;\r\n        sendMng.params.some((param, i) => {\r\n            if ((param.data as LogicUtil.NodeParamItem).name == delArgName) {\r\n                delIndex = i;\r\n                return 1;\r\n            }\r\n        });\r\n        sendMng.params.splice(delIndex, 1);\r\n        sendNode.children.splice(delIndex, 1);\r\n    }\r\n    syncArgumentCallback(logicNode, delArgParam);\r\n}","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Seed',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seed-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedManager).defs.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorLogicMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Logic',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'logic-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\n\r\nconst EditorLogicItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [isConnect, hasArgNode, hasFieldNode, hasConnectNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        return [\r\n            parentType === 'connector',\r\n            list.includes('argument-mng'),\r\n            list.includes('field-mng'),\r\n            list.includes('inherit-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        if (!isConnect) {\r\n            const param = wrap.data as LogicUtil.NodeLogicItem;\r\n            setName({ ...name, value: param.name });\r\n        }\r\n    };\r\n\r\n    /** 既存のロジック名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => {\r\n        // インヘリットの場合、名前を持たないため取得しない\r\n        if (wrap.type === 'inherit-logic') return [];\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node, isConnect]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 引数要素の有無を判定\r\n     */\r\n    const hasArgument = () => {\r\n        const argumentNode = LogicElementUtil.getInnerNode(node, 'argument-mng');\r\n        if (argumentNode == null) return false;\r\n        return argumentNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'field-mng');\r\n        if (fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n    /**\r\n     * 派生要素の有無を判定\r\n     */\r\n    const hasInherit = () => {\r\n        const inheritNode = LogicElementUtil.getInnerNode(node, 'inherit-mng');\r\n        if (inheritNode == null) return false;\r\n        return inheritNode.children.length > 0;\r\n    }\r\n\r\n    return (<>\r\n        {isConnect ? <></> : (<>\r\n            <ModifyOperations.Component\r\n                mappingForm={mappingForm}\r\n                checkableFields={[name]}\r\n                firstRegist={() => {\r\n                    const element: LogicUtil.NodeLogicItem = {\r\n                        name: name.value,\r\n                        mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                    };\r\n                    element.name = name.value;\r\n                    wrap.data = element;\r\n\r\n                    element.mngs.forEach(mng => {\r\n                        const newNode = TreeUtil.createNode(mng, node);\r\n                        const data = (newNode.data as LogicUtil.WrapElement).data;\r\n                        (data as LogicUtil.NodeParamManager).params.forEach(param => {\r\n                            newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                        });\r\n                        node.children.push(newNode);\r\n                    });\r\n                    invalidate();\r\n                    setStore({ ...store });\r\n                }}\r\n                modifyRegist={() => {\r\n                    const param = wrap.data as LogicUtil.NodeLogicItem;\r\n                    const prevName = param.name;\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n                    // 名前が変わった場合、参照箇所も修正する\r\n                    if (prevName !== param.name) {\r\n                        syncLogicName(node, prevName, param.name);\r\n                    }\r\n                }}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"param\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Name\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={200}\r\n                                isReadOnly={!isModify}\r\n                                checkable={name}\r\n                                setCheckable={setName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => LogicUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => !existNameList.includes(value),\r\n                                        errorType: \"relation\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n        </>)}\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Argument'}\r\n                        width={300}\r\n                        isUse={hasArgNode}\r\n                        isEnable={!hasArgument()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasArgNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'argument-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as LogicUtil.NodeArgumentManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            if (hasArgNode) listPos++;\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'field-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Inherit'}\r\n                            width={300}\r\n                            isUse={hasConnectNode}\r\n                            isEnable={!hasInherit()}\r\n                            callback={() => {\r\n                                let listPos = 2;\r\n                                if (hasArgNode) listPos++;\r\n                                if (hasFieldNode) listPos++;\r\n                                toggleElement(\r\n                                    hasConnectNode,\r\n                                    listPos,\r\n                                    {\r\n                                        type: 'inherit-mng',\r\n                                        data: {\r\n                                            inherits: []\r\n                                        } as LogicUtil.NodeConnectManager\r\n                                    }\r\n                                );\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        {isConnect ? <></> : (\r\n            <FormUtil.BorderPanel\r\n                title=\"operation\"\r\n                isEnable={!isModify}\r\n                innerJsx={<>\r\n                    {LogicElementUtil.getReplicateButton(node, !isModify, 'logic', store, setStore, invalidate)}\r\n                    {/* <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Replicate',\r\n                                isEnable: !isModify,\r\n                                // isEnable: false,\r\n                                callback: () => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Replicate this logic.\"\r\n                                        buttons={[\r\n                                            {\r\n                                                label: 'Cancel',\r\n                                                callback: () => {\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                label: 'Enter',\r\n                                                callback: () => {\r\n                                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                                    const name = wrap.data[namable] as string;\r\n                                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                                    store.system.dialog = null;\r\n                                                    setStore({ ...store });\r\n                                                    // mappingForm();\r\n                                                    invalidate();\r\n                                                }\r\n                                            }\r\n                                        ]}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    /> */}\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Delete',\r\n                                callback: () => {\r\n                                    const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                    const refers = getLocgicRefers(node, param.name);\r\n                                    if (refers.length === 0) {\r\n                                        removeSelf();\r\n                                    } else {\r\n                                        store.system.dialog = <ConfirmDialog.Component\r\n                                            message={`[${param.name}] is referenced in the Inherit.\\n${refers}`}\r\n                                        />;\r\n                                        setStore({ ...store });\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                    {/* 並び順入れ替えボタン */}\r\n                    {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n                </>}\r\n            />\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default EditorLogicItem;\r\n\r\n/**\r\n * ロジックを参照しているInheritのリストを返す。\r\n * @param node 現在のノード\r\n * @param logicName ロジック名\r\n * @returns 参照Inheritリスト\r\n */\r\nexport const getLocgicRefers = (node: TreeUtil.ElementNode, logicName: string) => {\r\n\r\n    const refers: string[] = [];\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        refers.push(conn.id);\r\n    }\r\n    searchLogicReferInherit(node, logicName, callback);\r\n    return refers;\r\n}\r\n\r\n/**\r\n * ロジック名の変更に伴い、参照しているインヘリットを同期する\r\n * @param node ロジックノード\r\n */\r\nconst syncLogicName = (node: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n    const callback = (conn: LogicUtil.NodeInheritConnector) => {\r\n        conn.depend = newName;\r\n    }\r\n    searchLogicReferInherit(node, prevName, callback);\r\n}\r\n\r\nconst searchLogicReferInherit = (\r\n    node: TreeUtil.ElementNode,\r\n    logicName: string,\r\n    callback: (conn: LogicUtil.NodeInheritConnector) => void\r\n) => {\r\n    const logicMngNode = node.parent as TreeUtil.ElementNode\r\n    const runRec = (logic: LogicUtil.NodeLogicItem) => {\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng == undefined) return;\r\n        (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n            const conn = inh.data as LogicUtil.NodeInheritConnector;\r\n            if (conn.method === 'create') {\r\n                const inhLogic = LogicElementUtil.getInnerWrap(inh, 'inherit-logic');\r\n                runRec(inhLogic?.data);\r\n            } else {\r\n                if (conn.depend === logicName) {\r\n                    callback(conn);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    logicMngNode.children.forEach(logic => {\r\n        runRec((logic.data as LogicUtil.WrapElement).data);\r\n    });\r\n}","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype FormProps = {\r\n    inputType: FormUtil.CheckableValue;\r\n    value: FormUtil.CheckableValue;\r\n};\r\n\r\nenum Level {\r\n    FIELD = 0,\r\n    INITIAL,\r\n    INHERIT_FIELD,\r\n    INHERIT_EXTEND,\r\n    INHERIT_SEND\r\n}\r\n\r\nconst EditorParamItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    /** 名前 */\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    /** 式 */\r\n    const [formulaItems, setFormulaItems] = useState<string[]>([]);\r\n    /** 変数の入力フォーム */\r\n    const [varFormList, setVarFormList] = useState<FormProps[]>([]);\r\n    // const [formJsxList, setFaormJsxList] = useState<JSX.Element[]>([]);\r\n\r\n    const isField = wrap.type === 'field-item';\r\n    const isCondition = wrap.type === 'condition-item';\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        setName({ value: param.name, errors: [] });\r\n        setFormulaItems(param.formulaItems.slice());\r\n        setVarFormList(param.values.map(v => {\r\n            return {\r\n                inputType: { value: v.type, errors: [] },\r\n                value: { value: v.value, errors: [] }\r\n            }\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const level: Level = useMemo(() => {\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        switch (parentType) {\r\n            case 'field-mng': return Level.FIELD;\r\n            case 'visual-mng':\r\n            case 'behavior-mng': return Level.INITIAL;\r\n            case 'inhfld-mng': return Level.INHERIT_FIELD;\r\n            case 'extend-mng': return Level.INHERIT_EXTEND;\r\n            case 'send-mng': return Level.INHERIT_SEND;\r\n        }\r\n        return -1;\r\n    }, [node]);\r\n\r\n    /**\r\n     * 引数とフィールド変数のキーリストを取得する。\r\n     */\r\n    const [argumentList, fieldKeyList] = useMemo(() => {\r\n        let argumentList: string[] = [];\r\n        const fieldKeys: string[] = [];\r\n        const parentType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const targetTypes: LogicUtil.NodeType[] = ['field-mng', 'behavior-mng', 'visual-mng', 'inhfld-mng', 'send-mng', 'extend-mng'];\r\n        if (targetTypes.includes(parentType)) {\r\n            const getLogicNode = () => {\r\n                switch (parentType) {\r\n                    case 'field-mng':\r\n                    case 'visual-mng':\r\n                    case 'behavior-mng': return node.parent?.parent;\r\n                    case 'inhfld-mng':\r\n                    case 'send-mng':\r\n                    case 'extend-mng': return node?.parent?.parent?.parent?.parent;\r\n                }\r\n            };\r\n            const logicItem = (getLogicNode()?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n            // 引数リストを追加\r\n            const argMng = logicItem.mngs.find(mng => mng.type === 'argument-mng');\r\n            if (argMng != undefined) {\r\n                argumentList = (argMng.data as LogicUtil.NodeArgumentManager).\r\n                    args.map(arg => (arg.data as LogicUtil.NodeArgumentItem).name);\r\n            }\r\n            // 変数リストを追加\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (level >= Level.INITIAL && fieldMng != undefined) {\r\n                (fieldMng.data as LogicUtil.NodeFieldManager).fields.forEach(field => {\r\n                    const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                    fieldKeys.push(fieldName);\r\n                });\r\n            }\r\n        } else if (parentType === 'seedsend-mng') {\r\n            // シード配下のSendは特別に扱う（どのレベルにも属さない）\r\n            const argMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'seedarg-mng');\r\n            if (argMng != null) {\r\n                argumentList = (argMng.data as LogicUtil.NodeSeedArgManager).\r\n                    args.map(arg => (arg.data as LogicUtil.NodeSeedArgItem).name);\r\n            } else throw new Error('argMng is undefined.');\r\n        }\r\n        if (level >= Level.INHERIT_FIELD) {\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.POS_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_X);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_Y);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_RAD);\r\n            fieldKeys.push(ParamUtil.BehaviorParamType.VEC_LEN);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.RADIUS);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_R);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_G);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_B);\r\n            // fieldKeys.push(ParamUtil.VisualParamType.COLOR_A);\r\n\r\n            // フィールドキーにInherit配下のFieldパラメータを追加\r\n            if (level >= Level.INHERIT_EXTEND) {\r\n                const inhfldNode = LogicElementUtil.getInnerNode(node.parent?.parent as TreeUtil.ElementNode, 'inhfld-mng');\r\n                if (inhfldNode != null) {\r\n                    const fieldMng = (inhfldNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeFieldManager;\r\n                    fieldMng.fields.forEach(field => {\r\n                        const fieldName = (field.data as LogicUtil.NodeParamItem).name;\r\n                        fieldKeys.push(fieldName);\r\n                    });\r\n                }\r\n            }\r\n            // フィールドキーにExtendパラメータを追加\r\n            if (level === Level.INHERIT_SEND) {\r\n                const extendWrap = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'extend-mng') as LogicUtil.WrapElement;\r\n                const extendElement = extendWrap.data as LogicUtil.NodeParamManager;\r\n                //Extendにloop_countのパラメータがある場合\r\n                if (extendElement.params.find(\r\n                    param => (param.data as LogicUtil.NodeParamItem).name === ParamUtil.ExtendParamType.LOOP_COUNT\r\n                ) != undefined) {\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_COUNT);\r\n                    fieldKeys.push(ParamUtil.ExtendParamType.LOOP_ITERATE);\r\n                }\r\n            }\r\n        }\r\n        return [argumentList, fieldKeys];\r\n    }, [node]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const paramNameList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (item === 'var') num++;\r\n        });\r\n\r\n        if (varFormList.length < num) {\r\n            const addNum = num - varFormList.length;\r\n            for (let i = 0; i < addNum; i++) varFormList.push({\r\n                inputType: { value: 'direct', errors: [] },\r\n                value: { value: '', errors: [] }\r\n            });\r\n            setVarFormList(varFormList.slice());\r\n        } else if (varFormList.length > num) {\r\n            const delNum = varFormList.length - num;\r\n            for (let i = 0; i < delNum; i++) varFormList.splice(varFormList.length - delNum, delNum);\r\n            setVarFormList(varFormList.slice());\r\n        }\r\n    }, [formulaItems]);\r\n\r\n    /** 「(」の数-「)」の数 */\r\n    const parenthesisBalance = useMemo(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (['(', 'rand(', 'integer('].includes(item)) num++;\r\n            else if (item === ')') num--;\r\n        });\r\n        return num;\r\n    }, [formulaItems]);\r\n\r\n    /** 値の入力フォームのJSX */\r\n    const formJsxList = useMemo(() => {\r\n        return varFormList.map((v, i) => {\r\n\r\n            const getValueForm = (): JSX.Element => {\r\n                const type = v.inputType.value as LogicUtil.ParamInputType;\r\n                if (type === 'direct') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isNumber\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                } else {\r\n                    let list: string[] = [];\r\n                    if (type === 'argument') {\r\n                        list = argumentList;\r\n                    } else if (type === 'field') {\r\n                        list = fieldKeyList;\r\n                    } else if (type === 'self') {\r\n                        list = ParamUtil.SelfParams;\r\n                    } else if (type === 'constant') {\r\n                        list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                    }\r\n                    return (\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            list={list.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n            return <FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={`var_${i}`}\r\n                labelWidth={90}\r\n                marginTop={i === 0 ? 4 : 0}\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        checkable={v.inputType}\r\n                        width={142}\r\n                        isReadOnly={!isModify}\r\n                        setCheckable={(checkable) => {\r\n                            varFormList[i].inputType = checkable;\r\n                            if (isModify) {\r\n                                varFormList[i].value.value = checkable.value === 'direct' ? '0' : '';\r\n                            }\r\n                            setVarFormList(varFormList.slice());\r\n                        }}\r\n                        list={LogicUtil.ParamInputTypes.filter(item => {\r\n                            switch (item) {\r\n                                case 'direct':\r\n                                case 'constant':\r\n                                case 'argument': return true;\r\n                                case 'field': return level >= Level.INITIAL;\r\n                                case 'self': return level >= Level.INHERIT_FIELD;\r\n                            }\r\n                        }).map(item => {\r\n                            return { value: item, labelText: item };\r\n                        })}\r\n                    />\r\n                    {getValueForm()}\r\n                </>}\r\n            />;\r\n        });\r\n    }, [varFormList, isModify]);\r\n\r\n    const getFormulaJsx = () => {\r\n        let num = 0;\r\n        const jsxList: JSX.Element[] = [];\r\n        formulaItems.forEach((item) => {\r\n            if (jsxList.length > 0) {\r\n                jsxList.push(<span key={jsxList.length}>&nbsp;</span>);\r\n            }\r\n            if (item === 'var') {\r\n                jsxList.push(<_Var key={jsxList.length}>{`$\\{var_${num}}`}</_Var>);\r\n                num++;\r\n            } else {\r\n                jsxList.push(<_Sig key={jsxList.length}>{item}</_Sig>);\r\n            }\r\n        });\r\n        return jsxList;\r\n    }\r\n\r\n    const isLastVar = () => formulaItems.length > 0 && ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const isFormulaOK = parenthesisBalance === 0 && varFormList.length > 0 &&\r\n        ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const hasFormError = !isFormulaOK || varFormList.find(varForm => varForm.value.errors.length > 0) != undefined;\r\n\r\n\r\n    const getFormulaItem = (label: string, width: number, isEnable: boolean, value: string) => {\r\n        return {\r\n            label, width, isEnable,\r\n            callback: () => {\r\n                formulaItems.push(value);\r\n                setFormulaItems(formulaItems.slice());\r\n            }\r\n        };\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeParamItem = {\r\n                    name: name.value,\r\n                    formulaItems: formulaItems.slice(),\r\n                    values: varFormList.map(varForm => {\r\n                        return {\r\n                            type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                            value: varForm.value.value\r\n                        }\r\n                    })\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n            }}\r\n            isInputOK={parenthesisBalance === 0 && !hasFormError && name.errors.length === 0}\r\n            modifyRegist={() => {\r\n                const data = wrap.data as LogicUtil.NodeParamItem;\r\n                data.formulaItems = formulaItems.slice();\r\n                data.values = varFormList.map(varForm => {\r\n                    return {\r\n                        type: varForm.inputType.value as LogicUtil.ParamInputType,\r\n                        value: varForm.value.value\r\n                    }\r\n                });\r\n                if (isField) {\r\n                    const prevName = data.name;\r\n                    data.name = name.value;\r\n                    if (prevName !== name.value) {\r\n                        syncFieldName(node.parent as TreeUtil.ElementNode, prevName, name.value);\r\n                    }\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify || !isField}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => {\r\n                                        const list = paramNameList.filter(name => {\r\n                                            // 自分自身のパラメータ名を除外\r\n                                            if (wrap.data != null) {\r\n                                                return (wrap.data as LogicUtil.NodeParamItem).name !== name;\r\n                                            }\r\n                                            return true;\r\n                                        });\r\n                                        return !list.includes(value);\r\n                                    },\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('+', 50, isModify && isLastVar(), '+'),\r\n                        getFormulaItem('-', 50, isModify && isLastVar(), '-'),\r\n                        getFormulaItem('*', 50, isModify && isLastVar(), '*'),\r\n                        getFormulaItem('/', 50, isModify && isLastVar(), '/'),\r\n                        getFormulaItem('%', 50, isModify && isLastVar(), '%'),\r\n                        getFormulaItem('(', 35, isModify && !isLastVar(), '('),\r\n                        getFormulaItem(')', 35, isModify && isLastVar() && parenthesisBalance > 0, ')'),\r\n                        {\r\n                            label: 'del',\r\n                            width: 60,\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            callback: () => {\r\n                                formulaItems.splice(formulaItems.length - 1, 1);\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {!isCondition ? <></> : (\r\n                    <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                        buttons={[\r\n                            getFormulaItem('<', 50, isModify && isLastVar(), '<'),\r\n                            getFormulaItem('<=', 50, isModify && isLastVar(), '<='),\r\n                            getFormulaItem('=', 50, isModify && isLastVar(), '='),\r\n                            getFormulaItem('>=', 50, isModify && isLastVar(), '>='),\r\n                            getFormulaItem('>', 50, isModify && isLastVar(), '>'),\r\n                            getFormulaItem('&&', 50, isModify && isLastVar(), '&&'),\r\n                            getFormulaItem('||', 50, isModify && isLastVar(), '||'),\r\n                        ]}\r\n                    />\r\n                )}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getFormulaItem('var', 70, isModify && !isLastVar(), 'var'),\r\n                        getFormulaItem('rand', 80, isModify && !isLastVar(), 'rand('),\r\n                        getFormulaItem('integer', 80, isModify && !isLastVar(), 'integer('),\r\n                        {\r\n                            label: 'clear',\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            width: 90,\r\n                            callback: () => {\r\n                                setFormulaItems([]);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_Formula\r\n                    isInvalid={!isFormulaOK}\r\n                >{getFormulaJsx()}</_Formula>\r\n                {formJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify && isField}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'field', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeArgumentItem;\r\n                                const refers = getFieldRefers(node, param.name);\r\n                                if (refers.length === 0) {\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {!isField ? <></> : LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorParamItem;\r\n\r\n/**\r\n * ノードの変数を参照している箇所のリストを返す。\r\n * @param node 変数のノード\r\n * @param argName 変数名\r\n * @returns 参照パラメータリスト\r\n */\r\nexport const getFieldRefers = (node: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const callback = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const param = wrap.data as LogicUtil.NodeParamItem;\r\n            param.values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === argName) {\r\n                    refers.push(param.name);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    LogicElementUtil.searchVariableReferInFormula(node, callback);\r\n\r\n    return refers;\r\n}\r\n\r\n/**\r\n * フィールド名の変更に伴い、式で参照している変数を同期する\r\n * @param mngNode ノード\r\n */\r\nexport const syncFieldName = (mngNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'field' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const type = (mngNode.data as LogicUtil.WrapElement).type;\r\n    if (type === 'field-mng') {\r\n        const logic = (mngNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeLogicItem;\r\n\r\n        const visualMng = logic.mngs.find(mng => mng.type === 'visual-mng');\r\n        if (visualMng != undefined) {\r\n            syncFormula((visualMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const behaviorMng = logic.mngs.find(mng => mng.type === 'behavior-mng');\r\n        if (behaviorMng != undefined) {\r\n            syncFormula((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n        }\r\n        const inhMng = logic.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                // Inherit配下のField要素のチェック\r\n                if (inhfld != null) {\r\n                    syncFormula((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                }\r\n                // Extend要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                syncFormula((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    } else if (type === 'inhfld-mng') {\r\n        const inheritWrap = mngNode.parent?.data as LogicUtil.WrapElement;\r\n\r\n        // Extend要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n        // Send要素のチェック\r\n        syncFormula((LogicElementUtil.getInnerWrap(inheritWrap, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n    }\r\n}\r\n\r\nconst _Formula = styled.div<{\r\n    isInvalid: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 12px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    overflow-wrap: break-word;\r\n    height: 100px;//calc(100% - 4px);\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    background-color: #ffffff8b;\r\n    ${props => !props.isInvalid ? '' : css`\r\n        background-color: #ffe8628a;\r\n    `}\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    padding: 0 0 0 4px;\r\n    vertical-align: top;\r\n    margin: 5px 0 0 6px;\r\n`;\r\nconst _Var = styled.span`\r\n    color: #e70013;\r\n`;\r\nconst _Sig = styled.span`\r\n    color: #3333339d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorBehiviorMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [isVector, hasDecayParam, hasGravityParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.BehaviorParamType.VEC_X),\r\n            list.includes(ParamUtil.ModulateParamType.DECAY_RATE),\r\n            list.includes(ParamUtil.ModulateParamType.GRAVITY_VAL)\r\n        ]\r\n    }, [node]);\r\n\r\n    const exchangeElements = (flag: boolean, listPos: number,\r\n        trueParamElements: LogicUtil.NodeParamItem[],\r\n        falseParamElements: LogicUtil.NodeParamItem[]\r\n    ) => {\r\n        const size = (flag ? trueParamElements : falseParamElements).length;\r\n        LogicElementUtil.removeChild(node, listPos, size);\r\n\r\n        (flag ? trueParamElements : falseParamElements).forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    const exchangeVectorMethod = () => {\r\n        exchangeElements(!isVector, 3,\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_X, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_Y, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ],\r\n            [\r\n                { name: ParamUtil.BehaviorParamType.VEC_RAD, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n                { name: ParamUtil.BehaviorParamType.VEC_LEN, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] },\r\n            ]\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            mng.params.splice(listPos, size);\r\n            node.children.splice(listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                mng.params.splice(listPos + i, 0, wrap);\r\n                const newNode = TreeUtil.createNode(wrap, node);\r\n                node.children.splice(listPos + i, 0, newNode);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Vector method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Direction method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={!isVector}\r\n                            callback={exchangeVectorMethod}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"modulate\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Decay'}\r\n                            width={300}\r\n                            isUse={hasDecayParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDecayParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_RATE,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.9' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.DECAY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Gravity'}\r\n                            width={300}\r\n                            isUse={hasGravityParam}\r\n                            callback={() => {\r\n                                toggleElements(hasGravityParam, !hasDecayParam ? 5 : 7, [\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_VAL,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0.2' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.ModulateParamType.GRAVITY_LIMIT,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorBehiviorMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\ntype Medhod = 'blank' | 'particle' | 'snake'\r\n\r\nconst EditorVisualMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n\r\n    const [drawMethod, hasDisappearParam, hasShrinkParam, hasFlashParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        let drawMethod: Medhod = 'blank';\r\n        if(list.length > 0) {\r\n            drawMethod = list.includes(ParamUtil.VisualParamType.THICKNESS) ? 'snake' : 'particle';\r\n        }\r\n        return [\r\n            drawMethod,\r\n            list.includes(ParamUtil.EffectParamType.DISAPPEAR_START),\r\n            list.includes(ParamUtil.EffectParamType.SHRINK_START),\r\n            list.includes(ParamUtil.EffectParamType.FLASH_APPEAR_FRAME)\r\n        ]\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElements = (hasNode: boolean, listPos: number, paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, size);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            paramElements.forEach((data, i) => {\r\n                const wrap: LogicUtil.WrapElement = {\r\n                    type: 'param-item',\r\n                    data\r\n                };\r\n                LogicElementUtil.insertChild(wrap, node, listPos + i);\r\n            });\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    const addElements = (paramElements: LogicUtil.NodeParamItem[]) => {\r\n        const size = paramElements.length;\r\n        paramElements.forEach((data, i) => {\r\n            const wrap: LogicUtil.WrapElement = {\r\n                type: 'param-item',\r\n                data\r\n            };\r\n            LogicElementUtil.insertChild(wrap, node, i);\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n    const removeElements = (elementNameList: string[]) => {\r\n        const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager;\r\n        elementNameList.forEach((name) => {\r\n            mng.params.forEach((param, i) => {\r\n                if((param.data as LogicUtil.NodeParamItem).name === name) {\r\n                    LogicElementUtil.removeChild(node, i, 1);\r\n                }\r\n            });\r\n        });\r\n        setFocusNode({ ...node });\r\n        invalidate();\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"method\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam || hasFlashParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'None'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'blank'}\r\n                            callback={() => {\r\n                                mng.params.length = 0;\r\n                                node.children.length = 0;\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Snake Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'snake'}\r\n                            callback={() => {\r\n                                removeElements([\r\n                                    ParamUtil.VisualParamType.RADIUS\r\n                                ]);\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.THICKNESS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '10' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Particle Method'}\r\n                            width={300}\r\n                            isRelation\r\n                            isUse={drawMethod === 'particle'}\r\n                            callback={() => {\r\n                                addElements([\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.RADIUS,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '20' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_R,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_G,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_B,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.VisualParamType.COLOR_A,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '255' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"effect\"\r\n            isEnable={!isModify && drawMethod !== 'blank'}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Disappear'}\r\n                            width={300}\r\n                            isUse={hasDisappearParam}\r\n                            callback={() => {\r\n                                toggleElements(hasDisappearParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.DISAPPEAR_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!hasFlashParam}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Shrink'}\r\n                            width={300}\r\n                            isUse={hasShrinkParam}\r\n                            callback={() => {\r\n                                toggleElements(hasShrinkParam, !hasDisappearParam ? 5 : 6, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.SHRINK_START,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '0' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={!(hasShrinkParam || hasDisappearParam)}\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Flash'}\r\n                            width={300}\r\n                            isUse={hasFlashParam}\r\n                            callback={() => {\r\n                                toggleElements(hasFlashParam, 5, [\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_APPEAR_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                    {\r\n                                        name: ParamUtil.EffectParamType.FLASH_HIDE_FRAME,\r\n                                        formulaItems: ['var'], values: [{ type: \"direct\", value: '1' }]\r\n                                    },\r\n                                ]);\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorVisualMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInheritConnMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeConnectManager;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Inherit',\r\n                        callback: () => {\r\n                            const wrap: LogicUtil.WrapElement = {\r\n                                type: 'connector',\r\n                                data: null\r\n                            }\r\n                            mng.inherits.push(wrap);\r\n                            const newNode = TreeUtil.createNode(wrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorInheritConnector = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, invalidate, setModify, isModify, removeSelf, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const [condition, setCondition] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [identify, setIdentify] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [method, setMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [depend, setDepend] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n        setMethod({ ...method, value: param.method });\r\n        setDepend({ ...depend, value: param.depend });\r\n        setIdentify({ ...identify, value: param.id });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n            // 派生識別名（自動命名）の初期値を取得\r\n            const defaultName = LogicElementUtil.getNumberingOnPrefixName('id_', node.parent as TreeUtil.ElementNode);\r\n            setIdentify({ ...identify, value: defaultName });\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const isCreate = method.value === 'create';\r\n\r\n    const hasFieldNode = useMemo(() => {\r\n        return LogicElementUtil.getInnerNode(node, 'inhfld-mng') != null;\r\n    }, [node]);\r\n\r\n    /** 引用するロジックリスト */\r\n    const logicList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return inheritMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    /** 同階層の既存のインヘリットIDを取得（重複チェックに使用） */\r\n    const idList = useMemo(() => {\r\n        return LogicElementUtil.getExistNameList(node);\r\n    }, [node]);\r\n\r\n    const initConnectorNode = (param: LogicUtil.NodeInheritConnector) => {\r\n        param.mngs = [];\r\n        node.children = [];\r\n        param.mngs.push({\r\n            type: 'extend-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        param.mngs.push({\r\n            type: 'send-mng',\r\n            data: {\r\n                params: []\r\n            } as LogicUtil.NodeParamManager\r\n        });\r\n        if (isCreate) {\r\n            param.mngs.push({\r\n                type: 'inherit-logic',\r\n                data: {\r\n                    mngs: LogicElementUtil.getDefaultLogicMngs()\r\n                } as LogicUtil.NodeInheritItem\r\n            });\r\n        }\r\n        wrap.data = param;\r\n\r\n        param.mngs.forEach(mng => {\r\n            const newNode = TreeUtil.createNode(mng, node);\r\n            const data = (newNode.data as LogicUtil.WrapElement);\r\n            switch (data.type) {\r\n                case 'inherit-logic': {\r\n                    LogicElementUtil.syncTreeElementFromWrap(newNode);\r\n                } break;\r\n                case 'send-mng': {\r\n                    const connector = (newNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n                    if (connector.method === 'depend') {\r\n                        console.log('initSendParams');\r\n                        initSendParams(newNode, rootData);\r\n                    }\r\n                } break;\r\n            }\r\n            node.children.push(newNode);\r\n        });\r\n    }\r\n\r\n    const getSendParamList = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement): string[] => {\r\n        const connector = (sendNode.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = inheritMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = (sendNode: TreeUtil.ElementNode, rootData: LogicUtil.WrapElement) => {\r\n        const sendParamList = getSendParamList(sendNode, rootData);\r\n        // console.log(sendParamList);\r\n        const wrap = sendNode.data as LogicUtil.WrapElement;\r\n        const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n                sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 変数要素の有無を判定\r\n     */\r\n    const hasField = () => {\r\n        const fieldNode = LogicElementUtil.getInnerNode(node, 'inhfld-mng');\r\n        if(fieldNode == null) return false;\r\n        return fieldNode.children.length > 0;\r\n    }\r\n\r\n    const isDisable = wrap.data == null ? false : (wrap.data as LogicUtil.NodeInheritConnector).disable ?? false;\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[identify, method, depend]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeInheritConnector = {\r\n                    method: method.value as LogicUtil.InheritMethod,\r\n                    depend: depend.value,\r\n                    id: identify.value,\r\n                    mngs: []\r\n                };\r\n                initConnectorNode(param);\r\n                invalidate();\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                const isChange = param.method !== method.value || param.depend !== depend.value;\r\n                param.method = method.value as LogicUtil.InheritMethod;\r\n                param.depend = depend.value;\r\n                param.id = identify.value;\r\n                wrap.data = param;\r\n\r\n                if (isChange) {\r\n                    initConnectorNode(param);\r\n                }\r\n                invalidate();\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={method}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                // createが選択されたらdependを空にする\r\n                                if (checkable.value === 'create') {\r\n                                    setDepend({ ...depend, value: '' });\r\n                                }\r\n                                setMethod(checkable);\r\n                            }}\r\n                            list={LogicUtil.ConnectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Depend\"\r\n                    isEnabled={method.value === 'depend'}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={depend}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setDepend}\r\n                            list={logicList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            dependency={[method]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => {\r\n                                        return method.value !== 'depend' || ValidateUtil.checkRequired(value);\r\n                                    },\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Identify\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={identify}\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setIdentify}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 20),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !idList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={true}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        isEnable={!hasField()}\r\n                        callback={() => {\r\n                            toggleElement(\r\n                                hasFieldNode,\r\n                                0,\r\n                                {\r\n                                    type: 'inhfld-mng',\r\n                                    data: {\r\n                                        fields: []\r\n                                    } as LogicUtil.NodeFieldManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Disable'}\r\n                        width={300}\r\n                        isUse={isDisable}\r\n                        isEnable={!isModify}\r\n                        callback={() => {\r\n                            const data = (wrap.data as LogicUtil.NodeInheritConnector);\r\n                            if (isDisable) {\r\n                                data.disable = undefined;\r\n                            } else {\r\n                                data.disable = true;\r\n                            }\r\n                            invalidate();\r\n                        }}\r\n                    />}\r\n                />\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'inherit', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Edit local',\r\n                            isEnable: !isModify && !isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Create a clone from the depended inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                                                const logicList = logicMng.defs.map(def => def.data as LogicUtil.NodeLogicItem);\r\n                                                // ディペンドしているロジックを取得\r\n                                                const dependLogic = logicList.find(inherit => inherit.name === depend.value);\r\n                                                if (dependLogic != undefined) {\r\n                                                    const cloneLogic = JSON.parse(JSON.stringify(dependLogic)) as LogicUtil.NodeLogicItem;\r\n                                                    const connectItem: LogicUtil.NodeInheritItem = {\r\n                                                        mngs: cloneLogic.mngs\r\n                                                    };\r\n                                                    const newWrap: LogicUtil.WrapElement = {\r\n                                                        type: 'inherit-logic',\r\n                                                        data: connectItem\r\n                                                    };\r\n                                                    const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                                                    // 子要素の展開\r\n                                                    newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                    const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                    param.method = 'create';\r\n                                                    param.depend = '';\r\n                                                    mappingForm();\r\n                                                }\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Detach global',\r\n                            isEnable: !isModify && isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Detach a clone from the this inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                let rootNode = node;\r\n                                                while (rootNode.parent != null) rootNode = rootNode.parent;\r\n                                                const inheritNode = node.children.find(el => (el.data as LogicUtil.WrapElement).type === 'inherit-logic');\r\n                                                const logicMngNode = rootNode.children.find(el => (el.data as LogicUtil.WrapElement).type === 'logic-mng');\r\n                                                if (logicMngNode == undefined || inheritNode == undefined) return;\r\n                                                const inherit = (inheritNode.data as LogicUtil.WrapElement).data;\r\n                                                const clone = JSON.parse(JSON.stringify((inherit))) as LogicUtil.NodeInheritItem;\r\n                                                // ロジック名（自動命名）を取得\r\n                                                const defaultName = LogicElementUtil.getNumberingOnPrefixName('clone_inherit_', logicMngNode);\r\n                                                const logicItem: LogicUtil.NodeLogicItem = {\r\n                                                    ...clone,\r\n                                                    name: defaultName\r\n                                                };\r\n                                                const newWrap: LogicUtil.WrapElement = {\r\n                                                    type: 'logic-item',\r\n                                                    data: logicItem\r\n                                                };\r\n\r\n                                                // ロジックマネージャに追加\r\n                                                const newNode = LogicElementUtil.addChild(newWrap, logicMngNode);\r\n                                                // 子要素の展開\r\n                                                newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n\r\n                                                // 自身（コネクタ）からインヘリット要素を削除\r\n                                                LogicElementUtil.removeChild(node, 2, 1);\r\n\r\n                                                const param = wrap.data as LogicUtil.NodeInheritConnector;\r\n                                                param.method = 'depend';\r\n                                                param.depend = logicItem.name;\r\n                                                mappingForm();\r\n\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInheritConnector;","import styled from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport DrawUtil from \"../../../graphic/drawUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\n\r\nnamespace LogicFormUtil {\r\n\r\n    export const buildPreviewForms = (\r\n        isReadOnly: boolean,\r\n        argumentList: LogicUtil.NodeSeedArgItem[],\r\n        formgrpList: LogicUtil.NodeFromGrpItem[],\r\n        formList: FormUtil.CheckableValue[],\r\n        setFormList: ((formList: FormUtil.CheckableValue[]) => void)\r\n    ): JSX.Element[] => {\r\n        const list: JSX.Element[] = [];\r\n        const usedGrps: string[] = [];\r\n        formList.forEach((form, i) => {\r\n            const argument = argumentList[i];\r\n            const formgrp = formgrpList.find(grp => grp.args.includes(argument.name));\r\n            if (formgrp != undefined) {\r\n                // 設定済みであれば追加しない\r\n                if (usedGrps.includes(formgrp.name)) return 1;\r\n                // 利用済みリストに追加\r\n                usedGrps.push(formgrp.name);\r\n                const targetForms: number[] = [];\r\n                argumentList.forEach((arg, j) => {\r\n                    if (formgrp.args.includes(arg.name)) {\r\n                        targetForms.push(j);\r\n                    }\r\n                });\r\n                const colorCode = DrawUtil.convertColorCodeFromRgba({\r\n                    r: Number(formList[targetForms[0]].value),\r\n                    g: Number(formList[targetForms[1]].value),\r\n                    b: Number(formList[targetForms[2]].value),\r\n                    a: 255\r\n                }).substring(0, 7);\r\n                // console.log(colorCode);\r\n                list.push(<div key={i}>\r\n                    <FormUtil.Record\r\n                        jsx={\r\n                            <_Message>{formgrp.name}: <_Type>color </_Type><_Range>({0} ～ {255} respectively)</_Range></_Message>\r\n                        }\r\n                    />\r\n                    <FormUtil.Record\r\n                        jsx={<>\r\n                            {targetForms.map((formIndex, j) => {\r\n                                return (\r\n                                    <FormUtil.TextField\r\n                                        key={formIndex}\r\n                                        width={72}\r\n                                        marginLeft={j === 0 ? 5 : 4}\r\n                                        isNumber\r\n                                        isReadOnly={isReadOnly}\r\n                                        checkable={formList[formIndex]}\r\n                                        setCheckable={() => {\r\n                                            setFormList(formList.slice());\r\n                                        }}\r\n                                        validates={[\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            },\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkNumberRange(value, argument.min, argument.max),\r\n                                                errorType: 'value'\r\n                                            }\r\n                                        ]}\r\n                                    />\r\n                                );\r\n                            })}\r\n                            <_Color type=\"color\" value={colorCode}\r\n                                disabled={isReadOnly}\r\n                                onChange={(value) => {\r\n                                    const rgba = DrawUtil.convertRgbaFromColorCode(value.target.value + 'ff');\r\n                                    if (rgba != null) {\r\n                                        formList[targetForms[0]].value = rgba.r.toString();\r\n                                        formList[targetForms[1]].value = rgba.g.toString();\r\n                                        formList[targetForms[2]].value = rgba.b.toString();\r\n                                    }\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                            />\r\n                        </>}\r\n                    />\r\n                </div>);\r\n            } else {\r\n                let labelName = argument.name;\r\n                if (argument.disp != undefined) labelName = argument.disp;\r\n                list.push(<div key={i}>\r\n                    <FormUtil.Record\r\n                        jsx={\r\n                            <_Message>{labelName}: <_Type>number </_Type><_Range>({argument.min} ～ {argument.max})</_Range></_Message>\r\n                        }\r\n                    />\r\n                    <FormUtil.Record\r\n                        jsx={<>\r\n                            <FormUtil.TextField\r\n                                width={142}\r\n                                marginLeft={6}\r\n                                isNumber\r\n                                isReadOnly={isReadOnly}\r\n                                step={argument.step}\r\n                                checkable={form}\r\n                                setCheckable={() => {\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, argument.min, argument.max),\r\n                                        errorType: 'value'\r\n                                    }\r\n                                ]}\r\n                            />\r\n                            <_Tsumami type=\"range\" value={Number(form.value)} min={argument.min} max={argument.max} step={argument.step}\r\n                                disabled={isReadOnly}\r\n                                onChange={(value) => {\r\n                                    formList[i] = { ...form, value: value.target.value };\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                            />\r\n                        </>}\r\n                    />\r\n                </div>);\r\n            }\r\n        });\r\n        return list;\r\n    }\r\n}\r\n\r\nexport default LogicFormUtil;\r\n\r\n\r\n\r\nconst _Message = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    overflow: hidden;\r\n    /* white-space: nowrap; */\r\n`;\r\n\r\nconst _Type = styled.span`\r\n    color: #c10000;\r\n    font-weight: 600;\r\n`;\r\nconst _Range = styled.span`\r\n    color: #423e84fb;\r\n`;\r\n\r\nconst _Tsumami = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 11px 0 0 6px;\r\n    width: calc(100% - 160px);\r\n`;\r\n\r\nconst _Color = styled.input`\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    margin: 3px 0 0 6px;\r\n    width: 100px;\r\n    height: 34px;\r\n`;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSendManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const isDepend = () => {\r\n        const conn = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n        return conn.method === 'depend';\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"template\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Connect Position',\r\n                            isEnable: !isDepend(),\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.ConnectParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Set Position',\r\n                            callback: () => {\r\n                                store.system.dialog = <SendTemplateDialog.SetParentPosition\r\n                                    node={node}\r\n                                    invalidate={invalidate}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSendManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFieldMng = () => {\r\n    const { invalidate, node, setFocusNode } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Field',\r\n                        callback: () => {\r\n                            // const newWrap: FactoryUtil.WrapNode = FactoryUtil.createParamWrap('field-item',\r\n                            //     { name: '', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                            // );\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'field-item',\r\n                                data: null\r\n                            };\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFieldMng;","import { useContext, useEffect, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ParamUtil from \"../../util/paramUtil\";\r\n\r\nconst EditorExtendMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [hasLoopParam, hasInvokeParam] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return ((el.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem).name as ParamUtil.ExtendParam;\r\n        });\r\n        return [\r\n            list.includes(ParamUtil.ExtendParamType.LOOP_COUNT),\r\n            list.includes(ParamUtil.ExtendParamType.INVOKE)\r\n        ]\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n    }, [node]);\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Loop'}\r\n                            width={300}\r\n                            isUse={hasLoopParam}\r\n                            callback={() => {\r\n                                toggleElement(hasLoopParam, 0, {\r\n                                    type: 'param-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.LOOP_COUNT,\r\n                                        formulaItems: ['var'],\r\n                                        values: [{ type: 'direct', value: '1' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Invoke'}\r\n                            width={300}\r\n                            isUse={hasInvokeParam}\r\n                            callback={() => {\r\n                                toggleElement(hasInvokeParam, hasLoopParam ? 1 : 0, {\r\n                                    type: 'condition-item',\r\n                                    data: {\r\n                                        name: ParamUtil.ExtendParamType.INVOKE,\r\n                                        formulaItems: ['var', '=', 'var'],\r\n                                        values: [{ type: 'direct', value: '0' }, { type: 'direct', value: '0' }]\r\n                                    } as LogicUtil.NodeParamItem\r\n                                });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorExtendMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\n\r\nconst EditorSeedItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [entry, setEntry] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [permit, setPermit] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setEntry({ ...entry, value: param.entry });\r\n        setPermit({ ...permit, value: param.permit })\r\n    };\r\n\r\n    /** 既存のシード名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    // 引用するロジックリスト\r\n    const logicNameList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n        const logicMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n        return logicMng.defs.map(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    const getSendParamList = (): string[] => {\r\n        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n        const logicMng = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n        const dependItem = logicMng.defs.find(wrap => {\r\n            return (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry;\r\n        });\r\n        if (dependItem != undefined) {\r\n            const logicWrap = dependItem;\r\n            const argWrap = (logicWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const initSendParams = () => {\r\n        const sendParamList = getSendParamList();\r\n        const sendNode = LogicElementUtil.getInnerNode(node, 'interface-mng', 'seedsend-mng') as TreeUtil.ElementNode;\r\n        const params = ((sendNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamManager).params;\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as LogicUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = LogicElementUtil.createParamWrap('seedsend-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n            }\r\n        });\r\n        LogicElementUtil.syncTreeElementFromWrap(sendNode);\r\n    }\r\n\r\n    const getDefaultSeedMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'interface-mng',\r\n                data: {\r\n                    mngs: [\r\n                        {\r\n                            type: 'seedarg-mng',\r\n                            data: {\r\n                                args: []\r\n                            } as LogicUtil.NodeSeedArgManager\r\n                        },\r\n                        {\r\n                            type: 'seedsend-mng',\r\n                            data: {\r\n                                params: []\r\n                            } as LogicUtil.NodeSeedSendManager\r\n                        },\r\n                    ]\r\n                } as LogicUtil.NodeInterfaceMng\r\n            },\r\n            {\r\n                type: 'thumbnail-mng',\r\n                data: {\r\n                    items: []\r\n                } as LogicUtil.NodeThumnailManager\r\n            },\r\n            {\r\n                type: 'sample-mng',\r\n                data: {\r\n                    samples: []\r\n                } as LogicUtil.NodeSampleManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, entry, permit]}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSeedItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    entry: entry.value,\r\n                    permit: permit.value as LogicUtil.PermitType,\r\n                    mngs: getDefaultSeedMngs()\r\n                };\r\n                wrap.data = element;\r\n\r\n                LogicElementUtil.syncTreeElementFromWrap(node);\r\n                // 参照しているロジックの引数をSendに設定\r\n                initSendParams();\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedItem;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.permit = permit.value as LogicUtil.PermitType;\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 24),\r\n                                    errorType: \"length\"\r\n                                },\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Entry\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={entry}\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setEntry}\r\n                            list={logicNameList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Permit\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={permit}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setPermit}\r\n                            list={LogicUtil.PermitTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'seed', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedItem;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext as LogicTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorThumbnailMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(LogicTreeContext);\r\n    const mng = (node.data as LogicUtil.WrapElement).data as LogicUtil.NodeThumnailManager;\r\n\r\n    const hasSample = useMemo(() => {\r\n        const sampleMngNode = LogicElementUtil.getInnerNode(node.parent as TreeUtil.ElementNode, 'sample-mng') as TreeUtil.ElementNode;\r\n        return sampleMngNode.children.length as number > 0;\r\n    }, []);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={hasSample}\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Thumbnail',\r\n                        callback: () => {\r\n                            const newWrap: LogicUtil.WrapElement = {\r\n                                type: 'thumbnail-item',\r\n                                data: null\r\n                            }\r\n                            const newNode = LogicElementUtil.addChild(newWrap, node);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport Particle from \"../../../../graphic/particle\";\r\nimport PreviewUtil from \"../../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst WND_SIZE = 100;\r\n\r\nconst EditorThumbnailItem = () => {\r\n    const { rootData, node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n    const data = wrap.data as LogicUtil.NodeThumbnailItem;\r\n\r\n\r\n    const seedWrap = node.parent?.parent?.data as LogicUtil.WrapElement;\r\n    const sampleMng = LogicElementUtil.getInnerWrap(seedWrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n    const samples = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [urls, setUrls] = useState<string[]>([]);\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n        setName({ ...name, value: param.name });\r\n        setFrame({ ...frame, value: param.frame.toString() });\r\n    };\r\n    \r\n    /** 既存のサムネイル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n            setTimeout(() => {\r\n                const urls: string[] = [];\r\n                samples.forEach((sample, i) => {\r\n                    urls.push(getThumbnailURL(data.frame, i));\r\n                });\r\n                setUrls(urls);\r\n            }, 1);\r\n        }\r\n    }, [node]);\r\n\r\n    const getSeedValueMap = (sampleNo: number): PreviewUtil.ValueMap[] => {\r\n        const argMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedarg-mng')?.data as LogicUtil.NodeSeedArgManager;\r\n        const sendMng = LogicElementUtil.getInnerWrap(seedWrap, 'interface-mng', 'seedsend-mng')?.data as LogicUtil.NodeSeedSendManager;\r\n\r\n        const argMap: PreviewUtil.ValueMap[] = argMng.args.map((arg, i) => {\r\n            const name = (arg.data as LogicUtil.NodeSeedArgItem).name;\r\n            const value = samples[sampleNo].values[i];\r\n            return { name, value }\r\n        });\r\n        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n        return sendParams.map(item => {\r\n            return { name: item.name, value: PreviewUtil.convertParamsToValue(item.name, sendParams, argMap) ?? 0 }\r\n        });\r\n    }\r\n\r\n    const getThumbnailURL = (targetFrame: number, sampleNo: number) => {\r\n        console.log('create start!');\r\n        const owner: Particle.Instance[] = [];\r\n\r\n        let frameCnt = 0;\r\n        do {\r\n            if (frameCnt === 0) {\r\n                const seed = (node.parent?.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedItem;\r\n                const logicManager = (rootData.data as LogicUtil.NodeRoot).logicMng.data as LogicUtil.NodeLogicManager;\r\n                const logic = logicManager.defs.find(logic => (logic.data as LogicUtil.NodeLogicItem).name === seed.entry);\r\n                if (logic == undefined) break;\r\n\r\n                const sendValueMapList = getSeedValueMap(sampleNo);\r\n                owner.push(new Particle.Instance(\r\n                    PreviewUtil.buildLogicProps(owner, logic.data, rootData, sendValueMapList))\r\n                );\r\n            }\r\n\r\n            if (frameCnt === targetFrame) {\r\n                return CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                });\r\n            }\r\n\r\n            // パーティクルの更新\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                particle.update();\r\n            }\r\n\r\n            // 死滅したパーティクルの削除\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frameCnt > 500 || owner.length > 3000) break;\r\n            frameCnt++;\r\n        } while (owner.length > 0);\r\n        return '';\r\n    }\r\n\r\n    const pictureJsxList = useMemo(() => {\r\n        const sampleMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n        return sampleMng.samples.map((wrap, i) => {\r\n            const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n\r\n            const url = urls[i];\r\n            const imgJsx = url == undefined ? <></> : <_IMG src={urls[i]} />;\r\n            return (\r\n                <_SampleDiv key={i}>-\r\n                    <_SampleName>{sample.name}</_SampleName>\r\n                    <_CanvasDiv>\r\n                        {imgJsx}\r\n                    </_CanvasDiv>\r\n                </_SampleDiv>\r\n            );\r\n        });\r\n    }, [node, urls]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, frame]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeThumbnailItem = {\r\n                    name: name.value,\r\n                    frame: Number(frame.value),\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeThumbnailItem;\r\n                param.name = name.value;\r\n                param.frame = Number(frame.value);\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"preview\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {pictureJsxList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorThumbnailItem;\r\n\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactDetArgumentMng from \"../detail/logic/editorArgumentMng\";\r\nimport EditorArgumentItem from \"../detail/logic/editorArgumentItem\";\r\nimport FactDetSeedMng from \"../detail/seed/editorSeedMng\";\r\nimport EditorLogicMng from \"../detail/logic/editorLogicMng\";\r\nimport EditorLogicItem from \"../detail/logic/editorLogicItem\";\r\nimport EditorParamItem from \"../detail/logic/editorParamItem\";\r\nimport FactDetBehiviorMng from \"../detail/logic/editorBehiviorMng\";\r\nimport EditorVisualMng from \"../detail/logic/editorVisualMng\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport EditorInheritConnMng from \"../detail/logic/editorInheritConnMng\";\r\nimport EditorInheritConnector from \"../detail/logic/editorInheritConnector\";\r\nimport EditorSendManager from \"../detail/logic/editorSendManager\";\r\nimport EditorFieldMng from \"../detail/logic/editorFieldMng\";\r\nimport EditorExtendMng from \"../detail/logic/editorExtendMng\";\r\nimport EditorSeedItem from \"../detail/seed/editorSeedItem\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"./logicElementUtil\";\r\nimport EditorThumbnailMng from \"../detail/seed/editorThumbnailMng\";\r\nimport EditorThumbnailItem from \"../detail/seed/editorThumbnailItem\";\r\nimport EditorSampleItem from \"../detail/seed/editorSampleItem\";\r\nimport EditorSampleMng from \"../detail/seed/editorSampleMng\";\r\nimport EditorInterfaceManager from \"../detail/seed/editorInterfaceManager\";\r\nimport EditorSeedArgMng from \"../detail/seed/editorSeedArgMng\";\r\nimport EditorSeedArgItem from \"../detail/seed/editorSeedArgItem\";\r\nimport EditorSeedSendMng from \"../detail/seed/editorSeedSendMng\";\r\nimport EditorFormgrpItem from \"../detail/seed/editorFormgrpItem\";\r\nimport EditorFormgrpMng from \"../detail/seed/editorFormgrpMng\";\r\n\r\nnamespace LogicUtil {\r\n\r\n    export type DetailArgs = {\r\n        rootData: LogicUtil.WrapElement;\r\n        node: TreeUtil.ElementNode;\r\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\r\n        invalidate: () => void;\r\n        isModify: boolean;\r\n        setModify: (isModify: boolean) => void;\r\n        // setRootData: React.Dispatch<React.SetStateAction<WrapElement>>;\r\n        setRootData: (rootData: WrapElement) => void;\r\n        removeSelf: () => void;\r\n    }\r\n\r\n    /**\r\n     * 変数名チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkFieldName = (str: string) => {\r\n        // 1文字目が数値でないこと\r\n        const isNoHeadNumber = !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].\r\n            includes(str.substring(0, 1));\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyz_';\r\n        return isNoHeadNumber && ValidateUtil.checkIncludesChars(str, list);\r\n    }\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'seed-mng' |\r\n        'logic-mng' |\r\n        'seed-item' |\r\n        'logic-item' |\r\n        'argument-mng' |\r\n        'argument-item' |\r\n        'field-mng' |\r\n        'field-item' |\r\n        'visual-mng' |\r\n        'behavior-mng' |\r\n        'inhfld-mng' |\r\n        'extend-mng' |\r\n        'inherit-mng' |\r\n        'connector' |\r\n        'inherit-logic' |\r\n        'send-mng' |\r\n        'send-item' |\r\n        'param-item' |\r\n        'condition-item' |\r\n        'interface-mng' |\r\n        'sample-mng' |\r\n        'sample-item' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-mng' |\r\n        'thumbnail-item' |\r\n        'seedarg-mng' |\r\n        'seedsend-mng' |\r\n        'seedarg-item' |\r\n        'seedsend-item' |\r\n        'formgrp-mng' |\r\n        'formgrp-item'\r\n        ;\r\n\r\n    export const ArgTypes = ['number', 'color'] as const;\r\n    export type ArgumentType = typeof ArgTypes[number];\r\n\r\n    export const ParamInputTypes = ['direct', 'constant', 'argument', 'self', 'field'] as const;\r\n    export type ParamInputType = typeof ParamInputTypes[number];\r\n\r\n    export const ConnectTypes = ['create', 'depend'] as const;\r\n    export type InheritMethod = typeof ConnectTypes[number];\r\n\r\n    export const PermitTypes = ['develop', 'private', 'release'] as const;\r\n    export type PermitType = typeof PermitTypes[number];\r\n\r\n    export const FromGrpMedhods = ['color', 'list'] as const;\r\n    export type FromGrpMethod = typeof FromGrpMedhods[number];\r\n\r\n    export type ParamProps = {\r\n        type: ParamInputType;\r\n        value: string;\r\n    }\r\n\r\n    export type WrapElement = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        seedMng: WrapElement;\r\n        logicMng: WrapElement;\r\n    }\r\n    export type NodeSeedManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicManager = {\r\n        defs: WrapElement[];\r\n    }\r\n    export type NodeLogicItem = {\r\n        name: string;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInterfaceMng = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeInheritItem = {\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeParamManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeParamItem = {\r\n        name: string;\r\n        formulaItems: string[];\r\n        values: ParamProps[];\r\n    }\r\n\r\n    export type NodeArgumentItem = {\r\n        name: string;\r\n        valueType: ArgumentType;\r\n    }\r\n    export type NodeThumbnailItem = {\r\n        name: string;\r\n        frame: number;\r\n    }\r\n    export type NodeArgumentManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeFieldManager = {\r\n        fields: WrapElement[];\r\n    }\r\n    export type NodeSampleManager = {\r\n        samples: WrapElement[];\r\n    }\r\n    export type NodeSampleItem = {\r\n        name: string;\r\n        values: number[];\r\n    }\r\n\r\n    // export type NodeExtendManager = {\r\n    //     mngs: WrapElement[];\r\n    // }\r\n    export type NodeConnectManager = {\r\n        inherits: WrapElement[];\r\n    }\r\n    export type NodeInheritConnector = {\r\n        method: InheritMethod;\r\n        depend: string;\r\n        id: string;\r\n        disable?: boolean;\r\n        mngs: WrapElement[];\r\n    }\r\n\r\n    export type NodeSeedItem = {\r\n        name: string;\r\n        disp?: string;\r\n        entry: string;\r\n        permit: PermitType;\r\n        mngs: WrapElement[];\r\n    }\r\n    export type NodeThumnailManager = {\r\n        items: WrapElement[];\r\n    }\r\n    export type NodeSeedArgManager = {\r\n        args: WrapElement[];\r\n    }\r\n    export type NodeSeedSendManager = {\r\n        params: WrapElement[];\r\n    }\r\n    export type NodeSeedArgItem = {\r\n        name: string;\r\n        disp?: string;\r\n        min: number;\r\n        max: number;\r\n        step: number;\r\n        defval: number | undefined;\r\n        isPosX?: boolean;\r\n    }\r\n    export type NodeFromgrpManager = {\r\n        defines: WrapElement[];\r\n    }\r\n    export type NodeFromGrpItem = {\r\n        name: string;\r\n        method: FromGrpMethod;\r\n        args: string[];\r\n    }\r\n\r\n    const COLOR_ROOT = '#a1a1a1';\r\n    const COLOR_METHOD = '#cca67b';\r\n    const COLOR_MNG = '#37a2bd';\r\n    const COLOR_LIST = '#b85f5f';\r\n    const COLOR_ITEM = '#ae628c';\r\n    const COLOR_DISABLE = '#685b79';\r\n    const COLOR_PARAM = '#8dae62';\r\n    const COLOR_FIELD = '#cec256';\r\n    const COLOR_THUMBNAIL = '#8283be';\r\n    const COLOR_CONDITION = '#56ce7e';\r\n\r\n    export const getNodeDisplayJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapElement;\r\n        switch (wrap.type) {\r\n            case 'root': {\r\n                return <_Category backgroundColor={COLOR_ROOT}>Library</_Category>;\r\n            }\r\n            case 'seed-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Seed Manager</_Category>;\r\n            }\r\n            case 'logic-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Logic Manager</_Category>;\r\n            }\r\n            case 'visual-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Visual</_Category>;\r\n            }\r\n            case 'extend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Extend</_Category>;\r\n            }\r\n            case 'seed-item': {\r\n                let detailJsx = <>...</>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedItem;\r\n                    detailJsx = <span>{data.name}&nbsp;<_Span color=\"#ffe89ba6\">entry:&nbsp;</_Span><_Field>{data.entry}</_Field></span>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Seed</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                    \r\n                </>;\r\n            }\r\n            case 'logic-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Logic</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-logic': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Logic</_Category>;\r\n            }\r\n            case 'argument-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'inhfld-mng':\r\n            case 'field-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Field Manager</_Category>;\r\n            }\r\n            case 'behavior-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Behavior</_Category>;\r\n            }\r\n            case 'inherit-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Inherit Manager</_Category>;\r\n            }\r\n            case 'connector': {\r\n                let detailJsx = <span>...</span>;\r\n                let color = COLOR_ITEM;\r\n                let isDisable = false;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeInheritConnector;\r\n                    detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}</_Span></span>;\r\n                    if (data.method === 'depend') {\r\n                        detailJsx = <span>{data.id}&nbsp;<_Span color=\"#ffe89ba6\">{data.method}:&nbsp;</_Span><_Field>{data.depend}</_Field></span>;\r\n                    }\r\n                    if (data.disable ?? false) {\r\n                        color = COLOR_DISABLE;\r\n                        isDisable = true;\r\n                    }\r\n                }\r\n                return (<>\r\n                    <_Category backgroundColor={color} isDisable={isDisable}>Inherit</_Category>\r\n                    {detailJsx == undefined ? <></> : <_EditableValue>{detailJsx}</_EditableValue>}\r\n                </>);\r\n            }\r\n            // パラメータ要素\r\n            case 'param-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_PARAM}>Param<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 条件要素\r\n            case 'condition-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_CONDITION}>Condition<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            // 変数要素\r\n            case 'field-item': {\r\n                let nameJsx = <span>...</span>;\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeParamItem;\r\n                    nameJsx = <_Detail>&nbsp;[{data.name}]</_Detail>;\r\n                    let result: JSX.Element[] = [];\r\n                    let varCnt = 0;\r\n                    data.formulaItems.forEach((formula, i) => {\r\n                        let str = <_Signature key={i}>{formula}</_Signature>;\r\n                        if (formula === 'var') {\r\n                            const v = data.values[varCnt];\r\n                            if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                            else str = <span key={i}>{v.value}</span>;\r\n                            varCnt++;\r\n                        }\r\n                        result.push(str);\r\n                    });\r\n                    detailJsx = <>{result}</>;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Field{nameJsx}</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'argument-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeArgumentItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.valueType})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'send-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'thumbnail-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Thumnail Manager</_Category>;\r\n            }\r\n            case 'thumbnail-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeThumbnailItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.frame})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_THUMBNAIL}>Thumbnail</_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'sample-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Preset Manager</_Category>;\r\n            }\r\n            case 'sample-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSampleItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Preset</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'interface-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Interface</_Category>;\r\n            }\r\n            case 'seedarg-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'seedarg-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeSeedArgItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.min}～{data.max})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_FIELD}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'seedsend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n            case 'formgrp-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Group Manager</_Category>;\r\n            }\r\n            case 'formgrp-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeFromGrpItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.method})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Group<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n        }\r\n        return <_Category backgroundColor={'#ffffff'}>XXXXX</_Category>;\r\n    }\r\n\r\n    export const getTypeName = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return '';\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return 'Root';\r\n            case 'seed-mng': return 'Seed Manager';\r\n            case 'logic-mng': return 'Logic Manager';\r\n            case 'seed-item': return 'Seed Item';\r\n            case 'logic-item': return 'Logic Item';\r\n            case 'argument-mng': return 'Argument Manager';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'Field Manager';\r\n            case 'field-item': return 'Field Item';\r\n            case 'visual-mng': return 'Visual Manager';\r\n            case 'seedarg-item':\r\n            case 'argument-item': return 'Argument Item';\r\n            case 'extend-mng': return 'Extend Manager';\r\n            case 'behavior-mng': return 'Behavior Manager';\r\n            case 'inherit-mng': return 'Inherit Manager';\r\n            case 'connector': return 'Inherit Connector';\r\n            case 'inherit-logic': return 'Inherit Logic';\r\n            case 'send-mng': return 'Send Manager';\r\n            case 'send-item': return 'Send Item';\r\n            case 'param-item': return 'Param Item';\r\n            case 'condition-item': return 'Condition Item';\r\n            case 'interface-mng': return 'Interface Manager';\r\n            case 'thumbnail-mng': return 'Thumbnail Manager';\r\n            case 'thumbnail-item': return 'Thumbnail Item';\r\n            case 'sample-mng': return 'Preset Manager';\r\n            case 'sample-item': return 'Preset Item';\r\n            case 'seedarg-mng': return 'Argument Manager';\r\n            case 'seedsend-mng': return 'Send';\r\n            case 'formgrp-mng': return 'Group Manager';\r\n            case 'formgrp-item': return 'Group Item';\r\n        }\r\n    }\r\n\r\n    export const getDetailComponent = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return <></>;\r\n        const type = (node.data as WrapElement).type;\r\n        switch (type) {\r\n            case 'root': return <></>;\r\n            case 'seed-mng': return <FactDetSeedMng />;\r\n            case 'logic-mng': return <EditorLogicMng />;\r\n            case 'seed-item': return <EditorSeedItem />;\r\n            case 'logic-item': return <EditorLogicItem />;\r\n            case 'argument-mng': return <FactDetArgumentMng />;\r\n            case 'argument-item': return <EditorArgumentItem />;\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return <EditorFieldMng />;\r\n            case 'visual-mng': return <EditorVisualMng />;\r\n            case 'extend-mng': return <EditorExtendMng />;\r\n            case 'behavior-mng': return <FactDetBehiviorMng />;\r\n            case 'inherit-mng': return <EditorInheritConnMng />;\r\n            case 'connector': return <EditorInheritConnector />;\r\n            case 'inherit-logic': return <EditorLogicItem />;\r\n            case 'send-mng': return <EditorSendManager />;\r\n            case 'field-item':\r\n            case 'param-item':\r\n            case 'condition-item':\r\n            case 'seedsend-item':\r\n            case 'send-item': return <EditorParamItem />;\r\n            case 'interface-mng': return <EditorInterfaceManager />;\r\n            case 'sample-mng': return <EditorSampleMng />;\r\n            case 'sample-item': return <EditorSampleItem />;\r\n            case 'thumbnail-mng': return <EditorThumbnailMng />;\r\n            case 'thumbnail-item': return <EditorThumbnailItem />;\r\n            case 'seedarg-mng': return <EditorSeedArgMng />;\r\n            case 'seedarg-item': return <EditorSeedArgItem />;\r\n            case 'seedsend-mng': return <EditorSeedSendMng />;\r\n            case 'formgrp-item': return <EditorFormgrpItem />;\r\n            case 'formgrp-mng': return <EditorFormgrpMng />;\r\n        }\r\n    }\r\n\r\n    export const getChildrenElementNode = (node: TreeUtil.ElementNode): TreeUtil.ElementNode[] => {\r\n        const wrapNode = node.data as WrapElement;\r\n        const get = (listName: string) => {\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const elementNode = TreeUtil.createNode(wrap, node);\r\n                elementNode.children = getChildrenElementNode(elementNode);\r\n                return elementNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n\r\n    export const getChildrenDataNode = (wrapNode: LogicUtil.WrapElement): TreeUtil.DataNode[] => {\r\n        const get = (listName: string) => {\r\n\r\n            return ((wrapNode.data)[listName] as LogicUtil.WrapElement[]).map(wrap => {\r\n                const treeNode: TreeUtil.DataNode = {\r\n                    data: wrap,\r\n                    children: getChildrenDataNode(wrap)\r\n                };\r\n                return treeNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as LogicUtil.NodeRoot;\r\n                return [\r\n                    { data: node.seedMng, children: getChildrenDataNode(node.seedMng) },\r\n                    { data: node.logicMng, children: getChildrenDataNode(node.logicMng) }\r\n                ];\r\n            }\r\n            case 'seed-mng':\r\n            case 'logic-mng': return get('defs');\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            case 'logic-item': return get('mngs');\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return get('params');\r\n            case 'inherit-mng': return get('inherits');\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return get('args');\r\n            case 'sample-mng': return get('samples');\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return get('fields');\r\n            case 'thumbnail-mng': return get('items');\r\n            case 'formgrp-mng': return get('defines');\r\n        }\r\n        return [];\r\n    };\r\n}\r\n\r\nexport default LogicUtil;\r\n\r\nconst _Category = styled.div<{\r\n    backgroundColor: string;\r\n    isDisable?: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: ${props => props.backgroundColor};\r\n    /* width: 100%; */\r\n    ${props => !(props.isDisable ?? false) ? '' : css`\r\n        text-decoration: line-through;\r\n        color: #00054dac;\r\n    `}\r\n    border-radius: 4px 0 0 4px;\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n    border: solid 1px #000000d2;\r\n`;\r\nconst _Detail = styled.span`\r\n    color: #000b69bd;\r\n`;\r\n\r\nconst _EditableValue = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #0c0c0c;\r\n    color: #ebebeb;\r\n    border-radius: 0 4px 4px 0;\r\n    /* width: 100%; */\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n`;\r\nconst _Span = styled.span<{\r\n    color: string;\r\n}>`\r\n    color: ${props => props.color};\r\n`;\r\nconst _ValueType = styled.span`\r\n    color: #fff9d6b9;\r\n`;\r\nconst _Signature = styled.span`\r\n    color: #ffffff78;\r\n`;\r\nconst _Field = styled.span`\r\n    color: #ff2d2d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../util/logicFormUtil\";\r\n\r\nconst EditorSampleItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, rootData, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [paramForms, setParamForms] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSampleItem;\r\n        setName({ ...name, value: param.name });\r\n        setParamForms(param.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のサンプル名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const [seedargList, formgrpList]: [LogicUtil.NodeSeedArgItem[], LogicUtil.NodeFromGrpItem[]] = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'seedarg-mng');\r\n        const argInfoList = (argMng.data as LogicUtil.NodeSeedArgManager).\r\n            args.map(arg => {\r\n                return arg.data as LogicUtil.NodeSeedArgItem;\r\n            });\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        const formgrpMng = LogicElementUtil.getInnerWrap((node.parent?.parent as TreeUtil.ElementNode).data, 'interface-mng', 'formgrp-mng');\r\n        if (formgrpMng != null) {\r\n            formgrpList = (formgrpMng.data as LogicUtil.NodeFromgrpManager).\r\n                defines.map(arg => {\r\n                    return arg.data as LogicUtil.NodeFromGrpItem;\r\n                });\r\n        }\r\n        return [argInfoList, formgrpList];\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setParamForms(seedargList.map(arg => {\r\n                let defval = ' ';\r\n                if (arg.defval != undefined) defval = arg.defval.toString();\r\n                return { value: defval, errors: [] };\r\n            }));\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const formList = useMemo(() => {\r\n        return LogicFormUtil.buildPreviewForms(\r\n            !isModify, seedargList, formgrpList, paramForms, setParamForms\r\n        );\r\n        // return paramForms.map((paramForm, i) => {\r\n        //     const arg = argInfoList[i];\r\n        //     return <FormUtil.FormRecord key={i}\r\n        //         titleLabel={arg.name}\r\n        //         jsx={\r\n        //             <FormUtil.TextField\r\n        //                 width={150}\r\n        //                 isReadOnly={!isModify}\r\n        //                 checkable={paramForm}\r\n        //                 setCheckable={(checkable) => {\r\n        //                     paramForms[i] = checkable;\r\n        //                     setParamForms(paramForms.slice());\r\n        //                 }}\r\n        //                 isNumber\r\n        //                 step={arg.step}\r\n        //                 validates={[\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkRequired(value),\r\n        //                         errorType: \"required\"\r\n        //                     },\r\n        //                     {\r\n        //                         checker: (value) => ValidateUtil.checkNumberRange(value, arg.min, arg.max),\r\n        //                         errorType: \"value\"\r\n        //                     },\r\n        //                 ]}\r\n        //             />\r\n        //         }\r\n        //     />\r\n        // });\r\n    }, [paramForms, isModify]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name].concat(paramForms)}\r\n            firstRegist={() => {\r\n                const element: LogicUtil.NodeSampleItem = {\r\n                    name: name.value,\r\n                    values: []\r\n                };\r\n                paramForms.forEach((form, i) => {\r\n                    element.values[i] = Number(form.value);\r\n                });\r\n                wrap.data = element;\r\n\r\n                invalidate();\r\n                setStore({ ...store });\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSampleItem;\r\n                param.name = name.value;\r\n                paramForms.forEach((form, i) => {\r\n                    param.values[i] = Number(form.value);\r\n                });\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {formList}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'preset', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSampleMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Preset',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'sample-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSampleManager).samples.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSampleMng;","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorInterfaceManager = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const argMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedarg-mng');\r\n    const sendMngNode = LogicElementUtil.getInnerNodeFixed(node, 'seedsend-mng');\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(node.parent as TreeUtil.ElementNode, 'sample-mng');\r\n\r\n    const [hasGroupNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as LogicUtil.WrapElement).type;\r\n        });\r\n        return [\r\n            list.includes('formgrp-mng'),\r\n        ];\r\n    }, [node]);\r\n\r\n    const hasArgument = (): boolean => {\r\n        return argMngNode.children.length > 0;\r\n    }\r\n\r\n    /**\r\n     * グループ要素の有無を判定\r\n     */\r\n    const hasGroup = () => {\r\n        const groupMngNode = LogicElementUtil.getInnerNode(node, 'formgrp-mng');\r\n        if (groupMngNode == null) return false;\r\n        return groupMngNode.children.length > 0;\r\n    }\r\n\r\n    const execute = () => {\r\n        // const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n        // 既存の引数を削除\r\n        if (hasArgument()) {\r\n\r\n            LogicElementUtil.removeChildAll(argMngNode);\r\n            LogicElementUtil.removeChildAll(sampleMngNode);\r\n        }\r\n\r\n        sendMngNode.children.forEach(child => {\r\n            const send = (child.data as LogicUtil.WrapElement).data as LogicUtil.NodeParamItem;\r\n            send.formulaItems = ['var'];\r\n            send.values = [{ type: 'argument', value: send.name }];\r\n\r\n            const newArgData: LogicUtil.NodeSeedArgItem = {\r\n                name: send.name,\r\n                step: 1,\r\n                min: -9999,\r\n                max: 9999,\r\n                defval: 0\r\n            }\r\n            const newArgWrap: LogicUtil.WrapElement = {\r\n                type: 'seedarg-item',\r\n                data: newArgData\r\n            };\r\n            const argMng = (argMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSeedArgManager;\r\n            argMng.args.push(newArgWrap);\r\n            argMngNode.children.push(TreeUtil.createNode(newArgWrap, argMngNode));\r\n            invalidate();\r\n        });\r\n    }\r\n\r\n    const initDefaultSetting = () => {\r\n        if (!hasArgument()) {\r\n            execute();\r\n        } else {\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Are you sure you want to delete the existing element?\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        callback: () => {\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Execute',\r\n                        callback: () => {\r\n                            execute();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            setStore({ ...store });\r\n        }\r\n        invalidate();\r\n    }\r\n\r\n    /**\r\n     * 追加要素の表示非表示を切り替える\r\n     */\r\n    const toggleElement = (hasNode: boolean, listPos: number, wrapElement: LogicUtil.WrapElement) => {\r\n        if (hasNode) {\r\n            LogicElementUtil.removeChild(node, listPos, 1);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        } else {\r\n            LogicElementUtil.insertChild(wrapElement, node, listPos);\r\n            setFocusNode({ ...node });\r\n            invalidate();\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Group'}\r\n                        width={300}\r\n                        isUse={hasGroupNode}\r\n                        isEnable={!hasGroup()}\r\n                        callback={() => {\r\n                            let listPos = 0;\r\n                            toggleElement(\r\n                                hasGroupNode,\r\n                                listPos,\r\n                                {\r\n                                    type: 'formgrp-mng',\r\n                                    data: {\r\n                                        defines: []\r\n                                    } as LogicUtil.NodeFromgrpManager\r\n                                }\r\n                            );\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Initialize Params',\r\n                        callback: initDefaultSetting\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorInterfaceManager;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedArgMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'seedarg-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeSeedArgManager).args.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedArgMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorSeedArgItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [disp, setDisp] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [min, setMin] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [max, setMax] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [step, setStep] = useState<FormUtil.CheckableValue>({ value: '1', errors: [] });\r\n    const [defval, setDefval] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [isPosX, setPosX] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: 'number', errors: [] });\r\n\r\n    const seedNode = node.parent?.parent?.parent as TreeUtil.ElementNode;\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n\r\n    /** 既存のパラメータ名を取得（重複チェックに使用） */\r\n    const reservedList = useMemo(() => {\r\n        const owner = (node.parent?.parent?.data as LogicUtil.WrapElement).data;\r\n        return LogicElementUtil.getParamNameList(owner);\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n        setName({ ...name, value: param.name });\r\n        setDisp({ ...name, value: param.disp ?? '' });\r\n        setMin({ ...min, value: param.min.toString() });\r\n        setMax({ ...max, value: param.max.toString() });\r\n        setStep({ ...step, value: param.step.toString() });\r\n        setDefval({ ...defval, value: param.defval == undefined ? '' : param.defval.toString() });\r\n        setPosX({ ...isPosX, value: (param.isPosX ?? false) ? '1' : '' });\r\n        // setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, disp, min, max, step, defval]}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeSeedArgItem = {\r\n                    name: name.value,\r\n                    disp: disp.value === '' ? undefined : disp.value,\r\n                    min: Number(min.value),\r\n                    max: Number(max.value),\r\n                    step: Number(step.value),\r\n                    defval: defval.value === '' ? undefined : Number(defval.value),\r\n                    isPosX: isPosX.value === '' ? undefined : true,\r\n                    // valueType: argType.value as LogicUtil.ArgumentType\r\n                };\r\n                wrap.data = param;\r\n                syncArgumentAdd(seedNode as TreeUtil.ElementNode, param);\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                const prevName = param.name;\r\n                param.name = name.value;\r\n                param.disp = disp.value === '' ? undefined : disp.value;\r\n                param.min = Number(min.value);\r\n                param.max = Number(max.value);\r\n                param.step = Number(step.value);\r\n                param.defval = defval.value === '' ? undefined : Number(defval.value);\r\n                param.isPosX = isPosX.value === '' ? undefined : true;\r\n                // param.valueType = argType.value as LogicUtil.ArgumentType;\r\n                wrap.data = param;\r\n\r\n                if (prevName !== name.value) {\r\n                    syncArgumentName(seedNode, prevName, name.value);\r\n                }\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => LogicUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !existNameList.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={disp}\r\n                            setCheckable={setDisp}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 0, 16),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Min\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={min}\r\n                            setCheckable={setMin}\r\n                            isNumber\r\n                            dependency={[max]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) < Number(max.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Max\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={max}\r\n                            setCheckable={setMax}\r\n                            isNumber\r\n                            dependency={[min]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => Number(value) > Number(min.value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Step\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={step}\r\n                            setCheckable={setStep}\r\n                            isNumber\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Default\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={defval}\r\n                            setCheckable={setDefval}\r\n                            isNumber\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Position Prop\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            width={100}\r\n                            isReadOnly={!isModify}\r\n                            checkable={isPosX}\r\n                            setCheckable={setPosX}\r\n                            headBlank\r\n                            list={[\r\n                                { labelText: 'Yes', value: '1' }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={LogicUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'color' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                /> */}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                {LogicElementUtil.getReplicateButton(node, !isModify, 'argument', store, setStore, invalidate)}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                const param = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                                const refers = getArgumentRefers(seedNode, param.name);\r\n                                if (refers.length === 0) {\r\n                                    const curIndex = LogicElementUtil.getCurrentIndex(node);\r\n                                    if (curIndex === -1) throw new Error('[curIndex] is -1.');\r\n                                    syncArgumentDel(seedNode, curIndex);\r\n                                    removeSelf();\r\n                                } else {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message={`[${param.name}] is referenced in the formula.\\n${refers}`}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtonsCallback(node, invalidate, (index, isUpper) => {\r\n                    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n                    const offset = isUpper ? -1 : 1;\r\n                    sampleMng.samples.forEach(wrap => {\r\n                        const values = (wrap.data as LogicUtil.NodeSampleItem).values;\r\n                        const swapNode = values[index];\r\n                        values[index] = values[index + offset];\r\n                        values[index + offset] = swapNode;\r\n                    });\r\n                })}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\n/**\r\n * ノードの引数を参照している箇所のリストを返す。\r\n * @param argName 引数名\r\n * @returns 参照パラメータリスト\r\n */\r\nconst getArgumentRefers = (seedNode: TreeUtil.ElementNode, argName: string) => {\r\n\r\n    const refers: string[] = [];\r\n\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    const sendMng = sendMngWrap.data as LogicUtil.NodeSeedSendManager;\r\n    sendMng.params.forEach(wrap => {\r\n        const param = wrap.data as LogicUtil.NodeParamItem;\r\n        param.values.forEach(varItem => {\r\n            if (varItem.type === 'argument' && varItem.value === argName) {\r\n                refers.push(param.name);\r\n            }\r\n        });\r\n    });\r\n    return refers;\r\n}\r\n\r\nexport default EditorSeedArgItem;\r\n\r\n/**\r\n* 引数名の変更に伴い、式で参照している変数を同期する\r\n* @param seedNode Seedノード\r\n*/\r\nconst syncArgumentName = (seedNode: TreeUtil.ElementNode, prevName: string, newName: string) => {\r\n\r\n    const syncFormula = (list: LogicUtil.WrapElement[]) => {\r\n        list.forEach(wrap => {\r\n            const values = (wrap.data as LogicUtil.NodeParamItem).values;\r\n            values.forEach(varItem => {\r\n                if (varItem.type === 'argument' && varItem.value === prevName) {\r\n                    varItem.value = newName;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    const sendMngWrap = LogicElementUtil.getInnerWrapFixed(seedNode.data as LogicUtil.WrapElement, 'interface-mng', 'seedsend-mng');\r\n    syncFormula((sendMngWrap.data as LogicUtil.NodeParamManager).params);\r\n\r\n}\r\n\r\n/**\r\n * 引数の追加に伴い、Sample管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentAdd = (seedNode: TreeUtil.ElementNode, arg: LogicUtil.NodeSeedArgItem) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.push(arg.defval ?? arg.min);\r\n    });\r\n}\r\n\r\n/**\r\n * 引数の削除に伴い、Send管理を同期する\r\n * @param seedNode Seedノード\r\n */\r\nconst syncArgumentDel = (seedNode: TreeUtil.ElementNode, delIndex: number) => {\r\n    const sampleMngNode = LogicElementUtil.getInnerNodeFixed(seedNode, 'sample-mng');\r\n    const sampleMng = (sampleMngNode.data as LogicUtil.WrapElement).data as LogicUtil.NodeSampleManager;\r\n    sampleMng.samples.forEach(wrap => {\r\n        const sample = wrap.data as LogicUtil.NodeSampleItem;\r\n        sample.values.splice(delIndex, 1);\r\n    });\r\n}","import { useContext, useMemo } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport LogicTemplateDialog from \"../../dialog/logicTemplateDialog\";\r\nimport SendTemplateDialog from \"../../dialog/sendTemplateDialog\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorSeedSendMng = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    // const getSendParamList = (): string[] => {\r\n    //     const connector = (node.parent?.data as LogicUtil.WrapElement).data as LogicUtil.NodeInheritConnector;\r\n    //     const isCreate = connector.method === 'create';\r\n    //     let targetWrap: LogicUtil.WrapElement | null = null;\r\n    //     if (!isCreate) {\r\n    //         const rootNode = rootData.data as LogicUtil.NodeRoot;\r\n    //         const inheritMng = rootNode.logicMng.data as LogicUtil.NodeLogicManager;\r\n    //         const dependItem = inheritMng.defs.find(wrap => {\r\n    //             return (wrap.data as LogicUtil.NodeLogicItem).name === connector.depend;\r\n    //         });\r\n    //         if (dependItem != undefined) targetWrap = dependItem;\r\n    //     } else {\r\n    //         targetWrap = (node.parent?.children[node.parent?.children.length - 1].data as LogicUtil.WrapElement)\r\n    //     }\r\n    //     if (targetWrap != null) {\r\n    //         const argWrap = (targetWrap.data as LogicUtil.NodeLogicItem).mngs[0];\r\n    //         if (argWrap.type === 'argument-mng') {\r\n    //             return (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n    //                 return (arg.data as LogicUtil.NodeArgumentItem).name;\r\n    //             });\r\n    //         }\r\n    //     }\r\n    //     return [];\r\n    // }\r\n\r\n    // const update = () => {\r\n    //     const sendParamList = getSendParamList();\r\n    //     const curSize = node.children.length;\r\n    //     const params = (wrap.data as LogicUtil.NodeParamManager).params;\r\n    //     // 不要なパラメータを削除\r\n    //     for (let i = curSize - 1; i >= 0; i--) {\r\n    //         const name = (params[i].data as LogicUtil.NodeParamItem).name;\r\n    //         if (!sendParamList.includes(name)) {\r\n    //             node.children.splice(i, 1);\r\n    //             params.splice(i, 1);\r\n    //         }\r\n    //     }\r\n    //     // 必要な存在しないパラメータを追加\r\n    //     const curParamList = params.map(param => {\r\n    //         return (param.data as LogicUtil.NodeParamItem).name;\r\n    //     });\r\n    //     sendParamList.forEach(param => {\r\n    //         if (!curParamList.includes(param)) {\r\n    //             const paramWrap = LogicElementUtil.createParamWrap('send-item',\r\n    //                 { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n    //             );\r\n    //             params.push(paramWrap);\r\n    //             node.children.push(TreeUtil.createNode(paramWrap, node));\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    return (<>\r\n    </>);\r\n}\r\n\r\nexport default EditorSeedSendMng;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicElementUtil from \"../../util/logicElementUtil\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\nimport ModifyOperations from \"../common/modifyOperations\";\r\n\r\nconst EditorFormgrpItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [groupMethod, setGroupMethod] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [targetList, setTargetList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n        setName({ ...name, value: param.name });\r\n        setGroupMethod({ ...groupMethod, value: param.method });\r\n        setTargetList(param.args.map(arg => {\r\n            return { value: arg, errors: [] };\r\n        }));\r\n    };\r\n\r\n    /** 既存のシード引数名を取得（重複チェックに使用） */\r\n    const existNameList = useMemo(() => LogicElementUtil.getExistNameList(node), [node]);\r\n\r\n    const seedargs = useMemo(() => {\r\n        const argMng = LogicElementUtil.getInnerWrapFixed(node.parent?.parent?.data as LogicUtil.WrapElement, 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        return argMng.args.map(wrap => (wrap.data as LogicUtil.NodeSeedArgItem).name);\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name, groupMethod].concat(targetList)}\r\n            firstRegist={() => {\r\n                const param: LogicUtil.NodeFromGrpItem = {\r\n                    name: name.value,\r\n                    method: groupMethod.value as LogicUtil.FromGrpMethod,\r\n                    args: targetList.map(form => form.value)\r\n                };\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as LogicUtil.NodeFromGrpItem;\r\n                param.name = name.value;\r\n                param.method = groupMethod.value as LogicUtil.FromGrpMethod;\r\n                param.args = targetList.map(form => form.value);\r\n                wrap.data = param;\r\n\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Display\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={270}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 24),\r\n                                    errorType: \"length\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Method\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={groupMethod}\r\n                            setCheckable={(checkable) => {\r\n                                const type = checkable.value as LogicUtil.FromGrpMethod;\r\n                                if (type === 'color') {\r\n                                    setTargetList(new Array<FormUtil.CheckableValue>(3).fill({ value: '', errors: [] }));\r\n                                } else {\r\n                                    setTargetList([]);\r\n                                }\r\n                                setGroupMethod({...checkable});\r\n                            }}\r\n                            list={LogicUtil.FromGrpMedhods.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type === 'list' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n                {targetList.map((target, i) => {\r\n                    let formName = 'Target_';\r\n                    if (groupMethod.value === 'color') {\r\n                        switch (i) {\r\n                            case 0: formName += 'R'; break;\r\n                            case 1: formName += 'G'; break;\r\n                            case 2: formName += 'B'; break;\r\n                        }\r\n                    } else {\r\n                        formName += `_${i}`;\r\n                    }\r\n                    return (\r\n                        <FormUtil.FormRecord\r\n                            key={i}\r\n                            titleLabel={formName}\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={target}\r\n                                    setCheckable={(checkable) => {\r\n                                        targetList[i] = checkable;\r\n                                        setTargetList(targetList.slice());\r\n                                    }}\r\n                                    list={seedargs.map(item => {\r\n                                        return { value: item, labelText: item }\r\n                                    })}\r\n                                    headBlank\r\n                                    width={250}\r\n                                    isReadOnly={!isModify}\r\n                                    validates={\r\n                                        [\r\n                                            {\r\n                                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                                errorType: \"required\"\r\n                                            },\r\n                                            {\r\n                                                checker: (value) => targetList.find((target, j) => i !== j && target.value === value) == undefined,\r\n                                                errorType: \"relation\"\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                    dependency={targetList}\r\n                                />\r\n                            }\r\n                        />\r\n                    );\r\n                })}\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: removeSelf\r\n                        }\r\n                    ]}\r\n                />\r\n                {/* 並び順入れ替えボタン */}\r\n                {LogicElementUtil.getSwapButtons(node, invalidate)}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport LogicMainteTab, { FactoryTreeContext } from \"../../logicMainteTab\";\r\nimport LogicUtil from \"../../util/logicUtil\";\r\n\r\nconst EditorFormgrpMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as LogicUtil.WrapElement;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Group',\r\n                        callback: () => {\r\n                            const itemWrap: LogicUtil.WrapElement = {\r\n                                type: 'formgrp-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as LogicUtil.NodeFromgrpManager).defines.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default EditorFormgrpMng;","import { assert } from \"console\";\r\nimport { Store } from \"../../../../redux/store/store\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../dialog/confirmDialog\";\r\nimport Particle from \"../../../graphic/particle\";\r\nimport StoryUtil from \"../../launcher/util/storyUtil\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport LogicUtil from \"./logicUtil\";\r\nimport ParamUtil from \"./paramUtil\";\r\n\r\n\r\nnamespace LogicElementUtil {\r\n\r\n    export const getInnerNode = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode | null => {\r\n\r\n        let cur: TreeUtil.ElementNode | null = node;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const target = cur.children.find(child => (child.data as LogicUtil.WrapElement).type === type);\r\n            if (target == undefined) cur = null;\r\n            else cur = target;\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerNodeFixed = (\r\n        node: TreeUtil.ElementNode, ...typeList: LogicUtil.NodeType[]\r\n    ): TreeUtil.ElementNode => {\r\n        const innerNode = getInnerNode(node, ...typeList);\r\n        if (innerNode == null) throw new Error('[innerNode] is null.');\r\n        return innerNode as TreeUtil.ElementNode;\r\n    }\r\n\r\n    export const getInnerWrap = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement | null => {\r\n\r\n        let cur: LogicUtil.WrapElement | null = wrap;\r\n        typeList.some(type => {\r\n            if (cur == null) return 1;\r\n            const listName = getListParamName(cur.type);\r\n            if (listName == null) cur = null;\r\n            else {\r\n                const list = cur.data[`${listName}`] as LogicUtil.WrapElement[];\r\n                const target = list.find(child => child.type === type);\r\n                if (target == undefined) cur = null;\r\n                else cur = target;\r\n            }\r\n        });\r\n        return cur;\r\n    }\r\n\r\n    export const getInnerWrapFixed = (\r\n        wrap: LogicUtil.WrapElement, ...typeList: LogicUtil.NodeType[]\r\n    ): LogicUtil.WrapElement => {\r\n        const innerWrap = getInnerWrap(wrap, ...typeList);\r\n        if (innerWrap == null) throw new Error('[innerWrap] is null.');\r\n        return innerWrap as LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const addChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode) => {\r\n        return insertChild(wrapElement, node, node.children.length);\r\n    }\r\n\r\n    export const insertChild = (wrapElement: LogicUtil.WrapElement, node: TreeUtil.ElementNode, listPos: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, 0, wrapElement);\r\n        const newNode = TreeUtil.createNode(wrapElement, node);\r\n        node.children.splice(listPos, 0, newNode);\r\n        return newNode;\r\n    }\r\n\r\n    export const removeChild = (node: TreeUtil.ElementNode, listPos: number, size: number) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].splice(listPos, size);\r\n        node.children.splice(listPos, size);\r\n    }\r\n\r\n    export const removeChildAll = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        wrap.data[`${listName}`].length = 0;\r\n        node.children.length = 0;\r\n    }\r\n\r\n    export const isHead = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[0] == node;\r\n    }\r\n\r\n    export const isTail = (node: TreeUtil.ElementNode) => {\r\n        if (node.parent == null) return false;\r\n        const ownerChildren = node.parent.children;\r\n        return ownerChildren[ownerChildren.length - 1] == node;\r\n    }\r\n\r\n    export const getCurrentIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(parentWrap.type);\r\n        if (listName == null || parentWrap.data == null) return -1;\r\n        const list = parentWrap.data[listName] as LogicUtil.WrapElement[];\r\n        const curIndex = list.findIndex(wrap => wrap == node.data);\r\n        return curIndex;\r\n    }\r\n\r\n    const swapOrder = (node: TreeUtil.ElementNode, offset: number) => {\r\n        if (node.parent == null) return;\r\n        const ownerChildren = node.parent.children;\r\n        const wrap = node.parent.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        const ownDataChildren = wrap.data[`${listName}`] as LogicUtil.WrapElement[];\r\n\r\n        let curNo = getCurrentIndex(node);\r\n        if (curNo === -1) return;\r\n\r\n        // ツリーノードの入れ替え\r\n        const swapNode = ownerChildren[curNo];\r\n        ownerChildren[curNo] = ownerChildren[curNo + offset];\r\n        ownerChildren[curNo + offset] = swapNode;\r\n        // データ要素の入れ替え\r\n        const swapData = ownDataChildren[curNo];\r\n        ownDataChildren[curNo] = ownDataChildren[curNo + offset];\r\n        ownDataChildren[curNo + offset] = swapData;\r\n    }\r\n\r\n    export const getSwapButtons = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        ...dependencyMngNodes: TreeUtil.ElementNode[]\r\n    ) => {\r\n        return getSwapButtonsCallback(node, invalidate, (curIndex, isUpper) => {\r\n            if (dependencyMngNodes.length > 0) {\r\n                dependencyMngNodes.forEach(depNode => {\r\n                    swapOrder(depNode.children[curIndex], isUpper ? -1 : 1);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    export const getSwapButtonsCallback = (\r\n        node: TreeUtil.ElementNode,\r\n        invalidate: () => void,\r\n        callback: (curIndex: number, isUpper: boolean) => void\r\n    ) => {\r\n        const curIndex = getCurrentIndex(node);\r\n        return <>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↑',\r\n                        isEnable: !LogicElementUtil.isHead(node),\r\n                        callback: () => {\r\n                            swapOrder(node, -1);\r\n                            callback(curIndex, true);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Swap ↓',\r\n                        isEnable: !LogicElementUtil.isTail(node),\r\n                        callback: () => {\r\n                            swapOrder(node, 1);\r\n                            callback(curIndex, false);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>;\r\n    }\r\n\r\n    /**\r\n     * 同レベル階層に自身ノードの複製を作成する\r\n     * @param node コピー対象のノード\r\n     * @param newName コピー後の名称\r\n     */\r\n    export const replicateSameLevel = (node: TreeUtil.ElementNode, newName: string) => {\r\n        if (node.parent == null) return;\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const cloneBase = wrap.data;\r\n        const cloneDest = JSON.parse(JSON.stringify((cloneBase)));\r\n\r\n        const newWrap: LogicUtil.WrapElement = {\r\n            type: wrap.type,\r\n            data: cloneDest\r\n        };\r\n        const namable = getNamableProps(wrap.type);\r\n        newWrap.data[namable] = newName;\r\n\r\n        // ロジックマネージャに追加\r\n        const newNode = LogicElementUtil.addChild(newWrap, node.parent);\r\n        // 子要素の展開\r\n        newNode.children = LogicUtil.getChildrenElementNode(newNode);\r\n    }\r\n\r\n    export const getReplicateButton = (\r\n        node: TreeUtil.ElementNode,\r\n        isEnable: boolean,\r\n        targetElement: string, store: Store,\r\n        setStore: (store: Store) => void,\r\n        invalidate: () => void\r\n    ): JSX.Element => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        return <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[{\r\n                label: 'Replicate',\r\n                isEnable,\r\n                // isEnable: false,\r\n                callback: () => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={`Replicate this ${targetElement}.`}\r\n                        buttons={[\r\n                            {\r\n                                label: 'Cancel',\r\n                                callback: () => {\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Enter',\r\n                                callback: () => {\r\n                                    const namable = LogicElementUtil.getNamableProps(wrap.type);\r\n                                    const name = wrap.data[namable] as string;\r\n                                    const newName = LogicElementUtil.getNumberingOnPrefixName(`${name}_`, node.parent as TreeUtil.ElementNode);\r\n                                    LogicElementUtil.replicateSameLevel(node, newName);\r\n                                    store.system.dialog = null;\r\n                                    setStore({ ...store });\r\n                                    // mappingForm();\r\n                                    invalidate();\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }\r\n            }]}\r\n        />;\r\n    }\r\n\r\n    export const getListParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'seed-mng':\r\n            case 'logic-mng': return 'defs';\r\n            case 'seed-item':\r\n            case 'connector':\r\n            case 'inherit-logic':\r\n            case 'interface-mng':\r\n            // case 'root':\r\n            case 'logic-item': return 'mngs';\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'extend-mng':\r\n            case 'seedsend-mng':\r\n            case 'visual-mng': return 'params';\r\n            case 'inherit-mng': return 'inherits';\r\n            case 'seedarg-mng':\r\n            case 'argument-mng': return 'args';\r\n            case 'sample-mng': return 'samples';\r\n            case 'inhfld-mng':\r\n            case 'field-mng': return 'fields';\r\n            case 'thumbnail-mng': return 'items';\r\n            case 'formgrp-mng': return 'defines';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getIdentifyParamName = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'argument-item':\r\n            case 'field-item':\r\n            case 'seed-item':\r\n            case 'thumbnail-item':\r\n            case 'seedarg-item':\r\n            case 'sample-item':\r\n            case 'formgrp-item':\r\n            case 'logic-item': return 'name';\r\n            case 'connector': return 'id';\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export const getNamableProps = (type: LogicUtil.NodeType) => {\r\n        switch (type) {\r\n            case 'connector': return 'id';\r\n            case 'seed-item':\r\n            case 'argument-item':\r\n            case 'seedarg-item':\r\n            case 'field-item':\r\n            case 'sample-item':\r\n            case 'thumbnail-item':\r\n            case 'logic-item': return 'name';\r\n        }\r\n        throw new Error('Namable props not found.');\r\n    }\r\n\r\n    export const syncTreeElementFromWrap = (node: TreeUtil.ElementNode) => {\r\n        const wrap = node.data as LogicUtil.WrapElement;\r\n        const listName = getListParamName(wrap.type);\r\n        if (listName == null) return;\r\n        (wrap.data[listName] as any[]).forEach(childWrap => {\r\n            const newNode = TreeUtil.createNode(childWrap, node);\r\n            node.children.push(newNode);\r\n            syncTreeElementFromWrap(newNode);\r\n        });\r\n    }\r\n\r\n    export const createParamWrap = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem): LogicUtil.WrapElement => {\r\n        return { type: type, data: paramDataList };\r\n    }\r\n    export const createParamWrapList = (type: LogicUtil.NodeType, paramDataList: LogicUtil.NodeParamItem[]): LogicUtil.WrapElement[] => {\r\n        return paramDataList.map(data => {\r\n            return { type: type, data: data };\r\n        });\r\n    }\r\n\r\n    export const createVisualParams = (): LogicUtil.WrapElement[] => {\r\n        const type = ParamUtil.VisualParamType;\r\n        return createParamWrapList('param-item', [\r\n            { name: type.RADIUS, formulaItems: ['var'], values: [{ type: 'direct', value: '20' }] },\r\n            { name: type.COLOR_R, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_G, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_B, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: type.COLOR_A, formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n        ]);\r\n    }\r\n\r\n    export const createBehaviorParams = (): LogicUtil.WrapElement[] => {\r\n        const list: LogicUtil.NodeParamItem[] = [];\r\n        const type = ParamUtil.BehaviorParamType;\r\n        list.push({\r\n            name: type.LIMIT,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '30' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.POS_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_X,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        list.push({\r\n            name: type.VEC_Y,\r\n            formulaItems: ['var'], values: [{ type: 'direct', value: '0' }]\r\n        });\r\n        return createParamWrapList('param-item', list);\r\n    }\r\n\r\n    export const getDefaultLogicMngs = (): LogicUtil.WrapElement[] => {\r\n        return [\r\n            {\r\n                type: 'visual-mng',\r\n                data: {\r\n                    params: createVisualParams()\r\n                } as LogicUtil.NodeParamManager\r\n            },\r\n            {\r\n                type: 'behavior-mng',\r\n                data: {\r\n                    params: createBehaviorParams()\r\n                } as LogicUtil.NodeParamManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    export const getInitialData = (): LogicUtil.WrapElement => {\r\n        return {\r\n            type: 'root',\r\n            data: {\r\n                seedMng: {\r\n                    type: 'seed-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeSeedManager\r\n                } as LogicUtil.WrapElement,\r\n                logicMng: {\r\n                    type: 'logic-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as LogicUtil.NodeLogicManager\r\n                } as LogicUtil.WrapElement\r\n            } as LogicUtil.NodeRoot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 同階層の名前パラメータを持つ要素より、既存の名前一覧を取得する。\r\n     * @param node 現在のノード\r\n     * @returns 同階層の既存の名前一覧\r\n     */\r\n    export const getExistNameList = (node: TreeUtil.ElementNode) => {\r\n        const nameList: string[] = [];\r\n        const curWrap = node.data as LogicUtil.WrapElement;\r\n        const nameParam = getIdentifyParamName(curWrap.type);\r\n        const mngWrap = node.parent?.data as LogicUtil.WrapElement;\r\n        const listParam = getListParamName(mngWrap.type);\r\n        if (listParam == null || nameParam == null) throw Error('List param or identifiy param not found.');\r\n        const list = mngWrap.data[listParam] as LogicUtil.WrapElement[];\r\n        list.forEach(wrap => {\r\n            if (wrap.data != null && curWrap != wrap) {\r\n                nameList.push(wrap.data[nameParam]);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getLogicNameList = (mng: LogicUtil.NodeLogicManager) => {\r\n        const nameList: string[] = [];\r\n        mng.defs.forEach(logic => {\r\n            if (logic.data != null) {\r\n                nameList.push((logic.data as LogicUtil.NodeLogicItem).name);\r\n            }\r\n        });\r\n        return nameList;\r\n    }\r\n\r\n    export const getParamNameList = (curLogicOwner: LogicUtil.NodeLogicItem) => {\r\n        const nameList: string[] = [];\r\n\r\n        // システム固有のパラメータ名を取得\r\n        ParamUtil.VisualParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.BehaviorParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.SelfParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ExtendParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.EffectParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.ModulateParams.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n        ParamUtil.Constants.forEach(name => {\r\n            nameList.push(name);\r\n        });\r\n\r\n        // 引数のパラメータ名を取得\r\n        const argMng = curLogicOwner.mngs.find(mng => mng.type === 'argument-mng');\r\n        if (argMng != undefined) {\r\n            const args = (argMng.data as LogicUtil.NodeArgumentManager).args;\r\n            args.forEach(arg => {\r\n                if (arg.data != null) {\r\n                    nameList.push((arg.data as LogicUtil.NodeArgumentItem).name);\r\n                }\r\n            });\r\n        }\r\n        // フィールドのパラメータ名を取得\r\n        const fieldMng = curLogicOwner.mngs.find(mng => mng.type === 'field-mng');\r\n        if (fieldMng != undefined) {\r\n            const fields = (fieldMng.data as LogicUtil.NodeFieldManager).fields;\r\n            fields.forEach(field => {\r\n                if (field.data != null) {\r\n                    nameList.push((field.data as LogicUtil.NodeParamItem).name);\r\n                }\r\n            });\r\n        }\r\n        return nameList;\r\n    }\r\n\r\n    /**\r\n     * 子要素の接頭連番をチェックし、重複しない名称を返す。\r\n     * @param prefix 接頭語\r\n     * @param node 基準となるノード\r\n     */\r\n    export const getNumberingOnPrefixName = (prefix: string, node: TreeUtil.ElementNode) => {\r\n        let num = 0;\r\n        // 接頭番号を取得\r\n        while (true) {\r\n            const check = node.children.find(child => {\r\n                const wrap = child.data as LogicUtil.WrapElement;\r\n                if (wrap.data == null) return false;\r\n                console.log(wrap);\r\n                return wrap.data[getNamableProps(wrap.type)] === `${prefix}${num}`;\r\n            });\r\n            if (check != undefined) num++;\r\n            else break;\r\n        }\r\n        return `${prefix}${num}`;\r\n    }\r\n\r\n    /**\r\n     * パラメータの式で参照されている変数を検索し、\r\n     * 任意の処理（callback）を実行する。\r\n     * @param node 現在のノード\r\n     * @param callback 処理\r\n     */\r\n    export const searchVariableReferInFormula = (node: TreeUtil.ElementNode, callback: Function) => {\r\n\r\n        const mngType = (node.parent?.data as LogicUtil.WrapElement).type;\r\n        const getLogicItem = () => {\r\n            switch (mngType) {\r\n                case 'field-mng':\r\n                case 'argument-mng': return node.parent?.parent?.data as LogicUtil.WrapElement;\r\n                case 'inhfld-mng': return node.parent?.parent?.parent?.parent?.data as LogicUtil.WrapElement;\r\n            }\r\n        }\r\n        const logicItem = getLogicItem()?.data as LogicUtil.NodeLogicItem;\r\n        if (mngType === 'argument-mng') {\r\n            const fieldMng = logicItem.mngs.find(mng => mng.type === 'field-mng');\r\n            if (fieldMng != undefined) {\r\n                callback((fieldMng.data as LogicUtil.NodeFieldManager).fields);\r\n            }\r\n        }\r\n        if (mngType !== 'inhfld-mng') {\r\n            const visualMng = logicItem.mngs.find(mng => mng.type === 'visual-mng');\r\n            if (visualMng != undefined) {\r\n                callback((visualMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n            const behaviorMng = logicItem.mngs.find(mng => mng.type === 'behavior-mng');\r\n            if (behaviorMng != undefined) {\r\n                callback((behaviorMng.data as LogicUtil.NodeParamManager).params);\r\n            }\r\n        }\r\n        const inhMng = logicItem.mngs.find(mng => mng.type === 'inherit-mng');\r\n        if (inhMng != undefined) {\r\n            (inhMng.data as LogicUtil.NodeConnectManager).inherits.forEach(inh => {\r\n                if (mngType !== 'inhfld-mng') {\r\n                    const inhfld = LogicElementUtil.getInnerWrap(inh, 'inhfld-mng');\r\n                    // Inherit配下のField要素のチェック\r\n                    if (inhfld != null) {\r\n                        callback((inhfld.data as LogicUtil.NodeFieldManager).fields);\r\n                    }\r\n                }\r\n                // Extend要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'extend-mng')?.data as LogicUtil.NodeParamManager).params);\r\n                // Send要素のチェック\r\n                callback((LogicElementUtil.getInnerWrap(inh, 'send-mng')?.data as LogicUtil.NodeParamManager).params);\r\n            });\r\n        }\r\n    }\r\n\r\n    export const findSeedWrap = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const root = rootData.data as LogicUtil.NodeRoot;\r\n        const seed = (root.seedMng.data as LogicUtil.NodeSeedManager).defs.find(def => {\r\n            const seedItem = def.data as LogicUtil.NodeSeedItem;\r\n            return seedItem.name === seedId;\r\n        });\r\n        if (seed == undefined) throw new Error();\r\n        return seed;\r\n    }\r\n\r\n    export const doParticleJob = (rootData: LogicUtil.WrapElement, fuse: StoryUtil.Fuse, owner: Particle.Instance[]) => {\r\n        const seedWrap = findSeedWrap(rootData, fuse.seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n\r\n        const getSendingValueMap = () => {\r\n            const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const valueMap = seedargMng.args.map((wrap, i) => {\r\n                const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                return { name: seedarg.name, value: fuse.values[i] }\r\n            });\r\n\r\n            // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n            const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n            const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n            return sendParams.map(item => {\r\n                const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                return { name: item.name, value }\r\n            });\r\n        }\r\n\r\n        owner.push(new Particle.Instance(\r\n            PreviewUtil.buildLogicProps(owner, getOrigin(), rootData, getSendingValueMap())\r\n        ));\r\n    }\r\n\r\n    export type SeedProps = {\r\n        seed: LogicUtil.NodeSeedItem;\r\n        logic: LogicUtil.NodeLogicItem;\r\n        seedargList: LogicUtil.NodeSeedArgItem[];\r\n        seedsendList: LogicUtil.NodeParamItem[];\r\n        thumbnailList: LogicUtil.NodeThumbnailItem[];\r\n    }\r\n    export const getSeedProperties = (rootData: LogicUtil.WrapElement, seedId: string) => {\r\n        const seedWrap = findSeedWrap(rootData, seedId);\r\n        const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n        const getOrigin = () => {\r\n            const root = rootData.data as LogicUtil.NodeRoot;\r\n            const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n            return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n        }\r\n        const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n        const seedargList = seedargMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n        const seedsendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n        const seedsendList = seedsendMng.params.map(wrap => wrap.data as LogicUtil.NodeParamItem);\r\n        const thumbnailMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'thumbnail-mng').data as LogicUtil.NodeThumnailManager;\r\n        const thumbnailList = thumbnailMng.items.map(wrap => wrap.data as LogicUtil.NodeThumbnailItem);\r\n       \r\n        return {\r\n            seed, logic: getOrigin(), seedargList, seedsendList, thumbnailList\r\n        }\r\n    }\r\n}\r\n\r\nexport default LogicElementUtil;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\n\r\nnamespace PreviewLauncherFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        sceens: string[];\r\n        frameCnt: number;\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const sceens = props.sceens;\r\n        const frameCnt = props.frameCnt;\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    switch (e.key) {\r\n                        case 'ArrowLeft': {\r\n                            if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                        } break;\r\n                        case 'ArrowRight': {\r\n                            if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                        } break;\r\n                        case ' ': {\r\n                            setPlay(!isPlay);\r\n                        } break;\r\n                    }\r\n                    if (e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }}\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Play', enable: true, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={() => {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                        if (props.closeAction != undefined) {\r\n                            props.closeAction();\r\n                        }\r\n                    }}\r\n                >×</_CloseButton>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLauncherFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #aed5d8e0;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;","import { useState, useMemo, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewLogicInputForm = (props: {\r\n    logicWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const argumentList: string[] = useMemo(() => {\r\n        let list: string[] = [];\r\n        const argWrap = LogicElementUtil.getInnerWrap(props.logicWrap, 'argument-mng');\r\n        if (argWrap != null) {\r\n            list = (argWrap.data as LogicUtil.NodeArgumentManager).args.map(arg => {\r\n                const argItem = arg.data as LogicUtil.NodeArgumentItem;\r\n                return argItem.name;\r\n            });\r\n        }\r\n        return list;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFormList(argumentList.map(arg => {\r\n            return { value: arg, errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        if (formList.find(form => form.errors.length > 0) == undefined) {\r\n            props.setSendingValueMap(() => {\r\n                return formList.map((form, i) => {\r\n                    return { name: argumentList.map(arg => arg)[i], value: Number(form.value) }\r\n                });\r\n            })\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return <>{\r\n        formList.map((form, i) => {\r\n            const argument = argumentList[i];\r\n            return (<FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={argument}\r\n                labelWidth={250}\r\n                jsx={\r\n                    <FormUtil.TextField\r\n                        width={312}\r\n                        isNumber\r\n                        checkable={form}\r\n                        setCheckable={() => {\r\n                            setFormList(formList.slice());\r\n                        }}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            }\r\n                        ]}\r\n                    />\r\n                }\r\n            />);\r\n        })\r\n    }</>\r\n}\r\n\r\nexport default PreviewLogicInputForm;","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicFormUtil from \"../../factory/util/logicFormUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport PreviewUtil from \"../previewUtil\";\r\n\r\nconst PreviewSeedInputForm = (props: {\r\n    seedWrap: LogicUtil.WrapElement;\r\n    setSendingValueMap: (sendingValueMap: (() => PreviewUtil.ValueMap[]) | null) => void;\r\n}) => {\r\n\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [formgrpList, seedargList, presetList]: [LogicUtil.NodeFromGrpItem[], LogicUtil.NodeSeedArgItem[], LogicUtil.NodeSampleItem[]] = useMemo(() => {\r\n        const formgrpWrap = LogicElementUtil.getInnerWrap(props.seedWrap, 'interface-mng', 'formgrp-mng');\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        if (formgrpWrap != null) {\r\n            formgrpList = (formgrpWrap.data as LogicUtil.NodeFromgrpManager).defines.map(def => def.data as LogicUtil.NodeFromGrpItem);\r\n        }\r\n\r\n        const argWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedarg-mng');\r\n        const argumentList = (argWrap.data as LogicUtil.NodeSeedArgManager).args.map(arg => arg.data as LogicUtil.NodeSeedArgItem);\r\n\r\n        const sampleWrap = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'sample-mng');\r\n        const sampleList = (sampleWrap.data as LogicUtil.NodeSampleManager).samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n        return [formgrpList, argumentList, sampleList];\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        setFormList(seedargList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (formList.find(form => form.errors.length > 0) == undefined) {\r\n            props.setSendingValueMap(() => {\r\n                const valueMap = formList.map((form, i) => {\r\n                    return { name: seedargList.map(arg => arg.name)[i], value: Number(form.value) }\r\n                });\r\n\r\n                // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                const sendMng = LogicElementUtil.getInnerWrapFixed(props.seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                return sendParams.map(item => {\r\n                    const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                    if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                    return { name: item.name, value }\r\n                });\r\n            });\r\n        } else {\r\n            props.setSendingValueMap(null);\r\n        }\r\n    }, [formList]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"Preset\"\r\n            innerJsx={<FormUtil.Record\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        width={402}\r\n                        checkable={template}\r\n                        setCheckable={setTemplate}\r\n                        headBlank\r\n                        list={presetList.map((sample, i) => {\r\n                            return {\r\n                                labelText: sample.name,\r\n                                value: i.toString()\r\n                            }\r\n                        })}\r\n                    />\r\n                    <FormUtil.ButtonItem\r\n                        button={{\r\n                            label: 'Apply',\r\n                            isEnable: template.value !== '',\r\n                            callback: () => {\r\n                                const selectedIndex = Number(template.value);\r\n                                const values = presetList[selectedIndex].values;\r\n                                values.forEach((value, i) => {\r\n                                    formList[i].value = value.toString();\r\n                                });\r\n                                setFormList(formList.slice());\r\n                            }\r\n                        }}\r\n                    />\r\n                </>}\r\n            />}\r\n        />\r\n        {LogicFormUtil.buildPreviewForms(\r\n            false, seedargList, formgrpList, formList, setFormList\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default PreviewSeedInputForm;","import { useContext, useEffect, useState } from \"react\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryUtil from \"../launcher/util/storyUtil\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport styled, { css } from \"styled-components\";\r\nimport PreviewLauncherFrame from \"./previewLauncherFrame\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\n\r\nnamespace BuildUtil {\r\n\r\n    export type RunParticleProps = {\r\n        /** フレームの上限（過ぎると停止） */\r\n        limitFrame: number,\r\n        /** パーティクル数の上限（超えると停止） */\r\n        limitParticle: number,\r\n        /** 最低保証フレーム */\r\n        guaranteeFrame?: number,\r\n        /** 1フレーム経過ごとに実行する処理のコールバック */\r\n        doIterate: (frame: number, owner: Particle.Instance[]) => void,\r\n        /** 最終フレーム（ループから抜けた直後）に実行する処理のコールバック */\r\n        doEnd?: (frame: number, owner: Particle.Instance[]) => void\r\n    };\r\n\r\n    export type DivideProps = {\r\n        num: number;\r\n        standbyEvent: () => void;\r\n        countUpEvent: () => void;\r\n    }\r\n\r\n    export const run = (props: RunParticleProps) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        const owner: Particle.Instance[] = [];\r\n        let frame = 0;\r\n\r\n        while (true) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            if (frame > props.limitFrame ||\r\n                owner.length > props.limitParticle ||\r\n                frame > minFrame && owner.length === 0\r\n            ) break;\r\n            frame++;\r\n        };\r\n\r\n        if (props.doEnd != undefined) {\r\n            props.doEnd(frame, owner);\r\n        }\r\n    }\r\n\r\n    export const runPaging = (props: RunParticleProps, owner: Particle.Instance[], beginFrame: number, advanceFrame: number) => {\r\n        const minFrame = props.guaranteeFrame ?? 0;\r\n        // const owner: Particle.Instance[] = [];\r\n\r\n        let frame = beginFrame;\r\n        while (frame - beginFrame < advanceFrame) {\r\n            props.doIterate(frame, owner);\r\n\r\n            for (let i = owner.length - 1; i >= 0; i--) {\r\n                const particle = owner[i];\r\n\r\n                // パーティクルの更新\r\n                particle.update();\r\n\r\n                // 死滅したパーティクルの削除\r\n                if (!particle.isLive) {\r\n                    owner.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            // if (frame > props.limitFrame ||\r\n            //     owner.length > props.limitParticle ||\r\n            //     frame > minFrame && owner.length === 0\r\n            // ) {\r\n            //     if (props.doEnd != undefined) {\r\n            //         props.doEnd(frame, owner);\r\n            //     }\r\n            //     break;\r\n            // }\r\n            frame++;\r\n        };\r\n    }\r\n\r\n    const PROGRESS_VAL = 1;\r\n\r\n    type StoryPreviewProps = {\r\n        sceens: string[];\r\n        useFrame: number;\r\n    }\r\n\r\n    export type PagingField = {\r\n        useFrame: number;\r\n        curFrame: number;\r\n        sceens: string[];\r\n        owner: Particle.Instance[];\r\n    }\r\n\r\n    export const BuildFrame = (props: {\r\n        closeAction?: () => void;\r\n    }) => {\r\n        const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n        const [storyPreviewProps, setStoryPreviewProps] = useState<StoryPreviewProps | null>(null);\r\n        const [buildCache, setBuildCache] = useState<PagingField>({\r\n            useFrame: 0,\r\n            curFrame: 0,\r\n            owner: [],\r\n            sceens: []\r\n        });\r\n\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n        useEffect(() => {\r\n            // プログレスバーが100％になったら処理される\r\n            if (buildCache.useFrame != 0 && buildCache.curFrame == buildCache.useFrame) {\r\n                setStoryPreviewProps({\r\n                    sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                });\r\n                return;\r\n            }\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const minFrame = fuseList[0].frame;\r\n\r\n            if (buildCache.useFrame === 0) {\r\n                BuildUtil.run({\r\n                    limitFrame,\r\n                    limitParticle,\r\n                    guaranteeFrame: minFrame,\r\n                    doIterate: (frame, owner) => {\r\n                        fuseList.some(fuse => {\r\n                            if (fuse.frame === frame) {\r\n                                LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                            } else if (fuse.frame > frame) return 1;\r\n                        });\r\n                    },\r\n                    doEnd: (frame) => {\r\n                        buildCache.useFrame = frame;\r\n                    }\r\n                });\r\n                setBuildCache({ ...buildCache });\r\n            } else {\r\n                runPaging({\r\n                    limitFrame,\r\n                    limitParticle,\r\n                    guaranteeFrame: minFrame,\r\n                    doIterate: (frame, owner) => {\r\n\r\n                        fuseList.some(fuse => {\r\n                            if (fuse.frame === frame) {\r\n                                LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                            } else if (fuse.frame > frame) return 1;\r\n                        });\r\n\r\n                        buildCache.sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                            // パーティクルの描画\r\n                            owner.forEach(par => {\r\n                                par.draw(ctx);\r\n                            });\r\n                            ctx.save();\r\n                        }));\r\n                    },\r\n                    // doEnd: () => {\r\n                    //     setStoryPreviewProps({\r\n                    //         sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                    //     });\r\n                    // }\r\n                }, buildCache.owner, buildCache.curFrame, PROGRESS_VAL);\r\n                buildCache.curFrame += PROGRESS_VAL;\r\n                if (buildCache.curFrame > buildCache.useFrame) {\r\n                    buildCache.curFrame = buildCache.useFrame;\r\n                }\r\n                setBuildCache({ ...buildCache });\r\n            }\r\n        }, [buildCache]);\r\n\r\n        useEffect(() => {\r\n            if (storyPreviewProps != null) {\r\n                store.system.dialog = <PreviewLauncherFrame.Component\r\n                    sceens={storyPreviewProps.sceens}\r\n                    frameCnt={storyPreviewProps.useFrame}\r\n                    closeAction={props.closeAction}\r\n                />;\r\n                dispatcher.updateStore();\r\n            }\r\n        }, [storyPreviewProps]);\r\n\r\n\r\n        const getJsx = () => {\r\n            if (storyPreviewProps == null) {\r\n                if (buildCache == null) return <></>;\r\n                const rate = buildCache.curFrame / buildCache.useFrame * 100;\r\n                const isStandby = buildCache.useFrame === 0;\r\n                return (\r\n                    <_Blind>\r\n                        <_ProgressBox><_ProgressVal rate={rate} /></_ProgressBox>\r\n                        <_RateVal isStandby={isStandby}>{isStandby ? 'Calculating...' : `${Math.floor(rate)}%`}</_RateVal>\r\n                    </_Blind>\r\n                );\r\n            }\r\n            return <></>;\r\n        }\r\n\r\n        return getJsx();\r\n    }\r\n}\r\n\r\nexport default BuildUtil;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #002910c0;\r\n    z-index: 10;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _ProgressBox = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relaltive;\r\n    width: calc(100% - 20px);\r\n    height: 40px;\r\n    margin: 200px 0 0 10px;\r\n    background-color: #ffffff29;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    background-color: #ffffffc1;\r\n`;\r\n\r\nconst _RateVal = styled.div<{\r\n    isStandby: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #0000003b;\r\n\r\n    color: #ffffff;\r\n    ${props => !props.isStandby ? '' : css`\r\n        color: #f50000;\r\n    `}\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ReactLoading from 'react-loading';\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport PreviewUtil from \"./previewUtil\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport PreviewLogicInputForm from \"./inputForm/previewLogicInputForm\";\r\nimport PreviewSeedInputForm from \"./inputForm/previewSeedInputForm\";\r\nimport BuildUtil from \"./buildUtil\";\r\n\r\nnamespace PreviewLogicFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        master: LogicUtil.WrapElement;\r\n        rootData: LogicUtil.WrapElement;\r\n        closeButtonAction: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n\r\n        const [sceens, setSceens] = useState<string[]>([]);\r\n        const [frameCnt, setFrameCnt] = useState<number>(-1);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isBuild, setBuild] = useState<boolean>(false);\r\n        const [progress, setProgress] = useState<number>(0);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        const [sendingValueMap, setSendingValueMap] = useState<((() => PreviewUtil.ValueMap[]) | null)>(null);\r\n\r\n        const isSeed = props.master.type === 'seed-item';\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n        useEffect(() => {\r\n            if (isBuild) build();\r\n        }, [isBuild]);\r\n\r\n        const build = () => {\r\n            if (sendingValueMap == null) return;\r\n            setCur(0);\r\n            const sceens: string[] = [];\r\n            BuildUtil.run({\r\n                limitFrame: 500,\r\n                limitParticle: 3000,\r\n                doIterate: (frame, owner) => {\r\n                    if (frame === 0) {\r\n                        const getOrigin = () => {\r\n                            if (!isSeed) return props.master.data as LogicUtil.NodeLogicItem;\r\n                            else {\r\n                                const seed = props.master.data as LogicUtil.NodeSeedItem;\r\n                                const root = props.rootData.data as LogicUtil.NodeRoot;\r\n                                const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                                return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                            }\r\n                        }\r\n                        owner.push(new Particle.Instance(\r\n                            PreviewUtil.buildLogicProps(owner, getOrigin(), props.rootData, sendingValueMap as any)\r\n                        ));\r\n                    }\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n\r\n                        // 経過フレーム、要素数の表示\r\n                        ctx.globalAlpha = 1;\r\n                        ctx.font = '16pt Arial';\r\n                        ctx.fillStyle = '#ffffff';\r\n                        ctx.fillText(`${frame}`, 6, 24);\r\n                        ctx.fillStyle = '#ffec5c';\r\n                        ctx.fillText(`${owner.length}`, 6, 44);\r\n\r\n                        // ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    setFrameCnt(frame);\r\n                    setSceens(sceens);\r\n\r\n                    setBuild(false);\r\n                    setTabIndex(1);\r\n                }\r\n            });\r\n        }\r\n\r\n        const isInputOK = sendingValueMap != null;\r\n\r\n        const buildTabJsx = (\r\n            <_Wrap>\r\n                <_Blind isEnable={isBuild}>\r\n                    {/* <ReactLoading type='spinningBubbles' /> */}\r\n                    <_Msg>Now building...</_Msg>\r\n                </_Blind>\r\n                <_FormDiv\r\n                    isSeed={props.master.type === 'seed-item'}\r\n                >\r\n                    {!isSeed ? (\r\n                        <PreviewLogicInputForm\r\n                            logicWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                        />\r\n                    ) : (\r\n                        <PreviewSeedInputForm\r\n                            seedWrap={props.master}\r\n                            setSendingValueMap={setSendingValueMap}\r\n                        />\r\n                    )}\r\n                </_FormDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: 'Build',\r\n                            isEnable: isInputOK && !isBuild,\r\n                            callback: () => {\r\n                                setBuild(true);\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    if (isPlay) return;\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / frameCnt} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            isEnable: !isPlay,\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame\r\n                width={width}\r\n                height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    if (tabIndex === 0) {\r\n                        if (isInputOK && e.key === ' ') build();\r\n                    } else {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                            } break;\r\n                            case 'ArrowRight': {\r\n                                if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                            } break;\r\n                            case ' ': {\r\n                                setPlay(!isPlay);\r\n                            } break;\r\n                        }\r\n                    }\r\n                    if (!isPlay && e.key === 'Escape') {\r\n                        store.system.dialog = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                }\r\n                }\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Build', enable: true, cont: buildTabJsx },\r\n                            { name: 'Play', enable: frameCnt !== -1, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n                <_CloseButton\r\n                    isEnable={!isPlay}\r\n                    onClick={props.closeButtonAction}\r\n                >×</_CloseButton>\r\n            </_Frame >\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewLogicFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _FormDiv = styled.div<{\r\n    isSeed: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 580px;\r\n    background-color: #c5cfd6df;\r\n    ${props => !props.isSeed ? '' : css`\r\n        background-color: #c6d6c5df;\r\n    `}\r\n    overflow-y: auto;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #c5c5c5df;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _CloseButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 2px;\r\n    right: 4px;\r\n    width: 30px;\r\n    height: 30px;\r\n    z-index: 12;\r\n    background-color: #d5d5d5;\r\n    border: 1px solid #3d3d3d;\r\n    border-radius: 4px;\r\n    font-size: 18px;\r\n    padding-left: 8px;\r\n    font-weight: 600;\r\n    color: #3d3d3d;\r\n    box-sizing: border-box;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: #ce9595;\r\n    }\r\n`;\r\n\r\n\r\nconst _Blind = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: ${props => !props.isEnable ? 'none;' : 'inline-block;'};\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000552cd;\r\n    z-index: 99;\r\n`;\r\n\r\nconst _Msg = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100%;\r\n    height: 100%; */\r\n    margin: 240px 0 0 110px;\r\n    /* background-color: #26f055cd; */\r\n    color: white;\r\n    font-size: 56px;\r\n    font-weight: 600;\r\n\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport assert from \"assert\";\r\n\r\nnamespace NameDefDialog {\r\n\r\n    export const Component = (props: {\r\n        targetSeq: number,\r\n        type?: ProjectType,\r\n        source?: string,\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const width = 500;\r\n        const height = 150;\r\n\r\n        const isCreate = props.targetSeq === -1;\r\n        const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n        const getDefaultName = () => {\r\n            return props.targetSeq === -1 ? '' : (projects.find(p => p.seq === props.targetSeq) as StoreCloud.Project).name;\r\n        }\r\n\r\n        useEffect(() => {\r\n            name.value = getDefaultName();\r\n            setName({ ...name });\r\n        }, []);\r\n\r\n        const [existNames] = useMemo(() => {\r\n            return [\r\n                projects.map(item => item.name)\r\n            ];\r\n        }, []);\r\n\r\n        const registCreate = () => {\r\n            if(props.type == undefined || props.source == undefined) throw assert;\r\n            const result = findProjectMaxSeq();\r\n            result.then((maxSeq) => {\r\n                const newProject: StoreCloud.Project = {\r\n                    seq: Number(maxSeq + 1),\r\n                    name: name.value,\r\n                    type: props.type as ProjectType,\r\n                    source: props.source as string,\r\n                    lastmod: ''\r\n                };\r\n                projects.push(newProject);\r\n                insertProject(store.system.user?.seq as number, newProject).then(() => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            });\r\n        }\r\n\r\n        const registUpdate = () => {\r\n            const targetItem = projects.find(item => item.seq === props.targetSeq);\r\n            if (targetItem != undefined) {\r\n                updateProjectName(props.targetSeq, name.value).then(() => {\r\n                    targetItem.name = name.value;\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                });\r\n            }\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: isCreate ? 'Create' : 'Update',\r\n                isEnable: name.errors.length === 0,\r\n                callback: () => {\r\n                    if (isCreate) registCreate();\r\n                    else registUpdate();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, input new name!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={250}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                // {\r\n                                //     checker: (value) => LogicUtil.checkFieldName(value),\r\n                                //     errorType: \"value\"\r\n                                // },\r\n                                {\r\n                                    checker: (value) => !existNames.includes(value),\r\n                                    errorType: \"relation\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NameDefDialog;\r\n\r\nconst findProjectMaxSeq = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT max(seq) m FROM prjcttbl`);\r\n    const results = await response.json();\r\n    return results[0].m;\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, type, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.type}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import DataUtil from \"../utils/dataUtil\";\r\nimport PreviewLogicFrame from \"../contents/create/preview/previewLogicFrame\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport LogicElementUtil from \"../contents/create/factory/util/logicElementUtil\";\r\nimport styled, { css } from \"styled-components\";\r\nimport StoryUtil from \"../contents/create/launcher/util/storyUtil\";\r\nimport FormUtil from \"../utils/form/formUtiil\";\r\nimport CanvasUtil from \"../utils/canvasUtil\";\r\nimport PreviewLauncherFrame from \"../contents/create/preview/previewLauncherFrame\";\r\nimport BuildUtil from \"../contents/create/preview/buildUtil\";\r\nimport Particle from \"../contents/graphic/particle\";\r\nimport { VscSettingsGear } from \"react-icons/vsc\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    seedList: SeedProps[];\r\n}\r\ntype StoryProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    libraryData: LogicUtil.WrapElement;\r\n    scenarioData: StoryUtil.StoryData;\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\ntype StoryPreviewProps = {\r\n    sceens: string[];\r\n    useFrame: number;\r\n}\r\n\r\nexport type PagingField = {\r\n    useFrame: number;\r\n    curFrame: number;\r\n    sceens: string[];\r\n    owner: Particle.Instance[];\r\n}\r\n\r\nconst PROGRESS_VAL = 1;\r\n\r\nconst DirectLinkManager = (props: {\r\n    projectSeq: number;\r\n}) => {\r\n    const [libData, setLibData] = useState<LibProps | null>(null);\r\n    const [storyData, setStoryData] = useState<StoryProps | null>(null);\r\n    const [storyPreviewProps, setStoryPreviewProps] = useState<StoryPreviewProps | null>(null);\r\n    const [buildCache, setBuildCache] = useState<null | PagingField>(null);\r\n\r\n    const [seedSeq, setSeedSeq] = useState(-1);\r\n\r\n    useEffect(() => {\r\n\r\n        findProject(props.projectSeq).then(resList => {\r\n            if (resList.length > 0) {\r\n                const res = resList[0];\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const data = JSON.parse(DataUtil.unZip(res.source));\r\n                // シナリオであるかどうかの判定\r\n                if (!data.hasOwnProperty('scenarioData')) {\r\n                    const rootData = data as LogicUtil.WrapElement;\r\n                    const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                    const seedList: SeedProps[] = seedMng.defs\r\n                        .filter(wrap => {\r\n                            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                            return seed.permit === 'release';\r\n                        })\r\n                        .map(wrap => {\r\n                            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                            const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                            return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                        });\r\n                    setLibData({\r\n                        name, ownerId, lastmod, rootData, seedList\r\n                    });\r\n                } else {\r\n                    const scenarioProps = data as StoryUtil.ScenarioFileProps;\r\n                    setStoryData({\r\n                        name, ownerId, lastmod, libraryData: scenarioProps.libraryData, scenarioData: scenarioProps.scenarioData\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (buildCache == null || storyData == null) return;\r\n        if (buildCache.useFrame != 0 && buildCache.curFrame == buildCache.useFrame) {\r\n            setStoryPreviewProps({\r\n                sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n            });\r\n            return;\r\n        }\r\n\r\n        const fuseList = storyData.scenarioData.fuseList;\r\n        const limitFrame = storyData.scenarioData.limitFrame;\r\n        const limitParticle = storyData.scenarioData.limitParticle;\r\n        const minFrame = fuseList[0].frame;\r\n        const logicData = storyData.libraryData;\r\n        if (buildCache.useFrame === 0) {\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n                    fuseList.some(fuse => {\r\n                        if (fuse.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                        } else if (fuse.frame > frame) return 1;\r\n                    });\r\n                },\r\n                doEnd: (frame) => {\r\n                    buildCache.useFrame = frame;\r\n                }\r\n            });\r\n            setBuildCache({ ...buildCache });\r\n        } else {\r\n\r\n            BuildUtil.runPaging({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    fuseList.some(fuse => {\r\n                        if (fuse.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                        } else if (fuse.frame > frame) return 1;\r\n                    });\r\n\r\n                    buildCache.sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                // doEnd: () => {\r\n                //     setStoryPreviewProps({\r\n                //         sceens: buildCache.sceens, useFrame: buildCache.useFrame\r\n                //     });\r\n                // }\r\n            }, buildCache.owner, buildCache.curFrame, PROGRESS_VAL);\r\n            buildCache.curFrame += PROGRESS_VAL;\r\n            if (buildCache.curFrame > buildCache.useFrame) {\r\n                buildCache.curFrame = buildCache.useFrame;\r\n            }\r\n            setBuildCache({ ...buildCache });\r\n        }\r\n    }, [buildCache]);\r\n\r\n    /**\r\n     * プレビューオールダイアログを表示する\r\n     */\r\n    const openPreviewAllDialog = () => {\r\n        setBuildCache({\r\n            useFrame: 0,\r\n            curFrame: 0,\r\n            owner: [],\r\n            sceens: []\r\n        });\r\n    }\r\n\r\n    const getJsx = () => {\r\n        let jsx = <></>;\r\n        if (libData != null) {\r\n            if (seedSeq === -1) {\r\n                jsx = <>\r\n                    <_Header>{libData.name}</_Header>\r\n                    {libData.seedList.map((seed, i) => {\r\n                        const seedName = seed.disp ?? seed.name;\r\n                        return (<_Item key={i}\r\n                            onClick={() => {\r\n                                setSeedSeq(i);\r\n                            }}\r\n                        >\r\n                            <_SeedName>{seedName}</_SeedName>\r\n                            <_ArgCnt> [{seed.argCount} arguments]</_ArgCnt>\r\n                        </_Item>);\r\n                    })}\r\n                </>;\r\n            } else {\r\n                jsx = <PreviewLogicFrame.Component\r\n                    master={libData.seedList[seedSeq].master}\r\n                    rootData={libData.rootData}\r\n                    closeButtonAction={() => {\r\n                        setSeedSeq(-1);\r\n                    }}\r\n                />\r\n            }\r\n        } else if (storyData != null) {\r\n            if (storyPreviewProps == null) {\r\n                const getBlindJsx = () => {\r\n                    if (buildCache == null) return <></>;\r\n                    const rate = buildCache.curFrame / buildCache.useFrame * 100;\r\n                    const isStandby = buildCache.useFrame === 0;\r\n                    return (\r\n                        <_Blind>\r\n                            <_ProgressBox><_ProgressVal rate={rate} /></_ProgressBox>\r\n                            <_RateVal isStandby={isStandby}>{isStandby ? 'Calculating...' : `${Math.floor(rate)}%`}</_RateVal>\r\n                        </_Blind>\r\n                    );\r\n                }\r\n                jsx = <>\r\n                    {getBlindJsx()}\r\n                    <_Header>{storyData.name}</_Header>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        isIconButton\r\n                        buttons={[\r\n                            {\r\n                                label: 'Build',\r\n                                icon: <VscSettingsGear />,\r\n                                width: 200,\r\n                                callback() {\r\n                                    openPreviewAllDialog();\r\n                                },\r\n                            }\r\n                        ]} />\r\n                </>;\r\n            } else {\r\n                jsx = <PreviewLauncherFrame.Component\r\n                    sceens={storyPreviewProps.sceens}\r\n                    frameCnt={storyPreviewProps.useFrame}\r\n                />\r\n            }\r\n        }\r\n        return jsx;\r\n    }\r\n\r\n    return getJsx();\r\n}\r\n\r\nexport default DirectLinkManager;\r\n\r\n\r\nconst findProject = async (conteseq: number) => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE seq = ${conteseq}\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #002910c0;\r\n    z-index: 10;\r\n    /* text-align: center; */\r\n`;\r\n\r\nconst _ProgressBox = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relaltive;\r\n    width: calc(100% - 20px);\r\n    height: 40px;\r\n    margin: 200px 0 0 10px;\r\n    background-color: #ffffff29;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    background-color: #ffffffc1;\r\n`;\r\n\r\nconst _RateVal = styled.div<{\r\n    isStandby: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #0000003b;\r\n\r\n    color: #ffffff;\r\n    ${props => !props.isStandby ? '' : css`\r\n        color: #f50000;\r\n    `}\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50px;\r\n    background: linear-gradient(to bottom, #00215e, #000000, #00215e);\r\n\r\n    color: #e0e0e0;\r\n    font-size: 28px;\r\n    font-wieght: 600;\r\n    line-height: 48px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #abc9e6;\r\n`;\r\n\r\nconst _ArgCnt = styled.span<{\r\n}>`\r\n    color: #fbffbf;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport DirectLinkManager from \"./directLinkManager\";\r\nimport DataUtil from \"../utils/dataUtil\";\r\n\r\ntype ScreenBean = {\r\n    adjLeft: number;\r\n    adjTop: number;\r\n    rate: number;\r\n}\r\n\r\n// export const CONTENTS_WIDTH = 576;\r\n// export const CONTENTS_HEIGHT = 1024;\r\n\r\n\r\nexport const CONTENTS_WIDTH = 600;\r\nexport const CONTENTS_HEIGHT = 660;\r\n\r\nconst MobileRoot = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const [isPermit, setPermit] = useState(true);\r\n    const [screen, setScreen] = useState<ScreenBean>({ adjLeft: 0, adjTop: 0, rate: 1 });\r\n    const ref = useRef<null | HTMLDivElement>(null);\r\n\r\n    const projectSeq = DataUtil.getDecryptionedProjectSeq(props.hashKey);\r\n\r\n    const update = () => {\r\n        if (ref.current != null) {\r\n            // const [clientWidth, clientHeight] = [window.innerWidth, window.innerHeight];\r\n\r\n            const rect = ref.current.getBoundingClientRect();\r\n            const [clientWidth, clientHeight] = [rect.width, rect.height];\r\n\r\n            const cw = CONTENTS_WIDTH;\r\n            const ch = CONTENTS_HEIGHT;\r\n\r\n            const isFitSide = clientHeight / ch > clientWidth / cw;\r\n\r\n            const rate = !isFitSide ? clientHeight / ch : clientWidth / cw;\r\n            const adjLeft = !isFitSide ? clientWidth / 2 - (cw * rate / 2) : 0;\r\n            const adjTop = !isFitSide ? 0 : clientHeight / 2 - (ch * rate / 2);\r\n\r\n            setScreen({ adjLeft, adjTop, rate });\r\n        }\r\n    }\r\n\r\n    // window.addEventListener('DOMContentLoaded', () => {\r\n    //     if (!isSmartPhone()) {\r\n    //         window.addEventListener('resize', update);\r\n    //     } else {\r\n    //         window.addEventListener('orientationchange resize', () => {\r\n    //             update();\r\n    //             setPermit(window.orientation === 0);\r\n    //         });\r\n    //     }\r\n    // });\r\n\r\n    // window.onorientationchange = () => {\r\n    //   setOrientation(window.orientation);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        update();\r\n        console.log(navigator.userAgent);\r\n        if (isSmartPhone()) {\r\n            setPermit(window.orientation === 0);\r\n        }\r\n        if (!isSmartPhone()) {\r\n            window.addEventListener('resize', ()=>{\r\n                update();\r\n            });\r\n        } else {\r\n            window.addEventListener('orientationchange resize', () => {\r\n                alert('change');\r\n                update();\r\n                setPermit(window.orientation === 0);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    let jsx = <_Error>Make your smartphone vertical!</_Error>;\r\n    if (isPermit) {\r\n        jsx = (\r\n            <_Contents>\r\n                <DirectLinkManager projectSeq={projectSeq} />\r\n            </_Contents>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap ref={ref}>\r\n            <_Frame left={screen.adjLeft} top={screen.adjTop} rate={screen.rate}>\r\n                {jsx}\r\n            </_Frame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MobileRoot;\r\n\r\nconst isSmartPhone = () => {\r\n    // UserAgentからのスマホ判定\r\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 10px);\r\n  height: calc(100% - 10px);\r\n  background-color: #9eadc9;\r\n  margin: 5px 0 0 5px; */\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst _Frame = styled.div<{\r\n    left: number;\r\n    top: number;\r\n    rate: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: ${props => props.top}px;\r\n  left: ${props => props.left}px;\r\n  transform-origin: top left;\r\n  /* width: 100%;\r\n  height: 100%; */\r\n  transform: scale(${props => props.rate});\r\n`;\r\n\r\nconst _Contents = styled.div`\r\n  display: inline-block;\r\n  width: ${CONTENTS_WIDTH}px;\r\n  height: ${CONTENTS_HEIGHT}px;\r\n  background-color: #929292;\r\n`;\r\n\r\nconst _Error = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #750000;\r\n    color: white;\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const dialog = store.system.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            if (!store.system.canDialogClose) return;\r\n            store.system.dialog = null;\r\n            store.system.canDialogClose = false;\r\n            setStore({ ...store });\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GiTurret } from \"react-icons/gi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport StoreSystem from \"../../redux/store/storeSystem\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../utils/form/validateUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\nconst WIDTH = 750;\r\nconst HEIGHT = 600;\r\n/**\r\n * アカウントフレームのコンポーネント\r\n * @returns \r\n */\r\nconst AccountFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [oldPass, setOldPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPass, setNewPass] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [newPassConfirm, setNewPassConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n    const [emailList, setEmailList] = useState<string[]>([]);\r\n\r\n    const [isModify, setModify] = useState(false);\r\n    const loginProps = store.system.user as StoreSystem.User;\r\n\r\n    const reloadInfo = () => {\r\n        setUserId({ ...userId, value: loginProps.id });\r\n        setNewPass({ ...newPass, value: '' });\r\n        setNewPassConfirm({ ...newPassConfirm, value: '' });\r\n        setEmail({ ...email, value: loginProps.email });\r\n        setOldPass({ ...oldPass, value: loginProps.password });\r\n    }\r\n\r\n    useEffect(() => {\r\n        DataUtil.findUserInfoList().then(list => {\r\n\r\n            const userIdList: string[] = [];\r\n            const emailList: string[] = [];\r\n            list.forEach(info => {\r\n                if (info.id !== loginProps.id) userIdList.push(info.id);\r\n                if (info.email !== '') emailList.push(info.email);\r\n            });\r\n            setUserIdList(userIdList);\r\n            setEmailList(emailList);\r\n        });\r\n\r\n        const hash = DataUtil.getHashedFromUserSeq(loginProps.seq);\r\n\r\n        // ユーザページのURLに変更する。\r\n        window.history.replaceState('', '', `/#/user?v=${hash}`);\r\n\r\n        reloadInfo();\r\n\r\n        // 閉じる際にURLを元に戻す\r\n        return () => {\r\n            // alert('destroy');\r\n            window.history.replaceState('', '', `/#/`);\r\n        }\r\n    }, []);\r\n\r\n    const userTabJsx: JSX.Element = (\r\n        <_Wrap>\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'user id'}\r\n                checkable={userId}\r\n                setCheckable={setUserId}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !userIdList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass'}\r\n                isPassword\r\n                checkable={newPass}\r\n                setCheckable={setNewPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPassConfirm.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPassConfirm]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'new pass*'}\r\n                isPassword\r\n                checkable={newPassConfirm}\r\n                setCheckable={setNewPassConfirm}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => value === newPass.value,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                dependency={[newPass]}\r\n                width={300}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'email'}\r\n                checkable={email}\r\n                setCheckable={setEmail}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                        errorType: \"length\"\r\n                    },\r\n                    {\r\n                        checker: (value) => {\r\n                            return value.length === 0 || value.split('@').length === 2;\r\n                        },\r\n                        errorType: \"value\"\r\n                    },\r\n                    {\r\n                        checker: (value) => !emailList.includes(value),\r\n                        errorType: \"relation\"\r\n                    },\r\n                ]}\r\n                // width={500}\r\n                marginTop={5}\r\n                isReadOnly={!isModify}\r\n            />\r\n            <FormUtil.InputTextFormBak\r\n                titleLabel={'old pass'}\r\n                isPassword\r\n                checkable={oldPass}\r\n                setCheckable={setOldPass}\r\n                validates={[\r\n                    {\r\n                        checker: (value) => value === loginProps.password,\r\n                        errorType: \"relation\"\r\n                    }\r\n                ]}\r\n                // dependency={[passwordConfirm]}\r\n                width={300}\r\n                marginTop={55}\r\n                isReadOnly={!isModify}\r\n            />\r\n        </_Wrap>\r\n    );\r\n\r\n    // 登録ボタンの活性状態\r\n    const permitRegist = (\r\n        userId.errors.length === 0\r\n        && newPass.errors.length === 0\r\n        && newPassConfirm.errors.length === 0\r\n        && email.errors.length === 0\r\n        && oldPass.errors.length === 0\r\n    );\r\n\r\n    const updateUserInfo = () => {\r\n        const passwordStr = newPass.value.length === 0 ? '' : `,password = '${newPass.value}'`;\r\n        DataUtil.sendQueryRequestToAPI('update',\r\n            `UPDATE user_tbl SET id = '${userId.value}', email = '${email.value}'${passwordStr}\r\n            WHERE seq = ${loginProps?.seq}`\r\n        ).then(() => {\r\n            loginProps.id = userId.value;\r\n            if (newPass.value.length > 0) {\r\n                loginProps.password = newPass.value;\r\n            }\r\n            loginProps.email = email.value;\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Modify successful!\" />;\r\n            setStore({...store});\r\n        });\r\n    }\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_Header>\r\n                <FormUtil.Message\r\n                    message=\"If you bookmark this page, you can easily login by URL.\"\r\n                />\r\n            </_Header>\r\n            <_Body>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'User', enable: true, cont: userTabJsx },\r\n                        { name: 'Security', enable: false, cont: <></> },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_Body>\r\n            <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        {\r\n                            label: 'Close',\r\n                            callback: () => {\r\n                                // dispatcher.system.closeDialog();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Cancel',\r\n                            isEnable: isModify,\r\n                            callback: () => {\r\n                                setModify(false);\r\n                                reloadInfo();\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isModify ? 'Modify' : 'Regist',\r\n                            isEnable: !isModify || permitRegist,\r\n                            callback: () => {\r\n                                if (!isModify) {\r\n                                    setModify(true);\r\n                                    setOldPass({ ...oldPass, value: '' });\r\n                                }\r\n                                else {\r\n                                    updateUserInfo();\r\n                                }\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Footer>\r\n        </_Frame>\r\n    );\r\n}\r\n\r\n\r\nexport default AccountFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7eb;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    /* text-align: center; */\r\n`;\r\nconst _Body = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 100px);\r\n    padding: 4px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #cecece;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport AccountFrame from \"../accountFrame\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginCreateAccount = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isRegist, setRegist] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [passwordConfirm, setPasswordConfirm] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    const [userIdList, setUserIdList] = useState<string[]>([]);\r\n\r\n    const createAuthText = () => {\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        // const list = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n        const list = '0123456789';\r\n        let text = '';\r\n        for (let i = 0; i < 6; i++) {\r\n            text += list.charAt(Math.random() * list.length);\r\n        }\r\n        return text;\r\n    };\r\n\r\n    /** 既存のユーザIDリストを格納 */\r\n    useEffect(() => {\r\n        DataUtil.findUserIdList().then(list => {\r\n            setUserIdList(list);\r\n        });\r\n\r\n        // fetch('https://api.ipify.org/?format=json').then(res => {\r\n        //     res.json().then(data => {\r\n        //         alert(data['ip']);\r\n        //     });\r\n        // });\r\n    }, []);\r\n\r\n    const [authCollation, setAuthCollation] = useState<string>(createAuthText());\r\n    const [authInput, setAuthInput] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    /** キャッシュした認証画像 */\r\n    const authPicture = useMemo(() => {\r\n        return CanvasUtil.getAuthTextURL(authCollation);\r\n\r\n    }, [authCollation]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n                case 'relation': list.push('[password] does not match confirm.'); break;\r\n            }\r\n        }\r\n        if (passwordConfirm.errors.length > 0) {\r\n            switch (passwordConfirm.errors[0]) {\r\n                case 'length': list.push('[password *] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    const registAction = () => {\r\n\r\n        (async () => {\r\n            let response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where id = '${userId}'`);\r\n            let results = await response.json();\r\n            console.log(JSON.stringify(results[0].cnt));\r\n            const isExist = results[0].cnt > 0;\r\n            if (isExist) {\r\n                setMessageList(['That user id has already been recorded.']);\r\n            } else {\r\n                const nextSeq = await DataUtil.getNextUserSeq();\r\n                console.log(nextSeq);\r\n                await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO user_tbl(seq, id, password) VALUES(${nextSeq}, '${userId.value}', '${password.value}')`);\r\n                store.system.user = {\r\n                    seq: nextSeq,\r\n                    id: userId.value,\r\n                    password: password.value,\r\n                    email: '',\r\n                };\r\n                store.cloud = {\r\n                    projects: []\r\n                };\r\n                store.system.dialog = (<ConfirmDialog.Component\r\n                    message='You have successfully created an account!'\r\n                    buttons={[\r\n                        {\r\n                            label: 'OK',\r\n                            callback: () => {\r\n                                store.system.dialog = (<AccountFrame />);\r\n                                setStore({...store});\r\n                            }\r\n                        }\r\n                    ]}\r\n                />);\r\n                setStore({...store});\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0 && passwordConfirm.errors.length === 0;\r\n    }\r\n    const isAuthOK = () => {\r\n        return authInput.errors.length === 0 && authCollation === authInput.value;\r\n    }\r\n\r\n    return (<>\r\n\r\n        <_Frame isVisible={!isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass (Confirm).'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            },\r\n                            {\r\n                                checker: (value) => !userIdList.includes(value),\r\n                                errorType: \"relation\"\r\n                            },\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === passwordConfirm.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[passwordConfirm]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password*'}\r\n                        isPassword\r\n                        checkable={passwordConfirm}\r\n                        setCheckable={setPasswordConfirm}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => value === password.value,\r\n                                errorType: \"relation\"\r\n                            }\r\n                        ]}\r\n                        dependency={[password]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Enter', isEnable: isLoginInfoOK(), callback: () => {\r\n                                    setRegist(true);\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isRegist}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Proof not a robot\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, input the same 6 number as the picture.'}\r\n                    />\r\n                    <_AuthText src={authPicture} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Change', callback: () => {\r\n                                    setAuthCollation(createAuthText());\r\n                                    setAuthInput({ value: '', errors: [] });\r\n                                }\r\n                            },\r\n                        ]}\r\n                    />\r\n                    {/* 照合する文字列 */}\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'6 numbers'}\r\n                        checkable={authInput}\r\n                        setCheckable={setAuthInput}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Regist', isEnable: isAuthOK(), callback: registAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setRegist(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginCreateAccount;\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n\r\nconst _AuthText = styled.img<{\r\n}>`\r\n    display: block;\r\n    text-align: center;\r\n    margin: 4px auto;\r\n    background-color: #f7f0f0;\r\n    border: 1px solid #888888;\r\n    box-sizing: border-box;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ConfirmDialog from \"../confirmDialog\";\r\n\r\nconst LoginLogin = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isForget, setForget] = useState(false);\r\n\r\n    const [userId, setUserId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [password, setPassword] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [email, setEmail] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [messageList, setMessageList] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        const list: string[] = [];\r\n        if (userId.errors.length > 0) {\r\n            switch (userId.errors[0]) {\r\n                case 'required': list.push('[user id] is required.'); break;\r\n                case 'length': list.push('[user id] set a value between 4 and 20.'); break;\r\n                case 'value': list.push('[user id] accepts only half-width alphanumeric characters.'); break;\r\n                case 'relation': list.push('[user id] already in use.'); break;\r\n            }\r\n        }\r\n        if (password.errors.length > 0) {\r\n            switch (password.errors[0]) {\r\n                case 'required': list.push('[password] is required.'); break;\r\n                case 'length': list.push('[password] set a value between 4 and 20.'); break;\r\n            }\r\n        }\r\n        setMessageList(list);\r\n    }, [userId, password]);\r\n\r\n    /**\r\n     * Enterボタン押下時の処理\r\n     */\r\n    const enterAction = () => {\r\n        // alert(`Confirmation passwords don't match.`);\r\n        (async () => {\r\n            const results = await DataUtil.findUserInfoLogin(userId.value, password.value);\r\n            console.log(JSON.stringify(results));\r\n            if (results.length > 0) {\r\n                store.system.user = {\r\n                    seq: results[0].seq,\r\n                    id: results[0].id,\r\n                    password: results[0].password,\r\n                    email: results[0].email,\r\n                };\r\n                const resPrjList = await findUserProjectList(results[0].seq, store.system.isSPMode);\r\n                console.log(JSON.stringify(resPrjList));\r\n                store.cloud = {\r\n                    projects: resPrjList.map(res => ({\r\n                        source: res.source,\r\n                        type: res.type,\r\n                        name: res.name,\r\n                        seq: res.seq,\r\n                        lastmod: res.lastmod\r\n                    }))\r\n                };\r\n                store.system.dialog = <ConfirmDialog.Component\r\n                    message=\"Login successful!\"\r\n                />;\r\n                setStore({ ...store });\r\n            } else {\r\n                setMessageList(['Incorrect user id or password.']);\r\n                // setPassword({ ...password, value: '' });\r\n            }\r\n        })();\r\n    }\r\n\r\n    const isLoginInfoOK = () => {\r\n        return userId.errors.length === 0 && password.errors.length === 0;\r\n    }\r\n\r\n    return (<>\r\n        <_Frame isVisible={!isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Login information\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Please, enter User ID/Pass.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'user id'}\r\n                        checkable={userId}\r\n                        setCheckable={setUserId}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkAsciiChars(value),\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'password'}\r\n                        isPassword\r\n                        checkable={password}\r\n                        setCheckable={setPassword}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 20),\r\n                                errorType: \"length\"\r\n                            }\r\n                        ]}\r\n                        width={300}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.InfoFrame textRecords={messageList} />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            { label: 'Enter', isEnable: isLoginInfoOK(), callback: enterAction },\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Forgot your login information?\"\r\n                clickAction={() => {\r\n                    setForget(true);\r\n                }}\r\n            />\r\n        </_Frame>\r\n        <_Frame isVisible={isForget}>\r\n            <FormUtil.BorderPanel\r\n                title=\"Email\"\r\n                innerJsx={<>\r\n                    <FormUtil.Message\r\n                        message={'Submit login information to account address.'}\r\n                    />\r\n                    <FormUtil.InputTextFormBak\r\n                        placeholder={'email'}\r\n                        checkable={email}\r\n                        setCheckable={setEmail}\r\n                        validates={[\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkRequired(value),\r\n                                errorType: \"required\"\r\n                            },\r\n                            {\r\n                                checker: (value) => ValidateUtil.checkStringLength(value, 4, 40),\r\n                                errorType: \"length\"\r\n                            },\r\n                            {\r\n                                checker: (value) => {\r\n                                    return value.length === 0 || value.split('@').length === 2;\r\n                                },\r\n                                errorType: \"value\"\r\n                            }\r\n                        ]}\r\n                        width={500}\r\n                        isCenter\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        buttons={[\r\n                            {\r\n                                label: 'Send', isEnable: email.errors.length === 0, callback: () => {\r\n                                    DataUtil.findUserInfoFromEmail(email.value).then((list) => {\r\n                                        if (list.length > 0) {\r\n                                            const info = list[0];\r\n                                            const hash = DataUtil.getHashedFromUserSeq(info.seq);\r\n                                            const url = `https://demo-app.licresia.com/#/user?v=${hash}`;\r\n                                            DataUtil.sendQueryRequestToMailAPI({\r\n                                                from: 'info@licresia.com',\r\n                                                to: email.value,\r\n                                                subject: '【LiCreSia】support',\r\n                                                text: `Your login information is as follows.\\n\\nURL: ${url}\\nUSR ID: ${info.id}`\r\n                                            });\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"Your login information has been sent!\" />);\r\n                                        } else {\r\n                                            // dispatcher.system.setDialog(<ConfirmDialog.Component message=\"This email address is not registered.\" />);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.MessageLink\r\n                message=\"Return to login information.\"\r\n                clickAction={() => {\r\n                    setForget(false);\r\n                }}\r\n            />\r\n        </_Frame>\r\n    </>);\r\n};\r\n\r\nexport default LoginLogin;\r\n\r\n\r\nexport const findUserProjectList = async (userSeq: number, isSPMode: boolean) => {\r\n    const storyOnly = !isSPMode ? '' : `and type = 'story'`;\r\n    const response = await DataUtil.sendQueryRequestToAPI(\r\n        'select',\r\n        `SELECT owner, seq, type, name, source, lastmod FROM prjcttbl WHERE owner = ${userSeq} ${storyOnly}order by seq`\r\n    );\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Frame = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LoginCreateAccount from \"./loginCreateAccount\";\r\nimport LoginLogin from \"./loginLogin\";\r\n\r\nconst WIDTH = 600;\r\nconst HEIGHT = 500;\r\n\r\n/**\r\n * ログインフレームのコンポーネント\r\n * @returns \r\n */\r\nconst LoginFrame = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isCreate, setCreate] = useState(false);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Frame\r\n            width={WIDTH} height={HEIGHT}\r\n        >\r\n            <_LogoDiv>\r\n                <img src={logo} />\r\n            </_LogoDiv>\r\n            <_Header>\r\n                <_TypeSwitch isActive={!isCreate} onClick={() => {\r\n                    setCreate(false);\r\n                }}>Login</_TypeSwitch>\r\n                <_TypeSwitch isActive={isCreate} onClick={() => {\r\n                    setCreate(true);\r\n                }}>Create Account</_TypeSwitch>\r\n            </_Header>\r\n            {!isCreate ? <LoginLogin /> : <LoginCreateAccount />}\r\n            {/* <_Footer>\r\n                <FormUtil.ButtonRecord\r\n                    buttons={[\r\n                        { name: 'Close', callback: closeAction },\r\n                        { name: 'Enter', callback: enterAction },\r\n                    ]}\r\n                />\r\n            </_Footer> */}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default LoginFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #9e9e9e;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LogoDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: #eeeaea;\r\n    text-align: center;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #d1d1d1; */\r\n    text-align: center;\r\n`;\r\n\r\nconst _TypeSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #bf808075;\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #c7a73e;\r\n    `}\r\n    color: white;\r\n    width: 250px;\r\n    margin: 10px 10px;\r\n    text-align: center;\r\n    &:hover {\r\n    background-color: #bf8080a2;\r\n        ${props => !props.isActive ? '' : css`\r\n            background-color: #c7a73e;\r\n        `}\r\n    }\r\n`;\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    margin: 2px 0 0 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    /* background-color: #e6e3c1; */\r\n    text-align: left;\r\n`;\r\n\r\nconst _Label = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    /* background-color: #80e45832; */\r\n    color: #bd2d2d;\r\n    width: 150px;\r\n    margin: 10px 0 0 5px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextField = styled.input<{\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    background-color: #f7f09787;\r\n    width: 300px;\r\n    margin: 10px 0 0 15px;\r\n    text-align: center;\r\n    border: solid 1px #5e5e5e;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Footer = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    padding: 6px 4px 0 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n    background-color: #d1d1d1;\r\n    text-align: right;\r\n`;\r\n\r\nconst _ExecutableButton = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM};\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE};\r\n    background-color: #5c9253;\r\n    width: 150px;\r\n    margin: 10px 5px 0 0;\r\n    text-align: center;\r\n    &:hover {\r\n        background-color: #7eaf75;\r\n    }\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport LoginFrame from \"../dialog/login/loginFrame\";\r\nimport AccountFrame from \"../dialog/accountFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const user = store.system.user;\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (user != null) {\r\n            setUserId('@' + user.id);\r\n        }\r\n    }, [user]);\r\n\r\n    const authButtonJsx = user == null ? (\r\n        <_LoginButton onClick={() => {\r\n            store.system.canDialogClose = true;\r\n            store.system.dialog = <LoginFrame />;\r\n            setStore({ ...store });\r\n            console.log(window.location.origin);\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Login / Sign up\r\n        </_LoginButton>\r\n    ) : (<>\r\n        <_UserName\r\n            isEntry={user != null}\r\n            onClick={() => {\r\n                store.system.dialog = <AccountFrame />;\r\n                setStore({ ...store });\r\n            }}\r\n        >{userId}</_UserName>\r\n        <_LoginButton onClick={() => {\r\n            store.system.user = null;\r\n            store.cloud = null;\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message={'Logout.\\nSee you next time!'}\r\n            />;\r\n            store.system.logoutActions.forEach(func => func());\r\n            setStore({ ...store });\r\n        }}>\r\n            <div><ImUser /></div>\r\n            Logout\r\n        </_LoginButton>\r\n    </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Logo src={logo} />\r\n            <_Menu>\r\n                {authButtonJsx}\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #a6bdc7, #7895b1, #a6bdc7);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    border: 1px solid #7e7e7e;\r\n    box-sizing: border-box;\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #9afff292;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #ff393983;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 180px;\r\n    height: 100%;\r\n    padding: 3px 0;\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n    /** 横向き */\r\n    isLandscape?: boolean;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const isLandscape = props.isLandscape ?? true;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList isLandscape={isLandscape}>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList isLandscape={isLandscape}>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    isLandscape: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isLandscape ? css`\r\n        width: 100px;\r\n        height: 100%;\r\n    ` : css`\r\n        width: 100%;\r\n        height: 100px;\r\n    `}\r\n    margin-right: 5px;\r\n    background-color: #c0d3db;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div<{\r\n    isLandscape: boolean;\r\n}>`\r\n    display: inline-block;\r\n    background-color: #c0d3db;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    ${props => props.isLandscape ? css`\r\n        width: calc(100% - 105px);\r\n        height: 100%;\r\n    ` : css`\r\n        height: calc(100% - 105px);\r\n        width: 100%;\r\n    `}\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    border: 1px solid #8d9aaa7b;\r\n    box-sizing: border-box;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #d5dddf;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #cacecf;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\n\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport LogicElementUtil from \"../../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport Particle from \"../../../graphic/particle\";\r\nimport StoryUtil from \"../util/storyUtil\";\r\nimport BuildUtil from \"../../preview/buildUtil\";\r\n\r\nconst StoryFuseAnalysis = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [divide, setDivide] = useState<FormUtil.CheckableValue>({ value: '20', errors: [] });\r\n    const [peak, setPeak] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n    const [total, setTotal] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n\r\n    const [countList, setCountList] = useState<number[]>([]);\r\n\r\n    const scenarioData = store.storyData as StoryUtil.StoryData;\r\n    const limitFrame = scenarioData.limitFrame;\r\n    const limitParticle = scenarioData.limitParticle;\r\n    const defList = scenarioData.fuseList;\r\n\r\n    const logicData = store.libraryData as LogicUtil.WrapElement;\r\n\r\n    const execute = () => {\r\n        const minFrame = defList[0].frame;\r\n        const divRate = 1 / Number(divide.value);\r\n        const countList: number[] = [];\r\n        let peak = 0;\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            guaranteeFrame: minFrame,\r\n            doIterate: (frame, owner) => {\r\n                const def = defList.find(def => def.frame === frame);\r\n                if (def != undefined) {\r\n                    const seedWrap = LogicElementUtil.findSeedWrap(logicData, def.seedId);\r\n                    const seed = seedWrap.data as LogicUtil.NodeSeedItem;\r\n\r\n                    const getOrigin = () => {\r\n                        const root = logicData.data as LogicUtil.NodeRoot;\r\n                        const logicMng = (root.logicMng as LogicUtil.WrapElement).data as LogicUtil.NodeLogicManager;\r\n                        return logicMng.defs.find(wrap => (wrap.data as LogicUtil.NodeLogicItem).name === seed.entry)?.data as LogicUtil.NodeLogicItem;\r\n                    }\r\n                    const getSendingValueMap = () => {\r\n                        const seedargMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n                        const valueMap = seedargMng.args.map((wrap, i) => {\r\n                            const seedarg = wrap.data as LogicUtil.NodeSeedArgItem;\r\n                            return { name: seedarg.name, value: def.values[i] }\r\n                        });\r\n\r\n                        // Seedの場合、画面入力のValueMapをSendに適用した値をOriginに渡す必要がある\r\n                        const sendMng = LogicElementUtil.getInnerWrapFixed(seedWrap, 'interface-mng', 'seedsend-mng').data as LogicUtil.NodeSeedSendManager;\r\n                        const sendParams = sendMng.params.map(send => send.data as LogicUtil.NodeParamItem);\r\n                        return sendParams.map(item => {\r\n                            const value = PreviewUtil.convertParamsToValue(item.name, sendParams, valueMap);\r\n                            if (value == undefined) throw new Error(`[${item.name}]がSendのパラメータに存在しない。`);\r\n                            return { name: item.name, value }\r\n                        });\r\n                    }\r\n\r\n                    owner.push(new Particle.Instance(\r\n                        PreviewUtil.buildLogicProps(owner, getOrigin(), logicData, getSendingValueMap())\r\n                    ));\r\n                }\r\n\r\n                const pastRate = frame / limitFrame;\r\n                const needPoint = (countList.length + 1);\r\n                const curPoint = pastRate / divRate;\r\n                if (curPoint >= needPoint) {\r\n                    countList.push(owner.length);\r\n                }\r\n\r\n                if (owner.length > peak) peak = owner.length;\r\n            },\r\n            doEnd: (frame) => {\r\n                setTotal({ ...total, value: frame.toString() })\r\n            }\r\n        });\r\n        setPeak({ ...total, value: peak.toString() })\r\n        setCountList(countList);\r\n        // console.log(countList);\r\n    };\r\n\r\n    const itemJsxList = useMemo(() => {\r\n        const divRate = 1 / Number(divide.value);\r\n        const rateHeight = divRate / 1;\r\n        return countList.map((count, i) => {\r\n            const rate = count / limitParticle;\r\n            return (\r\n                <_AnalisisItem key={i}\r\n                    rate={rate * 100}\r\n                    height={rateHeight * 100}\r\n                />\r\n            );\r\n        });\r\n    }, [countList]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <FormUtil.BorderPanel\r\n                title=\"Property\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Divide\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isNumber\r\n                                checkable={divide}\r\n                                setCheckable={setDivide}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 5, 200),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"center\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Analysis',\r\n                                isEnable: divide.errors.length === 0 && defList.length > 0,\r\n                                callback: execute\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Result\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Peak\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={150}\r\n                                isNumber\r\n                                checkable={peak}\r\n                                isReadOnly\r\n                                setCheckable={setPeak}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"End frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={150}\r\n                                isNumber\r\n                                checkable={total}\r\n                                isReadOnly\r\n                                setCheckable={setTotal}\r\n                            />\r\n                        }\r\n                    />\r\n                    <_AnalisisDiv>\r\n                        {itemJsxList}\r\n                    </_AnalisisDiv>\r\n                </>}\r\n            />\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default StoryFuseAnalysis;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _AnalisisDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #000000d3;\r\n    width: calc(100% - 16px);\r\n    height: 500px;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _AnalisisItem = styled.div<{\r\n    rate: number;\r\n    height: number;\r\n}>`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #ededed77; */\r\n    background: linear-gradient(to bottom, #d1ceda, #b3aec2, #d1ceda);\r\n    width: ${props => props.rate}%;\r\n    height: calc(${props => props.height}% - 1px);\r\n    margin: 1px 0 0 0;\r\n    /* height: 20px; */\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport LogicFormUtil from \"../../factory/util/logicFormUtil\";\r\nimport LogicUtil from \"../../factory/util/logicUtil\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport StoryUtil from \"../util/storyUtil\";\r\nimport { FuseBean } from \"../storyTab\";\r\n\r\n\r\nconst StoryProperty = (props: {\r\n    newFrame: FormUtil.CheckableValue;\r\n    setNewFrame: (newFrame: FormUtil.CheckableValue) => void;\r\n    curFuse: StoryUtil.Fuse;\r\n    seedList: FuseBean[];\r\n    isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: (frame: number, seedId: string, values: number[]) => void;\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const [seed, setSeed] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [template, setTemplate] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const newFrame = props.newFrame;\r\n    const setNewFrame = props.setNewFrame;\r\n    const isInputOK = seed.errors.length === 0 && newFrame.errors.length === 0 && formList.find(form => form.errors.length > 0) == undefined;\r\n\r\n\r\n    const mapping = () => {\r\n        setNewFrame({ ...newFrame, value: props.curFuse.frame.toString() });\r\n        setSeed({ ...seed, value: props.curFuse.seedId.toString() });\r\n        setFormList(props.curFuse.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.curFuse == undefined) return;\r\n        if (props.curFuse.seedId === '') {\r\n            setNewFrame({ ...newFrame, value: '' });\r\n            setSeed({ ...seed, value: '' });\r\n            setFormList([]);\r\n        } else {\r\n            mapping();\r\n        }\r\n    }, [props.curFuse]);\r\n\r\n    const initFormList = (seedId: string) => {\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seedId;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n        }\r\n        setFormList(argumentList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }\r\n\r\n    const propertiesFormJsx = useMemo(() => {\r\n        if (seed.value === '') return <></>;\r\n\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        let presetList: LogicUtil.NodeSampleItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seed.value;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n            formgrpList = activeSeed.formgrps;\r\n            presetList = activeSeed.presets;\r\n        }\r\n        return (<>\r\n            <FormUtil.BorderPanel\r\n                title=\"Preset\"\r\n                innerJsx={<FormUtil.Record\r\n                    jsx={<>\r\n                        <FormUtil.Combobox\r\n                            width={250}\r\n                            checkable={template}\r\n                            setCheckable={setTemplate}\r\n                            headBlank\r\n                            list={presetList.map((sample, i) => {\r\n                                return {\r\n                                    labelText: sample.name,\r\n                                    value: i.toString()\r\n                                }\r\n                            })}\r\n                            isReadOnly={!props.isModify}\r\n                        />\r\n                        <FormUtil.ButtonItem\r\n                            button={{\r\n                                label: 'Apply',\r\n                                isEnable: template.value !== '',\r\n                                callback: () => {\r\n                                    const selectedIndex = Number(template.value);\r\n                                    const values = presetList[selectedIndex].values;\r\n                                    values.forEach((value, i) => {\r\n                                        formList[i].value = value.toString();\r\n                                    });\r\n                                    setFormList(formList.slice());\r\n                                }\r\n                            }}\r\n                        />\r\n                    </>}\r\n                />}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Properties\"\r\n                innerJsx={<>{\r\n                    LogicFormUtil.buildPreviewForms(\r\n                        !props.isModify, argumentList, formgrpList, formList, setFormList\r\n                    )\r\n                }</>}\r\n            />\r\n        </>);\r\n    }, [template, formList, props.isModify]);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: props.isModify,\r\n                        callback: () => {\r\n                            props.cancelAction();\r\n                            setTemplate({ ...template, value: '' });\r\n                            mapping();\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !props.isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !props.isModify || isInputOK,\r\n                        callback: () => {\r\n                            props.modifyAction(\r\n                                Number(newFrame.value),\r\n                                seed.value,\r\n                                formList.map(form => Number(form.value))\r\n                            );\r\n                            setTemplate({ ...template, value: '' });\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Base\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isReadOnly={!props.isModify}\r\n                                isNumber\r\n                                checkable={newFrame}\r\n                                setCheckable={setNewFrame}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Seed\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                checkable={seed}\r\n                                setCheckable={(checkable) => {\r\n                                    initFormList(checkable.value);\r\n                                    setSeed({ ...checkable });\r\n                                }}\r\n                                list={props.seedList.map(seed => {\r\n                                    return { value: seed.name, labelText: seed.disp ?? seed.name }\r\n                                })}\r\n                                headBlank\r\n                                width={250}\r\n                                isReadOnly={!props.isModify}\r\n                                validates={\r\n                                    [\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n            {propertiesFormJsx}\r\n        </_Wrap>\r\n    )\r\n}\r\n\r\nexport default StoryProperty;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Head = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #dbebd6;\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport StoryUtil from \"../util/storyUtil\";\r\n\r\n\r\nconst StoryEnvironment = (props: {\r\n    isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: () => void;\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [frame, setFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [particle, setParticle] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const data = store.storyData as StoryUtil.StoryData;\r\n\r\n    const mapping = () => {\r\n        setFrame({ ...frame, value: data.limitFrame.toString() });\r\n        setParticle({ ...particle, value: data.limitParticle.toString() });\r\n    }\r\n    useEffect(() => {\r\n        mapping();\r\n    }, []);\r\n\r\n    const isInputOK = particle.errors.length === 0 && frame.errors.length === 0;\r\n\r\n    const maxLimit = data.fuseList.map(def => def.frame).reduce((prev, cur) => {\r\n        return prev > cur ? prev : cur;\r\n    }, 0);\r\n\r\n    return (<_Wrap>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Cancel',\r\n                    isEnable: props.isModify,\r\n                    callback: () => {\r\n                        mapping();\r\n                        props.cancelAction();\r\n                    }\r\n                },\r\n                {\r\n                    label: !props.isModify ? 'Modify' : 'Regist',\r\n                    isEnable: !props.isModify || isInputOK,\r\n                    callback: () => {\r\n                        data.limitFrame = Number(frame.value);\r\n                        data.limitParticle = Number(particle.value);\r\n                        setStore({ ...store });\r\n                        props.modifyAction();\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Limit\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Frame\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!props.isModify}\r\n                            isNumber\r\n                            checkable={frame}\r\n                            setCheckable={setFrame}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkNumberRange(value, maxLimit, 1000),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Particle\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={100}\r\n                            isReadOnly={!props.isModify}\r\n                            isNumber\r\n                            checkable={particle}\r\n                            setCheckable={setParticle}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkNumberRange(value, 100, 5000),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </_Wrap>)\r\n}\r\n\r\nexport default StoryEnvironment;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d1d1d1;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import { useContext, useMemo, useRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { JsxEmit } from \"typescript\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport { FuseBean } from \"./storyTab\";\r\nimport StoryUtil from \"./util/storyUtil\";\r\n\r\nconst ITEM_WIDTH = 10;\r\nconst DIV_CNT = 5;\r\n\r\nconst TimelineFrame = (props: {\r\n    newFrameValue: number;\r\n    setNewFrameValue: (num: number) => void;\r\n    isModify: boolean;\r\n    focus: number;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const scenarioData = store.storyData as StoryUtil.StoryData;\r\n    const fuseList = scenarioData.fuseList;\r\n    const cacheList = store.fuseCacheList;\r\n    const limitFrame = scenarioData.limitFrame;\r\n\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const fusePosJsxList = useMemo(() => {\r\n        if(cacheList.length !== fuseList.length) return [];\r\n        const newFrameRate = props.newFrameValue / limitFrame;\r\n        return fuseList.map((fuse, i) => {\r\n            const rate = props.isModify && props.focus === i ? newFrameRate : fuse.frame / limitFrame;\r\n            const x = rate * 100;\r\n            const y = 5 + i * (ITEM_WIDTH + 3);\r\n            const cache = store.fuseCacheList.find(cache => cache.seq === fuse.seq) as StoryUtil.Cache;\r\n            const sus = cache.useFrame / limitFrame * 100;\r\n            return (<div key={i}>\r\n                {props.isModify && props.focus === i ? (\r\n                    <_Line x={x} />\r\n                ) : <></>}\r\n                <_Item\r\n                    x={x} y={y}\r\n                    isFocus={i === props.focus}\r\n                />\r\n                <_Sustain\r\n                    x={x}\r\n                    y={y}\r\n                    sus={sus}\r\n                />\r\n            </div>);\r\n        });\r\n    }, [limitFrame, props.focus, fuseList, props.isModify, props.newFrameValue, cacheList]);\r\n\r\n\r\n    const memoriJsxList = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i < DIV_CNT + 1; i++) {\r\n            const rate = i / DIV_CNT;\r\n            const value = Math.floor(limitFrame * rate);\r\n            jsxList.push(\r\n                <_Memori\r\n                    key={i}\r\n                    x={rate * 100}\r\n                >{value}</_Memori>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [limitFrame]);\r\n\r\n    return (<>\r\n        <_MeasureDiv>\r\n            {memoriJsxList}\r\n        </_MeasureDiv>\r\n        <_Wrap\r\n            ref={ref}\r\n            isModify={props.isModify}\r\n            onClick={(e) => {\r\n                if (!props.isModify) return;\r\n                if (ref != null) {\r\n                    const dom = ref.current as HTMLDivElement;\r\n                    const rect = dom.getBoundingClientRect();\r\n                    const pos = e.clientX - rect.x;\r\n                    const rate = pos / rect.width;\r\n                    const newFrame = Math.floor(limitFrame * rate);\r\n                    props.setNewFrameValue(newFrame);\r\n                }\r\n            }}>\r\n            {fusePosJsxList}\r\n        </_Wrap>\r\n    </>);\r\n}\r\n\r\nexport default TimelineFrame;\r\n\r\nconst MEASURE_WIDTH = 40;\r\nconst _MeasureDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #f2d9341a;\r\n    /* border-bottom: 3px solid #fff; */\r\n    box-sizing: border-box;\r\n    width: calc(100% - 36px);\r\n    height: ${MEASURE_WIDTH}px;\r\n    margin: 2px 0 0 18px;\r\n`;\r\nconst _Memori = styled.div<{\r\n    x: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    /* background-color: #ffffff31; */\r\n    width: 30px;\r\n    height: 20px;\r\n    left: calc(${props => props.x}% - 18px);\r\n    bottom: 0;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: white;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Wrap = styled.div<{\r\n    isModify: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b3d0b937;\r\n    /* border: 1px solid #ffffff4c; */\r\n    ${props => !props.isModify ? '' : css`\r\n        background-color: #ff000049;\r\n    `}\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 36px);\r\n    height: calc(100% - ${MEASURE_WIDTH + 8}px);\r\n    margin: 2px 0 0 18px;\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #ffffff8d;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #ffb222;\r\n    `}\r\n    /* border: solid 1px #000000; */\r\n    border-radius: ${ITEM_WIDTH}px;\r\n    width: ${ITEM_WIDTH}px;\r\n    height: ${ITEM_WIDTH}px;\r\n    left: calc(${props => props.x}% - ${ITEM_WIDTH / 2}px);\r\n    top: ${props => props.y}px;\r\n`;\r\nconst _Sustain = styled.div<{\r\n    x: number;\r\n    y: number;\r\n    sus: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #bfffb324;\r\n    /* border: solid 1px #000000; */\r\n    /* border-radius: ${ITEM_WIDTH}px; */\r\n    width: ${props => props.sus}%;\r\n    height: ${ITEM_WIDTH / 2}px;\r\n    left: calc(${props => props.x}%);\r\n    top: calc(${props => props.y}px + ${ITEM_WIDTH / 4}px);\r\n`;\r\nconst _Line = styled.div<{\r\n    x: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #ff0000f0;\r\n    left: ${props => props.x}%;\r\n    top: 0;\r\n    width: 1px;\r\n    height: 100%;\r\n`;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryFuseAnalysis from \"./tab/storyFuseAnalysis\";\r\nimport StoryProperty from \"./tab/storyProperty\";\r\nimport StoryEnvironment from \"./tab/storyEnvironment\";\r\nimport TimelineFrame from \"./timelineFrame\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport PreviewUtil from \"../preview/previewUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport PreviewLauncherFrame from \"../preview/previewLauncherFrame\";\r\nimport StoryUtil from \"./util/storyUtil\";\r\nimport BuildUtil from \"../preview/buildUtil\";\r\n\r\nexport type FuseBean = {\r\n    name: string;\r\n    disp?: string;\r\n    args: LogicUtil.NodeSeedArgItem[];\r\n    formgrps: LogicUtil.NodeFromGrpItem[];\r\n    presets: LogicUtil.NodeSampleItem[];\r\n};\r\n\r\nconst StoryTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const [newFrame, setNewFrame] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    // const [defList, setDefList] = useState<LaunchDef[]>([]);\r\n    const [isFuseEdit, setFuseEdit] = useState<boolean>(false);\r\n    const [isEnvEdit, setEnvEdit] = useState<boolean>(false);\r\n    const [tabActiveIndex, setTabActiveIndex] = useState<number>(0);\r\n    const [focus, setFocus] = useState<number>(-1);\r\n\r\n    const fuseList = storyData.fuseList;\r\n\r\n    const setFuseList = (fuseList: StoryUtil.Fuse[]) => {\r\n        storyData.fuseList = fuseList;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const seedList: FuseBean[] = useMemo(() => {\r\n        if (store.libraryData == null) return [];\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        const seedWrapList = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        return seedWrapList.map(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n\r\n            // 引数リストを取得\r\n            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const args = argMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n\r\n            // フォームグループリストを取得\r\n            const groupMng = LogicElementUtil.getInnerWrap(wrap, 'interface-mng', 'formgrp-mng');\r\n            let formgrps: LogicUtil.NodeFromGrpItem[] = [];\r\n            if (groupMng != null) {\r\n                formgrps = (groupMng.data as LogicUtil.NodeFromgrpManager).defines.map(wrap => wrap.data as LogicUtil.NodeFromGrpItem);\r\n            }\r\n\r\n            // プリセットリストを取得\r\n            const sampleMng = LogicElementUtil.getInnerWrap(wrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n            const presets = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n            return {\r\n                name: seed.name,\r\n                disp: seed.disp,\r\n                args, formgrps, presets\r\n            }\r\n        });\r\n    }, [store.libraryData]);\r\n\r\n    useEffect(() => {\r\n        if (storyData.fuseList.length > 0) {\r\n            const scenarioCacheList: StoryUtil.Cache[] = [];\r\n            storyData.fuseList.forEach((fuse) => {\r\n                const newCache: StoryUtil.Cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n                updateCache(fuse, newCache);\r\n                scenarioCacheList.push(newCache);\r\n            });\r\n            store.fuseCacheList = scenarioCacheList;\r\n            setStore({ ...store });\r\n        }\r\n    }, [storyData]);\r\n\r\n    const createSeq = () => {\r\n        return fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    const add = () => {\r\n        const seq = createSeq();\r\n        fuseList.push({ seq, frame: 0, seedId: '', values: [] });\r\n        setFuseList(fuseList.slice());\r\n        setFocus(fuseList.length - 1);\r\n        store.fuseCacheList.push({ seq, thumbList: [], useFrame: 0 });\r\n        setTabActiveIndex(2);\r\n        setFuseEdit(true);\r\n    }\r\n\r\n    const fuseJsxList = useMemo(() => {\r\n        return fuseList.map((fuse, i) => {\r\n\r\n            const cache = store.fuseCacheList.find(cache => cache.seq === fuse.seq);\r\n\r\n            let thumbJsx: JSX.Element[] = [];\r\n            if (cache != undefined) {\r\n                thumbJsx = cache.thumbList.slice(0, 3).map((thumb, j) => {\r\n                    const imgJsx = thumb == undefined ? <></> : <_IMG src={thumb.url} />;\r\n                    return (\r\n                        <_SampleDiv key={j}>-\r\n                            <_SampleName>{thumb.name}</_SampleName>\r\n                            <_CanvasDiv>\r\n                                {imgJsx}\r\n                            </_CanvasDiv>\r\n                        </_SampleDiv>\r\n                    );\r\n                });\r\n            };\r\n            return (\r\n                <_ItemDiv key={i}\r\n                    isEnable={!isFuseEdit || focus === i}\r\n                >\r\n                    <_ItemFrame isFocus={i === focus}\r\n                        onClick={() => {\r\n                            setFocus(i);\r\n                        }}\r\n                    >\r\n                        {fuse.seedId === '' ? (\r\n                            <_PropRecord>Creating...</_PropRecord>\r\n                        ) : (<>\r\n                            <_FrameRecord>{fuse.frame}</_FrameRecord>\r\n                            {/* <_SeedRecord>{def.seedName}: {def.seq}</_SeedRecord> */}\r\n                            <_SeedRecord>{fuse.seedId}</_SeedRecord>\r\n                            <_ThumbFrame>\r\n                                {thumbJsx}\r\n                            </_ThumbFrame>\r\n                            {fuse.values.map((val, j) => {\r\n                                const seedBean = seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n                                const name = seedBean.args[j].name;\r\n                                return (\r\n                                    <_PropRecord key={j}><_Title>{name}: </_Title>{val}</_PropRecord>\r\n                                );\r\n                            })}\r\n                        </>)}\r\n                    </_ItemFrame>\r\n                </_ItemDiv>\r\n            );\r\n        });\r\n    }, [fuseList, focus, isFuseEdit, store.fuseCacheList]);\r\n\r\n    /**\r\n     * プレビューオールダイアログを表示する\r\n     */\r\n    const openPreviewAllDialog = () => {\r\n        const minFrame = fuseList[0].frame;\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        const sceens: string[] = [];\r\n        let useFrame: number = 0;\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            guaranteeFrame: minFrame,\r\n            doIterate: (frame, owner) => {\r\n\r\n                fuseList.some(def => {\r\n                    if (def.frame === frame) {\r\n                        LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                    } else if (def.frame > frame) return 1;\r\n                });\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                }));\r\n            },\r\n            doEnd: (frame) => {\r\n                useFrame = frame;\r\n            }\r\n        });\r\n        store.system.dialog = (\r\n            <PreviewLauncherFrame.Component\r\n                sceens={sceens}\r\n                frameCnt={useFrame}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * プレビューソロダイアログを表示する\r\n     */\r\n    const openPreviewSoloDialog = () => {\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        const sceens: string[] = [];\r\n        let useFrame: number = 0;\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            doIterate: (frame, owner) => {\r\n\r\n                const def = fuseList[focus];\r\n                if (frame === 0) {\r\n                    LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                }\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n                    ctx.save();\r\n                }));\r\n            },\r\n            doEnd: (frame) => {\r\n                useFrame = frame;\r\n            }\r\n        });\r\n        store.system.dialog = (\r\n            <PreviewLauncherFrame.Component\r\n                sceens={sceens}\r\n                frameCnt={useFrame}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const updateCache = (fuse: StoryUtil.Fuse, cache: StoryUtil.Cache) => {\r\n\r\n        const logicData = store.libraryData as LogicUtil.WrapElement;\r\n        cache.thumbList = [];\r\n        cache.useFrame = 0;\r\n        const seedProps = LogicElementUtil.getSeedProperties(logicData, fuse.seedId);\r\n        BuildUtil.run({\r\n            limitFrame,\r\n            limitParticle,\r\n            doIterate: (frame, owner) => {\r\n                if (frame === 0) {\r\n                    LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                }\r\n\r\n                const thumb = seedProps.thumbnailList.find(thumb => thumb.frame === frame);\r\n                if (thumb != undefined) {\r\n                    const url = CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    });\r\n                    cache.thumbList.push({ name: thumb.name, url });\r\n                }\r\n            },\r\n            doEnd: (frame) => {\r\n                cache.useFrame = frame;\r\n            }\r\n        });\r\n        setStore({ ...store });\r\n    }\r\n\r\n    const isCreate = fuseList.length === 0 ? false : fuseList[fuseList.length - 1].seedId === '';\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n        >\r\n            <_ListDiv>\r\n                <_ListHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Preview All',\r\n                                isEnable: !isFuseEdit,\r\n                                callback: openPreviewAllDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_ListHead>\r\n                <_ListHead>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        buttons={[\r\n                            {\r\n                                label: 'Add',\r\n                                isEnable: !isFuseEdit,\r\n                                callback: add\r\n                            },\r\n                            {\r\n                                label: 'Delete',\r\n                                isEnable: !isFuseEdit && focus != -1,\r\n                                callback: () => {\r\n                                    fuseList.splice(focus, 1);\r\n                                    setFuseList(fuseList.slice());\r\n                                    if (focus > 0) {\r\n                                        setFocus(focus - 1);\r\n                                    } else if (focus === 0 && fuseList.length === 0) {\r\n                                        setFocus(-1);\r\n                                        setTabActiveIndex(0);\r\n                                    }\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Replicate',\r\n                                isEnable: !isFuseEdit && focus != -1,\r\n                                callback: () => {\r\n                                    const cloneFuse = JSON.parse(JSON.stringify(fuseList[focus])) as StoryUtil.Fuse;\r\n                                    const newSeq = createSeq();\r\n                                    cloneFuse.seq = newSeq;\r\n                                    fuseList.splice(focus, 0, cloneFuse);\r\n                                    setFuseList(fuseList.slice());\r\n                                    setFocus(focus + 1);\r\n\r\n                                    // const baseCache = store.launchCacheList.find(cache => cache.seq === defList[focus].seq) as Cache;\r\n                                    // console.log(baseCache);\r\n                                    // const cloneCache = JSON.parse(JSON.stringify(baseCache)) as Cache;\r\n                                    // cloneCache.seq = newSeq;\r\n                                    const newCache: StoryUtil.Cache = { seq: newSeq, thumbList: [], useFrame: 0 };\r\n                                    updateCache(cloneFuse, newCache);\r\n                                    store.fuseCacheList.push(newCache);\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Preview Solo',\r\n                                isEnable: !isFuseEdit && focus != -1,\r\n                                callback: openPreviewSoloDialog\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_ListHead>\r\n                <_ListBody>\r\n                    <_Timeline><TimelineFrame\r\n                        newFrameValue={Number(newFrame.value)}\r\n                        setNewFrameValue={(num: number) => {\r\n                            setNewFrame({ ...newFrame, value: num.toString() })\r\n                        }}\r\n                        isModify={isFuseEdit}\r\n                        focus={focus}\r\n                        seedList={seedList}\r\n                    /></_Timeline>\r\n                    <_ListMain>\r\n                        {fuseJsxList}\r\n                    </_ListMain>\r\n                </_ListBody>\r\n            </_ListDiv>\r\n            <_RightDiv>\r\n                <_RightInner>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            {\r\n                                name: 'Environment', enable: !isFuseEdit, cont: <StoryEnvironment\r\n                                    isModify={isEnvEdit}\r\n                                    cancelAction={() => {\r\n                                        setEnvEdit(false);\r\n                                    }}\r\n                                    modifyAction={() => {\r\n                                        if (!isEnvEdit) {\r\n                                            setEnvEdit(true);\r\n                                        } else {\r\n                                            setEnvEdit(false);\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            },\r\n                            { name: 'Analysis', enable: !isFuseEdit && !isEnvEdit, cont: <StoryFuseAnalysis /> },\r\n                            {\r\n                                name: 'Property', enable: !isEnvEdit && focus != -1, cont: <StoryProperty\r\n                                    newFrame={newFrame}\r\n                                    setNewFrame={setNewFrame}\r\n                                    curFuse={fuseList[focus]}\r\n                                    seedList={seedList}\r\n                                    isModify={isFuseEdit}\r\n                                    cancelAction={() => {\r\n                                        setFuseEdit(false);\r\n                                        if (isCreate) {\r\n                                            fuseList.splice(fuseList.length - 1, 1);\r\n                                            setFuseList(fuseList.slice());\r\n                                            setFocus(focus - 1);\r\n                                            if (fuseList.length === 0) {\r\n                                                setTabActiveIndex(0);\r\n                                            }\r\n                                        }\r\n                                    }}\r\n                                    modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                        if (!isFuseEdit) {\r\n                                            setFuseEdit(true);\r\n                                        } else {\r\n                                            const fuse = fuseList[focus];\r\n                                            fuse.frame = frame;\r\n                                            fuse.seedId = seedId;\r\n                                            fuse.values = values;\r\n                                            const seq = fuse.seq;\r\n                                            const cache = store.fuseCacheList.find(cache => cache.seq === seq) as StoryUtil.Cache;\r\n                                            updateCache(fuse, cache);\r\n                                            fuseList.sort((a, b) => {\r\n                                                return a.frame - b.frame;\r\n                                            });\r\n                                            setFuseList(fuseList.slice());\r\n                                            setFocus(fuseList.findIndex(def => def.seq === seq));\r\n                                            setFuseEdit(false);\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            }\r\n                        ]}\r\n                        selectTabIndex={setTabActiveIndex}\r\n                        activeNo={tabActiveIndex}\r\n                    />\r\n                </_RightInner>\r\n            </_RightDiv>\r\n            {/* <_Blind isVisible={isBackingWnd}>\r\n                    <_Contents>{!isBackingWnd ? <></> : <BackingEditorFrame />}</_Contents>\r\n                </_Blind> */}\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default StoryTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #1e1c22;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _ListDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #653fd6; */\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst LIST_HEAD = 40;\r\nconst TIMELINE_WIDTH = 240;\r\n\r\nconst _ListHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d8;\r\n    width: 100%;\r\n    height: ${LIST_HEAD}px;\r\n`;\r\n\r\nconst _ListBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: calc(100% - ${LIST_HEAD * 2}px);\r\n`;\r\nconst _Timeline = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #00071b;\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: ${TIMELINE_WIDTH}px;\r\n`;\r\nconst _ListMain = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #c551b6; */\r\n    vertical-align: top;\r\n    width: 100%;\r\n    height: calc(100% - ${TIMELINE_WIDTH}px);\r\n    overflow-x: auto;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _RightDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c1c0c4;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\nconst _RightInner = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n`;\r\n\r\nconst _TabContWrap = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 630px;\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    /* opacity: 0.9; */\r\n    overflow: hidden;\r\n`;\r\n\r\n\r\nconst _ItemDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    background: linear-gradient(to right, #3a383d, #8d8999, #3a383d);\r\n    vertical-align: top;\r\n    width: 220px;\r\n    height: 100%;\r\n    /* margin-left: 1px; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n    background: linear-gradient(to right, #66626b, #b7b2c7, #66626b);\r\n    }\r\n`;\r\n\r\nconst _ItemFrame = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #8997bd29;\r\n    ${props => !props.isFocus ? '' : css`\r\n        background-color: #d7eb7d83;\r\n    `}\r\n    border: 1px solid #2c3577;\r\n    border-radius: 2px;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n    box-sizing: border-box;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _PropRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    /* margin-top: 1px; */\r\n    height: 24px;\r\n    /* background: linear-gradient(to bottom, #aaaaaa89, #e1e1e18a, #aaaaaa89); */\r\n    /* font-size: 20px; */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #555555;\r\n    font-style: italic;\r\n    line-height: 22px;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Title = styled.span`\r\n    color: #f00;\r\n`;\r\n\r\n\r\nconst _FrameRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    height: 35px;\r\n    font-size: 26px;\r\n    font-weight: 600;\r\n    color: #132693;\r\n    font-style: italic;\r\n    line-height: 34px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\nconst _SeedRecord = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    /* background-color: #bcb7ca; */\r\n    width: 100%;\r\n    height: 35px;\r\n    font-size: 26px;\r\n    font-style: italic;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    line-height: 34px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ThumbFrame = styled.div<{}>`\r\n    display: inline-block;\r\n    /* background-color: #4b09ff; */\r\n    width: 100%;\r\n`;\r\nconst WND_SIZE = 65;\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    margin: 0 0 0 5px;\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport { ProjectType, ProjectTypes } from \"../../../redux/store/store\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\n\r\nnamespace NewProjectDialog {\r\n\r\n    type CloudLibInfo = {\r\n        seq: number;\r\n        name: string;\r\n        ownerId: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    type LocalLibInfo = {\r\n        fileName: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const Component = (props: {\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [type, setType] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n        const [selectedLib, setSelectedLib] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [localLib, setLocalLib] = useState<null | LocalLibInfo>(null);\r\n\r\n        const [cloudLibs, setCloudLibs] = useState<null | CloudLibInfo[]>(null);\r\n\r\n        const width = 500;\r\n        const height = 340;\r\n\r\n        // useEffect(() => {\r\n        //     setType({ ...type });\r\n        // }, []);\r\n\r\n        const getStoryLib = () => {\r\n            let storyLib: LogicUtil.WrapElement | null = null;\r\n            if (cloudLibs != null) {\r\n                const lib = cloudLibs.find(lib => lib.seq === Number(selectedLib.value));\r\n                if (lib != undefined) {\r\n                    storyLib = lib.rootData;\r\n                }\r\n            } else if (localLib != null) {\r\n                storyLib = localLib.rootData;\r\n            }\r\n            return storyLib;\r\n        }\r\n\r\n        const usingHash = useMemo(() => {\r\n            let hash = '-';\r\n            const lib = getStoryLib();\r\n            if (lib != null) {\r\n                hash = DataUtil.getSHA256Hash(JSON.stringify(lib));\r\n            }\r\n            return hash;\r\n        }, [selectedLib, localLib]);\r\n\r\n        const isCreateEnabled = () => {\r\n            if (type.value === '') return false;\r\n            if ((type.value as ProjectType) === 'story') {\r\n                return usingHash !== '-';\r\n            }\r\n            return true;\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Create',\r\n                isEnable: isCreateEnabled(),\r\n                callback: () => {\r\n                    const projectType = type.value as ProjectType;\r\n                    if (projectType as ProjectType === 'library') {\r\n                        store.libraryData = LogicElementUtil.getInitialData();\r\n                    } else {\r\n                        store.libraryData = getStoryLib();\r\n                        store.storyData = {\r\n                            limitFrame: 300,\r\n                            limitParticle: 3000,\r\n                            fuseList: []\r\n                        };\r\n                    }\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, select project type!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={type}\r\n                            width={178}\r\n                            setCheckable={(checkable => {\r\n                                setType(checkable);\r\n                                if (checkable.value as ProjectType !== 'story') {\r\n                                    setCloudLibs(null);\r\n                                    setLocalLib(null);\r\n                                    setSelectedLib({ value: '', errors: [] });\r\n                                }\r\n                            })}\r\n                            list={ProjectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.BorderPanel\r\n                    title=\"Story\"\r\n                    isEnable={type.value as ProjectType === 'story'}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Source\"\r\n                            jsx={<>\r\n                                <FormUtil.ButtonItem\r\n                                    button={{\r\n                                        label: 'Cloud',\r\n                                        width: 120,\r\n                                        callback: () => {\r\n                                            findAllReleaseProjectList().then(resList => {\r\n                                                setCloudLibs(resList.map(res => {\r\n                                                    return {\r\n                                                        name: res.name,\r\n                                                        ownerId: res.owner,\r\n                                                        seq: res.seq,\r\n                                                        rootData: JSON.parse(DataUtil.unZip(res.source))\r\n                                                    }\r\n                                                }));\r\n                                                setLocalLib(null);\r\n                                            });\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                <FormUtil.ButtonItem\r\n                                    button={{\r\n                                        label: 'Local',\r\n                                        width: 120,\r\n                                        callback: () => {\r\n                                            (async () => {\r\n                                                const [fileHandle] = await window.showOpenFilePicker();\r\n                                                const file = await fileHandle.getFile();\r\n                                                const fileContents = await file.text();\r\n                                                const text = DataUtil.unZip(fileContents);\r\n                                                setLocalLib({\r\n                                                    fileName: file.name,\r\n                                                    rootData: JSON.parse(text)\r\n                                                });\r\n                                                setCloudLibs(null);\r\n                                                setSelectedLib({ value: '', errors: [] });\r\n                                            })();\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </>}\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Cloud\"\r\n                            isEnabled={cloudLibs != null}\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    marginLeft={2}\r\n                                    checkable={selectedLib}\r\n                                    width={278}\r\n                                    setCheckable={setSelectedLib}\r\n                                    list={(cloudLibs ?? []).map((item) => {\r\n                                        // const disp = `${item.ownerId}: ${item.name}`;\r\n                                        return { value: item.seq.toString(), labelText: item.name };\r\n                                    })}\r\n                                    headBlank\r\n                                    validates={[\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Local\"\r\n                            isEnabled={localLib != null}\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={localLib == null ? '' : localLib.fileName}\r\n                                    isRecordItem\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Hash\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={usingHash}\r\n                                    isRecordItem\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewProjectDialog;\r\n\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport { ProjectType, ProjectTypes } from \"../../../redux/store/store\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { AiOutlineEnter } from \"react-icons/ai\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\n\r\nnamespace NewProjectDialogStoryOnly {\r\n\r\n    type CloudLibInfo = {\r\n        seq: number;\r\n        name: string;\r\n        ownerId: string;\r\n        rootData: LogicUtil.WrapElement;\r\n    }\r\n\r\n    export const Component = (props: {\r\n        extendAction?: () => void;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const [selectedType, setSelectedType] = useState<FormUtil.CheckableValue>({ value: 'official', errors: [] });\r\n        const [selectedLib, setSelectedLib] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n        const [cloudLibs, setCloudLibs] = useState<null | CloudLibInfo[]>(null);\r\n\r\n        const width = 500;\r\n        const height = 210;\r\n\r\n        useEffect(() => {\r\n            findAllReleaseProjectList().then(resList => {\r\n                setCloudLibs(resList.map(res => {\r\n                    return {\r\n                        name: res.name,\r\n                        ownerId: res.owner,\r\n                        seq: res.seq,\r\n                        rootData: JSON.parse(DataUtil.unZip(res.source))\r\n                    }\r\n                }));\r\n            });\r\n        }, []);\r\n\r\n        const getStoryLib = () => {\r\n            let storyLib: LogicUtil.WrapElement | null = null;\r\n            if (cloudLibs != null) {\r\n                const lib = cloudLibs.find(lib => lib.seq === Number(selectedLib.value));\r\n                if (lib != undefined) {\r\n                    storyLib = lib.rootData;\r\n                }\r\n            }\r\n            return storyLib;\r\n        }\r\n\r\n        const usingHash = useMemo(() => {\r\n            let hash = '-';\r\n            const lib = getStoryLib();\r\n            if (lib != null) {\r\n                hash = DataUtil.getSHA256Hash(JSON.stringify(lib));\r\n            }\r\n            return hash;\r\n        }, [selectedLib]);\r\n\r\n        const isCreateEnabled = () => {\r\n            return usingHash !== '-';\r\n        }\r\n\r\n        const buttons: FormUtil.ButtonProps[] = [\r\n            {\r\n                label: 'Cancel',\r\n                icon: <MdCancelPresentation />,\r\n                width: 120,\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                }\r\n            },\r\n            {\r\n                label: 'Create',\r\n                icon: <AiOutlineEnter />,\r\n                width: 120,\r\n                isEnable: isCreateEnabled(),\r\n                callback: () => {\r\n                    store.libraryData = getStoryLib();\r\n                    store.storyData = {\r\n                        limitFrame: 300,\r\n                        limitParticle: 3000,\r\n                        fuseList: []\r\n                    };\r\n                    store.system.dialog = null;\r\n                    setStore({ ...store });\r\n                    if (props.extendAction != undefined) props.extendAction();\r\n                }\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Please, select library!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    isEnabled={true}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={selectedType}\r\n                            width={278}\r\n                            setCheckable={setSelectedType}\r\n                            list={['official','original'].map((item) => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Library\"\r\n                    isEnabled={cloudLibs != null}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={selectedLib}\r\n                            width={278}\r\n                            setCheckable={setSelectedLib}\r\n                            list={(cloudLibs ?? []).map((item) => {\r\n                                // const disp = `${item.ownerId}: ${item.name}`;\r\n                                return { value: item.seq.toString(), labelText: item.name };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                {/* <FormUtil.FormRecord\r\n                    titleLabel=\"Hash\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            value={usingHash}\r\n                            isRecordItem\r\n                        />\r\n                    }\r\n                /> */}\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={buttons}\r\n                />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewProjectDialogStoryOnly;\r\n\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst insertProject = async (owner: number, req: StoreCloud.Project) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `INSERT INTO prjcttbl(seq, owner, name, source, lastmod) VALUES(${req.seq}, ${owner}, '${req.name}', '${req.source}', datetime ('now'))`)\r\n}\r\n\r\nconst updateProjectName = async (seq: number, newName: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set name = '${newName}' where seq = ${seq}`)\r\n}\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;","export namespace SPUtil {\r\n\r\n    export const SCREEN_WIDTH = 640;\r\n    export const SCREEN_HEIGHT = 960;\r\n}","import assert from \"assert\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport { ProjectType } from \"../../../redux/store/store\";\r\nimport StoreCloud from \"../../../redux/store/storeCloud\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport LogicElementUtil from \"../factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../factory/util/logicUtil\";\r\nimport StoryUtil from \"../launcher/util/storyUtil\";\r\nimport NameDefDialog from \"./nameDefDialog\";\r\nimport NewProjectDialog from \"./newProjectDialog\";\r\nimport NewProjectDialogStoryOnly from \"./newProjectDialogStoryOnly\";\r\n\r\nconst ManageTab = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n    const listItemJsx = store.cloud == null ? [] : store.cloud.projects.map((project, i) => {\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    setFcsListIdx(i);\r\n                    console.log(DataUtil.getHashedFromProjectSeq(project.seq));\r\n                }}\r\n                onContextMenu={() => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={DataUtil.getDirectUrl(project.type, project.seq)}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }}\r\n            >\r\n                <_Status type={project.type}>[{project.type}] </_Status>\r\n                <_Name>{project.name}</_Name>\r\n                {/* <_Date> -{item.lastmod}</_Date> */}\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    const getProjectType = () => {\r\n        let str = '-';\r\n        if (store.libraryData != null) str = 'library';\r\n        if (store.storyData != null) str = 'story';\r\n        return str;\r\n    }\r\n\r\n    const hasData = store.libraryData != null;\r\n    const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n    useEffect(() => {\r\n        if (store.cloud == null) {\r\n            setFcsListIdx(-1);\r\n        }\r\n    }, [store.cloud]);\r\n\r\n    const [elementSize, developCnt, privateCnt, releaseCnt, logicCnt, fuseCnt] = useMemo(() => {\r\n        if (store.libraryData == null) return [0, 0, 0, 0, 0, 0];\r\n        let size = 0;\r\n        const incrRec = (wrap: LogicUtil.WrapElement) => {\r\n            size++;\r\n            const listName = LogicElementUtil.getListParamName(wrap.type);\r\n            if (listName != null) {\r\n                const list = wrap.data[listName] as LogicUtil.WrapElement[];\r\n                list.forEach(wrap => incrRec(wrap));\r\n            }\r\n        }\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        incrRec(root.logicMng);\r\n        incrRec(root.seedMng);\r\n\r\n        let developCnt = 0;\r\n        let privateCnt = 0;\r\n        let releaseCnt = 0;\r\n        let fuseCnt = 0;\r\n        const seedMng = root.seedMng.data as LogicUtil.NodeSeedManager;\r\n        seedMng.defs.forEach(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n            switch (seed.permit) {\r\n                case 'develop': developCnt++; break;\r\n                case 'private': privateCnt++; break;\r\n                case 'release': releaseCnt++; break;\r\n            }\r\n        });\r\n\r\n        const logicMng = root.logicMng.data as LogicUtil.NodeLogicManager;\r\n\r\n        if (store.storyData != null) {\r\n            fuseCnt = store.storyData.fuseList.length;\r\n        }\r\n        return [size, developCnt, privateCnt, releaseCnt, logicMng.defs.length, fuseCnt];\r\n    }, [store.libraryData]);\r\n\r\n    \r\n    const getData = (type: ProjectType) => {\r\n        switch (type) {\r\n            case 'library': {\r\n                return store.libraryData;\r\n            }\r\n            case 'story': {\r\n                const data: StoryUtil.ScenarioFileProps = {\r\n                    libraryData: store.libraryData as LogicUtil.WrapElement,\r\n                    scenarioData: store.storyData as StoryUtil.StoryData\r\n                };\r\n                return data;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを新規アップロードする\r\n     */\r\n    const uploadCloud = () => {\r\n        const type = getProjectType() as ProjectType;\r\n        const source = DataUtil.gZip(JSON.stringify(getData(type)));\r\n        store.system.dialog = <NameDefDialog.Component\r\n            targetSeq={-1}\r\n            type={type}\r\n            source={source}\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを上書き更新する\r\n     */\r\n    const overwriteCloudFile = () => {\r\n        const type = getProjectType() as ProjectType;\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.gZip(JSON.stringify(getData(type)));\r\n        updateProjectSource(curPrj.seq, getProjectType(), source).then(() => {\r\n            curPrj.source = source;\r\n            curPrj.type = type;\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Update project succesful!\"\r\n            />;\r\n            setStore({ ...store });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 選択中のクラウド上のファイルを読み込む\r\n     */\r\n    const cloneCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.unZip(curPrj.source);\r\n        const data = JSON.parse(source);\r\n        switch (curPrj.type) {\r\n            case 'library': {\r\n                store.libraryData = data;\r\n            } break;\r\n            case 'story': {\r\n                const scenarioFileProps = data as StoryUtil.ScenarioFileProps;\r\n                store.libraryData = scenarioFileProps.libraryData;\r\n                store.storyData = scenarioFileProps.scenarioData;\r\n            } break;\r\n        }\r\n        store.system.dialog = <ConfirmDialog.Component\r\n            message=\"Clone project succesful!\"\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    const saveLocalFile = () => {\r\n        switch (getProjectType() as ProjectType) {\r\n            case 'library': DataUtil.saveLibraryFile(store, setStore); break;\r\n            case 'story': DataUtil.saveScenarioFile(store, setStore); break;\r\n        }\r\n    }\r\n\r\n    const getNewSaveButton = () => {\r\n        switch (tabIndex) {\r\n            // Cloud\r\n            case 0: return {\r\n                label: 'Upload cloud',\r\n                width: 210,\r\n                isEnable: hasData && store.cloud != null,\r\n                callback: uploadCloud\r\n            }\r\n            // Local\r\n            case 1: return {\r\n                label: 'Save file',\r\n                width: 210,\r\n                isEnable: hasData && store.fileHandle == null,\r\n                callback: () => {\r\n                    // store.fileHandle = null;\r\n                    // setStore({...store});\r\n                    saveLocalFile();\r\n                }\r\n            }\r\n        }\r\n        throw assert;\r\n    }\r\n\r\n    const getOverwriteButton = () => {\r\n        switch (tabIndex) {\r\n            // Cloud\r\n            case 0: return {\r\n                label: 'Overwrite',\r\n                width: 210,\r\n                isEnable: fcsListIdx != -1 && hasData,\r\n                callback: overwriteCloudFile\r\n            }\r\n            // Local\r\n            case 1: return {\r\n                label: 'Overwrite',\r\n                width: 210,\r\n                isEnable: hasData && store.fileHandle != null,\r\n                callback: () => {\r\n                    // store.fileHandle = null;\r\n                    // setStore({...store});\r\n                    saveLocalFile();\r\n                }\r\n            }\r\n        }\r\n        throw assert;\r\n    }\r\n\r\n    const cloudJsx = (<_ContDiv isEnable={store.cloud != null}>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Load',\r\n                    isEnable: !hasData && fcsListIdx !== -1 && projects[fcsListIdx].source !== '',\r\n                    callback: cloneCloudFile\r\n                },\r\n                {\r\n                    label: 'Rename',\r\n                    width: 110,\r\n                    isEnable: fcsListIdx != -1,\r\n                    callback: () => {\r\n                        store.system.dialog = <NameDefDialog.Component\r\n                            targetSeq={projects[fcsListIdx].seq}\r\n                        />;\r\n                        setStore({ ...store });\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Delete',\r\n                    width: 110,\r\n                    isEnable: fcsListIdx != -1,\r\n                    callback: () => {\r\n                        deleteProject(projects[fcsListIdx].seq).then(() => {\r\n                            store.system.dialog = <ConfirmDialog.Component\r\n                                message=\"Delete project succesful!\"\r\n                            />;\r\n                            projects.splice(fcsListIdx, 1);\r\n                            setFcsListIdx(fcsListIdx - 1);\r\n                            setStore({ ...store });\r\n                        });\r\n                    }\r\n                },\r\n            ]}\r\n        />\r\n        <_ListDiv>\r\n            {listItemJsx}\r\n        </_ListDiv>\r\n    </_ContDiv>);\r\n\r\n    const localJsx = (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"center\"\r\n            buttons={[\r\n                {\r\n                    label: 'Load',\r\n                    width: 100,\r\n                    isEnable: !hasData,\r\n                    callback: () => { DataUtil.loadFile(store, setStore) }\r\n                },\r\n                {\r\n                    label: 'Disconnect',\r\n                    width: 160,\r\n                    isEnable: store.fileHandle != null,\r\n                    callback: () => {\r\n                        store.fileHandle = null;\r\n                        setStore({ ...store });\r\n                    }\r\n                },\r\n            ]}\r\n        />\r\n    </>);\r\n\r\n    return (<_Wrap>\r\n        <_HeaderDiv>\r\n            <FormUtil.ButtonRecord\r\n                align=\"left\"\r\n                buttons={[\r\n                    {\r\n                        label: 'New Project',\r\n                        isEnable: !hasData,\r\n                        callback: () => {\r\n\r\n                            store.system.dialog = store.env.isEditLibrary ? <NewProjectDialog.Component /> : <NewProjectDialogStoryOnly.Component />;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Clear',\r\n                        width: 100,\r\n                        isEnable: hasData,\r\n                        callback: () => {\r\n                            store.libraryData = null;\r\n                            store.storyData = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                ]}\r\n            />\r\n        </_HeaderDiv>\r\n        <_BodyDiv>\r\n            <_LeftDiv isEnable={true}>\r\n                <TabbedPane\r\n                    tabElements={[\r\n                        { name: 'Cloud', enable: true, cont: cloudJsx },\r\n                        { name: 'Local', enable: true, cont: localJsx },\r\n                    ]}\r\n                    activeNo={tabIndex}\r\n                    selectTabIndex={(index: number) => setTabIndex(index)}\r\n                />\r\n            </_LeftDiv>\r\n            <_RighttDiv>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    buttons={[\r\n                        getNewSaveButton(),\r\n                        getOverwriteButton()\r\n                    ]}\r\n                />\r\n                <FormUtil.BorderPanel\r\n                    title=\"Project\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Type\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={getProjectType()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Private\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : privateCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Release\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : releaseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Logic\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : logicCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Elements\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : elementSize.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Hash\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    // width={340}\r\n                                    isRecordItem\r\n                                    value={!hasData ? '-' : DataUtil.getSHA256Hash(JSON.stringify(store.libraryData))}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Fuses\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : fuseCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                />\r\n                {/* <FormUtil.BorderPanel\r\n                    title=\"File\"\r\n                    isEnable={hasData}\r\n                    innerJsx={<>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Type\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={getProjectType()}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Develop\"\r\n                            jsx={\r\n                                <FormUtil.FixedText\r\n                                    value={!hasData ? '-' : developCnt.toString()}\r\n                                />\r\n                            }\r\n                        />\r\n                    </>}\r\n                /> */}\r\n            </_RighttDiv>\r\n        </_BodyDiv>\r\n\r\n    </_Wrap >);\r\n}\r\n\r\nexport default ManageTab;\r\n\r\nconst updateProjectSource = async (seq: number, type: string, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set type = '${type}', source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from prjcttbl where seq = ${seq};`)\r\n}\r\n\r\nconst HEADER_WIDTH = 40;\r\n\r\nconst _Wrap = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    background-color: #ebebeb30;\r\n`;\r\n\r\nconst _HeaderDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: ${HEADER_WIDTH}px;\r\n    background-color: #d1f5f32f;\r\n`;\r\n\r\nconst _BodyDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - ${HEADER_WIDTH}px);\r\n    background-color: #221a212c;\r\n`;\r\n\r\nconst _LeftDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    /* background-color: #ffe3fb53; */\r\n    vertical-align: top;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ContDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 38px);\r\n    box-sizing: border-box;\r\n    background-color: #f0ecd43d;\r\n    border: 1px solid #002c8a;\r\n    border-radius: 4px;\r\n`;\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    type: ProjectType | '';\r\n}>`\r\n    color: #0000006d;\r\n    ${props => props.type === 'library' ? css`color: #b90000be;` : ''}\r\n    ${props => props.type === 'story' ? css`color: #003bb9bd;` : ''}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\nconst _RighttDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #cbf7cd2d;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane, TabElements } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport LogicMainteTab from \"./factory/logicMainteTab\";\r\nimport StoryTab from \"./launcher/storyTab\";\r\nimport ManageTab from \"./manage/manageTab\";\r\n\r\nconst CreateChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const getProjectType = () => {\r\n        let str = '-';\r\n        if (store.libraryData != null) str = 'library';\r\n        if (store.storyData != null) str = 'scenario';\r\n        return str;\r\n    };\r\n    const projectType = getProjectType();\r\n\r\n    const tabElements: TabElements[] = [];\r\n    tabElements.push({ name: 'Manage', enable: true, cont: <ManageTab /> });\r\n    tabElements.push({ name: 'Story', enable: projectType === 'scenario', cont: projectType === 'scenario' ? <StoryTab /> : <></> });\r\n    if (store.env.isEditLibrary) {\r\n        tabElements.push({ name: 'Library', enable: projectType === 'library', cont: <LogicMainteTab /> });\r\n    }\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={tabElements}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CreateChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport TreeUtil from \"../../utils/treeUtil\";\r\nimport LogicElementUtil from \"../create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../create/factory/util/logicUtil\";\r\nimport PreviewLogicFrame from \"../create/preview/previewLogicFrame\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\ntype LibProps = {\r\n    name: string;\r\n    ownerId: string;\r\n    lastmod: string;\r\n    rootData: LogicUtil.WrapElement;\r\n    isOpen: boolean;\r\n    seedList: SeedProps[];\r\n}\r\ntype SeedProps = {\r\n    name: string;\r\n    disp?: string;\r\n    argCount: number;\r\n    master: LogicUtil.WrapElement;\r\n}\r\n\r\nconst PublishFrame = (props: {\r\n    setLibCnt: (artsCnt: number) => void;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [libList, setLibList] = useState<LibProps[]>([]);\r\n\r\n    useEffect(() => {\r\n        findAllReleaseProjectList().then((resList) => {\r\n            const libList: LibProps[] = [];\r\n            resList.forEach(res => {\r\n                const name = res.name;\r\n                const ownerId = res.owner;\r\n                const lastmod = res.lastmod;\r\n                const rootData = JSON.parse(DataUtil.unZip(res.source)) as LogicUtil.WrapElement;\r\n                const seedMng = (rootData.data as LogicUtil.NodeRoot).seedMng.data as LogicUtil.NodeSeedManager;\r\n                const seedList: SeedProps[] = seedMng.defs\r\n                    .filter(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        return seed.permit === 'release';\r\n                    })\r\n                    .map(wrap => {\r\n                        const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n                        const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng');\r\n                        const argCount = (argMng.data as LogicUtil.NodeSeedArgManager).args.length;\r\n                        return { name: seed.name, disp: seed.disp, argCount, master: wrap };\r\n                    });\r\n                libList.push({\r\n                    name, ownerId, lastmod, rootData, seedList, isOpen: false\r\n                });\r\n            });\r\n            setLibList(libList);\r\n            props.setLibCnt(libList.length);\r\n        });\r\n    }, []);\r\n\r\n    const download = (plainData: string) => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        window.showSaveFilePicker(options).then((handle) => {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await handle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"Successfully download!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        }).catch(() => {\r\n            console.log('キャンセルされました');\r\n        });\r\n    }\r\n\r\n    const libListJsx = libList\r\n        .filter(lib => lib.seedList.length > 0).map((lib, i) => {\r\n            const dispCnt = !lib.isOpen ? 0 : lib.seedList.length;\r\n            return (<_Item key={i} count={dispCnt}>\r\n                <_Header onClick={() => {\r\n                    // window.open(DataUtil.getPreviewURL(score.seq), '_blank');\r\n                }}>\r\n                    <_Owner>{`${lib.ownerId}`}</_Owner>\r\n                    <_CName onClick={() => {\r\n                        download(JSON.stringify(lib.rootData));\r\n                    }}>{`${lib.name}`}</_CName><_CDate>{lib.lastmod}</_CDate>\r\n                </_Header>\r\n                <_DetailMain count={dispCnt}>\r\n                    {lib.seedList.map((seed, j) => {\r\n                        let labelName = seed.name;\r\n                        if (seed.disp != undefined) labelName = seed.disp;\r\n                        return (\r\n                            <_SeedItemFrame key={j} onClick={() => {\r\n                                store.system.dialog = (\r\n                                    <PreviewLogicFrame.Component\r\n                                        master={seed.master}\r\n                                        rootData={lib.rootData}\r\n                                        closeButtonAction={() => {\r\n                                            store.system.dialog = null;\r\n                                            setStore({ ...store });\r\n                                        }}\r\n                                    />\r\n                                );\r\n                                setStore({ ...store });\r\n                            }}>\r\n                                <_SeedItemInner>\r\n                                    <_SeedName>{labelName}</_SeedName>\r\n                                    <_SeedArgCnt>{` [${seed.argCount} arguments]`}</_SeedArgCnt>\r\n                                </_SeedItemInner>\r\n                            </_SeedItemFrame>\r\n                        );\r\n                    })}\r\n                </_DetailMain>\r\n                <_DetailOpen onClick={() => {\r\n                    libList[i].isOpen = !libList[i].isOpen;\r\n                    setLibList(libList.slice());\r\n                }}>\r\n                    <_CSummary>{` ${lib.seedList.length} seeds ▼`}</_CSummary>\r\n                </_DetailOpen>\r\n            </_Item>);\r\n        });\r\n\r\n    return (\r\n        <_ListFrame>{libListJsx}</_ListFrame>\r\n    );\r\n}\r\n\r\nexport default PublishFrame;\r\n\r\nconst findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT name, seq, (select id from user_tbl where seq = prj.owner) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        WHERE type = 'library' and source <> ''\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #6d7a86;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst SEED_HEIGTH = 40;\r\nconst _Item = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${props => (props.count > 0 ? 8 : 0) + 89 + props.count * SEED_HEIGTH}px;\r\n    /* border-bottom: 1px solid #262626; */\r\n    /* background-color: #2e2e2e; */\r\n    /* background: linear-gradient(to bottom, transparent, #4f4f4f); */\r\n    margin: 2px 0 0 0;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    } */\r\n    transition: height 200ms;\r\n`;\r\nconst _Header = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100%);\r\n    height: 60px;\r\n    /* background-color: #c9e3df; */\r\n    background: linear-gradient(to bottom, #b9b9b9, #e2e2e2, #b9b9b9);\r\n    /* margin: 4px 0 0 4px; */\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    /* &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff);\r\n    } */\r\n`;\r\nconst _DetailMain = styled.div<{\r\n    count: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 40px);\r\n    height: ${props => (props.count > 0 ? 8 : 0) + props.count * SEED_HEIGTH}px;\r\n    background-color: #c7c7c7;\r\n    border-radius: 0 0 2px 2px;\r\n    margin: 0 0 0 20px;\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    transition: height 200ms;\r\n    overflow-y: hidden;\r\n`;\r\nconst _DetailOpen = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 60px);\r\n    /* width: 100%; */\r\n    height: 25px;\r\n    margin: 0 0 0 30px;\r\n    background-color: #b1b1b1;\r\n    /* border-radius: 0 0 2px 2px; */\r\n    /* padding: 0 0 0 4px; */\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    clip-path: polygon(7.5% 100%, 0% 0%, 100% 0%, 92.5% 100%);\r\n    \r\n    &:hover {\r\n        background-color: #c6d1a1;\r\n    }\r\n`;\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    \r\n    &:hover {\r\n        color: #db3333;\r\n    }\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CSummary = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    height: 25px;\r\n    font-size: 22px;\r\n    line-height: 22px;\r\n    font-weight: 600;\r\n    color: #fffffad6;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _SeedItemFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${SEED_HEIGTH}px;\r\n    /* background-color: #a3b9c0; */\r\n    margin: 2px 0 0 0;\r\n    /* padding-left: 4px; */\r\n    text-align: left;\r\n`;\r\nconst _SeedItemInner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 2px);\r\n    margin: 1px 0 0 2px;\r\n    border: 1px solid #0000002e;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    line-height: 29px;\r\n    font-weight: 600;\r\n    padding: 0 0 0 5px;\r\n    &:hover {\r\n        background-color: #bbd4dc;\r\n    }\r\n`;\r\nconst _SeedName = styled.span<{\r\n}>`\r\n    color: #000f74;\r\n`;\r\nconst _SeedArgCnt = styled.span<{\r\n}>`\r\n    color: #c7020265;\r\n`;","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\ntype NotePorp = {\r\n    version: string;\r\n    date: string;\r\n    note: string;\r\n}\r\n\r\nconst ReleaseNote = () => {\r\n    const { store } = useContext(GlobalContext);\r\n\r\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\r\n    useEffect(() => {\r\n        fetch('assets/release_note.json')\r\n            .then(response => response.json()) // (2) レスポンスデータを取得\r\n            .then(json => { // (3)レスポンスデータを処理\r\n                const list = json as NotePorp[];\r\n                setJsx(list.map((item, i) => {\r\n                    const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n                    return (\r\n                        <_Item key={i}>\r\n                            <_Header>v{item.version} ({item.date})</_Header>\r\n                            <_Detail>{record}</_Detail>\r\n                        </_Item>\r\n                    );\r\n                }));\r\n            });\r\n    }, []);\r\n    return (<_ListFrame>{jsx}</_ListFrame>);\r\n}\r\n\r\nexport default ReleaseNote;\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    /* height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px); */\r\n    height: calc(100% - 48px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #bfcace;\r\n    border: 1px solid #9b9b9b;\r\n    border-radius: 6px;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    font-weight: 600;\r\n    /* background-color: #8bdbf8; */\r\n    color: #494975;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    /* background-color: #dafce4; */\r\n    color: #754949;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport PublishFrame from \"./publishFrame\";\r\nimport ReleaseNote from \"./releaseNote\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [userCount, setUserCount] = useState(0);\r\n    const [artsCnt, setArtsCnt] = useState(0);\r\n\r\n    useEffect(() => {\r\n        countUsers().then(cnt => {\r\n            setUserCount(cnt);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <ReleaseNote />\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{artsCnt} libruary have been published.</_MessageRecord>\r\n            <PublishFrame setLibCnt={setArtsCnt}/>\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeChannel;\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nexport const findAllReleaseProjectList = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT seq, (select id from user_tbl where seq = prj.seq) as owner, source, lastmod\r\n        FROM prjcttbl prj\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { VscGitPullRequestCreate } from 'react-icons/vsc';\r\nimport CreateChannel from \"../create/createChannel\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <ChannelPane\r\n                tabElements={[\r\n                    { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <HomeChannel /> },\r\n                    { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <CreateChannel /> },\r\n                ]}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst ModeSelectDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Frame\r\n            width={600}\r\n            height={500}\r\n        >\r\n            <_ModeDiv onClick={()=>{\r\n                store.env.isEditLibrary = false;\r\n                store.env.isUseLocalFile = false;\r\n                store.system.dialog = null;\r\n                setStore({...store});\r\n            }}>\r\n                <_SubTitle>For beginner users</_SubTitle>\r\n                <_MainTitle>Story only</_MainTitle>\r\n                <_DetailMsg>You can borrow existing libraries developed by craftsmen and create original digital art stories.</_DetailMsg>\r\n            </_ModeDiv>\r\n            <_ModeDiv onClick={()=>{\r\n                store.system.dialog = null;\r\n                setStore({...store});\r\n            }}>\r\n                <_SubTitle>For advanced users</_SubTitle>\r\n                <_MainTitle>Story and library</_MainTitle>\r\n                <_DetailMsg>You can develop the library you need to create digital art from scratch. The developed library can be provided to many begginer users.</_DetailMsg>\r\n            </_ModeDiv>\r\n        </_Frame>\r\n    );\r\n};\r\n\r\nexport default ModeSelectDialog;\r\n\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #8a90c9e1;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _ModeDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    height: calc(50% - 12px);\r\n    margin: 8px 0 0 10px;\r\n    background-color: #2c2a47b9;\r\n    border: solid 1px #050447;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:hover {\r\n        background-color: #514e6bb8;\r\n    }\r\n`;\r\n\r\nconst _SubTitle = styled.div<{\r\n}>`\r\n    display: block;\r\n    font-size: 32px;\r\n    color: #ffe15dce;\r\n    font-weight: 600;\r\n    margin: 0 0 0 8px;\r\n`;\r\n\r\nconst _MainTitle = styled.div<{\r\n}>`\r\n    display: block;\r\n    font-size: 48px;\r\n    color: #e3ecec;\r\n    font-weight: 600;\r\n    margin: 0 0 0 8px;\r\n`;\r\n\r\nconst _DetailMsg = styled.div<{\r\n}>`\r\n    display: block;\r\n    background-color: #ffffff2e;\r\n    width: calc(100% - 20px);\r\n    height: 106px;\r\n    font-size: 22px;\r\n    color: #ff6c6c;\r\n    /* font-weight: 600; */\r\n    border-radius: 4px;\r\n    /* border: solid 1px #ffffff4e; */\r\n    box-sizing: border-box;\r\n    padding: 0 4px;\r\n    margin: 15px 0 0 10px;\r\n`;","\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport CanvasUtil from '../../utils/canvasUtil';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    const logo = useMemo(() => {\r\n        return CanvasUtil.getLogoURL();\r\n    }, []);\r\n\r\n    return (\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <_Logo src={logo} />\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2023 Pixel Flare All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#858892, #8e99b6);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    /* color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-shadow: 1px 2px 22px #0000003d; */\r\n    text-align: center;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    /* & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    } */\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #ebe7ab;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Logo = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 600px;\r\n    /* height: 200%; */\r\n    box-sizing: border-box;\r\n    /* background-color: #bc28289f; */\r\n`;","import { useState } from \"react\";\r\nimport { initialStore } from \"../../redux/store/store\";\r\nimport styled from \"styled-components\";\r\nimport GloballDialog from \"../dialog/globalDialog\";\r\nimport TotalHeader from \"./totalHeader\";\r\nimport MainFrame from \"./mainFrame\";\r\nimport ModeSelectDialog from \"./modeSelectDialog\";\r\nimport Splash from \"./splash\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\n\r\nconst PCRoot = () => {\r\n    const [store, setStore] = useState(initialStore);\r\n\r\n    const splashJsx = !store.system.isSplash ? <></> : (\r\n        <Splash\r\n            remove={() => {\r\n                store.system.isSplash = false;\r\n                store.system.dialog = <ModeSelectDialog />\r\n                setStore({ ...store });\r\n            }}\r\n        />\r\n    );\r\n\r\n    return (<>\r\n        {splashJsx}\r\n        < _Wrap >\r\n            <GloballDialog />\r\n            <TotalHeader />\r\n            <_MainDiv>\r\n                <MainFrame />\r\n            </_MainDiv>\r\n        </_Wrap >\r\n    </>);\r\n}\r\n\r\nexport default PCRoot;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    min-width: 1200px;\r\n    min-height: 900px;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #364887;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import PublishFrame from \"../../contents/home/publishFrame\";\r\n\r\nconst SPHomeChannel = () => {\r\n\r\n    return (<PublishFrame setLibCnt={()=>{}}/>);\r\n}\r\n\r\nexport default SPHomeChannel;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\n\r\nimport { AiOutlineInstagram, AiOutlineTwitter, AiOutlineMail, AiOutlineFacebook } from \"react-icons/ai\";\r\nimport { BsLine } from \"react-icons/bs\";\r\n\r\nimport {\r\n    EmailShareButton,\r\n    FacebookShareButton,\r\n    HatenaShareButton,\r\n    InstapaperShareButton,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    LivejournalShareButton,\r\n    MailruShareButton,\r\n    OKShareButton,\r\n    PinterestShareButton,\r\n    PocketShareButton,\r\n    RedditShareButton,\r\n    TelegramShareButton,\r\n    TumblrShareButton,\r\n    TwitterShareButton,\r\n    ViberShareButton,\r\n    VKShareButton,\r\n    WhatsappShareButton,\r\n    WorkplaceShareButton\r\n} from \"react-share\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\n\r\n\r\nnamespace ShareDialog {\r\n\r\n    export const Component = (props: {\r\n        hash: string;\r\n    }) => {\r\n        const width = 500;\r\n        const height = 326;\r\n\r\n        const getInitialText = () => {\r\n            let str = '';\r\n            str += 'I created digital art with the Pixel Flare!\\n\\n';\r\n            return str;\r\n        }\r\n\r\n        const getURL = () => `${DataUtil.APP_SERVER_DOMAIN}/#/story?v=${props.hash}`;\r\n\r\n        const [text, setText] = useState<FormUtil.CheckableValue>({ value: getInitialText(), errors: [] });\r\n\r\n        const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <FormUtil.Message\r\n                    message={'Share your digital art!'}\r\n                    isCenter\r\n                    marginTop={10}\r\n                    marginBottom={10}\r\n                />\r\n                <_TextAreaDiv><FormUtil.TextArea\r\n                    checkable={text}\r\n                    setCheckable={setText}\r\n                /></_TextAreaDiv>\r\n                <_UrlDiv value={getURL()} readOnly/>\r\n                <_Record>\r\n                    <InstapaperShareButton\r\n                        url={getURL()}\r\n                        title={text.value}\r\n                        children={<_SnsIconFrame><AiOutlineInstagram /></_SnsIconFrame>}\r\n                    />\r\n                    <TwitterShareButton\r\n                        url={getURL()}\r\n                        title={text.value}\r\n                        children={<_SnsIconFrame><AiOutlineTwitter /></_SnsIconFrame>}\r\n                    />\r\n                    <MailruShareButton\r\n                        url={getURL()}\r\n                        title={text.value}\r\n                        children={<_SnsIconFrame><AiOutlineMail /></_SnsIconFrame>}\r\n                    />\r\n                    <FacebookShareButton\r\n                        url={getURL()}\r\n                        title={text.value}\r\n                        children={<_SnsIconFrame><AiOutlineFacebook /></_SnsIconFrame>}\r\n                    />\r\n                    <LineShareButton\r\n                        url={getURL()}\r\n                        title={text.value}\r\n                        about=\"aabb\"\r\n                        children={<_SnsIconFrame><BsLine /></_SnsIconFrame>}\r\n                    />\r\n                </_Record>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShareDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    margin: 8px 0 0 0;\r\n    text-align: center;\r\n`;\r\n\r\nconst _TextAreaDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 4px;\r\n    width: calc(100% - 8px);\r\n    height: 120px;\r\n    margin: 10px 0 0 4px;\r\n    border: 2px solid #3d3d3d;\r\n    box-sizing: border-box;\r\n`;\r\nconst _UrlDiv = styled.textarea<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 4px;\r\n    width: calc(100% - 8px);\r\n    height: 60px;\r\n    margin: 4px 0 0 4px;\r\n    border: 1px solid #3d3d3d;\r\n   background-color: #ebf5f557;\r\n   /* background-color: transparent; */\r\n   outline: none;\r\n   font-size: 18px;\r\n   color: #0041a3;\r\n   resize: none;\r\n   box-sizing: border-box;\r\n`;\r\n\r\nconst _SnsIconFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    border-radius: 8px;\r\n    width: 60px;\r\n    height: 60px;\r\n    border: 2px solid #555555;\r\n    background-color: #f0f0f0e1;\r\n    box-sizing: border-box;\r\n    font-size: 50px;\r\n    color: #666;\r\n    margin: 0 2px;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../contents/entry/systemEntry\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { ProjectType } from \"../../redux/store/store\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../../contents/dialog/confirmDialog\";\r\nimport NewProjectDialogStoryOnly from \"../../contents/create/manage/newProjectDialogStoryOnly\";\r\nimport NameDefDialog from \"../../contents/create/manage/nameDefDialog\";\r\nimport StoreCloud from \"../../redux/store/storeCloud\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport { BsFillShareFill } from 'react-icons/bs';\r\nimport { VscPreview } from \"react-icons/vsc\";\r\nimport { FiUpload, FiDownload } from \"react-icons/fi\";\r\nimport { IoCreateOutline } from \"react-icons/io5\";\r\nimport { FaRegSave } from \"react-icons/fa\";\r\nimport { MdClear, MdOutlineDriveFileRenameOutline } from \"react-icons/md\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\n\r\nimport ShareDialog from \"./etc/shareDialog\";\r\n\r\nconst SPManageFrame = (props: {\r\n    setEdit: (isEdit: boolean) => void;\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n    const [fcsListIdx, setFcsListIdx] = useState(-1);\r\n\r\n    const hasData = store.libraryData != null;\r\n    const projects = store.cloud?.projects as StoreCloud.Project[];\r\n\r\n    useEffect(() => {\r\n        store.system.logoutActions.push(() => {\r\n            setFcsListIdx(-1);\r\n        });\r\n        // dispatcher.updateStore();\r\n    }, []);\r\n\r\n    const getData = () => {\r\n        if (!hasData) return null;\r\n        const data: StoryUtil.ScenarioFileProps = {\r\n            libraryData: store.libraryData as LogicUtil.WrapElement,\r\n            scenarioData: store.storyData as StoryUtil.StoryData\r\n        };\r\n        return data;\r\n    }\r\n\r\n    const listItemJsx = store.cloud == null ? [] : store.cloud.projects.map((project, i) => {\r\n        return (\r\n            <_ListItem key={i}\r\n                isFocus={i === fcsListIdx}\r\n                onClick={() => {\r\n                    setFcsListIdx(i);\r\n                    console.log(DataUtil.getHashedFromProjectSeq(project.seq));\r\n                }}\r\n                onContextMenu={() => {\r\n                    store.system.dialog = <ConfirmDialog.Component\r\n                        message={DataUtil.getDirectUrl(project.type, project.seq)}\r\n                    />;\r\n                    setStore({ ...store });\r\n                }}\r\n            >\r\n                {/* <_Status type={project.type}>[{project.type}] </_Status> */}\r\n                <_Name>{project.name}</_Name>\r\n                {/* <LineShareButton\r\n                    url=\"hoge\"\r\n                    children={<_Icon><BsFillShareFill /></_Icon>}\r\n                /> */}\r\n                {/* <_Date> -{item.lastmod}</_Date> */}\r\n                <_Share\r\n                    onClick={() => {\r\n                        store.system.dialog = <ShareDialog.Component\r\n                            hash={DataUtil.getHashedFromProjectSeq(project.seq)}\r\n                        />;\r\n                        store.system.canDialogClose = true;\r\n                        dispatcher.updateStore();\r\n                    }}\r\n                ><_Icon><BsFillShareFill /></_Icon></_Share>\r\n            </_ListItem>\r\n        );\r\n    });\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを新規アップロードする\r\n     */\r\n    const uploadCloud = () => {\r\n        const source = DataUtil.gZip(JSON.stringify(getData()));\r\n        store.system.dialog = <NameDefDialog.Component\r\n            targetSeq={-1}\r\n            type={'story'}\r\n            source={source}\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    /**\r\n     * クラウドに作成中のプロジェクトを上書き更新する\r\n     */\r\n    const overwriteCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.gZip(JSON.stringify(getData()));\r\n        updateProjectSource(curPrj.seq, 'story', source).then(() => {\r\n            curPrj.source = source;\r\n            curPrj.type = 'story';\r\n            store.system.dialog = <ConfirmDialog.Component\r\n                message=\"Update project succesful!\"\r\n            />;\r\n            setStore({ ...store });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 選択中のクラウド上のファイルを読み込む\r\n     */\r\n    const cloneCloudFile = () => {\r\n        const curPrj = projects[fcsListIdx];\r\n        const source = DataUtil.unZip(curPrj.source);\r\n        const data = JSON.parse(source);\r\n        switch (curPrj.type) {\r\n            case 'library': {\r\n                store.libraryData = data;\r\n            } break;\r\n            case 'story': {\r\n                const scenarioFileProps = data as StoryUtil.ScenarioFileProps;\r\n                store.libraryData = scenarioFileProps.libraryData;\r\n                store.storyData = scenarioFileProps.scenarioData;\r\n            } break;\r\n        }\r\n        store.system.dialog = <ConfirmDialog.Component\r\n            message=\"Clone project succesful!\"\r\n        />;\r\n        setStore({ ...store });\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"left\"\r\n            isIconButton\r\n            buttons={[\r\n                !hasData ? {\r\n                    label: 'New Project',\r\n                    width: 200,\r\n                    icon: <IoCreateOutline />,\r\n                    callback: () => {\r\n                        store.system.dialog = <NewProjectDialogStoryOnly.Component\r\n                            extendAction={() => { props.setEdit(true); }}\r\n                        />;\r\n                        setStore({ ...store });\r\n                    }\r\n                } : {\r\n                    label: 'Clear',\r\n                    width: 200,\r\n                    icon: <MdClear />,\r\n                    callback: () => {\r\n                        store.libraryData = null;\r\n                        store.storyData = null;\r\n                        store.fuseCacheList.length = 0;\r\n                        dispatcher.updateStore();\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Project\"\r\n            height={198}\r\n            // isDisable={!hasData}\r\n            isEnable={hasData}\r\n            backgroundColor=\"#ffffff26\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    buttons={[\r\n                        {\r\n                            label: 'Upload',\r\n                            width: 210,\r\n                            icon: <FiUpload />,\r\n                            isEnable: hasData && store.cloud != null,\r\n                            callback: uploadCloud\r\n                        },\r\n                        {\r\n                            label: 'Overwrite',\r\n                            width: 210,\r\n                            icon: <FaRegSave />,\r\n                            isEnable: fcsListIdx != -1 && hasData,\r\n                            callback: overwriteCloudFile\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Hash\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            // width={340}\r\n                            isRecordItem\r\n                            value={!hasData ? '-' : DataUtil.getSHA256Hash(JSON.stringify(store.libraryData))}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Fuses\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            value={!hasData ? '-' : '0'}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Size\"\r\n                    jsx={\r\n                        <FormUtil.FixedText\r\n                            value={!hasData ? '-' : '0'}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"Cloud\"\r\n            height={434}\r\n            // isDisable={store.cloud == null}\r\n            isEnable={store.cloud != null}\r\n            backgroundColor=\"#ffffff26\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    align=\"center\"\r\n                    isIconButton\r\n                    buttons={[\r\n                        {\r\n                            label: 'Load',\r\n                            width: 140,\r\n                            icon: <FiDownload />,\r\n                            isEnable: !hasData && fcsListIdx !== -1 && projects[fcsListIdx].source !== '',\r\n                            callback: cloneCloudFile\r\n                        },\r\n                        {\r\n                            label: 'Rename',\r\n                            width: 140,\r\n                            icon: <MdOutlineDriveFileRenameOutline />,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                store.system.dialog = <NameDefDialog.Component\r\n                                    targetSeq={projects[fcsListIdx].seq}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'Delete',\r\n                            width: 140,\r\n                            icon: <RiDeleteBinLine />,\r\n                            isEnable: fcsListIdx != -1,\r\n                            callback: () => {\r\n                                deleteProject(projects[fcsListIdx].seq).then(() => {\r\n                                    store.system.dialog = <ConfirmDialog.Component\r\n                                        message=\"Delete project succesful!\"\r\n                                    />;\r\n                                    projects.splice(fcsListIdx, 1);\r\n                                    setFcsListIdx(fcsListIdx - 1);\r\n                                    setStore({ ...store });\r\n                                });\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                {listItemJsx}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default SPManageFrame;\r\n\r\nconst updateProjectSource = async (seq: number, type: string, source: string) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `update prjcttbl set type = '${type}', source = '${source}', lastmod = datetime ('now') where seq = ${seq};`)\r\n}\r\n\r\nconst deleteProject = async (seq: number) => {\r\n    await DataUtil.sendQueryRequestToAPI('update', `delete from prjcttbl where seq = ${seq};`)\r\n}\r\n\r\nconst _ListDiv = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 38px);\r\n    box-sizing: border-box;\r\n    background-color: #f0ecd43d;\r\n    border: 1px solid #002c8a;\r\n    border-radius: 4px;\r\n`;\r\nconst _ListItem = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    background: linear-gradient(to Bottom, #001e4b01, #001e4b1a);\r\n    ${props => !props.isFocus ? '' : css`\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffda379d);\r\n    `}\r\n    border-bottom: 1px solid #002c8a;\r\n    box-sizing: border-box;\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    padding-left: 4px;\r\n    &:hover {\r\n        background: linear-gradient(to Bottom, #001e4b01, #ffffff26);\r\n        ${props => !props.isFocus ? '' : css`\r\n            background: linear-gradient(to Bottom, #001e4b01, #fcea999d);\r\n        `}\r\n    }\r\n`;\r\nconst _Name = styled.span<{\r\n}>`\r\n    color: #005e08;\r\n`;\r\nconst _Status = styled.span<{\r\n    type: ProjectType | '';\r\n}>`\r\n    color: #0000006d;\r\n    ${props => props.type === 'library' ? css`color: #b90000be;` : ''}\r\n    ${props => props.type === 'story' ? css`color: #003bb9bd;` : ''}\r\n`;\r\nconst _Date = styled.span<{\r\n}>`\r\n    color: #0067977f;\r\n`;\r\n\r\nconst _Share = styled.span<{\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 1px;\r\n    /* background-color: #00eb6a76; */\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 30px;\r\n    /* background-color: #eb000076; */\r\n    font-size: 20px;\r\n    color: #757575;\r\n    text-align: center;\r\n    box-sizing: border-box;\r\n`;","import styled from \"styled-components\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport StoryUtil from \"../../../contents/create/launcher/util/storyUtil\";\r\nimport { FuseBean } from \"../../../contents/create/launcher/storyTab\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport LogicUtil from \"../../../contents/create/factory/util/logicUtil\";\r\nimport LogicFormUtil from \"../../../contents/create/factory/util/logicFormUtil\";\r\nimport LogicElementUtil from \"../../../contents/create/factory/util/logicElementUtil\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport BuildUtil from \"../../../contents/create/preview/buildUtil\";\r\nimport { AiOutlineEnter } from \"react-icons/ai\";\r\nimport { MdCancelPresentation } from \"react-icons/md\";\r\n\r\nconst FuseMainteDialog = (props: {\r\n    focus: number;\r\n    seedList: FuseBean[];\r\n    // isModify: boolean;\r\n    cancelAction: () => void;\r\n    modifyAction: (frame: number, seedId: string, values: number[]) => void;\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const [newFrame, setNewFrame] = useState<FormUtil.CheckableValue>({ value: '0', errors: [] });\r\n    const [seed, setSeed] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [preset, setPreset] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n    const isInputOK = seed.errors.length === 0 && newFrame.errors.length === 0 && formList.find(form => form.errors.length > 0) == undefined;\r\n\r\n    const mapping = () => {\r\n        if (props.focus === -1) return;\r\n        const curFuse = fuseList[props.focus];\r\n        setNewFrame({ ...newFrame, value: curFuse.frame.toString() });\r\n        setSeed({ ...seed, value: curFuse.seedId.toString() });\r\n        setFormList(curFuse.values.map(value => {\r\n            return { value: value.toString(), errors: [] };\r\n        }));\r\n    }\r\n\r\n    const initFormList = (seedId: string) => {\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seedId;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n        }\r\n        setFormList(argumentList.map(arg => {\r\n            let value = '';\r\n            if (arg.defval != undefined) value = arg.defval.toString();\r\n            return { value, errors: [] };\r\n        }));\r\n    }\r\n\r\n    const createSeq = () => {\r\n        return fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if(props.focus !== -1) mapping();\r\n    }, []);\r\n\r\n    const propertiesFormJsx = useMemo(() => {\r\n        if (seed.value === '') return <></>;\r\n\r\n        let argumentList: LogicUtil.NodeSeedArgItem[] = [];\r\n        let formgrpList: LogicUtil.NodeFromGrpItem[] = [];\r\n        let presetList: LogicUtil.NodeSampleItem[] = [];\r\n\r\n        const activeSeed = props.seedList.find(item => {\r\n            return item.name === seed.value;\r\n        });\r\n        if (activeSeed != undefined) {\r\n            argumentList = activeSeed.args;\r\n            formgrpList = activeSeed.formgrps;\r\n            presetList = activeSeed.presets;\r\n        }\r\n        return (<>\r\n            <FormUtil.BorderPanel\r\n                title=\"Preset\"\r\n                innerJsx={<FormUtil.Record\r\n                    jsx={<>\r\n                        <FormUtil.Combobox\r\n                            width={250}\r\n                            checkable={preset}\r\n                            setCheckable={setPreset}\r\n                            headBlank\r\n                            list={presetList.map((sample, i) => {\r\n                                return {\r\n                                    labelText: sample.name,\r\n                                    value: i.toString()\r\n                                }\r\n                            })}\r\n                        />\r\n                        <FormUtil.ButtonItem\r\n                            button={{\r\n                                label: 'Apply',\r\n                                isEnable: preset.value !== '',\r\n                                callback: () => {\r\n                                    const selectedIndex = Number(preset.value);\r\n                                    const values = presetList[selectedIndex].values;\r\n                                    values.forEach((value, i) => {\r\n                                        formList[i].value = value.toString();\r\n                                    });\r\n                                    setFormList(formList.slice());\r\n                                }\r\n                            }}\r\n                        />\r\n                    </>}\r\n                />}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Properties\"\r\n                innerJsx={<>{\r\n                    LogicFormUtil.buildPreviewForms(\r\n                        false, argumentList, formgrpList, formList, setFormList\r\n                    )\r\n                }</>}\r\n            />\r\n        </>);\r\n    }, [preset, formList]);\r\n\r\n    return (\r\n        <_Frame\r\n            width={600}\r\n            height={872}\r\n        >\r\n            <FormUtil.ButtonRecord\r\n                align=\"center\"\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        icon: <MdCancelPresentation />,\r\n                        width: 120,\r\n                        // isEnable: props.isModify,\r\n                        callback: () => {\r\n                            props.cancelAction();\r\n                            // setPreset({ ...preset, value: '' });\r\n                            // mapping();\r\n                            store.system.dialog = null;\r\n                            setStore({ ...store });\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Regist',\r\n                        icon: <AiOutlineEnter />,\r\n                        width: 120,\r\n                        isEnable: isInputOK,\r\n                        callback: () => {\r\n\r\n\r\n                            let fuse: StoryUtil.Fuse | null = null;\r\n                            let cache: StoryUtil.Cache | null = null;\r\n                            if (props.focus === -1) {\r\n                                fuse = { seq: createSeq(), frame: 0, seedId: '', values: [] };\r\n                                fuseList.push(fuse);\r\n\r\n                                cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n                                store.fuseCacheList.push(cache);\r\n                            } else {\r\n                                fuse = fuseList[props.focus];\r\n                                const fuseSeq = fuse.seq;\r\n                                cache = store.fuseCacheList.find(cache => cache.seq === fuseSeq) as StoryUtil.Cache;\r\n                            }\r\n\r\n                            fuse.frame = Number(newFrame.value);\r\n                            fuse.seedId = seed.value;\r\n                            fuse.values = formList.map(form => Number(form.value));\r\n                            dispatcher.story.updateCache(fuse, cache);\r\n                            (store.storyData as StoryUtil.StoryData).fuseList = fuseList.slice();\r\n                            store.system.dialog = null;\r\n                            dispatcher.updateStore();\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"Base\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Frame\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={100}\r\n                                isNumber\r\n                                checkable={newFrame}\r\n                                setCheckable={setNewFrame}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Seed\"\r\n                        jsx={\r\n                            <FormUtil.Combobox\r\n                                checkable={seed}\r\n                                setCheckable={(checkable) => {\r\n                                    initFormList(checkable.value);\r\n                                    setSeed({ ...checkable });\r\n                                }}\r\n                                list={props.seedList.map(seed => {\r\n                                    return { value: seed.name, labelText: seed.disp ?? seed.name }\r\n                                })}\r\n                                headBlank\r\n                                width={250}\r\n                                validates={\r\n                                    [\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n            {propertiesFormJsx}\r\n        </_Frame>\r\n    );\r\n}\r\n\r\nexport default FuseMainteDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #d4dacfe6;\r\n    border: 1px solid #474747;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n    overflow-y: auto;\r\n`;","import styled, { css, keyframes } from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport StoryUtil from \"../../../contents/create/launcher/util/storyUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport FuseMainteDialog from \"./fuseMainteDialog\";\r\nimport { FuseBean } from \"../../../contents/create/launcher/storyTab\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\nimport { GrView } from \"react-icons/gr\";\r\nimport { ImCopy } from \"react-icons/im\";\r\n\r\nconst COL_WIDTH_LIST = [48, 252, 150];\r\n\r\nconst OPTION_BUTTON_WIDTH = 112;\r\n\r\nconst FuseList = (props: {\r\n    focus: number;\r\n    setFocus: (focus: number) => void;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const createSeq = () => {\r\n        return storyData.fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n    }\r\n\r\n    const recordJsxList = useMemo(() => {\r\n        return storyData.fuseList.map((fuse, i) => {\r\n\r\n            const cache = store.fuseCacheList.find(cache => cache.seq === fuse.seq);\r\n\r\n            let thumbJsx: JSX.Element[] = [];\r\n            if (cache != undefined) {\r\n                thumbJsx = cache.thumbList.slice(0, 3).map((thumb, j) => {\r\n                    const imgJsx = thumb == undefined ? <></> : <_Img src={thumb.url} />;\r\n                    return (\r\n                        <_SampleDiv key={j}>\r\n                            {/* <_SampleName>{thumb.name}</_SampleName> */}\r\n                            <_CanvasDiv>\r\n                                {imgJsx}\r\n                            </_CanvasDiv>\r\n                        </_SampleDiv>\r\n                    );\r\n                });\r\n            };\r\n            const isFocus = props.focus === i;\r\n            return (<_RecordWrap key={i}\r\n                isFocus={isFocus}\r\n            >\r\n                <_RecordCont\r\n                    onClick={() => {\r\n                        props.setFocus(i);\r\n                    }}\r\n                >\r\n                    <_ColWrap width={COL_WIDTH_LIST[0]}><_TextItem>{fuse.frame}</_TextItem></_ColWrap>\r\n                    <_ColWrap width={COL_WIDTH_LIST[1]}>\r\n                        <_TextItem>[{fuse.seq}] {fuse.seedId}</_TextItem>\r\n                        {/* <_FrameForm\r\n                            type=\"number\"\r\n                            isEditable={isFocus}\r\n                            min={0} max={storyData.limitFrame}\r\n                            step={1}\r\n                            value={storyData.fuseList[i].frame}\r\n                            onChange={(e) => {\r\n                                storyData.fuseList[i].frame = e.currentTarget.valueAsNumber;\r\n                                storyData.fuseList = storyData.fuseList.slice();\r\n                                setStore({ ...store });\r\n                            }}\r\n                        />\r\n                        <_FrameSlider\r\n                            type=\"range\"\r\n                            isEditable={isFocus}\r\n                            min={0} max={storyData.limitFrame}\r\n                            step={1}\r\n                            value={storyData.fuseList[i].frame}\r\n                            onChange={(e) => {\r\n                                storyData.fuseList[i].frame = e.currentTarget.valueAsNumber;\r\n                                storyData.fuseList = storyData.fuseList.slice();\r\n                                setStore({ ...store });\r\n                            }}\r\n                        /> */}\r\n                    </_ColWrap>\r\n                    <_ColWrap width={COL_WIDTH_LIST[2]}><_ImageItem>{thumbJsx}</_ImageItem></_ColWrap>\r\n                </_RecordCont>\r\n                <_Option isFocus={isFocus}>\r\n                    <FormUtil.ButtonRecord\r\n                        align=\"left\"\r\n                        isIconButton\r\n                        buttons={[\r\n                            {\r\n                                label: 'Edit',\r\n                                icon: <FiEdit />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                // isEnable: props.isModify,\r\n                                callback: () => {\r\n                                    store.system.dialog = <FuseMainteDialog\r\n                                        focus={props.focus}\r\n                                        seedList={props.seedList}\r\n                                        cancelAction={() => {\r\n                                        }}\r\n                                        modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                        }}\r\n                                    />;\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Copy',\r\n                                icon: <ImCopy />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    const cloneFuse = JSON.parse(JSON.stringify(storyData.fuseList[props.focus])) as StoryUtil.Fuse;\r\n                                    cloneFuse.seq = createSeq();\r\n                                    const focusSeq = storyData.fuseList[props.focus].seq;\r\n                                    const index = store.fuseCacheList.findIndex(cache => cache.seq === focusSeq);\r\n                                    const cloneCache = JSON.parse(JSON.stringify(store.fuseCacheList[index])) as StoryUtil.Cache;\r\n                                    cloneCache.seq = cloneFuse.seq;\r\n                                    storyData.fuseList.push(cloneFuse);\r\n                                    storyData.fuseList = storyData.fuseList.slice();\r\n                                    store.fuseCacheList.push(cloneCache);\r\n                                    setStore({ ...store });\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Delete',\r\n                                icon: <RiDeleteBinLine />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    const focusSeq = storyData.fuseList[props.focus].seq;\r\n                                    storyData.fuseList.splice(props.focus, 1);\r\n                                    const index = store.fuseCacheList.findIndex(cache => cache.seq === focusSeq);\r\n                                    store.fuseCacheList.splice(index, 1);\r\n                                    setStore({ ...store });\r\n                                    props.setFocus(props.focus - 1);\r\n                                }\r\n                            },\r\n                            {\r\n                                label: 'Preview',\r\n                                icon: <GrView />,\r\n                                width: OPTION_BUTTON_WIDTH,\r\n                                callback: () => {\r\n                                    dispatcher.story.openPreviewSoloDialog(props.focus);\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </_Option>\r\n            </_RecordWrap>);\r\n        });\r\n    }, [storyData.fuseList, props.focus]);\r\n\r\n    return (<>\r\n        <_HeaderDiv>\r\n            <_HeaderItem width={COL_WIDTH_LIST[0]}>F</_HeaderItem>\r\n            <_HeaderItem width={COL_WIDTH_LIST[1]}>[Seq] Seed</_HeaderItem>\r\n            <_HeaderItem width={COL_WIDTH_LIST[2]}>Snapshot</_HeaderItem>\r\n        </_HeaderDiv>\r\n        <_BodyScrollDiv>\r\n            {recordJsxList}\r\n        </_BodyScrollDiv>\r\n    </>);\r\n}\r\n\r\nexport default FuseList;\r\n\r\nconst _HeaderDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #0c0c0c44;\r\n  /* background: linear-gradient(to bottom, #99a5b9, #c3cee4, #99a5b9); */\r\n  width: calc(100% - 30px);\r\n  height: 36px;\r\n  margin: 0 0 0 5px;\r\n  padding: 3px;\r\n  box-sizing: border-box;\r\n  border-radius: 2px 2px 0 0;\r\n`;\r\n\r\nconst _HeaderItem = styled.div<{\r\n    width: number;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #feffff36;\r\n  width: ${props => props.width}px;\r\n  height: 30px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  font-size: 24px;\r\n  line-height: 26px;\r\n  font-weight: 600;\r\n  font-style: italic;\r\n  color: #ffffff;\r\n  text-align: center;\r\n  margin: 0 2px;\r\n`;\r\n\r\nconst _BodyScrollDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #4d6e854e;\r\n  width: calc(100% - 10px);\r\n  height: calc(100% - 36px);\r\n  margin: 0 0 0 5px;\r\n  overflow-y: auto;\r\n`;\r\nconst fadeIn = keyframes`\r\n  from {\r\n    background-color: #bb6f6fa0;\r\n  }\r\n  to {\r\n    background-color: #fabebe58;\r\n  }\r\n`;\r\nconst _RecordWrap = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffffff37;\r\n  ${props => !props.isFocus ? '' : css`\r\n      animation: ${fadeIn} 1.2s linear infinite;\r\n  `}\r\n  width: 100%;\r\n  margin: 1px 0 0 0;\r\n  border-radius: 0 0 8px 8px;\r\n`;\r\nconst _RecordCont = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 20px); */\r\n  width: 100%;\r\n  height: 56px;\r\n  margin: 1px 0 0 0;\r\n  padding: 3px;\r\n  box-sizing: border-box;\r\n`;\r\nconst _Option = styled.div<{\r\n    isFocus: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #ebffe6f9; */\r\n  width: 100%;\r\n  height: ${props => props.isFocus ? '68' : '0'}px;\r\n  /* height: 0; */\r\n  margin: 1px 0 0 0;\r\n  overflow-y: hidden;\r\n  transition: height 0.1s;\r\n`;\r\n\r\nconst _ColWrap = styled.div<{\r\n    width: number;\r\n}>`\r\n  display: inline-block;\r\n  width: ${props => props.width}px;\r\n  margin: 0 2px;\r\n  /* background-color: #ff0000bb; */\r\n  vertical-align: middle;\r\n`;\r\nconst _TextItem = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffffffbc;\r\n  width: 100%;\r\n  height: 30px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  font-size: 24px;\r\n  line-height: 26px;\r\n  font-weight: 600;\r\n  /* font-style: italic; */\r\n  color: #7c0025;\r\n  text-align: center;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  /* margin: 8px 2px; */\r\n`;\r\nconst _FrameForm = styled.input<{\r\n    isEditable: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #628cffb9; */\r\n  border: 1px solid #242424;\r\n  border-radius: 2px;\r\n  width: 46px;\r\n  height: 20px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  ${props => props.isEditable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n  vertical-align: middle;\r\n  font-weight: 600;\r\n  color: #180085;\r\n`;\r\nconst _FrameSlider = styled.input<{\r\n    isEditable: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #ffd562ba;\r\n  width: calc(100% - 50px);\r\n  height: 20px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  ${props => props.isEditable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst _ImageItem = styled.div<{\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #ffffffbc; */\r\n  width: 100%;\r\n  height: 50px;\r\n  /* border: 1px solid #797979; */\r\n  box-sizing: border-box;\r\n  /* border-radius: 4px; */\r\n  color: #000850;\r\n  text-align: center;\r\n  margin: 0 2px;\r\n  vertical-align: middle;\r\n  text-align: left;\r\n`;\r\n\r\nconst WND_SIZE = 50;\r\nconst _SampleDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    /* width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px; */\r\n    /* margin: 0 0 0 2px; */\r\n`;\r\nconst _SampleName = styled.div<{}>`\r\n    display: block;\r\n    color: #09056c;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    font-style: italic;\r\n    background-color: #ffffff5e;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${WND_SIZE}px;\r\n    height: ${WND_SIZE}px;\r\n    background-color: #020202df;\r\n    border: solid 2px #ca0000;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Img = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport { useContext, useMemo, useState, useRef } from \"react\";\r\nimport StoryUtil from \"../../../contents/create/launcher/util/storyUtil\";\r\nimport { FuseBean } from \"../../../contents/create/launcher/storyTab\";\r\n\r\nexport const FRAME_LINE_WIDTH = 107;\r\n\r\nconst FrameLine = (props: {\r\n    focus: number;\r\n    setFocus: (focus: number) => void;\r\n    seedList: FuseBean[];\r\n}) => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [startY, setStartY] = useState<null | number>(null);\r\n    const [startX, setStartX] = useState<null | number>(null);\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const frameRateJsxList = useMemo(() => {\r\n        return fuseList.map((fuse, i) => {\r\n            const rate = Math.floor(fuse.frame / limitFrame * 100);\r\n            let left: undefined | number = undefined;\r\n            const seed = props.seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n            const posXIndex = seed.args.findIndex(arg => arg.isPosX);\r\n            if (posXIndex !== -1) {\r\n                const arg = seed.args[posXIndex];\r\n                const range = arg.max - arg.min;\r\n                const val = fuse.values[posXIndex] - arg.min;\r\n                const rate = val / range;\r\n                const clientWidth = (ref.current as HTMLDivElement).clientWidth - 10;\r\n                left = Math.floor(clientWidth * rate);\r\n            }\r\n            return <_FrameRate key={i}\r\n                rate={rate}\r\n                isCurr={i === props.focus}\r\n                left={left}\r\n            />\r\n        });\r\n    }, [fuseList, props.focus]);\r\n    const putAction = (x: number, y: number) => {\r\n        if (props.focus === -1) return;\r\n        setStartY(y);\r\n        setStartX(x);\r\n    }\r\n\r\n    const moveAction = (x: number, y: number) => {\r\n        if (startY == null || startX == null) return;\r\n        const fuse = fuseList[props.focus];\r\n\r\n        // フレームの移動\r\n        const rate = limitFrame / (ref.current as HTMLDivElement).clientHeight * 2;\r\n        // console.log('read ' + start);\r\n        fuse.frame += Math.floor((y - startY) * rate);\r\n        if (fuse.frame < 0) fuse.frame = 0;\r\n        else if (fuse.frame > limitFrame) fuse.frame = limitFrame;\r\n        const prevFocusSeq = fuseList[props.focus].seq;\r\n        fuseList.sort((a, b) => a.frame - b.frame);\r\n        const nowFocusSeq = fuseList[props.focus].seq;\r\n        if (prevFocusSeq !== nowFocusSeq) {\r\n            props.setFocus(fuseList.findIndex(fuse => fuse.seq === prevFocusSeq) as number);\r\n        }\r\n\r\n        // X座標の移動\r\n        const seed = props.seedList.find(seed => seed.name === fuse.seedId) as FuseBean;\r\n        const posXIndex = seed.args.findIndex(arg => arg.isPosX);\r\n        if (posXIndex !== -1) {\r\n            const arg = seed.args[posXIndex];\r\n            const range = arg.max - arg.min;\r\n            const clientWidth = (ref.current as HTMLDivElement).clientWidth - 10;\r\n            const rate = range / clientWidth * 2;\r\n            fuse.values[posXIndex] += Math.floor((x - startX) * rate);\r\n            const value = fuse.values[posXIndex];\r\n            if (value < arg.min) fuse.values[posXIndex] = arg.min;\r\n            else if (value > arg.max) fuse.values[posXIndex] = arg.max;\r\n            setStartX(x);\r\n        }\r\n\r\n        storyData.fuseList = fuseList.slice();\r\n        setStartY(y);\r\n        // console.log('set ' + start);\r\n        dispatcher.updateStore();\r\n    }\r\n\r\n    const releaseAction = () => {\r\n        setStartY(null);\r\n        setStartX(null);\r\n    }\r\n\r\n    return (\r\n        <_FrameLineDiv\r\n            isEdit={startY != null}\r\n            onMouseDown={(e) => { putAction(e.clientX, e.clientY) }}\r\n            onMouseMove={(e) => { moveAction(e.clientX, e.clientY) }}\r\n            onMouseUp={releaseAction}\r\n            onMouseLeave={releaseAction}\r\n            onTouchStart={(e) => { putAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n            onTouchMove={(e) => { moveAction(e.touches[0].pageX, e.touches[0].pageY) }}\r\n            onTouchEnd={releaseAction}\r\n            onTouchCancel={releaseAction}\r\n        >\r\n            <_FrameListDiv ref={ref}>\r\n                {frameRateJsxList}\r\n            </_FrameListDiv>\r\n        </_FrameLineDiv>\r\n    );\r\n}\r\n\r\nexport default FrameLine;\r\n\r\n\r\n\r\nconst _FrameLineDiv = styled.div<{\r\n    isEdit: boolean;\r\n}>`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${FRAME_LINE_WIDTH}px;\r\n  height: calc(100% - 36px);\r\n  background-color: #5995a790;\r\n  ${props => !props.isEdit ? '' : css`\r\n    background-color: #85b9c990;\r\n  `}\r\n  border: 1px solid #5a0000b8;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  vertical-align: top;\r\n  margin-top: 36px;\r\n`;\r\n\r\nconst _FrameListDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: calc(100% - 10px);\r\n  /* background-color: #00b7ff5e; */\r\n  text-align: center;\r\n`;\r\n\r\nconst _FrameRate = styled.div<{\r\n    rate: number;\r\n    isCurr: boolean;\r\n    left?: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  left: 0;\r\n  top: ${props => props.rate}%;\r\n  width: 100%;\r\n  ${props => props.left == undefined ? '' : css`\r\n      width: 10px;\r\n      left: ${props.left}px;\r\n  `}\r\n  height: 10px;\r\n  background-color: #627cc5;\r\n  border-radius: 4px;\r\n  border: 1px solid #00000061;\r\n  box-sizing: border-box;\r\n  ${props => !props.isCurr ? '' : css`\r\n      background-color: #e20000;\r\n      z-index: 10;\r\n  `}\r\n`;","import { useContext, useMemo, useState, useEffect } from \"react\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport FuseList from \"./fuseList\";\r\nimport { GlobalContext } from \"../../../contents/entry/systemEntry\";\r\nimport StoryUtil from \"../../../contents/create/launcher/util/storyUtil\";\r\nimport FuseMainteDialog from \"./fuseMainteDialog\";\r\nimport { FuseBean } from \"../../../contents/create/launcher/storyTab\";\r\nimport LogicUtil from \"../../../contents/create/factory/util/logicUtil\";\r\nimport LogicElementUtil from \"../../../contents/create/factory/util/logicElementUtil\";\r\nimport BuildUtil from \"../../../contents/create/preview/buildUtil\";\r\nimport { AiOutlineAppstoreAdd } from \"react-icons/ai\";\r\nimport { FaSortAmountDownAlt } from \"react-icons/fa\";\r\nimport { VscPreview } from \"react-icons/vsc\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\nimport { IoSave } from \"react-icons/io5\";\r\n\r\n\r\nimport styled, { css } from \"styled-components\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport FrameLine, { FRAME_LINE_WIDTH } from \"./frameLine\";\r\n\r\nconst SPEditStoryFrame = () => {\r\n    const { store, setStore, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [focus, setFocus] = useState<number>(-1);\r\n    const [isPreview, setPreview] = useState<boolean>(false);\r\n    const [seedId, setSeedId] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [interval, setInterval] = useState<FormUtil.CheckableValue>({ value: '30', errors: [] });\r\n\r\n    const storyData = store.storyData as StoryUtil.StoryData;\r\n\r\n    const fuseList = storyData.fuseList;\r\n    const limitFrame = storyData.limitFrame;\r\n    const limitParticle = storyData.limitParticle;\r\n\r\n    const seedList: FuseBean[] = useMemo(() => {\r\n        if (store.libraryData == null) return [];\r\n        const root = store.libraryData.data as LogicUtil.NodeRoot;\r\n        const seedWrapList = (root.seedMng.data as LogicUtil.NodeSeedManager).defs;\r\n        return seedWrapList.map(wrap => {\r\n            const seed = wrap.data as LogicUtil.NodeSeedItem;\r\n\r\n            // 引数リストを取得\r\n            const argMng = LogicElementUtil.getInnerWrapFixed(wrap, 'interface-mng', 'seedarg-mng').data as LogicUtil.NodeSeedArgManager;\r\n            const args = argMng.args.map(wrap => wrap.data as LogicUtil.NodeSeedArgItem);\r\n\r\n            // フォームグループリストを取得\r\n            const groupMng = LogicElementUtil.getInnerWrap(wrap, 'interface-mng', 'formgrp-mng');\r\n            let formgrps: LogicUtil.NodeFromGrpItem[] = [];\r\n            if (groupMng != null) {\r\n                formgrps = (groupMng.data as LogicUtil.NodeFromgrpManager).defines.map(wrap => wrap.data as LogicUtil.NodeFromGrpItem);\r\n            }\r\n\r\n            // プリセットリストを取得\r\n            const sampleMng = LogicElementUtil.getInnerWrap(wrap, 'sample-mng')?.data as LogicUtil.NodeSampleManager;\r\n            const presets = sampleMng.samples.map(wrap => wrap.data as LogicUtil.NodeSampleItem);\r\n\r\n            return {\r\n                name: seed.name,\r\n                disp: seed.disp,\r\n                args, formgrps, presets\r\n            }\r\n        });\r\n    }, [store.libraryData]);\r\n\r\n    useEffect(() => {\r\n        const isLoad = fuseList.length > 0 && store.fuseCacheList.length === 0;\r\n        if (!isLoad) return;\r\n        fuseList.forEach(fuse => {\r\n            const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n            store.fuseCacheList.push(cache);\r\n            dispatcher.story.updateCache(fuse, cache);\r\n        });\r\n        storyData.fuseList = fuseList.slice();\r\n        dispatcher.updateStore();\r\n    }, [fuseList, store.fuseCacheList]);\r\n\r\n    const getNewFuseProps = (): {\r\n        newSeq: number;\r\n        newFrame: number;\r\n    } => {\r\n        const newSeq = fuseList\r\n            .map(fuse => fuse.seq)\r\n            .reduce((prev, cur) => prev < cur ? cur : prev, -1)\r\n            + 1;\r\n        const newFrame = fuseList.length === 0 ? 0 : fuseList[fuseList.length - 1].frame + Number(interval.value);\r\n        return { newSeq, newFrame };\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.ButtonRecord\r\n            align=\"left\"\r\n            isIconButton\r\n            buttons={[\r\n                {\r\n                    label: 'Preview all',\r\n                    width: 180,\r\n                    icon: <VscPreview />,\r\n                    isEnable: fuseList.length > 0,\r\n                    callback: () => {\r\n                        fuseList.sort((a, b) => {\r\n                            return a.frame - b.frame;\r\n                        });\r\n                        storyData.fuseList = fuseList.slice();\r\n                        // dispatcher.updateStore();\r\n                        setPreview(true);\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Save',\r\n                    width: 120,\r\n                    icon: <IoSave />,\r\n                    callback: () => {\r\n                        alert('仕様検討中');\r\n                    }\r\n                }\r\n            ]}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"fuse\"\r\n            height={660}\r\n            backgroundColor=\"#c9d4dd\"\r\n            innerJsx={<>\r\n                <_SeedDiv>\r\n                    <FormUtil.ButtonItem\r\n                        button={\r\n                            {\r\n                                label: 'Add',\r\n                                width: 100,\r\n                                icon: <AiOutlineAppstoreAdd />,\r\n                                callback: () => {\r\n                                    if (seedId.value === '') {\r\n\r\n                                        store.system.dialog = <FuseMainteDialog\r\n                                            focus={-1}\r\n                                            seedList={seedList}\r\n                                            cancelAction={() => {\r\n                                            }}\r\n                                            modifyAction={(frame: number, seedId: string, values: number[]) => {\r\n                                            }}\r\n                                        />;\r\n                                        setStore({ ...store });\r\n                                    } else {\r\n                                        const seed = seedList.find(seed => seed.name === seedId.value) as FuseBean;\r\n                                        const newFuseProps = getNewFuseProps();\r\n                                        const fuse: StoryUtil.Fuse = {\r\n                                            seq: newFuseProps.newSeq,\r\n                                            frame: newFuseProps.newFrame,\r\n                                            seedId: '',\r\n                                            values: []\r\n                                        };\r\n                                        const cache = { seq: fuse.seq, thumbList: [], useFrame: 0 };\r\n\r\n                                        fuseList.push(fuse);\r\n                                        store.fuseCacheList.push(cache);\r\n\r\n                                        fuse.seedId = seedId.value;\r\n                                        fuse.values = seed.args.map(arg => {\r\n                                            return arg.defval ?? 0;\r\n                                        });\r\n                                        dispatcher.story.updateCache(fuse, cache);\r\n                                        (store.storyData as StoryUtil.StoryData).fuseList = fuseList.slice();\r\n                                        store.system.dialog = null;\r\n                                        dispatcher.updateStore();\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        }\r\n                    />\r\n                    <_FormDiv>\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Seed\"\r\n                            jsx={\r\n                                <FormUtil.Combobox\r\n                                    checkable={seedId}\r\n                                    setCheckable={(checkable) => {\r\n                                        setSeedId({ ...checkable });\r\n                                    }}\r\n                                    list={seedList.map(seed => {\r\n                                        return { value: seed.name, labelText: seed.disp ?? seed.name }\r\n                                    })}\r\n                                    headBlank\r\n                                    width={340}\r\n                                // validates={\r\n                                //     [\r\n                                //         {\r\n                                //             checker: (value) => ValidateUtil.checkRequired(value),\r\n                                //             errorType: \"required\"\r\n                                //         }\r\n                                //     ]\r\n                                // }\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormUtil.FormRecord\r\n                            titleLabel=\"Interval\"\r\n                            jsx={\r\n                                <FormUtil.TextField\r\n                                    width={100}\r\n                                    isNumber\r\n                                    checkable={interval}\r\n                                    setCheckable={setInterval}\r\n                                    validates={[\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkRequired(value),\r\n                                            errorType: \"required\"\r\n                                        },\r\n                                        {\r\n                                            checker: (value) => ValidateUtil.checkNumberRange(value, 0, storyData.limitFrame),\r\n                                            errorType: \"value\"\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            }\r\n                        />\r\n                    </_FormDiv>\r\n                </_SeedDiv>\r\n                <_MainDiv>\r\n                    <FrameLine\r\n                        focus={focus}\r\n                        setFocus={setFocus}\r\n                        seedList={seedList}\r\n                    />\r\n                    <_FuseListFrame>\r\n                        <FuseList\r\n                            focus={focus}\r\n                            setFocus={setFocus}\r\n                            seedList={seedList}\r\n                        />\r\n                    </_FuseListFrame>\r\n                </_MainDiv>\r\n            </>}\r\n        />\r\n        {!isPreview ? <></> : <BuildUtil.BuildFrame closeAction={() => {\r\n            setPreview(false);\r\n        }} />}\r\n    </>);\r\n}\r\n\r\nexport default SPEditStoryFrame;\r\n\r\n\r\nconst _SeedDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 84px;\r\n  /* background-color: #be97ca; */\r\n  vertical-align: top;\r\n`;\r\nconst _FormDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 492px;\r\n  vertical-align: top;\r\n  /* background-color: #09fc3e; */\r\n  margin: 0 0 0 4px;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: calc(100% - 84px);\r\n  /* background-color: #c2ca97; */\r\n`;\r\n\r\nconst _FuseListFrame = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: calc(100% - ${FRAME_LINE_WIDTH}px);\r\n  height: 100%;\r\n  /* background-color: #f80707; */\r\n  vertical-align: top;\r\n`;","import styled from \"styled-components\";\r\nimport PublishFrame from \"../../contents/home/publishFrame\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport SPManageFrame from \"./sPManageFrame\";\r\nimport SPEditStoryFrame from \"./edit/sPEditStoryFrame\";\r\nimport { GlobalContext } from \"../../contents/entry/systemEntry\";\r\n\r\nconst SPCreateChannel = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [isEdit, setEdit] = useState<boolean>(false);\r\n    const hasData = store.libraryData != null;\r\n\r\n    return (<>\r\n        <FormUtil.Record jsx={<>\r\n            <FormUtil.SwitchTwoFace\r\n                label1=\"Manage\"\r\n                label2=\"Story\"\r\n                rate1={50}\r\n                rate2={50}\r\n                isUse={isEdit}\r\n                width={350}\r\n                isEditable={hasData}\r\n                callback={() => {\r\n                    setEdit(!isEdit);\r\n                }}\r\n            />\r\n        </>} />\r\n        <_MainDiv>\r\n            {!isEdit ? <SPManageFrame setEdit={setEdit} /> : <SPEditStoryFrame />}\r\n        </_MainDiv>\r\n    </>);\r\n}\r\n\r\nexport default SPCreateChannel;\r\n\r\nconst _MainDiv = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* background-color: #9fc99e; */\r\n  width: 100%;\r\n  height: calc(100% - 40px);\r\n`;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport DirectLinkManager from \"./directLinkManager\";\r\nimport DataUtil from \"../utils/dataUtil\";\r\nimport { SPUtil } from \"./spUtil\";\r\nimport { initialStore } from \"../redux/store/store\";\r\nimport Splash from \"../contents/entry/splash\";\r\nimport { ChannelPane } from \"../base/components/tab/channelPane\";\r\n\r\nimport { VscGitPullRequestCreate } from \"react-icons/vsc\";\r\nimport { AiFillHome } from \"react-icons/ai\";\r\nimport SPTotalHeader from \"./sPTotalHeader\";\r\nimport SPHomeChannel from \"./contents/sPHomeChannel\";\r\nimport GloballDialog from \"../contents/dialog/globalDialog\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../utils/systemConst\";\r\nimport SPCreateChannel from \"./contents/sPCreateChannel\";\r\nimport TotalHeader from \"../contents/entry/totalHeader\";\r\ntype ScreenBean = {\r\n    adjLeft: number;\r\n    adjTop: number;\r\n    rate: number;\r\n}\r\n\r\n// export const CONTENTS_WIDTH = 576;\r\n// export const CONTENTS_HEIGHT = 1024;\r\n\r\n\r\nconst SPRoot = (props: {\r\n}) => {\r\n    const [store, setStore] = useState(initialStore);\r\n\r\n    const [isPermit, setPermit] = useState(true);\r\n    const [screen, setScreen] = useState<ScreenBean>({ adjLeft: 0, adjTop: 0, rate: 1 });\r\n    const ref = useRef<null | HTMLDivElement>(null);\r\n\r\n    const splashJsx = !store.system.isSplash ? <></> : (\r\n        <_SplashDiv>\r\n            <Splash\r\n                remove={() => {\r\n                    store.system.isSplash = false;\r\n                    setStore({ ...store });\r\n                }}\r\n            />\r\n        </_SplashDiv>\r\n    );\r\n\r\n    const update = () => {\r\n        if (ref.current != null) {\r\n            // const [clientWidth, clientHeight] = [window.innerWidth, window.innerHeight];\r\n\r\n            const rect = ref.current.getBoundingClientRect();\r\n            const [clientWidth, clientHeight] = [rect.width, rect.height];\r\n\r\n            const cw = SPUtil.SCREEN_WIDTH;\r\n            const ch = SPUtil.SCREEN_HEIGHT;\r\n\r\n            const isFitSide = clientHeight / ch > clientWidth / cw;\r\n\r\n            const rate = !isFitSide ? clientHeight / ch : clientWidth / cw;\r\n            const adjLeft = !isFitSide ? clientWidth / 2 - (cw * rate / 2) : 0;\r\n            const adjTop = !isFitSide ? 0 : clientHeight / 2 - (ch * rate / 2);\r\n\r\n            setScreen({ adjLeft, adjTop, rate });\r\n        }\r\n    }\r\n\r\n    // window.addEventListener('DOMContentLoaded', () => {\r\n    //     if (!isSmartPhone()) {\r\n    //         window.addEventListener('resize', update);\r\n    //     } else {\r\n    //         window.addEventListener('orientationchange resize', () => {\r\n    //             update();\r\n    //             setPermit(window.orientation === 0);\r\n    //         });\r\n    //     }\r\n    // });\r\n\r\n    // window.onorientationchange = () => {\r\n    //   setOrientation(window.orientation);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        store.system.isSPMode = true;\r\n        setStore({...store});\r\n        \r\n        update();\r\n        console.log(navigator.userAgent);\r\n        if (isSmartPhone()) {\r\n            setPermit(window.orientation === 0);\r\n        }\r\n        if (!isSmartPhone()) {\r\n            window.addEventListener('resize', () => {\r\n                update();\r\n            });\r\n        } else {\r\n            window.addEventListener('orientationchange resize', () => {\r\n                alert('change');\r\n                update();\r\n                setPermit(window.orientation === 0);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    let jsx = <_Error>Make your smartphone vertical!</_Error>;\r\n    if (isPermit) {\r\n        jsx = (\r\n            <_Contents>\r\n                {splashJsx}\r\n                <GloballDialog />\r\n                <TotalHeader />\r\n                <_ChannelWrap>\r\n                    <ChannelPane\r\n                        isLandscape={false}\r\n                        tabElements={[\r\n                            { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <SPHomeChannel /> },\r\n                            { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <SPCreateChannel /> },\r\n                        ]}\r\n                        activeNo={0}\r\n                    // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n                    />\r\n                </_ChannelWrap>\r\n            </_Contents>\r\n        );\r\n    }\r\n    return (\r\n        <_Wrap ref={ref}>\r\n            <_Frame left={screen.adjLeft} top={screen.adjTop} rate={screen.rate}>\r\n                {jsx}\r\n            </_Frame>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default SPRoot;\r\n\r\nconst isSmartPhone = () => {\r\n    // UserAgentからのスマホ判定\r\n    if (navigator.userAgent.match(/iPhone|Android.+Mobile/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  /* width: calc(100% - 10px);\r\n  height: calc(100% - 10px);\r\n  background-color: #9eadc9;\r\n  margin: 5px 0 0 5px; */\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst _ChannelWrap = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  background-color: #dbdfe7;\r\n  width: 100%;\r\n  height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst _Frame = styled.div<{\r\n    left: number;\r\n    top: number;\r\n    rate: number;\r\n}>`\r\n  display: inline-block;\r\n  position: absolute;\r\n  top: ${props => props.top}px;\r\n  left: ${props => props.left}px;\r\n  transform-origin: top left;\r\n  /* width: 100%;\r\n  height: 100%; */\r\n  transform: scale(${props => props.rate});\r\n`;\r\n\r\nconst _Contents = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${SPUtil.SCREEN_WIDTH}px;\r\n  height: ${SPUtil.SCREEN_HEIGHT}px;\r\n  background-color: #929292;\r\n`;\r\n\r\nconst _Error = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #750000;\r\n    color: white;\r\n    font-size: 24px;\r\n    font-wieght: 600;\r\n    line-height: 38px;\r\n    padding-left: 8px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nconst _SplashDiv = styled.div`\r\n    position: absolute;\r\n    z-index: 10;\r\n    left: 50%;\r\n    top: 400px;\r\n    transform-origin: center;\r\n    transform: scale(0.7);\r\n`;","import LogicElementUtil from \"../../contents/create/factory/util/logicElementUtil\";\r\nimport LogicUtil from \"../../contents/create/factory/util/logicUtil\";\r\nimport StoryUtil from \"../../contents/create/launcher/util/storyUtil\";\r\nimport BuildUtil from \"../../contents/create/preview/buildUtil\";\r\nimport PreviewLauncherFrame from \"../../contents/create/preview/previewLauncherFrame\";\r\nimport CanvasUtil from \"../../utils/canvasUtil\";\r\nimport { Store } from \"../store/store\";\r\n\r\nexport class Dispatcher {\r\n\r\n    private store: Store;\r\n    private setStore: (store: Store) => void;\r\n\r\n    constructor(store: Store, setStore: (store: Store) => void) {\r\n        this.store = store;\r\n        this.setStore = setStore;\r\n    }\r\n\r\n    public updateStore = () => {\r\n        this.setStore({ ...this.store });\r\n    }\r\n\r\n    public system = {\r\n        // setUserEnv: (userEnv: UserEnv) => {\r\n        // },\r\n    }\r\n    public story = {\r\n\r\n        /**\r\n         * プレビューオールダイアログを表示する\r\n         */\r\n        openPreviewAllDialog: () => {\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const minFrame = fuseList[0].frame;\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n            const sceens: string[] = [];\r\n            let useFrame: number = 0;\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                guaranteeFrame: minFrame,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    fuseList.some(def => {\r\n                        if (def.frame === frame) {\r\n                            LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                        } else if (def.frame > frame) return 1;\r\n                    });\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    useFrame = frame;\r\n                }\r\n            });\r\n            this.store.system.dialog = (\r\n                <PreviewLauncherFrame.Component\r\n                    sceens={sceens}\r\n                    frameCnt={useFrame}\r\n                />\r\n            );\r\n            this.updateStore();\r\n        },\r\n\r\n        /**\r\n         * プレビューソロダイアログを表示する\r\n         */\r\n        openPreviewSoloDialog: (focus: number) => {\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n            const sceens: string[] = [];\r\n            let useFrame: number = 0;\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                doIterate: (frame, owner) => {\r\n\r\n                    const def = fuseList[focus];\r\n                    if (frame === 0) {\r\n                        LogicElementUtil.doParticleJob(logicData, def, owner);\r\n                    }\r\n\r\n                    sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                        // パーティクルの描画\r\n                        owner.forEach(par => {\r\n                            par.draw(ctx);\r\n                        });\r\n                        ctx.save();\r\n                    }));\r\n                },\r\n                doEnd: (frame) => {\r\n                    useFrame = frame;\r\n                }\r\n            });\r\n            this.store.system.dialog = (\r\n                <PreviewLauncherFrame.Component\r\n                    sceens={sceens}\r\n                    frameCnt={useFrame}\r\n                />\r\n            );\r\n            this.updateStore();\r\n        },\r\n\r\n\r\n        updateCache: (fuse: StoryUtil.Fuse, cache: StoryUtil.Cache) => {\r\n            const logicData = this.store.libraryData as LogicUtil.WrapElement;\r\n\r\n            const storyData = this.store.storyData as StoryUtil.StoryData;\r\n            const fuseList = storyData.fuseList;\r\n            const limitFrame = storyData.limitFrame;\r\n            const limitParticle = storyData.limitParticle;\r\n            \r\n            cache.thumbList = [];\r\n            cache.useFrame = 0;\r\n            const seedProps = LogicElementUtil.getSeedProperties(logicData, fuse.seedId);\r\n            BuildUtil.run({\r\n                limitFrame,\r\n                limitParticle,\r\n                doIterate: (frame, owner) => {\r\n                    if (frame === 0) {\r\n                        LogicElementUtil.doParticleJob(logicData, fuse, owner);\r\n                    }\r\n\r\n                    const thumb = seedProps.thumbnailList.find(thumb => thumb.frame === frame);\r\n                    if (thumb != undefined) {\r\n                        const url = CanvasUtil.createURL(550, 550, (ctx) => {\r\n                            // パーティクルの描画\r\n                            owner.forEach(par => {\r\n                                par.draw(ctx);\r\n                            });\r\n                            ctx.save();\r\n                        });\r\n                        cache.thumbList.push({ name: thumb.name, url });\r\n                    }\r\n                },\r\n                doEnd: (frame) => {\r\n                    cache.useFrame = frame;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","import { createContext, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport DirectLogin from './directLogin';\r\nimport MobileRoot from '../../sp/mobileRoot';\r\nimport PCRoot from './pCRoot';\r\nimport SPRoot from '../../sp/sPRoot';\r\nimport { Dispatcher } from '../../redux/dispatcher/dispatcher';\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    setStore: React.Dispatch<React.SetStateAction<Store>>;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    // const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const [store, setStore] = useState(initialStore);\r\n    const dispatcher = new Dispatcher(store, setStore);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{ store, setStore, dispatcher }}>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <PCRoot />\r\n                </Route>\r\n                <Route path=\"/sp\" exact >\r\n                    <SPRoot />\r\n                </Route>\r\n                <Route path=\"/library\" exact >\r\n                    <MobileRoot hashKey={str} />\r\n                </Route>\r\n                <Route path=\"/story\" exact >\r\n                    <MobileRoot hashKey={str} />\r\n                </Route>\r\n                <Route path=\"/user\" exact >\r\n                    <DirectLogin hashKey={str} />\r\n                </Route>\r\n            </Switch>\r\n        </GlobalContext.Provider>\r\n    );\r\n\r\n}","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport ValidateUtil from \"./validateUtil\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nnamespace FormUtil {\r\n\r\n    export type CheckableValue = {\r\n        value: string;\r\n        errors: ValidateUtil.ErrorType[];\r\n    }\r\n\r\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\r\n        let result = true;\r\n        checkables.forEach(checkable => {\r\n            if (checkable.errors.length > 0) {\r\n                result = false;\r\n                return 1;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    export const InputTextFormBak = (props: {\r\n        titleLabel?: string;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        isCenter?: boolean;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        marginTop?: number;\r\n        isReadOnly?: boolean;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const type = props.isPassword ?? false ? 'password' : 'text';\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency);\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\r\n                <_ItemnInputBak\r\n                    type={type}\r\n                    value={props.checkable.value}\r\n                    hasTitle={props.titleLabel != undefined}\r\n                    width={props.width}\r\n                    isCenter={props.isCenter ?? false}\r\n                    placeholder={props.placeholder}\r\n                    onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        props.checkable.value = value;\r\n                        props.checkable.errors = getErrors(value);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }}\r\n                    errorType={errors.length === 0 ? undefined : errors[0]}\r\n                    readOnly={props.isReadOnly}\r\n                />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n\r\n    export const Record = (props: {\r\n        isEnable?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    const DEFAULT_LABEL_WIDTH = 140;\r\n    export const FormRecord = (props: {\r\n        titleLabel?: string;\r\n        labelWidth?: number;\r\n        isEnabled?: boolean;\r\n        isVisible?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        const lablelWidth = props.labelWidth ?? DEFAULT_LABEL_WIDTH;\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnabled ?? true}\r\n                isVisible={props.isVisible ?? true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={lablelWidth}>{props.titleLabel}</_ItemnLabel>}\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FixedText = (props: {\r\n        value: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        marginLeft?: number;\r\n        isRecordItem?: boolean;\r\n    }) => {\r\n        let width: string | undefined = undefined;\r\n        if (props.isRecordItem) width = `calc(100% - ${DEFAULT_LABEL_WIDTH + 16}px)`;\r\n        if (props.width != undefined) width = props.width + 'px';\r\n        return (\r\n            <_FixedLabel width={width}>{props.value}</_FixedLabel>\r\n        );\r\n    }\r\n\r\n    export const TextField = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        isNumber?: boolean;\r\n        marginLeft?: number;\r\n        step?: number;\r\n    }) => {\r\n        const [isNaN, setNaN] = useState(false);\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        let type = props.isPassword ?? false ? 'password' : 'text';\r\n        if (props.isNumber ?? false) {\r\n            type = 'number';\r\n        }\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n        const step = props.step ?? 1;\r\n\r\n        const isEnable = props.isEnabled ?? true;\r\n        return (\r\n            <_ItemnInput\r\n                type={type}\r\n                value={value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                step={step}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                    if (type === 'number') {\r\n                        setNaN(Number.isNaN(e.target.valueAsNumber));\r\n                    }\r\n                }}\r\n                onBlur={() => {\r\n                    if (type === 'number') {\r\n                        if (isNaN) props.checkable.value = ' ';\r\n                        else props.checkable.value = Number(value).toString();\r\n                        // console.log(`[${props.checkable.value}]`);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }\r\n                }}\r\n                errorType={!isEnable || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\r\n\r\n    export const Combobox = (props: {\r\n        list: ComboboxItemProps[];\r\n        headBlank?: boolean;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n        const headBlank = props.headBlank ?? false;\r\n        const list = props.list.slice();\r\n        if (headBlank) list.unshift({ value: '', labelText: '' });\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n\r\n        useEffect(() => {\r\n            // console.log('value: ' + props.checkable.value);\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const isEnable = props.isEnabled ?? true;\r\n        return (\r\n            <_ItemCombobox\r\n                value={props.checkable.value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    props.checkable.value = value;\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n\r\n                }}\r\n                errorType={!isEnable || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            >{list.map((item, i) => {\r\n                return (\r\n                    <_Option key={i}\r\n                        value={item.value}\r\n                        disabled={item.isDisabled ?? false}\r\n                        isDisabled={item.isDisabled ?? false}\r\n                    >{item.labelText}</_Option>\r\n                );\r\n            })}</_ItemCombobox>\r\n        );\r\n    }\r\n\r\n    export const TextArea = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n    }) => {\r\n\r\n        useEffect(() => {\r\n            if (props.checkable.value === ' ') {\r\n                props.checkable.value = '';\r\n                props.setCheckable({ ...props.checkable });\r\n            }\r\n        }, [props.checkable.value]);\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        const value = props.checkable.value;\r\n\r\n        const isEnable = props.isEnabled ?? true;\r\n        return (\r\n            <_ItemnTextArea\r\n                value={value}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    // console.log(e.target.valueAsNumber);\r\n                    props.checkable.value = e.target.value;\r\n                    props.setCheckable({ ...props.checkable });\r\n                }}\r\n                // errorType={!isEnable || errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        label: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        icon?: JSX.Element;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ButtonRecord = (props: {\r\n        buttons: ButtonProps[],\r\n        align?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n        isIconButton?: boolean;\r\n    }) => {\r\n        const align = props.align ?? 'right';\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={align}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n                height={!props.isIconButton ? 40 : 68}\r\n            >\r\n                {props.buttons.map((button, i) => {\r\n                    if (button.icon == undefined) {\r\n                        return (\r\n                            <_Button\r\n                                key={i}\r\n                                isCenter={align === 'center'}\r\n                                isEnable={button.isEnable ?? true}\r\n                                width={button.width}\r\n                                onClick={button.callback}\r\n                            >{button.label}</_Button>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <_IconButton\r\n                                key={i}\r\n                                isCenter={align === 'center'}\r\n                                isEnable={button.isEnable ?? true}\r\n                                width={button.width}\r\n                                onClick={button.callback}\r\n                            >{button.icon}<br />{button.label}</_IconButton>\r\n                        );\r\n                    }\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const ButtonItem = (props: {\r\n        button: ButtonProps\r\n    }) => {\r\n        const button = props.button;\r\n        if (button.icon == undefined) {\r\n            return (\r\n                <_Button\r\n                    isCenter={false}\r\n                    isEnable={button.isEnable ?? true}\r\n                    width={button.width}\r\n                    onClick={button.callback}\r\n                >{button.label}</_Button>\r\n            );\r\n        } else {\r\n            return (\r\n                <_IconButton\r\n                    isCenter={false}\r\n                    isEnable={button.isEnable ?? true}\r\n                    width={button.width}\r\n                    onClick={button.callback}\r\n                >{button.icon}<br />{button.label}</_IconButton>\r\n            );\r\n        }\r\n        // return (\r\n        //     <_Button\r\n        //         isCenter={false}\r\n        //         isEnable={props.button.isEnable ?? true}\r\n        //         width={props.button.width}\r\n        //         onClick={props.button.callback}\r\n        //     >{props.button.label}</_Button>\r\n        // );\r\n    }\r\n\r\n    export const Message = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const MessageLink = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        clickAction: () => void;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n                marginBottom={props.marginBottom ?? 0}\r\n            >\r\n                <_Message\r\n                    isLink={true}\r\n                    onClick={props.clickAction}\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        isDisable?: boolean;\r\n        height?: number;\r\n        backgroundColor?: string;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        // const title = props.title ?? 'title pl';\r\n        const isDisable = props.isDisable ?? false;\r\n        const isEnable = props.isEnable ?? true;\r\n        const backgroundColor = props.backgroundColor ?? '#dcddce';\r\n        return (<>\r\n            {isDisable ? <></> : <_BorderText>{props.title}</_BorderText>}\r\n            <_BorderPanel\r\n                isEnable={isEnable}\r\n                isDisable={isDisable}\r\n                height={props.height}\r\n                backgroundColor={backgroundColor}\r\n            >{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export const InfoFrame = (props: {\r\n        height?: number;\r\n        textRecords: string[];\r\n    }) => {\r\n        const height = props.height ?? 70;\r\n        const color = '#1a9900';\r\n        return (<>\r\n            <_InfoDiv height={height} color={color}>\r\n                {props.textRecords.map((text, i) => {\r\n                    return <span key={i}>{text}<br /></span>;\r\n                })}\r\n            </_InfoDiv>\r\n        </>);\r\n    };\r\n\r\n    export const Switch = (props: {\r\n        label: string;\r\n        isUse: boolean;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        isRelation?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isRelation = props.isRelation ?? false;\r\n        const callback = isRelation && props.isUse ? () => { } : props.callback;\r\n        return (\r\n            <_Switch\r\n                isRelation={isRelation}\r\n                isUse={props.isUse}\r\n                isEnable={props.isEnable ?? true}\r\n                width={props.width}\r\n                onClick={callback}\r\n            >{props.label}</_Switch>\r\n        );\r\n    }\r\n\r\n    export const SwitchTwoFace = (props: {\r\n        label1: string;\r\n        label2: string;\r\n        width: number;\r\n        rate1: number;\r\n        rate2: number;\r\n        isUse: boolean;\r\n        isEditable?: boolean;\r\n        isEnable?: boolean;\r\n        callback: () => void;\r\n    }) => {\r\n        const isEnable = props.isEnable ?? true;\r\n        const isEditable = props.isEditable ?? true;\r\n        return (<_SwitchTwoFace\r\n            isEnable={isEnable}\r\n            isEditable={isEditable}\r\n            width={props.width}\r\n            onClick={props.callback}\r\n        >\r\n            <_SwitchItem\r\n                isUse={isEnable && !props.isUse}\r\n                rate={props.rate1}\r\n                isLeft={true}\r\n                isEditable={isEditable}\r\n            >{props.label1}</_SwitchItem>\r\n            <_SwitchItem\r\n                isUse={isEnable && props.isUse}\r\n                rate={props.rate2}\r\n                isLeft={false}\r\n                isEditable={isEditable}\r\n            >{props.label2}</_SwitchItem>\r\n        </_SwitchTwoFace>);\r\n    }\r\n\r\n    export const checkItems = (list: CheckableValue[]) => {\r\n        return list.find(item => item.errors.length > 0) == undefined;\r\n    }\r\n}\r\n\r\nexport default FormUtil;\r\n\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n    textAlign: 'left' | 'center' | 'right';\r\n    marginTop: number;\r\n    marginBottom: number;\r\n    height?: number;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    width: 100%;\r\n    height: ${props => props.height ?? '40'}px;\r\n    margin-top: ${props => props.marginTop}px;\r\n    margin-bottom: ${props => props.marginBottom}px;\r\n    /* background-color: #b3b4c4; */\r\n    /* border: 1px solid #000; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    text-align: ${props => props.textAlign};\r\n`;\r\n\r\nconst _ItemnLabel = styled.div<{\r\n    labelWidth?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.labelWidth}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #b4c0c7fa, #d8d8d8, #b4c0c7fa);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n`;\r\n\r\nconst _FixedLabel = styled.div<{\r\n    width?: string;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #0c0e86;\r\n    box-sizing: border-box;\r\n    background-color: #85a2c51a;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n    overflow-x: hidden;\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width};\r\n    `}\r\n`;\r\n\r\nconst _ItemnInputBak = styled.input<{\r\n    readOnly?: boolean;\r\n    isCenter: boolean;\r\n    hasTitle: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${props => !props.hasTitle ? css`\r\n    ` : css`\r\n        width: calc(100% - 152px);\r\n    `}\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    margin-top: 2px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    /* ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    } */\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemCombobox = styled.select<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n        pointer-events: none;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _Option = styled.option<{\r\n    isDisabled: boolean;\r\n}>`\r\n    ${props => !props.isDisabled ? '' : css`\r\n        color: #0000004b;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n    isLink?: boolean;\r\n    isCenter: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #002c52;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => !props.isLink ? '' : css`\r\n        color: #0459a3;\r\n        user-select: none;\r\n        text-decoration: underline;\r\n        &:hover {\r\n            color: #68a4d8;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #c0ced6, #ebebeb, #c0ced6);\r\n    border: 1px solid #829bad;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        /* background: linear-gradient(to bottom, #989898, #b4b4b4, #989898); */\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst _IconButton = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    height: 58px;\r\n    padding: 4px 0 0 0;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #c0ced6, #ebebeb, #c0ced6);\r\n    border: 1px solid #829bad;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        /* background: linear-gradient(to bottom, #989898, #b4b4b4, #989898); */\r\n        opacity: 0.7;\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isUse: boolean;\r\n    isEnable: boolean;\r\n    width?: number;\r\n    isRelation: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    color: #515151;\r\n    border: 1px solid #747474;\r\n    ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\r\n    ` : css<{ isUse: boolean }>`\r\n        background-color: ${props => !props.isUse ? '#ddc1d979' : '#d898b3'};\r\n        color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n    `}\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        ${props => !props.isRelation ? css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\r\n        ` : css<{ isUse: boolean }>`\r\n            background-color: ${props => !props.isUse ? '#d3a1cb79' : '#d898b3'};\r\n            color: ${props => !props.isUse ? '#515151' : '#9c2626'};\r\n        `}\r\n    }\r\n`;\r\n\r\nconst _SwitchTwoFace = styled.div<{\r\n    isEnable: boolean;\r\n    isEditable: boolean;\r\n    width: number;\r\n}>`\r\n    width: ${props => props.width}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEditable ? '' : css`    \r\n        pointer-events: none;\r\n    `}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* opacity: 0.7; */\r\n    }\r\n`;\r\n\r\nconst _SwitchItem = styled.div<{\r\n    isUse: boolean;\r\n    rate: number;\r\n    isLeft: boolean;\r\n    isEditable: boolean;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* line-height: 25px; */\r\n    border-top: 1px solid #747474;\r\n    border-bottom: 1px solid #747474;\r\n    text-align: ${props => props.isLeft ? css`\r\n        border-left: 1px solid #747474;\r\n    ` : css`\r\n        border-right: 1px solid #747474;\r\n    `};\r\n    text-align: ${props => props.isLeft ? 'right' : 'left'};\r\n    border-radius: ${props => props.isLeft ? '8px 0 0 8px' : '0 8px 8px 0'};\r\n    padding: 0 10px;\r\n    box-sizing: border-box;\r\n    background-color: #8fa2aa;\r\n    color: #515151;\r\n    font-size: 16px;\r\n    ${props => props.isEditable ? css`\r\n        ${!props.isUse ? '' : css`\r\n            color: #b30000;\r\n            font-size: 22px;\r\n            background-color: #dae7ec;\r\n        `}\r\n    ` : css`\r\n        ${!props.isUse ? '' : css`\r\n            color: #110070;\r\n            font-size: 22px;\r\n            background-color: #dae7ec;\r\n        `};\r\n    `}\r\n    vertical-align: top;\r\n    transition: background-color 0.3s;\r\n`;\r\n\r\nconst _BorderText = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: #990000;\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n    isDisable: boolean;\r\n    height?: number;\r\n    backgroundColor: string;\r\n}>`\r\n    display: inline-block;\r\n    ${props => !props.isDisable ? '' : css`\r\n        display: none;\r\n    `}\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    ${props => props.height == undefined ? '' : css`\r\n        height: ${props.height}px;\r\n    `}\r\n    background-color: ${props => props.backgroundColor};\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    margin: 4px 0 0 0;\r\n    display: inline-block;\r\n    background-color: #e7e5e561;\r\n    border: solid 1px #949494;\r\n    width: 100%;\r\n    height: ${props => props.height}px;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: ${props => props.color};\r\n    overflow-y: auto;\r\n`;\r\n\r\n\r\nconst _ItemnTextArea = styled.textarea<{\r\n\r\n}>`\r\n   display: inline-block;\r\n   width: 100%;\r\n   height: 100%;\r\n   background-color: #ebf5f5;\r\n   font-size: 18px;\r\n   color: black;\r\n   border: none;\r\n   resize: none;\r\n   box-sizing: border-box;\r\n`;","import zlib from \"zlib\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport { sha256 } from 'js-sha256';\r\nimport Hashids from 'hashids';\r\nimport { ProjectType, Store } from \"../redux/store/store\";\r\nimport LogicUtil from \"../contents/create/factory/util/logicUtil\";\r\nimport ConfirmDialog from \"../contents/dialog/confirmDialog\";\r\nimport StoryUtil from \"../contents/create/launcher/util/storyUtil\";\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5001';\r\n    export const DB_SERVER_DOMAIN = 'https://hkdev-db.glitch.me';\r\n    // export const DB_SERVER_DOMAIN = 'https://crud-server001.glitch.me';\r\n\r\n    // export const APP_SERVER_DOMAIN = 'http://localhost:4333';\r\n    export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/pf_apps/v1.7.3';\r\n    // export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    const DATABASE_NAME = 'pf1';\r\n\r\n    const getUserHashBuilder = () => {\r\n        return new Hashids('pf-user', 8);\r\n    }\r\n\r\n    export const getHashedFromUserSeq = (seq: number) => {\r\n        const hashids = getUserHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\r\n        const hashids = getUserHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    const getScoreHashBuilder = () => {\r\n        return new Hashids('pf', 8);\r\n    }\r\n\r\n    export const getHashedFromProjectSeq = (seq: number) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedProjectSeq = (hashedSeq: string) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    export const getPreviewURL = (scoreSeq: number) => {\r\n        const hashedKey = getHashedFromProjectSeq(scoreSeq);\r\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql, databaseName: DATABASE_NAME })\r\n        }\r\n    }\r\n\r\n    export type SendMailParam = {\r\n        from: string,\r\n        to: string,\r\n        subject: string,\r\n        text: string\r\n    }\r\n\r\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(json)\r\n        }\r\n    }\r\n\r\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/mail',\r\n            createSendMailRequestInit(json)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserInfoList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\r\n        const results = await response.json();\r\n        return results as { id: string, email: string }[];\r\n    };\r\n\r\n    export const findUserIdList = async () => {\r\n        const results = await findUserInfoList();\r\n        return (results as { id: string }[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfoFromEmail = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserInfoFromSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoLogin = async (id: string, password: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const getNextUserSeq = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\r\n        const results = await response.json();\r\n        const nextSeq = (results[0]['seq'] as number) + 1;\r\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\r\n\r\n        return nextSeq;\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findScore = async (scoreSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT (select id from user_tbl where seq = score.user_seq) as owner, dispnam, data FROM scoretbl score WHERE seq = ${scoreSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const loadFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            store.fileHandle = fileHandle;\r\n            const text = DataUtil.unZip(fileContents);\r\n            const data = JSON.parse(text);\r\n            // シナリオであるかどうかの判定\r\n            if (!data.hasOwnProperty('scenarioData')) {\r\n                store.libraryData = data;\r\n            } else {\r\n                const scenarioProps = data as StoryUtil.ScenarioFileProps;\r\n                store.libraryData = scenarioProps.libraryData;\r\n                store.storyData = scenarioProps.scenarioData;\r\n            }\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Successfully file loaded!\" />;\r\n            setStore({ ...store });\r\n        })();\r\n    }\r\n\r\n    export const saveFileBak = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.libraryData as LogicUtil.WrapElement;\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        const plainData = JSON.stringify(rootData);\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const saveLibraryFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const rootData = store.libraryData as LogicUtil.WrapElement;\r\n        const plainData = JSON.stringify(rootData);\r\n        saveFile(store, setStore, plainData, 'plgc');\r\n    }\r\n\r\n    export const saveScenarioFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>) => {\r\n        const data: StoryUtil.ScenarioFileProps = {\r\n            libraryData: store.libraryData as LogicUtil.WrapElement,\r\n            scenarioData: store.storyData as StoryUtil.StoryData\r\n        }\r\n        const plainData = JSON.stringify(data);\r\n        saveFile(store, setStore, plainData, 'pstr');\r\n    }\r\n\r\n    export const saveFile = (store: Store, setStore: React.Dispatch<React.SetStateAction<Store>>, plainData: string, extension: string) => {\r\n        let fileHandle = store.fileHandle;\r\n\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': [`.${extension}`],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                // setFileHandle(fileHandle);\r\n                // const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    store.fileHandle = handle;\r\n                    // setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    export const getSHA256Hash = (original: string) => {\r\n        return sha256(original);\r\n    }\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n\r\n    export const getDirectUrl = (type: ProjectType, seq: number) => {\r\n        return `${APP_SERVER_DOMAIN}/#/${type}?v=${getHashedFromProjectSeq(seq)}`;\r\n    }\r\n}\r\n\r\nexport default DataUtil;"],"sourceRoot":""}