{"version":3,"sources":["system/utils/dataUtil.tsx","system/redux/store/store.tsx","system/utils/systemConst.tsx","system/contents/dialog/globalDialog.tsx","system/base/design/styles.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/utils/form/formUtiil.tsx","system/utils/treeUtil.tsx","system/contents/create/factory/detail/factDetArgumentMng.tsx","system/utils/form/validateUtil.tsx","system/contents/create/factory/detail/common/modifyOperations.tsx","system/contents/create/factory/detail/factDetArgumentItem.tsx","system/contents/create/factory/detail/factDetInheritMng.tsx","system/contents/create/factory/detail/factDetExtendMng.tsx","system/contents/create/factory/detail/factDetOriginMng.tsx","system/utils/canvasUtil.tsx","system/contents/graphic/particle.tsx","system/contents/graphic/drawUtil.tsx","system/contents/graphic/vectorUtil.tsx","system/contents/create/preview/previewUtil.tsx","system/contents/create/preview/logicPreviewFrame.tsx","system/contents/create/factory/detail/factDetLogicItem.tsx","system/contents/create/factory/detail/factOprParam.tsx","system/contents/create/factory/detail/factDetBehiviorMng.tsx","system/contents/create/factory/detail/factDetVisualMng.tsx","system/contents/create/factory/detail/factDetInheritConnMng.tsx","system/contents/create/factory/detail/factDetEffectMng.tsx","system/contents/create/factory/detail/factDetModulateMng.tsx","system/contents/create/factory/detail/factDetInheritConnector.tsx","system/contents/create/factory/detail/factDetSendManager.tsx","system/contents/create/factory/factoryUtil.tsx","system/contents/create/factory/factoryTab.tsx","system/contents/create/manage/manageTab.tsx","system/contents/create/timeline/timelineUtil.tsx","system/contents/create/timeline/timelineTab.tsx","system/contents/create/createChannel.tsx","system/contents/entry/directView.tsx","system/contents/entry/directLogin.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DB_SERVER_DOMAIN","APP_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","seq","hash","encode","Base64","hashedSeq","hashids","Number","decode","getHashedFromScoreSeq","sendQueryRequestToAPI","scoreSeq","hashedKey","json","fetch","mode","method","headers","Accept","body","JSON","stringify","createSendMailRequestInit","queryType","sql","createQueryRequestInit","findUserInfoList","a","response","results","map","res","id","email","password","nextSeq","DataUtil","userSeq","val","content","encodeURIComponent","zlib","gzipSync","toString","buffer","Buffer","from","result","unzipSync","decodeURIComponent","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","initialStore","system","isSplash","user","dialog","SystemConst","GloballDialog","useContext","GlobalContext","store","setStore","_Blind","onClick","styled","div","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","css","Styles","_CSS_LABEL_MIDIUM","ChannelPane","props","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","index","name","icon","isActive","isEnable","selectTab","undefined","selectTabIndex","_ContList","cont","ChannelLabel","_Item","_Icon","_Label","ChannelContents","_Contents","CSS_BUTTON_DISABLE","TabbedPane","tabRecordNum","enable","TabLabel","_TabLabel","TabContents","FormUtil","checkables","forEach","checkable","errors","length","type","isPassword","validaters","validates","dependency","dep","value","getErrors","validater","checker","push","errorType","setCheckable","textAlign","isCenter","marginTop","titleLabel","_ItemnLabel","_ItemnInputBak","hasTitle","width","placeholder","onChange","e","target","readOnly","isReadOnly","jsx","labelWidth","isNumber","concat","_ItemnInput","marginLeft","headBlank","list","slice","unshift","labelText","_ItemCombobox","item","i","_Option","disabled","isDisabled","buttons","button","_Button","callback","label","_Message","message","isLink","clickAction","_BorderText","title","_BorderPanel","innerJsx","height","_InfoDiv","color","textRecords","text","_Switch","isUse","_Record","CSS_LABEL_MIDIUM","input","select","option","CSS_LABEL_SMALL","TreeUtil","data","parent","depth","isOpen","children","node","parentNode","isDisable","focusNode","buildElementNodeFromData","build","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","jsxList","useMemo","buildJsxRecords","element","spaceList","isCurrent","isRelation","tempNode","find","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","clickEvent","onDoubleClick","getLabelJsx","invalidate","_Wrap","FactDetArgumentMng","FactoryTreeContext","setFocusNode","wrap","BorderPanel","ButtonRecord","newWrap","args","newNode","createNode","str","min","max","checkIncludesChars","ch","charAt","indexOf","conditions","ValidateUtil","ModifyOperations","isModify","setModify","isComplete","isCompleteCheck","checkableFields","splice","mappingForm","isInputOK","firstRegist","modifyRegist","FactDetArgumentItem","setName","argType","setArgType","param","valueType","Component","FormRecord","TextField","checkRequired","checkStringLength","FactoryUtil","checkFieldName","Combobox","ArgTypes","n","FactDetInheritMng","itemWrap","defs","FactDetExtendMng","el","includes","hasEffectsNode","hasModulateNode","hasInheritNode","Record","Switch","mngs","params","paramWrap","createParamWrap","formulaItems","values","delIndex","insIndex","console","log","connects","FactDetOriginMng","createURL","draw","canvas","document","createElement","ctx","getContext","toDataURL","CanvasUtil","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillStyle","fillText","adjust","measureText","save","WIDTH","AUTH_TEXT_WIDTH","SIZE","AUTH_TEXT_HEIGHT","rotate","Math","PI","char","fontRand","random","alphaRand","Particle","owner","pos","prevPos","vec","frame","limit","isLive","drawer","extend","update","x","xy","y","this","radius","self","g","createRadialGradient","grads","rgba","convertRgbaFromColorCode","r","b","offset","convertColorCodeFromRgba","grad","addColorStop","disappearStartRate","start","floor","globalAlpha","beginPath","arc","fill","code","split","parseInt","substring","rate","DrawUtil","VectorUtil","rad","len","syncFromXY","sqrt","atan2","syncFromRad","cos","sin","SCREEN_WIDTH","SCREEN_HEIGHT","searchElement","rootData","createParticleRec","cur","fields","valueMapList","ConstantValueMap","visualParams","behaviorParams","getVisualParam","convertFormulaToValue","getBehaviorParam","Vector","extendList","extendMng","connectMng","connect","connector","getCondition","condition","logicItem","connectType","inheritMng","def","searchDependLogic","depend","loopCnt","iterateItem","iterateValueMap","sendValueMapList","Instance","effectMng","modulateMng","getModulateParam","decayLimit","decayRate","gravity","modulate","createGradDrawer","warpList","formula","v","valueMap","m","formulaStr","varCnt","Function","PreviewUtil","LogicPreviewFrame","ref","useRef","formList","setFormList","sceens","setSceens","frameCnt","setFrameCnt","tabIndex","setTabIndex","setCur","setBuild","isPlay","setPlay","setTimeout","argumentList","argWrap","arg","getArgumentList","formListJsx","form","buildTabJsx","_FormDiv","buildOriginProps","par","previewTabJsx","_CanvasDiv","_IMG","src","_ProgressDiv","clickX","pageX","clientRect","current","getBoundingClientRect","left","window","pageXOffset","_ProgressVal","_Frame","_Main","img","FactDetLogicItem","parentType","isConnect","isInherit","hasArgNode","hasFieldNode","hasExtendNode","getDefaultLogicMngs","mng","FactOprParam","setFormulaItems","varFormList","setVarFormList","inputType","fieldKeyList","isIterate","keys","targetWrap","getTargetWrap","num","addNum","delNum","parenthesisBalance","formJsxList","ParamInputTypes","getValueForm","isLastVar","isFormulaOK","hasFormError","varForm","_Formula","isInvalid","_Var","_Sig","getFormulaJsx","span","FactDetBehiviorMng","isVector","swapPos","FactDetVisualMng","FactDetInheritConnMng","FactDetEffectMng","FactDetModulateMng","FactDetInheritConnector","setCondition","setConnectType","setDepend","hasIterateNode","isCreate","inheritList","setSendParams","sendIndex","sendMng","sendNode","dependItem","getSendParamList","initConnectorNode","inheritNode","isChange","ConditionTypes","ConnectTypes","loopCountWrap","FactDetSendManager","sendParamList","curSize","curParamList","paramDataList","createParamWrapList","COLOR_METHOD","createVisualParams","createBehaviorParams","seedMng","COLOR_MNG","COLOR_LIST","COLOR_ITEM","isFocus","_Category","backgroundColor","_EditableValue","detailJsx","_Field","_Signature","_Detail","_ValueType","createContext","FactoryTab","getInitialData","setRootData","setInvalidate","getChildren","wrapNode","_TreeDiv","_TreeHead","_TreeBody","Frame","getNodeJsx","_PropsDiv","_DetailDiv","_DetailHeader","_DetailHeaderLabel","getTypeName","Provider","_DetailMainDiv","getDetailComponent","ManageTab","isVisible","TimelineUtil","TimelineTab","getChildnre","CreateChannel","SCORE_TAB_MARGIN","DirectView","getDecryptionedScoreSeq","hashKey","to","DirectLogin","getDecryptionedUserSeq","findUserInfoFromSeq","then","resList","ReleaseNote","setJsx","record","note","_Header","version","_ListFrame","HOME_USER_DIV_HEIGHT","HomeChannel","userCount","_Left","_MessageRecord","_Right","MainFrame","basename","process","RouterManage","URLSearchParams","useLocation","search","get","path","exact","MAIN_FRAME_MARGIN","Splash","isSwitch","setSwitch","timerId","setTimerId","remove","clearTimeout","_Title","_NowLoading","_Copylight","fadeIn","keyframes","TotalHeader","setUserId","_ACCENT","_NORMAL","_Menu","_Language","_MenuItem","isEntry","TOTAL_HEADER_WIDTH","SystemEntry","_MainDiv","App","oncontextmenu","onkeydown","ctrlKey","key","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kNAaW,IAAMA,EAAgB,mBAAG,2CAKnBC,EAAiB,oBAAG,gCAqB3BC,EAAqB,WACvB,OAAO,IAAIC,IAAQ,qBAAsB,IAgBvCC,GAb2B,uBAAG,SAACC,GACjC,IACMC,EADUJ,IACKK,OAAOF,GAE5B,OADkBG,IAAOD,OAAOD,GAAM,IAIP,yBAAG,SAACG,GACnC,IAAMC,EAAUR,IAEhB,OADqBS,OAAOD,EAAQE,OAAOJ,IAAOI,OAAOH,MAIjC,WACxB,OAAO,IAAIN,IAAQ,gBAAiB,KAG3BU,EAAqB,wBAAG,SAACR,GAClC,IACMC,EADUF,IACKG,OAAOF,GAE5B,OADkBG,IAAOD,OAAOD,GAAM,IAiE7BQ,GA7DuB,0BAAG,SAACL,GACpC,IAAMC,EAAUN,IAEhB,OADqBO,OAAOD,EAAQE,OAAOJ,IAAOI,OAAOH,MAInC,gBAAG,SAACM,GAC1B,IAAMC,EAAYH,EAAsBE,GAExC,MADS,UAAMd,EAAN,wBAAuCe,IAwCd,4BAAG,SAACC,GACtC,OAAOC,MAAMlB,EAAmB,QAbF,SAACiB,GAC/B,MAAO,CACHE,KAAM,OACNC,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUR,IAMrBS,CAA0BT,KAWA,wBAAG,SAACU,EAAgCC,GAClE,OAAOV,MAAMlB,EAAmB,IAAM2B,EA7CX,SAACC,GAC5B,MAAO,CACHT,KAAM,OACNC,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEG,SAsCvBC,CAAuBD,MAIlBE,EAAgB,yCAAG,8BAAAC,EAAA,sEACLjB,EAAsB,SAAD,kCADhB,cACtBkB,EADsB,gBAENA,EAASf,OAFH,cAEtBgB,EAFsB,yBAGrBA,GAHqB,2CAML,uCAAG,4BAAAF,EAAA,sEACJD,IADI,cACpBG,EADoB,yBAElBA,EAA4BC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,OAFzB,2CAKI,+DAAG,WAAOC,GAAP,iBAAAN,EAAA,sEACVjB,EAAsB,SAAD,sDAA0DuB,EAA1D,MADX,cAC3BL,EAD2B,gBAEXA,EAASf,OAFE,cAE3BgB,EAF2B,yBAG1BA,GAH0B,2CAAH,sDAMF,6DAAG,WAAO5B,GAAP,iBAAA0B,EAAA,sEACRjB,EAAsB,SAAD,oEAAwET,IADrF,cACzB2B,EADyB,gBAETA,EAASf,OAFA,cAEzBgB,EAFyB,yBAGxBA,GAHwB,2CAAH,sDAMF,2DAAG,WAAOG,EAAYE,GAAnB,iBAAAP,EAAA,sEACNjB,EAAsB,SAAD,oEAAwEsB,EAAxE,6BAA+FE,EAA/F,MADf,cACvBN,EADuB,gBAEPA,EAASf,OAFF,cAEvBgB,EAFuB,yBAGtBA,GAHsB,2CAAH,wDAMH,uCAAG,gCAAAF,EAAA,sEACHjB,EAAsB,SAAD,2DADlB,cACpBkB,EADoB,gBAEJA,EAASf,OAFL,cAEpBgB,EAFoB,OAGpBM,EAAWN,EAAQ,GAAR,IAA+B,EAChDO,EAAS1B,sBAAsB,SAA/B,kEAJ0B,kBAMnByB,GANmB,2CASA,2DAAG,WAAOE,GAAP,iBAAAV,EAAA,sEACNS,EAAS1B,sBAAsB,SAA/B,oEAAsG2B,IADhG,cACvBT,EADuB,gBAEPA,EAASf,OAFF,cAEvBgB,EAFuB,yBAGtBA,GAHsB,2CAAH,sDAMR,mDAAG,WAAOlB,GAAP,iBAAAgB,EAAA,sEACES,EAAS1B,sBAAsB,SAA/B,8HAAgKC,IADlK,cACfiB,EADe,gBAECA,EAASf,OAFV,cAEfgB,EAFe,yBAGdA,GAHc,2CAAH,sDAWL,OAAG,SAACS,GAEjB,IAAMC,EAAUC,mBAAmBF,GAKnC,OAHeG,IAAKC,SAASH,GAERI,SAAS,WAShB,QAAG,SAACL,GAElB,IAAMM,EAASC,EAAOC,KAAKR,EAAK,UAE1BS,EAASN,IAAKO,UAAUJ,GAG9B,OADYK,mBAAmBF,EAAOJ,aASZ,oBAAG,SAACO,GAE9B,IAAMC,EAAWD,EAAKE,cAAcT,WAE9BU,GAAa,EAAIH,EAAKI,YAAYX,WAClCY,EAAUL,EAAKM,UAAUb,WACzBc,EAAWP,EAAKQ,WAAWf,WAC3BgB,EAAaT,EAAKU,aAAajB,WAC/BkB,EAAaX,EAAKY,aAAanB,WAEjCoB,EAAa,sBAQjB,OAFAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAaA,EAAWC,QAAQ,QAASb,IACjBa,QAAQ,MAAOX,IACfW,QAAQ,MAAOT,IACfS,QAAQ,MAAOP,IACfO,QAAQ,MAAOL,IACfK,QAAQ,MAAOH,I,CAjOrCzB,M,KAuOKA,Q,wMCxOF6B,EAAsB,CAC/BC,OAAQ,CACJC,UAAU,EACVC,KAAM,KACNC,OAAQ,Q,ECZNC,M,KACsB,gBAAG,IACF,mBAAG,GAGrBA,I,wBAAAA,I,OCeAC,EAhBO,WAAO,IAAD,EAEIC,qBAAWC,IAA/BC,EAFgB,EAEhBA,MAAOC,EAFS,EAETA,SAETN,EAASK,EAAMR,OAAOG,OAE5B,OAAc,MAAVA,EAAuB,6BACnB,qCACJ,cAACO,EAAD,CAAQC,QAAS,WACbH,EAAMR,OAAOG,OAAS,KACtBM,EAAS,eAAID,OAEhBL,MAMHO,EAASE,IAAOC,IAAV,6L,YCnBD,IAAMC,EAAU,aAAG,GACbC,EAAW,cAAG,GAGdC,GAFU,aAAG,GAEJ,YAAGC,YAAH,iLAQM,kBAAGA,YAAH,0HACtBD,EAEWF,GAIY,mBAAGG,YAAH,0HACvBD,EAEWD,GAIc,qBAAGE,YAAH,sF,CA5BzBC,M,KAiCKA,I,0IAAAA,KA2BFC,IAzBgBP,IAAOC,IAAV,6FAMHD,IAAOC,IAAV,wDAIGD,IAAOC,IAAV,0EAKYI,YAAH,mKAUIA,YAAH,yNAGbC,EAAOH,cChDXK,IDwDeH,YAAH,0ECxDE,SAACI,GAA6B,IAAD,EACpBC,mBAASD,EAAME,UADK,mBAC7CA,EAD6C,KACnCC,EADmC,KAgBpD,OAJAC,qBAAU,WACND,EAAYH,EAAME,YACnB,CAACF,EAAME,WAGN,qCACI,cAACG,GAAD,UAEQL,EAAMM,YAAY/D,KAAI,SAACgE,EAAKC,GACxB,OAAO,cAAC,GAAD,CACSC,KAAMF,EAAIE,KAAMC,KAAMH,EAAIG,KAAMC,SAAUH,GAASN,EAAUU,SAAUL,EAAIK,SACvFC,UAAW,kBAnBZ,SAACL,QACQM,GAAxBd,EAAMe,eACNf,EAAMe,eAAeP,GAErBL,EAAYK,GAeqBO,CAAeP,KAD3BA,QAMrB,cAACQ,GAAD,UAEQhB,EAAMM,YAAY/D,KAAI,SAACgE,EAAKC,GACxB,OAAO,cAAC,GAAD,CAA6BS,KAAMV,EAAIU,KAAMN,SAAUH,IAAUN,GAA3CM,aAQ/CU,GAAe,SAAClB,GAOlB,OACI,eAACmB,GAAD,CACIP,SAAUZ,EAAMY,SAChBD,SAAUX,EAAMW,SAChBrB,QAAS,kBAAMU,EAAMa,aAHzB,UAKI,cAACO,GAAD,UAAQpB,EAAMU,OACd,cAACW,GAAD,UAASrB,EAAMS,WAKrBa,GAAkB,SAACtB,GAIrB,OACI,cAACuB,GAAD,CAAWZ,SAAUX,EAAMW,SAA3B,SACKX,EAAMiB,QAKbZ,GAAad,IAAOC,IAAV,uTAYVwB,GAAYzB,IAAOC,IAAV,gRAWT+B,GAAYhC,IAAOC,IAAV,6MAST,SAAAQ,GAAK,OAAKA,EAAMW,SAAiCf,YAAxC,gDAAkBA,YAAlB,2CAGTuB,GAAQ5B,IAAOC,IAAV,4XASL,SAAAQ,GACE,OAAIA,EAAMW,SACCf,YAAP,+HAKOA,YAAP,sHAMN,SAAAI,GAAK,OAAIA,EAAMY,SAAW,GAAKf,GAAO2B,sBAMtC,SAAAxB,GAAK,OAAIA,EAAMW,SAAW,GAAKf,YAAtB,qRAiBTwB,IALYxB,YAAH,2FAKDL,IAAOC,IAAV,8PAYL6B,GAAS9B,IAAOC,IAAV,gO,mCClKCiC,GAAa,SAACzB,GAA4B,IAAD,IAClBC,mBAASD,EAAME,UADG,mBAC3CA,EAD2C,KACjCC,EADiC,KAY5CuB,EAAY,UAAG1B,EAAM0B,oBAAT,QAAyB,EAM3C,OAJAtB,qBAAU,WACND,EAAYH,EAAME,YACnB,CAACF,EAAME,WAGN,qCACI,cAAC,GAAD,CAAYwB,aAAcA,EAA1B,SAGQ1B,EAAMM,YAAY/D,KAAI,SAACgE,EAAKC,GACxB,OAAO,cAAC,GAAD,CACSC,KAAMF,EAAIE,KAAME,SAAUH,GAASN,EAAUU,SAAUL,EAAIoB,OACvEd,UAAW,kBAtBZ,SAACL,QACQM,GAAxBd,EAAMe,eACNf,EAAMe,eAAeP,GAErBL,EAAYK,GAkBqBO,CAAeP,KAD3BA,QAMrB,cAAC,GAAD,CAAWkB,aAAcA,EAAzB,SAGQ1B,EAAMM,YAAY/D,KAAI,SAACgE,EAAKC,GACxB,OAAO,cAAC,GAAD,CAAyBS,KAAMV,EAAIU,KAAMN,SAAUH,IAAUN,GAA3CM,YAQ3CoB,GAAW,SAAC5B,GAMd,OACI,cAAC6B,GAAD,CACIjB,SAAUZ,EAAMY,SAChBD,SAAUX,EAAMW,SAChBrB,QAAS,kBAAMU,EAAMa,aAHzB,SAIKb,EAAMS,QAKbqB,GAAc,SAAC9B,GASjB,OACI,cAAC,GAAD,CAAWW,SAAUX,EAAMW,SAA3B,SACKX,EAAMiB,QAKbZ,GAAad,IAAOC,IAAV,2JAIF,SAAAQ,GAAK,OAAI,GAAKA,EAAM0B,gBAK5BV,GAAYzB,IAAOC,IAAV,kNAKW,SAAAQ,GAAK,OAAyB,GAArBA,EAAM0B,gBAMnCH,GAAYhC,IAAOC,IAAV,4HAMT,SAAAQ,GAAK,OAAKA,EAAMW,SAAiCf,YAAxC,gDAAkBA,YAAlB,2CAGTiC,GAAYtC,IAAOC,IAAV,wUAQT,SAAAQ,GACE,OAAIA,EAAMW,SACCf,YAAP,2TAUOA,YAAP,uYASMI,EAAMY,SAAW,GAAKhB,YAAtB,+H,GChJRmC,Q,KAOsB,gBAAG,SAACC,GAC5B,IAAIxE,GAAS,EAOb,OANAwE,EAAWC,SAAQ,SAAAC,GACf,GAAIA,EAAUC,OAAOC,OAAS,EAE1B,OADA5E,GAAS,EACF,KAGRA,GAGkB,oBAAG,SAACwC,GAc1B,IAAD,cACIqC,EAAO,UAAArC,EAAMsC,kBAAN,SAA4B,WAAa,OAEhDC,EAAU,UAAGvC,EAAMwC,iBAAT,QAAsB,GAChCL,EAASnC,EAAMkC,UAAUC,OACzBM,GAAa,UAACzC,EAAMyC,kBAAP,QAAqB,IAAIlG,KAAI,SAAAmG,GAAG,OAAIA,EAAIC,SAErDC,EAAY,SAACD,GACf,IAAMR,EAAmC,GAMzC,OALAI,EAAWN,SAAQ,SAAAY,GACVA,EAAUC,QAAQH,IACnBR,EAAOY,KAAKF,EAAUG,cAGvBb,GAMX,OAJA/B,qBAAU,WACNJ,EAAMkC,UAAUC,OAASS,EAAU5C,EAAMkC,UAAUS,OACnD3C,EAAMiD,aAAN,eAAwBjD,EAAMkC,cAC/BO,GAEC,eAAC,GAAD,CACI7B,SAAQ,UAAEZ,EAAMY,gBAAR,SACRsC,UAAW,UAAClD,EAAMmD,gBAAP,SAA4B,SAAW,OAClDC,UAAS,UAAEpD,EAAMoD,iBAAR,QAAqB,EAHlC,eAKyBtC,GAApBd,EAAMqD,WAA0B,6BAAQ,cAACC,GAAD,UAActD,EAAMqD,aAC7D,cAACE,GAAD,CACIlB,KAAMA,EACNM,MAAO3C,EAAMkC,UAAUS,MACvBa,cAA8B1C,GAApBd,EAAMqD,WAChBI,MAAOzD,EAAMyD,MACbN,SAAQ,UAAEnD,EAAMmD,gBAAR,SACRO,YAAa1D,EAAM0D,YACnBC,SAAU,SAACC,GACP,IAAMjB,EAAQiB,EAAEC,OAAOlB,MACvB3C,EAAMkC,UAAUS,MAAQA,EACxB3C,EAAMkC,UAAUC,OAASS,EAAUD,GACnC3C,EAAMiD,aAAN,eAAwBjD,EAAMkC,aAElCc,UAA6B,IAAlBb,EAAOC,YAAetB,EAAYqB,EAAO,GACpD2B,SAAU9D,EAAM+D,iBAOb,UAAG,SAAC/D,GAKhB,IAAD,MACF,OACI,cAAC,GAAD,CACIY,SAAQ,UAAEZ,EAAMY,gBAAR,SACRsC,UAAS,UAAElD,EAAMkD,iBAAR,QAAqB,OAC9BE,UAAS,UAAEpD,EAAMoD,iBAAR,QAAqB,EAHlC,SAKKpD,EAAMgE,OAKI,cAAG,SAAChE,GAOpB,IAAD,MACF,OACI,eAAC,GAAD,CACIY,SAAQ,UAAEZ,EAAMY,gBAAR,SACRsC,UAAS,UAAElD,EAAMkD,iBAAR,QAAqB,OAC9BE,UAAS,UAAEpD,EAAMoD,iBAAR,QAAqB,EAHlC,eAKyBtC,GAApBd,EAAMqD,WAA0B,6BAAQ,cAACC,GAAD,CAAaW,WAAYjE,EAAMiE,WAA/B,SAA4CjE,EAAMqD,aAC1FrD,EAAMgE,QAKG,aAAG,SAAChE,GAYnB,IAAD,UACEqC,EAAO,UAAArC,EAAMsC,kBAAN,SAA4B,WAAa,OACpD,UAAItC,EAAMkE,gBAAV,WACI7B,EAAO,UAGX,IAAME,EAAU,UAAGvC,EAAMwC,iBAAT,QAAsB,GAChCL,EAASnC,EAAMkC,UAAUC,OACzBM,GAAa,UAACzC,EAAMyC,kBAAP,QAAqB,IAAIlG,KAAI,SAAAmG,GAAG,OAAIA,EAAIC,SAW3DvC,qBAAU,WACNJ,EAAMkC,UAAUC,OAVF,SAACQ,GACf,IAAMR,EAAmC,GAMzC,OALAI,EAAWN,SAAQ,SAAAY,GACVA,EAAUC,QAAQH,IACnBR,EAAOY,KAAKF,EAAUG,cAGvBb,EAGkBS,CAAU5C,EAAMkC,UAAUS,OACnD3C,EAAMiD,aAAN,eAAwBjD,EAAMkC,cAC/BO,EAAW0B,OAAOnE,EAAMkC,UAAUS,QAErC,IAAIA,EAAQ3C,EAAMkC,UAAUS,MAE5B,OACI,cAACyB,GAAD,CACI/B,KAAMA,EACNM,MAAOA,EACPc,MAAK,UAAEzD,EAAMyD,aAAR,QAAiB,IACtBC,YAAa1D,EAAM0D,YACnBC,SAAU,SAACC,GACP,IAAIjB,EAAQiB,EAAEC,OAAOlB,MAErB3C,EAAMkC,UAAUS,MAAiB,WAATN,EAAoBM,EAAQ3H,OAAO2H,GAAOvF,WAElE4C,EAAMiD,aAAN,eAAwBjD,EAAMkC,aAElCc,UAA6B,IAAlBb,EAAOC,YAAetB,EAAYqB,EAAO,GACpD2B,SAAU9D,EAAM+D,WAChBM,WAAYrE,EAAMqE,cAMT,YAAG,SAACrE,GAYlB,IAAD,QACIuC,EAAU,UAAGvC,EAAMwC,iBAAT,QAAsB,GAChCL,EAASnC,EAAMkC,UAAUC,OACzBM,GAAa,UAACzC,EAAMyC,kBAAP,QAAqB,IAAIlG,KAAI,SAAAmG,GAAG,OAAIA,EAAIC,SACrD2B,EAAS,UAAGtE,EAAMsE,iBAAT,SACTC,EAAOvE,EAAMuE,KAAKC,QAmBxB,OAlBIF,GAAWC,EAAKE,QAAQ,CAAE9B,MAAO,GAAI+B,UAAW,KAYpDtE,qBAAU,WAENJ,EAAMkC,UAAUC,OAZF,SAACQ,GACf,IAAMR,EAAmC,GAMzC,OALAI,EAAWN,SAAQ,SAAAY,GACVA,EAAUC,QAAQH,IACnBR,EAAOY,KAAKF,EAAUG,cAGvBb,EAKkBS,CAAU5C,EAAMkC,UAAUS,OACnD3C,EAAMiD,aAAN,eAAwBjD,EAAMkC,cAC/BO,EAAW0B,OAAOnE,EAAMkC,UAAUS,QAGjC,cAACgC,GAAD,CACIhC,MAAO3C,EAAMkC,UAAUS,MACvBc,MAAK,UAAEzD,EAAMyD,aAAR,QAAiB,IACtBC,YAAa1D,EAAM0D,YACnBC,SAAU,SAACC,GACP,IAAMjB,EAAQiB,EAAEC,OAAOlB,MACvB3C,EAAMkC,UAAUS,MAAQA,EAExB3C,EAAMiD,aAAN,eAAwBjD,EAAMkC,aAGlCc,UAA6B,IAAlBb,EAAOC,YAAetB,EAAYqB,EAAO,GACpD2B,SAAU9D,EAAM+D,WAChBM,WAAYrE,EAAMqE,WAbtB,SAcEE,EAAKhI,KAAI,SAACqI,EAAMC,GAAO,IAAD,IACpB,OACI,cAACC,GAAD,CACInC,MAAOiC,EAAKjC,MACZoC,SAAQ,UAAEH,EAAKI,kBAAP,SACRA,WAAU,UAAEJ,EAAKI,kBAAP,SAHd,SAIEJ,EAAKF,WAJOG,SAiBL,gBAAG,SAAC7E,GAKtB,IAAD,IACF,OACI,cAAC,GAAD,CACIY,UAAU,EACVsC,UAAW,UAAClD,EAAMmD,gBAAP,SAA4B,SAAW,QAClDC,UAAS,UAAEpD,EAAMoD,iBAAR,QAAqB,EAHlC,SAKKpD,EAAMiF,QAAQ1I,KAAI,SAAC2I,EAAQL,GAAO,IAAD,IAC9B,OACI,cAACM,GAAD,CAEIhC,SAAQ,UAAEnD,EAAMmD,gBAAR,SACRvC,SAAQ,UAAEsE,EAAOtE,gBAAT,SACR6C,MAAOyB,EAAOzB,MACdnE,QAAS4F,EAAOE,SALpB,SAMEF,EAAOG,OALAR,SAYT,WAAG,SAAC7E,GAKjB,IAAD,MACF,OACI,cAAC,GAAD,CACIY,UAAU,EACVsC,UAAW,UAAClD,EAAMmD,gBAAP,SAA4B,SAAW,OAClDC,UAAS,UAAEpD,EAAMoD,iBAAR,QAAqB,EAHlC,SAKI,cAACkC,GAAD,CACInC,SAAQ,UAAEnD,EAAMmD,gBAAR,SADZ,SAEEnD,EAAMuF,aAKI,eAAG,SAACvF,GAMrB,IAAD,MACF,OACI,cAAC,GAAD,CACIY,UAAU,EACVsC,UAAW,UAAClD,EAAMmD,gBAAP,SAA4B,SAAW,OAClDC,UAAS,UAAEpD,EAAMoD,iBAAR,QAAqB,EAHlC,SAKI,cAACkC,GAAD,CACIE,QAAQ,EACRlG,QAASU,EAAMyF,YACftC,SAAQ,UAAEnD,EAAMmD,gBAAR,SAHZ,SAIEnD,EAAMuF,aAKI,eAAG,SAACvF,GAIrB,IAAD,EAEF,OAAQ,qCACJ,cAAC0F,GAAD,UAAc1F,EAAM2F,QACpB,cAACC,GAAD,CAAchF,SAAQ,UAAEZ,EAAMY,gBAAR,SAAtB,SAAiDZ,EAAM6F,eAIzC,aAAG,SAAC7F,GAGnB,IAAD,EACI8F,EAAM,UAAG9F,EAAM8F,cAAT,QAAmB,GAE/B,OAAQ,mCACJ,cAACC,GAAD,CAAUD,OAAQA,EAAQE,MAFhB,UAEV,SACKhG,EAAMiG,YAAY1J,KAAI,SAAC2J,EAAMrB,GAC1B,OAAO,iCAAeqB,EAAK,yBAATrB,WAMf,UAAG,SAAC7E,GAMhB,IAAD,EACF,OACI,cAACmG,GAAD,CACIC,MAAOpG,EAAMoG,MACbxF,SAAQ,UAAEZ,EAAMY,gBAAR,SACR6C,MAAOzD,EAAMyD,MACbnE,QAASU,EAAMoF,SAJnB,SAKEpF,EAAMqF,SAKLtD,I,0CAAAA,MAGTsE,GAAU9G,IAAOC,IAAV,6NAQK,SAAAQ,GAAK,OAAIA,EAAMoD,aAG3B,SAAApD,GAAK,OAAIA,EAAMY,SAAW,GAAKf,GAAO2B,sBAC1B,SAAAxB,GAAK,OAAIA,EAAMkD,aAG3BI,GAAc/D,IAAOC,IAAV,iaAKJ,SAAAQ,GAAK,uBAAIA,EAAMiE,kBAAV,QAAwB,MACpCpE,GAAOyG,kBAYP/C,GAAiBhE,IAAOgH,MAAV,2hBASd,SAAAvG,GAAK,OAAKA,EAAMwD,SACd5D,YADO,sEAAkBA,YAAlB,qCAIT,SAAAI,GAAK,YAAmBc,GAAfd,EAAMyD,MAAqB,GAAK7D,YAAhC,wDACEI,EAAMyD,UAWC,SAAAzD,GAChB,QAAuBc,GAAnBd,EAAMgD,UAAwB,MAAO,UAErC,OAAQhD,EAAMgD,WACV,IAAK,WAAY,MAAO,UACxB,IAAK,SAAU,MAAO,UACtB,IAAK,QAAS,MAAO,UACrB,IAAK,WAAY,MAAO,cAO/B,SAAAhD,GAAK,OAAKA,EAAMmD,SAEjBvD,YAFU,4BAAkBA,YAAlB,gEAIZ,SAAAI,GAAK,OAAKA,EAAM8D,SAAgBlE,YAAvB,wJAAkB,MAY3BwE,GAAc7E,IAAOgH,MAAV,wiBAQJ,SAAAvG,GAAK,OAAIA,EAAMyD,SAET,SAAAzD,GAAK,uBAAIA,EAAMqE,kBAAV,QAAwB,KASxB,SAAArE,GAChB,QAAuBc,GAAnBd,EAAMgD,UAAwB,MAAO,UAErC,OAAQhD,EAAMgD,WACV,IAAK,WAAY,MAAO,UACxB,IAAK,SAAU,MAAO,UACtB,IAAK,QAAS,MAAO,UACrB,IAAK,WAAY,MAAO,cAOlC,SAAAhD,GAAK,OAAKA,EAAM8D,SAAgBlE,YAAvB,wJAAkB,MAY3B+E,GAAgBpF,IAAOiH,OAAV,wiBAQN,SAAAxG,GAAK,OAAIA,EAAMyD,SAET,SAAAzD,GAAK,uBAAIA,EAAMqE,kBAAV,QAAwB,KASxB,SAAArE,GAChB,QAAuBc,GAAnBd,EAAMgD,UAAwB,MAAO,UAErC,OAAQhD,EAAMgD,WACV,IAAK,WAAY,MAAO,UACxB,IAAK,SAAU,MAAO,UACtB,IAAK,QAAS,MAAO,UACrB,IAAK,WAAY,MAAO,cAOlC,SAAAhD,GAAK,OAAKA,EAAM8D,SAAgBlE,YAAvB,uLAAkB,MAa3BkF,GAAUvF,IAAOkH,OAAV,uCAGP,SAAAzG,GAAK,OAAKA,EAAMgF,WAAkBpF,YAAzB,6DAAoB,MAK7B0F,GAAW/F,IAAOC,IAAV,2ZAOGK,GAAOH,aAWlB,SAAAM,GAAK,OAAKA,EAAMmD,SAEdvD,YAFO,4BAAkBA,YAAlB,gEAIT,SAAAI,GAAK,OAAKA,EAAMwF,OAAc5F,YAArB,uLAAgB,MAoBzBuF,IAVc5F,IAAOC,IAAV,mNAUDD,IAAOC,IAAV,8dAKPK,GAAOyG,kBACP,SAAAtG,GAAK,YAAmBc,GAAfd,EAAMyD,MAAqB7D,YAA3B,4DAEPA,YAFO,wDAGEI,EAAMyD,UASjB,SAAAzD,GAAK,OAAKA,EAAMmD,SAEdvD,YAFO,4BAAkBA,YAAlB,gEAKT,SAAAI,GAAK,OAAIA,EAAMY,SAAW,GAAKf,GAAO2B,uBAOtC2E,GAAU5G,IAAOC,IAAV,mVAKPK,GAAOyG,kBACP,SAAAtG,GAAK,YAAmBc,GAAfd,EAAMyD,MAAqB7D,YAA3B,4DAEPA,YAFO,wDAGEI,EAAMyD,UAKC,SAAAzD,GAAK,OAAKA,EAAMoG,MAAsB,UAAd,eAK1C,SAAApG,GAAK,OAAIA,EAAMY,SAAW,GAAKf,GAAO2B,sBAEhB,SAAAxB,GAAK,OAAKA,EAAMoG,MAAsB,UAAd,eAI9CV,GAAcnG,IAAOC,IAAV,sJAEXK,GAAO6G,iBAMPd,GAAerG,IAAOC,IAAV,uRAYZ,SAAAQ,GAAK,OAAIA,EAAMY,SAAW,GAAKf,GAAO2B,sBAGtCuE,GAAWxG,IAAOC,IAAV,gUASA,SAAAQ,GAAK,OAAIA,EAAM8F,SAIZjG,GAAOJ,YACX,SAAAO,GAAK,OAAIA,EAAMgG,U,GC7qBlBW,Q,KAiBiB,WAAG,SAACC,EAAWC,GAElC,MAAO,CACHD,OAAMC,SAAQC,MAAOD,EAAOC,MAAQ,EACpCC,QAAQ,EACRC,SAAU,KAIQ,iBAAG,SAACC,GAC1B,IAAMC,EAAaD,EAAKJ,OACxB,GAAkB,MAAdK,EACA,IAAK,IAAIrC,EAAI,EAAGA,EAAIqC,EAAWF,SAAS5E,OAAQyC,IAC5C,GAAIoC,GAAQC,EAAWF,SAASnC,GAAI,OAAOA,EAGnD,OAAQ,GAGM,SAAG,SAAC7E,GAOf,IAAD,IACImH,EAAS,UAAGnH,EAAMmH,iBAAT,SACTC,EAAS,UAAGpH,EAAMoH,iBAAT,QAAsB,KAE/BC,EAA2B,WAiB7B,OAhBc,SAARC,EAASR,EAAeS,EAAoBV,GAC9C,IAAMI,EAAoB,CACtBL,KAAMW,EAASX,KACfE,MAAOA,EAEPC,QAAQ,EACRC,SAAU,GACVH,UAOJ,OALAI,EAAKD,SACMO,EAASP,SAASzK,KAAI,SAAAiL,GACzB,OAAOF,EAAMR,EAAQ,EAAGU,EAAOP,MAGhCA,EAEJK,CAAM,EAAGtH,EAAMyH,aAAc,OArBtC,EAuB4CxH,mBAAsBoH,KAvBlE,mBAuBKK,EAvBL,KAuBsBC,EAvBtB,KAyBFvH,qBAAU,WACNuH,EAAmBN,OACpB,CAACrH,EAAMyH,eAEVrH,qBAAU,WACW,MAAbgH,GAAyC,MAApBA,EAAUP,SAC/BO,EAAUP,OAAOE,QAAS,KAE/B,CAACK,IAEJ,IAAMQ,EAAUC,mBAAQ,WAEpB,IAAMtD,EAAsB,GAqE5B,OApEwB,SAAlBuD,EAAmBC,EAAsBC,GAE3C,IA0BMC,EAAYF,EAAQnB,OAAR,OAAgBQ,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAWR,MAC7CrC,EAAKxB,KACD,eAAC,GAAD,CAEIpC,SAAUsH,EACVC,YAAaf,GAtBE,WAInB,IAHA,IAAI3J,GAAS,EACT2K,EAAWf,EAEI,MAAZe,GAAkB,CACrB,GAAsB,MAAlBJ,EAAQlB,QAAkBkB,GAAWI,EAAU,CAC/C3K,GAAS,EACT,MAEJ2K,EAAWA,EAAStB,OAMxB,OAHe,IAAXrJ,GAAiC,MAAb4J,GAAyC,MAApBA,EAAUP,SACnDrJ,OAAoEsD,GAA3DsG,EAAUP,OAAOG,SAASoB,MAAK,SAAAnB,GAAI,OAAIA,GAAQc,MAErDvK,EAOuB6K,GAC1BlB,UAAWc,GAAad,EAJ5B,UA3BOa,EAAUzL,KAAI,SAAC+L,EAAOzD,GACzB,IAAM0D,EAAuB,GAG7B,OAFIP,EAAU5F,OAAS,IAAMyC,GAAKyD,IAAOC,EAAMxF,KAAKuF,EAAQ,cAACE,GAAD,GAAgBD,EAAMnG,QAAa,cAACqG,GAAD,GAAeF,EAAMnG,SAChH4F,EAAU5F,OAAS,IAAMyC,GAAG0D,EAAMxF,KAAK,cAAC2F,GAAD,GAAiBH,EAAMnG,SAC3D,cAACuG,GAAD,UAAiBJ,GAAJ1D,MA8BS,IAA5BkD,EAAQf,SAAS5E,OAAe,6BAAQ,cAACwG,GAAD,CACrCtJ,QAAS,WACLyI,EAAQhB,QAAUgB,EAAQhB,OAC1BY,EAAmB,eAAKD,KAHS,SAMvCK,EAAQhB,OAAS,IAAM,MACzB,cAAC8B,GAAD,CACIvJ,QAAS,WACLU,EAAM8I,WAAWf,GACjBJ,EAAmB,eAAKD,KAE5BqB,cAAe,WACXhB,EAAQhB,QAAUgB,EAAQhB,OAC1BY,EAAmB,eAAKD,KAPhC,SAUK1H,EAAMgJ,YAAYjB,OAvBlBxD,EAAKnC,SA2Bd2F,EAAQhB,QACRgB,EAAQf,SAAS/E,SAAQ,SAACuF,EAAO3C,GAC7BiD,EAAgBN,EAAOQ,EAAUxD,QAAQL,OAAO4D,EAAQf,SAAS5E,OAAS,IAAMyC,OAI5FiD,CAAgBJ,EAAiB,IAI1BnD,IACR,CAACmD,EAAiB1H,EAAMiJ,WAAY9B,IAEvC,OACI,cAAC+B,GAAD,CAAO/B,UAAWA,EAAlB,SACKS,KAMFjB,I,GAAAA,MAETuC,GAAQ3J,IAAOC,IAAV,4RAYL,SAAAQ,GAAK,OAAKA,EAAMmH,UAAiBvH,YAAxB,qGAAmB,MAM5ByG,GAAU9G,IAAOC,IAAV,8XAOP,SAAAQ,GAAK,OAAKA,EAAMmH,UAAiBvH,YAAxB,wEAAmB,MAI5B,SAAAI,GAAK,OAAKA,EAAMkI,WAAkBtI,YAAzB,6FAAoB,MAI7B,SAAAI,GAAK,OAAKA,EAAMW,SAAgBf,YAAvB,6FAAkB,MAkB3B+I,GAASpJ,IAAOC,IAAV,8NASNiJ,GAAWlJ,IAAOC,IAAV,6MASRgJ,GAAYjJ,IAAOC,IAAV,6MASTkJ,GAAanJ,IAAOC,IAAV,6MAUVoJ,GAAUrJ,IAAOC,IAAV,uXAePqJ,GAAOtJ,IAAOC,IAAV,2NCxOK2J,GA9BY,WAAO,IAAD,EACAlK,qBAAWmK,IAAjCnC,EADsB,EACtBA,KAAMoC,EADgB,EAChBA,aACPC,EAAOrC,EAAKL,KAElB,OAAQ,mCACJ,cAAC,GAAS2C,YAAV,CACI5D,MAAM,YACNE,SAAU,cAAC,GAAS2D,aAAV,CACNrG,UAAQ,EACR8B,QAAS,CACL,CACII,MAAO,eACPD,SAAU,WACN,IAAMqE,EAAgC,CAClCpH,KAAM,gBACNuE,KAAM,MAET0C,EAAK1C,KAAyC8C,KAAK3G,KAAK0G,GACzD,IAAME,EAAUhD,GAASiD,WAAWH,EAASxC,GAC7CA,EAAKD,SAASjE,KAAK4G,GACnBN,EAAaM,c,YCPX,gBAAG,SAACE,GAC1B,OAAOA,EAAIzH,OAAS,GAUM,oBAAG,SAACyH,EAAaC,EAAaC,GACxD,OAAsB,IAAfF,EAAIzH,QAAiByH,EAAIzH,QAAU0H,GAAOD,EAAIzH,QAAU2H,GAQvC,kBAAG,SAACF,GAE5B,OAAOG,EAAmBH,EADb,mEArBV,IA8BMG,EAAkB,qBAAG,SAACH,EAAatF,GAC5C,IAAK,IAAIM,EAAI,EAAGA,EAAIgF,EAAIzH,OAAQyC,IAAK,CACjC,IAAMoF,EAAKJ,EAAIK,OAAOrF,GACtB,IAA0B,IAAtBN,EAAK4F,QAAQF,GAAY,OAAO,EAExC,OAAO,GAQU,WAAG,SAACG,GAErB,IADA,IAAI5M,GAAS,EACJqH,EAAI,EAAGA,EAAIuF,EAAWhI,OAAQyC,IACnC,IAAKuF,EAAWvF,GAAI,CAChBrH,GAAS,EACT,MAGR,OAAOA,G,CAlEL6M,Q,KAqEKA,I,GAAAA,OCnELC,Q,KAUgB,UAAG,SAACtK,GAAkB,IAAD,IACaf,qBAAWmK,IAAvDnC,EAD+B,EAC/BA,KAAMsD,EADyB,EACzBA,SAAUC,EADe,EACfA,UAAWnB,EADI,EACJA,aAE7BC,EAAOrC,EAAKL,KAEZ6D,EAAa1I,GAAS2I,gBAAgB1K,EAAM2K,iBAElD,OAAQ,mCACJ,cAAC,GAASnB,aAAV,CACIrG,UAAQ,EACR8B,QAAS,CACL,CACII,MAAO,SACPzE,SAAU2J,EACVnF,SAAU,WACN,GAAiB,MAAbkE,EAAK1C,KAAc,CACnB,IAAMC,EAAUI,EAAKJ,OACrBA,EAAOG,SAAS4D,OAAO/D,EAAOG,SAAS5E,OAAS,EAAG,GACnDiH,EAAaxC,QAEb7G,EAAM6K,cAEVL,GAAU,KAGlB,CACInF,MAAQkF,EAAsB,SAAX,SACnB3J,UAAW2J,IAAD,UAAcvK,EAAM8K,iBAApB,QAAiCL,GAC3CrF,SAAU,WACDmF,GAGgB,MAAbjB,EAAK1C,KACL5G,EAAM+K,cAEN/K,EAAMgL,eAEVR,GAAU,IAPVA,GAAU,WAiB3BF,I,GAAAA,MCkEAW,GAxHa,WAAO,IAAD,EACiChM,qBAAWmK,IAAlEnC,EADsB,EACtBA,KAAMoC,EADgB,EAChBA,aAAcmB,EADE,EACFA,UAAWD,EADT,EACSA,SAAUtB,EADnB,EACmBA,WAC3CK,EAAOrC,EAAKL,KAFY,EAIN3G,mBAAkC,CAAE0C,MAAO,GAAIR,OAAQ,KAJjD,mBAIvB1B,EAJuB,KAIjByK,EAJiB,OAKAjL,mBAAkC,CAAE0C,MAAO,GAAIR,OAAQ,KALvD,mBAKvBgJ,EALuB,KAKdC,EALc,KAOxBP,EAAc,WAChB,IAAMQ,EAAQ/B,EAAK1C,KACnBsE,EAAQ,2BAAKzK,GAAN,IAAYkC,MAAO0I,EAAM5K,QAChC2K,EAAW,2BAAKD,GAAN,IAAexI,MAAO0I,EAAMC,cAW1C,OARAlL,qBAAU,WACW,MAAbkJ,EAAK1C,KACL4D,GAAU,GAEVK,MAEL,CAAC5D,IAEI,qCACJ,cAAC,GAAiBsE,UAAlB,CACIV,YAAaA,EACbF,gBAAiB,CAAClK,GAClBsK,YAAa,WACT,IAAMM,EAAsC,CACxC5K,KAAMA,EAAKkC,MACX2I,UAAWH,EAAQxI,OAEvB0I,EAAM5K,KAAOA,EAAKkC,MAClB2G,EAAK1C,KAAOyE,GAEhBL,aAAc,WACV,IAAMK,EAAQ/B,EAAK1C,KACnByE,EAAM5K,KAAOA,EAAKkC,MAClB0I,EAAMC,UAAYH,EAAQxI,MAC1B2G,EAAK1C,KAAOyE,KAGpB,cAAC,GAAS9B,YAAV,CACI5D,MAAM,QACNE,SAAU,qCACN,cAAC,GAAS2F,WAAV,CACInI,WAAW,OACXW,IACI,cAAC,GAASyH,UAAV,CACIhI,MAAO,IACPM,YAAawG,EACbrI,UAAWzB,EACXwC,aAAciI,EACd1I,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW0H,GAAaqB,cAAc/I,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW0H,GAAasB,kBAAkBhJ,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GAAD,OAAWiJ,GAAYC,eAAelJ,IAC/CK,UAAW,cAM/B,cAAC,GAASwI,WAAV,CACInI,WAAW,OACXW,IACI,cAAC,GAAS8H,SAAV,CACI5J,UAAWiJ,EACXlI,aAAcmI,EACd7G,KAAMqH,GAAYG,SAASxP,KAAI,SAAA8F,GAC3B,MAAO,CAAEM,MAAON,EAAMqC,UAAWrC,EAAM2C,WAAqB,UAAT3C,MAEvDiC,WAAS,EACTb,MAAO,IACPM,YAAawG,EACb/H,UACI,CACI,CACIM,QAAS,SAACH,GAAD,OAAW0H,GAAaqB,cAAc/I,IAC/CK,UAAW,sBAS3C,cAAC,GAASuG,YAAV,CACI5D,MAAM,YACN/E,UAAW2J,EACX1E,SAAU,mCACN,cAAC,GAAS2D,aAAV,CACIrG,UAAQ,EACR8B,QAAS,CACL,CACII,MAAO,SACPD,SAAU,WAAO,IAAD,MACR5E,GAAS,EACb,UAAAyG,EAAKJ,cAAL,SAAaG,SAAS/E,SAAQ,SAAC+J,EAAGnH,GAC1BmH,GAAK/E,IAAMzG,EAAQqE,MAE3B,UAAAoC,EAAKJ,cAAL,SAAaG,SAAS4D,OAAOpK,EAAO,IACnC,UAACyG,EAAKJ,cAAN,aAAC,EAAaD,MAA8BA,KAAyC8C,KAAKkB,OAAOpK,EAAO,GACzG6I,EAAapC,EAAKJ,QAClBoC,iBCpFjBgD,GA7BW,WAAO,IAAD,EACChN,qBAAWmK,IAAjCnC,EADqB,EACrBA,KAAMoC,EADe,EACfA,aACPC,EAAOrC,EAAKL,KAElB,OAAQ,mCACJ,cAAC,GAAS2C,YAAV,CACI5D,MAAM,YACNE,SAAU,cAAC,GAAS2D,aAAV,CACNrG,UAAQ,EACR8B,QAAS,CACL,CACII,MAAO,cACPD,SAAU,WACN,IAAM8G,EAAiC,CACnC7J,KAAM,eACNuE,KAAM,MAET0C,EAAK1C,KAAsCuF,KAAKpJ,KAAKmJ,GACtD,IAAMvC,EAAUhD,GAASiD,WAAWsC,EAAUjF,GAC9CA,EAAKD,SAASjE,KAAK4G,GACnBN,EAAaM,aCkJ1ByC,GApKU,WAAO,IAAD,EACqCnN,qBAAWmK,IAAnEnC,EADmB,EACnBA,KAAMoC,EADa,EACbA,aAAcJ,EADD,EACCA,WAAYuB,EADb,EACaA,UAAWD,EADxB,EACwBA,SAC7CjB,EAAOrC,EAAKL,KAFS,EAIH3G,mBAAkC,CAAE0C,MAAO,GAAIR,OAAQ,KAJpD,mBAIpB1B,EAJoB,KAIdyK,EAJc,OAM+BrD,mBAAQ,WAC9D,IAAMtD,EAAO0C,EAAKD,SAASzK,KAAI,SAAA8P,GAC3B,OAAQA,EAAGzF,KAA8BvE,QAE7C,MAAO,CACHkC,EAAK+H,SAAS,cACd/H,EAAK+H,SAAS,gBACd/H,EAAK+H,SAAS,kBAEnB,CAACrF,IAfuB,mBAMpBsF,EANoB,KAMJC,EANI,KAMaC,EANb,KA8B3B,OARArM,qBAAU,WACW,MAAbkJ,EAAK1C,KACL4D,GAAU,GAPE,WAChB,IAAMa,EAAQ/B,EAAK1C,KACnBsE,EAAQ,2BAAKzK,GAAN,IAAYkC,MAAO0I,EAAM5K,QAO5BoK,KAEL,CAAC5D,IAEI,mCACJ,cAAC,GAASsC,YAAV,CACI5D,MAAM,UACN/E,UAAW2J,EACX1E,SAAU,qCACN,cAAC,GAAS6G,OAAV,CACIxJ,UAAU,SACVc,IACI,cAAC,GAAS2I,OAAV,CACItH,MAAO,SACP5B,MAAO,IACP2C,MAAOmG,EACPnH,SAAU,WACN,IAAMwB,EAAQ0C,EAAK1C,KACnB,GAAI2F,EACA3F,EAAKgG,KAAKhC,OAAO,EAAG,GACpB3D,EAAKD,SAAS4D,OAAO,EAAG,GACxBvB,EAAa,eAAKpC,IAClBgC,QACG,CACH,IAAMQ,EAAgC,CAClCpH,KAAM,aACNuE,KAAM,CACFiG,OAAQ,KAGhBjG,EAAKgG,KAAKnI,QAAQgF,GAClB,IAAME,EAAUhD,GAASiD,WAAWH,EAASxC,GAC7CA,EAAKD,SAASvC,QAAQkF,GAGlB,IAAMmD,EAAYlB,GAAYmB,gBAAgB,cAC1C,CAAEtM,KAAM,uBAAwBuM,aAAc,CAAC,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,SAAUM,MAAO,QAC5F8G,EAAQ7C,KAAsCiG,OAAO9J,KAAK+J,GAC3DnD,EAAQ3C,SAASjE,KAAK4D,GAASiD,WAAWkD,EAAWnD,IAGzDN,EAAa,eAAKpC,IAClBgC,UAMpB,cAAC,GAASyD,OAAV,CACIxJ,UAAU,SACVc,IACI,cAAC,GAAS2I,OAAV,CACItH,MAAO,WACP5B,MAAO,IACP2C,MAAOoG,EACPpH,SAAU,WACN,IAAMwB,EAAQ0C,EAAK1C,KACnB,GAAI4F,EAAiB,CACjB,IAAMU,EAAYX,EAAqB,EAAJ,EACnC3F,EAAKgG,KAAKhC,OAAOsC,EAAU,GAC3BjG,EAAKD,SAAS4D,OAAOsC,EAAU,GAC/B7D,EAAa,eAAKpC,IAClBgC,QACG,CACH,IAAMQ,EAAgC,CAClCpH,KAAM,eACNuE,KAAM,CACFiG,OAAQ,KAGVM,EAAYZ,EAAqB,EAAJ,EACnC3F,EAAKgG,KAAKhC,OAAOuC,EAAU,EAAG1D,GAC9B,IAAME,EAAUhD,GAASiD,WAAWH,EAASxC,GAC7CA,EAAKD,SAAS4D,OAAOuC,EAAU,EAAGxD,GAG9B,IAAMmD,EAAYlB,GAAYmB,gBAAgB,gBAC1C,CAAEtM,KAAM,aAAcuM,aAAc,CAAC,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,SAAUM,MAAO,WAClF8G,EAAQ7C,KAAsCiG,OAAO9J,KAAK+J,GAC3DnD,EAAQ3C,SAASjE,KAAK4D,GAASiD,WAAWkD,EAAWnD,IAGrD,IAAMmD,EAAYlB,GAAYmB,gBAAgB,gBAC1C,CAAEtM,KAAM,cAAeuM,aAAc,CAAC,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,SAAUM,MAAO,QACnF8G,EAAQ7C,KAAsCiG,OAAO9J,KAAK+J,GAC3DnD,EAAQ3C,SAASjE,KAAK4D,GAASiD,WAAWkD,EAAWnD,IAGrD,IAAMmD,EAAYlB,GAAYmB,gBAAgB,gBAC1C,CAAEtM,KAAM,UAAWuM,aAAc,CAAC,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,SAAUM,MAAO,UAC/E8G,EAAQ7C,KAAsCiG,OAAO9J,KAAK+J,GAC3DnD,EAAQ3C,SAASjE,KAAK4D,GAASiD,WAAWkD,EAAWnD,IAGzDN,EAAa,eAAKpC,IAClBgC,UAMpB,cAAC,GAASyD,OAAV,CACIxJ,UAAU,SACVc,IACI,cAAC,GAAS2I,OAAV,CACItH,MAAO,UACP5B,MAAO,IACP2C,MAAOqG,EACPrH,SAAU,WACN,IAAMwB,EAAQ0C,EAAK1C,KACnB,GAAI6F,EACAW,QAAQC,IAAIzG,EAAKgG,KAAKhG,EAAKgG,KAAKxK,OAAS,GAAGC,MAC5CuE,EAAKgG,KAAKhC,OAAOhE,EAAKgG,KAAKxK,OAAS,EAAG,GACvC6E,EAAKD,SAAS4D,OAAO3D,EAAKD,SAAS5E,OAAS,EAAG,GAC/CiH,EAAa,eAAKpC,IAClBgC,QACG,CACH,IAAMQ,EAAgC,CAClCpH,KAAM,cACNuE,KAAM,CACF0G,SAAU,KAGlB1G,EAAKgG,KAAK7J,KAAK0G,GACf,IAAME,EAAUhD,GAASiD,WAAWH,EAASxC,GAC7CA,EAAKD,SAASjE,KAAK4G,GACnBN,EAAa,eAAKpC,IAClBgC,kBChIrBsE,GA3BU,WAAO,IAAD,EACEtO,qBAAWmK,IAAjCnC,EADoB,EACpBA,KAAMoC,EADc,EACdA,aAEb,OAAQ,mCACJ,cAAC,GAASE,YAAV,CACI5D,MAAM,YACNE,SAAU,cAAC,GAAS2D,aAAV,CACNrG,UAAQ,EACR8B,QAAS,CACL,CACII,MAAO,aACPD,SAAU,WACN,IAIMuE,EAAUhD,GAASiD,WAJU,CAC/BvH,KAAM,cACNuE,KAAM,MAEgCK,GAC1CA,EAAKD,SAASjE,KAAK4G,GACnBN,EAAaM,c,YCb9B,IAAM6D,EAAS,YAAG,SAAC/J,EAAeqC,EAAgB2H,GACrD,IAAMC,EAASC,SAASC,cAAc,UAChCC,EAAMH,EAAOI,WAAW,MAI9B,OAHAJ,EAAOjK,MAAQA,EACfiK,EAAO5H,OAASA,EAChB2H,EAAKI,GACEH,EAAOK,aAGK,aAAG,WACtB,OAAOC,GAAWR,UAAU,IAAK,IAAI,SAACK,GAIlCA,EAAII,YAAc,OAClBJ,EAAIK,cAAgB,EACpBL,EAAIM,cAAgB,EACpBN,EAAIO,WAAa,EACjBP,EAAIQ,KAAO,aACXR,EAAIS,UAAY,UAChBT,EAAIU,SAAS,IAAK,GAAI,IACtB,IAAMC,EAASX,EAAIY,YAAY,KAAKhL,MACpCoK,EAAIS,UAAY,UAChBT,EAAIU,SAAS,UAAW,GAAKC,EAAQ,IACrCX,EAAIa,WAIe,iBAAG,SAACxI,GAC3B,IAAMyI,EAAQ5P,EAAY6P,gBACpBC,EAAO9P,EAAY6P,gBAAkB,EAC3C,OAAOpB,EAAUmB,EAAO5P,EAAY+P,kBAAkB,SAACjB,GACnDA,EAAIkB,OAAO,EAAIC,KAAKC,GAAK,KACzB,IAAK,IAAIpK,EAAI,EAAGA,EAAIqB,EAAK9D,OAAQyC,IAAK,CAClC,IAAMqK,EAAOhJ,EAAKgE,OAAOrF,GAEnBsK,EAA2B,GAAhBH,KAAKI,SAChBC,EAA4B,GAAhBL,KAAKI,SACvBvB,EAAIQ,KAAJ,UAAc,GAAKc,EAAnB,YACAtB,EAAIS,UAAY,QAAU,CAAC,GAAI,EAAG,IAAK,IAAO,IAAOe,GAAa,IAClExB,EAAIU,SAASW,EAAMrK,EAAIgK,EAAM,S,CAjDnCb,Q,KAuDKA,I,GAAAA,M,UCvDLsB,Q,cAuBF,WAAYtP,GAAe,IAAD,iCAV1BuP,WAU0B,OAT1BC,SAS0B,OAR1BC,aAQ0B,OAP1BC,SAO0B,OAN1BC,WAM0B,OAL1BC,WAK0B,OAJ1BC,YAI0B,OAH1BC,YAG0B,OAF1BC,YAE0B,OAa1BC,OAAS,WAEL,EAAKR,IAAIS,GAAK,EAAKP,IAAIQ,GAAGD,EAC1B,EAAKT,IAAIW,GAAK,EAAKT,IAAIQ,GAAGC,EAE1B,EAAKJ,OAAO9N,SAAQ,SAAAmD,GAAQ,OAAIA,EAAS,MAErC,EAAKuK,QAAU,EAAKC,QACpB,EAAKC,QAAS,GAElB,EAAKF,SAvBiB,KA0B1BlC,KAAO,SAACI,GACJ,EAAKiC,OAAO,EAAMjC,IA1BlBuC,KAAKb,MAAQvP,EAAMuP,MACnBa,KAAKZ,IAAMxP,EAAMwP,IACjBY,KAAKX,QAAUzP,EAAMwP,IACrBY,KAAKV,IAAM1P,EAAM0P,IAEjBU,KAAKT,MAAQ,EACbS,KAAKR,MAAQ5P,EAAM4P,MACnBQ,KAAKP,QAAS,EACdO,KAAKN,OAAS9P,EAAM8P,OACpBM,KAAKL,OAAS/P,EAAM+P,QAsBjBT,I,GAAAA,O,YCnCkB,mBAAG,SAACjE,GAAwB,IAAD,EAE9CgF,EAAM,UAAGhF,EAAMgF,cAAT,QAAmB,GAC/B,OAAO,SAACC,EAAyBzC,GAAmC,IAAD,EACzDoC,EAAIK,EAAKd,IAAIS,EACbE,EAAIG,EAAKd,IAAIW,EACbI,EAAI1C,EAAI2C,qBAAqBP,EAAGE,EAAG,EAAGF,EAAGE,EAAGE,GAE5CI,EAAqB,GACrBC,EAAI,UAAGC,EAAyBtF,EAAMrF,cAAlC,QAA4C,CAAE4K,EAAG,IAAKL,EAAG,IAAKM,EAAG,IAAKzU,EAAG,KAWnF,GAVAqU,EAAM1N,KAAK,CAAE+N,OAAQ,EAAG9K,MAAO,cAC/B0K,EAAKtU,EAAI,GACTqU,EAAM1N,KAAK,CAAE+N,OAAQ,GAAK9K,MAAO+K,EAAyBL,KAC1DA,EAAKtU,EAAI,EACTqU,EAAM1N,KAAK,CAAE+N,OAAQ,EAAG9K,MAAO+K,EAAyBL,KAExDD,EAAMxO,SAAQ,SAAA+O,GACVT,EAAEU,aAAaD,EAAKF,OAAQE,EAAKhL,eAGLlF,GAA5BuK,EAAM6F,mBAAiC,CACvC,IAAMC,EAAQnC,KAAKoC,MAAMd,EAAKV,MAAQvE,EAAM6F,oBAC5C,GAAIZ,EAAKX,MAAQwB,EAAO,CACpB,IAAMvB,EAAQU,EAAKV,MAAQuB,EACrBxB,EAAQW,EAAKX,MAAQwB,EAC3BtD,EAAIwD,aAAezB,EAAQD,GAASC,GAI5C/B,EAAIS,UAAYiC,EAChB1C,EAAIyD,YACJzD,EAAI0D,IAAItB,EAAGE,EAAGE,EAAQ,EAAG,EAAIrB,KAAKC,IAAI,GACtCpB,EAAI2D,SAhCL,IAoCMb,EAAwB,2BAAG,SAACc,GACrC,IAAMjS,EAAMiS,EAAKC,MAAM,KACvB,GAAmB,IAAflS,EAAI4C,QAAgB5C,EAAI,GAAG4C,OAAS,EAAG,OAAO,KAElD,IAAMO,EAAQnD,EAAI,GACZoR,EAAI5V,OAAO2W,SAAShP,EAAMiP,UAAU,EAAG,GAAI,IAC3CrB,EAAIvV,OAAO2W,SAAShP,EAAMiP,UAAU,EAAG,GAAI,IAC3Cf,EAAI7V,OAAO2W,SAAShP,EAAMiP,UAAU,EAAG,GAAI,IAC7CxV,EAAI,EAIR,OAHqB,IAAjBuG,EAAMP,SACNhG,EAAIpB,OAAO2W,SAAShP,EAAMiP,UAAU,EAAG,GAAI,KAExC,CAAEhB,IAAGL,IAAGM,IAAGzU,MAGT2U,EAAwB,2BAAG,SAACL,GACrC,IAAME,GAAK,KAAOF,EAAKE,EAAExT,SAAS,KAAKoH,OAAO,GACxC+L,GAAK,KAAOG,EAAKH,EAAEnT,SAAS,KAAKoH,OAAO,GACxCqM,GAAK,KAAOH,EAAKG,EAAEzT,SAAS,KAAKoH,OAAO,GACxCpI,GAAK,KAAOsU,EAAKtU,EAAEgB,SAAS,KAAKoH,OAAO,GAC9C,MAAM,IAAN,OAAWoM,GAAX,OAAeL,GAAf,OAAmBM,GAAnB,OAAuBzU,IAGP,UAAG,SAAC4J,EAAe6L,GACnC,OAAO7L,G,CAhFL8L,Q,KAoFKA,I,GAAAA,OCtFLC,Q,YAYF,WAAY7B,GAAS,IAAD,iCAJpBA,QAIoB,OAHpB8B,SAGoB,OAFpBC,SAEoB,OAOpBC,WAAa,WACT,EAAKD,IAAMjD,KAAKmD,KAAK,EAAKjC,GAAGD,EAAI,EAAKC,GAAGD,EAAI,EAAKC,GAAGC,EAAI,EAAKD,GAAGC,GACjE,EAAK6B,IAAMhD,KAAKoD,MAAM,EAAKlC,GAAGC,EAAG,EAAKD,GAAGD,IATzB,KAYpBoC,YAAc,WACV,EAAKnC,GAAGD,EAAIjB,KAAKsD,IAAI,EAAKN,KAAO,EAAKC,IACtC,EAAK/B,GAAGC,EAAInB,KAAKuD,IAAI,EAAKP,KAAO,EAAKC,KAbtC7B,KAAKF,GAAKA,EACVE,KAAK4B,IAAM,EACX5B,KAAK6B,IAAM,EACX7B,KAAK8B,cAgBFH,I,GAAAA,O,YCvBJ,IAAMS,EAAY,eAAG,IACfC,EAAa,gBAAG,IA6KvBC,GAlKuB,mBAAG,SAC5BnD,EACAtI,EACA0L,EACAjJ,GA0JA,OAhJ0B,SAApBkJ,EAAqBC,EAAgCC,EAAoBjM,GAAgD,IAAD,IACtHkM,EAA2BD,EAAO3O,OAAO6O,GAEvCC,GAAe,UAACP,EAAc,aAAcG,EAAIjG,aAAjC,aAAC,EAAuChG,MACzDiG,OAAOtQ,KAAI,SAAA8O,GAAK,OAAIA,EAAMzE,QACxBsM,GAAiB,UAACR,EAAc,eAAgBG,EAAIjG,aAAnC,aAAC,EAAyChG,MAC7DiG,OAAOtQ,KAAI,SAAA8O,GAAK,OAAIA,EAAMzE,QAExBuM,EAAiB,SAAC1S,GACpB,OAAO2S,EAAsB3S,EAAMwS,EAAcF,IAE/CM,EAAmB,SAAC5S,GACtB,OAAO2S,EAAsB3S,EAAMyS,EAAgBH,IAGjDnD,EAAQZ,KAAKoC,MAAMiC,EAAiB,UACpC7D,EAAgB,MAAV3I,EAAiB,CAAEoJ,EAAGoD,EAAiB,SAAUlD,EAAGkD,EAAiB,UAAaxM,EAAO2I,IAC/FE,EAAM,IAAIqC,GAAWuB,OAAO,CAAErD,EAAG,EAAGE,EAAG,IACU,UAAnD+C,EAAeA,EAAe9Q,OAAS,GAAG3B,MAC1CiP,EAAIQ,GAAGD,EAAIoD,EAAiB,SAC5B3D,EAAIQ,GAAGC,EAAIkD,EAAiB,SAC5B3D,EAAIwC,eAEJxC,EAAIsC,IAAMqB,EAAiB,UAC3B3D,EAAIuC,IAAMoB,EAAiB,UAC3B3D,EAAI2C,eAGR,IAAMkB,EAAoD,GACpDC,EAAYd,EAAc,aAAcG,EAAIjG,MAE9CsE,OAAqBpQ,EACzB,GAAiB,MAAb0S,EAAmB,CACnB,IAAM5G,EAAQ4G,EAAU5M,KAAuCgG,KACzD6G,EAAaf,EAAc,cAAe9F,GAChD,GAAkB,MAAd6G,EACkBA,EAAW7M,KAA+C0G,SAEnErL,SAAQ,SAAAyR,GAAY,IAAD,EAClBC,EAAYD,EAAQ9M,KAGpBgN,EAAgF,UAAxBD,EAAUE,UAAyB,SAACvD,GAC9F,OAAOA,EAAKX,QAAUW,EAAKV,OAC3B,SAACU,GACD,OAAO,GAELwD,EAAsC,WAA1BH,EAAUI,YAAV,UACdrB,EAAc,qBAAsBiB,EAAU/G,aADhC,aACd,EAAqDhG,KAvD/C,SAACnG,GACvB,IACM6I,EADOqJ,EAAS/L,KAA8BoN,WAAWpN,KAC9CuF,KAAK/D,MAAK,SAAA6L,GAAG,OAAKA,EAAIrN,KAAmCnG,OAASA,KACnF,YAAYK,GAARwI,EAA0B,KACvBA,EAAK1C,KAoDIsN,CAAkBP,EAAUQ,QAEhC,GAAiB,MAAbL,EAAmB,CACnB,IAAIM,EAAU,EACRC,EAAc3B,EAAc,cAAeiB,EAAU/G,MAC3D,GAAmB,MAAfyH,EAAqB,CACrB,IAAMxH,EAAUwH,EAAYzN,KAAsCiG,OAAOtQ,KAAI,SAAA8O,GAAK,OAAIA,EAAMzE,QAC5FwN,EAAUhB,EAAsB,aAAcvG,EAAQkG,GAG1DA,EAAahQ,KAAK,CAAEtC,KAAM,QAASkC,MAAOiN,IAC1CmD,EAAahQ,KAAK,CAAEtC,KAAM,QAASkC,MAAO+M,EAAIQ,GAAGD,IACjD8C,EAAahQ,KAAK,CAAEtC,KAAM,QAASkC,MAAO+M,EAAIQ,GAAGC,IACjD4C,EAAahQ,KAAK,CAAEtC,KAAM,SAAUkC,MAAO+M,EAAIsC,MAC/Ce,EAAahQ,KAAK,CAAEtC,KAAM,SAAUkC,MAAO+M,EAAIuC,MAG/C,IAfmB,eAeVpN,GAfU,MAkBXyP,EAA8B,GACf,MAAfD,IACAC,EAAkB,CACd,CAAE7T,KAAM,aAAckC,MAAOyR,GAC7B,CAAE3T,KAAM,gBAAiBkC,MAAOkC,KAIxC,IACMgI,GADQ,UAAG6F,EAAc,WAAYiB,EAAU/G,aAAvC,aAAG,EAA2ChG,MACpCiG,OAAOtQ,KAAI,SAAA8O,GAAK,OAAIA,EAAMzE,QAC5C2N,EAA+B1H,EAAOtQ,KAAI,SAAAqI,GAC5C,MAAO,CAAEnE,KAAMmE,EAAKnE,KAAMkC,MAAOyQ,EAAsBxO,EAAKnE,KAAMoM,EAAQkG,EAAa5O,OAAOmQ,QAElGf,EAAWxQ,MAAK,SAACuN,GACb,GAAIsD,EAAatD,GAAO,CACpB,IAAMtQ,EAAQ4S,EACVkB,EACAS,EACA,CACI/E,IAAI,eAAMc,EAAKd,OAGvBc,EAAKf,MAAMxM,KAAK,IAAIuM,GAASkF,SAASxU,SAzBzC6E,EAAI,EAAGA,EAAIuP,EAASvP,IAAM,EAA1BA,OAgCrB,IAAM4P,EAAY/B,EAAc,aAAc9F,GAC9C,GAAiB,MAAb6H,EAAmB,CACnB,IAAM5H,EAAU4H,EAAU7N,KAAsCiG,OAAOtQ,KAAI,SAAA8O,GAAK,OAAKA,EAAMzE,QAK3FsK,EAFWkC,EAEyB,uBAFGvG,EAAQkG,GAG/C3F,QAAQC,IAAI6D,GAEhB,IAAMwD,EAAchC,EAAc,eAAgB9F,GAClD,GAAmB,MAAf8H,EAAqB,CACrB,IAAM7H,EAAU6H,EAAY9N,KAAsCiG,OAAOtQ,KAAI,SAAA8O,GAAK,OAAKA,EAAMzE,QAEvF+N,EAAmB,SAAClU,GACtB,OAAO2S,EAAsB3S,EAAMoM,EAAQkG,IAEzC6B,EAAaD,EAAiB,eAC9BE,EAAYF,EAAiB,cAC7BG,EAAUH,EAAiB,WACjCpB,EAAWxQ,MAAK,SAACuN,GACbyE,EAASzE,EAAM,CACXsE,aAAYC,YAAWC,gBAMvC,MAAO,CACHvF,QAAOC,MAAKE,MACZE,QACAE,OAAQgC,GAASkD,iBAAiB,CAC9B3E,OAAQ8C,EAAe,UACvBnN,MAAO8L,GAASf,yBAAyB,CACrCH,EAAGuC,EAAe,WAClB5C,EAAG4C,EAAe,WAClBtC,EAAGsC,EAAe,WAClB/W,EAAG+W,EAAe,aAEtBjC,uBAEJnB,OAAQwD,GAKTX,CADS3L,EAAKL,KAA8BA,KAClB8C,EAAM,OAIrB,SAACrH,EAA4B4S,GAAsC,IAAD,EACpF,iBAAOA,EAAS7M,MAAK,SAAAkB,GAAI,OAAIA,EAAKjH,OAASA,YAA3C,QAAoD,OAGlD+Q,EAAwB,SAAC3S,EAAcoM,EAAqCkG,GAC9E,IAAMmC,EAAUrI,EAAOzE,MAAK,SAAAiD,GAAK,OAAIA,EAAM5K,OAASA,KACpD,QAAeK,GAAXoU,EAAsB,OAAO,EAEjC,IAAMjI,EAASiI,EAAQjI,OAAO1Q,KAAI,SAAA4Y,GAC9B,GAAe,WAAXA,EAAE9S,KAAmB,OAAOrH,OAAOma,EAAExS,OACzC,IAAMyS,EAAWrC,EAAa3K,MAAK,SAAAiN,GAAC,OAAIA,EAAE5U,OAAS0U,EAAExS,SACrD,YAAgB7B,GAAZsU,EAA8B,EAC3BA,EAASzS,SAGhB2S,EAAa,GACbC,EAAS,EAWb,OAVAL,EAAQlI,aAAa/K,SAAQ,SAAC2C,EAAMC,GAChC,IAAIgF,EAAMjF,EACG,QAATA,GACAiF,EAAMoD,EAAOsI,GAAQnY,WACrBmY,KAEc,UAAT3Q,IAAkBiF,EAAM,mBACjCyL,GAAczL,KAGX2L,SAAS,WAAD,OAAYF,EAAZ,KAARE,IAGExC,EAA4B,mBAAG,CACxC,CAAEvS,KAAM,eAAgBkC,MAAO6P,GAC/B,CAAE/R,KAAM,gBAAiBkC,MAAO8P,GAChC,CAAEhS,KAAM,KAAMkC,MAAO,eACrB,CAAElC,KAAM,eAAgBkC,MAAO,gBAS7BoS,EAAW,SAACzE,EAAyBjF,GAEnCiF,EAAKZ,IAAIuC,IAAM5G,EAAMuJ,aACrBtE,EAAKZ,IAAIuC,IAAM3B,EAAKZ,IAAIuC,IAAM5G,EAAMwJ,UACpCvE,EAAKZ,IAAI2C,cACT/B,EAAKZ,IAAIQ,GAAGC,GAAK9E,EAAMyJ,QACvBxE,EAAKZ,IAAIwC,e,CAjOXuD,Q,KAsOKA,I,2BAAAA,OC/NLC,Q,KAKgB,UAAG,SAAC1V,GAGnB,IAAD,EAC0Bf,qBAAWC,IACjCyW,GAFJ,EACMxW,MADN,EACaC,SACHwW,iBAAuB,KAFjC,EAI8B3V,mBAAoC,IAJlE,mBAIK4V,EAJL,KAIeC,EAJf,OAM0B7V,mBAAmB,IAN7C,mBAMK8V,EANL,KAMaC,EANb,OAO8B/V,oBAAkB,GAPhD,mBAOKgW,EAPL,KAOeC,EAPf,OAQ8BjW,mBAAiB,GAR/C,mBAQKkW,EARL,KAQeC,EARf,OASoBnW,mBAAiB,GATrC,mBASK4S,EATL,KASUwD,EATV,OAU0BpW,oBAAkB,GAV5C,mBAUcqW,GAVd,aAWwBrW,oBAAkB,GAX1C,mBAWKsW,EAXL,KAWaC,EAXb,KAaFpW,qBAAU,WACFmW,IACI1D,EAAMoD,EACNQ,YAAW,WACPJ,EAAOxD,EAAM,KACd,IAAO,KAEV2D,GAAQ,GACRH,EAAO,OAGhB,CAACE,EAAQ1D,IAEZ,IAUM6D,EAAe7O,mBAAQ,WACzB,OAXoB,WACpB,IAAM8O,EAAW3W,EAAMiH,KAAKD,SAAS,GAAGJ,KACxC,MAAqB,iBAAjB+P,EAAQtU,KACAsU,EAAQ/P,KAAyC8C,KAAKnN,KAAI,SAAAqa,GAC9D,OAAQA,EAAIhQ,KAAsCnG,QAGnD,GAIAoW,KACR,IAEHzW,qBAAU,WACN0V,EAAYY,EAAana,KAAI,SAAAqa,GACzB,MAAO,CAAEjU,MAAO,GAAIR,OAAQ,UAEjC,IAEH,IAAM2U,EAAcjP,mBAAQ,WACxB,OAAOgO,EAAStZ,KAAI,SAACwa,EAAMlS,GACvB,OACI,cAAC,GAAS2G,WAAV,CAEInI,WAAYqT,EAAa7R,GACzBZ,WAAY,IACZD,IACI,cAAC,GAASyH,UAAV,CACIhI,MAAO,IACPS,UAAQ,EACRhC,UAAW6U,EACX9T,aAAc,SAACf,GACX6U,EAAI,eAAQ7U,GACZ4T,EAAYD,EAASrR,UAEzBhC,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW0H,GAAaqB,cAAc/I,IAC/CK,UAAW,gBAftB6B,QAsBlB,CAACgR,IA8DEmB,EACF,eAAC,GAAD,WACI,cAACC,GAAD,UACKH,IAEL,cAAC,GAAStN,aAAV,CACIrG,UAAQ,EACR8B,QAAS,CACL,CACII,MAAO,QACPzE,cAZwCE,GAAjD+U,EAASzN,MAAK,SAAA2O,GAAI,OAAIA,EAAK5U,OAAOC,OAAS,KAalCgD,SAAU,YAtEhB,WAEVkR,GAAS,GACT,IAAMP,EAAmB,GAEnBxG,EAA6B,GAE/B1K,EAAI,EACR,EAAG,CACW,IAANA,GACA0K,EAAMxM,KAAK,IAAIuM,GAASkF,SACpBiB,GAAYyB,iBAAiB3H,EAAOvP,EAAMiH,KAAMjH,EAAM2S,SAAUkD,EAAStZ,KAAI,SAACwa,EAAMlS,GAChF,MAAO,CAAEpE,KAAMiW,EAAa7R,GAAIlC,MAAO3H,OAAO+b,EAAKpU,cAK/DoT,EAAOhT,KAAKiL,GAAWR,UAAU,IAAK,KAAK,SAACK,GACxCA,EAAIQ,KAAO,aACXR,EAAIS,UAAY,UAChBT,EAAIU,SAAJ,UAAgB1J,GAAK,EAAG,IACxBgJ,EAAIS,UAAY,UAChBT,EAAIU,SAAJ,UAAgBgB,EAAMnN,QAAU,EAAG,IAEnCmN,EAAMtN,SAAQ,SAAAkV,GACVA,EAAI1J,KAAKI,MAGbA,EAAIa,WAIR,IAAK,IAAI7J,EAAI,EAAGA,EAAI0K,EAAMnN,OAAQyC,IACb0K,EAAM1K,GAEdmL,SAIb,IAAK,IAAInL,EAAI0K,EAAMnN,OAAS,EAAGyC,GAAK,EAAGA,IAClB0K,EAAM1K,GACTgL,QACVN,EAAM3E,OAAO/F,EAAG,GAIxB,GAAGA,EAAI,KAAO0K,EAAMnN,OAAS,IAAM,MACnCyC,UACK0K,EAAMnN,OAAS,GACxB8T,EAAYrR,GACZmR,EAAUD,GACVO,GAAS,GACTF,EAAY,GAmBQ9O,WAQlB8P,EACF,eAAC,GAAD,WACI,cAACC,GAAD,UACuB,IAAlBtB,EAAO3T,OAAe,6BAAQ,cAACkV,GAAD,CAAMC,IAAKxB,EAAOlD,OAErD,cAAC2E,GAAD,CAAc7B,IAAKA,EAAKrW,QAAS,SAACsE,GAC9B,IAAM6T,EAAS7T,EAAE8T,MAEXC,EAAahC,EAAIiC,QAAQC,wBAKzBhG,GADI4F,GAHQE,EAAWG,KAAOC,OAAOC,cAI1BL,EAAWlU,MAC5B4S,EAAOrH,KAAKoC,MAAM6E,EAAWpE,KATjC,SAWI,cAACoG,GAAD,CAAcpG,KAAM,IAAMgB,GAAOoD,EAAW,OAEhD,cAAC,GAASzM,aAAV,CACIrG,UAAQ,EACR8B,QAAS,CACL,CACII,MAAO,SACP5B,MAAO,GACP7C,UAAW2V,GAAU1D,EAAM,EAC3BzN,SAAU,WACNiR,EAAOxD,EAAM,KAGrB,CACIxN,MAAO,SACP5B,MAAO,GACP7C,UAAW2V,GAAU1D,EAAMkD,EAAO3T,OAAS,EAC3CgD,SAAU,WACNiR,EAAOxD,EAAM,KAGrB,CACIxN,MAAQkR,EAAmB,OAAV,QACjBnR,SAAU,WACNoR,GAASD,KAGjB,CACIlR,MAAO,QACPD,SAAU,WACNiR,EAAO,WAQ/B,OACI,cAAC6B,GAAD,CAAQzU,MAvNF,IAuNgBqC,OAtNf,IAsNP,SACI,cAACqS,GAAD,UACI,cAAC,GAAD,CACI7X,YAAa,CACT,CAAEG,KAAM,QAASkB,QAAQ,EAAMV,KAAM+V,GACrC,CAAEvW,KAAM,OAAQkB,QAAsB,IAAdsU,EAAiBhV,KAAMmW,IAEnDlX,SAAUiW,EACVpV,eAAgB,SAACP,GAAD,OAAmB4V,EAAY5V,WAQxDkV,I,oCAAAA,MAETwC,GAAS3Y,IAAOC,IAAV,6UAOU,SAAAQ,GAAK,OAAIA,EAAM8F,OAAS,KACvB,SAAA9F,GAAK,OAAIA,EAAMyD,MAAQ,KACjC,SAAAzD,GAAK,OAAIA,EAAMyD,SACd,SAAAzD,GAAK,OAAIA,EAAM8F,UAOvBqS,GAAQ5Y,IAAOC,IAAV,iIAMLyX,GAAW1X,IAAOC,IAAV,kIAMR6X,GAAa9X,IAAOC,IAAV,uNAEHiW,GAAYjD,aACXiD,GAAYhD,eAOpBvJ,GAAQ3J,IAAOC,IAAV,iIAOLgY,GAAejY,IAAOC,IAAV,+NASZyY,GAAe1Y,IAAOC,IAAV,0OAKL,SAAAQ,GAAK,OAAIA,EAAM6R,QAMtByF,GAAO/X,IAAO6Y,IAAV,wHC5DKC,GApPU,WAAO,IAAD,EACCpZ,qBAAWC,IAA/BC,EADmB,EACnBA,MAAOC,EADY,EACZA,SADY,EAE+CH,qBAAWmK,IAA7EuJ,EAFmB,EAEnBA,SAAU1L,EAFS,EAETA,KAAMoC,EAFG,EAEHA,aAAcJ,EAFX,EAEWA,WAAYuB,EAFvB,EAEuBA,UAAWD,EAFlC,EAEkCA,SACvDjB,EAAOrC,EAAKL,KAHS,EAKH3G,mBAAkC,CAAE0C,MAAO,GAAIR,OAAQ,KALpD,mBAKpB1B,EALoB,KAKdyK,EALc,OAO6CrD,mBAAQ,WAAO,IAAD,EAC5EtD,EAAO0C,EAAKD,SAASzK,KAAI,SAAA8P,GAC3B,OAAQA,EAAGzF,KAA8BvE,QAEvCiW,GAAa,UAACrR,EAAKJ,cAAN,aAAC,EAAaD,MAA8BvE,KAC/D,MAAO,CACY,cAAfiW,EACe,eAAfA,EACA/T,EAAK+H,SAAS,gBACd/H,EAAK+H,SAAS,aACd/H,EAAK+H,SAAS,iBAEnB,CAACrF,IAnBuB,mBAOpBsR,EAPoB,KAOTC,EAPS,KAOEC,EAPF,KAOcC,EAPd,KAO4BC,EAP5B,KAqBrB9N,EAAc,WAChB,IAAK0N,EAAW,CACZ,IAAMlN,EAAQ/B,EAAK1C,KACnBsE,EAAQ,2BAAKzK,GAAN,IAAYkC,MAAO0I,EAAM5K,UAYxC,OARAL,qBAAU,WACW,MAAbkJ,EAAK1C,KACL4D,GAAU,GAEVK,MAEL,CAAC5D,EAAMsR,IAEF,qCACHA,EAAY,6BAAS,qCAClB,cAAC,GAAiBhN,UAAlB,CACIV,YAAaA,EACbF,gBAAiB,CAAClK,GAClBsK,YAAa,WACT,IAAMM,EAAmC,CACrC5K,KAAMA,EAAKkC,MACXiK,KAAMhB,GAAYgN,oBAAoBJ,IAE1CnN,EAAM5K,KAAOA,EAAKkC,MAClB2G,EAAK1C,KAAOyE,EAEZA,EAAMuB,KAAK3K,SAAQ,SAAA4W,GACf,IAAMlP,EAAUhD,GAASiD,WAAWiP,EAAK5R,GACnCL,EAAQ+C,EAAQ/C,KACtB,OAAQA,EAAKvE,MACT,IAAK,aAKL,IAAK,eACAuE,EAAKA,KAAsCiG,OAAO5K,SAAQ,SAAAoJ,GACvD1B,EAAQ3C,SAASjE,KAAK4D,GAASiD,WAAWyB,EAAO1B,OAI7D1C,EAAKD,SAASjE,KAAK4G,OAG3BqB,aAAc,WACV,IAAMK,EAAQ/B,EAAK1C,KACnByE,EAAM5K,KAAOA,EAAKkC,MAClB2G,EAAK1C,KAAOyE,KAGpB,cAAC,GAAS9B,YAAV,CACI5D,MAAM,QACNE,SAAU,mCACN,cAAC,GAAS2F,WAAV,CACInI,WAAW,OACXW,IACI,cAAC,GAASyH,UAAV,CACIhI,MAAO,IACPM,YAAawG,EACbrI,UAAWzB,EACXwC,aAAciI,EACd1I,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW0H,GAAaqB,cAAc/I,IAC/CK,UAAW,YAEf,CACIF,QAAS,SAACH,GAAD,OAAW0H,GAAasB,kBAAkBhJ,EAAO,EAAG,KAC7DK,UAAW,UAEf,CACIF,QAAS,SAACH,GAAD,OAAWiJ,GAAYC,eAAelJ,IAC/CK,UAAW,qBAS3C,cAAC,GAASuG,YAAV,CACI5D,MAAM,UACN/E,UAAW2J,EACX1E,SAAU,qCACN,cAAC,GAAS6G,OAAV,CACIxJ,UAAU,SACVc,IAAK,cAAC,GAAS2I,OAAV,CACDtH,MAAO,WACP5B,MAAO,IACP2C,MAAOqS,EACPrT,SAAU,WACN,IAAMwB,EAAQ0C,EAAK1C,KACnB,GAAI6R,EACA7R,EAAKgG,KAAKhC,OAAO,EAAG,GACpB3D,EAAKD,SAAS4D,OAAO,EAAG,GACxBvB,EAAa,eAAKpC,IAClBgC,QACG,CACH,IAAMQ,EAAgC,CAClCpH,KAAM,eACNuE,KAAM,CACF8C,KAAM,KAGd9C,EAAKgG,KAAKnI,QAAQgF,GAClB,IAAME,EAAUhD,GAASiD,WAAWH,EAASxC,GAC7CA,EAAKD,SAASvC,QAAQkF,GACtBN,EAAa,eAAKpC,IAClBgC,UAKhB,cAAC,GAASyD,OAAV,CACIxJ,UAAU,SACVtC,UAAU,EACVoD,IAAK,cAAC,GAAS2I,OAAV,CACDtH,MAAO,QACP5B,MAAO,IACP2C,MAAOsS,EACPtT,SAAU,WACN,GAAIsT,OACG,CACH,IAAMjP,EAAgC,CAClCpH,KAAM,YACNuE,KAAM,CACF8C,KAAM,KAGAJ,EAAK1C,KACdgG,KAAK7J,KAAK0G,GACf,IAAME,EAAUhD,GAASiD,WAAWH,EAASxC,GAC7CA,EAAKD,SAASjE,KAAK4G,GACnBN,EAAaM,GAEjBa,GAAU,QAItB,cAAC,GAASkC,OAAV,CACIxJ,UAAU,SACVc,IACI,cAAC,GAAS2I,OAAV,CACItH,MAAO,SACP5B,MAAO,IACP2C,MAAOuS,EACPvT,SAAU,WACN,IAAMwB,EAAQ0C,EAAK1C,KACnB,GAAI+R,EACAvL,QAAQC,IAAIzG,EAAKgG,KAAKhG,EAAKgG,KAAKxK,OAAS,GAAGC,MAC5CuE,EAAKgG,KAAKhC,OAAOhE,EAAKgG,KAAKxK,OAAS,EAAG,GACvC6E,EAAKD,SAAS4D,OAAO3D,EAAKD,SAAS5E,OAAS,EAAG,GAC/CiH,EAAa,eAAKpC,IAClBgC,QACG,CACH,IAAMQ,EAAgC,CAClCpH,KAAM,aACNuE,KAAM,CACFgG,KAAM,KAGdhG,EAAKgG,KAAK7J,KAAK0G,GACf,IAAME,EAAUhD,GAASiD,WAAWH,EAASxC,GAC7CA,EAAKD,SAASjE,KAAK4G,GACnBN,EAAa,eAAKpC,IAClBgC,eAO3BsP,EAAY,6BACT,cAAC,GAAShP,YAAV,CACI5D,MAAM,YACN/E,UAAW2J,EACX1E,SAAU,qCACL2S,EAAY,6BACT,cAAC,GAAShP,aAAV,CACIrG,UAAQ,EACR8B,QAAS,CACL,CACII,MAAO,UACPD,SAAU,WACNjG,EAAMR,OAAOG,OACT,cAAC,GAAkByM,UAAnB,CACItE,KAAMA,EACN0L,SAAUA,IAGlBvT,EAAS,eAAKD,SAMlC,cAAC,GAASqK,aAAV,CACIrG,UAAQ,EACR8B,QAAS,CACL,CACII,MAAO,SACPD,SAAU,WAAO,IAAD,MACR5E,GAAS,EACb,UAAAyG,EAAKJ,cAAL,SAAaG,SAAS/E,SAAQ,SAAC+J,EAAGnH,GAC1BmH,GAAK/E,IAAMzG,EAAQqE,MAE3B,UAAAoC,EAAKJ,cAAL,SAAaG,SAAS4D,OAAOpK,EAAO,IACnC,UAACyG,EAAKJ,cAAN,aAAC,EAAaD,MAA8BA,KAAsCuF,KAAKvB,OAAOpK,EAAO,GACtG6I,EAAapC,EAAKJ,QAClBoC,kBCoHrB6P,GAxVM,WAAO,IAAD,EAC6B7Z,qBAAWmK,IAAvDnC,EADe,EACfA,KAA+BsD,GADhB,EACTlB,aADS,EACKmB,UADL,EACgBD,UACjCjB,EAAOrC,EAAKL,KAFK,EAKiB3G,mBAAmB,IALpC,mBAKhB+M,EALgB,KAKF+L,EALE,OAOe9Y,mBAAsB,IAPrC,mBAOhB+Y,EAPgB,KAOHC,EAPG,KAUjBpO,EAAc,WAChB,IAAMQ,EAAQ/B,EAAK1C,KACnBmS,EAAgB1N,EAAM2B,aAAaxI,SACnCyU,EAAe5N,EAAM4B,OAAO1Q,KAAI,SAAA4Y,GAC5B,MAAO,CACH+D,UAAW,CAAEvW,MAAOwS,EAAE9S,KAAMF,OAAQ,IACpCQ,MAAO,CAAEA,MAAOwS,EAAExS,MAAOR,OAAQ,UAKvCgX,EAAetR,mBAAQ,WAAO,IAAD,EAE/B,QADmB,UAACZ,EAAKJ,cAAN,aAAC,EAAaD,MAA8BvE,MAE3D,IAAK,WAAa,IAAD,IACP+W,EAAqF,iBAAzE,UAACnS,EAAKJ,cAAN,iBAAC,EAAaA,cAAd,aAAC,EAAqBG,SAAS,GAAGJ,MAA8BvE,KAC5EgX,EAAiB,GAUvB,OATAA,EAAKtW,KAAK,SACVsW,EAAKtW,KAAK,SACVsW,EAAKtW,KAAK,UACVsW,EAAKtW,KAAK,UACVsW,EAAKtW,KAAK,SACNqW,IACAC,EAAKtW,KAAK,cACVsW,EAAKtW,KAAK,kBAEPsW,EAGf,MAAO,KACR,CAACpS,IAEJ7G,qBAAU,WACNyK,MACD,CAAC5D,IAGJ,IAAMyP,EAAe7O,mBAAQ,WACzB,IAWMyR,EAXgB,WAClB,OAAQhQ,EAAKjH,MACT,IAAK,cACL,IAAK,gBAAkB,IAAD,IAClB,iBAAO4E,EAAKJ,cAAZ,iBAAO,EAAaA,cAApB,aAAO,EAAqBG,SAAS,GAAGJ,KAE5C,IAAK,eAAiB,IAAD,UACjB,iBAAOK,EAAKJ,cAAZ,iBAAO,EAAaA,cAApB,iBAAO,EAAqBA,cAA5B,iBAAO,EAA6BA,cAApC,iBAAO,EAAqCA,cAA5C,aAAO,EAA6CG,SAAS,GAAGJ,MAIzD2S,GACnB,YAAkBzY,GAAdwY,GAA+C,iBAApBA,EAAWjX,KAAgC,IAE1E+K,QAAQC,IAAKiM,EAAW1S,KAAyC8C,MACzD4P,EAAW1S,KAAyC8C,KAAKnN,KAAI,SAAAqa,GAEjE,OADaA,EAAIhQ,KACLnG,WAEjB,CAACwG,IAEJ7G,qBAAU,WACN,IAAIoZ,EAAM,EAKV,GAJAxM,EAAa/K,SAAQ,SAAC2C,GACL,QAATA,GAAgB4U,OAGpBR,EAAY5W,OAASoX,EAAK,CAE1B,IADA,IAAMC,EAASD,EAAMR,EAAY5W,OACxByC,EAAI,EAAGA,EAAI4U,EAAQ5U,IAAKmU,EAAYjW,KAAK,CAC9CmW,UAAW,CAAEvW,MAAO,SAAUR,OAAQ,IACtCQ,MAAO,CAAEA,MAAO,GAAIR,OAAQ,MAEhC8W,EAAeD,EAAYxU,cACxB,GAAIwU,EAAY5W,OAASoX,EAAK,CAEjC,IADA,IAAME,EAASV,EAAY5W,OAASoX,EAC3B3U,EAAI,EAAGA,EAAI6U,EAAQ7U,IAAKmU,EAAYpO,OAAOoO,EAAY5W,OAASsX,EAAQA,GACjFT,EAAeD,EAAYxU,YAEhC,CAACwI,IAGJ,IAAM2M,EAAqB9R,mBAAQ,WAC/B,IAAI2R,EAAM,EAKV,OAJAxM,EAAa/K,SAAQ,SAAC2C,GACd,CAAC,IAAK,SAAS0H,SAAS1H,GAAO4U,IACjB,MAAT5U,GAAc4U,OAEpBA,IACR,CAACxM,IAGE4M,EAAc/R,mBAAQ,WACxB,OAAOmR,EAAYzc,KAAI,SAAC4Y,EAAGtQ,GAyDvB,OAAO,cAAC,GAAS2G,WAAV,CAEHnI,WAAU,cAASwB,GACnBZ,WAAY,GACZb,UAAiB,IAANyB,EAAU,EAAI,EACzBb,IAAK,qCACD,cAAC,GAAS8H,SAAV,CACI5J,UAAWiT,EAAE+D,UACbzV,MAAO,IACPM,YAAawG,EACbtH,aAAc,SAACf,GACX8W,EAAYnU,GAAGqU,UAAYhX,EACvBqI,IACAyO,EAAYnU,GAAGlC,MAAMA,MAA4B,WAApBT,EAAUS,MAAqB,IAAM,IAEtEsW,EAAeD,EAAYxU,UAE/BD,KAAMqH,GAAYiO,gBAAgBtd,KAAI,SAAAqI,GAClC,MAAO,CAAEjC,MAAOiC,EAAMF,UAAWE,QAzE5B,WACjB,IAAMvC,EAAO8S,EAAE+D,UAAUvW,MACzB,GAAa,WAATN,EACA,OACI,cAAC,GAASoJ,UAAV,CACIpH,WAAY,EACZnC,UAAWiT,EAAExS,MACbuB,UAAQ,EACRH,YAAawG,EACb9G,MAAO,IACPR,aAAc,SAACf,GACX8W,EAAYnU,GAAGlC,MAAQT,EACvB+W,EAAeD,EAAYxU,YAWvC,IAAID,EAAiB,GAQrB,MAPa,aAATlC,EACAkC,EAAOmS,EACS,UAATrU,EACPkC,EAAO4U,EACS,aAAT9W,IACPkC,EAAOkR,GAAYzC,iBAAiBzW,KAAI,SAAAqI,GAAI,OAAIA,EAAKnE,SAGrD,cAAC,GAASqL,SAAV,CACIzH,WAAY,EACZnC,UAAWiT,EAAExS,MACbc,MAAO,IACPM,YAAawG,EACbtH,aAAc,SAACf,GACX8W,EAAYnU,GAAGlC,MAAQT,EACvB+W,EAAeD,EAAYxU,UAE/BD,KAAMA,EAAKhI,KAAI,SAAAqI,GACX,MAAO,CAAEjC,MAAOiC,EAAMF,UAAWE,MAErCN,WAAS,EACT9B,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW0H,GAAaqB,cAAc/I,IAC/CK,UAAW,eA4B1B8W,OApBAjV,QAwBd,CAACmU,EAAazO,IAmBXwP,EAAY,kBAAM/M,EAAa5K,OAAS,GAAK,CAAC,MAAO,KAAKkK,SAASU,EAAaA,EAAa5K,OAAS,KACtG4X,EAAqC,IAAvBL,GAA4BX,EAAY5W,OAAS,GACjE,CAAC,MAAO,KAAKkK,SAASU,EAAaA,EAAa5K,OAAS,IACvD6X,GAAgBD,QAA+ElZ,GAAhEkY,EAAY5Q,MAAK,SAAA8R,GAAO,OAAIA,EAAQvX,MAAMR,OAAOC,OAAS,KAE/F,OAAQ,qCACJ,cAAC,GAAiBmJ,UAAlB,CACIV,YAAaA,EACbF,gBAAiB,GACjBI,YAAa,aACbD,UAAkC,IAAvB6O,IAA6BM,EACxCjP,aAAc,WACV,IAAMpE,EAAO0C,EAAK1C,KAClBA,EAAKoG,aAAeA,EAAaxI,QACjCoC,EAAKqG,OAAS+L,EAAYzc,KAAI,SAAA2d,GAC1B,MAAO,CACH7X,KAAM6X,EAAQhB,UAAUvW,MACxBA,MAAOuX,EAAQvX,MAAMA,aAKrC,cAAC,GAAS4G,YAAV,CACI5D,MAAM,UACNE,SAAU,qCACN,cAAC,GAAS2D,aAAV,CACIrG,UAAQ,EACR8B,QAAS,CACL,CACII,MAAO,IACP5B,MAAO,GACP7C,SAAU2J,GAAYwP,IACtB3U,SAAU,WACN4H,EAAajK,KAAK,KAClBgW,EAAgB/L,EAAaxI,WAGrC,CACIa,MAAO,IACP5B,MAAO,GACP7C,SAAU2J,GAAYwP,IACtB3U,SAAU,WACN4H,EAAajK,KAAK,KAClBgW,EAAgB/L,EAAaxI,WAGrC,CACIa,MAAO,IACP5B,MAAO,GACP7C,SAAU2J,GAAYwP,IACtB3U,SAAU,WACN4H,EAAajK,KAAK,KAClBgW,EAAgB/L,EAAaxI,WAGrC,CACIa,MAAO,IACP5B,MAAO,GACP7C,SAAU2J,GAAYwP,IACtB3U,SAAU,WACN4H,EAAajK,KAAK,KAClBgW,EAAgB/L,EAAaxI,WAGrC,CACIa,MAAO,IACP5B,MAAO,GACP7C,SAAU2J,GAAYwP,IACtB3U,SAAU,WACN4H,EAAajK,KAAK,KAClBgW,EAAgB/L,EAAaxI,WAGrC,CACIa,MAAO,IACP5B,MAAO,GACP7C,SAAU2J,IAAawP,IACvB3U,SAAU,WACN4H,EAAajK,KAAK,KAClBgW,EAAgB/L,EAAaxI,WAGrC,CACIa,MAAO,IACP5B,MAAO,GACP7C,SAAU2J,GAAYwP,KAAeJ,EAAqB,EAC1DvU,SAAU,WACN4H,EAAajK,KAAK,KAClBgW,EAAgB/L,EAAaxI,WAGrC,CACIa,MAAO,MACP5B,MAAO,GACP7C,SAAU2J,GAAYyC,EAAa5K,OAAS,EAC5CgD,SAAU,WACN4H,EAAapC,OAAOoC,EAAa5K,OAAS,EAAG,GAC7C2W,EAAgB/L,EAAaxI,cAK7C,cAAC,GAASgF,aAAV,CACIrG,UAAQ,EACR8B,QAAS,CACL,CACII,MAAO,MACP5B,MAAO,GACP7C,SAAU2J,IAAawP,IACvB3U,SAAU,WACN4H,EAAajK,KAAK,OAClBgW,EAAgB/L,EAAaxI,WAGrC,CACIa,MAAO,OACP5B,MAAO,GACP7C,SAAU2J,IAAawP,IACvB3U,SAAU,WACN4H,EAAajK,KAAK,SAClBgW,EAAgB/L,EAAaxI,WAGrC,CACIa,MAAO,QACPzE,SAAU2J,GAAYyC,EAAa5K,OAAS,EAC5CqB,MAAO,GACP2B,SAAU,WACN2T,EAAgB,SAKhC,cAACoB,GAAD,CACIC,WAAYJ,EADhB,SAtJU,WAClB,IAAIR,EAAM,EACJ5R,EAAyB,GAY/B,OAXAoF,EAAa/K,SAAQ,SAAC2C,GACdgD,EAAQxF,OAAS,GACjBwF,EAAQ7E,KAAK,uCAAW6E,EAAQxF,SAEvB,QAATwC,GACAgD,EAAQ7E,KAAK,cAACsX,GAAD,0BAAsCb,EAAtC,MAAW5R,EAAQxF,SAChCoX,KAEA5R,EAAQ7E,KAAK,cAACuX,GAAD,UAA4B1V,GAAjBgD,EAAQxF,YAGjCwF,EA0IG2S,KACDX,WAQXO,GAAW5a,IAAOC,IAAV,oaAKRK,GAAOyG,kBAOP,SAAAtG,GAAK,OAAKA,EAAMoa,UAAiBxa,YAAxB,wEAAmB,MAS5Bya,GAAO9a,IAAOib,KAAV,mDAGJF,GAAO/a,IAAOib,KAAV,qDC3SKC,GA/EY,WAAO,IAAD,EACmCxb,qBAAWmK,IAAnEnC,EADqB,EACrBA,KAAMoC,EADe,EACfA,aAAcJ,EADC,EACDA,WAAuBsB,GADtB,EACWC,UADX,EACsBD,UAC7CsO,EAAO5R,EAAKL,KAA8BA,KAI1C8T,EAAW7S,mBAAQ,WACrB,IAAM8S,EAAU1T,EAAKD,SAAS5E,OAAS,EACvC,MAA0G,UAAjG6E,EAAKD,SAAS2T,GAAS/T,KAA8BA,KAAmCnG,OAClG,CAACwG,IAEJ,OAAQ,mCACJ,cAAC,GAASsC,YAAV,CACI5D,MAAM,UACN/E,UAAW2J,EACX1E,SAAU,qCACN,cAAC,GAAS6G,OAAV,CACIxJ,UAAU,SACVc,IACI,cAAC,GAAS2I,OAAV,CACItH,MAAO,gBACP5B,MAAO,IACP7C,UAAW8Z,EACXtU,MAAOsU,EACPtV,SAAU,WACN,IAAMuV,EAAU1T,EAAKD,SAAS5E,OAAS,EACvC6E,EAAKD,SAAS4D,OAAO+P,EAAS,GAE1B,IAAMrR,EAAOsC,GAAYmB,gBAAgB,gBACrC,CAAEtM,KAAM,QAASuM,aAAc,CAAC,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,SAAUM,MAAO,QAC9EkW,EAAIhM,OAAO9J,KAAKuG,GAChBrC,EAAKD,SAASjE,KAAK4D,GAASiD,WAAWN,EAAMrC,IAG7C,IAAMqC,EAAOsC,GAAYmB,gBAAgB,gBACrC,CAAEtM,KAAM,QAASuM,aAAc,CAAC,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,SAAUM,MAAO,UAC9EkW,EAAIhM,OAAO9J,KAAKuG,GAChBrC,EAAKD,SAASjE,KAAK4D,GAASiD,WAAWN,EAAMrC,IAEjDgC,IACAI,EAAa,eAAKpC,SAKlC,cAAC,GAASyF,OAAV,CACIxJ,UAAU,SACVc,IACI,cAAC,GAAS2I,OAAV,CACItH,MAAO,mBACP5B,MAAO,IACP7C,SAAU8Z,EACVtU,OAAQsU,EACRtV,SAAU,WACN,IAAMuV,EAAU1T,EAAKD,SAAS5E,OAAS,EACvC6E,EAAKD,SAAS4D,OAAO+P,EAAS,GAE1B,IAAMrR,EAAOsC,GAAYmB,gBAAgB,gBACrC,CAAEtM,KAAM,SAAUuM,aAAc,CAAC,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,SAAUM,MAAO,QAC/EkW,EAAIhM,OAAO9J,KAAKuG,GAChBrC,EAAKD,SAASjE,KAAK4D,GAASiD,WAAWN,EAAMrC,IAG7C,IAAMqC,EAAOsC,GAAYmB,gBAAgB,gBACrC,CAAEtM,KAAM,SAAUuM,aAAc,CAAC,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,SAAUM,MAAO,SAC/EkW,EAAIhM,OAAO9J,KAAKuG,GAChBrC,EAAKD,SAASjE,KAAK4D,GAASiD,WAAWN,EAAMrC,IAEjDgC,IACAI,EAAa,eAAKpC,iBC/BnC2T,GAtCU,WAAO,IAAD,EACqC3b,qBAAWmK,IAAnEnC,EADmB,EACnBA,KAA2CsD,GADxB,EACblB,aADa,EACCJ,WADD,EACauB,UADb,EACwBD,UACtCtD,EAAKL,KAQlB,OAAQ,mCACJ,cAAC,GAAS2C,YAAV,CACI5D,MAAM,UACN/E,UAAW2J,EACX1E,SAAU,mCACN,cAAC,GAAS6G,OAAV,CACIxJ,UAAU,SACVc,IACI,cAAC,GAAS2I,OAAV,CACItH,MAAO,kBACP5B,MAAO,IACP7C,UAAU,EACVwF,OAAO,EACPhB,SAAU,wBCKvByV,GA9Be,WAAO,IAAD,EACW5b,qBAAWmK,IAA9CnC,EADwB,EACxBA,KAAMoC,EADkB,EAClBA,aAAcJ,EADI,EACJA,WACtB4P,EAAO5R,EAAKL,KAA8BA,KAEhD,OAAQ,mCACJ,cAAC,GAAS2C,YAAV,CACI5D,MAAM,YACNE,SAAU,cAAC,GAAS2D,aAAV,CACNrG,UAAQ,EACR8B,QAAS,CACL,CACII,MAAO,gBACPD,SAAU,WACN,IAAMkE,EAA6B,CAC/BjH,KAAM,YACNuE,KAAM,MAEViS,EAAIvL,SAASvK,KAAKuG,GAClB,IAAMK,EAAUhD,GAASiD,WAAWN,EAAMrC,GAC1CA,EAAKD,SAASjE,KAAK4G,GACnBN,EAAaM,GACbV,cCeb6R,GAlCU,WAAO,IAAD,EACqC7b,qBAAWmK,IAAnEnC,EADmB,EACnBA,KAA2CsD,GADxB,EACblB,aADa,EACCJ,WADD,EACauB,UADb,EACwBD,UACtCtD,EAAKL,KASlB,OAAQ,mCACJ,cAAC,GAAS2C,YAAV,CACI5D,MAAM,UACN/E,UAAW2J,EACX1E,SAAU,mCACN,cAAC,GAAS6G,OAAV,CACIxJ,UAAU,SACVc,IACI,cAAC,GAAS2I,OAAV,CACItH,MAAO,mBACP5B,MAAO,IACP7C,UAAU,EACVwF,OAAO,EACPhB,SAAU,wBCUvB2V,GAlCY,WAAO,IAAD,EACmC9b,qBAAWmK,IAAnEnC,EADqB,EACrBA,KAA2CsD,GADtB,EACflB,aADe,EACDJ,WADC,EACWuB,UADX,EACsBD,UACtCtD,EAAKL,KASlB,OAAQ,mCACJ,cAAC,GAAS2C,YAAV,CACI5D,MAAM,UACN/E,UAAW2J,EACX1E,SAAU,mCACN,cAAC,GAAS6G,OAAV,CACIxJ,UAAU,SACVc,IACI,cAAC,GAAS2I,OAAV,CACItH,MAAO,iBACP5B,MAAO,IACP7C,UAAU,EACVwF,OAAO,EACPhB,SAAU,wBCsRvB4V,GA9SiB,WAAO,IAAD,EACwC/b,qBAAWmK,IAA7EuJ,EAD0B,EAC1BA,SAAU1L,EADgB,EAChBA,KAAMoC,EADU,EACVA,aAAcJ,EADJ,EACIA,WAAYuB,EADhB,EACgBA,UAAWD,EAD3B,EAC2BA,SACvDjB,EAAOrC,EAAKL,KAFgB,EAIA3G,mBAAkC,CAAE0C,MAAO,GAAIR,OAAQ,KAJvD,mBAI3B0R,EAJ2B,KAIhBoH,EAJgB,OAKIhb,mBAAkC,CAAE0C,MAAO,GAAIR,OAAQ,KAL3D,mBAK3B4R,EAL2B,KAKdmH,EALc,OAMNjb,mBAAkC,CAAE0C,MAAO,GAAIR,OAAQ,KANjD,mBAM3BgS,EAN2B,KAMnBgH,EANmB,OAQTtT,mBAAQ,WAI7B,MAAO,CAHMZ,EAAKD,SAASzK,KAAI,SAAA8P,GAC3B,OAAQA,EAAGzF,KAA8BvE,QAGpCiK,SAAS,kBAEnB,CAACrF,EAAMA,EAAKD,SAAS5E,SAPjBgZ,EAR2B,oBAiB5BvQ,EAAc,WAChB,IAAMQ,EAAQ/B,EAAK1C,KACnBqU,EAAa,2BAAKpH,GAAN,IAAiBlR,MAAO0I,EAAMwI,aAC1CqH,EAAe,2BAAKnH,GAAN,IAAmBpR,MAAO0I,EAAM0I,eAC9CoH,EAAU,2BAAKhH,GAAN,IAAcxR,MAAO0I,EAAM8I,WAGxC/T,qBAAU,WACW,MAAbkJ,EAAK1C,KACL4D,GAAU,GAEVK,MAEL,CAAC5D,IAEJ,IAAMoU,EAAiC,WAAtBtH,EAAYpR,MAEvB2Y,EAAczT,mBAAQ,WAGxB,OAFiB8K,EAAS/L,KACEoN,WAAWpN,KACrBuF,KAAK5P,KAAI,SAAA+M,GACvB,OAAQA,EAAK1C,KAAmCnG,UAErD,CAACwG,IAqBEsU,EAAgB,SAAClQ,GAEnB,IAAMmQ,EAAmC,aAAvBnQ,EAAMuB,KAAK,GAAGvK,KAAsB,EAAI,EACpDoZ,EAAUpQ,EAAMuB,KAAK4O,GAAW5U,KAChC8U,EAAWzU,EAAKD,SAASwU,GAC/BC,EAAQ5O,OAAS,GACjB6O,EAAS1U,SAAW,GAzBC,WACrB,IAAKqU,EAAU,CACX,IAEMM,EAFWhJ,EAAS/L,KACEoN,WAAWpN,KACTuF,KAAK/D,MAAK,SAAAkB,GACpC,OAAQA,EAAK1C,KAAmCnG,OAAS0T,EAAOxR,SAEpE,QAAkB7B,GAAd6a,EAAyB,CACzB,IAAMhF,EAAWgF,EAAW/U,KAAmCgG,KAAK,GACpE,GAAqB,iBAAjB+J,EAAQtU,KACR,OAAQsU,EAAQ/P,KAAyC8C,KAAKnN,KAAI,SAAAqa,GAC9D,OAAQA,EAAIhQ,KAAsCnG,SAKlE,MAAO,GAUPmb,GAAmB3Z,SAAQ,SAAAoJ,GACvB,IAAMyB,EAAYlB,GAAYmB,gBAAgB,YAC1C,CAAEtM,KAAM4K,EAAO2B,aAAc,CAAC,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,SAAUM,MAAO,QAE5E8Y,EAAQ5O,OAAO9J,KAAK+J,GACpB4O,EAAS1U,SAASjE,KAAK4D,GAASiD,WAAWkD,EAAW4O,QAIxDG,EAAoB,SAACxQ,GACvBA,EAAMuB,KAAO,GACb3F,EAAKD,SAAW,GAChBqE,EAAMuB,KAAK7J,KAAK,CACZV,KAAM,WACNuE,KAAM,CACFiG,OAAQ,MAGZwO,GACAhQ,EAAMuB,KAAK7J,KAAK,CACZV,KAAM,qBACNuE,KAAM,CACFgG,KAAMhB,GAAYgN,qBAAoB,MAIlDtP,EAAK1C,KAAOyE,EAEZA,EAAMuB,KAAK3K,SAAQ,SAAA4W,GACf,IAAMlP,EAAUhD,GAASiD,WAAWiP,EAAK5R,GACnCL,EAAQ+C,EAAQ/C,KACtB,OAAQA,EAAKvE,MACT,IAAK,qBACAuE,EAAKA,KAA4CgG,KAAK3K,SAAQ,SAAA4W,GAC3D,IAAMiD,EAAcnV,GAASiD,WAAWiP,EAAKlP,GAG7C,OAFAA,EAAQ3C,SAASjE,KAAK+Y,GAEdjD,EAAIxW,MACR,IAAK,aAKL,IAAK,eACAwW,EAAIjS,KAAsCiG,OAAO5K,SAAQ,SAAAoJ,GACtDyQ,EAAY9U,SAASjE,KAAK4D,GAASiD,WAAWyB,EAAOyQ,WAO7E7U,EAAKD,SAASjE,KAAK4G,MAEvB4R,EAAclQ,IAGlB,OAAQ,qCACJ,cAAC,GAAiBE,UAAlB,CACIV,YAAaA,EACbF,gBAAiB,CAACkJ,EAAWE,EAAaI,GAC1CpJ,YAAa,WACT,IAAMM,EAA0C,CAC5CwI,UAAWA,EAAUlR,MACrBoR,YAAaA,EAAYpR,MACzBwR,OAAQA,EAAOxR,MACfiK,KAAM,IAEViP,EAAkBxQ,GAClBpC,KAEJ+B,aAAc,WACV,IAAMK,EAAQ/B,EAAK1C,KACbmV,EAAW1Q,EAAM0I,cAAgBA,EAAYpR,OAAS0I,EAAM8I,SAAWA,EAAOxR,MACpF0I,EAAMwI,UAAYA,EAAUlR,MAC5B0I,EAAM0I,YAAcA,EAAYpR,MAChC0I,EAAM8I,OAASA,EAAOxR,MACtB2G,EAAK1C,KAAOyE,EAER0Q,GACAF,EAAkBxQ,GAEtBpC,OAGR,cAAC,GAASM,YAAV,CACI5D,MAAM,QACNE,SAAU,qCACN,cAAC,GAAS2F,WAAV,CACInI,WAAW,YACXW,IACI,cAAC,GAAS8H,SAAV,CACIzH,WAAY,EACZnC,UAAW2R,EACXpQ,MAAO,IACPM,YAAawG,EACbtH,aAAcgY,EACd1W,KAAMqH,GAAYoQ,eAAezf,KAAI,SAAAqI,GACjC,MAAO,CAAEjC,MAAOiC,EAAMF,UAAWE,MAErCN,WAAS,EACT9B,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW0H,GAAaqB,cAAc/I,IAC/CK,UAAW,iBAM/B,cAAC,GAASwI,WAAV,CACInI,WAAW,UACXW,IACI,cAAC,GAAS8H,SAAV,CACIzH,WAAY,EACZnC,UAAW6R,EACXtQ,MAAO,IACPM,YAAawG,EACbtH,aAAc,SAACf,GAEa,WAApBA,EAAUS,OACVwY,EAAU,2BAAKhH,GAAN,IAAcxR,MAAO,MAElCuY,EAAehZ,IAEnBqC,KAAMqH,GAAYqQ,aAAa1f,KAAI,SAAAqI,GAC/B,MAAO,CAAEjC,MAAOiC,EAAMF,UAAWE,MAErCN,WAAS,EACT9B,UAAW,CACP,CACIM,QAAS,SAACH,GAAD,OAAW0H,GAAaqB,cAAc/I,IAC/CK,UAAW,iBAM/B,cAAC,GAASwI,WAAV,CACInI,WAAW,SACXzC,SAAgC,WAAtBmT,EAAYpR,MACtBqB,IACI,cAAC,GAAS8H,SAAV,CACIzH,WAAY,EACZnC,UAAWiS,EACX1Q,MAAO,IACPM,YAAawG,EACbtH,aAAckY,EACd5W,KAAM+W,EAAY/e,KAAI,SAAAqI,GAClB,MAAO,CAAEjC,MAAOiC,EAAMF,UAAWE,MAErCN,WAAS,EACT7B,WAAY,CAACsR,GACbvR,UAAW,CACP,CACIM,QAAS,SAACH,GACN,MAA6B,WAAtBoR,EAAYpR,OAAsB0H,GAAaqB,cAAc/I,IAExEK,UAAW,sBAQvC,cAAC,GAASuG,YAAV,CACI5D,MAAM,UACN/E,UAAW2J,EACX1E,SAAU,mCACN,cAAC,GAAS6G,OAAV,CACIxJ,UAAU,SACVc,IAAK,cAAC,GAAS2I,OAAV,CACDtH,MAAO,UACP5B,MAAO,IACP2C,MAAOgV,EACPhW,SAAU,WACN,IAAMwB,EAAQ0C,EAAK1C,KACnB,GAAIwU,EACAxU,EAAKgG,KAAKhC,OAAO,EAAG,GACpB3D,EAAKD,SAAS4D,OAAO,EAAG,GACxBvB,EAAa,eAAKpC,IAClBgC,QACG,CACH,IAAMQ,EAAgC,CAClCpH,KAAM,cACNuE,KAAM,CACFiG,OAAQ,KAIhBjG,EAAKgG,KAAKnI,QAAQgF,GAClB,IAAME,EAAUhD,GAASiD,WAAWH,EAASxC,GAC7CA,EAAKD,SAASvC,QAAQkF,GAEtB,IAAMuS,EAAgBtQ,GAAYmB,gBAAgB,eAC9C,CAAEtM,KAAM,aAAcuM,aAAc,CAAC,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,SAAUM,MAAO,QAClF8G,EAAQ7C,KAAsCiG,OAAO9J,KAAKmZ,GAC3DvS,EAAQ3C,SAASjE,KAAK4D,GAASiD,WAAWsS,EAAevS,IAEzDN,EAAa,eAAKpC,IAClBgC,cAOxB,cAAC,GAASM,YAAV,CACI5D,MAAM,YACNE,SAAU,mCACN,cAAC,GAAS2D,aAAV,CACIrG,UAAQ,EACR8B,QAAS,CACL,CACII,MAAO,SACPD,SAAU,WAAO,IAAD,MACR5E,GAAS,EACb,UAAAyG,EAAKJ,cAAL,SAAaG,SAAS/E,SAAQ,SAAC+J,EAAGnH,GAC1BmH,GAAK/E,IAAMzG,EAAQqE,MAE3B,UAAAoC,EAAKJ,cAAL,SAAaG,SAAS4D,OAAOpK,EAAO,IACnC,UAACyG,EAAKJ,cAAN,aAAC,EAAaD,MAA8BA,KAA+C0G,SAAS1C,OAAOpK,EAAO,GACnH6I,EAAapC,EAAKJ,QAClBoC,iBC3NjBkT,GA3EY,WAAO,IAAD,EACwBld,qBAAWmK,IAAxDuJ,EADqB,EACrBA,SAAU1L,EADW,EACXA,KAAoBgC,GADT,EACLI,aADK,EACSJ,YAChCK,EAAOrC,EAAKL,KA2BZoJ,EAAS,WAKX,IAJA,IAAMoM,EA1Be,WAAiB,IAAD,EAC/BzI,GAAY,UAAC1M,EAAKJ,cAAN,aAAC,EAAaD,MAA8BA,KAE1D0S,EAA0C,KAC9C,GAF2C,WAA1B3F,EAAUI,YASpB,CAAC,IAAD,IACHuF,EAAU,UAAIrS,EAAKJ,cAAT,aAAI,EAAaG,UAAS,UAAAC,EAAKJ,cAAL,eAAaG,SAAS5E,QAAS,GAAGwE,SAR3D,CACX,IAEM+U,EAFWhJ,EAAS/L,KACEoN,WAAWpN,KACTuF,KAAK/D,MAAK,SAAAkB,GACpC,OAAQA,EAAK1C,KAAmCnG,OAASkT,EAAUQ,eAErDrT,GAAd6a,IAAyBrC,EAAaqC,GAI9C,GAAkB,MAAdrC,EAAoB,CACpB,IAAM3C,EAAW2C,EAAW1S,KAAmCgG,KAAK,GACpE,GAAqB,iBAAjB+J,EAAQtU,KACR,OAAQsU,EAAQ/P,KAAyC8C,KAAKnN,KAAI,SAAAqa,GAC9D,OAAQA,EAAIhQ,KAAsCnG,QAI9D,MAAO,GAIemb,GAChBS,EAAUpV,EAAKD,SAAS5E,OACxByK,EAAUvD,EAAK1C,KAAsCiG,OAElDhI,EAAIwX,EAAU,EAAGxX,GAAK,EAAGA,IAAK,CACnC,IAAMpE,EAAQoM,EAAOhI,GAAG+B,KAAmCnG,KACtD2b,EAAc9P,SAAS7L,KACxBwG,EAAKD,SAAS4D,OAAO/F,EAAG,GACxBgI,EAAOjC,OAAO/F,EAAG,IAIzB,IAAMyX,EAAezP,EAAOtQ,KAAI,SAAA8O,GAC5B,OAAQA,EAAMzE,KAAmCnG,QAErD2b,EAAcna,SAAQ,SAAAoJ,GAClB,IAAKiR,EAAahQ,SAASjB,GAAQ,CAC/B,IAAMyB,EAAYlB,GAAYmB,gBAAgB,YAC1C,CAAEtM,KAAM4K,EAAO2B,aAAc,CAAC,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,SAAUM,MAAO,QAE5EkK,EAAO9J,KAAK+J,GACZ7F,EAAKD,SAASjE,KAAK4D,GAASiD,WAAWkD,EAAW7F,SAK9D,OAAQ,mCACJ,cAAC,GAASsC,YAAV,CACI5D,MAAM,YACNE,SAAU,cAAC,GAAS2D,aAAV,CACNrG,UAAQ,EACR8B,QAAS,CACL,CACII,MAAO,gBACPD,SAAU,WACN4K,IACA/G,e,YC9BG,iBAAG,SAACY,GAE3B,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAClDyC,SAASzC,EAAI+H,UAAU,EAAG,KAAOvH,GAAaL,mBAAmBH,EAFxD,0CAiCI,WAAG,CAAC,MAAO,QAAS,SAIb,kBAAG,CAAC,SAAU,WAAY,WAAY,SAqEtC,kBAAG,SAACxH,EAAgBka,GAC5C,MAAO,CAAEla,KAAMA,EAAMuE,KAAM2V,IA5GxB,IA8GMC,EAAmB,sBAAG,SAACna,EAAgBka,GAChD,OAAOA,EAAchgB,KAAI,SAAAqK,GACrB,MAAO,CAAEvE,KAAMA,EAAMuE,KAAMA,OAoF7B6V,GAhFyB,qBAAG,WAC9B,OAAOD,EAAoB,cAAe,CACtC,CAAE/b,KAAM,SAAUuM,aAAc,CAAC,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,SAAUM,MAAO,QAC3E,CAAElC,KAAM,UAAWuM,aAAc,CAAC,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,SAAUM,MAAO,SAC5E,CAAElC,KAAM,UAAWuM,aAAc,CAAC,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,SAAUM,MAAO,SAC5E,CAAElC,KAAM,UAAWuM,aAAc,CAAC,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,SAAUM,MAAO,SAC5E,CAAElC,KAAM,UAAWuM,aAAc,CAAC,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,SAAUM,MAAO,YAInD,uBAAG,SAAC6V,GACjC,IAAMjU,EAAwB,GAQ9B,OAPAA,EAAKxB,KAAK,CAAEtC,KAAM,QAASuM,aAAc,CAAC,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,SAAUM,MAAO,SAC/E6V,IACDjU,EAAKxB,KAAK,CAAEtC,KAAM,QAASuM,aAAc,CAAC,MAAO,IAAK,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,WAAYM,MAAO,gBAAkB,CAAEN,KAAM,SAAUM,MAAO,QAC7I4B,EAAKxB,KAAK,CAAEtC,KAAM,QAASuM,aAAc,CAAC,MAAO,IAAK,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,WAAYM,MAAO,iBAAmB,CAAEN,KAAM,SAAUM,MAAO,UAElJ4B,EAAKxB,KAAK,CAAEtC,KAAM,QAASuM,aAAc,CAAC,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,SAAUM,MAAO,QACpF4B,EAAKxB,KAAK,CAAEtC,KAAM,QAASuM,aAAc,CAAC,OAAQC,OAAQ,CAAC,CAAE5K,KAAM,SAAUM,MAAO,UAC7E6Z,EAAoB,gBAAiBjY,IAGhB,sBAAG,SAACiU,GAChC,MAAO,CACH,CACInW,KAAM,aACNuE,KAAM,CACFiG,OAAQjB,GAAY8Q,uBAG5B,CACIra,KAAM,eACNuE,KAAM,CACFiG,OAAQjB,GAAY+Q,qBAAqBnE,OA0B9B,iBAAG,WAC1B,MAAO,CACHnW,KAAM,OACNuE,KAAM,CACFgW,QAAS,CACLva,KAAM,aACNuE,KAAM,CACFuF,KAAM,KAGd6H,WAAY,CACR3R,KAAM,cACNuE,KAAM,CACFuF,KAAM,QAQL,WACf0Q,EAAY,UACZC,EAAa,UACbC,EAAa,UAGI,aAAG,SAAC9V,EAA4B+V,GACnD,IAAM1T,EAAOrC,EAAKL,KAClB,OAAQ0C,EAAKjH,MACT,IAAK,OACD,OAAO,cAAC4a,GAAD,CAAWC,gBAXX,UAWA,mBAEX,IAAK,aACD,OAAO,cAACD,GAAD,CAAWC,gBAAiBT,EAA5B,4BAEX,IAAK,cACD,OAAO,cAACQ,GAAD,CAAWC,gBAAiBT,EAA5B,6BAEX,IAAK,aACD,OAAO,cAACQ,GAAD,CAAWC,gBAAiBL,EAA5B,oBAEX,IAAK,aACD,OAAO,cAACI,GAAD,CAAWC,gBAAiBL,EAA5B,oBAEX,IAAK,eACD,OAAO,cAACI,GAAD,CAAWC,gBAAiBL,EAA5B,sBAEX,IAAK,cACD,IAAIpc,EAAO,MACX,GAAiB,MAAb6I,EAAK1C,KAELnG,EADa6I,EAAK1C,KACNnG,KAEhB,OAAO,qCACH,cAACwc,GAAD,CAAWC,gBAAiBH,EAA5B,oBACA,cAACI,GAAD,UAAiB1c,OAGzB,IAAK,eACD,IAAIA,EAAO,MACX,GAAiB,MAAb6I,EAAK1C,KAELnG,EADa6I,EAAK1C,KACNnG,KAEhB,OAAO,qCACH,cAACwc,GAAD,CAAWC,gBAAiBH,EAA5B,qBACA,cAACI,GAAD,UAAiB1c,OAGzB,IAAK,qBACD,OAAO,cAACwc,GAAD,CAAWC,gBAAiBL,EAA5B,qBAEX,IAAK,eACD,OAAO,cAACI,GAAD,CAAWC,gBAAiBJ,EAA5B,8BAEX,IAAK,eACD,OAAO,cAACG,GAAD,CAAWC,gBAAiBL,EAA5B,sBAEX,IAAK,cACD,OAAO,cAACI,GAAD,CAAWC,gBAAiBJ,EAA5B,6BAEX,IAAK,YACD,IAAIM,EAAY,uCAChB,GAAiB,MAAb9T,EAAK1C,KAAc,CACnB,IAAMA,EAAO0C,EAAK1C,KAClBwW,EAAY,yCAAUxW,EAAKiN,UAAf,YAA4BjN,EAAKmN,eACpB,WAArBnN,EAAKmN,cACLqJ,EAAY,2CAAUxW,EAAKiN,UAAf,YAA4BjN,EAAKmN,aAAjC,KAAiD,cAACsJ,GAAD,UAASzW,EAAKuN,aAGnF,OAAQ,qCACJ,cAAC8I,GAAD,CAAWC,gBAAiBH,EAA5B,4BACcjc,GAAbsc,EAAyB,6BAAQ,cAACD,GAAD,UAAiBC,OAG3D,IAAK,aACD,OAAO,cAACH,GAAD,CAAWC,gBAAiBL,EAA5B,oBAEX,IAAK,eACD,OAAO,cAACI,GAAD,CAAWC,gBAAiBL,EAA5B,sBAEX,IAAK,cACL,IAAK,YACL,IAAK,eACL,IAAK,cACL,IAAK,gBACL,IAAK,gBACD,IAAMjW,EAAO0C,EAAK1C,KACdpJ,EAAwB,GACxB+X,EAAS,EAWb,OAVA3O,EAAKoG,aAAa/K,SAAQ,SAACiT,EAASrQ,GAChC,IAAIgF,EAAM,cAACyT,GAAD,UAAqBpI,GAAJrQ,GAC3B,GAAgB,QAAZqQ,EAAmB,CACnB,IAAMC,EAAIvO,EAAKqG,OAAOsI,GACG1L,EAAV,WAAXsL,EAAE9S,KAAyB,cAACgb,GAAD,sBAAuBlI,EAAExS,MAAzB,MAAakC,GACjC,+BAAesQ,EAAExS,OAANkC,GACtB0Q,IAEJ/X,EAAOuF,KAAK8G,MAET,qCACH,eAACoT,GAAD,CAAWC,gBAjGP,UAiGJ,kBAA8C,eAACK,GAAD,mBAAiB3W,EAAKnG,KAAtB,UAC9C,cAAC0c,GAAD,UAAiB3f,OAGzB,IAAK,gBACD,IAAI4f,EAAY,uCAChB,GAAiB,MAAb9T,EAAK1C,KAAc,CACnB,IAAMA,EAAO0C,EAAK1C,KAClBwW,EAAY,iCAAOxW,EAAKnG,KAAK,eAAC+c,GAAD,mBAAoB5W,EAAK0E,UAAzB,UAEjC,OAAO,qCACH,eAAC2R,GAAD,CAAWC,gBAAiBH,EAA5B,qBAAgD,cAACQ,GAAD,OAChD,cAACJ,GAAD,UAAiBC,OAGzB,IAAK,cACD,OAAO,cAACH,GAAD,CAAWC,gBAAiBL,EAA5B,qBAEX,IAAK,WACD,OAAO,cAACI,GAAD,CAAWC,gBAAiBL,EAA5B,kBAGf,OAAO,cAACI,GAAD,CAAWC,gBAAiB,UAA5B,oBAGa,cAAG,SAACjW,GACxB,GAAY,MAARA,EAAc,MAAO,GAEzB,OADcA,EAAKL,KAAkBvE,MAEjC,IAAK,OAAQ,MAAO,OACpB,IAAK,aAAc,MAAO,iBAC1B,IAAK,cAAe,MAAO,kBAC3B,IAAK,cAAe,MAAO,cAC3B,IAAK,eAAgB,MAAO,eAC5B,IAAK,eAAgB,MAAO,mBAC5B,IAAK,aAAc,MAAO,iBAC1B,IAAK,gBAAiB,MAAO,gBAC7B,IAAK,cAAe,MAAO,cAC3B,IAAK,gBAAiB,MAAO,gBAC7B,IAAK,aAAc,MAAO,iBAC1B,IAAK,eAAgB,MAAO,mBAC5B,IAAK,cAAe,MAAO,0BAC3B,IAAK,YAAa,MAAO,oBACzB,IAAK,qBAAsB,MAAO,qBAClC,IAAK,aAAc,MAAO,iBAC1B,IAAK,eAAgB,MAAO,mBAC5B,IAAK,cAAe,MAAO,kBAC3B,IAAK,WAAY,MAAO,eACxB,IAAK,eAAgB,MAAO,eAC5B,IAAK,YAAa,MAAO,YACzB,IAAK,gBAAiB,MAAO,gBAC7B,IAAK,cAAe,MAAO,gBAIJ,qBAAG,SAAC4E,GAC/B,GAAY,MAARA,EAAc,OAAO,6BAEzB,OADcA,EAAKL,KAAkBvE,MAEjC,IAAK,OAAQ,OAAO,6BACpB,IAAK,aAAc,OAAO,cAAC,GAAD,IAC1B,IAAK,cAAe,OAAO,cAAC,GAAD,IAC3B,IAAK,cACL,IAAK,eAAgB,OAAO,cAAC,GAAD,IAC5B,IAAK,eAAgB,OAAO,cAAC,GAAD,IAC5B,IAAK,gBAAiB,OAAO,cAAC,GAAD,IAC7B,IAAK,aAAc,OAAO,cAAC,GAAD,IAC1B,IAAK,aAAc,OAAO,cAAC,GAAD,IAC1B,IAAK,eAAgB,OAAO,cAAC,GAAD,IAC5B,IAAK,cAAe,OAAO,cAAC,GAAD,IAC3B,IAAK,aAAc,OAAO,cAAC,GAAD,IAC1B,IAAK,eAAgB,OAAO,cAAC,GAAD,IAC5B,IAAK,YAAa,OAAO,cAAC,GAAD,IACzB,IAAK,qBAAsB,OAAO,cAAC,GAAD,IAClC,IAAK,WAAY,OAAO,cAAC,GAAD,IACxB,IAAK,eACL,IAAK,cACL,IAAK,gBACL,IAAK,cACL,IAAK,gBACL,IAAK,YAAa,OAAO,cAAC,GAAD,MAeR,eAAG,CAAC,SAAU,UAGZ,iBAAG,CAAC,UAAW,S,CA9ZpCuJ,Q,KAmaKA,I,0CAAAA,MAETqR,GAAY1d,IAAOC,IAAV,gQAGTK,GAAOyG,kBAGW,SAAAtG,GAAK,OAAIA,EAAMkd,mBAOjCK,GAAUhe,IAAOib,KAAV,qDAIP2C,GAAiB5d,IAAOC,IAAV,uPACdK,GAAOyG,kBAUPkX,GAAaje,IAAOib,KAAV,qDAGV8C,GAAa/d,IAAOib,KAAV,qDAGV6C,GAAS9d,IAAOib,KAAV,mDCpdCpR,IDudI7J,IAAOC,IAAV,iQACRK,GAAOyG,kBCxdqBmX,wBAAc,KAyHjCC,GAvHI,WAAO,IAAD,EAEWzd,mBAAS2L,GAAY+R,kBAFhC,mBAEdhL,EAFc,KAEJiL,EAFI,OAGa3d,mBAAsC,MAHnD,mBAGdmH,EAHc,KAGHiC,EAHG,OAKSpJ,oBAAkB,GAL3B,mBAKdsK,EALc,KAKJC,EALI,OAMevK,mBAAc,MAN7B,mBAMdgJ,EANc,KAMF4U,EANE,KAQfC,EAAc,SAAdA,EAAeC,GACjB,OAAQA,EAAS1b,MACb,IAAK,OACD,IAAM4E,EAAO8W,EAASnX,KACtB,MAAO,CACH,CACIA,KAAMK,EAAK2V,QACX5V,SAAU8W,EAAY7W,EAAK2V,UAE/B,CACIhW,KAAMK,EAAK+M,WACXhN,SAAU8W,EAAY7W,EAAK+M,cAIvC,IAAK,aACL,IAAK,cAED,OADa+J,EAASnX,KACVuF,KAAK5P,KAAI,SAAA0X,GAKjB,MAJoC,CAChCrN,KAAMqN,EACNjN,SAAU8W,EAAY7J,OAKlC,IAAK,cAED,OADa8J,EAASnX,KACVgG,KAAKrQ,KAAI,SAAAsc,GAKjB,MAJoC,CAChCjS,KAAMiS,EACN7R,SAAU8W,EAAYjF,OAMtC,MAAO,IAGLpR,EAAkCI,mBAAQ,WAC5C,MAAO,CACHjB,KAAM+L,EACN3L,SAAU8W,EAAYnL,MAE3B,CAACA,IAEJ,OACI,eAAC,GAAD,CACIwD,SAAU,EADd,UAGI,eAAC6H,GAAD,WACI,cAACC,GAAD,UACQ,cAAC,GAASzU,aAAV,CACIrG,UAAQ,EACR8B,QAAS,CACL,CACII,MAAO,OACPD,SAAU,cAGd,CACIC,MAAO,OACPD,SAAU,mBAM9B,cAAC8Y,GAAD,UACI,cAAC,GAASC,MAAV,CACI1W,aAAcA,EACdqB,WAAY,SAAC7B,GACToC,EAAapC,IAEjB+B,YAAa,SAAC/B,GAIV,OAAO2E,GAAYwS,WAAWnX,GAAe,OAATG,QAAS,IAATA,OAAA,EAAAA,EAAWR,OAAQK,EAAKL,OAEhEqC,WAAYA,EACZ7B,UAAWA,EACXD,UAAWoD,SAIvB,cAAC8T,GAAD,UACI,eAACC,GAAD,WACI,cAACC,GAAD,UACI,cAACC,GAAD,UAAqB5S,GAAY6S,YAAYrX,OAEjD,cAACgC,GAAmBsV,SAApB,CAA6B/b,MAAO,CAChCgQ,WACA1L,KAAMG,EACNiC,aAAcA,EACdJ,WAAY,WAAQ4U,EAAc,KAClCtT,WACAC,YAEAoT,eARJ,SAWI,cAACe,GAAD,UAAiB/S,GAAYgT,mBAAmBxX,gBAYlE8B,GAAQ3J,IAAOC,IAAV,wJAQLwe,GAAWze,IAAOC,IAAV,iMAVU,KAmBlBye,GAAY1e,IAAOC,IAAV,8JAQT0e,GAAY3e,IAAOC,IAAV,uKAQT6e,GAAY9e,IAAOC,IAAV,qNAnCS,KA6ClB8e,GAAa/e,IAAOC,IAAV,gNAQV+e,GAAgBhf,IAAOC,IAAV,oKAObgf,GAAqBjf,IAAOC,IAAV,iPAClBK,GAAOyG,kBAUPqY,GAAiBpf,IAAOC,IAAV,0OCtMLqf,IDgNAtf,IAAOC,IAAV,gNAIN,SAAAQ,GAAK,OAAIA,EAAM8e,UAAY,GAAKlf,YAAvB,6DCzNG,WAEd,OAAQ,gC,GCIFmf,Q,KAiBqB,eAAG,WAC1B,MAAO,CACH1c,KAAM,OACNuE,KAAM,KAIS,cAAG,SAACK,EAA4B+V,GAEnD,OADa/V,EAAKL,KACNvE,MACR,IAAK,OACD,OAAO,cAAC,GAAD,uBAGf,OAAO,cAAC,GAAD,qBAIA0c,I,yJAAAA,MAET7V,GAAQ3J,IAAOC,IAAV,gKAMLK,GAAOyG,kBCwDE0Y,GAnGK,WAAO,IAAD,EAGU/e,mBAAS8e,GAAapB,kBAHhC,mBAGfhL,EAHe,aAIY1S,mBAAsC,OAJlD,mBAIfmH,EAJe,aAKgBnH,oBAAS,IALzB,gCAMcA,mBAAc,OAN5B,mBAMfgJ,EANe,KAShBgW,GATgB,KASF,SAAClB,GAKjB,OAAQA,EAAS1b,MACb,IAAK,OACY0b,EAASnX,KAI9B,MAVkC,KAahCa,EAAkCI,mBAAQ,WAC5C,MAAO,CACHjB,KAAM+L,EACN3L,SAAUiY,EAAYtM,MAE3B,IAEH,OACI,eAAC,GAAD,CACIwD,SAAU,EADd,UAGI,eAAC,GAAD,WACI,cAAC,GAAD,IAGA,cAAC,GAAD,UACI,cAAC,GAASgI,MAAV,CACI1W,aAAcA,EACdqB,WAAY,SAAC7B,KAGb+B,YAAa,SAAC/B,GAIV,OAAO8X,GAAaX,WAAWnX,GAAe,OAATG,QAAS,IAATA,OAAA,EAAAA,EAAWR,OAAQK,EAAKL,OAEjEqC,WAAYA,EACZ7B,UAAWA,EACXD,WAAW,SAIvB,cAAC,GAAD,QAgDN+B,GAAQ3J,IAAOC,IAAV,wJAQLwe,GAAWze,IAAOC,IAAV,qMAVU,KAmBlBye,GAAY1e,IAAOC,IAAV,8JAQT0e,GAAY3e,IAAOC,IAAV,qIAOT6e,GAAY9e,IAAOC,IAAV,wPAlCS,KC9ET0f,ID2HM3f,IAAOC,IAAV,gNASHD,IAAOC,IAAV,gNAIN,SAAAQ,GAAK,OAAIA,EAAM8e,UAAY,GAAKlf,YAAvB,6DAYGL,IAAOC,IAAV,uLCtKO,WAAO,IAAD,EAEIP,qBAAWC,IAFf,EAEhBC,MAFgB,EAETC,SAEf,OACI,cAAC,GAAD,UACI,cAAC,GAAD,CACIkB,YAAa,CACT,CAAEG,KAAM,SAAUkB,QAAQ,EAAOV,KAAM,cAAC,GAAD,KACvC,CAAER,KAAM,WAAYkB,QAAQ,EAAOV,KAAM,cAAC,GAAD,KACzC,CAAER,KAAM,QAASkB,QAAQ,EAAMV,KAAM,cAAC,GAAD,MAEzCf,SAAU,QAQpBgJ,GAAQ3J,IAAOC,IAAV,2WlCnBqB,IkCuBP2f,GACCA,I,SCWXC,GA5CI,SAACpf,GAEb,IAAD,EAE0Bf,qBAAWC,IAFrC,EAEMC,MAFN,EAEaC,SACEvC,KAASwiB,wBAAwBrf,EAAMsf,SAoCxD,OAjBAlf,qBAAU,cAUP,IAOI,cAAC,KAAD,CAAUmf,GAAG,OCdTC,GA3BK,SAACxf,GAEd,IAAD,EAE0Bf,qBAAWC,IAFrC,EAEMC,MAFN,EAEaC,SAoBf,OAlBAgB,qBAAU,WACN,IAAM1F,EAAMmC,KAAS4iB,uBAAuBzf,EAAMsf,SAClDlS,QAAQC,IAAI3S,GACZmC,KAAS6iB,oBAAoBhlB,GAAKilB,MAAK,SAAAC,GAEnC,GADAxS,QAAQC,IAAIuS,GACRA,EAAQxd,OAAS,EACEwd,EAAQ,QAKpC,IAOI,cAAC,KAAD,CAAUL,GAAG,OCYTM,I,WA1BK,WAAO,IAAD,EACM5gB,qBAAWC,IADjB,KACdC,MADc,EACPC,SAEOa,mBAAwB,KAHxB,mBAGf+D,EAHe,KAGV8b,EAHU,KAuBtB,OAnBA1f,qBAAU,WACN7E,MAAM,4BACDokB,MAAK,SAAAtjB,GAAQ,OAAIA,EAASf,UAC1BqkB,MAAK,SAAArkB,GAIFwkB,EAFaxkB,EAEDiB,KAAI,SAACqI,EAAMC,GACnB,IAAMkb,EAASnb,EAAKob,KAAKtO,MAAM,MAAMnV,KAAI,SAACqU,EAAG/L,GAAJ,OAAU,iCAAe+L,EAAE,yBAAN/L,MAC9D,OACI,eAAC,GAAD,WACI,eAACob,GAAD,eAAWrb,EAAKsb,QAAhB,KAA2Btb,EAAKjH,KAAhC,OACA,cAAC,GAAD,UAAUoiB,MAFFlb,YAO7B,IAEK,cAACsb,GAAD,UAAanc,MAKnBmc,GAAa5gB,IAAOC,IAAV,+RAIU4gB,KASpBjf,GAAQ5B,IAAOC,IAAV,2MASLygB,GAAU1gB,IAAOC,IAAV,6OAIIK,GAAOJ,YAOlB8d,GAAUhe,IAAOC,IAAV,mMAGIK,GAAOJ,YC1CT4gB,GAtBK,WAAO,IAAD,EAEMphB,qBAAWC,IAFjB,KAEdC,MAFc,EAEPC,SAEmBa,mBAAS,IAJrB,mBAIfqgB,EAJe,UAWtB,OAJAlgB,qBAAU,cACP,IAGK,eAAC,GAAD,WACJ,eAACmgB,GAAD,WACI,eAACC,GAAD,WAAiBF,EAAjB,mCACA,cAAC,GAAD,OAEJ,cAACG,GAAD,UACI,eAACD,GAAD,WAAiB,EAAjB,sCAwBNtX,GAAQ3J,IAAOC,IAAV,8KAQL+gB,GAAQhhB,IAAOC,IAAV,8HAQLghB,GAAiBjhB,IAAOC,IAAV,0PA8HdihB,IAlHelhB,IAAOC,IAAV,2RtC9DkB,KsCuE9B,SAAAQ,GAAK,OAAIA,EAAMY,SAAW,GAAKhB,YAAtB,2FASKL,IAAOC,IAAV,6MASAD,IAAOC,IAAV,mKAQMD,IAAOC,IAAV,maAgBGD,IAAOC,IAAV,kXAgBED,IAAOgH,MAAV,0VAeIhH,IAAOC,IAAV,yLASDD,IAAOC,IAAV,ifAGPM,IAWA,SAAAE,GAAK,OAAIA,EAAMY,SAAW,GAAKf,GAAO2B,sBAS7BjC,IAAOC,IAAV,yJC5KGkhB,IDmLInhB,IAAOC,IAAV,+RAYGD,IAAOC,IAAV,ydAkBDD,IAAOC,IAAV,0OAYGD,IAAOC,IAAV,8RAaGD,IAAOC,IAAV,iRCrPM,WAAO,IAAD,EAEQP,qBAAWC,IAFnB,EAEZC,MAFY,EAELC,SAEf,OACI,cAAC,KAAD,CAAYuhB,SAAUC,0BAAtB,SACI,cAAC,GAAD,QAONC,GAAe,WAAO,IAAD,EAEK5hB,qBAAWC,IAGjC2K,GALiB,EAEf1K,MAFe,EAERC,SAED,IAAI0hB,gBAAgBC,eAAcC,QAC9BC,IAAI,MAEtB,OACI,eAAC,KAAD,WACI,cAAC,KAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,SACI,cAAC,GAAD,UAGI,cAAC,GAAD,CACI7gB,YAAa,CACT,CAAEG,KAAM,OAAQC,KAAM,cAAC,KAAD,IAAgBE,UAAU,EAAMK,KAAM,cAAC,GAAD,KAC5D,CAAER,KAAM,SAAUC,KAAM,cAAC,KAAD,IAA6BE,UAAU,EAAMK,KAAM,cAAC,GAAD,MAE/Ef,SAAU,QAKtB,cAAC,KAAD,CAAOghB,KAAK,QAAQC,OAAK,EAAzB,SACI,cAAC,GAAD,MAGJ,cAAC,KAAD,CAAOD,KAAK,WAAWC,OAAK,EAA5B,SACI,cAAC,GAAD,CAAY7B,QAASzV,MAEzB,cAAC,KAAD,CAAOqX,KAAK,QAAQC,OAAK,EAAzB,SACI,cAAC,GAAD,CAAa7B,QAASzV,UAQhCX,GAAQ3J,IAAOC,IAAV,2WvCtDsB,MuC0DR4hB,GACCA,IChCXC,GApCA,SAACrhB,GAET,IAAD,EAC4BC,oBAAkB,GAD9C,mBACKqhB,EADL,KACeC,EADf,OAE4BthB,qBAF5B,mBAEKuhB,EAFL,KAEcC,EAFd,KAiBF,OAbArhB,qBAAU,WACNqhB,EAAWhL,YAAW,WAClB8K,GAAU,KACX,QACJ,IACHnhB,qBAAU,WACFkhB,GACA7K,YAAW,WACPzW,EAAM0hB,WACP,OAER,CAACJ,IAIA,cAAC,GAAD,CAAQA,SAAUA,EAAUhiB,QAAS,SAACsE,GAClC+d,aAAaH,GACbD,GAAU,IAFd,SAII,eAAC,GAAD,WACI,eAACK,GAAD,WACI,qCADJ,aAGA,cAACC,GAAD,6BACA,cAACC,GAAD,sEAQVziB,GAASE,IAAOC,IAAV,0PAWG,SAAAQ,GAAK,OAAIA,EAAMshB,SAAW,IAAM,OAGzCpJ,GAAS3Y,IAAOC,IAAV,iXAiBNuiB,GAASC,YAAH,mGASNJ,GAASriB,IAAOC,IAAV,swBAcKuiB,IAaXF,GAActiB,IAAOC,IAAV,oOAYXsiB,GAAaviB,IAAOC,IAAV,+M,SCpDDyiB,GA1DK,WAAO,IAAD,EAEMhjB,qBAAWC,IAA/BC,EAFc,EAEdA,MAEFN,GAJgB,EAEPO,SAEFD,EAAMR,OAAOE,MAJJ,EAMMoB,mBAAS,IANf,mBAMPiiB,GANO,WA2CtB,OAnCA9hB,qBAAU,WACNgN,QAAQC,IAAIxO,GACA,MAARA,GACAqjB,EAAU,IAAMrjB,EAAKpC,MAE1B,CAACoC,IA+BA,eAAC,GAAD,WACI,eAAC,GAAD,WACI,cAACsjB,GAAD,sBADJ,OACoC,cAACC,GAAD,2BAEpC,cAACC,GAAD,UAEI,cAACC,GAAD,UACI,8BAAK,cAAC,KAAD,cASnBpZ,GAAQ3J,IAAOC,IAAV,4QzC5DuB,IyCsE5B6B,GAAS9B,IAAOC,IAAV,sTAaN4iB,GAAU7iB,IAAOib,KAAV,mDAGP2H,GAAU5iB,IAAOib,KAAV,yEAOP6H,GAAQ9iB,IAAOC,IAAV,yLASL+iB,GAAYhjB,IAAOC,IAAV,iKAqDT8iB,IA7Ce/iB,YAAOgjB,GAAPhjB,CAAH,8tBA2BAA,IAAOC,IAAV,oSAYT,SAAAQ,GAAK,OAAIA,EAAMwiB,QAAU,GAAK5iB,YAArB,gEAMGL,YAAOgjB,GAAPhjB,CAAH,moBAEFkjB,GACCA,KC1JDvjB,GAAgBue,wBAAc,IA4B5BiF,GA1BK,WAAO,IAAD,EAEIziB,mBAASvB,GAFb,mBAEfS,EAFe,KAERC,EAFQ,KAGtB,OACI,cAACF,GAAcwf,SAAf,CAAwB/b,MAAO,CAAExD,QAAOC,YAAxC,SACI,qCACMD,EAAMR,OAAOC,SACX,cAAC,GAAD,CACI8iB,OAAQ,WACJtiB,EAAS,2BAAID,GAAL,IAAYR,OAAO,2BACpBQ,EAAMR,QADa,IACLC,UAAU,UAJjB,6BAQ1B,eAAC,GAAD,WACI,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC+jB,GAAD,UACI,cAAC,GAAD,eAUlBzZ,GAAQ3J,IAAOC,IAAV,wJAQLmjB,GAAWpjB,IAAOC,IAAV,kJ1C1CoB,I2CoBnBojB,OA5Bf,WAuBE,OArBAxiB,qBAAU,WAERuN,SAASkV,cAAgB,WAAc,OAAO,GAS9ClV,SAASmV,UAAY,SAAClf,GAIpB,GAAIA,EAAEmf,SAAW,CAAC,IAAK,KAAKzW,SAAS1I,EAAEof,KACrC,OAAO,KAIV,IAED,cAAC,GAAD,KCbWC,GAZS,SAACC,GACnBA,GAAeA,aAAuB1N,UACxC,6BAAqBmK,MAAK,YAAkD,IAA/CwD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOD,GACPE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAQL,OCCdM,IAASC,OACL,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAGJ/V,SAASgW,eAAe,SAM1BV,O","file":"static/js/main.cfaf6589.chunk.js","sourcesContent":["import zlib from \"zlib\";\n// import { createClient } from \"@supabase/supabase-js\";\nimport { Base64 } from \"js-base64\";\nimport Hashids from 'hashids';\n\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\n\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\n\nnamespace DataUtil {\n\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5000';\n    export const DB_SERVER_DOMAIN = 'https://licresia-demo01-server.glitch.me';\n    // export const DB_SERVER_DOMAIN = 'https://licresia-server.glitch.me';\n\n    // export const APP_SERVER_DOMAIN = 'http://localhost:4000';\n    // export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/licresia_demo_app';\n    export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\n\n    // const fetchData = async () => {\n    //     try {\n    //         // sampleテーブルから全カラムのデータをid順に取得\n    //         // dataに入る型はそのままだとany[]となるため.from<T>で指定\n    //         const { data, error } = await supabase.from<Table>('test').select().order('data');\n\n    //         if (error) {\n    //             throw error;\n    //         }\n    //         if (data) {\n    //             console.log(data);\n    //         }\n    //     } catch (error: any) {\n    //         alert(error.message);\n    //     } finally {\n\n    //     }\n    // };\n\n    const getUserHashBuilder = () => {\n        return new Hashids('licresia-demo-user', 8);\n    }\n\n    export const getHashedFromUserSeq = (seq: number) => {\n        const hashids = getUserHashBuilder();\n        const hash = hashids.encode(seq);\n        const hashedKey = Base64.encode(hash, true);\n        return hashedKey;\n    }\n\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\n        const hashids = getUserHashBuilder();\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\n        return decryptioned;\n    }\n\n    const getScoreHashBuilder = () => {\n        return new Hashids('licresia-demo', 8);\n    }\n\n    export const getHashedFromScoreSeq = (seq: number) => {\n        const hashids = getScoreHashBuilder();\n        const hash = hashids.encode(seq);\n        const hashedKey = Base64.encode(hash, true);\n        return hashedKey;\n    }\n\n    export const getDecryptionedScoreSeq = (hashedSeq: string) => {\n        const hashids = getScoreHashBuilder();\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\n        return decryptioned;\n    }\n\n    export const getPreviewURL = (scoreSeq: number) => {\n        const hashedKey = getHashedFromScoreSeq(scoreSeq);\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\n        return url;\n    }\n\n    /**\n     * クエリリクエストを生成する\n     * @param sql \n     * @returns \n     */\n    const createQueryRequestInit = (sql: string): RequestInit => {\n        return {\n            mode: 'cors',\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ sql })\n        }\n    }\n\n    export type SendMailParam = {\n        from: string,\n        to: string,\n        subject: string,\n        text: string\n    }\n\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\n        return {\n            mode: 'cors',\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(json)\n        }\n    }\n\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\n        return fetch(DB_SERVER_DOMAIN + '/mail',\n            createSendMailRequestInit(json)\n        );\n    }\n\n    /**\n     * select/updateを指定してSQLを実行する。<br>\n     * selectの場合、結果をjsonで返す。\n     * @param queryType\n     * @param sql \n     * @returns \n     */\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\n            createQueryRequestInit(sql)\n        );\n    }\n\n    export const findUserInfoList = async () => {\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\n        const results = await response.json();\n        return results as { id: string, email: string}[];\n    };\n\n    export const findUserIdList = async () => {\n        const results = await findUserInfoList();\n        return (results as { id: string}[]).map(res => res.id);\n    };\n\n    export const findUserInfoFromEmail = async (email: string) => {\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\n        const results = await response.json();\n        return results as { seq: number, id: string }[];\n    };\n\n    export const findUserInfoFromSeq = async (seq: number) => {\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\n        const results = await response.json();\n        return results as { seq: number, id: string, password: string, email: string }[];\n    };\n\n    export const findUserInfoLogin = async (id: string, password: string) => {\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\n        const results = await response.json();\n        return results as { seq: number, id: string, password: string, email: string }[];\n    };\n\n    export const getNextUserSeq = async () => {\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\n        const results = await response.json();\n        const nextSeq = (results[0]['seq'] as number) + 1;\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\n\n        return nextSeq;\n    };\n\n    export const findUserScoreList = async (userSeq: number) => {\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\n        const results = await response.json();\n        return results as any[];\n    };\n\n    export const findScore = async (scoreSeq: number) => {\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT (select id from user_tbl where seq = score.user_seq) as owner, dispnam, data FROM scoretbl score WHERE seq = ${scoreSeq}`);\n        const results = await response.json();\n        return results as any[];\n    };\n\n    /**\n     * 文字列を圧縮する\n     * @param val 圧縮前の文字列\n     * @returns 圧縮後の文字列\n     */\n    export const gZip = (val: string) => {\n        // エンコード\n        const content = encodeURIComponent(val);\n        // 圧縮\n        const result = zlib.gzipSync(content);\n        // Buffer => base64変換\n        const value = result.toString('base64');\n        return value;\n    }\n\n    /**\n     * 圧縮された文字列を複号する\n     * @param val 圧縮された文字列\n     * @returns 複号後の文字列\n     */\n    export const unZip = (val: string) => {\n        // base64 => Bufferに変換\n        const buffer = Buffer.from(val, 'base64')\n        // 復号化\n        const result = zlib.unzipSync(buffer)\n        // デコード\n        const str = decodeURIComponent(result.toString())\n        return str;\n    }\n\n    /**\n     * Date型の日時を文字列に変換する\n     * @param date Date型の日時\n     * @returns 文字列の日時\n     */\n    export const getStringFromDate = (date: Date) => {\n\n        const year_str = date.getFullYear().toString();\n        //月だけ+1すること\n        const month_str = (1 + date.getMonth()).toString();\n        const day_str = date.getDate().toString();\n        const hour_str = date.getHours().toString();\n        const minute_str = date.getMinutes().toString();\n        const second_str = date.getSeconds().toString();\n\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\n        format_str = format_str.replace(/YYYY/g, year_str);\n        format_str = format_str.replace(/MM/g, month_str);\n        format_str = format_str.replace(/DD/g, day_str);\n        format_str = format_str.replace(/hh/g, hour_str);\n        format_str = format_str.replace(/mm/g, minute_str);\n        format_str = format_str.replace(/ss/g, second_str);\n\n        return format_str;\n    };\n}\n\nexport default DataUtil;","import StoreSystem from \"./storeSystem\";\n\n/**\n * システムで使用するステート群\n */\nexport type Store = {\n    system: StoreSystem.Param;\n}\n\nexport const initialStore: Store = {\n    system: {\n        isSplash: false,\n        user: null,\n        dialog: null,\n    },\n}","\nnamespace SystemConst {\n    export const AUTH_TEXT_WIDTH = 350;\n    export const AUTH_TEXT_HEIGHT = 70;\n}\n\nexport default SystemConst;\n\nexport const APP_MIN_WIDTH = 800;\nexport const APP_MIN_HEIGHT = 600;\n\nexport const TOTAL_HEADER_WIDTH = 44;\n\nexport const MAIN_FRAME_MARGIN = 15;\nexport const SCORE_TAB_MARGIN = 8;\n\nexport const BUTTON_SMALL_HEIGHT = 18;\nexport const BUTTON_MIDIUM_HEIGHT = 28;\nexport const BUTTON_LARGE_HEIGHT = 34;\n\n\n// ホームチャンネル\nexport const HOME_USER_DIV_HEIGHT = 400;\n\n// ハーモナイズタブ\n\nexport const FIRST_CHORD_INDEX = 3;\n\nexport const HARMONIZE_RIGHT_WIDTH = 220;\nexport const HARMONIZE_HEAD_WIDTH = 35;\nexport const HARMONIZE_FOOT_WIDTH = 80;\nexport const HARMONIZE_STRUCT_WIDTH = 380;\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\n\nexport const ELEMENT_HEIGHT = 134;\nexport const ELEMENT_HEAD_WIDTH = 15;\nexport const ELEMENT_FOOT_WIDTH = 60;\nexport const ELEMENT_SIDE_PADDING = 8;\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\nexport const ELEMENT_NOTE_PADDING_SID = 30;\nexport const ELEMENT_POS_INFO_WIDTH = 50;\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\n\nexport const TIMELINE_BEAT_WIDTH = 80;\n\n\nexport const TUNE_HEADER_WIDTH = 80;\nexport const TUNE_TIMELINE_WIDTH = 70;\nexport const TUNE_PITCH_WIDTH = 100;\nexport const TUNE_PITCH_HEIGHT = 30;\n\n\n\nexport const PATTERN_OPERATION_HEIGHT = 30;\nexport const PATTERN_HEADER_HEIGHT = 50;\nexport const PATTERN_BODY_HEIGHT = 240;\nexport const PATTERN_FOOTER_HEIGHT = 50;\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\n\n\nexport const NOTES_1BAR_WIDTH = 480;","import { useContext, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { GlobalContext } from \"../entry/systemEntry\";\n\n\nconst GloballDialog = () => {\n\n    const { store, setStore } = useContext(GlobalContext);\n\n    const dialog = store.system.dialog;\n\n    if (dialog == null) return <></>;\n    return (<>\n        <_Blind onClick={() => {\n            store.system.dialog = null;\n            setStore({...store});\n        }} />\n        {dialog}\n    </>);\n}\n\nexport default GloballDialog;\n\nconst _Blind = styled.div<{\n}>`\n    display: block;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-color: #000329a2;\n    z-index: 10;\n    text-align: center;\n`;\n","import styled, { css } from \"styled-components\";\n\nnamespace Styles {\n\n    export const FONT_SMALL = 16;\n    export const FONT_MIDIUM = 22;\n    export const FONT_LARGE = 32;\n\n    export const CSS_LABEL = css`\n        display: inline-block;\n        font-weight: 600;\n        text-align: center;\n        color: black;\n        box-sizing: border-box;\n    `;\n\n    export const CSS_LABEL_SMALL = css`\n        ${CSS_LABEL}\n        height: 22px;\n        font-size: ${FONT_SMALL}px;\n        line-height: 18px;\n    `;\n\n    export const CSS_LABEL_MIDIUM = css`\n        ${CSS_LABEL}\n        height: 30px;\n        font-size: ${FONT_MIDIUM}px;\n        line-height: 26px;\n    `;\n\n    export const CSS_BUTTON_DISABLE = css`\n        pointer-events: none;\n        opacity: 0.5;\n    `;\n}\nexport default Styles;\n\nexport const _WrapperFrame = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n`;\n\nexport const _Object = styled.div`\n    display: inline-block;\n`;\n\nexport const _Record = styled.div`\n    display: inline-block;\n    width: 100%;\n`;\n\nexport const _CSS_LABEL_SMALL = css`\n    display: inline-block;\n    height: 22px;\n    font-size: 18px;\n    font-weight: 600;\n    color: black;\n    line-height: 18px;\n`;\n\n\nexport const _CSS_LABEL_MIDIUM = css`\n    display: inline-block;\n    height: 30px;\n    font-size: ${Styles.FONT_MIDIUM}px;\n    font-weight: 600;\n    text-align: center;\n    color: black;\n    line-height: 24px;\n    box-sizing: border-box;\n`;\n\nexport const _CSS_DISABLE = css`\n    opacity: 0.6;\n    pointer-events: none;\n`;\n\n","import { useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../design/styles\";\n\ntype ChannelPaneProps = {\n    activeNo: number;\n    tabElements: ChannelElements[];\n    selectTabIndex?: Function;\n}\n\ntype ChannelElements = {\n    name: string;\n    icon: JSX.Element;\n    isEnable: boolean;\n    cont: JSX.Element;\n}\n\nexport const ChannelPane = (props: ChannelPaneProps) => {\n    const [activeNo, setActiveNo] = useState(props.activeNo);\n\n    // タブ押下時の処理\n    const selectTabIndex = (index: number) => {\n        if (props.selectTabIndex != undefined) {\n            props.selectTabIndex(index);\n        } else {\n            setActiveNo(index);\n        }\n    };\n\n    useEffect(() => {\n        setActiveNo(props.activeNo);\n    }, [props.activeNo]);\n\n    return (\n        <>\n            <_LabelList>\n                {\n                    props.tabElements.map((tab, index) => {\n                        return <ChannelLabel\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\n                            selectTab={() => selectTabIndex(index)}\n                        />\n                    })\n                }\n            </_LabelList>\n            <_ContList>\n                {\n                    props.tabElements.map((tab, index) => {\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\n                    })\n                }\n            </_ContList>\n        </>\n    );\n}\n\nconst ChannelLabel = (props: {\n    name: string;\n    icon: JSX.Element;\n    isEnable: boolean;\n    isActive: boolean;\n    selectTab: Function;\n}) => {\n    return (\n        <_Item\n            isEnable={props.isEnable}\n            isActive={props.isActive}\n            onClick={() => props.selectTab()}\n        >\n            <_Icon>{props.icon}</_Icon>\n            <_Label>{props.name}</_Label>\n        </_Item>\n    );\n}\n\nconst ChannelContents = (props: {\n    isActive: boolean;\n    cont: JSX.Element;\n}) => {\n    return (\n        <_Contents isActive={props.isActive}>\n            {props.cont}\n        </_Contents>\n    );\n}\n\nconst _LabelList = styled.div`\n    display: inline-block;\n    width: 100px;\n    margin-right: 5px;\n    height: 100%;\n    background-color: #b9b9b9;\n    border: 1px solid #707070;\n    box-sizing: border-box;\n    border-radius: 10px 0 0 10px;\n    vertical-align: top;\n    box-shadow: 1px 2px 12px #aaaaaa;\n`;\nconst _ContList = styled.div`\n    display: inline-block;\n    background-color: #b9b9b9;\n    border: 1px solid #707070;\n    box-sizing: border-box;\n    width: calc(100% - 105px);\n    height: 100%;\n    border-radius: 0 6px 6px 0;\n    box-shadow: 1px 2px 12px #aaaaaa;\n`;\n\nconst _Contents = styled.div<{\n    isActive: boolean;\n}>`\n    /* margin: 3px 0 0 3px;\n    width: calc(100% - 6px);\n    height: calc(100% - 6px); */\n    width: 100%;\n    height: 100%;\n    /* background-color: #ece6e6; */\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\n`;\n\nconst _Item = styled.div<{\n    isEnable: boolean;\n    isActive: boolean;\n}>`\n    display: inline-block;\n    width: 90px;\n    height: 90px;\n    margin: 5px 0 0 5px;\n    border-radius: 10px;\n    ${props => {\n        if (props.isActive) {\n            return css`\n                background-color: #e4e3e1;\n                border: 1px solid #949494\n            `;\n        } else {\n            return css`\n                background-color: #d1d1d1;\n                opacity: 0.8;\n            `;\n        }\n    }}\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    transition: background-color 500ms;\n    & *{\n        transition: color 150ms;\n    }\n    // アクティブじゃない時だけhover要素を付加\n    ${props => props.isActive ? '' : css`\n        &:hover {\n            & *{\n                transition: color 150ms;\n                /* background-color: #e2d6d6; */\n                text-shadow: 1px 2px 22px #f7f7f7ea;\n                color: #a7a7a7;\n            }\n        }\n    `}\n`;\n\nconst IconHover = css`\n    text-shadow: 1px 2px 22px #f7f7f7cf;\n    color: #a3a3a3;\n`;\n\nconst _Icon = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 60px;\n    /* background-color: #df828221; */\n    font-size: 50px;\n    color: #757575;\n    text-align: center;\n    padding-top: 5px;\n    box-sizing: border-box;\n`;\n\nconst _Label = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 30px;\n    /* background-color: #8482df20; */\n    font-size: 20px;\n    font-weight: 600;\n    color: #757575;\n    text-align: center;\n`;","import { useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\ntype TabbedPaneProps = {\n    activeNo: number;\n    tabElements: TabElements[];\n    selectTabIndex?: Function;\n    tabRecordNum?: number;\n}\n\ntype TabElements = {\n    name: string;\n    enable: boolean;\n    cont: JSX.Element;\n}\n\nexport const TabbedPane = (props: TabbedPaneProps) => {\n    const [activeNo, setActiveNo] = useState(props.activeNo);\n\n    // タブ押下時の処理\n    const selectTabIndex = (index: number) => {\n        if (props.selectTabIndex != undefined) {\n            props.selectTabIndex(index);\n        } else {\n            setActiveNo(index);\n        }\n    };\n\n    const tabRecordNum = props.tabRecordNum ?? 1;\n\n    useEffect(() => {\n        setActiveNo(props.activeNo);\n    }, [props.activeNo]);\n\n    return (\n        <>\n            <_LabelList tabRecordNum={tabRecordNum}>\n                {/* {tabList} */}\n                {\n                    props.tabElements.map((tab, index) => {\n                        return <TabLabel\n                            key={index} name={tab.name} isActive={index == activeNo} isEnable={tab.enable}\n                            selectTab={() => selectTabIndex(index)}\n                        />\n                    })\n                }\n            </_LabelList>\n            <_ContList tabRecordNum={tabRecordNum}>\n                {/* {contList} */}\n                {\n                    props.tabElements.map((tab, index) => {\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\n                    })\n                }\n            </_ContList>\n        </>\n    );\n}\n\nconst TabLabel = (props: {\n    name: string;\n    isActive: boolean;\n    isEnable: boolean;\n    selectTab: Function;\n}) => {\n    return (\n        <_TabLabel\n            isEnable={props.isEnable}\n            isActive={props.isActive}\n            onClick={() => props.selectTab()}>\n            {props.name}\n        </_TabLabel>\n    );\n}\n\nconst TabContents = (props: {\n    isActive: boolean;\n    cont: JSX.Element;\n}) => {\n    // return props.isActive ?\n    //     <div className=\"tab-cont\">{props.cont}</div>\n    //     :\n    //     <></>\n    //     ;\n    return (\n        <_Contents isActive={props.isActive}>\n            {props.cont}\n        </_Contents>\n    );\n}\n\nconst _LabelList = styled.div<{\n    tabRecordNum: number;\n}>`\n    display: inline-block;\n    height: ${props => 35 * props.tabRecordNum}px;\n    text-align: left;\n    /* background-color: #ac3b3b; */\n    width: 100%;\n`;\nconst _ContList = styled.div<{\n    tabRecordNum: number;\n}>`\n    display: block;\n    background-color: #999999;\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\n    border-radius: 0 6px 6px 6px;\n    box-shadow: 0 2px 0 0 #000b3a48;\n    text-align: left;\n`;\n\nconst _Contents = styled.div<{\n    isActive: boolean;\n}>`\n    margin: 3px 0 0 3px;\n    width: calc(100% - 6px);\n    height: calc(100% - 6px);\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\n`;\n\nconst _TabLabel = styled.div<{\n    isEnable: boolean;\n    isActive: boolean;\n}>`\n    display: inline-block;\n    /* width: 100px; */\n    padding: 0 10px;\n    \n    ${props => {\n        if (props.isActive) {\n            return css`\n                color: #ebebeb;\n                padding: 0 35px;\n                background-color: #999999;\n                height: 35px;\n                font-size: 24px;\n                border-radius: 3px 15px 0 0;\n                text-shadow: 1px 2px 3px #00000065;\n            `;\n        } else {\n            return css`\n                height: 100%;\n                color: #555;\n                /* background-color: #90909b; */\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\n                height: 30px;\n                font-size: 18px;\n                margin-top: 5px;\n                border-radius: 3px 10px 0 0;\n                ${props.isEnable ? '' : css`\n                    pointer-events: none;\n                    opacity: 0.7;\n                `}\n            `;\n        }\n    }}\n    /* opacity: 0.7; */\n    user-select: none;\n    margin-right: 6px;\n    font-weight: 600;\n    box-sizing: border-box;\n    line-height: 30px;\n    vertical-align: bottom;\n    transition: padding 100ms;\n`;","import styled, { css } from \"styled-components\";\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\nimport ValidateUtil from \"./validateUtil\";\nimport { useEffect } from \"react\";\n\nnamespace FormUtil {\n\n    export type CheckableValue = {\n        value: string;\n        errors: ValidateUtil.ErrorType[];\n    }\n\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\n        let result = true;\n        checkables.forEach(checkable => {\n            if (checkable.errors.length > 0) {\n                result = false;\n                return 1;\n            }\n        });\n        return result;\n    }\n\n    export const InputTextFormBak = (props: {\n        titleLabel?: string;\n        checkable: CheckableValue;\n        setCheckable: (value: CheckableValue) => void;\n        isEnable?: boolean;\n        placeholder?: string;\n        isCenter?: boolean;\n        width?: number;\n        isPassword?: boolean;\n        validates?: ValidateUtil.Validate[];\n        dependency?: CheckableValue[];\n        marginTop?: number;\n        isReadOnly?: boolean;\n        marginBottom?: number;\n    }) => {\n        const type = props.isPassword ?? false ? 'password' : 'text';\n\n        const validaters = props.validates ?? [];\n        const errors = props.checkable.errors;\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\n\n        const getErrors = (value: string) => {\n            const errors: ValidateUtil.ErrorType[] = [];\n            validaters.forEach(validater => {\n                if (!validater.checker(value)) {\n                    errors.push(validater.errorType);\n                }\n            });\n            return errors;\n        }\n        useEffect(() => {\n            props.checkable.errors = getErrors(props.checkable.value);\n            props.setCheckable({ ...props.checkable });\n        }, dependency);\n        return (\n            <_Record\n                isEnable={props.isEnable ?? true}\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\n                marginTop={props.marginTop ?? 0}\n            >\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\n                <_ItemnInputBak\n                    type={type}\n                    value={props.checkable.value}\n                    hasTitle={props.titleLabel != undefined}\n                    width={props.width}\n                    isCenter={props.isCenter ?? false}\n                    placeholder={props.placeholder}\n                    onChange={(e) => {\n                        const value = e.target.value;\n                        props.checkable.value = value;\n                        props.checkable.errors = getErrors(value);\n                        props.setCheckable({ ...props.checkable });\n                    }}\n                    errorType={errors.length === 0 ? undefined : errors[0]}\n                    readOnly={props.isReadOnly}\n                />\n            </_Record>\n        );\n    }\n\n\n    export const Record = (props: {\n        isEnable?: boolean;\n        textAlign?: 'left' | 'center' | 'right';\n        marginTop?: number;\n        jsx: JSX.Element;\n    }) => {\n        return (\n            <_Record\n                isEnable={props.isEnable ?? true}\n                textAlign={props.textAlign ?? 'left'}\n                marginTop={props.marginTop ?? 0}\n            >\n                {props.jsx}\n            </_Record>\n        );\n    }\n\n    export const FormRecord = (props: {\n        titleLabel?: string;\n        labelWidth?: number;\n        isEnable?: boolean;\n        textAlign?: 'left' | 'center' | 'right';\n        marginTop?: number;\n        jsx: JSX.Element;\n    }) => {\n        return (\n            <_Record\n                isEnable={props.isEnable ?? true}\n                textAlign={props.textAlign ?? 'left'}\n                marginTop={props.marginTop ?? 0}\n            >\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={props.labelWidth}>{props.titleLabel}</_ItemnLabel>}\n                {props.jsx}\n            </_Record>\n        );\n    }\n\n    export const TextField = (props: {\n        checkable: CheckableValue;\n        setCheckable: (value: CheckableValue) => void;\n        isEnable?: boolean;\n        placeholder?: string;\n        width?: number;\n        isPassword?: boolean;\n        validates?: ValidateUtil.Validate[];\n        dependency?: CheckableValue[];\n        isReadOnly?: boolean;\n        isNumber?: boolean;\n        marginLeft?: number;\n    }) => {\n        let type = props.isPassword ?? false ? 'password' : 'text';\n        if (props.isNumber ?? false) {\n            type = 'number';\n        }\n\n        const validaters = props.validates ?? [];\n        const errors = props.checkable.errors;\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\n\n        const getErrors = (value: string) => {\n            const errors: ValidateUtil.ErrorType[] = [];\n            validaters.forEach(validater => {\n                if (!validater.checker(value)) {\n                    errors.push(validater.errorType);\n                }\n            });\n            return errors;\n        }\n        useEffect(() => {\n            props.checkable.errors = getErrors(props.checkable.value);\n            props.setCheckable({ ...props.checkable });\n        }, dependency.concat(props.checkable.value));\n\n        let value = props.checkable.value;\n        // if (type === 'number' && value === '') value = '0';\n        return (\n            <_ItemnInput\n                type={type}\n                value={value}\n                width={props.width ?? 100}\n                placeholder={props.placeholder}\n                onChange={(e) => {\n                    let value = e.target.value;\n                    // if (type === 'number' && value === '') value = '0';\n                    props.checkable.value = type !== 'number' ? value : Number(value).toString();\n                    // props.checkable.errors = getErrors(value);\n                    props.setCheckable({ ...props.checkable });\n                }}\n                errorType={errors.length === 0 ? undefined : errors[0]}\n                readOnly={props.isReadOnly}\n                marginLeft={props.marginLeft}\n            />\n        );\n    }\n\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\n    export const Combobox = (props: {\n        list: ComboboxItemProps[];\n        headBlank?: boolean;\n        checkable: CheckableValue;\n        setCheckable: (value: CheckableValue) => void;\n        isEnabled?: boolean;\n        placeholder?: string;\n        width?: number;\n        validates?: ValidateUtil.Validate[];\n        dependency?: CheckableValue[];\n        isReadOnly?: boolean;\n        marginLeft?: number;\n    }) => {\n        const validaters = props.validates ?? [];\n        const errors = props.checkable.errors;\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\n        const headBlank = props.headBlank ?? false;\n        const list = props.list.slice();\n        if (headBlank) list.unshift({ value: '', labelText: '' });\n\n        const getErrors = (value: string) => {\n            const errors: ValidateUtil.ErrorType[] = [];\n            validaters.forEach(validater => {\n                if (!validater.checker(value)) {\n                    errors.push(validater.errorType);\n                }\n            });\n            return errors;\n        }\n\n        useEffect(() => {\n            // console.log('value: ' + props.checkable.value);\n            props.checkable.errors = getErrors(props.checkable.value);\n            props.setCheckable({ ...props.checkable });\n        }, dependency.concat(props.checkable.value));\n\n        return (\n            <_ItemCombobox\n                value={props.checkable.value}\n                width={props.width ?? 100}\n                placeholder={props.placeholder}\n                onChange={(e) => {\n                    const value = e.target.value;\n                    props.checkable.value = value;\n                    // props.checkable.errors = getErrors(value);\n                    props.setCheckable({ ...props.checkable });\n\n                }}\n                errorType={errors.length === 0 ? undefined : errors[0]}\n                readOnly={props.isReadOnly}\n                marginLeft={props.marginLeft}\n            >{list.map((item, i) => {\n                return (\n                    <_Option key={i}\n                        value={item.value}\n                        disabled={item.isDisabled ?? false}\n                        isDisabled={item.isDisabled ?? false}\n                    >{item.labelText}</_Option>\n                );\n            })}</_ItemCombobox>\n        );\n    }\n\n    export type ButtonProps = {\n        label: string;\n        isEnable?: boolean;\n        width?: number;\n        callback: () => void;\n    }\n\n    export const ButtonRecord = (props: {\n        buttons: ButtonProps[],\n        isCenter?: boolean;\n        marginTop?: number;\n        marginBottom?: number;\n    }) => {\n        return (\n            <_Record\n                isEnable={true}\n                textAlign={(props.isCenter ?? false) ? 'center' : 'right'}\n                marginTop={props.marginTop ?? 0}\n            >\n                {props.buttons.map((button, i) => {\n                    return (\n                        <_Button\n                            key={i}\n                            isCenter={props.isCenter ?? false}\n                            isEnable={button.isEnable ?? true}\n                            width={button.width}\n                            onClick={button.callback}\n                        >{button.label}</_Button>\n                    );\n                })}\n            </_Record>\n        );\n    }\n\n    export const Message = (props: {\n        message: string,\n        isCenter?: boolean;\n        marginTop?: number;\n        marginBottom?: number;\n    }) => {\n        return (\n            <_Record\n                isEnable={true}\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\n                marginTop={props.marginTop ?? 0}\n            >\n                <_Message\n                    isCenter={props.isCenter ?? false}\n                >{props.message}</_Message>\n            </_Record>\n        );\n    }\n\n    export const MessageLink = (props: {\n        message: string,\n        isCenter?: boolean;\n        clickAction: () => void;\n        marginTop?: number;\n        marginBottom?: number;\n    }) => {\n        return (\n            <_Record\n                isEnable={true}\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\n                marginTop={props.marginTop ?? 0}\n            >\n                <_Message\n                    isLink={true}\n                    onClick={props.clickAction}\n                    isCenter={props.isCenter ?? false}\n                >{props.message}</_Message>\n            </_Record>\n        );\n    }\n\n    export const BorderPanel = (props: {\n        title: string;\n        isEnable?: boolean;\n        innerJsx: JSX.Element;\n    }) => {\n        // const title = props.title ?? 'title pl';\n        return (<>\n            <_BorderText>{props.title}</_BorderText>\n            <_BorderPanel isEnable={props.isEnable ?? true}>{props.innerJsx}</_BorderPanel>\n        </>);\n    }\n\n    export const InfoFrame = (props: {\n        height?: number;\n        textRecords: string[];\n    }) => {\n        const height = props.height ?? 70;\n        const color = '#1a9900';\n        return (<>\n            <_InfoDiv height={height} color={color}>\n                {props.textRecords.map((text, i) => {\n                    return <span key={i}>{text}<br /></span>;\n                })}\n            </_InfoDiv>\n        </>);\n    };\n\n    export const Switch = (props: {\n        label: string;\n        isUse: boolean;\n        isEnable?: boolean;\n        width?: number;\n        callback: () => void;\n    }) => {\n        return (\n            <_Switch\n                isUse={props.isUse}\n                isEnable={props.isEnable ?? true}\n                width={props.width}\n                onClick={props.callback}\n            >{props.label}</_Switch>\n        );\n    }\n}\n\nexport default FormUtil;\n\n\nconst _Record = styled.div<{\n    isEnable: boolean;\n    textAlign: 'left' | 'center' | 'right';\n    marginTop: number;\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 40px;\n    margin-top: ${props => props.marginTop}px;\n    /* background-color: #b3b4c4; */\n    /* border: 1px solid #000; */\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    text-align: ${props => props.textAlign};\n`;\n\nconst _ItemnLabel = styled.div<{\n    labelWidth?: number;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: ${props => props.labelWidth ?? 140}px;\n    ${Styles.CSS_LABEL_MIDIUM}\n    color: #585858;\n    border: solid 1px #7a7a7abf;\n    box-sizing: border-box;\n    /* background-color: #85a2c5; */\n    background: linear-gradient(to bottom, #c3c3c3fc, #d8d8d8, #c3c3c3fc);\n    border-radius: 4px;\n    text-align: center;\n    vertical-align: top;\n    margin: 5px 4px 0 4px;\n`;\n\nconst _ItemnInputBak = styled.input<{\n    readOnly?: boolean;\n    isCenter: boolean;\n    hasTitle: boolean;\n    width?: number;\n    errorType?: ValidateUtil.ErrorType;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    ${props => !props.hasTitle ? css`\n    ` : css`\n        width: calc(100% - 152px);\n    `}\n    ${props => props.width == undefined ? '' : css`\n        width: ${props.width}px;\n    `}\n    margin-top: 2px;\n    font-size: 24px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #3d3d3d;\n    border: solid 1px #959595;\n    border-radius: 4px;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: ${props => {\n        if (props.errorType == undefined) return '#ececec';\n        else {\n            switch (props.errorType) {\n                case 'required': return '#dbd7b3';\n                case 'length': return '#dbb3b3';\n                case 'value': return '#b3b3db';\n                case 'relation': return '#b3dbb3';\n            }\n        }\n    }};\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n    /* ${props => !props.isCenter ? css`\n        margin-left: 4px;\n    ` : css``\n    } */\n    ${props => !props.readOnly ? '' : css`\n        color: #020075;\n        /* border: none; */\n        outline: none;\n        background-color: transparent;\n    `}\n    ::placeholder {\n        color: #00000050;\n        font-style: italic;\n    }\n`;\n\nconst _ItemnInput = styled.input<{\n    readOnly?: boolean;\n    width?: number;\n    errorType?: ValidateUtil.ErrorType;\n    marginLeft?: number;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: ${props => props.width}px;\n    margin-top: 2px;\n    margin-left: ${props => props.marginLeft ?? 0}px;\n    font-size: 24px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #3d3d3d;\n    border: solid 1px #959595;\n    border-radius: 4px;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: ${props => {\n        if (props.errorType == undefined) return '#ececec';\n        else {\n            switch (props.errorType) {\n                case 'required': return '#dbd7b3';\n                case 'length': return '#dbb3b3';\n                case 'value': return '#b3b3db';\n                case 'relation': return '#b3dbb3';\n            }\n        }\n    }};\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n    ${props => !props.readOnly ? '' : css`\n        color: #020075;\n        /* border: none; */\n        outline: none;\n        background-color: transparent;\n    `}\n    ::placeholder {\n        color: #00000050;\n        font-style: italic;\n    }\n`;\n\nconst _ItemCombobox = styled.select<{\n    readOnly?: boolean;\n    width?: number;\n    errorType?: ValidateUtil.ErrorType;\n    marginLeft?: number;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: ${props => props.width}px;\n    margin-top: 2px;\n    margin-left: ${props => props.marginLeft ?? 0}px;\n    font-size: 24px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #3d3d3d;\n    border: solid 1px #959595;\n    border-radius: 4px;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: ${props => {\n        if (props.errorType == undefined) return '#ececec';\n        else {\n            switch (props.errorType) {\n                case 'required': return '#dbd7b3';\n                case 'length': return '#dbb3b3';\n                case 'value': return '#b3b3db';\n                case 'relation': return '#b3dbb3';\n            }\n        }\n    }};\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n    ${props => !props.readOnly ? '' : css`\n        color: #020075;\n        /* border: none; */\n        outline: none;\n        background-color: transparent;\n        pointer-events: none;\n    `}\n    ::placeholder {\n        color: #00000050;\n        font-style: italic;\n    }\n`;\n\nconst _Option = styled.option<{\n    isDisabled: boolean;\n}>`\n    ${props => !props.isDisabled ? '' : css`\n        color: #0000004b;\n    `}\n`;\n\nconst _Message = styled.div<{\n    isLink?: boolean;\n    isCenter: boolean;\n}>`\n    display: inline-block;\n    height: calc(100% - 4px);\n    margin-top: 2px;\n    font-size: ${Styles.FONT_MIDIUM}px;\n    line-height: 32px;\n    /* font-weight: 600; */\n    color: #002c52;\n    border-radius: 4px;\n    padding: 0 5px;\n    box-sizing: border-box;\n    /* background-color: #d37878; */\n    text-align: left;\n    vertical-align: top;\n    user-select: text;\n    ${props => !props.isCenter ? css`\n        margin-left: 4px;\n    ` : css``\n    }\n    ${props => !props.isLink ? '' : css`\n        color: #0459a3;\n        user-select: none;\n        text-decoration: underline;\n        &:hover {\n            color: #68a4d8;\n        }\n    `}\n`;\n\nconst _ButtonsDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 40px;\n    /* background-color: #888888; */\n    box-sizing: border-box;\n    text-align: left;\n    white-space: nowrap;\n`;\n\nconst _Button = styled.div<{\n    isEnable: boolean;\n    isCenter: boolean;\n    width?: number;\n}>`\n    ${Styles.CSS_LABEL_MIDIUM}\n    ${props => props.width == undefined ? css`\n        padding: 0 40px;\n    ` : css`\n        width: ${props.width}px;\n    `}\n    /* line-height: 25px; */\n    box-sizing: border-box;\n    /* background-color: #a8a8a8; */\n    background: linear-gradient(to bottom, #cdcdcd, #ebebeb, #cdcdcd);\n    border: 1px solid #747474;\n    color: #515151;\n    border-radius: 4px;\n    ${props => !props.isCenter ? css`\n        margin-left: 4px;\n    ` : css``\n    }\n    margin: 5px 0 0 4px;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    &:hover {\n        /* background-color: #98bfc2; */\n        background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\n    }\n`;\n\nconst _Switch = styled.div<{\n    isUse: boolean;\n    isEnable: boolean;\n    width?: number;\n}>`\n    ${Styles.CSS_LABEL_MIDIUM}\n    ${props => props.width == undefined ? css`\n        padding: 0 40px;\n    ` : css`\n        width: ${props.width}px;\n    `}\n    /* line-height: 25px; */\n    box-sizing: border-box;\n    /* background-color: #a8a8a8; */\n    background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\n    border: 1px solid #747474;\n    color: #515151;\n    border-radius: 4px;\n    margin: 5px 0 0 4px;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    &:hover {\n        background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\n    }\n`;\n\nconst _BorderText = styled.div<{\n}>`\n    ${Styles.CSS_LABEL_SMALL}\n    color: #990000;\n    /* background-color: #0a0a0a40; */\n    font-style: italic;\n    margin: 4px 0 0 8px;\n`;\nconst _BorderPanel = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    margin: 0 0 0 6px;\n    padding: 4px;\n    width: calc(100% - 12px);\n    background-color: #dcddce;\n    border: 1px solid #000;\n    box-sizing: border-box;\n    border-radius: 4px;\n    text-align: left;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n`;\n\nconst _InfoDiv = styled.div<{\n    height: number;\n    color: string;\n}>`\n    margin: 4px 0 0 0;\n    display: inline-block;\n    background-color: #e7e5e561;\n    border: solid 1px #949494;\n    width: 100%;\n    height: ${props => props.height}px;\n    padding: 2px;\n    box-sizing: border-box;\n    text-align: left;\n    font-size: ${Styles.FONT_SMALL}px;\n    color: ${props => props.color};\n    overflow-y: auto;\n`;","import { useEffect, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nnamespace TreeUtil {\n\n    export type ElementNode = {\n        // jsx: JSX.Element;\n        isOpen: boolean;\n        // index: number;\n        depth: number;\n        data: any;\n        children: ElementNode[];\n        parent: null | ElementNode;\n    }\n\n    export type DataNode = {\n        data: any;\n        children: DataNode[];\n    }\n\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\n        // parent.isOpen = true;\n        return {\n            data, parent, depth: parent.depth + 1,\n            isOpen: false,\n            children: [],\n        };\n    }\n\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\n        const parentNode = node.parent;\n        if (parentNode != null) {\n            for (let i = 0; i < parentNode.children.length; i++) {\n                if (node == parentNode.children[i]) return i;\n            }\n        }\n        return -1;\n    }\n\n    export const Frame = (props: {\n        rootDataNode: DataNode;\n        clickEvent: (node: ElementNode) => void;\n        getLabelJsx: (node: ElementNode) => JSX.Element;\n        invalidate: any;\n        isDisable?: boolean;\n        focusNode?: ElementNode | null;\n    }) => {\n        const isDisable = props.isDisable ?? false;\n        const focusNode = props.focusNode ?? null;\n\n        const buildElementNodeFromData = () => {\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\n                const node: ElementNode = {\n                    data: dataNode.data,\n                    depth: depth,\n                    // index: count,\n                    isOpen: false,\n                    children: [],\n                    parent\n                };\n                node.children = (() => {\n                    return dataNode.children.map(child => {\n                        return build(depth + 1, child, node);\n                    });\n                })();\n                return node;\n            }\n            return build(0, props.rootDataNode, null);\n        }\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\n\n        useEffect(() => {\n            setRootElementNode(buildElementNodeFromData());\n        }, [props.rootDataNode]);\n\n        useEffect(() => {\n            if (focusNode != null && focusNode.parent != null) {\n                focusNode.parent.isOpen = true;\n            }\n        }, [focusNode]);\n\n        const jsxList = useMemo(() => {\n            // console.log(rootElementNode);\n            const list: JSX.Element[] = [];\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\n\n                const getSpaces = () => {\n                    return spaceList.map((space, i) => {\n                        const lines: JSX.Element[] = [];\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\n                        return <_Space key={i}>{lines}</_Space>;\n                    });\n                }\n\n                const isRelationNode = () => {\n                    let result = false;\n                    let tempNode = focusNode;\n                    // 親判定\n                    while (tempNode != null) {\n                        if (element.parent == null || element == tempNode) {\n                            result = true;\n                            break;\n                        }\n                        tempNode = tempNode.parent;\n                    }\n                    // 兄弟判定\n                    if (result === false && focusNode != null && focusNode.parent != null) {\n                        result = focusNode.parent.children.find(node => node == element) != undefined;\n                    }\n                    return result;\n                }\n                const isCurrent = element.data == focusNode?.data;\n                list.push(\n                    <_Record\n                        key={list.length}\n                        isActive={isCurrent}\n                        isRelation={!isDisable && isRelationNode()}\n                        isDisable={isCurrent && isDisable}\n                    >\n                        {getSpaces()}\n                        {element.children.length === 0 ? <></> : <_Branch\n                            onClick={() => {\n                                element.isOpen = !element.isOpen;\n                                setRootElementNode({ ...rootElementNode });\n                                // alert(element.isOpen);\n                            }}\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\n                        <_Jsx\n                            onClick={() => {\n                                props.clickEvent(element);\n                                setRootElementNode({ ...rootElementNode });\n                            }}\n                            onDoubleClick={() => {\n                                element.isOpen = !element.isOpen;\n                                setRootElementNode({ ...rootElementNode });\n                            }}\n                        >\n                            {props.getLabelJsx(element)}\n                        </_Jsx>\n                    </_Record>\n                );\n                if (element.isOpen) {\n                    element.children.forEach((child, i) => {\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\n                    });\n                }\n            }\n            buildJsxRecords(rootElementNode, []);\n            // rootJsxNode.forEach((el) => {\n            //     addElement(el, []);\n            // });\n            return list;\n        }, [rootElementNode, props.invalidate, isDisable]);\n\n        return (\n            <_Wrap isDisable={isDisable}>\n                {jsxList}\n            </_Wrap>\n        );\n    }\n}\n\nexport default TreeUtil;\n\nconst _Wrap = styled.div<{\n    isDisable: boolean;\n}>`\n    display: inline-block;\n    position: relative;\n    background-color: #374a54;\n    width: calc(100% - 10px);\n    height: calc(100% - 10px);\n    box-sizing: border-box;\n    border: solid 1px #000;\n    margin: 5px;\n    overflow: auto;\n    ${props => !props.isDisable ? '' : css`\n        pointer-events: none;\n        background-color: #1f3642;\n    `}\n`;\n\nconst _Record = styled.div<{\n    isActive: boolean;\n    isRelation: boolean;\n    isDisable: boolean;\n}>`\n    display: block;\n    /* position: relative; */\n    ${props => !props.isDisable ? '' : css`\n        background-color: #459cff46;\n    `}\n    opacity: 0.5;\n    ${props => !props.isRelation ? '' : css`\n        background-color: #ffffff28;\n        opacity: 1;\n    `}\n    ${props => !props.isActive ? '' : css`\n        background-color: #b4d9dd83;\n        opacity: 1;\n    `}\n    /* width: calc(100% - 10px); */\n    height: 40px;\n    box-sizing: border-box;\n    white-space: nowrap;\n    /* border: solid 1px #000;\n    margin: 5px; */\n    & *{\n        vertical-align: top;\n    }\n    &:hover {\n        opacity: 1;\n    }\n`;\n\nconst _Space = styled.div`\n    display: inline-block;\n    position: relative;\n    /* background-color: #b6d5be; */\n    width: 40px;\n    height: 100%;\n    box-sizing: border-box;\n    /* border: solid 1px #000; */\n`;\nconst _LineTop = styled.div`\n    display: inline-block;\n    position: relative;\n    background-color: #b60000;\n    width: 4px;\n    height: 22px;\n    box-sizing: border-box;\n    margin: 0 0 0 20px;\n`;\nconst _LineFull = styled.div`\n    display: inline-block;\n    position: relative;\n    background-color: #b60000;\n    width: 4px;\n    height: 100%;\n    box-sizing: border-box;\n    margin: 0 0 0 20px;\n`;\nconst _LineRight = styled.div`\n    display: inline-block;\n    position: relative;\n    background-color: #b60000;\n    width: 16px;\n    height: 4px;\n    box-sizing: border-box;\n    margin: 18px 0 0 0;\n`;\n\nconst _Branch = styled.div`\n    display: inline-block;\n    /* position: relative; */\n    background-color: #d1d1d1;\n    width: 30px;\n    height: calc(100% - 10px);\n    border: solid 1px #000;\n    margin: 5px 0 0 3px;\n    box-sizing: border-box;\n    font-size: 30px;\n    /* font-weight: 600; */\n    color: #6d1717;\n    line-height: 20px;\n    padding-left: 3px;\n`;\nconst _Jsx = styled.div`\n    display: inline-block;\n    position: relative;\n    /* background-color: #ffffff3c; */\n    min-width: 100px;\n    height: 100%;\n    margin: 0 0  0 3px;\n    box-sizing: border-box;\n`;\n","import { useContext } from \"react\";\nimport FormUtil from \"../../../../utils/form/formUtiil\";\nimport TreeUtil from \"../../../../utils/treeUtil\";\nimport FactoryTab, { FactoryTreeContext } from \"../factoryTab\";\nimport FactoryUtil from \"../factoryUtil\";\n\nconst FactDetArgumentMng = () => {\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\n    const wrap = node.data as FactoryUtil.WrapNode;\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"operation\"\n            innerJsx={<FormUtil.ButtonRecord\n                isCenter\n                buttons={[\n                    {\n                        label: 'Add Argument',\n                        callback: () => {\n                            const newWrap: FactoryUtil.WrapNode = {\n                                type: 'argument-item',\n                                data: null\n                            };\n                            (wrap.data as FactoryUtil.NodeArgumentManager).args.push(newWrap);\n                            const newNode = TreeUtil.createNode(newWrap, node);\n                            node.children.push(newNode);\n                            setFocusNode(newNode);\n                            // (wrap.data as FactoryUtil.NodeArgumentManager).args.push(newWrap);\n                        }\n                    }\n                ]}\n            />}\n        />\n    </>);\n}\n\nexport default FactDetArgumentMng;","\n/**\n * 入力チェックを行うユーティリティ。\n */\nnamespace ValidateUtil {\n\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\n\n    export type Validate = {\n        checker: (value: string) => boolean;\n        errorType: ErrorType;\n        message?: string;\n    }\n\n    /**\n     * 必須チェック\n     * @param str 検証する文字列\n     * @returns 判定結果\n     */\n    export const checkRequired = (str: string) => {\n        return str.length > 0;\n    }\n\n    /**\n     * 文字列の長さチェック\n     * @param str 検証する文字列\n     * @param min 最小値\n     * @param max 最大値\n     * @returns 判定結果\n     */\n    export const checkStringLength = (str: string, min: number, max: number) => {\n        return str.length === 0 || (str.length >= min && str.length <= max);\n    }\n\n    /**\n     * 半角英数時チェック\n     * @param str 検証する文字列\n     * @returns 判定結果\n     */\n    export const checkAsciiChars = (str: string) => {\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        return checkIncludesChars(str, list);\n    }\n\n    /**\n     * 指定の文字列で構成されているかチェック\n     * @param str 検証する文字列\n     * @returns 判定結果\n     */\n    export const checkIncludesChars = (str: string, list: string) => {\n        for (let i = 0; i < str.length; i++) {\n            const ch = str.charAt(i);\n            if (list.indexOf(ch) === -1) return false;\n        }\n        return true;\n    }\n\n    /**\n     * \n     * @param conditions \n     * @returns \n     */\n    export const checkAll = (conditions: boolean[]): boolean => {\n        let result = true;\n        for (let i = 0; i < conditions.length; i++) {\n            if (!conditions[i]) {\n                result = false;\n                break;\n            }\n        }\n        return result;\n    }\n}\nexport default ValidateUtil;\n","import { useContext, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../../factoryTab\";\r\nimport FactoryUtil from \"../../factoryUtil\";\r\n\r\nnamespace ModifyOperations {\r\n\r\n    export type Props = {\r\n        mappingForm: () => void;\r\n        checkableFields: FormUtil.CheckableValue[];\r\n        isInputOK?: boolean;\r\n        firstRegist: () => void;\r\n        modifyRegist: () => void;\r\n    }\r\n\r\n    export const Component = (props: Props) => {\r\n        const { node, isModify, setModify, setFocusNode } = useContext(FactoryTreeContext);\r\n\r\n        const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n        const isComplete = FormUtil.isCompleteCheck(props.checkableFields);\r\n\r\n        return (<>\r\n            <FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: isModify,\r\n                        callback: () => {\r\n                            if (wrap.data == null) {\r\n                                const parent = (node.parent as TreeUtil.ElementNode);\r\n                                parent.children.splice(parent.children.length - 1, 1);\r\n                                setFocusNode(parent);\r\n                            } else {\r\n                                props.mappingForm();\r\n                            }\r\n                            setModify(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !isModify || (props.isInputOK ?? isComplete),\r\n                        callback: () => {\r\n                            if (!isModify) {\r\n                                setModify(true);\r\n                            } else {\r\n                                if (wrap.data == null) {\r\n                                    props.firstRegist();\r\n                                } else {\r\n                                    props.modifyRegist();\r\n                                }\r\n                                setModify(false);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default ModifyOperations;","import { type } from \"os\";\nimport { useContext, useEffect, useState } from \"react\";\nimport FormUtil from \"../../../../utils/form/formUtiil\";\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\nimport TreeUtil from \"../../../../utils/treeUtil\";\nimport { FactoryTreeContext } from \"../factoryTab\";\nimport FactoryUtil from \"../factoryUtil\";\nimport ModifyOperations from \"./common/modifyOperations\";\n\nconst FactDetArgumentItem = () => {\n    const { node, setFocusNode, setModify, isModify ,invalidate} = useContext(FactoryTreeContext);\n    const wrap = node.data as FactoryUtil.WrapNode;\n\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n\n    const mappingForm = () => {\n        const param = wrap.data as FactoryUtil.NodeArgumentItem;\n        setName({ ...name, value: param.name });\n        setArgType({ ...argType, value: param.valueType });\n    };\n\n    useEffect(() => {\n        if (wrap.data == null) {\n            setModify(true);\n        } else {\n            mappingForm();\n        }\n    }, [node]);\n\n    return (<>\n        <ModifyOperations.Component\n            mappingForm={mappingForm}\n            checkableFields={[name]}\n            firstRegist={() => {\n                const param: FactoryUtil.NodeArgumentItem = {\n                    name: name.value,\n                    valueType: argType.value as FactoryUtil.ArgumentType\n                };\n                param.name = name.value;\n                wrap.data = param;\n            }}\n            modifyRegist={() => {\n                const param = wrap.data as FactoryUtil.NodeArgumentItem;\n                param.name = name.value;\n                param.valueType = argType.value as FactoryUtil.ArgumentType;\n                wrap.data = param;\n            }}\n        />\n        <FormUtil.BorderPanel\n            title=\"param\"\n            innerJsx={<>\n                <FormUtil.FormRecord\n                    titleLabel=\"Name\"\n                    jsx={\n                        <FormUtil.TextField\n                            width={200}\n                            isReadOnly={!isModify}\n                            checkable={name}\n                            setCheckable={setName}\n                            validates={[\n                                {\n                                    checker: (value) => ValidateUtil.checkRequired(value),\n                                    errorType: \"required\"\n                                },\n                                {\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\n                                    errorType: \"length\"\n                                },\n                                {\n                                    checker: (value) => FactoryUtil.checkFieldName(value),\n                                    errorType: \"value\"\n                                }\n                            ]}\n                        />\n                    }\n                />\n                <FormUtil.FormRecord\n                    titleLabel=\"Type\"\n                    jsx={\n                        <FormUtil.Combobox\n                            checkable={argType}\n                            setCheckable={setArgType}\n                            list={FactoryUtil.ArgTypes.map(type => {\n                                return { value: type, labelText: type, isDisabled: type !== 'float'}\n                            })}\n                            headBlank\n                            width={200}\n                            isReadOnly={!isModify}\n                            validates={\n                                [\n                                    {\n                                        checker: (value) => ValidateUtil.checkRequired(value),\n                                        errorType: \"required\"\n                                    }\n                                ]\n                            }\n                        />\n                    }\n                />\n            </>}\n        />\n        <FormUtil.BorderPanel\n            title=\"operation\"\n            isEnable={!isModify}\n            innerJsx={<>\n                <FormUtil.ButtonRecord\n                    isCenter\n                    buttons={[\n                        {\n                            label: 'Delete',\n                            callback: () => {\n                                let index = -1;\n                                node.parent?.children.forEach((n, i) => {\n                                    if (n == node) index = i;\n                                });\n                                node.parent?.children.splice(index, 1);\n                                ((node.parent?.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeArgumentManager).args.splice(index, 1);\n                                setFocusNode(node.parent as TreeUtil.ElementNode);\n                                invalidate();\n                            }\n                        }\n                    ]}\n                />\n            </>}\n        />\n    </>);\n}\n\nexport default FactDetArgumentItem;","import { useContext } from \"react\";\nimport FormUtil from \"../../../../utils/form/formUtiil\";\nimport TreeUtil from \"../../../../utils/treeUtil\";\nimport FactoryTab, { FactoryTreeContext } from \"../factoryTab\";\nimport FactoryUtil from \"../factoryUtil\";\n\nconst FactDetInheritMng = () => {\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\n    const wrap = node.data as FactoryUtil.WrapNode;\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"operation\"\n            innerJsx={<FormUtil.ButtonRecord\n                isCenter\n                buttons={[\n                    {\n                        label: 'Add Inherit',\n                        callback: () => {\n                            const itemWrap: FactoryUtil.WrapNode = {\n                                type: 'inherit-item',\n                                data: null\n                            };\n                            (wrap.data as FactoryUtil.NodeLogicManager).defs.push(itemWrap);\n                            const newNode = TreeUtil.createNode(itemWrap, node);\n                            node.children.push(newNode);\n                            setFocusNode(newNode);\n                        }\n                    }\n                ]}\n            />}\n        />\n    </>);\n}\n\nexport default FactDetInheritMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport FormUtil from \"../../../../utils/form/formUtiil\";\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\nimport TreeUtil from \"../../../../utils/treeUtil\";\nimport { FactoryTreeContext } from \"../factoryTab\";\nimport FactoryUtil from \"../factoryUtil\";\nimport ModifyOperations from \"./common/modifyOperations\";\n\nconst FactDetExtendMng = () => {\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\n    const wrap = node.data as FactoryUtil.WrapNode;\n\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n\n    const [hasEffectsNode, hasModulateNode, hasInheritNode] = useMemo(() => {\n        const list = node.children.map(el => {\n            return (el.data as FactoryUtil.WrapNode).type;\n        });\n        return [\n            list.includes('effect-mng'),\n            list.includes('modulate-mng'),\n            list.includes('connect-mng'),\n        ]\n    }, [node]);\n\n    const mappingForm = () => {\n        const param = wrap.data as FactoryUtil.NodeLogicItem;\n        setName({ ...name, value: param.name });\n    };\n\n    useEffect(() => {\n        if (wrap.data == null) {\n            setModify(true);\n        } else {\n            mappingForm();\n        }\n    }, [node]);\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"element\"\n            isEnable={!isModify}\n            innerJsx={<>\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Effect'}\n                            width={300}\n                            isUse={hasEffectsNode}\n                            callback={() => {\n                                const data = (wrap.data as FactoryUtil.NodeExtendManager);\n                                if (hasEffectsNode) {\n                                    data.mngs.splice(0, 1);\n                                    node.children.splice(0, 1);\n                                    setFocusNode({ ...node });\n                                    invalidate();\n                                } else {\n                                    const newWrap: FactoryUtil.WrapNode = {\n                                        type: 'effect-mng',\n                                        data: {\n                                            params: []\n                                        } as FactoryUtil.NodeParamManager\n                                    }\n                                    data.mngs.unshift(newWrap);\n                                    const newNode = TreeUtil.createNode(newWrap, node);\n                                    node.children.unshift(newNode);\n\n                                    {\n                                        const paramWrap = FactoryUtil.createParamWrap('effect-item',\n                                            { name: 'disappear_start_rate', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] });\n                                        (newWrap.data as FactoryUtil.NodeParamManager).params.push(paramWrap);\n                                        newNode.children.push(TreeUtil.createNode(paramWrap, newNode));\n                                    }\n\n                                    setFocusNode({ ...node });\n                                    invalidate();\n                                }\n                            }}\n                        />\n                    }\n                />\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Modulate'}\n                            width={300}\n                            isUse={hasModulateNode}\n                            callback={() => {\n                                const data = (wrap.data as FactoryUtil.NodeExtendManager);\n                                if (hasModulateNode) {\n                                    const delIndex = !hasEffectsNode ? 0 : 1;\n                                    data.mngs.splice(delIndex, 1);\n                                    node.children.splice(delIndex, 1);\n                                    setFocusNode({ ...node });\n                                    invalidate();\n                                } else {\n                                    const newWrap: FactoryUtil.WrapNode = {\n                                        type: 'modulate-mng',\n                                        data: {\n                                            params: []\n                                        } as FactoryUtil.NodeParamManager\n                                    }\n                                    const insIndex = !hasEffectsNode ? 0 : 1;\n                                    data.mngs.splice(insIndex, 0, newWrap);\n                                    const newNode = TreeUtil.createNode(newWrap, node);\n                                    node.children.splice(insIndex, 0, newNode);\n\n                                    {\n                                        const paramWrap = FactoryUtil.createParamWrap('modulate-item',\n                                            { name: 'decay_rate', formulaItems: ['var'], values: [{ type: 'direct', value: '0.97' }] });\n                                        (newWrap.data as FactoryUtil.NodeParamManager).params.push(paramWrap);\n                                        newNode.children.push(TreeUtil.createNode(paramWrap, newNode));\n                                    }\n                                    {\n                                        const paramWrap = FactoryUtil.createParamWrap('modulate-item',\n                                            { name: 'decay_limit', formulaItems: ['var'], values: [{ type: 'direct', value: '5' }] });\n                                        (newWrap.data as FactoryUtil.NodeParamManager).params.push(paramWrap);\n                                        newNode.children.push(TreeUtil.createNode(paramWrap, newNode));\n                                    }\n                                    {\n                                        const paramWrap = FactoryUtil.createParamWrap('modulate-item',\n                                            { name: 'gravity', formulaItems: ['var'], values: [{ type: 'direct', value: '0.1' }] });\n                                        (newWrap.data as FactoryUtil.NodeParamManager).params.push(paramWrap);\n                                        newNode.children.push(TreeUtil.createNode(paramWrap, newNode));\n                                    }\n\n                                    setFocusNode({ ...node });\n                                    invalidate();\n                                }\n                            }}\n                        />\n                    }\n                />\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Inherit'}\n                            width={300}\n                            isUse={hasInheritNode}\n                            callback={() => {\n                                const data = (wrap.data as FactoryUtil.NodeExtendManager);\n                                if (hasInheritNode) {\n                                    console.log(data.mngs[data.mngs.length - 1].type);\n                                    data.mngs.splice(data.mngs.length - 1, 1);\n                                    node.children.splice(node.children.length - 1, 1);\n                                    setFocusNode({ ...node });\n                                    invalidate();\n                                } else {\n                                    const newWrap: FactoryUtil.WrapNode = {\n                                        type: 'connect-mng',\n                                        data: {\n                                            connects: []\n                                        } as FactoryUtil.NodeInheritConnectManager\n                                    }\n                                    data.mngs.push(newWrap);\n                                    const newNode = TreeUtil.createNode(newWrap, node);\n                                    node.children.push(newNode);\n                                    setFocusNode({ ...node });\n                                    invalidate();\n                                }\n                            }}\n                        />\n                    }\n                />\n            </>}\n        />\n    </>);\n}\n\nexport default FactDetExtendMng;","import { useContext } from \"react\";\nimport FormUtil from \"../../../../utils/form/formUtiil\";\nimport TreeUtil from \"../../../../utils/treeUtil\";\nimport FactoryTab, { FactoryTreeContext } from \"../factoryTab\";\nimport FactoryUtil from \"../factoryUtil\";\n\nconst FactDetOriginMng = () => {\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"operation\"\n            innerJsx={<FormUtil.ButtonRecord\n                isCenter\n                buttons={[\n                    {\n                        label: 'Add Origin',\n                        callback: () => {\n                            const wrap: FactoryUtil.WrapNode = {\n                                type: 'origin-item',\n                                data: null\n                            }\n                            const newNode = TreeUtil.createNode(wrap, node);\n                            node.children.push(newNode);\n                            setFocusNode(newNode);\n                        }\n                    }\n                ]}\n            />}\n        />\n    </>);\n}\n\nexport default FactDetOriginMng;","import SystemConst from \"./systemConst\";\n\nnamespace CanvasUtil {\n\n    /**\n     * Canvasに任意の描画をし、画像のURLを取得する\n     * @param width 幅\n     * @param height 高さ\n     * @param draw 描画\n     * @returns 画像のURL\n     */\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n        canvas.width = width;\n        canvas.height = height;\n        draw(ctx);\n        return canvas.toDataURL();\n    }\n\n    export const getLogoURL = () => {\n        return CanvasUtil.createURL(350, 80, (ctx) => {\n            // ctx.fillStyle = '#ffffff';\n            // ctx.fillRect(0, 0, 350, 80);\n\n            ctx.shadowColor = \"#555\";\n            ctx.shadowOffsetX = 2;\n            ctx.shadowOffsetY = 1;\n            ctx.shadowBlur = 5;\n            ctx.font = '55pt Arial';\n            ctx.fillStyle = '#db0000';\n            ctx.fillText('L', 30, 70);\n            const adjust = ctx.measureText('L').width;\n            ctx.fillStyle = '#ffffff';\n            ctx.fillText('iCreSia', 30 + adjust, 70);\n            ctx.save();\n        });\n    }\n\n    export const getAuthTextURL = (text: string) => {\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\n            ctx.rotate(1 * Math.PI / 180);\n            for (let i = 0; i < text.length; i++) {\n                const char = text.charAt(i);\n\n                const fontRand = Math.random() * 60;\n                const alphaRand = Math.random() * 60;\n                ctx.font = `${20 + fontRand}pt Arial`;\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\n                ctx.fillText(char, i * SIZE, 60);\n            }\n        });\n    }\n}\n\nexport default CanvasUtil;","import VectorUtil from \"./vectorUtil\";\n\nnamespace Particle {\n\n    export type Props = {\n        owner: Instance[];\n        pos: VectorUtil.XY;\n        vec: VectorUtil.Vector;\n        limit: number;\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\n        extend: ((self: Instance) => void)[];\n    }\n\n    export class Instance {\n\n        owner: Instance[];\n        pos: VectorUtil.XY;\n        prevPos: VectorUtil.XY;\n        vec: VectorUtil.Vector;\n        frame: number;\n        limit: number;\n        isLive: boolean;\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\n        extend: ((self: Instance) => void)[];\n\n        constructor(props: Props) {\n            this.owner = props.owner;\n            this.pos = props.pos;\n            this.prevPos = props.pos;\n            this.vec = props.vec;\n\n            this.frame = 0;\n            this.limit = props.limit;\n            this.isLive = true;\n            this.drawer = props.drawer;\n            this.extend = props.extend;\n        }\n\n        update = () => {\n\n            this.pos.x += this.vec.xy.x;\n            this.pos.y += this.vec.xy.y;\n\n            this.extend.forEach(callback => callback(this));\n\n            if (this.frame === this.limit) {\n                this.isLive = false;\n            }\n            this.frame++;\n        }\n\n        draw = (ctx: CanvasRenderingContext2D) => {\n            this.drawer(this, ctx);\n        }\n    }\n}\n\nexport default Particle;","import Particle from \"./particle\";\n\nnamespace DrawUtil {\n\n    export type Rgba = {\n        r: number;\n        g: number;\n        b: number;\n        a: number;\n    }\n\n    export type ColorStop = {\n        offset: number;\n        color: string;\n    }\n\n    export type DrawerParam = {\n        color: string;\n        radius?: number;\n        disappearStartRate?: number;\n    }\n\n    export const createGradDrawer = (param: DrawerParam) => {\n\n        const radius = param.radius ?? 30;\n        return (self: Particle.Instance, ctx: CanvasRenderingContext2D) => {\n            const x = self.pos.x;\n            const y = self.pos.y;\n            const g = ctx.createRadialGradient(x, y, 1, x, y, radius);\n\n            const grads: ColorStop[] = [];\n            const rgba = convertRgbaFromColorCode(param.color) ?? { r: 255, g: 255, b: 255, a: 255 };\n            grads.push({ offset: 0, color: '#ffffffe4' });\n            rgba.a = 40;\n            grads.push({ offset: 0.2, color: convertColorCodeFromRgba(rgba) })\n            rgba.a = 1;\n            grads.push({ offset: 1, color: convertColorCodeFromRgba(rgba) })\n\n            grads.forEach(grad => {\n                g.addColorStop(grad.offset, grad.color);\n            });\n\n            if (param.disappearStartRate != undefined) {\n                const start = Math.floor(self.limit * param.disappearStartRate);\n                if (self.frame > start) {\n                    const limit = self.limit - start;\n                    const frame = self.frame - start;\n                    ctx.globalAlpha = (limit - frame) / limit;\n                }\n            }\n\n            ctx.fillStyle = g;\n            ctx.beginPath();\n            ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\n            ctx.fill();\n        };\n    }\n\n    export const convertRgbaFromColorCode = (code: string): Rgba | null => {\n        const div = code.split('#');\n        if (div.length !== 2 || div[1].length < 6) return null;\n\n        const value = div[1];\n        const r = Number.parseInt(value.substring(0, 2), 16);\n        const g = Number.parseInt(value.substring(2, 4), 16);\n        const b = Number.parseInt(value.substring(4, 6), 16);\n        let a = 1;\n        if (value.length === 8) {\n            a = Number.parseInt(value.substring(6, 8), 16);\n        }\n        return { r, g, b, a };\n    }\n\n    export const convertColorCodeFromRgba = (rgba: Rgba): string => {\n        const r = ('00' + rgba.r.toString(16)).slice(-2);\n        const g = ('00' + rgba.g.toString(16)).slice(-2);\n        const b = ('00' + rgba.b.toString(16)).slice(-2);\n        const a = ('00' + rgba.a.toString(16)).slice(-2);\n        return `#${r}${g}${b}${a}`;\n    }\n\n    export const toWhite = (color: string, rate: number): string => {\n        return color;\n    }\n}\n\nexport default DrawUtil;","namespace VectorUtil {\n\n    export type XY = {\n        x: number, y: number;\n    }\n\n    export class Vector {\n\n        xy: XY;\n        rad: number;\n        len: number;\n\n        constructor(xy: XY) {\n            this.xy = xy;\n            this.rad = 0;\n            this.len = 0;\n            this.syncFromXY();\n        }\n\n        syncFromXY = () => {\n            this.len = Math.sqrt(this.xy.x * this.xy.x + this.xy.y * this.xy.y);\n            this.rad = Math.atan2(this.xy.y, this.xy.x);\n        }\n\n        syncFromRad = () => {\n            this.xy.x = Math.cos(this.rad) * this.len;\n            this.xy.y = Math.sin(this.rad) * this.len;\n        }\n\n    }\n}\n\nexport default VectorUtil;","import { assert } from \"console\";\nimport TreeUtil from \"../../../utils/treeUtil\";\nimport DrawUtil from \"../../graphic/drawUtil\";\nimport Particle from \"../../graphic/particle\";\nimport VectorUtil from \"../../graphic/vectorUtil\";\nimport FactoryUtil from \"../factory/factoryUtil\";\n\nnamespace PreviewUtil {\n\n    export const SCREEN_WIDTH = 550;\n    export const SCREEN_HEIGHT = 550;\n\n    export type ValueMap = {\n        name: string;\n        value: number;\n    }\n\n    type ParentProps = {\n        pos: VectorUtil.XY;\n    }\n\n    export const buildOriginProps = (\n        owner: Particle.Instance[],\n        node: TreeUtil.ElementNode,\n        rootData: FactoryUtil.WrapNode,\n        args: ValueMap[]\n    ): Particle.Props => {\n\n        const searchDependLogic = (name: string): FactoryUtil.NodeLogicItem | null => {\n            const mng = (rootData.data as FactoryUtil.NodeRoot).inheritMng.data as FactoryUtil.NodeLogicManager;\n            const wrap = mng.defs.find(def => (def.data as FactoryUtil.NodeLogicItem).name === name);\n            if (wrap == undefined) return null;\n            return wrap.data as FactoryUtil.NodeLogicItem;\n        }\n\n        const createParticleRec = (cur: FactoryUtil.NodeLogicItem, fields: ValueMap[], parent: null | ParentProps): Particle.Props => {\n            let valueMapList: ValueMap[] = fields.concat(ConstantValueMap);\n\n            const visualParams = (searchElement('visual-mng', cur.mngs)?.data as FactoryUtil.NodeParamManager).\n                params.map(param => param.data as FactoryUtil.NodeParamItem);\n            const behaviorParams = (searchElement('behavior-mng', cur.mngs)?.data as FactoryUtil.NodeParamManager).\n                params.map(param => param.data as FactoryUtil.NodeParamItem);\n\n            const getVisualParam = (name: string) => {\n                return convertFormulaToValue(name, visualParams, valueMapList);\n            }\n            const getBehaviorParam = (name: string) => {\n                return convertFormulaToValue(name, behaviorParams, valueMapList);\n            }\n\n            const limit = Math.floor(getBehaviorParam('limit'));\n            const pos = parent == null ? { x: getBehaviorParam('pos_x'), y: getBehaviorParam('pos_y') } : parent.pos;\n            const vec = new VectorUtil.Vector({ x: 0, y: 0 });\n            if (behaviorParams[behaviorParams.length - 1].name === 'vec_y') {\n                vec.xy.x = getBehaviorParam('vec_x');\n                vec.xy.y = getBehaviorParam('vec_y');\n                vec.syncFromXY();\n            } else {\n                vec.rad = getBehaviorParam('radian');\n                vec.len = getBehaviorParam('length');\n                vec.syncFromRad();\n            }\n\n            const extendList: ((self: Particle.Instance) => void)[] = [];\n            const extendMng = searchElement('extend-mng', cur.mngs);\n\n            let disappearStartRate = undefined;\n            if (extendMng != null) {\n                const mngs = (extendMng.data as FactoryUtil.NodeExtendManager).mngs;\n                const connectMng = searchElement('connect-mng', mngs);\n                if (connectMng != null) {\n                    const connects = (connectMng.data as FactoryUtil.NodeInheritConnectManager).connects;\n\n                    connects.forEach(connect => {\n                        const connector = connect.data as FactoryUtil.NodeInheritConnector;\n\n                        // 実行条件\n                        const getCondition: ((self: Particle.Instance) => boolean) = (connector.condition === 'limit') ? (self: Particle.Instance) => {\n                            return self.frame === self.limit;\n                        } : (self: Particle.Instance) => {\n                            return true;\n                        };\n                        const logicItem = connector.connectType === 'create' ?\n                            searchElement('inherit-cache-item', connector.mngs)?.data as FactoryUtil.NodeLogicItem :\n                            searchDependLogic(connector.depend);\n\n                        if (logicItem != null) {\n                            let loopCnt = 1;\n                            const iterateItem = searchElement('iterate-mng', connector.mngs);\n                            if (iterateItem != null) {\n                                const params = (iterateItem.data as FactoryUtil.NodeParamManager).params.map(param => param.data as FactoryUtil.NodeParamItem);\n                                loopCnt = convertFormulaToValue('loop_count', params, valueMapList);\n                            }\n\n                            valueMapList.push({ name: 'limit', value: limit });\n                            valueMapList.push({ name: 'vec_x', value: vec.xy.x });\n                            valueMapList.push({ name: 'vec_y', value: vec.xy.y });\n                            valueMapList.push({ name: 'radian', value: vec.rad });\n                            valueMapList.push({ name: 'length', value: vec.len });\n\n                            // フィールド関連のパラメータを追加\n                            for (let i = 0; i < loopCnt; i++) {\n\n                                // イテレータ関連のパラメータを追加\n                                let iterateValueMap: ValueMap[] = [];\n                                if (iterateItem != null) {\n                                    iterateValueMap = [\n                                        { name: 'loop_count', value: loopCnt },\n                                        { name: 'loop_iterator', value: i }\n                                    ]\n                                }\n\n                                const sendItem = searchElement('send-mng', connector.mngs)?.data as FactoryUtil.NodeParamManager;\n                                const params = sendItem.params.map(param => param.data as FactoryUtil.NodeParamItem);\n                                const sendValueMapList: ValueMap[] = params.map(item => {\n                                    return { name: item.name, value: convertFormulaToValue(item.name, params, valueMapList.concat(iterateValueMap)) }\n                                });\n                                extendList.push((self: Particle.Instance) => {\n                                    if (getCondition(self)) {\n                                        const props = createParticleRec(\n                                            logicItem,\n                                            sendValueMapList,\n                                            {\n                                                pos: { ...self.pos }\n                                            }\n                                        );\n                                        self.owner.push(new Particle.Instance(props));\n                                    }\n                                });\n                            }\n                        }\n                    });\n                }\n                const effectMng = searchElement('effect-mng', mngs);\n                if (effectMng != null) {\n                    const params = (effectMng.data as FactoryUtil.NodeParamManager).params.map(param => (param.data as FactoryUtil.NodeParamItem));\n\n                    const getEffectParam = (name: string) => {\n                        return convertFormulaToValue(name, params, valueMapList);\n                    }\n                    disappearStartRate = getEffectParam('disappear_start_rate');\n                    console.log(disappearStartRate);\n                }\n                const modulateMng = searchElement('modulate-mng', mngs);\n                if (modulateMng != null) {\n                    const params = (modulateMng.data as FactoryUtil.NodeParamManager).params.map(param => (param.data as FactoryUtil.NodeParamItem));\n\n                    const getModulateParam = (name: string) => {\n                        return convertFormulaToValue(name, params, valueMapList);\n                    }\n                    const decayLimit = getModulateParam('decay_limit');\n                    const decayRate = getModulateParam('decay_rate');\n                    const gravity = getModulateParam('gravity');\n                    extendList.push((self: Particle.Instance) => {\n                        modulate(self, {\n                            decayLimit, decayRate, gravity\n                        });\n                    });\n                }\n            }\n\n            return {\n                owner, pos, vec,\n                limit,\n                drawer: DrawUtil.createGradDrawer({\n                    radius: getVisualParam('radius'),\n                    color: DrawUtil.convertColorCodeFromRgba({\n                        r: getVisualParam('color_r'),\n                        g: getVisualParam('color_g'),\n                        b: getVisualParam('color_b'),\n                        a: getVisualParam('color_a'),\n                    }),\n                    disappearStartRate\n                }),\n                extend: extendList\n            };\n        }\n\n        const origin = (node.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeLogicItem;\n        return createParticleRec(origin, args, null);\n    }\n\n\n    const searchElement = (type: FactoryUtil.NodeType, warpList: FactoryUtil.WrapNode[]) => {\n        return warpList.find(wrap => wrap.type === type) ?? null;\n    }\n\n    const convertFormulaToValue = (name: string, params: FactoryUtil.NodeParamItem[], valueMapList: ValueMap[]): number => {\n        const formula = params.find(param => param.name === name);\n        if (formula == undefined) return 0;\n\n        const values = formula.values.map(v => {\n            if (v.type === 'direct') return Number(v.value);\n            const valueMap = valueMapList.find(m => m.name === v.value);\n            if (valueMap == undefined) return 0;\n            return valueMap.value;\n        });\n\n        let formulaStr = '';\n        let varCnt = 0;\n        formula.formulaItems.forEach((item, i) => {\n            let str = item;\n            if (item === 'var') {\n                str = values[varCnt].toString();\n                varCnt++;\n            }\n            else if (item === 'rand(') str = 'Math.random()*(';\n            formulaStr += str;\n        });\n        // console.log(formulaStr);\n        return Function(`return (${formulaStr})`)();\n    }\n\n    export const ConstantValueMap: ValueMap[] = [\n        { name: 'screen_width', value: SCREEN_WIDTH },\n        { name: 'screen_height', value: SCREEN_HEIGHT },\n        { name: 'pi', value: 3.14159265359 },\n        { name: 'radian_round', value: 3.14159265359 * 2 }\n    ];\n\n    type ModulateParam = {\n        decayRate: number;\n        decayLimit: number;\n        gravity: number;\n    }\n\n    const modulate = (self: Particle.Instance, param: ModulateParam) => {\n\n        if (self.vec.len > param.decayLimit) {\n            self.vec.len = self.vec.len * param.decayRate;\n            self.vec.syncFromRad();\n            self.vec.xy.y += param.gravity;\n            self.vec.syncFromXY();\n        }\n    }\n}\n\nexport default PreviewUtil;","import styled from \"styled-components\";\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\nimport { GlobalContext } from \"../../entry/systemEntry\";\nimport FormUtil from \"../../../utils/form/formUtiil\";\nimport TreeUtil from \"../../../utils/treeUtil\";\nimport FactoryUtil from \"../factory/factoryUtil\";\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\nimport CanvasUtil from \"../../../utils/canvasUtil\";\nimport Particle from \"../../graphic/particle\";\nimport VectorUtil from \"../../graphic/vectorUtil\";\nimport DrawUtil from \"../../graphic/drawUtil\";\nimport PreviewUtil from \"./previewUtil\";\n\nnamespace LogicPreviewFrame {\n\n    const width = 600;\n    const height = 660;\n\n    export const Component = (props: {\n        node: TreeUtil.ElementNode;\n        rootData: FactoryUtil.WrapNode;\n    }) => {\n        const { store, setStore } = useContext(GlobalContext);\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\n\n        const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\n\n        const [sceens, setSceens] = useState<string[]>([]);\n        const [frameCnt, setFrameCnt] = useState<number>(-1);\n        const [tabIndex, setTabIndex] = useState<number>(0);\n        const [cur, setCur] = useState<number>(0);\n        const [isBuild, setBuild] = useState<boolean>(false);\n        const [isPlay, setPlay] = useState<boolean>(false);\n\n        useEffect(() => {\n            if (isPlay) {\n                if (cur < frameCnt) {\n                    setTimeout(() => {\n                        setCur(cur + 1);\n                    }, 1000 / 30);\n                } else {\n                    setPlay(false);\n                    setCur(0);\n                }\n            }\n        }, [isPlay, cur]);\n\n        const getArgumentList = (): string[] => {\n            const argWrap = (props.node.children[0].data as FactoryUtil.WrapNode);\n            if (argWrap.type === 'argument-mng') {\n                return (argWrap.data as FactoryUtil.NodeArgumentManager).args.map(arg => {\n                    return (arg.data as FactoryUtil.NodeArgumentItem).name;\n                });\n            }\n            return [];\n        }\n\n        const argumentList = useMemo(() => {\n            return getArgumentList();\n        }, []);\n\n        useEffect(() => {\n            setFormList(argumentList.map(arg => {\n                return { value: '', errors: [] };\n            }));\n        }, []);\n\n        const formListJsx = useMemo(() => {\n            return formList.map((form, i) => {\n                return (\n                    <FormUtil.FormRecord\n                        key={i}\n                        titleLabel={argumentList[i]}\n                        labelWidth={250}\n                        jsx={\n                            <FormUtil.TextField\n                                width={332}\n                                isNumber\n                                checkable={form}\n                                setCheckable={(checkable) => {\n                                    form = { ...checkable };\n                                    setFormList(formList.slice());\n                                }}\n                                validates={[\n                                    {\n                                        checker: (value) => ValidateUtil.checkRequired(value),\n                                        errorType: \"required\"\n                                    }\n                                ]}\n                            />\n                        }\n                    />);\n            });\n        }, [formList]);\n\n\n        const build = () => {\n\n            setBuild(true);\n            const sceens: string[] = [];\n\n            const owner: Particle.Instance[] = [];\n\n            let i = 0;\n            do {\n                if (i === 0) {\n                    owner.push(new Particle.Instance(\n                        PreviewUtil.buildOriginProps(owner, props.node, props.rootData, formList.map((form, i) => {\n                            return { name: argumentList[i], value: Number(form.value) }\n                        }))\n                    ));\n                }\n\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\n                    ctx.font = '16pt Arial';\n                    ctx.fillStyle = '#ffffff';\n                    ctx.fillText(`${i}`, 6, 24);\n                    ctx.fillStyle = '#ffec5c';\n                    ctx.fillText(`${owner.length}`, 6, 44);\n\n                    owner.forEach(par => {\n                        par.draw(ctx);\n                    });\n\n                    ctx.save();\n                }));\n\n                // パーティクルの更新\n                for (let i = 0; i < owner.length; i++) {\n                    const particle = owner[i];\n\n                    particle.update();\n                }\n\n                // 死滅したパーティクルの削除\n                for (let i = owner.length - 1; i >= 0; i--) {\n                    const particle = owner[i];\n                    if (!particle.isLive) {\n                        owner.splice(i, 1);\n                    }\n                }\n\n                if(i > 500 || owner.length > 3000) break;\n                i++;\n            } while (owner.length > 0);\n            setFrameCnt(i);\n            setSceens(sceens);\n            setBuild(false);\n            setTabIndex(1);\n        }\n\n\n        const isInputOK = () => {\n            return formList.find(form => form.errors.length > 0) == undefined;\n        }\n        const buildTabJsx = (\n            <_Wrap>\n                <_FormDiv>\n                    {formListJsx}\n                </_FormDiv>\n                <FormUtil.ButtonRecord\n                    isCenter\n                    buttons={[\n                        {\n                            label: 'Build',\n                            isEnable: isInputOK(),\n                            callback: () => {\n                                build();\n                            }\n                        }\n                    ]}\n                />\n            </_Wrap>\n        );\n\n        const previewTabJsx = (\n            <_Wrap>\n                <_CanvasDiv>\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\n                </_CanvasDiv>\n                <_ProgressDiv ref={ref} onClick={(e) => {\n                    const clickX = e.pageX;\n                    // 要素の位置を取得\n                    const clientRect = ref.current.getBoundingClientRect();\n                    const positionX = clientRect.left + window.pageXOffset;\n\n                    // 要素内におけるクリック位置を計算\n                    const x = clickX - positionX;\n                    const rate = x / clientRect.width;\n                    setCur(Math.floor(frameCnt * rate));\n                }}>\n                    <_ProgressVal rate={100 * cur / (frameCnt - 1)} />\n                </_ProgressDiv>\n                <FormUtil.ButtonRecord\n                    isCenter\n                    buttons={[\n                        {\n                            label: '←',\n                            width: 50,\n                            isEnable: !isPlay && cur > 0,\n                            callback: () => {\n                                setCur(cur - 1);\n                            }\n                        },\n                        {\n                            label: '→',\n                            width: 50,\n                            isEnable: !isPlay && cur < sceens.length - 1,\n                            callback: () => {\n                                setCur(cur + 1);\n                            }\n                        },\n                        {\n                            label: !isPlay ? 'start' : 'Stop',\n                            callback: () => {\n                                setPlay(!isPlay);\n                            }\n                        },\n                        {\n                            label: 'reset',\n                            callback: () => {\n                                setCur(0);\n                            }\n                        },\n                    ]}\n                />\n            </_Wrap>\n        );\n\n        return (\n            <_Frame width={width} height={height}>\n                <_Main>\n                    <TabbedPane\n                        tabElements={[\n                            { name: 'Build', enable: true, cont: buildTabJsx },\n                            { name: 'Play', enable: frameCnt !== -1, cont: previewTabJsx }\n                        ]}\n                        activeNo={tabIndex}\n                        selectTabIndex={(index: number) => setTabIndex(index)}\n                    />\n                </_Main>\n            </_Frame>\n        );\n    }\n}\n\nexport default LogicPreviewFrame;\n\nconst _Frame = styled.div<{\n    width: number;\n    height: number;\n}>`\n    display: inline-block;\n    position: absolute;\n    z-index: 11;\n    top: calc(50% - ${props => props.height / 2}px);\n    left: calc(50% - ${props => props.width / 2}px);\n    width: ${props => props.width}px;\n    height: ${props => props.height}px;\n    background-color: #e7e7e7e2;\n    border: 1px solid #8f8f8f;\n    border-radius: 4px;\n    box-shadow: 10px 15px 15px #0000004b;\n`;\n\nconst _Main = styled.div<{}>`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    background-color: #4d5056df;\n`;\nconst _FormDiv = styled.div<{}>`\n    display: inline-block;\n    width: 100%;\n    height: 580px;\n    background-color: #a2c1d5df;\n`;\nconst _CanvasDiv = styled.div<{}>`\n    display: inline-block;\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\n    margin: 5px 0 0 20px;\n    background-color: #020202df;\n    border: solid 1px #fff;\n    box-sizing: border-box;\n`;\n\nconst _Wrap = styled.div<{}>`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    background-color: #aed5d8e0;\n`;\n\nconst _ProgressDiv = styled.div<{}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: 20px;\n    margin: 5px 0 0 4px;\n    background-color: #000000;\n    border: solid 1px #fff;\n    box-sizing: border-box;\n`;\nconst _ProgressVal = styled.div<{\n    rate: number;\n}>`\n    display: inline-block;\n    position: relative;\n    width: ${props => props.rate}%;\n    height: 100%;\n    /* background-color: #2fccf3; */\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\n`;\n\nconst _IMG = styled.img`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    height: 100%;\n`;\n","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport FormUtil from \"../../../../utils/form/formUtiil\";\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\nimport TreeUtil from \"../../../../utils/treeUtil\";\nimport ConfirmDialog from \"../../../dialog/confirmDialog\";\nimport { GlobalContext } from \"../../../entry/systemEntry\";\nimport { FactoryTreeContext } from \"../factoryTab\";\nimport FactoryUtil from \"../factoryUtil\";\nimport LogicPreviewFrame from \"../../preview/logicPreviewFrame\";\nimport ModifyOperations from \"./common/modifyOperations\";\n\nconst FactDetLogicItem = () => {\n    const { store, setStore } = useContext(GlobalContext);\n    const { rootData, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\n    const wrap = node.data as FactoryUtil.WrapNode;\n\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n\n    const [isConnect, isInherit, hasArgNode, hasFieldNode, hasExtendNode] = useMemo(() => {\n        const list = node.children.map(el => {\n            return (el.data as FactoryUtil.WrapNode).type;\n        });\n        const parentType = (node.parent?.data as FactoryUtil.WrapNode).type;\n        return [\n            parentType === 'connector',\n            parentType !== 'origin-mng',\n            list.includes('argument-mng'),\n            list.includes('field-mng'),\n            list.includes('extend-mng'),\n        ]\n    }, [node]);\n\n    const mappingForm = () => {\n        if (!isConnect) {\n            const param = wrap.data as FactoryUtil.NodeLogicItem;\n            setName({ ...name, value: param.name });\n        }\n    };\n\n    useEffect(() => {\n        if (wrap.data == null) {\n            setModify(true);\n        } else {\n            mappingForm();\n        }\n    }, [node, isConnect]);\n\n    return (<>\n        {isConnect ? <></> : (<>\n            <ModifyOperations.Component\n                mappingForm={mappingForm}\n                checkableFields={[name]}\n                firstRegist={() => {\n                    const param: FactoryUtil.NodeLogicItem = {\n                        name: name.value,\n                        mngs: FactoryUtil.getDefaultLogicMngs(isInherit)\n                    };\n                    param.name = name.value;\n                    wrap.data = param;\n\n                    param.mngs.forEach(mng => {\n                        const newNode = TreeUtil.createNode(mng, node);\n                        const data = (newNode.data as FactoryUtil.WrapNode);\n                        switch (data.type) {\n                            case 'visual-mng': {\n                                (data.data as FactoryUtil.NodeParamManager).params.forEach(param => {\n                                    newNode.children.push(TreeUtil.createNode(param, newNode));\n                                });\n                            } break;\n                            case 'behavior-mng': {\n                                (data.data as FactoryUtil.NodeParamManager).params.forEach(param => {\n                                    newNode.children.push(TreeUtil.createNode(param, newNode));\n                                });\n                            } break;\n                        }\n                        node.children.push(newNode);\n                    });\n                }}\n                modifyRegist={() => {\n                    const param = wrap.data as FactoryUtil.NodeLogicItem;\n                    param.name = name.value;\n                    wrap.data = param;\n                }}\n            />\n            <FormUtil.BorderPanel\n                title=\"param\"\n                innerJsx={<>\n                    <FormUtil.FormRecord\n                        titleLabel=\"Name\"\n                        jsx={\n                            <FormUtil.TextField\n                                width={200}\n                                isReadOnly={!isModify}\n                                checkable={name}\n                                setCheckable={setName}\n                                validates={[\n                                    {\n                                        checker: (value) => ValidateUtil.checkRequired(value),\n                                        errorType: \"required\"\n                                    },\n                                    {\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\n                                        errorType: \"length\"\n                                    },\n                                    {\n                                        checker: (value) => FactoryUtil.checkFieldName(value),\n                                        errorType: \"value\"\n                                    }\n                                ]}\n                            />\n                        }\n                    />\n                </>}\n            />\n        </>)}\n        <FormUtil.BorderPanel\n            title=\"element\"\n            isEnable={!isModify}\n            innerJsx={<>\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={<FormUtil.Switch\n                        label={'Argument'}\n                        width={300}\n                        isUse={hasArgNode}\n                        callback={() => {\n                            const data = (wrap.data as FactoryUtil.NodeLogicItem);\n                            if (hasArgNode) {\n                                data.mngs.splice(0, 1);\n                                node.children.splice(0, 1);\n                                setFocusNode({ ...node });\n                                invalidate();\n                            } else {\n                                const newWrap: FactoryUtil.WrapNode = {\n                                    type: 'argument-mng',\n                                    data: {\n                                        args: []\n                                    } as FactoryUtil.NodeArgumentManager\n                                }\n                                data.mngs.unshift(newWrap);\n                                const newNode = TreeUtil.createNode(newWrap, node);\n                                node.children.unshift(newNode);\n                                setFocusNode({ ...node });\n                                invalidate();\n                            }\n                        }}\n                    />}\n                />\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    isEnable={false}\n                    jsx={<FormUtil.Switch\n                        label={'Field'}\n                        width={300}\n                        isUse={hasFieldNode}\n                        callback={() => {\n                            if (hasFieldNode) {\n                            } else {\n                                const newWrap: FactoryUtil.WrapNode = {\n                                    type: 'field-mng',\n                                    data: {\n                                        args: []\n                                    } as FactoryUtil.NodeFieldManager\n                                }\n                                const data = (wrap.data as FactoryUtil.NodeLogicItem);\n                                data.mngs.push(newWrap);\n                                const newNode = TreeUtil.createNode(newWrap, node);\n                                node.children.push(newNode);\n                                setFocusNode(newNode);\n                            }\n                            setModify(true);\n                        }}\n                    />}\n                />\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Extend'}\n                            width={300}\n                            isUse={hasExtendNode}\n                            callback={() => {\n                                const data = (wrap.data as FactoryUtil.NodeLogicItem);\n                                if (hasExtendNode) {\n                                    console.log(data.mngs[data.mngs.length - 1].type);\n                                    data.mngs.splice(data.mngs.length - 1, 1);\n                                    node.children.splice(node.children.length - 1, 1);\n                                    setFocusNode({ ...node });\n                                    invalidate();\n                                } else {\n                                    const newWrap: FactoryUtil.WrapNode = {\n                                        type: 'extend-mng',\n                                        data: {\n                                            mngs: []\n                                        } as FactoryUtil.NodeExtendManager\n                                    }\n                                    data.mngs.push(newWrap);\n                                    const newNode = TreeUtil.createNode(newWrap, node);\n                                    node.children.push(newNode);\n                                    setFocusNode({ ...node });\n                                    invalidate();\n                                }\n                            }}\n                        />}\n                />\n            </>}\n        />\n        {isConnect ? <></> : (\n            <FormUtil.BorderPanel\n                title=\"operation\"\n                isEnable={!isModify}\n                innerJsx={<>\n                    {isInherit ? <></> : (\n                        <FormUtil.ButtonRecord\n                            isCenter\n                            buttons={[\n                                {\n                                    label: 'Preview',\n                                    callback: () => {\n                                        store.system.dialog = (\n                                            <LogicPreviewFrame.Component\n                                                node={node}\n                                                rootData={rootData}\n                                            />\n                                        );\n                                        setStore({ ...store });\n                                    }\n                                }\n                            ]}\n                        />\n                    )}\n                    <FormUtil.ButtonRecord\n                        isCenter\n                        buttons={[\n                            {\n                                label: 'Delete',\n                                callback: () => {\n                                    let index = -1;\n                                    node.parent?.children.forEach((n, i) => {\n                                        if (n == node) index = i;\n                                    });\n                                    node.parent?.children.splice(index, 1);\n                                    ((node.parent?.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeLogicManager).defs.splice(index, 1);\n                                    setFocusNode(node.parent as TreeUtil.ElementNode);\n                                    invalidate();\n                                }\n                            }\n                        ]}\n                    />\n                </>}\n            />\n        )}\n    </>);\n}\n\nexport default FactDetLogicItem;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../../../base/design/styles\";\nimport FormUtil from \"../../../../utils/form/formUtiil\";\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\nimport TreeUtil from \"../../../../utils/treeUtil\";\nimport PreviewUtil from \"../../preview/previewUtil\";\nimport { FactoryTreeContext } from \"../factoryTab\";\nimport FactoryUtil from \"../factoryUtil\";\nimport ModifyOperations from \"./common/modifyOperations\";\n\ntype FormProps = {\n    inputType: FormUtil.CheckableValue;\n    value: FormUtil.CheckableValue;\n};\n\nconst FactOprParam = () => {\n    const { node, setFocusNode, setModify, isModify } = useContext(FactoryTreeContext);\n    const wrap = node.data as FactoryUtil.WrapNode;\n\n    /** 式 */\n    const [formulaItems, setFormulaItems] = useState<string[]>([]);\n    /** 変数の入力フォーム */\n    const [varFormList, setVarFormList] = useState<FormProps[]>([]);\n    // const [formJsxList, setFaormJsxList] = useState<JSX.Element[]>([]);\n\n    const mappingForm = () => {\n        const param = wrap.data as FactoryUtil.NodeParamItem;\n        setFormulaItems(param.formulaItems.slice());\n        setVarFormList(param.values.map(v => {\n            return {\n                inputType: { value: v.type, errors: [] },\n                value: { value: v.value, errors: [] }\n            }\n        }));\n    };\n\n    const fieldKeyList = useMemo(() => {\n        const parentType = (node.parent?.data as FactoryUtil.WrapNode).type;\n        switch (parentType) {\n            case 'send-mng': {\n                const isIterate = (node.parent?.parent?.children[0].data as FactoryUtil.WrapNode).type === 'iterate-mng';\n                const keys: string[] = [];\n                keys.push('vec_x');\n                keys.push('vec_y');\n                keys.push('radian');\n                keys.push('length');\n                keys.push('limit');\n                if (isIterate) {\n                    keys.push('loop_count');\n                    keys.push('loop_iterator');\n                }\n                return keys;\n            }\n        }\n        return [];\n    }, [node]);\n\n    useEffect(() => {\n        mappingForm();\n    }, [node]);\n\n    /** 引数リスト */\n    const argumentList = useMemo(() => {\n        const getTargetWrap = () => {\n            switch (wrap.type) {\n                case 'visual-item':\n                case 'behavior-item': {\n                    return node.parent?.parent?.children[0].data as FactoryUtil.WrapNode;\n                }\n                case 'iterate-item': {\n                    return node.parent?.parent?.parent?.parent?.parent?.children[0].data as FactoryUtil.WrapNode;\n                }\n            }\n        }\n        const targetWrap = getTargetWrap();\n        if (targetWrap == undefined || targetWrap.type !== 'argument-mng') return [];\n\n        console.log((targetWrap.data as FactoryUtil.NodeArgumentManager).args);\n        return (targetWrap.data as FactoryUtil.NodeArgumentManager).args.map(arg => {\n            const item = arg.data as FactoryUtil.NodeArgumentItem;\n            return item.name;\n        });\n    }, [node]);\n\n    useEffect(() => {\n        let num = 0;\n        formulaItems.forEach((item) => {\n            if (item === 'var') num++;\n        });\n\n        if (varFormList.length < num) {\n            const addNum = num - varFormList.length;\n            for (let i = 0; i < addNum; i++) varFormList.push({\n                inputType: { value: 'direct', errors: [] },\n                value: { value: '', errors: [] }\n            });\n            setVarFormList(varFormList.slice());\n        } else if (varFormList.length > num) {\n            const delNum = varFormList.length - num;\n            for (let i = 0; i < delNum; i++) varFormList.splice(varFormList.length - delNum, delNum);\n            setVarFormList(varFormList.slice());\n        }\n    }, [formulaItems]);\n\n    /** 「(」の数-「)」の数 */\n    const parenthesisBalance = useMemo(() => {\n        let num = 0;\n        formulaItems.forEach((item) => {\n            if (['(', 'rand('].includes(item)) num++;\n            else if (item === ')') num--;\n        });\n        return num;\n    }, [formulaItems]);\n\n    /** 値の入力フォームのJSX */\n    const formJsxList = useMemo(() => {\n        return varFormList.map((v, i) => {\n\n            const getValueForm = (): JSX.Element => {\n                const type = v.inputType.value as FactoryUtil.ParamInputType;\n                if (type === 'direct') {\n                    return (\n                        <FormUtil.TextField\n                            marginLeft={2}\n                            checkable={v.value}\n                            isNumber\n                            isReadOnly={!isModify}\n                            width={178}\n                            setCheckable={(checkable) => {\n                                varFormList[i].value = checkable;\n                                setVarFormList(varFormList.slice());\n                            }}\n                        // validates={[\n                        //     {\n                        //         checker: (value) => value !== '0',\n                        //         errorType: \"value\"\n                        //     }\n                        // ]}\n                        />\n                    );\n                } else {\n                    let list: string[] = [];\n                    if (type === 'argument') {\n                        list = argumentList;\n                    } else if (type === 'field') {\n                        list = fieldKeyList;\n                    } else if (type === 'constant') {\n                        list = PreviewUtil.ConstantValueMap.map(item => item.name);\n                    }\n                    return (\n                        <FormUtil.Combobox\n                            marginLeft={2}\n                            checkable={v.value}\n                            width={178}\n                            isReadOnly={!isModify}\n                            setCheckable={(checkable) => {\n                                varFormList[i].value = checkable;\n                                setVarFormList(varFormList.slice());\n                            }}\n                            list={list.map(item => {\n                                return { value: item, labelText: item };\n                            })}\n                            headBlank\n                            validates={[\n                                {\n                                    checker: (value) => ValidateUtil.checkRequired(value),\n                                    errorType: \"required\"\n                                }\n                            ]}\n                        />\n                    );\n                }\n            }\n            return <FormUtil.FormRecord\n                key={i}\n                titleLabel={`var_${i}`}\n                labelWidth={90}\n                marginTop={i === 0 ? 4 : 0}\n                jsx={<>\n                    <FormUtil.Combobox\n                        checkable={v.inputType}\n                        width={142}\n                        isReadOnly={!isModify}\n                        setCheckable={(checkable) => {\n                            varFormList[i].inputType = checkable;\n                            if (isModify) {\n                                varFormList[i].value.value = checkable.value === 'direct' ? '0' : '';\n                            }\n                            setVarFormList(varFormList.slice());\n                        }}\n                        list={FactoryUtil.ParamInputTypes.map(item => {\n                            return { value: item, labelText: item };\n                        })}\n                    />\n                    {getValueForm()}\n                </>}\n            />;\n        });\n    }, [varFormList, isModify]);\n\n    const getFormulaJsx = () => {\n        let num = 0;\n        const jsxList: JSX.Element[] = [];\n        formulaItems.forEach((item) => {\n            if (jsxList.length > 0) {\n                jsxList.push(<span key={jsxList.length}>&nbsp;</span>);\n            }\n            if (item === 'var') {\n                jsxList.push(<_Var key={jsxList.length}>{`$\\{var_${num}}`}</_Var>);\n                num++;\n            } else {\n                jsxList.push(<_Sig key={jsxList.length}>{item}</_Sig>);\n            }\n        });\n        return jsxList;\n    }\n\n    const isLastVar = () => formulaItems.length > 0 && ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\n    const isFormulaOK = parenthesisBalance === 0 && varFormList.length > 0 &&\n        ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\n    const hasFormError = !isFormulaOK || varFormList.find(varForm => varForm.value.errors.length > 0) != undefined;\n\n    return (<>\n        <ModifyOperations.Component\n            mappingForm={mappingForm}\n            checkableFields={[]}\n            firstRegist={() => { }}\n            isInputOK={parenthesisBalance === 0 && !hasFormError}\n            modifyRegist={() => {\n                const data = wrap.data as FactoryUtil.NodeParamItem;\n                data.formulaItems = formulaItems.slice();\n                data.values = varFormList.map(varForm => {\n                    return {\n                        type: varForm.inputType.value as FactoryUtil.ParamInputType,\n                        value: varForm.value.value\n                    }\n                });\n            }}\n        />\n        <FormUtil.BorderPanel\n            title=\"formula\"\n            innerJsx={<>\n                <FormUtil.ButtonRecord\n                    isCenter\n                    buttons={[\n                        {\n                            label: '+',\n                            width: 50,\n                            isEnable: isModify && isLastVar(),\n                            callback: () => {\n                                formulaItems.push('+');\n                                setFormulaItems(formulaItems.slice());\n                            }\n                        },\n                        {\n                            label: '-',\n                            width: 50,\n                            isEnable: isModify && isLastVar(),\n                            callback: () => {\n                                formulaItems.push('-');\n                                setFormulaItems(formulaItems.slice());\n                            }\n                        },\n                        {\n                            label: '*',\n                            width: 50,\n                            isEnable: isModify && isLastVar(),\n                            callback: () => {\n                                formulaItems.push('*');\n                                setFormulaItems(formulaItems.slice());\n                            }\n                        },\n                        {\n                            label: '/',\n                            width: 50,\n                            isEnable: isModify && isLastVar(),\n                            callback: () => {\n                                formulaItems.push('/');\n                                setFormulaItems(formulaItems.slice());\n                            }\n                        },\n                        {\n                            label: '%',\n                            width: 50,\n                            isEnable: isModify && isLastVar(),\n                            callback: () => {\n                                formulaItems.push('%');\n                                setFormulaItems(formulaItems.slice());\n                            }\n                        },\n                        {\n                            label: '(',\n                            width: 35,\n                            isEnable: isModify && !isLastVar(),\n                            callback: () => {\n                                formulaItems.push('(');\n                                setFormulaItems(formulaItems.slice());\n                            }\n                        },\n                        {\n                            label: ')',\n                            width: 35,\n                            isEnable: isModify && isLastVar() && parenthesisBalance > 0,\n                            callback: () => {\n                                formulaItems.push(')');\n                                setFormulaItems(formulaItems.slice());\n                            }\n                        },\n                        {\n                            label: 'del',\n                            width: 60,\n                            isEnable: isModify && formulaItems.length > 0,\n                            callback: () => {\n                                formulaItems.splice(formulaItems.length - 1, 1);\n                                setFormulaItems(formulaItems.slice());\n                            }\n                        },\n                    ]}\n                />\n                <FormUtil.ButtonRecord\n                    isCenter\n                    buttons={[\n                        {\n                            label: 'var',\n                            width: 70,\n                            isEnable: isModify && !isLastVar(),\n                            callback: () => {\n                                formulaItems.push('var');\n                                setFormulaItems(formulaItems.slice());\n                            }\n                        },\n                        {\n                            label: 'rand',\n                            width: 80,\n                            isEnable: isModify && !isLastVar(),\n                            callback: () => {\n                                formulaItems.push('rand(');\n                                setFormulaItems(formulaItems.slice());\n                            }\n                        },\n                        {\n                            label: 'clear',\n                            isEnable: isModify && formulaItems.length > 0,\n                            width: 90,\n                            callback: () => {\n                                setFormulaItems([]);\n                            }\n                        },\n                    ]}\n                />\n                <_Formula\n                    isInvalid={!isFormulaOK}\n                >{getFormulaJsx()}</_Formula>\n                {formJsxList}\n            </>}\n        />\n    </>);\n}\n\nexport default FactOprParam;\n\nconst _Formula = styled.div<{\n    isInvalid: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 12px);\n    ${Styles.CSS_LABEL_MIDIUM}\n    overflow-wrap: break-word;\n    height: 100px;//calc(100% - 4px);\n    color: #585858;\n    border: solid 1px #7a7a7abf;\n    box-sizing: border-box;\n    background-color: #ffffff8b;\n    ${props => !props.isInvalid ? '' : css`\n        background-color: #ffe8628a;\n    `}\n    border-radius: 4px;\n    text-align: left;\n    padding: 0 0 0 4px;\n    vertical-align: top;\n    margin: 5px 0 0 6px;\n`;\nconst _Var = styled.span`\n    color: #e70013;\n`;\nconst _Sig = styled.span`\n    color: #3333339d;\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport FormUtil from \"../../../../utils/form/formUtiil\";\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\nimport TreeUtil from \"../../../../utils/treeUtil\";\nimport { FactoryTreeContext } from \"../factoryTab\";\nimport FactoryUtil from \"../factoryUtil\";\nimport ModifyOperations from \"./common/modifyOperations\";\n\nconst FactDetBehiviorMng = () => {\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\n    const mng = (node.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamManager;\n\n\n    /** ベクトル指定か否か */\n    const isVector = useMemo(() => {\n        const swapPos = node.children.length - 2;\n        return ((node.children[swapPos].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name === 'vec_x';\n    }, [node]);\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"element\"\n            isEnable={!isModify}\n            innerJsx={<>\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Vector method'}\n                            width={300}\n                            isEnable={!isVector}\n                            isUse={isVector}\n                            callback={() => {\n                                const swapPos = node.children.length - 2;\n                                node.children.splice(swapPos, 2);\n                                {\n                                    const wrap = FactoryUtil.createParamWrap('behavior-item',\n                                        { name: 'vec_x', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] });\n                                    mng.params.push(wrap);\n                                    node.children.push(TreeUtil.createNode(wrap, node));\n                                }\n                                {\n                                    const wrap = FactoryUtil.createParamWrap('behavior-item',\n                                        { name: 'vec_y', formulaItems: ['var'], values: [{ type: 'direct', value: '-10' }] });\n                                    mng.params.push(wrap);\n                                    node.children.push(TreeUtil.createNode(wrap, node));\n                                }\n                                invalidate();\n                                setFocusNode({ ...node });\n                            }}\n                        />\n                    }\n                />\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Direction method'}\n                            width={300}\n                            isEnable={isVector}\n                            isUse={!isVector}\n                            callback={() => {\n                                const swapPos = node.children.length - 2;\n                                node.children.splice(swapPos, 2);\n                                {\n                                    const wrap = FactoryUtil.createParamWrap('behavior-item',\n                                        { name: 'radian', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] });\n                                    mng.params.push(wrap);\n                                    node.children.push(TreeUtil.createNode(wrap, node));\n                                }\n                                {\n                                    const wrap = FactoryUtil.createParamWrap('behavior-item',\n                                        { name: 'length', formulaItems: ['var'], values: [{ type: 'direct', value: '10' }] });\n                                    mng.params.push(wrap);\n                                    node.children.push(TreeUtil.createNode(wrap, node));\n                                }\n                                invalidate();\n                                setFocusNode({ ...node });\n                            }}\n                        />\n                    }\n                />\n            </>}\n        />\n    </>);\n}\n\nexport default FactDetBehiviorMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport FormUtil from \"../../../../utils/form/formUtiil\";\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\nimport TreeUtil from \"../../../../utils/treeUtil\";\nimport { FactoryTreeContext } from \"../factoryTab\";\nimport FactoryUtil from \"../factoryUtil\";\nimport ModifyOperations from \"./common/modifyOperations\";\n\nconst FactDetVisualMng = () => {\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\n    const wrap = node.data as FactoryUtil.WrapNode;\n\n    /** ベクトル指定か否か */\n    // const isVector = useMemo(() => {\n    //     console.log(((node.children[3].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name);\n    //     return ((node.children[3].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name === 'vector-x';\n    // }, [node]);\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"element\"\n            isEnable={!isModify}\n            innerJsx={<>\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Particle Method'}\n                            width={300}\n                            isEnable={false}\n                            isUse={true}\n                            callback={() => {\n                                // node.children.splice(3, 2);\n                                // node.children.push(TreeUtil.createNode({type: 'behavior-item', data: {name: 'radius'}}, node));\n                                // node.children.push(TreeUtil.createNode({type: 'behavior-item', data: {name: 'length'}}, node));\n                                // invalidate();\n                                // setFocusNode({...node});\n                            }}\n                        />\n                    }\n                />\n            </>}\n        />\n    </>);\n}\n\nexport default FactDetVisualMng;","import { useContext } from \"react\";\nimport FormUtil from \"../../../../utils/form/formUtiil\";\nimport TreeUtil from \"../../../../utils/treeUtil\";\nimport FactoryTab, { FactoryTreeContext } from \"../factoryTab\";\nimport FactoryUtil from \"../factoryUtil\";\n\nconst FactDetInheritConnMng = () => {\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\n    const mng = (node.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeInheritConnectManager;\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"operation\"\n            innerJsx={<FormUtil.ButtonRecord\n                isCenter\n                buttons={[\n                    {\n                        label: 'Add Connector',\n                        callback: () => {\n                            const wrap: FactoryUtil.WrapNode = {\n                                type: 'connector',\n                                data: null\n                            }\n                            mng.connects.push(wrap);\n                            const newNode = TreeUtil.createNode(wrap, node);\n                            node.children.push(newNode);\n                            setFocusNode(newNode);\n                            invalidate();\n                        }\n                    }\n                ]}\n            />}\n        />\n    </>);\n}\n\nexport default FactDetInheritConnMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport FormUtil from \"../../../../utils/form/formUtiil\";\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\nimport TreeUtil from \"../../../../utils/treeUtil\";\nimport { FactoryTreeContext } from \"../factoryTab\";\nimport FactoryUtil from \"../factoryUtil\";\nimport ModifyOperations from \"./common/modifyOperations\";\n\nconst FactDetEffectMng = () => {\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\n    const wrap = node.data as FactoryUtil.WrapNode;\n\n\n    /** ベクトル指定か否か */\n    // const isVector = useMemo(() => {\n    //     console.log(((node.children[0].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name);\n    //     return ((node.children[3].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name === 'vector-x';\n    // }, [node]);\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"element\"\n            isEnable={!isModify}\n            innerJsx={<>\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Disappear Method'}\n                            width={300}\n                            isEnable={false}\n                            isUse={true}\n                            callback={() => {\n                            }}\n                        />\n                    }\n                />\n            </>}\n        />\n    </>);\n}\n\nexport default FactDetEffectMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport FormUtil from \"../../../../utils/form/formUtiil\";\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\nimport TreeUtil from \"../../../../utils/treeUtil\";\nimport { FactoryTreeContext } from \"../factoryTab\";\nimport FactoryUtil from \"../factoryUtil\";\nimport ModifyOperations from \"./common/modifyOperations\";\n\nconst FactDetModulateMng = () => {\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\n    const wrap = node.data as FactoryUtil.WrapNode;\n\n\n    /** ベクトル指定か否か */\n    // const isVector = useMemo(() => {\n    //     console.log(((node.children[0].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name);\n    //     return ((node.children[3].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name === 'vector-x';\n    // }, [node]);\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"element\"\n            isEnable={!isModify}\n            innerJsx={<>\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={\n                        <FormUtil.Switch\n                            label={'Gravity Method'}\n                            width={300}\n                            isEnable={false}\n                            isUse={true}\n                            callback={() => {\n                            }}\n                        />\n                    }\n                />\n            </>}\n        />\n    </>);\n}\n\nexport default FactDetModulateMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\nimport FormUtil from \"../../../../utils/form/formUtiil\";\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\nimport TreeUtil from \"../../../../utils/treeUtil\";\nimport { FactoryTreeContext } from \"../factoryTab\";\nimport FactoryUtil from \"../factoryUtil\";\nimport ModifyOperations from \"./common/modifyOperations\";\n\nconst FactDetInheritConnector = () => {\n    const { rootData, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\n    const wrap = node.data as FactoryUtil.WrapNode;\n\n    const [condition, setCondition] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [connectType, setConnectType] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n    const [depend, setDepend] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\n\n    const [hasIterateNode] = useMemo(() => {\n        const list = node.children.map(el => {\n            return (el.data as FactoryUtil.WrapNode).type;\n        });\n        return [\n            list.includes('iterate-mng'),\n        ]\n    }, [node, node.children.length]);\n\n    const mappingForm = () => {\n        const param = wrap.data as FactoryUtil.NodeInheritConnector;\n        setCondition({ ...condition, value: param.condition });\n        setConnectType({ ...connectType, value: param.connectType });\n        setDepend({ ...depend, value: param.depend });\n    };\n\n    useEffect(() => {\n        if (wrap.data == null) {\n            setModify(true);\n        } else {\n            mappingForm();\n        }\n    }, [node]);\n\n    const isCreate = connectType.value === 'create';\n\n    const inheritList = useMemo((): string[] => {\n        const rootNode = rootData.data as FactoryUtil.NodeRoot;\n        const inheritMng = rootNode.inheritMng.data as FactoryUtil.NodeLogicManager;\n        return inheritMng.defs.map(wrap => {\n            return (wrap.data as FactoryUtil.NodeLogicItem).name;\n        });\n    }, [node]);\n\n    const getSendParamList = (): string[] => {\n        if (!isCreate) {\n            const rootNode = rootData.data as FactoryUtil.NodeRoot;\n            const inheritMng = rootNode.inheritMng.data as FactoryUtil.NodeLogicManager;\n            const dependItem = inheritMng.defs.find(wrap => {\n                return (wrap.data as FactoryUtil.NodeLogicItem).name === depend.value;\n            });\n            if (dependItem != undefined) {\n                const argWrap = (dependItem.data as FactoryUtil.NodeLogicItem).mngs[0];\n                if (argWrap.type === 'argument-mng') {\n                    return (argWrap.data as FactoryUtil.NodeArgumentManager).args.map(arg => {\n                        return (arg.data as FactoryUtil.NodeArgumentItem).name;\n                    });\n                }\n            }\n        }\n        return [];\n    }\n\n    const setSendParams = (param: FactoryUtil.NodeInheritConnector) => {\n\n        const sendIndex = param.mngs[0].type === 'send-mng' ? 0 : 1;\n        const sendMng = param.mngs[sendIndex].data as FactoryUtil.NodeParamManager;\n        const sendNode = node.children[sendIndex];\n        sendMng.params = [];\n        sendNode.children = [];\n        getSendParamList().forEach(param => {\n            const paramWrap = FactoryUtil.createParamWrap('send-item',\n                { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\n            );\n            sendMng.params.push(paramWrap);\n            sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\n        });\n    }\n\n    const initConnectorNode = (param: FactoryUtil.NodeInheritConnector) => {\n        param.mngs = [];\n        node.children = [];\n        param.mngs.push({\n            type: 'send-mng',\n            data: {\n                params: []\n            } as FactoryUtil.NodeParamManager\n        });\n        if (isCreate) {\n            param.mngs.push({\n                type: 'inherit-cache-item',\n                data: {\n                    mngs: FactoryUtil.getDefaultLogicMngs(true)\n                } as FactoryUtil.NodeConnectInheritItem\n            });\n        }\n        wrap.data = param;\n\n        param.mngs.forEach(mng => {\n            const newNode = TreeUtil.createNode(mng, node);\n            const data = (newNode.data as FactoryUtil.WrapNode);\n            switch (data.type) {\n                case 'inherit-cache-item': {\n                    (data.data as FactoryUtil.NodeConnectInheritItem).mngs.forEach(mng => {\n                        const inheritNode = TreeUtil.createNode(mng, newNode);\n                        newNode.children.push(inheritNode);\n\n                        switch (mng.type) {\n                            case 'visual-mng': {\n                                (mng.data as FactoryUtil.NodeParamManager).params.forEach(param => {\n                                    inheritNode.children.push(TreeUtil.createNode(param, inheritNode));\n                                });\n                            } break;\n                            case 'behavior-mng': {\n                                (mng.data as FactoryUtil.NodeParamManager).params.forEach(param => {\n                                    inheritNode.children.push(TreeUtil.createNode(param, inheritNode));\n                                });\n                            } break;\n                        }\n                    });\n                } break;\n            }\n            node.children.push(newNode);\n        });\n        setSendParams(param);\n    }\n\n    return (<>\n        <ModifyOperations.Component\n            mappingForm={mappingForm}\n            checkableFields={[condition, connectType, depend]}\n            firstRegist={() => {\n                const param: FactoryUtil.NodeInheritConnector = {\n                    condition: condition.value as FactoryUtil.ConditionType,\n                    connectType: connectType.value as FactoryUtil.ConnectType,\n                    depend: depend.value,\n                    mngs: []\n                };\n                initConnectorNode(param);\n                invalidate();\n            }}\n            modifyRegist={() => {\n                const param = wrap.data as FactoryUtil.NodeInheritConnector;\n                const isChange = param.connectType !== connectType.value || param.depend !== depend.value;\n                param.condition = condition.value as FactoryUtil.ConditionType;\n                param.connectType = connectType.value as FactoryUtil.ConnectType;\n                param.depend = depend.value;\n                wrap.data = param;\n\n                if (isChange) {\n                    initConnectorNode(param);\n                }\n                invalidate();\n            }}\n        />\n        <FormUtil.BorderPanel\n            title=\"param\"\n            innerJsx={<>\n                <FormUtil.FormRecord\n                    titleLabel=\"Condition\"\n                    jsx={\n                        <FormUtil.Combobox\n                            marginLeft={2}\n                            checkable={condition}\n                            width={178}\n                            isReadOnly={!isModify}\n                            setCheckable={setCondition}\n                            list={FactoryUtil.ConditionTypes.map(item => {\n                                return { value: item, labelText: item };\n                            })}\n                            headBlank\n                            validates={[\n                                {\n                                    checker: (value) => ValidateUtil.checkRequired(value),\n                                    errorType: \"required\"\n                                }\n                            ]}\n                        />\n                    }\n                />\n                <FormUtil.FormRecord\n                    titleLabel=\"Inherit\"\n                    jsx={\n                        <FormUtil.Combobox\n                            marginLeft={2}\n                            checkable={connectType}\n                            width={178}\n                            isReadOnly={!isModify}\n                            setCheckable={(checkable) => {\n                                // createが選択されたらdependを空にする\n                                if (checkable.value === 'create') {\n                                    setDepend({ ...depend, value: '' });\n                                }\n                                setConnectType(checkable);\n                            }}\n                            list={FactoryUtil.ConnectTypes.map(item => {\n                                return { value: item, labelText: item };\n                            })}\n                            headBlank\n                            validates={[\n                                {\n                                    checker: (value) => ValidateUtil.checkRequired(value),\n                                    errorType: \"required\"\n                                }\n                            ]}\n                        />\n                    }\n                />\n                <FormUtil.FormRecord\n                    titleLabel=\"Depend\"\n                    isEnable={connectType.value === 'depend'}\n                    jsx={\n                        <FormUtil.Combobox\n                            marginLeft={2}\n                            checkable={depend}\n                            width={178}\n                            isReadOnly={!isModify}\n                            setCheckable={setDepend}\n                            list={inheritList.map(item => {\n                                return { value: item, labelText: item };\n                            })}\n                            headBlank\n                            dependency={[connectType]}\n                            validates={[\n                                {\n                                    checker: (value) => {\n                                        return connectType.value !== 'depend' || ValidateUtil.checkRequired(value);\n                                    },\n                                    errorType: \"required\"\n                                }\n                            ]}\n                        />\n                    }\n                />\n            </>}\n        />\n        <FormUtil.BorderPanel\n            title=\"element\"\n            isEnable={!isModify}\n            innerJsx={<>\n                <FormUtil.Record\n                    textAlign=\"center\"\n                    jsx={<FormUtil.Switch\n                        label={'Iterate'}\n                        width={300}\n                        isUse={hasIterateNode}\n                        callback={() => {\n                            const data = (wrap.data as FactoryUtil.NodeLogicItem);\n                            if (hasIterateNode) {\n                                data.mngs.splice(0, 1);\n                                node.children.splice(0, 1);\n                                setFocusNode({ ...node });\n                                invalidate();\n                            } else {\n                                const newWrap: FactoryUtil.WrapNode = {\n                                    type: 'iterate-mng',\n                                    data: {\n                                        params: []\n                                    } as FactoryUtil.NodeParamManager\n                                };\n\n                                data.mngs.unshift(newWrap);\n                                const newNode = TreeUtil.createNode(newWrap, node);\n                                node.children.unshift(newNode);\n\n                                const loopCountWrap = FactoryUtil.createParamWrap('iterate-item',\n                                    { name: 'loop_count', formulaItems: ['var'], values: [{ type: 'direct', value: '1' }] });\n                                (newWrap.data as FactoryUtil.NodeParamManager).params.push(loopCountWrap);\n                                newNode.children.push(TreeUtil.createNode(loopCountWrap, newNode));\n\n                                setFocusNode({ ...node });\n                                invalidate();\n                            }\n                        }}\n                    />}\n                />\n            </>}\n        />\n        <FormUtil.BorderPanel\n            title=\"operation\"\n            innerJsx={<>\n                <FormUtil.ButtonRecord\n                    isCenter\n                    buttons={[\n                        {\n                            label: 'Delete',\n                            callback: () => {\n                                let index = -1;\n                                node.parent?.children.forEach((n, i) => {\n                                    if (n == node) index = i;\n                                });\n                                node.parent?.children.splice(index, 1);\n                                ((node.parent?.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeInheritConnectManager).connects.splice(index, 1);\n                                setFocusNode(node.parent as TreeUtil.ElementNode);\n                                invalidate();\n                            }\n                        }\n                    ]}\n                />\n            </>}\n        />\n    </>);\n}\n\nexport default FactDetInheritConnector;","import { useContext } from \"react\";\nimport FormUtil from \"../../../../utils/form/formUtiil\";\nimport TreeUtil from \"../../../../utils/treeUtil\";\nimport FactoryTab, { FactoryTreeContext } from \"../factoryTab\";\nimport FactoryUtil from \"../factoryUtil\";\n\nconst FactDetSendManager = () => {\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\n    const wrap = node.data as FactoryUtil.WrapNode;\n\n    const getSendParamList = (): string[] => {\n        const connector = (node.parent?.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeInheritConnector;\n        const isCreate = connector.connectType === 'create';\n        let targetWrap: FactoryUtil.WrapNode | null = null;\n        if (!isCreate) {\n            const rootNode = rootData.data as FactoryUtil.NodeRoot;\n            const inheritMng = rootNode.inheritMng.data as FactoryUtil.NodeLogicManager;\n            const dependItem = inheritMng.defs.find(wrap => {\n                return (wrap.data as FactoryUtil.NodeLogicItem).name === connector.depend;\n            });\n            if (dependItem != undefined) targetWrap = dependItem;\n        } else {\n            targetWrap = (node.parent?.children[node.parent?.children.length - 1].data as FactoryUtil.WrapNode)\n        }\n        if (targetWrap != null) {\n            const argWrap = (targetWrap.data as FactoryUtil.NodeLogicItem).mngs[0];\n            if (argWrap.type === 'argument-mng') {\n                return (argWrap.data as FactoryUtil.NodeArgumentManager).args.map(arg => {\n                    return (arg.data as FactoryUtil.NodeArgumentItem).name;\n                });\n            }\n        }\n        return [];\n    }\n\n    const update = () => {\n        const sendParamList = getSendParamList();\n        const curSize = node.children.length;\n        const params = (wrap.data as FactoryUtil.NodeParamManager).params;\n        // 不要なパラメータを削除\n        for (let i = curSize - 1; i >= 0; i--) {\n            const name = (params[i].data as FactoryUtil.NodeParamItem).name;\n            if (!sendParamList.includes(name)) {\n                node.children.splice(i, 1);\n                params.splice(i, 1);\n            }\n        }\n        // 必要な存在しないパラメータを追加\n        const curParamList = params.map(param => {\n            return (param.data as FactoryUtil.NodeParamItem).name;\n        });\n        sendParamList.forEach(param => {\n            if (!curParamList.includes(param)) {\n                const paramWrap = FactoryUtil.createParamWrap('send-item',\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\n                );\n                params.push(paramWrap);\n                node.children.push(TreeUtil.createNode(paramWrap, node));\n            }\n        });\n    }\n\n    return (<>\n        <FormUtil.BorderPanel\n            title=\"operation\"\n            innerJsx={<FormUtil.ButtonRecord\n                isCenter\n                buttons={[\n                    {\n                        label: 'Update Params',\n                        callback: () => {\n                            update();\n                            invalidate();\n                        }\n                    }\n                ]}\n            />}\n        />\n    </>);\n}\n\nexport default FactDetSendManager;","import { type } from \"os\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../../base/design/styles\";\nimport TreeUtil from \"../../../utils/treeUtil\";\nimport Common from \"../common\";\nimport FactDetArgumentMng from \"./detail/factDetArgumentMng\";\nimport FactDetArgumentItem from \"./detail/factDetArgumentItem\";\nimport FactDetInheritMng from \"./detail/factDetInheritMng\";\nimport FactDetExtendMng from \"./detail/factDetExtendMng\";\nimport FactDetOriginMng from \"./detail/factDetOriginMng\";\nimport FactDetLogicItem from \"./detail/factDetLogicItem\";\nimport FactOprParam from \"./detail/factOprParam\";\nimport FactDetBehiviorMng from \"./detail/factDetBehiviorMng\";\nimport FactDetVisualMng from \"./detail/factDetVisualMng\";\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\nimport FactDetInheritConnMng from \"./detail/factDetInheritConnMng\";\nimport FormUtil from \"../../../utils/form/formUtiil\";\nimport FactDetEffectMng from \"./detail/factDetEffectMng\";\nimport FactDetModulateMng from \"./detail/factDetModulateMng\";\nimport FactDetInheritConnector from \"./detail/factDetInheritConnector\";\nimport FactDetSendManager from \"./detail/factDetSendManager\";\n\nnamespace FactoryUtil {\n\n    export type DetailArgs = {\n        rootData: FactoryUtil.WrapNode;\n        node: TreeUtil.ElementNode;\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\n        invalidate: () => void;\n        isModify: boolean;\n        setModify: (isModify: boolean) => void;\n        setRootData: React.Dispatch<React.SetStateAction<WrapNode>>;\n        // treeDisable: boolean;\n        // setTreeDisable: (treeDisable: boolean) => void;\n    }\n\n    /**\n     * 変数名チェック\n     * @param str 検証する文字列\n     * @returns 判定結果\n     */\n    export const checkFieldName = (str: string) => {\n        const list = '0123456789abcdefghijklmnopqrstuvwxyz_';\n        return !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].\n            includes(str.substring(0, 1)) && ValidateUtil.checkIncludesChars(str, list);\n    }\n\n    export type NodeType =\n        'root' |\n        'origin-mng' |\n        'inherit-mng' |\n        'origin-item' |\n        'inherit-item' |\n        'argument-mng' |\n        'argument-item' |\n        'visual-mng' |\n        'visual-item' |\n        'behavior-mng' |\n        'behavior-item' |\n        'extend-mng' |\n        'field-mng' |\n        'inherit-mng' |\n        'modulate-mng' |\n        'modulate-item' |\n        'connect-mng' |\n        'connector' |\n        'inherit-cache-item' |\n        'effect-mng' |\n        'effect-item' |\n        'iterate-mng' |\n        'iterate-item' |\n        'send-mng' |\n        'send-item'\n        ;\n\n    export const ArgTypes = ['int', 'float', 'color'] as const;\n    export type ArgumentType = typeof ArgTypes[number];\n\n\n    export const ParamInputTypes = ['direct', 'constant', 'argument', 'field'] as const;\n    export type ParamInputType = typeof ParamInputTypes[number];\n\n    export type ParamProps = {\n        type: ParamInputType;\n        value: string;\n    }\n\n    export type WrapNode = {\n        type: NodeType;\n        data: any;\n    }\n\n    export type NodeRoot = {\n        // caches: Common.Cache[];\n        seedMng: WrapNode;\n        inheritMng: WrapNode;\n    }\n    export type NodeLogicManager = {\n        defs: WrapNode[];\n    }\n    export type NodeLogicItem = {\n        name: string;\n        mngs: WrapNode[];\n    }\n    export type NodeConnectInheritItem = {\n        mngs: WrapNode[];\n    }\n    export type NodeParamManager = {\n        params: WrapNode[];\n    }\n    // export type NodeVisualManager = {\n    //     params: WrapNode[];\n    // }\n    export type NodeParamItem = {\n        name: string;\n        formulaItems: string[];\n        values: ParamProps[];\n\n    }\n\n    export type NodeArgumentItem = {\n        name: string;\n        valueType: ArgumentType;\n    }\n    export type NodeArgumentManager = {\n        args: WrapNode[];\n    }\n    export type NodeFieldManager = {\n        args: WrapNode[];\n    }\n\n    export type NodeExtendManager = {\n        mngs: WrapNode[];\n    }\n\n    // export type NodeInheritManager = {\n    //     defs: WrapNode[];\n    // }\n    export type NodeInheritConnectManager = {\n        connects: WrapNode[];\n    }\n    export type NodeInheritConnector = {\n        condition: ConditionType;\n        connectType: ConnectType;\n        depend: string;\n        mngs: WrapNode[];\n    }\n\n    export const createParamWrap = (type: NodeType, paramDataList: NodeParamItem): WrapNode => {\n        return { type: type, data: paramDataList };\n    }\n    export const createParamWrapList = (type: NodeType, paramDataList: NodeParamItem[]): WrapNode[] => {\n        return paramDataList.map(data => {\n            return { type: type, data: data };\n        });\n    }\n\n    export const createVisualParams = (): WrapNode[] => {\n        return createParamWrapList('visual-item', [\n            { name: 'radius', formulaItems: ['var'], values: [{ type: 'direct', value: '20' }] },\n            { name: 'color_r', formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\n            { name: 'color_g', formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\n            { name: 'color_b', formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\n            { name: 'color_a', formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\n        ]);\n    }\n\n    export const createBehaviorParams = (isInherit: boolean): WrapNode[] => {\n        const list: NodeParamItem[] = [];\n        list.push({ name: 'limit', formulaItems: ['var'], values: [{ type: 'direct', value: '30' }] });\n        if (!isInherit) {\n            list.push({ name: 'pos_x', formulaItems: ['var', '/', 'var'], values: [{ type: 'constant', value: 'screen_width' }, { type: 'direct', value: '2' }] });\n            list.push({ name: 'pos_y', formulaItems: ['var', '+', 'var'], values: [{ type: 'constant', value: 'screen_height' }, { type: 'direct', value: '20' }] });\n        }\n        list.push({ name: 'vec_x', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] });\n        list.push({ name: 'vec_y', formulaItems: ['var'], values: [{ type: 'direct', value: '-10' }] });\n        return createParamWrapList('behavior-item', list);\n    }\n\n    export const getDefaultLogicMngs = (isInherit: boolean): WrapNode[] => {\n        return [\n            {\n                type: 'visual-mng',\n                data: {\n                    params: FactoryUtil.createVisualParams()\n                } as FactoryUtil.NodeParamManager\n            },\n            {\n                type: 'behavior-mng',\n                data: {\n                    params: FactoryUtil.createBehaviorParams(isInherit)\n                } as FactoryUtil.NodeParamManager\n            }\n        ];\n    }\n\n    // export const createExtendMngs = (): WrapNode[] => {\n    //     return [\n    //         {\n    //             type: 'inherit-mng',\n    //             data: {\n    //             } as NodeInheritMng\n    //         },\n    //         {\n    //             type: 'trace-mng',\n    //             data: {\n    //             } as NodeInheritMng\n    //         },\n    //         {\n    //             type: 'modulate-mng',\n    //             data: {\n    //             } as NodeInheritMng\n    //         },\n    //     ];\n    // }\n\n    export const getInitialData = (): WrapNode => {\n        return {\n            type: 'root',\n            data: {\n                seedMng: {\n                    type: 'origin-mng',\n                    data: {\n                        defs: []\n                    } as NodeLogicManager\n                } as WrapNode,\n                inheritMng: {\n                    type: 'inherit-mng',\n                    data: {\n                        defs: []\n                    } as NodeLogicManager\n                } as WrapNode\n            } as NodeRoot\n        }\n    }\n\n    const COLOR_ROOT = '#a1a1a1';\n    const COLOR_METHOD = '#cca67b';\n    const COLOR_MNG = '#37a2bd';\n    const COLOR_LIST = '#b85f5f';\n    const COLOR_ITEM = '#ae628c';\n    const COLOR_PARAM = '#8dae62';\n\n    export const getNodeJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\n        const wrap = node.data as WrapNode;\n        switch (wrap.type) {\n            case 'root': {\n                return <_Category backgroundColor={COLOR_ROOT}>Logic</_Category>;\n            }\n            case 'origin-mng': {\n                return <_Category backgroundColor={COLOR_METHOD}>Origin Manager</_Category>;\n            }\n            case 'inherit-mng': {\n                return <_Category backgroundColor={COLOR_METHOD}>Inherit Manager</_Category>;\n            }\n            case 'visual-mng': {\n                return <_Category backgroundColor={COLOR_MNG}>Visual</_Category>;\n            }\n            case 'extend-mng': {\n                return <_Category backgroundColor={COLOR_MNG}>Extend</_Category>;\n            }\n            case 'modulate-mng': {\n                return <_Category backgroundColor={COLOR_MNG}>Modulate</_Category>;\n            }\n            case 'origin-item': {\n                let name = '...';\n                if (wrap.data != null) {\n                    const data = wrap.data as NodeLogicItem;\n                    name = data.name;\n                }\n                return <>\n                    <_Category backgroundColor={COLOR_ITEM}>Origin</_Category>\n                    <_EditableValue>{name}</_EditableValue>\n                </>;\n            }\n            case 'inherit-item': {\n                let name = '...';\n                if (wrap.data != null) {\n                    const data = wrap.data as NodeLogicItem;\n                    name = data.name;\n                }\n                return <>\n                    <_Category backgroundColor={COLOR_ITEM}>Inherit</_Category>\n                    <_EditableValue>{name}</_EditableValue>\n                </>;\n            }\n            case 'inherit-cache-item': {\n                return <_Category backgroundColor={COLOR_MNG}>Inherit</_Category>;\n            }\n            case 'argument-mng': {\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\n            }\n            case 'behavior-mng': {\n                return <_Category backgroundColor={COLOR_MNG}>Behavior</_Category>;\n            }\n            case 'connect-mng': {\n                return <_Category backgroundColor={COLOR_LIST}>Connect Manager</_Category>;\n            }\n            case 'connector': {\n                let detailJsx = <span>...</span>;\n                if (wrap.data != null) {\n                    const data = wrap.data as NodeInheritConnector;\n                    detailJsx = <span>{`${data.condition} ${data.connectType}`}</span>;\n                    if (data.connectType === 'depend') {\n                        detailJsx = <span>{`${data.condition} ${data.connectType}`}: <_Field>{data.depend}</_Field></span>;\n                    }\n                }\n                return (<>\n                    <_Category backgroundColor={COLOR_ITEM}>Connector</_Category>\n                    {detailJsx == undefined ? <></> : <_EditableValue>{detailJsx}</_EditableValue>}\n                </>);\n            }\n            case 'effect-mng': {\n                return <_Category backgroundColor={COLOR_MNG}>Effect</_Category>;\n            }\n            case 'modulate-mng': {\n                return <_Category backgroundColor={COLOR_MNG}>Modulate</_Category>;\n            }\n            case 'visual-item':\n            case 'send-item':\n            case 'iterate-item':\n            case 'effect-item':\n            case 'modulate-item':\n            case 'behavior-item': {\n                const data = wrap.data as NodeParamItem;\n                let result: JSX.Element[] = [];\n                let varCnt = 0;\n                data.formulaItems.forEach((formula, i) => {\n                    let str = <_Signature key={i}>{formula}</_Signature>;\n                    if (formula === 'var') {\n                        const v = data.values[varCnt];\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\n                        else str = <span key={i}>{v.value}</span>;\n                        varCnt++;\n                    }\n                    result.push(str);\n                });\n                return <>\n                    <_Category backgroundColor={COLOR_PARAM}>Param<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\n                    <_EditableValue>{result}</_EditableValue>\n                </>;\n            }\n            case 'argument-item': {\n                let detailJsx = <span>...</span>;\n                if (wrap.data != null) {\n                    const data = wrap.data as NodeArgumentItem;\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.valueType})</_ValueType></span>\n                }\n                return <>\n                    <_Category backgroundColor={COLOR_ITEM}>Argument<_Detail></_Detail></_Category>\n                    <_EditableValue>{detailJsx}</_EditableValue>\n                </>;\n            }\n            case 'iterate-mng': {\n                return <_Category backgroundColor={COLOR_MNG}>Iterate</_Category>;\n            }\n            case 'send-mng': {\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\n            }\n        }\n        return <_Category backgroundColor={'#ffffff'}>XXXXX</_Category>;\n    }\n\n    export const getTypeName = (node: TreeUtil.ElementNode | null) => {\n        if (node == null) return '';\n        const type = (node.data as WrapNode).type;\n        switch (type) {\n            case 'root': return 'Root';\n            case 'origin-mng': return 'Origin Manager';\n            case 'inherit-mng': return 'Inherit Manager';\n            case 'origin-item': return 'Origin Item';\n            case 'inherit-item': return 'Inherit Item';\n            case 'argument-mng': return 'Argument Manager';\n            case 'visual-mng': return 'Visual Manager';\n            case 'behavior-item': return 'Behavior Item';\n            case 'visual-item': return 'Visual Item';\n            case 'argument-item': return 'Argument Item';\n            case 'extend-mng': return 'Extend Manager';\n            case 'behavior-mng': return 'Behivior Manager';\n            case 'connect-mng': return 'Inherit Connect Manager';\n            case 'connector': return 'Inherit Connector';\n            case 'inherit-cache-item': return 'Inherit Cache Item';\n            case 'effect-mng': return 'Effect Manager';\n            case 'modulate-mng': return 'Modulate Manager';\n            case 'iterate-mng': return 'Iterate Manager';\n            case 'send-mng': return 'Send Manager';\n            case 'iterate-item': return 'Iterate Item';\n            case 'send-item': return 'Send Item';\n            case 'modulate-item': return 'Modulate Item';\n            case 'effect-item': return 'Effect Item';\n        }\n    }\n\n    export const getDetailComponent = (node: TreeUtil.ElementNode | null) => {\n        if (node == null) return <></>;\n        const type = (node.data as WrapNode).type;\n        switch (type) {\n            case 'root': return <></>;\n            case 'origin-mng': return <FactDetOriginMng />;\n            case 'inherit-mng': return <FactDetInheritMng />;\n            case 'origin-item': return <FactDetLogicItem />;\n            case 'inherit-item': return <FactDetLogicItem />;\n            case 'argument-mng': return <FactDetArgumentMng />;\n            case 'argument-item': return <FactDetArgumentItem />;\n            case 'visual-mng': return <FactDetVisualMng />;\n            case 'extend-mng': return <FactDetExtendMng />;\n            case 'behavior-mng': return <FactDetBehiviorMng />;\n            case 'connect-mng': return <FactDetInheritConnMng />;\n            case 'effect-mng': return <FactDetEffectMng />;\n            case 'modulate-mng': return <FactDetModulateMng />;\n            case 'connector': return <FactDetInheritConnector />;\n            case 'inherit-cache-item': return <FactDetLogicItem />;\n            case 'send-mng': return <FactDetSendManager />;\n            case 'iterate-item':\n            case 'visual-item':\n            case 'behavior-item':\n            case 'effect-item':\n            case 'modulate-item':\n            case 'send-item': return <FactOprParam />;\n        }\n    }\n\n    // export type ConstantProps = {\n    //     name: string;\n    //     value: number;\n    // }\n    // export const ConstantList: ConstantProps[] = [\n    //     { name: 'screen_width', value: 550 },\n    //     { name: 'screen_height', value: 550 },\n    //     { name: 'pi', value: 3.14159265359 },\n    //     { name: 'radian_round', value: 3.14159265359 * 2 }\n    // ];\n\n    export const ConnectTypes = ['create', 'depend'] as const;\n    export type ConnectType = typeof ConnectTypes[number];\n\n    export const ConditionTypes = ['sustain', 'limit'] as const;\n    export type ConditionType = typeof ConditionTypes[number];\n\n}\n\nexport default FactoryUtil;\n\nconst _Category = styled.div<{\n    backgroundColor: string;\n}>`\n    ${Styles.CSS_LABEL_MIDIUM}\n    display: inline-block;\n    position: relative;\n    background-color: ${props => props.backgroundColor};\n    /* width: 100%; */\n    border-radius: 4px 0 0 4px;\n    margin: 5px 0 0 0;\n    padding: 0 10px;\n    border: solid 1px #000000d2;\n`;\nconst _Detail = styled.span`\n    color: #000b69bd;\n`;\n\nconst _EditableValue = styled.div`\n    ${Styles.CSS_LABEL_MIDIUM}\n    display: inline-block;\n    position: relative;\n    background-color: #0c0c0c;\n    color: #ebebeb;\n    border-radius: 0 4px 4px 0;\n    /* width: 100%; */\n    margin: 5px 0 0 0;\n    padding: 0 10px;\n`;\nconst _ValueType = styled.span`\n    color: #fff9d6b9;\n`;\nconst _Signature = styled.span`\n    color: #ffffff78;\n`;\nconst _Field = styled.span`\n    color: #ff2d2d;\n`;\nconst _Formula = styled.div`\n    ${Styles.CSS_LABEL_MIDIUM}\n    display: inline-block;\n    position: relative;\n    background-color: #ffffffd1;\n    color: #790000;\n    /* border-radius: 0 4px 4px 0; */\n    /* width: 100%; */\n    margin: 5px 0 0 4px;\n    padding: 0 10px;\n`;","import { type } from \"os\";\nimport { createContext, useCallback, useEffect, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../../base/design/styles\";\nimport FormUtil from \"../../../utils/form/formUtiil\";\nimport TreeUtil from \"../../../utils/treeUtil\";\nimport Common from \"../common\";\nimport FactoryUtil from \"./factoryUtil\";\n\n\nexport const FactoryTreeContext = createContext({} as FactoryUtil.DetailArgs);\n\nconst FactoryTab = () => {\n\n    const [rootData, setRootData] = useState(FactoryUtil.getInitialData());\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\n    // const [treeDisable, setTreeDisable] = useState(false);\n    const [isModify, setModify] = useState<boolean>(false);\n    const [invalidate, setInvalidate] = useState<any>(null);\n\n    const getChildren = (wrapNode: FactoryUtil.WrapNode): TreeUtil.DataNode[] => {\n        switch (wrapNode.type) {\n            case 'root': {\n                const node = wrapNode.data as FactoryUtil.NodeRoot;\n                return [\n                    {\n                        data: node.seedMng,\n                        children: getChildren(node.seedMng)\n                    },\n                    {\n                        data: node.inheritMng,\n                        children: getChildren(node.inheritMng)\n                    }\n                ];\n            }\n            case 'origin-mng':\n            case 'inherit-mng': {\n                const node = wrapNode.data as FactoryUtil.NodeLogicManager;\n                return node.defs.map(def => {\n                    const treeNode: TreeUtil.DataNode = {\n                        data: def,\n                        children: getChildren(def)\n                    };\n                    return treeNode;\n                });\n            }\n            case 'origin-item': {\n                const node = wrapNode.data as FactoryUtil.NodeLogicItem;\n                return node.mngs.map(mng => {\n                    const treeNode: TreeUtil.DataNode = {\n                        data: mng,\n                        children: getChildren(mng)\n                    };\n                    return treeNode;\n                });\n            }\n        }\n        return [];\n    }\n\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\n        return {\n            data: rootData,\n            children: getChildren(rootData)\n        }\n    }, [rootData]);\n\n    return (\n        <_Wrap\n            tabIndex={0}\n        >\n            <_TreeDiv>\n                <_TreeHead>\n                        <FormUtil.ButtonRecord\n                            isCenter\n                            buttons={[\n                                {\n                                    label: 'Save',\n                                    callback: () => {\n                                    }\n                                },\n                                {\n                                    label: 'Load',\n                                    callback: () => {\n                                    }\n                                }\n                            ]}\n                        />\n                </_TreeHead>\n                <_TreeBody>\n                    <TreeUtil.Frame\n                        rootDataNode={rootDataNode}\n                        clickEvent={(node: TreeUtil.ElementNode) => {\n                            setFocusNode(node);\n                        }}\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\n                            // console.log(focusNode);\n                            // console.log(node);\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\n                            return FactoryUtil.getNodeJsx(node, focusNode?.data == node.data)\n                        }}\n                        invalidate={invalidate}\n                        focusNode={focusNode}\n                        isDisable={isModify}\n                    />\n                </_TreeBody>\n            </_TreeDiv>\n            <_PropsDiv>\n                <_DetailDiv>\n                    <_DetailHeader>\n                        <_DetailHeaderLabel>{FactoryUtil.getTypeName(focusNode)}</_DetailHeaderLabel>\n                    </_DetailHeader>\n                    <FactoryTreeContext.Provider value={{\n                        rootData,\n                        node: focusNode as TreeUtil.ElementNode,\n                        setFocusNode: setFocusNode,\n                        invalidate: () => { setInvalidate({}) },\n                        isModify,\n                        setModify,\n                        // treeDisable,\n                        setRootData,\n                        // setTreeDisable\n                    }}>\n                        <_DetailMainDiv>{FactoryUtil.getDetailComponent(focusNode)}</_DetailMainDiv>\n                    </FactoryTreeContext.Provider>\n                </_DetailDiv>\n            </_PropsDiv>\n        </_Wrap >\n    );\n}\n\nexport default FactoryTab;\n\nconst PROPS_DIV_WIDTH = 460;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    background-color: #6c8186;\n    width: 100%;\n    height: 100%;\n`;\n\nconst _TreeDiv = styled.div`\n    display: inline-block;\n    position: relative;\n    background-color: #d5d4d87b;\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\n    height: 100%;\n    vertical-align: top;\n`;\n\nconst _TreeHead = styled.div`\n    display: inline-block;\n    position: relative;\n    /* background-color: #d5d4d8; */\n    width: 100%;\n    height: 40px;\n`;\n\nconst _TreeBody = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    background-color: #7fbdb47a;\n    height: calc(100% - 40px);\n`;\n\nconst _PropsDiv = styled.div`\n    display: inline-block;\n    /* position: relative; */\n    background-color: #9fa9b6;\n    width: ${PROPS_DIV_WIDTH}px;\n    height: 100%;\n    vertical-align: top;\n    box-sizing: border-box;\n`;\n\nconst _DetailDiv = styled.div`\n    display: inline-block;\n    /* position: relative; */\n    background-color: #c0c9c4;\n    width: calc(100% - 4px);\n    height: calc(100% - 4px);\n    margin: 2px 0 0 2px;\n`;\nconst _DetailHeader = styled.div`\n    display: inline-block;\n    /* position: relative; */\n    /* background-color: #b4b29e; */\n    width: 100%;\n    height: 40px;\n`;\nconst _DetailHeaderLabel = styled.div`\n    ${Styles.CSS_LABEL_MIDIUM}\n    color: #a10000;\n    /* background-color: #bbd0d3; */\n    border: solid 1px #a10000;\n    box-sizing: border-box;\n    width: calc(100% - 20px);\n    margin: 5px 0 0 10px;\n    border-radius: 4px;\n`;\n\nconst _DetailMainDiv = styled.div`\n    width: calc(100% - 8px);\n    height: calc(100% - 44px);\n    margin: 0 0 0 4px;\n    background-color: #cfd3cc;\n    border: solid 1px #0026a1;\n    box-sizing: border-box;\n    border-radius: 4px;\n`;\n\nconst _Blind = styled.div<{\n    isVisible: boolean;\n}>`\n    display: inline-block;\n    ${props => props.isVisible ? '' : css`\n        display: none;\n    `}\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 10;\n    background-color: #0012616c;\n    width: 100%;\n    height: 100%;\n`;","\nconst ManageTab = () => {\n\n    return (<></>);\n}\n\nexport default ManageTab;","import { type } from \"os\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles from \"../../../base/design/styles\";\nimport TreeUtil from \"../../../utils/treeUtil\";\nimport Common from \"../common\";\n\nnamespace TimelineUtil {\n\n\n    export type NodeType =\n        'root' |\n        'bv'\n        ;\n\n    export type WrapNode = {\n        type: NodeType;\n        data: any;\n    }\n\n    export type NodeRoot = {\n        // caches: Common.Cache[];\n    }\n\n    export const getInitialData = (): WrapNode => {\n        return {\n            type: 'root',\n            data: {}\n        }\n    }\n\n    export const getNodeJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\n        const wrap = node.data as WrapNode;\n        switch(wrap.type) {\n            case 'root': {\n                return <_Wrap>Timeline</_Wrap>;\n            }\n        }\n        return <_Wrap>XXXXX</_Wrap>;\n    }\n}\n\nexport default TimelineUtil;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    background-color: #37a2bd;\n    width: 100%;\n    height: 100%;\n    ${Styles.CSS_LABEL_MIDIUM}\n`;","import { type } from \"os\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport TreeUtil from \"../../../utils/treeUtil\";\nimport Common from \"../common\";\nimport TimelineUtil from \"./timelineUtil\";\n\nconst TimelineTab = () => {\n\n\n    const [rootData, setRootData] = useState(TimelineUtil.getInitialData());\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\n    const [treeDisable, setTreeDisable] = useState(false);\n    const [invalidate, setInvalidate] = useState<any>(null);\n\n\n    const getChildnre = (wrapNode: TimelineUtil.WrapNode): TreeUtil.DataNode[] => {\n        const list: TreeUtil.DataNode[] = [];\n        const add = (type: TimelineUtil.NodeType, nodeData: any) => {\n\n        }\n        switch (wrapNode.type) {\n            case 'root': {\n                const node = wrapNode.data as TimelineUtil.NodeRoot;\n                // add()\n            } break;\n        }\n        return list;\n    }\n\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\n        return {\n            data: rootData,\n            children: getChildnre(rootData)\n        }\n    }, []);\n\n    return (\n        <_Wrap\n            tabIndex={0}\n        >\n            <_TreeDiv>\n                <_TreeHead>\n                    {/* <HierarchyNavi cur={focusNode}/> */}\n                </_TreeHead>\n                <_TreeBody>\n                    <TreeUtil.Frame\n                        rootDataNode={rootDataNode}\n                        clickEvent={(node: TreeUtil.ElementNode) => {\n                            // setFocusNode(node);\n                        }}\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\n                            // console.log(focusNode);\n                            // console.log(node);\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\n                            return TimelineUtil.getNodeJsx(node, focusNode?.data == node.data)\n                        }}\n                        invalidate={invalidate}\n                        focusNode={focusNode}\n                        isDisable={false}\n                    />\n                </_TreeBody>\n            </_TreeDiv>\n            <_PropsDiv>\n                {/* <ThemaTreeContext.Provider value={{\n                        node: focusNode as TreeUtil.ElementNode,\n                        setFocusNode: setFocusNode,\n                        invalidate: () => { setInvalidate({}) },\n                        setBackingWnd,\n                        dispatcher,\n                        treeDisable,\n                        setThamaData,\n                        setTreeDisable\n                    }}>\n                        <TabbedPane\n                            tabElements={[\n                                {\n                                    name: 'base', disable: true, cont: tabInner(0, <BaseFormTab\n                                        themaList={store.systemState.themaList}\n                                        addThema={(thema: ThemaUtil.LevelBase) => {\n                                            const themaList = store.systemState.themaList;\n                                            themaList.push(JSON.parse(JSON.stringify(thema)));\n                                            dispatcher.system.setState({ ...store.systemState, themaList });\n                                        }}\n                                    />)\n                                },\n                                { name: 'Method', disable: true, cont: tabInner(1, <MethFormTab />) },\n                                { name: 'Sustain', disable: true, cont: tabInner(2, <SustFormTab />) },\n                                { name: 'Pattern', disable: true, cont: tabInner(3, <PattFormTab />) },\n                                { name: 'Attribute', disable: true, cont: tabInner(4, <AttrFormTab isPattern={focusNode?.depth === 4} />) },\n                                { name: 'Root', disable: true, cont: tabInner(5, <RootFormTab />) },\n                                { name: 'voicing', disable: true, cont: tabInner(6, <VoicFormTab isPattern={focusNode?.depth === 6} />) },\n                            ]}\n                            tabRecordNum={2}\n                            activeNo={activeNo}\n                            selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\n                        />\n                    </ThemaTreeContext.Provider> */}\n            </_PropsDiv>\n            {/* <_Blind isVisible={isBackingWnd}>\n                    <_Contents>{!isBackingWnd ? <></> : <BackingEditorFrame />}</_Contents>\n                </_Blind> */}\n        </_Wrap >\n    );\n}\n\nexport default TimelineTab;\n\n\nconst PROPS_DIV_WIDTH = 460;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    background-color: #c3d8dd;\n    width: 100%;\n    height: 100%;\n`;\n\nconst _TreeDiv = styled.div`\n    display: inline-block;\n    position: relative;\n    /* background-color: #d5d4d8; */\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\n    height: 100%;\n    vertical-align: top;\n`;\n\nconst _TreeHead = styled.div`\n    display: inline-block;\n    position: relative;\n    /* background-color: #d5d4d8; */\n    width: 100%;\n    height: 40px;\n`;\n\nconst _TreeBody = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    height: calc(100% - 40px);\n`;\n\nconst _PropsDiv = styled.div`\n    display: inline-block;\n    /* position: relative; */\n    /* background-color: #532fc0; */\n    width: ${PROPS_DIV_WIDTH}px;\n    height: 100%;\n    vertical-align: top;\n    box-sizing: border-box;\n    padding: 6px 6px 6px 0;\n`;\n\nconst _TabContWrap = styled.div`\n    display: inline-block;\n    /* position: relative; */\n    background-color: #c0c9c4;\n    width: calc(100% - 4px);\n    height: calc(100% - 4px);\n    margin: 2px 0 0 2px;\n`;\n\nconst _Blind = styled.div<{\n    isVisible: boolean;\n}>`\n    display: inline-block;\n    ${props => props.isVisible ? '' : css`\n        display: none;\n    `}\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 10;\n    background-color: #0012616c;\n    width: 100%;\n    height: 100%;\n`;\n\nconst _Contents = styled.div<{\n}>`\n    display: inline-block;\n    width: 630px;\n    /* height: 400px; */\n    background-color: #a3a3a3;\n    /* opacity: 0.9; */\n    overflow: hidden;\n`;","import { useContext, useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\nimport { GlobalContext } from \"../entry/systemEntry\";\nimport FactoryTab from \"./factory/factoryTab\";\nimport ManageTab from \"./manage/manageTab\";\nimport PreviewTab from \"./manage/manageTab\";\nimport TimelineTab from \"./timeline/timelineTab\";\nimport Timeline from \"./timeline/timelineTab\";\n\n\nconst CreateChannel = () => {\n\n    const { store, setStore } = useContext(GlobalContext);\n\n    return (\n        <_Wrap>\n            <TabbedPane\n                tabElements={[\n                    { name: 'Manage', enable: false, cont: <ManageTab /> },\n                    { name: 'Launcher', enable: false, cont: <TimelineTab /> },\n                    { name: 'Logic', enable: true, cont: <FactoryTab /> }\n                ]}\n                activeNo={2}\n            // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\n            />\n        </_Wrap>\n    );\n}\nexport default CreateChannel;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\n    background-color: transparent;\n    /* background-color: #c3d8dd6f; */\n    /* border: solid 1px black;\n    border-radius: 5px; */\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\n`;\n\n","import { Redirect } from \"react-router-dom\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport { useContext, useEffect } from \"react\";\nimport { GlobalContext } from \"./systemEntry\";\n\nconst DirectView = (props: {\n    hashKey: string;\n}) => {\n\n    const { store, setStore } = useContext(GlobalContext);\n    const conteseq = DataUtil.getDecryptionedScoreSeq(props.hashKey);\n\n    // const setScoreData = (owner: string, dispnam: string, data: ScoreData) => {\n    //     store.scoreState.focusIndex = 2;\n    //     store.scoreState.distIndex = store.scoreState.focusIndex;\n    //     dispatcher.score.setScoreState({ ...store.scoreState });\n    //     // dispatcher.score.setScoreTabIndex(1);\n    //     dispatcher.score.setScoreData(data);\n    //     // キャッシュの更新\n    //     store.scoreData = data;\n    //     CacheUtil.updateHarmonizeCache(store, dispatcher);\n    //     store.systemState.mainChannelIndex = 5;\n    //     store.systemState.scoreTabIndex = 0;\n    //     store.systemState.directScore = {\n    //         owner, name: dispnam\n    //     };\n    //     dispatcher.system.setState(store.systemState);\n    // };\n\n    useEffect(() => {\n        // DataUtil.findScore(conteseq).then(resList => {\n        //     if (resList.length > 0) {\n        //         const source = resList[0]['data'];\n        //         const owner = resList[0]['owner'];\n        //         const dispnam = resList[0]['dispnam'];\n        //         const text = DataUtil.unZip(source);\n        //         setScoreData(owner, dispnam, JSON.parse(text));\n        //     }\n        // });\n    }, []);\n    // if (store.systemState.directScore == null) {\n    //     return <></>;\n    // } else {\n    //     return <Redirect to=\"/\" />;\n    //     // return <MainFrame />;\n    // }\n    return <Redirect to=\"/\" />;\n}\n\nexport default DirectView;","import { Redirect } from \"react-router-dom\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport { useContext, useEffect } from \"react\";\nimport { GlobalContext } from \"./systemEntry\";\n\nconst DirectLogin = (props: {\n    hashKey: string;\n}) => {\n\n    const { store, setStore } = useContext(GlobalContext);\n\n    useEffect(() => {\n        const seq = DataUtil.getDecryptionedUserSeq(props.hashKey);\n        console.log(seq);\n        DataUtil.findUserInfoFromSeq(seq).then(resList => {\n            console.log(resList);\n            if (resList.length > 0) {\n                const loginProps = resList[0];\n                // store.userEnv.login = loginProps;\n                // dispatcher.system.setUserEnv(store.userEnv);\n            }\n        });\n    }, []);\n    // if (store.userEnv.login == null) {\n    //     return <></>;\n    // } else {\n    //     return <Redirect to=\"/\" />;\n    //     // return <MainFrame />;\n    // }\n    return <Redirect to=\"/\" />;\n}\n\nexport default DirectLogin;","\nimport { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Styles from \"../../base/design/styles\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\nimport { GlobalContext } from \"../entry/systemEntry\";\n\n\ntype NotePorp = {\n    version: string;\n    date: string;\n    note: string;\n}\n\nconst ReleaseNote = () => {\n    const { store, setStore } = useContext(GlobalContext);\n\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\n    useEffect(() => {\n        fetch('assets/release_note.json')\n            .then(response => response.json()) // (2) レスポンスデータを取得\n            .then(json => { // (3)レスポンスデータを処理\n\n                const list = json as NotePorp[];\n\n                setJsx(list.map((item, i) => {\n                    const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\n                    return (\n                        <_Item key={i}>\n                            <_Header>v{item.version} ({item.date})</_Header>\n                            <_Detail>{record}</_Detail>\n                        </_Item>\n                    );\n                }));\n            });\n    }, []);\n\n    return (<_ListFrame>{jsx}</_ListFrame>);\n}\n\nexport default ReleaseNote;\n\nconst _ListFrame = styled.div<{\n}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px);\n    margin: 4px 0 0 4px;\n    background-color: #d3d3c5;\n    border: 1px solid #e60000;\n    border-radius: 4px;\n    box-sizing: border-box;\n    overflow-y: auto;\n`;\n\nconst _Item = styled.div`\n    display: inline-block;\n    width: calc(100% - 8px);\n    margin: 4px 0 0 4px;\n    background-color: #bfcace;\n    border: 1px solid #9b9b9b;\n    border-radius: 6px;\n`;\n\nconst _Header = styled.div`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: 20px;\n    font-size: ${Styles.FONT_SMALL}px;\n    margin: 2px 0 0 4px;\n    font-weight: 600;\n    /* background-color: #8bdbf8; */\n    color: #494975;\n`;\n\nconst _Detail = styled.div`\n    display: inline-block;\n    width: calc(100% - 8px);\n    font-size: ${Styles.FONT_SMALL}px;\n    margin: 2px 0 0 4px;\n    /* background-color: #dafce4; */\n    color: #754949;\n`;","import { useContext, useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\nimport { GlobalContext } from \"../entry/systemEntry\";\nimport ReleaseNote from \"./releaseNote\";\n\ntype scoreProps = {\n    dispnam: string;\n    seq: number;\n    owner: string;\n    lastmod: string;\n}\n\nconst HomeChannel = () => {\n\n    const { store, setStore } = useContext(GlobalContext);\n\n    const [userCount, setUserCount] = useState(0);\n\n\n    useEffect(() => {\n    }, []);\n\n\n    return (<_Wrap>\n        <_Left>\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\n            <ReleaseNote />\n        </_Left>\n        <_Right>\n            <_MessageRecord>{0} arts have been published.</_MessageRecord>\n        </_Right>\n    </_Wrap>);\n}\n\nexport default HomeChannel;\n\nexport const countUsers = async () => {\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\n    const results = await response.json();\n    return (results as any[])[0]['cnt'] as number;\n};\n\nexport const findAllScore = async () => {\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\n        SELECT seq, (select id from user_tbl where seq = score.user_seq) as owner, dispnam, lastmod\n        FROM scoretbl score\n        WHERE share <> 'url'\n        ORDER BY lastmod desc\n    `);\n    const results = await response.json();\n    return results as any[];\n};\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: calc(100% - 8px);\n    margin: 4px 0 0 4px;\n    background-color: #ccc;\n`;\n\nconst _Left = styled.div`\n    display: inline-block;\n    width: 50%;\n    height: 100%;\n    background-color: #bbcac7;\n`;\n\n\nconst _MessageRecord = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 40px;\n    font-size: 22px;\n    font-weight: 600;\n    color: #cd0202;\n    background-color: #ffffff3d;\n    padding: 0 0 0 10px;\n    box-sizing: border-box;\n`;\n\nconst _ListInfoDiv = styled.div<{\n    isEnable: boolean;\n}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: ${HOME_USER_DIV_HEIGHT}px;\n    margin: 4px 0 4px 4px;\n    background-color: #acacac;\n    border: solid 1px #1b00b3;\n    ${props => props.isEnable ? '' : css`\n        opacity: 0.3;\n        pointer-events: none;\n    `}\n    border-radius: 4px;\n    box-sizing: border-box;\n    color: #060053;\n`;\n\nconst _TitleLabel = styled.div`\n    display: inline-block;\n    height: 40px;\n    font-size: 30px;\n    font-weight: 600;\n    color: #1c2c95;\n    /* background-color: #3f80cf57; */\n    padding: 0 10px;\n`;\nconst _Recored = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 35px;\n    /* background-color: #3fcf7b56; */\n    padding: 4px 0 0 10px;\n`;\n\nconst _ItemnLabel = styled.div`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: 140px;\n    font-size: 24px;\n    line-height: 24px;\n    font-weight: 600;\n    color: #08106e;\n    border: solid 1px #1b00b3;\n    box-sizing: border-box;\n    /* background-color: #85a2c5; */\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\n    border-radius: 4px;\n    text-align: center;\n`;\n\nconst _ItemnValue = styled.div`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 170px);\n    margin-left: 10px;\n    font-size: 24px;\n    line-height: 30px;\n    user-select: text;\n    /* font-weight: 600; */\n    color: #ffffff;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #808080;\n    text-align: left;\n`;\n\nconst _ItemnForm = styled.input`\n    display: inline-block;\n    height: calc(100% - 4px);\n    width: calc(100% - 170px);\n    margin-left: 10px;\n    font-size: 24px;\n    line-height: 24px;\n    /* font-weight: 600; */\n    color: #1a1a1a;\n    padding: 0 5px;\n    box-sizing: border-box;\n    background-color: #e9e9e9;\n    text-align: left;\n`;\n\nconst _ButtonsDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: 40px;\n    /* background-color: #888888; */\n    box-sizing: border-box;\n    text-align: left;\n`;\n\nconst _Button = styled.div<{\n    isEnable: boolean;\n}>`\n    ${_CSS_LABEL_MIDIUM}\n    /* width: 160px; */\n    padding: 0 40px;\n    /* line-height: 25px; */\n    box-sizing: border-box;\n    background-color: #a8a8a8;\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\n    border: 1px solid #1a2b3f;\n    color: #1a2b3f;\n    border-radius: 4px;\n    margin: 5px 0 0 4px;\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\n    &:hover {\n        /* background-color: #98bfc2; */\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\n    }\n`;\n\n\n\nconst _Right = styled.div`\n    display: inline-block;\n    width: 50%;\n    height: 100%;\n    background-color: #bbbfca;\n    vertical-align: top;\n`;\nconst _ListFrame = styled.div<{\n}>`\n    display: inline-block;\n    width: calc(100% - 8px);\n    height: calc(100% - 42px);\n    margin: 4px 0 0 4px;\n    background-color: #d3d3c5;\n    border: 1px solid #e60000;\n    border-radius: 4px;\n    box-sizing: border-box;\n    overflow-y: auto;\n`;\nconst _CloudItem = styled.div<{\n}>`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    /* height: 60px; */\n    border-bottom: 1px solid #888888;\n    /* background-color: white; */\n    background: linear-gradient(to bottom, transparent, #b6b6b684);\n    margin: 2px 0 0 0;\n    padding: 0 0 0 4px;\n    box-sizing: border-box;\n    /* padding-left: 4px; */\n    &:hover {\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\n    }\n`;\n\nconst _Owner = styled.div<{\n}>`\n    display: inline-block;\n    width: 100%;\n    height: 20px;\n    line-height: 21px;\n    font-size: 18px;\n    font-weight: 600;\n    color: #c9494f;\n    overflow: hidden;\n    white-space: nowrap;\n`;\nconst _CName = styled.div<{\n}>`\n    display: inline-block;\n    width: calc(100% - 250px);\n    height: 35px;\n    font-size: 24px;\n    line-height: 36px;\n    font-weight: 600;\n    color: #47417c;\n    /* background-color: #f8f8e8; */\n    overflow: hidden;\n    white-space: nowrap;\n`;\nconst _CDate = styled.div<{\n}>`\n    display: inline-block;\n    width: 250px;\n    height: 35px;\n    font-size: 24px;\n    line-height: 36px;\n    font-weight: 600;\n    color: #417c49;\n    /* background-color: #f8f8e8; */\n    overflow: hidden;\n    white-space: nowrap;\n`;","import { useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\nimport { GlobalContext } from \"./systemEntry\";\nimport { AiFillHome } from 'react-icons/ai';\nimport { CgOptions, CgPiano } from 'react-icons/cg';\nimport { VscGitPullRequestCreate } from 'react-icons/vsc';\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport CreateChannel from \"../create/createChannel\";\nimport DirectView from \"./directView\";\nimport DirectLogin from \"./directLogin\";\nimport HomeChannel from \"../home/homeChannel\";\n\nconst MainFrame = () => {\n\n    const { store, setStore } = useContext(GlobalContext);\n\n    return (\n        <HashRouter basename={process.env.PUBLIC_URL}>\n            <RouterManage />\n        </HashRouter>\n    );\n}\n\nexport default MainFrame;\n\nconst RouterManage = () => {\n\n    const { store, setStore } = useContext(GlobalContext);\n\n    const query = new URLSearchParams(useLocation().search);\n    const str = query.get('v') as string;\n\n    return (\n        <Switch>\n            <Route path=\"/\" exact>\n                <_Wrap>\n                    {/* <DraggableDialog /> */}\n                    {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\n                    <ChannelPane\n                        tabElements={[\n                            { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <HomeChannel /> },\n                            { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <CreateChannel/> },\n                        ]}\n                        activeNo={0}\n                    // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\n                    />\n                </_Wrap>\n            </Route>\n            <Route path=\"/test\" exact >\n                <_Wrap>\n                </_Wrap>\n            </Route>\n            <Route path=\"/preview\" exact >\n                <DirectView hashKey={str} />\n            </Route>\n            <Route path=\"/user\" exact >\n                <DirectLogin hashKey={str} />\n            </Route>\n        </Switch>\n    );\n}\n\n\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\n    background-color: transparent;\n    /* background-color: #c3d8dd6f; */\n    /* border: solid 1px black;\n    border-radius: 5px; */\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\n`;","\nimport { useEffect, useState } from 'react';\nimport styled, { css, keyframes } from 'styled-components';\n\nconst Splash = (props: {\n    remove: () => void\n}) => {\n    const [isSwitch, setSwitch] = useState<boolean>(false);\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\n\n    useEffect(() => {\n        setTimerId(setTimeout(() => {\n            setSwitch(true);\n        }, 3000));\n    }, []);\n    useEffect(() => {\n        if (isSwitch) {\n            setTimeout(() => {\n                props.remove();\n            }, 500);\n        }\n    }, [isSwitch]);\n\n    return (\n\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\n            clearTimeout(timerId as NodeJS.Timeout);\n            setSwitch(true);\n        }}>\n            <_Frame>\n                <_Title>\n                    <span>L</span>iCreSia\n                </_Title>\n                <_NowLoading>Now Loading...</_NowLoading>\n                <_Copylight>Copyright © 2022 Licresia All Rights Reserved.</_Copylight>\n            </_Frame>\n        </_Blind>\n    );\n}\n\nexport default Splash;\n\nconst _Blind = styled.div<{\n    isSwitch: boolean;\n}>`\n    display: inline-block;\n    position: absolute;\n    left: 0;\n    top: 0;\n    z-index: 10;\n    width: 100%;\n    height: 100%;\n    background-color: #000f3a86;\n    opacity: ${props => props.isSwitch ? '0' : '1'};\n    transition: opacity 500ms;\n`;\nconst _Frame = styled.div<{\n}>`\n    display: inline-block;\n    position: relative;\n    left: calc(50% - 450px);\n    top: calc(50% - 300px);\n    z-index: 11;\n    width: 900px;\n    height: 600px;\n    background: radial-gradient(#868686, #ffffff);\n    border-radius: 8px;\n    border: solid 2px #cfcfcf;\n    box-sizing: border-box;\n    transition: opacity 500ms;\n`;\n\n\nconst fadeIn = keyframes`\n  0%, 100% {\n    opacity: 0.4;\n  }\n  50% {\n    opacity: 1;\n  }\n`;\n\nconst _Title = styled.div`\n    display: inline-block;\n    position: relative;\n    margin-top: 10%;\n    width: 100%;\n    /* height: 400px; */\n    /* background-color: #0003b69e; */\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\n    color: white;\n    font-size: 130px;\n    font-weight: 600;\n    text-align: center;\n    text-shadow: 1px 2px 22px #0000003d;\n    /* line-height: 350px; */\n    animation: ${fadeIn} 3s linear infinite;\n    /* -webkit-box-reflect:below 1px; */\n    -webkit-box-reflect: below 1px -webkit-gradient(\n      linear,left top,left bottom,\n      from(transparent),\n      color-stop(0.6, transparent),\n      to(#f80000));\n    & span {\n        color: red;\n        font-size: 160px;\n    }\n`;\n\nconst _NowLoading = styled.div`\n    display: inline-block;\n    position: absolute;\n    bottom: 80px;\n    width: 100%;\n    left: 20px;\n    color: #ffffff;\n    font-size: 42px;\n    font-weight: 600;\n    text-align: center;\n`;\n\nconst _Copylight = styled.div`\n    display: inline-block;\n    position: absolute;\n    bottom: 5px;\n    left: 20px;\n    color: #636363;\n    font-size: 22px;\n    font-weight: 600;\n    text-align: left;\n`;","import styled, { css } from \"styled-components\";\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\nimport { ImUser } from 'react-icons/im'\nimport { MdOutlineLanguage } from 'react-icons/md'\nimport { useContext, useEffect, useState } from \"react\";\nimport { GlobalContext } from \"./systemEntry\";\nimport DataUtil from \"../../utils/dataUtil\";\nimport ConfirmDialog from \"../dialog/confirmDialog\";\nimport LoginFrame from \"../dialog/login/loginFrame\";\nimport AccountFrame from \"../dialog/accountFrame\";\n\nconst TotalHeader = () => {\n\n    const { store, setStore } = useContext(GlobalContext);\n\n    const user = store.system.user;\n\n    const [userId, setUserId] = useState('');\n\n    useEffect(() => {\n        console.log(user);\n        if (user != null) {\n            setUserId('@' + user.id);\n        }\n    }, [user]);\n\n    // const authButtonJsx = loginProps == undefined ? (\n    //     <_LoginButton onClick={() => {\n    //         store.systemState.dialog = <LoginFrame />;\n    //         dispatcher.system.setState(store.systemState);\n    //         console.log(window.location.origin);\n    //     }}>\n    //         <div><ImUser /></div>\n    //         Login / Sign up\n    //     </_LoginButton>\n    // ) : (<>\n    //     <_UserName\n    //         isEntry={store.userEnv.login != null}\n    //         onClick={() => {\n    //             dispatcher.system.setDialog(<AccountFrame />);\n    //         }}\n    //     >{userId}</_UserName>\n    //     <_LoginButton onClick={() => {\n    //         store.userEnv.login = null;\n    //         dispatcher.system.setUserEnv(store.userEnv);\n\n    //         dispatcher.system.setDialog(<ConfirmDialog.Component\n    //             message={'Logout.\\nSee you next time!'}\n    //         />);\n    //     }}>\n    //         <div><ImUser /></div>\n    //         Logout\n    //     </_LoginButton>\n    // </>);\n    return (\n        <_Wrap>\n            <_Label>\n                <_ACCENT>Partice</_ACCENT>&nbsp;<_NORMAL>Simulator</_NORMAL>\n            </_Label>\n            <_Menu>\n                {/* {authButtonJsx} */}\n                <_Language>\n                    <div><MdOutlineLanguage /></div>\n                </_Language>\n            </_Menu>\n        </_Wrap>\n    );\n}\n\nexport default TotalHeader;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    height: ${TOTAL_HEADER_WIDTH}px;\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\n    /* background-color: #c2c2c2; */\n    box-shadow: 0 0 8px 0 #000b3a48;\n`;\n\nconst _Label = styled.div`\n    display: inline-block;\n    margin: 2px 0 0 10px;\n    width: 200px;\n    height: calc(100% - 4px);\n    /* background-color: #00000013; */\n    font-size: 34px;\n    font-weight: 600;\n    line-height: 36px;\n    font-style: italic;\n    text-shadow: 1px 2px 3px #dbdbdb6a;\n`;\n\nconst _NORMAL = styled.span`\n    color: #9fc2d1;\n`;\nconst _ACCENT = styled.span`\n    font-size: 34px;\n    color: #ececec;\n`;\n\n\n\nconst _Menu = styled.div`\n    display: inline-block;\n    /* width: 300px; */\n    height: 100%;\n    position: absolute;\n    right: 30px;\n    /* background-color: #ff00002b; */\n`\n\nconst _MenuItem = styled.div`\n    background-color: #c9c7c7;\n    &:hover {\n        background-color: #cf9bae;\n    }\n    transition: background-color 800ms;\n`\n\nconst _LoginButton = styled(_MenuItem)`\n    display: inline-block;\n    /* width: 240px; */\n    padding: 0 30px;\n    margin: 5px 10px 0 0;\n    height: calc(100% - 10px);\n    border-radius: 20px;\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\n    /* background-color: #adadad; */\n    /* border: 1px solid #7e7e7e; */\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\n    /* text-shadow: 1px 2px 3px #808080ba; */\n    text-align: center;\n    font-size: 22px;\n    font-weight: 600;\n    line-height: 28px;\n    color: #ffffff;\n    vertical-align: top;\n\n    & div {\n        display: inline-block;\n        /* background-color: #0000007d; */\n        margin: 2px 5px 0 0;\n        vertical-align: top;\n    }\n`;\n\nconst _UserName = styled.div<{\n    isEntry: boolean;\n}>`\n    display: inline-block;\n    /* width: 240px; */\n    margin: 5px 20px 0 0;\n    height: calc(100% - 10px);\n    text-align: center;\n    font-size: 22px;\n    font-weight: 600;\n    line-height: 28px;\n    color: #003a86;\n    ${props => props.isEntry ? '' : css`\n        color: #96000057;\n    `}\n    vertical-align: top;\n`;\n\nconst _Language = styled(_MenuItem)`\n    display: inline-block;\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\n    margin: 3px 0 0 0;\n    border-radius: 50%;\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\n    /* background-color: #48aa9d; */\n    /* border: 1px solid #7e7e7e; */\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\n    /* text-shadow: 1px 2px 3px #808080ba; */\n    /* text-align: center; */\n    font-size: 28px;\n    font-weight: 600;\n    color: #ffffff;\n    & div {\n        display: inline-block;\n        margin: 2px 0 0 5px;\n        /* background-color: #0000007d; */\n        vertical-align: top;\n    }\n`;","import { createContext, useCallback, useEffect, useReducer, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { initialStore, Store } from '../../redux/store/store';\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\nimport GloballDialog from '../dialog/globalDialog';\nimport MainFrame from './mainFrame';\nimport Splash from './splash';\nimport TotalHeader from './totalHeader';\n\n\ntype GlobalContextType = {\n    store: Store;\n    setStore: React.Dispatch<React.SetStateAction<Store>>;\n}\n\nexport const GlobalContext = createContext({} as GlobalContextType);\n\nconst SystemEntry = () => {\n\n    const [store, setStore] = useState(initialStore);\n    return (\n        <GlobalContext.Provider value={{ store, setStore }}>\n            <>\n                {!store.system.isSplash ? <></> :\n                    <Splash\n                        remove={() => {\n                            setStore({...store, system: {\n                                ...store.system, isSplash: false\n                            }});\n                        }}\n                    />}\n                <_Wrap>\n                    <GloballDialog />\n                    <TotalHeader />\n                    <_MainDiv>\n                        <MainFrame />\n                    </_MainDiv>\n                </_Wrap>\n            </>\n        </GlobalContext.Provider>\n    );\n}\n\nexport default SystemEntry;\n\nconst _Wrap = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 100%;\n    height: 100%;\n    background-color: #364887;\n`;\n\nconst _MainDiv = styled.div`\n    display: inline-block;\n    width: 100%;\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\n    /* background-color: #c2c2c2; */\n`;","import React, { useEffect } from 'react';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst REACT_APP_AUTH0_DOMAIN = 'dev-a0p0m4lr.us.auth0.com';\nconst REACT_APP_AUTH0_CLIENT_ID = 'ABaWpYVBZwTr3tkyxhq1kWh2YwT4epew';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}