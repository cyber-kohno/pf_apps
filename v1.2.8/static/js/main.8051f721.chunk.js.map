{"version":3,"sources":["system/utils/dataUtil.tsx","system/redux/store/store.tsx","system/utils/systemConst.tsx","system/contents/dialog/globalDialog.tsx","system/base/design/styles.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/utils/treeUtil.tsx","system/utils/form/formUtiil.tsx","system/contents/create/factory/detail/factDetArgumentMng.tsx","system/utils/form/validateUtil.tsx","system/contents/create/factory/detail/common/modifyOperations.tsx","system/contents/create/factory/detail/factDetArgumentItem.tsx","system/contents/create/factory/detail/factDetInheritMng.tsx","system/contents/create/factory/detail/factDetExtendMng.tsx","system/contents/create/factory/detail/factDetOriginMng.tsx","system/utils/canvasUtil.tsx","system/contents/graphic/particle.tsx","system/contents/graphic/drawUtil.tsx","system/contents/graphic/vectorUtil.tsx","system/contents/create/preview/previewUtil.tsx","system/contents/create/preview/logicPreviewFrame.tsx","system/contents/create/factory/detail/factDetLogicItem.tsx","system/contents/create/factory/detail/factOprParam.tsx","system/contents/create/factory/detail/factDetBehiviorMng.tsx","system/contents/create/factory/detail/factDetVisualMng.tsx","system/contents/create/factory/detail/factDetInheritConnMng.tsx","system/contents/create/factory/detail/factDetEffectMng.tsx","system/contents/create/factory/detail/factDetModulateMng.tsx","system/contents/create/factory/detail/factDetInheritConnector.tsx","system/contents/create/factory/detail/factDetSendManager.tsx","system/contents/create/factory/factoryUtil.tsx","system/contents/create/factory/factoryTab.tsx","system/contents/create/manage/manageTab.tsx","system/contents/create/timeline/timelineUtil.tsx","system/contents/create/timeline/timelineTab.tsx","system/contents/create/createChannel.tsx","system/contents/entry/directView.tsx","system/contents/entry/directLogin.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DB_SERVER_DOMAIN","APP_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","seq","hash","encode","Base64","hashedSeq","hashids","Number","decode","getHashedFromScoreSeq","sendQueryRequestToAPI","scoreSeq","hashedKey","json","fetch","mode","method","headers","Accept","body","JSON","stringify","createSendMailRequestInit","queryType","sql","createQueryRequestInit","findUserInfoList","a","response","results","map","res","id","email","password","nextSeq","DataUtil","userSeq","val","content","encodeURIComponent","zlib","gzipSync","toString","buffer","Buffer","from","result","unzipSync","decodeURIComponent","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","initialStore","system","isSplash","user","dialog","SystemConst","GloballDialog","useContext","GlobalContext","store","setStore","_Blind","onClick","styled","div","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","css","Styles","_CSS_LABEL_MIDIUM","ChannelPane","props","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","index","name","icon","isActive","isEnable","selectTab","undefined","selectTabIndex","_ContList","cont","ChannelLabel","_Item","_Icon","_Label","ChannelContents","_Contents","CSS_BUTTON_DISABLE","TabbedPane","tabRecordNum","enable","TabLabel","_TabLabel","TabContents","TreeUtil","data","parent","depth","isOpen","children","node","parentNode","i","length","isDisable","focusNode","buildElementNodeFromData","build","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","jsxList","useMemo","list","buildJsxRecords","element","spaceList","isCurrent","push","isRelation","tempNode","find","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","clickEvent","onDoubleClick","getLabelJsx","forEach","slice","concat","invalidate","_Wrap","_Record","FormUtil","checkables","checkable","errors","type","isPassword","validaters","validates","dependency","dep","value","getErrors","validater","checker","errorType","setCheckable","textAlign","isCenter","marginTop","titleLabel","_ItemnLabel","_ItemnInputBak","hasTitle","width","placeholder","onChange","e","target","readOnly","isReadOnly","jsx","labelWidth","isNumber","_ItemnInput","marginLeft","headBlank","unshift","labelText","_ItemCombobox","item","_Option","disabled","isDisabled","buttons","button","_Button","callback","label","_Message","message","isLink","clickAction","_BorderText","title","_BorderPanel","innerJsx","height","_InfoDiv","color","textRecords","text","_Switch","isUse","CSS_LABEL_MIDIUM","input","select","option","CSS_LABEL_SMALL","FactDetArgumentMng","FactoryTreeContext","setFocusNode","wrap","BorderPanel","ButtonRecord","newWrap","args","newNode","createNode","str","min","max","checkIncludesChars","ch","charAt","indexOf","conditions","ValidateUtil","ModifyOperations","isModify","setModify","isComplete","isCompleteCheck","checkableFields","splice","mappingForm","isInputOK","firstRegist","modifyRegist","FactDetArgumentItem","setName","argType","setArgType","param","valueType","Component","FormRecord","TextField","checkRequired","checkStringLength","FactoryUtil","checkFieldName","Combobox","ArgTypes","n","FactDetInheritMng","itemWrap","defs","FactDetExtendMng","el","includes","hasEffectsNode","hasModulateNode","hasInheritNode","Record","Switch","mngs","params","paramWrap","createParamWrap","formulaItems","values","delIndex","insIndex","console","log","connects","FactDetOriginMng","createURL","draw","canvas","document","createElement","ctx","getContext","toDataURL","CanvasUtil","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillStyle","fillText","adjust","measureText","save","WIDTH","AUTH_TEXT_WIDTH","SIZE","AUTH_TEXT_HEIGHT","rotate","Math","PI","char","fontRand","random","alphaRand","Particle","owner","pos","prevPos","vec","frame","limit","isLive","drawer","extend","update","x","xy","y","this","radius","self","g","createRadialGradient","grads","rgba","convertRgbaFromColorCode","r","b","offset","convertColorCodeFromRgba","grad","addColorStop","disappearStartRate","start","floor","globalAlpha","beginPath","arc","fill","code","split","parseInt","substring","rate","DrawUtil","VectorUtil","rad","len","syncFromXY","sqrt","atan2","syncFromRad","cos","sin","SCREEN_WIDTH","SCREEN_HEIGHT","searchElement","rootData","createParticleRec","cur","fields","valueMapList","ConstantValueMap","visualParams","behaviorParams","getVisualParam","convertFormulaToValue","getBehaviorParam","Vector","extendList","extendMng","connectMng","connect","connector","getCondition","condition","logicItem","connectType","inheritMng","def","searchDependLogic","depend","loopCnt","iterateItem","iterateValueMap","sendValueMapList","Instance","effectMng","modulateMng","getModulateParam","decayLimit","decayRate","gravity","modulate","createGradDrawer","warpList","formula","v","valueMap","m","formulaStr","varCnt","Function","PreviewUtil","LogicPreviewFrame","ref","useRef","formList","setFormList","sceens","setSceens","frameCnt","setFrameCnt","tabIndex","setTabIndex","setCur","setBuild","isPlay","setPlay","setTimeout","argumentList","argWrap","arg","getArgumentList","formListJsx","form","buildTabJsx","_FormDiv","buildOriginProps","par","previewTabJsx","_CanvasDiv","_IMG","src","_ProgressDiv","clickX","pageX","clientRect","current","getBoundingClientRect","left","window","pageXOffset","_ProgressVal","_Frame","_Main","img","FactDetLogicItem","parentType","isConnect","isInherit","hasArgNode","hasFieldNode","hasExtendNode","getDefaultLogicMngs","mng","FactOprParam","setFormulaItems","varFormList","setVarFormList","inputType","fieldKeyList","keys","targetWrap","getTargetWrap","num","addNum","delNum","parenthesisBalance","formJsxList","ParamInputTypes","getValueForm","isLastVar","isFormulaOK","hasFormError","varForm","_Formula","isInvalid","_Var","_Sig","getFormulaJsx","span","FactDetBehiviorMng","isVector","swapPos","FactDetVisualMng","FactDetInheritConnMng","FactDetEffectMng","FactDetModulateMng","FactDetInheritConnector","setCondition","setConnectType","setDepend","hasIterateNode","isCreate","inheritList","setSendParams","sendIndex","sendMng","sendNode","dependItem","getSendParamList","initConnectorNode","inheritNode","isChange","ConditionTypes","ConnectTypes","loopCountWrap","FactDetSendManager","sendParamList","curSize","curParamList","paramDataList","createParamWrapList","COLOR_METHOD","createVisualParams","createBehaviorParams","seedMng","COLOR_MNG","COLOR_LIST","COLOR_ITEM","isFocus","_Category","backgroundColor","_EditableValue","detailJsx","_Field","_Signature","_Detail","_ValueType","createContext","FactoryTab","getInitialData","setRootData","setInvalidate","getChildren","wrapNode","_TreeDiv","_TreeHead","_TreeBody","Frame","getNodeJsx","_PropsDiv","_DetailDiv","_DetailHeader","_DetailHeaderLabel","getTypeName","Provider","_DetailMainDiv","getDetailComponent","ManageTab","isVisible","TimelineUtil","TimelineTab","getChildnre","CreateChannel","SCORE_TAB_MARGIN","DirectView","getDecryptionedScoreSeq","hashKey","to","DirectLogin","getDecryptionedUserSeq","findUserInfoFromSeq","then","resList","ReleaseNote","setJsx","record","note","_Header","version","_ListFrame","HOME_USER_DIV_HEIGHT","HomeChannel","userCount","_Left","_MessageRecord","_Right","MainFrame","basename","process","RouterManage","URLSearchParams","useLocation","search","get","path","exact","MAIN_FRAME_MARGIN","Splash","isSwitch","setSwitch","timerId","setTimerId","remove","clearTimeout","_Title","_NowLoading","_Copylight","fadeIn","keyframes","TotalHeader","setUserId","_ACCENT","_NORMAL","_Menu","_Language","_MenuItem","isEntry","TOTAL_HEADER_WIDTH","SystemEntry","_MainDiv","App","oncontextmenu","onkeydown","ctrlKey","key","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8051f721.chunk.js","sourcesContent":["import zlib from \"zlib\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport Hashids from 'hashids';\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5000';\r\n    export const DB_SERVER_DOMAIN = 'https://licresia-demo01-server.glitch.me';\r\n    // export const DB_SERVER_DOMAIN = 'https://licresia-server.glitch.me';\r\n\r\n    // export const APP_SERVER_DOMAIN = 'http://localhost:4000';\r\n    // export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/licresia_demo_app';\r\n    export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    // const fetchData = async () => {\r\n    //     try {\r\n    //         // sampleテーブルから全カラムのデータをid順に取得\r\n    //         // dataに入る型はそのままだとany[]となるため.from<T>で指定\r\n    //         const { data, error } = await supabase.from<Table>('test').select().order('data');\r\n\r\n    //         if (error) {\r\n    //             throw error;\r\n    //         }\r\n    //         if (data) {\r\n    //             console.log(data);\r\n    //         }\r\n    //     } catch (error: any) {\r\n    //         alert(error.message);\r\n    //     } finally {\r\n\r\n    //     }\r\n    // };\r\n\r\n    const getUserHashBuilder = () => {\r\n        return new Hashids('licresia-demo-user', 8);\r\n    }\r\n\r\n    export const getHashedFromUserSeq = (seq: number) => {\r\n        const hashids = getUserHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\r\n        const hashids = getUserHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    const getScoreHashBuilder = () => {\r\n        return new Hashids('licresia-demo', 8);\r\n    }\r\n\r\n    export const getHashedFromScoreSeq = (seq: number) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedScoreSeq = (hashedSeq: string) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    export const getPreviewURL = (scoreSeq: number) => {\r\n        const hashedKey = getHashedFromScoreSeq(scoreSeq);\r\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql })\r\n        }\r\n    }\r\n\r\n    export type SendMailParam = {\r\n        from: string,\r\n        to: string,\r\n        subject: string,\r\n        text: string\r\n    }\r\n\r\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(json)\r\n        }\r\n    }\r\n\r\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/mail',\r\n            createSendMailRequestInit(json)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserInfoList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\r\n        const results = await response.json();\r\n        return results as { id: string, email: string}[];\r\n    };\r\n\r\n    export const findUserIdList = async () => {\r\n        const results = await findUserInfoList();\r\n        return (results as { id: string}[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfoFromEmail = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserInfoFromSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoLogin = async (id: string, password: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const getNextUserSeq = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\r\n        const results = await response.json();\r\n        const nextSeq = (results[0]['seq'] as number) + 1;\r\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\r\n\r\n        return nextSeq;\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findScore = async (scoreSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT (select id from user_tbl where seq = score.user_seq) as owner, dispnam, data FROM scoretbl score WHERE seq = ${scoreSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n}\r\n\r\nexport default DataUtil;","import StoreSystem from \"./storeSystem\";\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    system: StoreSystem.Param;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    system: {\r\n        isSplash: false,\r\n        user: null,\r\n        dialog: null,\r\n    },\r\n}","\r\nnamespace SystemConst {\r\n    export const AUTH_TEXT_WIDTH = 350;\r\n    export const AUTH_TEXT_HEIGHT = 70;\r\n}\r\n\r\nexport default SystemConst;\r\n\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n\r\n// ホームチャンネル\r\nexport const HOME_USER_DIV_HEIGHT = 400;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const dialog = store.system.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            store.system.dialog = null;\r\n            setStore({...store});\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 18px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 22px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n    tabRecordNum?: number;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    enable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabRecordNum = props.tabRecordNum ?? 1;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList tabRecordNum={tabRecordNum}>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isEnable={tab.enable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList tabRecordNum={tabRecordNum}>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isEnable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: inline-block;\r\n    height: ${props => 35 * props.tabRecordNum}px;\r\n    text-align: left;\r\n    /* background-color: #ac3b3b; */\r\n    width: 100%;\r\n`;\r\nconst _ContList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    \r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                margin-top: 5px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${props.isEnable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import { useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        // parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        useEffect(() => {\r\n            if (focusNode != null && focusNode.parent != null) {\r\n                focusNode.parent.isOpen = true;\r\n            }\r\n        }, [focusNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            // console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    // 親判定\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    // 兄弟判定\r\n                    if (result === false && focusNode != null && focusNode.parent != null) {\r\n                        result = focusNode.parent.children.find(node => node == element) != undefined;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        isActive={isCurrent}\r\n                        isRelation={!isDisable && isRelationNode()}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #374a54;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #1f3642;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isActive: boolean;\r\n    isRelation: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: block;\r\n    /* position: relative; */\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #459cff46;\r\n    `}\r\n    opacity: 0.5;\r\n    ${props => !props.isRelation ? '' : css`\r\n        background-color: #ffffff28;\r\n        opacity: 1;\r\n    `}\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #b4d9dd83;\r\n        opacity: 1;\r\n    `}\r\n    /* width: calc(100% - 10px); */\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport ValidateUtil from \"./validateUtil\";\r\nimport { useEffect } from \"react\";\r\n\r\nnamespace FormUtil {\r\n\r\n    export type CheckableValue = {\r\n        value: string;\r\n        errors: ValidateUtil.ErrorType[];\r\n    }\r\n\r\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\r\n        let result = true;\r\n        checkables.forEach(checkable => {\r\n            if (checkable.errors.length > 0) {\r\n                result = false;\r\n                return 1;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    export const InputTextFormBak = (props: {\r\n        titleLabel?: string;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        isCenter?: boolean;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        marginTop?: number;\r\n        isReadOnly?: boolean;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const type = props.isPassword ?? false ? 'password' : 'text';\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency);\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\r\n                <_ItemnInputBak\r\n                    type={type}\r\n                    value={props.checkable.value}\r\n                    hasTitle={props.titleLabel != undefined}\r\n                    width={props.width}\r\n                    isCenter={props.isCenter ?? false}\r\n                    placeholder={props.placeholder}\r\n                    onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        props.checkable.value = value;\r\n                        props.checkable.errors = getErrors(value);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }}\r\n                    errorType={errors.length === 0 ? undefined : errors[0]}\r\n                    readOnly={props.isReadOnly}\r\n                />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n\r\n    export const Record = (props: {\r\n        isEnable?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FormRecord = (props: {\r\n        titleLabel?: string;\r\n        labelWidth?: number;\r\n        isEnable?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={props.labelWidth}>{props.titleLabel}</_ItemnLabel>}\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const TextField = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        isNumber?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        let type = props.isPassword ?? false ? 'password' : 'text';\r\n        if (props.isNumber ?? false) {\r\n            type = 'number';\r\n        }\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        let value = props.checkable.value;\r\n        // if (type === 'number' && value === '') value = '0';\r\n        return (\r\n            <_ItemnInput\r\n                type={type}\r\n                value={value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    let value = e.target.value;\r\n                    // if (type === 'number' && value === '') value = '0';\r\n                    props.checkable.value = type !== 'number' ? value : Number(value).toString();\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n                }}\r\n                errorType={errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\r\n    export const Combobox = (props: {\r\n        list: ComboboxItemProps[];\r\n        headBlank?: boolean;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n        const headBlank = props.headBlank ?? false;\r\n        const list = props.list.slice();\r\n        if (headBlank) list.unshift({ value: '', labelText: '' });\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n\r\n        useEffect(() => {\r\n            // console.log('value: ' + props.checkable.value);\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        return (\r\n            <_ItemCombobox\r\n                value={props.checkable.value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    props.checkable.value = value;\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n\r\n                }}\r\n                errorType={errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            >{list.map((item, i) => {\r\n                return (\r\n                    <_Option key={i}\r\n                        value={item.value}\r\n                        disabled={item.isDisabled ?? false}\r\n                        isDisabled={item.isDisabled ?? false}\r\n                    >{item.labelText}</_Option>\r\n                );\r\n            })}</_ItemCombobox>\r\n        );\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        label: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ButtonRecord = (props: {\r\n        buttons: ButtonProps[],\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'right'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                {props.buttons.map((button, i) => {\r\n                    return (\r\n                        <_Button\r\n                            key={i}\r\n                            isCenter={props.isCenter ?? false}\r\n                            isEnable={button.isEnable ?? true}\r\n                            width={button.width}\r\n                            onClick={button.callback}\r\n                        >{button.label}</_Button>\r\n                    );\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const Message = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                <_Message\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const MessageLink = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        clickAction: () => void;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                <_Message\r\n                    isLink={true}\r\n                    onClick={props.clickAction}\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        // const title = props.title ?? 'title pl';\r\n        return (<>\r\n            <_BorderText>{props.title}</_BorderText>\r\n            <_BorderPanel isEnable={props.isEnable ?? true}>{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export const InfoFrame = (props: {\r\n        height?: number;\r\n        textRecords: string[];\r\n    }) => {\r\n        const height = props.height ?? 70;\r\n        const color = '#1a9900';\r\n        return (<>\r\n            <_InfoDiv height={height} color={color}>\r\n                {props.textRecords.map((text, i) => {\r\n                    return <span key={i}>{text}<br /></span>;\r\n                })}\r\n            </_InfoDiv>\r\n        </>);\r\n    };\r\n\r\n    export const Switch = (props: {\r\n        label: string;\r\n        isUse: boolean;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        callback: () => void;\r\n    }) => {\r\n        return (\r\n            <_Switch\r\n                isUse={props.isUse}\r\n                isEnable={props.isEnable ?? true}\r\n                width={props.width}\r\n                onClick={props.callback}\r\n            >{props.label}</_Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormUtil;\r\n\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n    textAlign: 'left' | 'center' | 'right';\r\n    marginTop: number;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    margin-top: ${props => props.marginTop}px;\r\n    /* background-color: #b3b4c4; */\r\n    /* border: 1px solid #000; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    text-align: ${props => props.textAlign};\r\n`;\r\n\r\nconst _ItemnLabel = styled.div<{\r\n    labelWidth?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.labelWidth ?? 140}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #c3c3c3fc, #d8d8d8, #c3c3c3fc);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n`;\r\n\r\nconst _ItemnInputBak = styled.input<{\r\n    readOnly?: boolean;\r\n    isCenter: boolean;\r\n    hasTitle: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${props => !props.hasTitle ? css`\r\n    ` : css`\r\n        width: calc(100% - 152px);\r\n    `}\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    margin-top: 2px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    /* ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    } */\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemCombobox = styled.select<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n        pointer-events: none;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _Option = styled.option<{\r\n    isDisabled: boolean;\r\n}>`\r\n    ${props => !props.isDisabled ? '' : css`\r\n        color: #0000004b;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n    isLink?: boolean;\r\n    isCenter: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #002c52;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => !props.isLink ? '' : css`\r\n        color: #0459a3;\r\n        user-select: none;\r\n        text-decoration: underline;\r\n        &:hover {\r\n            color: #68a4d8;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #cdcdcd, #ebebeb, #cdcdcd);\r\n    border: 1px solid #747474;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isUse: boolean;\r\n    isEnable: boolean;\r\n    width?: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\r\n    border: 1px solid #747474;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\r\n    }\r\n`;\r\n\r\nconst _BorderText = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: #990000;\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    background-color: #dcddce;\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    margin: 4px 0 0 0;\r\n    display: inline-block;\r\n    background-color: #e7e5e561;\r\n    border: solid 1px #949494;\r\n    width: 100%;\r\n    height: ${props => props.height}px;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: ${props => props.color};\r\n    overflow-y: auto;\r\n`;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactoryTab, { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\n\r\nconst FactDetArgumentMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const newWrap: FactoryUtil.WrapNode = {\r\n                                type: 'argument-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as FactoryUtil.NodeArgumentManager).args.push(newWrap);\r\n                            const newNode = TreeUtil.createNode(newWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            // (wrap.data as FactoryUtil.NodeArgumentManager).args.push(newWrap);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetArgumentMng;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\r\n\r\n    export type Validate = {\r\n        checker: (value: string) => boolean;\r\n        errorType: ErrorType;\r\n        message?: string;\r\n    }\r\n\r\n    /**\r\n     * 必須チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkRequired = (str: string) => {\r\n        return str.length > 0;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length === 0 || (str.length >= min && str.length <= max);\r\n    }\r\n\r\n    /**\r\n     * 半角英数時チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        return checkIncludesChars(str, list);\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列で構成されているかチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkIncludesChars = (str: string, list: string) => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            const ch = str.charAt(i);\r\n            if (list.indexOf(ch) === -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default ValidateUtil;\r\n","import { useContext, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../../factoryTab\";\r\nimport FactoryUtil from \"../../factoryUtil\";\r\n\r\nnamespace ModifyOperations {\r\n\r\n    export type Props = {\r\n        mappingForm: () => void;\r\n        checkableFields: FormUtil.CheckableValue[];\r\n        isInputOK?: boolean;\r\n        firstRegist: () => void;\r\n        modifyRegist: () => void;\r\n    }\r\n\r\n    export const Component = (props: Props) => {\r\n        const { node, isModify, setModify, setFocusNode } = useContext(FactoryTreeContext);\r\n\r\n        const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n        const isComplete = FormUtil.isCompleteCheck(props.checkableFields);\r\n\r\n        return (<>\r\n            <FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: isModify,\r\n                        callback: () => {\r\n                            if (wrap.data == null) {\r\n                                const parent = (node.parent as TreeUtil.ElementNode);\r\n                                parent.children.splice(parent.children.length - 1, 1);\r\n                                setFocusNode(parent);\r\n                            } else {\r\n                                props.mappingForm();\r\n                            }\r\n                            setModify(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !isModify || (props.isInputOK ?? isComplete),\r\n                        callback: () => {\r\n                            if (!isModify) {\r\n                                setModify(true);\r\n                            } else {\r\n                                if (wrap.data == null) {\r\n                                    props.firstRegist();\r\n                                } else {\r\n                                    props.modifyRegist();\r\n                                }\r\n                                setModify(false);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default ModifyOperations;","import { type } from \"os\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetArgumentItem = () => {\r\n    const { node, setFocusNode, setModify, isModify ,invalidate} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as FactoryUtil.NodeArgumentItem;\r\n        setName({ ...name, value: param.name });\r\n        setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name]}\r\n            firstRegist={() => {\r\n                const param: FactoryUtil.NodeArgumentItem = {\r\n                    name: name.value,\r\n                    valueType: argType.value as FactoryUtil.ArgumentType\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as FactoryUtil.NodeArgumentItem;\r\n                param.name = name.value;\r\n                param.valueType = argType.value as FactoryUtil.ArgumentType;\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => FactoryUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={FactoryUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type !== 'float'}\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                let index = -1;\r\n                                node.parent?.children.forEach((n, i) => {\r\n                                    if (n == node) index = i;\r\n                                });\r\n                                node.parent?.children.splice(index, 1);\r\n                                ((node.parent?.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeArgumentManager).args.splice(index, 1);\r\n                                setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                                invalidate();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetArgumentItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactoryTab, { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\n\r\nconst FactDetInheritMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Inherit',\r\n                        callback: () => {\r\n                            const itemWrap: FactoryUtil.WrapNode = {\r\n                                type: 'inherit-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as FactoryUtil.NodeLogicManager).defs.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetInheritMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetExtendMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [hasEffectsNode, hasModulateNode, hasInheritNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as FactoryUtil.WrapNode).type;\r\n        });\r\n        return [\r\n            list.includes('effect-mng'),\r\n            list.includes('modulate-mng'),\r\n            list.includes('inherit-connect-mng'),\r\n        ]\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as FactoryUtil.NodeLogicItem;\r\n        setName({ ...name, value: param.name });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Effect'}\r\n                            width={300}\r\n                            isUse={hasEffectsNode}\r\n                            callback={() => {\r\n                                const data = (wrap.data as FactoryUtil.NodeExtendManager);\r\n                                if (hasEffectsNode) {\r\n                                    data.mngs.splice(0, 1);\r\n                                    node.children.splice(0, 1);\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                } else {\r\n                                    const newWrap: FactoryUtil.WrapNode = {\r\n                                        type: 'effect-mng',\r\n                                        data: {\r\n                                            params: []\r\n                                        } as FactoryUtil.NodeParamManager\r\n                                    }\r\n                                    data.mngs.unshift(newWrap);\r\n                                    const newNode = TreeUtil.createNode(newWrap, node);\r\n                                    node.children.unshift(newNode);\r\n\r\n                                    {\r\n                                        const paramWrap = FactoryUtil.createParamWrap('effect-item',\r\n                                            { name: 'disappear_start_rate', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] });\r\n                                        (newWrap.data as FactoryUtil.NodeParamManager).params.push(paramWrap);\r\n                                        newNode.children.push(TreeUtil.createNode(paramWrap, newNode));\r\n                                    }\r\n\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                }\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Modulate'}\r\n                            width={300}\r\n                            isUse={hasModulateNode}\r\n                            callback={() => {\r\n                                const data = (wrap.data as FactoryUtil.NodeExtendManager);\r\n                                if (hasModulateNode) {\r\n                                    const delIndex = !hasEffectsNode ? 0 : 1;\r\n                                    data.mngs.splice(delIndex, 1);\r\n                                    node.children.splice(delIndex, 1);\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                } else {\r\n                                    const newWrap: FactoryUtil.WrapNode = {\r\n                                        type: 'modulate-mng',\r\n                                        data: {\r\n                                            params: []\r\n                                        } as FactoryUtil.NodeParamManager\r\n                                    }\r\n                                    const insIndex = !hasEffectsNode ? 0 : 1;\r\n                                    data.mngs.splice(insIndex, 0, newWrap);\r\n                                    const newNode = TreeUtil.createNode(newWrap, node);\r\n                                    node.children.splice(insIndex, 0, newNode);\r\n\r\n                                    {\r\n                                        const paramWrap = FactoryUtil.createParamWrap('modulate-item',\r\n                                            { name: 'decay_rate', formulaItems: ['var'], values: [{ type: 'direct', value: '0.97' }] });\r\n                                        (newWrap.data as FactoryUtil.NodeParamManager).params.push(paramWrap);\r\n                                        newNode.children.push(TreeUtil.createNode(paramWrap, newNode));\r\n                                    }\r\n                                    {\r\n                                        const paramWrap = FactoryUtil.createParamWrap('modulate-item',\r\n                                            { name: 'decay_limit', formulaItems: ['var'], values: [{ type: 'direct', value: '5' }] });\r\n                                        (newWrap.data as FactoryUtil.NodeParamManager).params.push(paramWrap);\r\n                                        newNode.children.push(TreeUtil.createNode(paramWrap, newNode));\r\n                                    }\r\n                                    {\r\n                                        const paramWrap = FactoryUtil.createParamWrap('modulate-item',\r\n                                            { name: 'gravity', formulaItems: ['var'], values: [{ type: 'direct', value: '0.1' }] });\r\n                                        (newWrap.data as FactoryUtil.NodeParamManager).params.push(paramWrap);\r\n                                        newNode.children.push(TreeUtil.createNode(paramWrap, newNode));\r\n                                    }\r\n\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                }\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Inherit'}\r\n                            width={300}\r\n                            isUse={hasInheritNode}\r\n                            callback={() => {\r\n                                const data = (wrap.data as FactoryUtil.NodeExtendManager);\r\n                                if (hasInheritNode) {\r\n                                    console.log(data.mngs[data.mngs.length - 1].type);\r\n                                    data.mngs.splice(data.mngs.length - 1, 1);\r\n                                    node.children.splice(node.children.length - 1, 1);\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                } else {\r\n                                    const newWrap: FactoryUtil.WrapNode = {\r\n                                        type: 'inherit-connect-mng',\r\n                                        data: {\r\n                                            connects: []\r\n                                        } as FactoryUtil.NodeInheritConnectManager\r\n                                    }\r\n                                    data.mngs.push(newWrap);\r\n                                    const newNode = TreeUtil.createNode(newWrap, node);\r\n                                    node.children.push(newNode);\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                }\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetExtendMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactoryTab, { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\n\r\nconst FactDetOriginMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Origin',\r\n                        callback: () => {\r\n                            const wrap: FactoryUtil.WrapNode = {\r\n                                type: 'seed-item',\r\n                                data: null\r\n                            }\r\n                            const newNode = TreeUtil.createNode(wrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetOriginMng;","import SystemConst from \"./systemConst\";\r\n\r\nnamespace CanvasUtil {\r\n\r\n    /**\r\n     * Canvasに任意の描画をし、画像のURLを取得する\r\n     * @param width 幅\r\n     * @param height 高さ\r\n     * @param draw 描画\r\n     * @returns 画像のURL\r\n     */\r\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        draw(ctx);\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    export const getLogoURL = () => {\r\n        return CanvasUtil.createURL(350, 80, (ctx) => {\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.fillRect(0, 0, 350, 80);\r\n\r\n            ctx.shadowColor = \"#555\";\r\n            ctx.shadowOffsetX = 2;\r\n            ctx.shadowOffsetY = 1;\r\n            ctx.shadowBlur = 5;\r\n            ctx.font = '55pt Arial';\r\n            ctx.fillStyle = '#db0000';\r\n            ctx.fillText('L', 30, 70);\r\n            const adjust = ctx.measureText('L').width;\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.fillText('iCreSia', 30 + adjust, 70);\r\n            ctx.save();\r\n        });\r\n    }\r\n\r\n    export const getAuthTextURL = (text: string) => {\r\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\r\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\r\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\r\n            ctx.rotate(1 * Math.PI / 180);\r\n            for (let i = 0; i < text.length; i++) {\r\n                const char = text.charAt(i);\r\n\r\n                const fontRand = Math.random() * 60;\r\n                const alphaRand = Math.random() * 60;\r\n                ctx.font = `${20 + fontRand}pt Arial`;\r\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\r\n                ctx.fillText(char, i * SIZE, 60);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CanvasUtil;","import VectorUtil from \"./vectorUtil\";\r\n\r\nnamespace Particle {\r\n\r\n    export type Props = {\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        limit: number;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n    }\r\n\r\n    export class Instance {\r\n\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        prevPos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        frame: number;\r\n        limit: number;\r\n        isLive: boolean;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n\r\n        constructor(props: Props) {\r\n            this.owner = props.owner;\r\n            this.pos = props.pos;\r\n            this.prevPos = props.pos;\r\n            this.vec = props.vec;\r\n\r\n            this.frame = 0;\r\n            this.limit = props.limit;\r\n            this.isLive = true;\r\n            this.drawer = props.drawer;\r\n            this.extend = props.extend;\r\n        }\r\n\r\n        update = () => {\r\n\r\n            this.pos.x += this.vec.xy.x;\r\n            this.pos.y += this.vec.xy.y;\r\n\r\n            this.extend.forEach(callback => callback(this));\r\n\r\n            if (this.frame === this.limit) {\r\n                this.isLive = false;\r\n            }\r\n            this.frame++;\r\n        }\r\n\r\n        draw = (ctx: CanvasRenderingContext2D) => {\r\n            this.drawer(this, ctx);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Particle;","import Particle from \"./particle\";\r\n\r\nnamespace DrawUtil {\r\n\r\n    export type Rgba = {\r\n        r: number;\r\n        g: number;\r\n        b: number;\r\n        a: number;\r\n    }\r\n\r\n    export type ColorStop = {\r\n        offset: number;\r\n        color: string;\r\n    }\r\n\r\n    export type DrawerParam = {\r\n        color: string;\r\n        radius?: number;\r\n        disappearStartRate?: number;\r\n    }\r\n\r\n    export const createGradDrawer = (param: DrawerParam) => {\r\n\r\n        const radius = param.radius ?? 30;\r\n        return (self: Particle.Instance, ctx: CanvasRenderingContext2D) => {\r\n            const x = self.pos.x;\r\n            const y = self.pos.y;\r\n            const g = ctx.createRadialGradient(x, y, 1, x, y, radius);\r\n\r\n            const grads: ColorStop[] = [];\r\n            const rgba = convertRgbaFromColorCode(param.color) ?? { r: 255, g: 255, b: 255, a: 255 };\r\n            grads.push({ offset: 0, color: '#ffffffe4' });\r\n            rgba.a = 40;\r\n            grads.push({ offset: 0.2, color: convertColorCodeFromRgba(rgba) })\r\n            rgba.a = 1;\r\n            grads.push({ offset: 1, color: convertColorCodeFromRgba(rgba) })\r\n\r\n            grads.forEach(grad => {\r\n                g.addColorStop(grad.offset, grad.color);\r\n            });\r\n\r\n            if (param.disappearStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.disappearStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    ctx.globalAlpha = (limit - frame) / limit;\r\n                }\r\n            }\r\n\r\n            ctx.fillStyle = g;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n        };\r\n    }\r\n\r\n    export const convertRgbaFromColorCode = (code: string): Rgba | null => {\r\n        const div = code.split('#');\r\n        if (div.length !== 2 || div[1].length < 6) return null;\r\n\r\n        const value = div[1];\r\n        const r = Number.parseInt(value.substring(0, 2), 16);\r\n        const g = Number.parseInt(value.substring(2, 4), 16);\r\n        const b = Number.parseInt(value.substring(4, 6), 16);\r\n        let a = 1;\r\n        if (value.length === 8) {\r\n            a = Number.parseInt(value.substring(6, 8), 16);\r\n        }\r\n        return { r, g, b, a };\r\n    }\r\n\r\n    export const convertColorCodeFromRgba = (rgba: Rgba): string => {\r\n        const r = ('00' + rgba.r.toString(16)).slice(-2);\r\n        const g = ('00' + rgba.g.toString(16)).slice(-2);\r\n        const b = ('00' + rgba.b.toString(16)).slice(-2);\r\n        const a = ('00' + rgba.a.toString(16)).slice(-2);\r\n        return `#${r}${g}${b}${a}`;\r\n    }\r\n\r\n    export const toWhite = (color: string, rate: number): string => {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport default DrawUtil;","namespace VectorUtil {\r\n\r\n    export type XY = {\r\n        x: number, y: number;\r\n    }\r\n\r\n    export class Vector {\r\n\r\n        xy: XY;\r\n        rad: number;\r\n        len: number;\r\n\r\n        constructor(xy: XY) {\r\n            this.xy = xy;\r\n            this.rad = 0;\r\n            this.len = 0;\r\n            this.syncFromXY();\r\n        }\r\n\r\n        syncFromXY = () => {\r\n            this.len = Math.sqrt(this.xy.x * this.xy.x + this.xy.y * this.xy.y);\r\n            this.rad = Math.atan2(this.xy.y, this.xy.x);\r\n        }\r\n\r\n        syncFromRad = () => {\r\n            this.xy.x = Math.cos(this.rad) * this.len;\r\n            this.xy.y = Math.sin(this.rad) * this.len;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default VectorUtil;","import { assert } from \"console\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport DrawUtil from \"../../graphic/drawUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport FactoryUtil from \"../factory/factoryUtil\";\r\n\r\nnamespace PreviewUtil {\r\n\r\n    export const SCREEN_WIDTH = 550;\r\n    export const SCREEN_HEIGHT = 550;\r\n\r\n    export type ValueMap = {\r\n        name: string;\r\n        value: number;\r\n    }\r\n\r\n    type ParentProps = {\r\n        pos: VectorUtil.XY;\r\n    }\r\n\r\n    export const buildOriginProps = (\r\n        owner: Particle.Instance[],\r\n        node: TreeUtil.ElementNode,\r\n        rootData: FactoryUtil.WrapNode,\r\n        args: ValueMap[]\r\n    ): Particle.Props => {\r\n\r\n        const searchDependLogic = (name: string): FactoryUtil.NodeLogicItem | null => {\r\n            const mng = (rootData.data as FactoryUtil.NodeRoot).inheritMng.data as FactoryUtil.NodeLogicManager;\r\n            const wrap = mng.defs.find(def => (def.data as FactoryUtil.NodeLogicItem).name === name);\r\n            if (wrap == undefined) return null;\r\n            return wrap.data as FactoryUtil.NodeLogicItem;\r\n        }\r\n\r\n        const createParticleRec = (cur: FactoryUtil.NodeLogicItem, fields: ValueMap[], parent: null | ParentProps): Particle.Props => {\r\n            let valueMapList: ValueMap[] = fields.concat(ConstantValueMap);\r\n\r\n            const visualParams = (searchElement('visual-mng', cur.mngs)?.data as FactoryUtil.NodeParamManager).\r\n                params.map(param => param.data as FactoryUtil.NodeParamItem);\r\n            const behaviorParams = (searchElement('behavior-mng', cur.mngs)?.data as FactoryUtil.NodeParamManager).\r\n                params.map(param => param.data as FactoryUtil.NodeParamItem);\r\n\r\n            const getVisualParam = (name: string) => {\r\n                return convertFormulaToValue(name, visualParams, valueMapList);\r\n            }\r\n            const getBehaviorParam = (name: string) => {\r\n                return convertFormulaToValue(name, behaviorParams, valueMapList);\r\n            }\r\n\r\n            const pos = parent == null ? { x: getBehaviorParam('pos_x'), y: getBehaviorParam('pos_y') } : parent.pos;\r\n            const vec = new VectorUtil.Vector({ x: 0, y: 0 });\r\n            if (behaviorParams[behaviorParams.length - 1].name === 'vec_y') {\r\n                vec.xy.x = getBehaviorParam('vec_x');\r\n                vec.xy.y = getBehaviorParam('vec_y');\r\n                vec.syncFromXY();\r\n            } else {\r\n                vec.rad = getBehaviorParam('radian');\r\n                vec.len = getBehaviorParam('length');\r\n                vec.syncFromRad();\r\n            }\r\n\r\n            const extendList: ((self: Particle.Instance) => void)[] = [];\r\n            const extendMng = searchElement('extend-mng', cur.mngs);\r\n\r\n            let disappearStartRate = undefined;\r\n            if (extendMng != null) {\r\n                const mngs = (extendMng.data as FactoryUtil.NodeExtendManager).mngs;\r\n                const connectMng = searchElement('inherit-connect-mng', mngs);\r\n                if (connectMng != null) {\r\n                    const connects = (connectMng.data as FactoryUtil.NodeInheritConnectManager).connects;\r\n\r\n                    connects.forEach(connect => {\r\n                        const connector = connect.data as FactoryUtil.NodeInheritConnector;\r\n\r\n                        // 実行条件\r\n                        const getCondition: ((self: Particle.Instance) => boolean) = (connector.condition === 'limit') ? (self: Particle.Instance) => {\r\n                            return self.frame === self.limit;\r\n                        } : (self: Particle.Instance) => {\r\n                            return true;\r\n                        };\r\n                        const logicItem = connector.connectType === 'create' ?\r\n                            searchElement('inherit-cache-item', connector.mngs)?.data as FactoryUtil.NodeLogicItem :\r\n                            searchDependLogic(connector.depend);\r\n\r\n                        if (logicItem != null) {\r\n                            let loopCnt = 1;\r\n                            const iterateItem = searchElement('iterate-mng', connector.mngs);\r\n                            if (iterateItem != null) {\r\n                                const params = (iterateItem.data as FactoryUtil.NodeParamManager).params.map(param => param.data as FactoryUtil.NodeParamItem);\r\n                                loopCnt = convertFormulaToValue('loop_count', params, valueMapList);\r\n                            }\r\n\r\n                            // フィールド関連のパラメータを追加\r\n                            // valueMapList\r\n                            for (let i = 0; i < loopCnt; i++) {\r\n\r\n                                // イテレータ関連のパラメータを追加\r\n                                let iterateValueMap: ValueMap[] = [];\r\n                                if (iterateItem != null) {\r\n                                    iterateValueMap = [\r\n                                        { name: 'loop_count', value: loopCnt },\r\n                                        { name: 'loop_iterator', value: i }\r\n                                    ]\r\n                                }\r\n\r\n                                const sendItem = searchElement('send-mng', connector.mngs)?.data as FactoryUtil.NodeParamManager;\r\n                                const params = sendItem.params.map(param => param.data as FactoryUtil.NodeParamItem);\r\n                                const sendValueMapList: ValueMap[] = params.map(item => {\r\n                                    return { name: item.name, value: convertFormulaToValue(item.name, params, valueMapList.concat(iterateValueMap)) }\r\n                                });\r\n                                extendList.push((self: Particle.Instance) => {\r\n                                    if (getCondition(self)) {\r\n                                        const props = createParticleRec(\r\n                                            logicItem,\r\n                                            sendValueMapList,\r\n                                            {\r\n                                                pos: { ...self.pos }\r\n                                            }\r\n                                        );\r\n                                        self.owner.push(new Particle.Instance(props));\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                const effectMng = searchElement('effect-mng', mngs);\r\n                if (effectMng != null) {\r\n                    const params = (effectMng.data as FactoryUtil.NodeParamManager).params.map(param => (param.data as FactoryUtil.NodeParamItem));\r\n\r\n                    const getEffectParam = (name: string) => {\r\n                        return convertFormulaToValue(name, params, valueMapList);\r\n                    }\r\n                    disappearStartRate = getEffectParam('disappear_start_rate');\r\n                    console.log(disappearStartRate);\r\n                }\r\n                const modulateMng = searchElement('modulate-mng', mngs);\r\n                if (modulateMng != null) {\r\n                    const params = (modulateMng.data as FactoryUtil.NodeParamManager).params.map(param => (param.data as FactoryUtil.NodeParamItem));\r\n\r\n                    const getModulateParam = (name: string) => {\r\n                        return convertFormulaToValue(name, params, valueMapList);\r\n                    }\r\n                    const decayLimit = getModulateParam('decay_limit');\r\n                    const decayRate = getModulateParam('decay_rate');\r\n                    const gravity = getModulateParam('gravity');\r\n                    extendList.push((self: Particle.Instance) => {\r\n                        modulate(self, {\r\n                            decayLimit, decayRate, gravity\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n\r\n            return {\r\n                owner, pos, vec,\r\n                limit: Math.floor(getBehaviorParam('limit')),\r\n                drawer: DrawUtil.createGradDrawer({\r\n                    radius: getVisualParam('radius'),\r\n                    color: DrawUtil.convertColorCodeFromRgba({\r\n                        r: getVisualParam('color_r'),\r\n                        g: getVisualParam('color_g'),\r\n                        b: getVisualParam('color_b'),\r\n                        a: getVisualParam('color_a'),\r\n                    }),\r\n                    disappearStartRate\r\n                }),\r\n                extend: extendList\r\n            };\r\n        }\r\n\r\n        const origin = (node.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeLogicItem;\r\n        return createParticleRec(origin, args, null);\r\n    }\r\n\r\n\r\n    const searchElement = (type: FactoryUtil.NodeType, warpList: FactoryUtil.WrapNode[]) => {\r\n        return warpList.find(wrap => wrap.type === type) ?? null;\r\n    }\r\n\r\n    const convertFormulaToValue = (name: string, params: FactoryUtil.NodeParamItem[], valueMapList: ValueMap[]): number => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return 0;\r\n\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item, i) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        return Function(`return (${formulaStr})`)();\r\n    }\r\n\r\n    export const ConstantValueMap: ValueMap[] = [\r\n        { name: 'screen_width', value: SCREEN_WIDTH },\r\n        { name: 'screen_height', value: SCREEN_HEIGHT },\r\n        { name: 'pi', value: 3.14159265359 },\r\n        { name: 'radian_round', value: 3.14159265359 * 2 }\r\n    ];\r\n\r\n    type ModulateParam = {\r\n        decayRate: number;\r\n        decayLimit: number;\r\n        gravity: number;\r\n    }\r\n\r\n    const modulate = (self: Particle.Instance, param: ModulateParam) => {\r\n\r\n        if (self.vec.len > param.decayLimit) {\r\n            self.vec.len = self.vec.len * param.decayRate;\r\n            self.vec.syncFromRad();\r\n            self.vec.xy.y += param.gravity;\r\n            self.vec.syncFromXY();\r\n        }\r\n    }\r\n}\r\n\r\nexport default PreviewUtil;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport FactoryUtil from \"../factory/factoryUtil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport DrawUtil from \"../../graphic/drawUtil\";\r\nimport PreviewUtil from \"./previewUtil\";\r\n\r\nnamespace LogicPreviewFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        rootData: FactoryUtil.WrapNode;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n\r\n        const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n        const [sceens, setSceens] = useState<string[]>([]);\r\n        const [frameCnt, setFrameCnt] = useState<number>(-1);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isBuild, setBuild] = useState<boolean>(false);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n        const getArgumentList = (): string[] => {\r\n            const argWrap = (props.node.children[0].data as FactoryUtil.WrapNode);\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as FactoryUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as FactoryUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n            return [];\r\n        }\r\n\r\n        const argumentList = useMemo(() => {\r\n            return getArgumentList();\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n            setFormList(argumentList.map(arg => {\r\n                return { value: '', errors: [] };\r\n            }));\r\n        }, []);\r\n\r\n        const formListJsx = useMemo(() => {\r\n            return formList.map((form, i) => {\r\n                return (\r\n                    <FormUtil.FormRecord\r\n                        key={i}\r\n                        titleLabel={argumentList[i]}\r\n                        labelWidth={250}\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={332}\r\n                                isNumber\r\n                                checkable={form}\r\n                                setCheckable={(checkable) => {\r\n                                    form = { ...checkable };\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />);\r\n            });\r\n        }, [formList]);\r\n\r\n\r\n        const build = () => {\r\n\r\n            setBuild(true);\r\n            const sceens: string[] = [];\r\n\r\n            const owner: Particle.Instance[] = [];\r\n\r\n            let i = 0;\r\n            do {\r\n                if (i === 0) {\r\n                    owner.push(new Particle.Instance(\r\n                        PreviewUtil.buildOriginProps(owner, props.node, props.rootData, formList.map((form, i) => {\r\n                            return { name: argumentList[i], value: Number(form.value) }\r\n                        }))\r\n                    ));\r\n                }\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                    ctx.font = '16pt Arial';\r\n                    ctx.fillStyle = '#ffffff';\r\n                    ctx.fillText(`${i}`, 6, 24);\r\n                    ctx.fillStyle = '#ffec5c';\r\n                    ctx.fillText(`${owner.length}`, 6, 44);\r\n\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n\r\n                    ctx.save();\r\n                }));\r\n\r\n                // パーティクルの更新\r\n                for (let i = 0; i < owner.length; i++) {\r\n                    const particle = owner[i];\r\n\r\n                    particle.update();\r\n                }\r\n\r\n                // 死滅したパーティクルの削除\r\n                for (let i = owner.length - 1; i >= 0; i--) {\r\n                    const particle = owner[i];\r\n                    if (!particle.isLive) {\r\n                        owner.splice(i, 1);\r\n                    }\r\n                }\r\n\r\n                if(i > 500 || owner.length > 3000) break;\r\n                i++;\r\n            } while (owner.length > 0);\r\n            setFrameCnt(i);\r\n            setSceens(sceens);\r\n            setBuild(false);\r\n            setTabIndex(1);\r\n        }\r\n\r\n\r\n        const isInputOK = () => {\r\n            return formList.find(form => form.errors.length > 0) == undefined;\r\n        }\r\n        const buildTabJsx = (\r\n            <_Wrap>\r\n                <_FormDiv>\r\n                    {formListJsx}\r\n                </_FormDiv>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'Build',\r\n                            isEnable: isInputOK(),\r\n                            callback: () => {\r\n                                build();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / (frameCnt - 1)} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Build', enable: true, cont: buildTabJsx },\r\n                            { name: 'Play', enable: frameCnt !== -1, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogicPreviewFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _FormDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 580px;\r\n    background-color: #a2c1d5df;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #aed5d8e0;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport LogicPreviewFrame from \"../../preview/logicPreviewFrame\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetLogicItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [isConnect, isInherit, hasArgNode, hasFieldNode, hasExtendNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as FactoryUtil.WrapNode).type;\r\n        });\r\n        const parentType = (node.parent?.data as FactoryUtil.WrapNode).type;\r\n        return [\r\n            parentType === 'inherit-connector',\r\n            parentType !== 'seed-mng',\r\n            list.includes('argument-mng'),\r\n            list.includes('field-mng'),\r\n            list.includes('extend-mng'),\r\n        ]\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        if (!isConnect) {\r\n            const param = wrap.data as FactoryUtil.NodeLogicItem;\r\n            setName({ ...name, value: param.name });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node, isConnect]);\r\n\r\n    return (<>\r\n        {isConnect ? <></> : (<>\r\n            <ModifyOperations.Component\r\n                mappingForm={mappingForm}\r\n                checkableFields={[name]}\r\n                firstRegist={() => {\r\n                    const param: FactoryUtil.NodeLogicItem = {\r\n                        name: name.value,\r\n                        mngs: FactoryUtil.getDefaultLogicMngs(isInherit)\r\n                    };\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n\r\n                    param.mngs.forEach(mng => {\r\n                        const newNode = TreeUtil.createNode(mng, node);\r\n                        const data = (newNode.data as FactoryUtil.WrapNode);\r\n                        switch (data.type) {\r\n                            case 'visual-mng': {\r\n                                (data.data as FactoryUtil.NodeParamManager).params.forEach(param => {\r\n                                    newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                                });\r\n                            } break;\r\n                            case 'behavior-mng': {\r\n                                (data.data as FactoryUtil.NodeParamManager).params.forEach(param => {\r\n                                    newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                                });\r\n                            } break;\r\n                        }\r\n                        node.children.push(newNode);\r\n                    });\r\n                }}\r\n                modifyRegist={() => {\r\n                    const param = wrap.data as FactoryUtil.NodeLogicItem;\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n                }}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"param\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Name\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={200}\r\n                                isReadOnly={!isModify}\r\n                                checkable={name}\r\n                                setCheckable={setName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => FactoryUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n        </>)}\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Argument'}\r\n                        width={300}\r\n                        isUse={hasArgNode}\r\n                        callback={() => {\r\n                            const data = (wrap.data as FactoryUtil.NodeLogicItem);\r\n                            if (hasArgNode) {\r\n                                data.mngs.splice(0, 1);\r\n                                node.children.splice(0, 1);\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            } else {\r\n                                const newWrap: FactoryUtil.WrapNode = {\r\n                                    type: 'argument-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as FactoryUtil.NodeArgumentManager\r\n                                }\r\n                                data.mngs.unshift(newWrap);\r\n                                const newNode = TreeUtil.createNode(newWrap, node);\r\n                                node.children.unshift(newNode);\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={false}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        callback={() => {\r\n                            if (hasFieldNode) {\r\n                            } else {\r\n                                const newWrap: FactoryUtil.WrapNode = {\r\n                                    type: 'field-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as FactoryUtil.NodeFieldManager\r\n                                }\r\n                                const data = (wrap.data as FactoryUtil.NodeLogicItem);\r\n                                data.mngs.push(newWrap);\r\n                                const newNode = TreeUtil.createNode(newWrap, node);\r\n                                node.children.push(newNode);\r\n                                setFocusNode(newNode);\r\n                            }\r\n                            setModify(true);\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Extend'}\r\n                            width={300}\r\n                            isUse={hasExtendNode}\r\n                            callback={() => {\r\n                                const data = (wrap.data as FactoryUtil.NodeLogicItem);\r\n                                if (hasExtendNode) {\r\n                                    console.log(data.mngs[data.mngs.length - 1].type);\r\n                                    data.mngs.splice(data.mngs.length - 1, 1);\r\n                                    node.children.splice(node.children.length - 1, 1);\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                } else {\r\n                                    const newWrap: FactoryUtil.WrapNode = {\r\n                                        type: 'extend-mng',\r\n                                        data: {\r\n                                            mngs: []\r\n                                        } as FactoryUtil.NodeExtendManager\r\n                                    }\r\n                                    data.mngs.push(newWrap);\r\n                                    const newNode = TreeUtil.createNode(newWrap, node);\r\n                                    node.children.push(newNode);\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                }\r\n                            }}\r\n                        />}\r\n                />\r\n            </>}\r\n        />\r\n        {isConnect ? <></> : (\r\n            <FormUtil.BorderPanel\r\n                title=\"operation\"\r\n                isEnable={!isModify}\r\n                innerJsx={<>\r\n                    {isInherit ? <></> : (\r\n                        <FormUtil.ButtonRecord\r\n                            isCenter\r\n                            buttons={[\r\n                                {\r\n                                    label: 'Preview',\r\n                                    callback: () => {\r\n                                        store.system.dialog = (\r\n                                            <LogicPreviewFrame.Component\r\n                                                node={node}\r\n                                                rootData={rootData}\r\n                                            />\r\n                                        );\r\n                                        setStore({ ...store });\r\n                                    }\r\n                                }\r\n                            ]}\r\n                        />\r\n                    )}\r\n                    <FormUtil.ButtonRecord\r\n                        isCenter\r\n                        buttons={[\r\n                            {\r\n                                label: 'Delete',\r\n                                callback: () => {\r\n                                    let index = -1;\r\n                                    node.parent?.children.forEach((n, i) => {\r\n                                        if (n == node) index = i;\r\n                                    });\r\n                                    node.parent?.children.splice(index, 1);\r\n                                    ((node.parent?.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeLogicManager).defs.splice(index, 1);\r\n                                    setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                                    invalidate();\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default FactDetLogicItem;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\ntype FormProps = {\r\n    inputType: FormUtil.CheckableValue;\r\n    value: FormUtil.CheckableValue;\r\n};\r\n\r\nconst FactOprParam = () => {\r\n    const { node, setFocusNode, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    /** 式 */\r\n    const [formulaItems, setFormulaItems] = useState<string[]>([]);\r\n    /** 変数の入力フォーム */\r\n    const [varFormList, setVarFormList] = useState<FormProps[]>([]);\r\n    // const [formJsxList, setFaormJsxList] = useState<JSX.Element[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as FactoryUtil.NodeParamItem;\r\n        setFormulaItems(param.formulaItems.slice());\r\n        setVarFormList(param.values.map(v => {\r\n            return {\r\n                inputType: { value: v.type, errors: [] },\r\n                value: { value: v.value, errors: [] }\r\n            }\r\n        }));\r\n    };\r\n\r\n    const fieldKeyList = useMemo(() => {\r\n        const parentType = (node.parent?.data as FactoryUtil.WrapNode).type;\r\n        switch (parentType) {\r\n            case 'send-mng': {\r\n                const isIterate = (node.parent?.parent?.children[0].data as FactoryUtil.WrapNode).type === 'iterate-mng';\r\n                const keys: string[] = [];\r\n                if (isIterate) {\r\n                    keys.push('loop_count');\r\n                    keys.push('loop_iterator');\r\n                }\r\n                return keys;\r\n            }\r\n        }\r\n        return [];\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        mappingForm();\r\n    }, [node]);\r\n\r\n    /** 引数リスト */\r\n    const argumentList = useMemo(() => {\r\n        const getTargetWrap = () => {\r\n            switch (wrap.type) {\r\n                case 'visual-item':\r\n                case 'behavior-item': {\r\n                    return node.parent?.parent?.children[0].data as FactoryUtil.WrapNode;\r\n                }\r\n                case 'iterate-item': {\r\n                    return node.parent?.parent?.parent?.parent?.parent?.children[0].data as FactoryUtil.WrapNode;\r\n                }\r\n            }\r\n        }\r\n        const targetWrap = getTargetWrap();\r\n        if (targetWrap == undefined || targetWrap.type !== 'argument-mng') return [];\r\n\r\n        console.log((targetWrap.data as FactoryUtil.NodeArgumentManager).args);\r\n        return (targetWrap.data as FactoryUtil.NodeArgumentManager).args.map(arg => {\r\n            const item = arg.data as FactoryUtil.NodeArgumentItem;\r\n            return item.name;\r\n        });\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (item === 'var') num++;\r\n        });\r\n\r\n        if (varFormList.length < num) {\r\n            const addNum = num - varFormList.length;\r\n            for (let i = 0; i < addNum; i++) varFormList.push({\r\n                inputType: { value: 'direct', errors: [] },\r\n                value: { value: '', errors: [] }\r\n            });\r\n            setVarFormList(varFormList.slice());\r\n        } else if (varFormList.length > num) {\r\n            const delNum = varFormList.length - num;\r\n            for (let i = 0; i < delNum; i++) varFormList.splice(varFormList.length - delNum, delNum);\r\n            setVarFormList(varFormList.slice());\r\n        }\r\n    }, [formulaItems]);\r\n\r\n    /** 「(」の数-「)」の数 */\r\n    const parenthesisBalance = useMemo(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (['(', 'rand('].includes(item)) num++;\r\n            else if (item === ')') num--;\r\n        });\r\n        return num;\r\n    }, [formulaItems]);\r\n\r\n    /** 値の入力フォームのJSX */\r\n    const formJsxList = useMemo(() => {\r\n        return varFormList.map((v, i) => {\r\n\r\n            const getValueForm = (): JSX.Element => {\r\n                const type = v.inputType.value as FactoryUtil.ParamInputType;\r\n                if (type === 'direct') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isNumber\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                        // validates={[\r\n                        //     {\r\n                        //         checker: (value) => value !== '0',\r\n                        //         errorType: \"value\"\r\n                        //     }\r\n                        // ]}\r\n                        />\r\n                    );\r\n                } else {\r\n                    let list: string[] = [];\r\n                    if (type === 'argument') {\r\n                        list = argumentList;\r\n                    } else if (type === 'field') {\r\n                        list = fieldKeyList;\r\n                    } else if (type === 'constant') {\r\n                        list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                    }\r\n                    return (\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            list={list.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n            return <FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={`var_${i}`}\r\n                labelWidth={90}\r\n                marginTop={i === 0 ? 4 : 0}\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        checkable={v.inputType}\r\n                        width={142}\r\n                        isReadOnly={!isModify}\r\n                        setCheckable={(checkable) => {\r\n                            varFormList[i].inputType = checkable;\r\n                            if (isModify) {\r\n                                varFormList[i].value.value = checkable.value === 'direct' ? '0' : '';\r\n                            }\r\n                            setVarFormList(varFormList.slice());\r\n                        }}\r\n                        list={FactoryUtil.ParamInputTypes.map(item => {\r\n                            return { value: item, labelText: item };\r\n                        })}\r\n                    />\r\n                    {getValueForm()}\r\n                </>}\r\n            />;\r\n        });\r\n    }, [varFormList, isModify]);\r\n\r\n    const getFormulaJsx = () => {\r\n        let num = 0;\r\n        const jsxList: JSX.Element[] = [];\r\n        formulaItems.forEach((item) => {\r\n            if (jsxList.length > 0) {\r\n                jsxList.push(<span key={jsxList.length}>&nbsp;</span>);\r\n            }\r\n            if (item === 'var') {\r\n                jsxList.push(<_Var key={jsxList.length}>{`$\\{var_${num}}`}</_Var>);\r\n                num++;\r\n            } else {\r\n                jsxList.push(<_Sig key={jsxList.length}>{item}</_Sig>);\r\n            }\r\n        });\r\n        return jsxList;\r\n    }\r\n\r\n    const isLastVar = () => formulaItems.length > 0 && ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const isFormulaOK = parenthesisBalance === 0 && varFormList.length > 0 &&\r\n        ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const hasFormError = !isFormulaOK || varFormList.find(varForm => varForm.value.errors.length > 0) != undefined;\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[]}\r\n            firstRegist={() => { }}\r\n            isInputOK={parenthesisBalance === 0 && !hasFormError}\r\n            modifyRegist={() => {\r\n                const data = wrap.data as FactoryUtil.NodeParamItem;\r\n                data.formulaItems = formulaItems.slice();\r\n                data.values = varFormList.map(varForm => {\r\n                    return {\r\n                        type: varForm.inputType.value as FactoryUtil.ParamInputType,\r\n                        value: varForm.value.value\r\n                    }\r\n                });\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"formula\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: '+',\r\n                            width: 50,\r\n                            isEnable: isModify && isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('+');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '-',\r\n                            width: 50,\r\n                            isEnable: isModify && isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('-');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '*',\r\n                            width: 50,\r\n                            isEnable: isModify && isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('*');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '/',\r\n                            width: 50,\r\n                            isEnable: isModify && isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('/');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '%',\r\n                            width: 50,\r\n                            isEnable: isModify && isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('%');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '(',\r\n                            width: 35,\r\n                            isEnable: isModify && !isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('(');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: ')',\r\n                            width: 35,\r\n                            isEnable: isModify && isLastVar() && parenthesisBalance > 0,\r\n                            callback: () => {\r\n                                formulaItems.push(')');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'del',\r\n                            width: 60,\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            callback: () => {\r\n                                formulaItems.splice(formulaItems.length - 1, 1);\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'var',\r\n                            width: 70,\r\n                            isEnable: isModify && !isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('var');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'rand',\r\n                            width: 80,\r\n                            isEnable: isModify && !isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('rand(');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'clear',\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            width: 90,\r\n                            callback: () => {\r\n                                setFormulaItems([]);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_Formula\r\n                    isInvalid={!isFormulaOK}\r\n                >{getFormulaJsx()}</_Formula>\r\n                {formJsxList}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactOprParam;\r\n\r\nconst _Formula = styled.div<{\r\n    isInvalid: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 12px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    overflow-wrap: break-word;\r\n    height: 100px;//calc(100% - 4px);\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    background-color: #ffffff8b;\r\n    ${props => !props.isInvalid ? '' : css`\r\n        background-color: #ffe8628a;\r\n    `}\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    padding: 0 0 0 4px;\r\n    vertical-align: top;\r\n    margin: 5px 0 0 6px;\r\n`;\r\nconst _Var = styled.span`\r\n    color: #e70013;\r\n`;\r\nconst _Sig = styled.span`\r\n    color: #3333339d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetBehiviorMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamManager;\r\n\r\n\r\n    /** ベクトル指定か否か */\r\n    const isVector = useMemo(() => {\r\n        const swapPos = node.children.length - 2;\r\n        return ((node.children[swapPos].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name === 'vec_x';\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Vector method'}\r\n                            width={300}\r\n                            isEnable={!isVector}\r\n                            isUse={isVector}\r\n                            callback={() => {\r\n                                const swapPos = node.children.length - 2;\r\n                                node.children.splice(swapPos, 2);\r\n                                {\r\n                                    const wrap = FactoryUtil.createParamWrap('behavior-item',\r\n                                        { name: 'vec_x', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] });\r\n                                    mng.params.push(wrap);\r\n                                    node.children.push(TreeUtil.createNode(wrap, node));\r\n                                }\r\n                                {\r\n                                    const wrap = FactoryUtil.createParamWrap('behavior-item',\r\n                                        { name: 'vec_y', formulaItems: ['var'], values: [{ type: 'direct', value: '-10' }] });\r\n                                    mng.params.push(wrap);\r\n                                    node.children.push(TreeUtil.createNode(wrap, node));\r\n                                }\r\n                                invalidate();\r\n                                setFocusNode({ ...node });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Direction method'}\r\n                            width={300}\r\n                            isEnable={isVector}\r\n                            isUse={!isVector}\r\n                            callback={() => {\r\n                                const swapPos = node.children.length - 2;\r\n                                node.children.splice(swapPos, 2);\r\n                                {\r\n                                    const wrap = FactoryUtil.createParamWrap('behavior-item',\r\n                                        { name: 'radian', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] });\r\n                                    mng.params.push(wrap);\r\n                                    node.children.push(TreeUtil.createNode(wrap, node));\r\n                                }\r\n                                {\r\n                                    const wrap = FactoryUtil.createParamWrap('behavior-item',\r\n                                        { name: 'length', formulaItems: ['var'], values: [{ type: 'direct', value: '10' }] });\r\n                                    mng.params.push(wrap);\r\n                                    node.children.push(TreeUtil.createNode(wrap, node));\r\n                                }\r\n                                invalidate();\r\n                                setFocusNode({ ...node });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetBehiviorMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetVisualMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    /** ベクトル指定か否か */\r\n    // const isVector = useMemo(() => {\r\n    //     console.log(((node.children[3].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name);\r\n    //     return ((node.children[3].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name === 'vector-x';\r\n    // }, [node]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Particle Method'}\r\n                            width={300}\r\n                            isEnable={false}\r\n                            isUse={true}\r\n                            callback={() => {\r\n                                // node.children.splice(3, 2);\r\n                                // node.children.push(TreeUtil.createNode({type: 'behavior-item', data: {name: 'radius'}}, node));\r\n                                // node.children.push(TreeUtil.createNode({type: 'behavior-item', data: {name: 'length'}}, node));\r\n                                // invalidate();\r\n                                // setFocusNode({...node});\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetVisualMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactoryTab, { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\n\r\nconst FactDetInheritConnMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeInheritConnectManager;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Connector',\r\n                        callback: () => {\r\n                            const wrap: FactoryUtil.WrapNode = {\r\n                                type: 'inherit-connector',\r\n                                data: null\r\n                            }\r\n                            mng.connects.push(wrap);\r\n                            const newNode = TreeUtil.createNode(wrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetInheritConnMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetEffectMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n\r\n    /** ベクトル指定か否か */\r\n    // const isVector = useMemo(() => {\r\n    //     console.log(((node.children[0].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name);\r\n    //     return ((node.children[3].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name === 'vector-x';\r\n    // }, [node]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Disappear Method'}\r\n                            width={300}\r\n                            isEnable={false}\r\n                            isUse={true}\r\n                            callback={() => {\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetEffectMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetModulateMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n\r\n    /** ベクトル指定か否か */\r\n    // const isVector = useMemo(() => {\r\n    //     console.log(((node.children[0].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name);\r\n    //     return ((node.children[3].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name === 'vector-x';\r\n    // }, [node]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Gravity Method'}\r\n                            width={300}\r\n                            isEnable={false}\r\n                            isUse={true}\r\n                            callback={() => {\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetModulateMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetInheritConnector = () => {\r\n    const { rootData, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    const [condition, setCondition] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [connectType, setConnectType] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [depend, setDepend] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [hasIterateNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as FactoryUtil.WrapNode).type;\r\n        });\r\n        return [\r\n            list.includes('iterate-mng'),\r\n        ]\r\n    }, [node, node.children.length]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as FactoryUtil.NodeInheritConnector;\r\n        setCondition({ ...condition, value: param.condition });\r\n        setConnectType({ ...connectType, value: param.connectType });\r\n        setDepend({ ...depend, value: param.depend });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const isCreate = connectType.value === 'create';\r\n\r\n    const inheritList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as FactoryUtil.NodeRoot;\r\n        const inheritMng = rootNode.inheritMng.data as FactoryUtil.NodeLogicManager;\r\n        return inheritMng.defs.map(wrap => {\r\n            return (wrap.data as FactoryUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    const getSendParamList = (): string[] => {\r\n        if (!isCreate) {\r\n            const rootNode = rootData.data as FactoryUtil.NodeRoot;\r\n            const inheritMng = rootNode.inheritMng.data as FactoryUtil.NodeLogicManager;\r\n            const dependItem = inheritMng.defs.find(wrap => {\r\n                return (wrap.data as FactoryUtil.NodeLogicItem).name === depend.value;\r\n            });\r\n            if (dependItem != undefined) {\r\n                const argWrap = (dependItem.data as FactoryUtil.NodeLogicItem).mngs[0];\r\n                if (argWrap.type === 'argument-mng') {\r\n                    return (argWrap.data as FactoryUtil.NodeArgumentManager).args.map(arg => {\r\n                        return (arg.data as FactoryUtil.NodeArgumentItem).name;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const setSendParams = (param: FactoryUtil.NodeInheritConnector) => {\r\n\r\n        const sendIndex = param.mngs[0].type === 'send-mng' ? 0 : 1;\r\n        const sendMng = param.mngs[sendIndex].data as FactoryUtil.NodeParamManager;\r\n        const sendNode = node.children[sendIndex];\r\n        sendMng.params = [];\r\n        sendNode.children = [];\r\n        getSendParamList().forEach(param => {\r\n            const paramWrap = FactoryUtil.createParamWrap('send-item',\r\n                { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n            );\r\n            sendMng.params.push(paramWrap);\r\n            sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n        });\r\n    }\r\n\r\n    const initConnectorNode = (param: FactoryUtil.NodeInheritConnector) => {\r\n        param.mngs = [];\r\n        node.children = [];\r\n        param.mngs.push({\r\n            type: 'send-mng',\r\n            data: {\r\n                params: []\r\n            } as FactoryUtil.NodeParamManager\r\n        });\r\n        if (isCreate) {\r\n            param.mngs.push({\r\n                type: 'inherit-cache-item',\r\n                data: {\r\n                    mngs: FactoryUtil.getDefaultLogicMngs(true)\r\n                } as FactoryUtil.NodeConnectInheritItem\r\n            });\r\n        }\r\n        wrap.data = param;\r\n\r\n        param.mngs.forEach(mng => {\r\n            const newNode = TreeUtil.createNode(mng, node);\r\n            const data = (newNode.data as FactoryUtil.WrapNode);\r\n            switch (data.type) {\r\n                case 'inherit-cache-item': {\r\n                    (data.data as FactoryUtil.NodeConnectInheritItem).mngs.forEach(mng => {\r\n                        const inheritNode = TreeUtil.createNode(mng, newNode);\r\n                        newNode.children.push(inheritNode);\r\n\r\n                        switch (mng.type) {\r\n                            case 'visual-mng': {\r\n                                (mng.data as FactoryUtil.NodeParamManager).params.forEach(param => {\r\n                                    inheritNode.children.push(TreeUtil.createNode(param, inheritNode));\r\n                                });\r\n                            } break;\r\n                            case 'behavior-mng': {\r\n                                (mng.data as FactoryUtil.NodeParamManager).params.forEach(param => {\r\n                                    inheritNode.children.push(TreeUtil.createNode(param, inheritNode));\r\n                                });\r\n                            } break;\r\n                        }\r\n                    });\r\n                } break;\r\n            }\r\n            node.children.push(newNode);\r\n        });\r\n        setSendParams(param);\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[condition, connectType, depend]}\r\n            firstRegist={() => {\r\n                const param: FactoryUtil.NodeInheritConnector = {\r\n                    condition: condition.value as FactoryUtil.ConditionType,\r\n                    connectType: connectType.value as FactoryUtil.ConnectType,\r\n                    depend: depend.value,\r\n                    mngs: []\r\n                };\r\n                initConnectorNode(param);\r\n                invalidate();\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as FactoryUtil.NodeInheritConnector;\r\n                const isChange = param.connectType !== connectType.value || param.depend !== depend.value;\r\n                param.condition = condition.value as FactoryUtil.ConditionType;\r\n                param.connectType = connectType.value as FactoryUtil.ConnectType;\r\n                param.depend = depend.value;\r\n                wrap.data = param;\r\n\r\n                if (isChange) {\r\n                    initConnectorNode(param);\r\n                }\r\n                invalidate();\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Condition\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={condition}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setCondition}\r\n                            list={FactoryUtil.ConditionTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Inherit\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={connectType}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                // createが選択されたらdependを空にする\r\n                                if (checkable.value === 'create') {\r\n                                    setDepend({ ...depend, value: '' });\r\n                                }\r\n                                setConnectType(checkable);\r\n                            }}\r\n                            list={FactoryUtil.ConnectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Depend\"\r\n                    isEnable={connectType.value === 'depend'}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={depend}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setDepend}\r\n                            list={inheritList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            dependency={[connectType]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => {\r\n                                        return connectType.value !== 'depend' || ValidateUtil.checkRequired(value);\r\n                                    },\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Iterate'}\r\n                        width={300}\r\n                        isUse={hasIterateNode}\r\n                        callback={() => {\r\n                            const data = (wrap.data as FactoryUtil.NodeLogicItem);\r\n                            if (hasIterateNode) {\r\n                                data.mngs.splice(0, 1);\r\n                                node.children.splice(0, 1);\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            } else {\r\n                                const newWrap: FactoryUtil.WrapNode = {\r\n                                    type: 'iterate-mng',\r\n                                    data: {\r\n                                        params: []\r\n                                    } as FactoryUtil.NodeParamManager\r\n                                };\r\n\r\n                                data.mngs.unshift(newWrap);\r\n                                const newNode = TreeUtil.createNode(newWrap, node);\r\n                                node.children.unshift(newNode);\r\n\r\n                                const loopCountWrap = FactoryUtil.createParamWrap('iterate-item',\r\n                                    { name: 'loop_count', formulaItems: ['var'], values: [{ type: 'direct', value: '1' }] });\r\n                                (newWrap.data as FactoryUtil.NodeParamManager).params.push(loopCountWrap);\r\n                                newNode.children.push(TreeUtil.createNode(loopCountWrap, newNode));\r\n\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                let index = -1;\r\n                                node.parent?.children.forEach((n, i) => {\r\n                                    if (n == node) index = i;\r\n                                });\r\n                                node.parent?.children.splice(index, 1);\r\n                                ((node.parent?.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeInheritConnectManager).connects.splice(index, 1);\r\n                                setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                                invalidate();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetInheritConnector;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactoryTab, { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\n\r\nconst FactDetSendManager = () => {\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    const getSendParamList = (): string[] => {\r\n        const connector = (node.parent?.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeInheritConnector;\r\n        const isCreate = connector.connectType === 'create';\r\n        let targetWrap: FactoryUtil.WrapNode | null = null;\r\n        if (!isCreate) {\r\n            const rootNode = rootData.data as FactoryUtil.NodeRoot;\r\n            const inheritMng = rootNode.inheritMng.data as FactoryUtil.NodeLogicManager;\r\n            const dependItem = inheritMng.defs.find(wrap => {\r\n                return (wrap.data as FactoryUtil.NodeLogicItem).name === connector.depend;\r\n            });\r\n            if (dependItem != undefined) targetWrap = dependItem;\r\n        } else {\r\n            targetWrap = (node.parent?.children[node.parent?.children.length - 1].data as FactoryUtil.WrapNode)\r\n        }\r\n        if (targetWrap != null) {\r\n            const argWrap = (targetWrap.data as FactoryUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as FactoryUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as FactoryUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const update = () => {\r\n        const sendParamList = getSendParamList();\r\n        const curSize = node.children.length;\r\n        const params = (wrap.data as FactoryUtil.NodeParamManager).params;\r\n        // 不要なパラメータを削除\r\n        for (let i = curSize - 1; i >= 0; i--) {\r\n            const name = (params[i].data as FactoryUtil.NodeParamItem).name;\r\n            if (!sendParamList.includes(name)) {\r\n                node.children.splice(i, 1);\r\n                params.splice(i, 1);\r\n            }\r\n        }\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as FactoryUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = FactoryUtil.createParamWrap('send-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n                node.children.push(TreeUtil.createNode(paramWrap, node));\r\n            }\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Update Params',\r\n                        callback: () => {\r\n                            update();\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetSendManager;","import { type } from \"os\";\r\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport Common from \"../common\";\r\nimport FactDetArgumentMng from \"./detail/factDetArgumentMng\";\r\nimport FactDetArgumentItem from \"./detail/factDetArgumentItem\";\r\nimport FactDetInheritMng from \"./detail/factDetInheritMng\";\r\nimport FactDetExtendMng from \"./detail/factDetExtendMng\";\r\nimport FactDetOriginMng from \"./detail/factDetOriginMng\";\r\nimport FactDetLogicItem from \"./detail/factDetLogicItem\";\r\nimport FactOprParam from \"./detail/factOprParam\";\r\nimport FactDetBehiviorMng from \"./detail/factDetBehiviorMng\";\r\nimport FactDetVisualMng from \"./detail/factDetVisualMng\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport FactDetInheritConnMng from \"./detail/factDetInheritConnMng\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport FactDetEffectMng from \"./detail/factDetEffectMng\";\r\nimport FactDetModulateMng from \"./detail/factDetModulateMng\";\r\nimport FactDetInheritConnector from \"./detail/factDetInheritConnector\";\r\nimport FactDetSendManager from \"./detail/factDetSendManager\";\r\n\r\nnamespace FactoryUtil {\r\n\r\n    export type DetailArgs = {\r\n        rootData: FactoryUtil.WrapNode;\r\n        node: TreeUtil.ElementNode;\r\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\r\n        invalidate: () => void;\r\n        isModify: boolean;\r\n        setModify: (isModify: boolean) => void;\r\n        setRootData: React.Dispatch<React.SetStateAction<WrapNode>>;\r\n        // treeDisable: boolean;\r\n        // setTreeDisable: (treeDisable: boolean) => void;\r\n    }\r\n\r\n    /**\r\n     * 変数名チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkFieldName = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyz_';\r\n        return !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].\r\n            includes(str.substring(0, 1)) && ValidateUtil.checkIncludesChars(str, list);\r\n    }\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'seed-mng' |\r\n        'inherit-mng' |\r\n        'seed-item' |\r\n        'inherit-item' |\r\n        'loop-mng' |\r\n        'argument-mng' |\r\n        'extend-mng' |\r\n        'field-mng' |\r\n        'inherit-mng' |\r\n        'modulate-mng' |\r\n        'modulate-item' |\r\n        'inherit-cache-item' |\r\n        'visual-mng' |\r\n        'visual-item' |\r\n        'behavior-mng' |\r\n        'behavior-item' |\r\n        'field-mng' |\r\n        'argument-item' |\r\n        'inherit-connect-mng' |\r\n        'inherit-connector' |\r\n        'effect-mng' |\r\n        'effect-item' |\r\n        'iterate-mng' |\r\n        'iterate-item' |\r\n        'send-mng' |\r\n        'send-item'\r\n        ;\r\n\r\n    export const ArgTypes = ['int', 'float', 'color'] as const;\r\n    export type ArgumentType = typeof ArgTypes[number];\r\n\r\n\r\n    export const ParamInputTypes = ['direct', 'constant', 'argument', 'field'] as const;\r\n    export type ParamInputType = typeof ParamInputTypes[number];\r\n\r\n    export type ParamProps = {\r\n        type: ParamInputType;\r\n        value: string;\r\n    }\r\n\r\n    export type WrapNode = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        // caches: Common.Cache[];\r\n        seedMng: WrapNode;\r\n        inheritMng: WrapNode;\r\n    }\r\n    export type NodeLogicManager = {\r\n        defs: WrapNode[];\r\n    }\r\n    export type NodeLogicItem = {\r\n        name: string;\r\n        mngs: WrapNode[];\r\n    }\r\n    export type NodeConnectInheritItem = {\r\n        mngs: WrapNode[];\r\n    }\r\n    export type NodeParamManager = {\r\n        params: WrapNode[];\r\n    }\r\n    // export type NodeVisualManager = {\r\n    //     params: WrapNode[];\r\n    // }\r\n    export type NodeParamItem = {\r\n        name: string;\r\n        formulaItems: string[];\r\n        values: ParamProps[];\r\n\r\n    }\r\n\r\n    export type NodeArgumentItem = {\r\n        name: string;\r\n        valueType: ArgumentType;\r\n    }\r\n    export type NodeArgumentManager = {\r\n        args: WrapNode[];\r\n    }\r\n    export type NodeFieldManager = {\r\n        args: WrapNode[];\r\n    }\r\n\r\n    export type NodeExtendManager = {\r\n        mngs: WrapNode[];\r\n    }\r\n\r\n    // export type NodeInheritManager = {\r\n    //     defs: WrapNode[];\r\n    // }\r\n    export type NodeInheritConnectManager = {\r\n        connects: WrapNode[];\r\n    }\r\n    export type NodeInheritConnector = {\r\n        condition: ConditionType;\r\n        connectType: ConnectType;\r\n        depend: string;\r\n        mngs: WrapNode[];\r\n    }\r\n\r\n    export const createParamWrap = (type: NodeType, paramDataList: NodeParamItem): WrapNode => {\r\n        return { type: type, data: paramDataList };\r\n    }\r\n    export const createParamWrapList = (type: NodeType, paramDataList: NodeParamItem[]): WrapNode[] => {\r\n        return paramDataList.map(data => {\r\n            return { type: type, data: data };\r\n        });\r\n    }\r\n\r\n    export const createVisualParams = (): WrapNode[] => {\r\n        return createParamWrapList('visual-item', [\r\n            { name: 'radius', formulaItems: ['var'], values: [{ type: 'direct', value: '20' }] },\r\n            { name: 'color_r', formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: 'color_g', formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: 'color_b', formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: 'color_a', formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n        ]);\r\n    }\r\n\r\n    export const createBehaviorParams = (isInherit: boolean): WrapNode[] => {\r\n        const list: NodeParamItem[] = [];\r\n        list.push({ name: 'limit', formulaItems: ['var'], values: [{ type: 'direct', value: '30' }] });\r\n        if (!isInherit) {\r\n            list.push({ name: 'pos_x', formulaItems: ['var', '/', 'var'], values: [{ type: 'constant', value: 'screen_width' }, { type: 'direct', value: '2' }] });\r\n            list.push({ name: 'pos_y', formulaItems: ['var', '+', 'var'], values: [{ type: 'constant', value: 'screen_height' }, { type: 'direct', value: '20' }] });\r\n        }\r\n        list.push({ name: 'vec_x', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] });\r\n        list.push({ name: 'vec_y', formulaItems: ['var'], values: [{ type: 'direct', value: '-10' }] });\r\n        return createParamWrapList('behavior-item', list);\r\n    }\r\n\r\n    export const getDefaultLogicMngs = (isInherit: boolean): WrapNode[] => {\r\n        return [\r\n            {\r\n                type: 'visual-mng',\r\n                data: {\r\n                    params: FactoryUtil.createVisualParams()\r\n                } as FactoryUtil.NodeParamManager\r\n            },\r\n            {\r\n                type: 'behavior-mng',\r\n                data: {\r\n                    params: FactoryUtil.createBehaviorParams(isInherit)\r\n                } as FactoryUtil.NodeParamManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    // export const createExtendMngs = (): WrapNode[] => {\r\n    //     return [\r\n    //         {\r\n    //             type: 'inherit-mng',\r\n    //             data: {\r\n    //             } as NodeInheritMng\r\n    //         },\r\n    //         {\r\n    //             type: 'trace-mng',\r\n    //             data: {\r\n    //             } as NodeInheritMng\r\n    //         },\r\n    //         {\r\n    //             type: 'modulate-mng',\r\n    //             data: {\r\n    //             } as NodeInheritMng\r\n    //         },\r\n    //     ];\r\n    // }\r\n\r\n    export const getInitialData = (): WrapNode => {\r\n        return {\r\n            type: 'root',\r\n            data: {\r\n                seedMng: {\r\n                    type: 'seed-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as NodeLogicManager\r\n                } as WrapNode,\r\n                inheritMng: {\r\n                    type: 'inherit-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as NodeLogicManager\r\n                } as WrapNode\r\n            } as NodeRoot\r\n        }\r\n    }\r\n\r\n    const COLOR_ROOT = '#a1a1a1';\r\n    const COLOR_METHOD = '#cca67b';\r\n    const COLOR_MNG = '#37a2bd';\r\n    const COLOR_LIST = '#b85f5f';\r\n    const COLOR_ITEM = '#ae628c';\r\n    const COLOR_PARAM = '#8dae62';\r\n\r\n    export const getNodeJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapNode;\r\n        switch (wrap.type) {\r\n            case 'root': {\r\n                return <_Category backgroundColor={COLOR_ROOT}>Logic</_Category>;\r\n            }\r\n            case 'seed-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Origin Manager</_Category>;\r\n            }\r\n            case 'inherit-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Inherit Manager</_Category>;\r\n            }\r\n            case 'visual-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Visual</_Category>;\r\n            }\r\n            case 'extend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Extend</_Category>;\r\n            }\r\n            case 'modulate-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Modulate</_Category>;\r\n            }\r\n            case 'seed-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Origin</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Inherit</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-cache-item': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Inherit</_Category>;\r\n            }\r\n            case 'argument-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'behavior-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Behavior</_Category>;\r\n            }\r\n            case 'inherit-connect-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Connect Manager</_Category>;\r\n            }\r\n            case 'inherit-connector': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeInheritConnector;\r\n                    detailJsx = <span>{`${data.condition} ${data.connectType}`}</span>;\r\n                    if (data.connectType === 'depend') {\r\n                        detailJsx = <span>{`${data.condition} ${data.connectType}`}: <_Field>{data.depend}</_Field></span>;\r\n                    }\r\n                }\r\n                return (<>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Connector</_Category>\r\n                    {detailJsx == undefined ? <></> : <_EditableValue>{detailJsx}</_EditableValue>}\r\n                </>);\r\n            }\r\n            case 'effect-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Effect</_Category>;\r\n            }\r\n            case 'modulate-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Modulate</_Category>;\r\n            }\r\n            case 'visual-item':\r\n            case 'send-item':\r\n            case 'iterate-item':\r\n            case 'effect-item':\r\n            case 'modulate-item':\r\n            case 'behavior-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_PARAM}>Param<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'argument-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeArgumentItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.valueType})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'iterate-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Iterate</_Category>;\r\n            }\r\n            case 'send-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n        }\r\n        return <_Category backgroundColor={'#ffffff'}>XXXXX</_Category>;\r\n    }\r\n\r\n    export const getTypeName = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return '';\r\n        const type = (node.data as WrapNode).type;\r\n        switch (type) {\r\n            case 'root': return 'Root';\r\n            case 'seed-mng': return 'Origin Manager';\r\n            case 'inherit-mng': return 'Inherit Manager';\r\n            case 'seed-item': return 'Origin Item';\r\n            case 'inherit-item': return 'Inherit Item';\r\n            case 'argument-mng': return 'Argument Manager';\r\n            case 'loop-mng': return 'Loop Manager';\r\n            case 'visual-mng': return 'Visual Manager';\r\n            case 'behavior-item': return 'Behavior Item';\r\n            case 'visual-item': return 'Visual Item';\r\n            case 'argument-item': return 'Argument Item';\r\n            case 'extend-mng': return 'Extend Manager';\r\n            case 'behavior-mng': return 'Behivior Manager';\r\n            case 'inherit-connect-mng': return 'Inherit Connect Manager';\r\n            case 'inherit-connector': return 'Inherit Connector';\r\n            case 'inherit-cache-item': return 'Inherit Cache Item';\r\n            case 'effect-mng': return 'Effect Manager';\r\n            case 'modulate-mng': return 'Modulate Manager';\r\n            case 'iterate-mng': return 'Iterate Manager';\r\n            case 'send-mng': return 'Send Manager';\r\n            case 'iterate-item': return 'Iterate Item';\r\n            case 'send-item': return 'Send Item';\r\n            case 'modulate-item': return 'Modulate Item';\r\n            case 'effect-item': return 'Effect Item';\r\n        }\r\n    }\r\n\r\n    export const getDetailComponent = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return <></>;\r\n        const type = (node.data as WrapNode).type;\r\n        switch (type) {\r\n            case 'root': return <></>;\r\n            case 'seed-mng': return <FactDetOriginMng />;\r\n            case 'inherit-mng': return <FactDetInheritMng />;\r\n            case 'seed-item': return <FactDetLogicItem />;\r\n            case 'inherit-item': return <FactDetLogicItem />;\r\n            case 'argument-mng': return <FactDetArgumentMng />;\r\n            case 'argument-item': return <FactDetArgumentItem />;\r\n            case 'visual-mng': return <FactDetVisualMng />;\r\n            case 'extend-mng': return <FactDetExtendMng />;\r\n            case 'behavior-mng': return <FactDetBehiviorMng />;\r\n            case 'inherit-connect-mng': return <FactDetInheritConnMng />;\r\n            case 'effect-mng': return <FactDetEffectMng />;\r\n            case 'modulate-mng': return <FactDetModulateMng />;\r\n            case 'inherit-connector': return <FactDetInheritConnector />;\r\n            case 'inherit-cache-item': return <FactDetLogicItem />;\r\n            case 'send-mng': return <FactDetSendManager />;\r\n            case 'iterate-item':\r\n            case 'visual-item':\r\n            case 'behavior-item':\r\n            case 'effect-item':\r\n            case 'modulate-item':\r\n            case 'send-item': return <FactOprParam />;\r\n        }\r\n    }\r\n\r\n    // export type ConstantProps = {\r\n    //     name: string;\r\n    //     value: number;\r\n    // }\r\n    // export const ConstantList: ConstantProps[] = [\r\n    //     { name: 'screen_width', value: 550 },\r\n    //     { name: 'screen_height', value: 550 },\r\n    //     { name: 'pi', value: 3.14159265359 },\r\n    //     { name: 'radian_round', value: 3.14159265359 * 2 }\r\n    // ];\r\n\r\n    export const ConnectTypes = ['create', 'depend'] as const;\r\n    export type ConnectType = typeof ConnectTypes[number];\r\n\r\n    export const ConditionTypes = ['sustain', 'limit'] as const;\r\n    export type ConditionType = typeof ConditionTypes[number];\r\n\r\n}\r\n\r\nexport default FactoryUtil;\r\n\r\nconst _Category = styled.div<{\r\n    backgroundColor: string;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: ${props => props.backgroundColor};\r\n    /* width: 100%; */\r\n    border-radius: 4px 0 0 4px;\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n    border: solid 1px #000000d2;\r\n`;\r\nconst _Detail = styled.span`\r\n    color: #000b69bd;\r\n`;\r\n\r\nconst _EditableValue = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #0c0c0c;\r\n    color: #ebebeb;\r\n    border-radius: 0 4px 4px 0;\r\n    /* width: 100%; */\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n`;\r\nconst _ValueType = styled.span`\r\n    color: #fff9d6b9;\r\n`;\r\nconst _Signature = styled.span`\r\n    color: #ffffff78;\r\n`;\r\nconst _Field = styled.span`\r\n    color: #ff2d2d;\r\n`;\r\nconst _Formula = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #ffffffd1;\r\n    color: #790000;\r\n    /* border-radius: 0 4px 4px 0; */\r\n    /* width: 100%; */\r\n    margin: 5px 0 0 4px;\r\n    padding: 0 10px;\r\n`;","import { type } from \"os\";\r\nimport { createContext, useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport Common from \"../common\";\r\nimport FactoryUtil from \"./factoryUtil\";\r\n\r\n\r\nexport const FactoryTreeContext = createContext({} as FactoryUtil.DetailArgs);\r\n\r\nconst FactoryTab = () => {\r\n\r\n\r\n    const [rootData, setRootData] = useState(FactoryUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    // const [treeDisable, setTreeDisable] = useState(false);\r\n    const [isModify, setModify] = useState<boolean>(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    const getChildren = (wrapNode: FactoryUtil.WrapNode): TreeUtil.DataNode[] => {\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as FactoryUtil.NodeRoot;\r\n                return [\r\n                    {\r\n                        data: node.seedMng,\r\n                        children: getChildren(node.seedMng)\r\n                    },\r\n                    {\r\n                        data: node.inheritMng,\r\n                        children: getChildren(node.inheritMng)\r\n                    }\r\n                ];\r\n            }\r\n            case 'seed-mng': {\r\n                const node = wrapNode.data as FactoryUtil.NodeLogicManager;\r\n                return node.defs.map(def => {\r\n                    const treeNode: TreeUtil.DataNode = {\r\n                        data: def,\r\n                        children: getChildren(def)\r\n                    };\r\n                    return treeNode;\r\n                });\r\n            }\r\n            case 'inherit-mng': {\r\n                const node = wrapNode.data as FactoryUtil.NodeLogicManager;\r\n                return node.defs.map(def => {\r\n                    const treeNode: TreeUtil.DataNode = {\r\n                        data: def,\r\n                        children: getChildren(def)\r\n                    };\r\n                    return treeNode;\r\n                });\r\n            }\r\n            case 'seed-item': {\r\n                const node = wrapNode.data as FactoryUtil.NodeLogicItem;\r\n                return node.mngs.map(mng => {\r\n                    const treeNode: TreeUtil.DataNode = {\r\n                        data: mng,\r\n                        children: getChildren(mng)\r\n                    };\r\n                    return treeNode;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: getChildren(rootData)\r\n        }\r\n    }, [rootData]);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    {/* <HierarchyNavi cur={focusNode}/> */}\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return FactoryUtil.getNodeJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={isModify}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <_DetailDiv>\r\n                    <_DetailHeader>\r\n                        <_DetailHeaderLabel>{FactoryUtil.getTypeName(focusNode)}</_DetailHeaderLabel>\r\n                    </_DetailHeader>\r\n                    <FactoryTreeContext.Provider value={{\r\n                        rootData,\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        isModify,\r\n                        setModify,\r\n                        // treeDisable,\r\n                        setRootData,\r\n                        // setTreeDisable\r\n                    }}>\r\n                        <_DetailMainDiv>{FactoryUtil.getDetailComponent(focusNode)}</_DetailMainDiv>\r\n                    </FactoryTreeContext.Provider>\r\n                </_DetailDiv>\r\n            </_PropsDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default FactoryTab;\r\n\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #6c8186;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d87b;\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    background-color: #7fbdb47a;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #9fa9b6;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _DetailDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\nconst _DetailHeader = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #b4b29e; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _DetailHeaderLabel = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #a10000;\r\n    /* background-color: #bbd0d3; */\r\n    border: solid 1px #a10000;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 20px);\r\n    margin: 5px 0 0 10px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DetailMainDiv = styled.div`\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 44px);\r\n    margin: 0 0 0 4px;\r\n    background-color: #cfd3cc;\r\n    border: solid 1px #0026a1;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","\r\nconst ManageTab = () => {\r\n\r\n    return (<></>);\r\n}\r\n\r\nexport default ManageTab;","import { type } from \"os\";\r\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport Common from \"../common\";\r\n\r\nnamespace TimelineUtil {\r\n\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'bv'\r\n        ;\r\n\r\n    export type WrapNode = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        // caches: Common.Cache[];\r\n    }\r\n\r\n    export const getInitialData = (): WrapNode => {\r\n        return {\r\n            type: 'root',\r\n            data: {}\r\n        }\r\n    }\r\n\r\n    export const getNodeJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapNode;\r\n        switch(wrap.type) {\r\n            case 'root': {\r\n                return <_Wrap>Timeline</_Wrap>;\r\n            }\r\n        }\r\n        return <_Wrap>XXXXX</_Wrap>;\r\n    }\r\n}\r\n\r\nexport default TimelineUtil;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #37a2bd;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n`;","import { type } from \"os\";\r\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport Common from \"../common\";\r\nimport TimelineUtil from \"./timelineUtil\";\r\n\r\nconst TimelineTab = () => {\r\n\r\n\r\n    const [rootData, setRootData] = useState(TimelineUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    const [treeDisable, setTreeDisable] = useState(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n\r\n    const getChildnre = (wrapNode: TimelineUtil.WrapNode): TreeUtil.DataNode[] => {\r\n        const list: TreeUtil.DataNode[] = [];\r\n        const add = (type: TimelineUtil.NodeType, nodeData: any) => {\r\n\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as TimelineUtil.NodeRoot;\r\n                // add()\r\n            } break;\r\n        }\r\n        return list;\r\n    }\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: getChildnre(rootData)\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    {/* <HierarchyNavi cur={focusNode}/> */}\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            // setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return TimelineUtil.getNodeJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={false}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                {/* <ThemaTreeContext.Provider value={{\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        setBackingWnd,\r\n                        dispatcher,\r\n                        treeDisable,\r\n                        setThamaData,\r\n                        setTreeDisable\r\n                    }}>\r\n                        <TabbedPane\r\n                            tabElements={[\r\n                                {\r\n                                    name: 'base', disable: true, cont: tabInner(0, <BaseFormTab\r\n                                        themaList={store.systemState.themaList}\r\n                                        addThema={(thema: ThemaUtil.LevelBase) => {\r\n                                            const themaList = store.systemState.themaList;\r\n                                            themaList.push(JSON.parse(JSON.stringify(thema)));\r\n                                            dispatcher.system.setState({ ...store.systemState, themaList });\r\n                                        }}\r\n                                    />)\r\n                                },\r\n                                { name: 'Method', disable: true, cont: tabInner(1, <MethFormTab />) },\r\n                                { name: 'Sustain', disable: true, cont: tabInner(2, <SustFormTab />) },\r\n                                { name: 'Pattern', disable: true, cont: tabInner(3, <PattFormTab />) },\r\n                                { name: 'Attribute', disable: true, cont: tabInner(4, <AttrFormTab isPattern={focusNode?.depth === 4} />) },\r\n                                { name: 'Root', disable: true, cont: tabInner(5, <RootFormTab />) },\r\n                                { name: 'voicing', disable: true, cont: tabInner(6, <VoicFormTab isPattern={focusNode?.depth === 6} />) },\r\n                            ]}\r\n                            tabRecordNum={2}\r\n                            activeNo={activeNo}\r\n                            selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n                        />\r\n                    </ThemaTreeContext.Provider> */}\r\n            </_PropsDiv>\r\n            {/* <_Blind isVisible={isBackingWnd}>\r\n                    <_Contents>{!isBackingWnd ? <></> : <BackingEditorFrame />}</_Contents>\r\n                </_Blind> */}\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default TimelineTab;\r\n\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c3d8dd;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #532fc0; */\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n    padding: 6px 6px 6px 0;\r\n`;\r\n\r\nconst _TabContWrap = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 630px;\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    /* opacity: 0.9; */\r\n    overflow: hidden;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport FactoryTab from \"./factory/factoryTab\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport PreviewTab from \"./manage/manageTab\";\r\nimport TimelineTab from \"./timeline/timelineTab\";\r\nimport Timeline from \"./timeline/timelineTab\";\r\n\r\n\r\nconst CreateChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', enable: false, cont: <ManageTab /> },\r\n                    { name: 'Launcher', enable: false, cont: <TimelineTab /> },\r\n                    { name: 'Logic', enable: true, cont: <FactoryTab /> }\r\n                ]}\r\n                activeNo={2}\r\n            // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CreateChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { Redirect } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst DirectView = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const conteseq = DataUtil.getDecryptionedScoreSeq(props.hashKey);\r\n\r\n    // const setScoreData = (owner: string, dispnam: string, data: ScoreData) => {\r\n    //     store.scoreState.focusIndex = 2;\r\n    //     store.scoreState.distIndex = store.scoreState.focusIndex;\r\n    //     dispatcher.score.setScoreState({ ...store.scoreState });\r\n    //     // dispatcher.score.setScoreTabIndex(1);\r\n    //     dispatcher.score.setScoreData(data);\r\n    //     // キャッシュの更新\r\n    //     store.scoreData = data;\r\n    //     CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    //     store.systemState.mainChannelIndex = 5;\r\n    //     store.systemState.scoreTabIndex = 0;\r\n    //     store.systemState.directScore = {\r\n    //         owner, name: dispnam\r\n    //     };\r\n    //     dispatcher.system.setState(store.systemState);\r\n    // };\r\n\r\n    useEffect(() => {\r\n        // DataUtil.findScore(conteseq).then(resList => {\r\n        //     if (resList.length > 0) {\r\n        //         const source = resList[0]['data'];\r\n        //         const owner = resList[0]['owner'];\r\n        //         const dispnam = resList[0]['dispnam'];\r\n        //         const text = DataUtil.unZip(source);\r\n        //         setScoreData(owner, dispnam, JSON.parse(text));\r\n        //     }\r\n        // });\r\n    }, []);\r\n    // if (store.systemState.directScore == null) {\r\n    //     return <></>;\r\n    // } else {\r\n    //     return <Redirect to=\"/\" />;\r\n    //     // return <MainFrame />;\r\n    // }\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nexport default DirectView;","import { Redirect } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst DirectLogin = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        const seq = DataUtil.getDecryptionedUserSeq(props.hashKey);\r\n        console.log(seq);\r\n        DataUtil.findUserInfoFromSeq(seq).then(resList => {\r\n            console.log(resList);\r\n            if (resList.length > 0) {\r\n                const loginProps = resList[0];\r\n                // store.userEnv.login = loginProps;\r\n                // dispatcher.system.setUserEnv(store.userEnv);\r\n            }\r\n        });\r\n    }, []);\r\n    // if (store.userEnv.login == null) {\r\n    //     return <></>;\r\n    // } else {\r\n    //     return <Redirect to=\"/\" />;\r\n    //     // return <MainFrame />;\r\n    // }\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nexport default DirectLogin;","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\ntype NotePorp = {\r\n    version: string;\r\n    date: string;\r\n    note: string;\r\n}\r\n\r\nconst ReleaseNote = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\r\n    useEffect(() => {\r\n        fetch('assets/release_note.json')\r\n            .then(response => response.json()) // (2) レスポンスデータを取得\r\n            .then(json => { // (3)レスポンスデータを処理\r\n\r\n                const list = json as NotePorp[];\r\n\r\n                setJsx(list.map((item, i) => {\r\n                    const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n                    return (\r\n                        <_Item key={i}>\r\n                            <_Header>v{item.version} ({item.date})</_Header>\r\n                            <_Detail>{record}</_Detail>\r\n                        </_Item>\r\n                    );\r\n                }));\r\n            });\r\n    }, []);\r\n\r\n    return (<_ListFrame>{jsx}</_ListFrame>);\r\n}\r\n\r\nexport default ReleaseNote;\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #bfcace;\r\n    border: 1px solid #9b9b9b;\r\n    border-radius: 6px;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    font-weight: 600;\r\n    /* background-color: #8bdbf8; */\r\n    color: #494975;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    /* background-color: #dafce4; */\r\n    color: #754949;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ReleaseNote from \"./releaseNote\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [userCount, setUserCount] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <ReleaseNote />\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{0} arts have been published.</_MessageRecord>\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeChannel;\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nexport const findAllScore = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT seq, (select id from user_tbl where seq = score.user_seq) as owner, dispnam, lastmod\r\n        FROM scoretbl score\r\n        WHERE share <> 'url'\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ListInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${HOME_USER_DIV_HEIGHT}px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #1c2c95;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\n\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 30px;\r\n    user-select: text;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ItemnForm = styled.input`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #1a1a1a;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #e9e9e9;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\r\n    border: 1px solid #1a2b3f;\r\n    color: #1a2b3f;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 42px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\nconst _CloudItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    /* height: 60px; */\r\n    border-bottom: 1px solid #888888;\r\n    /* background-color: white; */\r\n    background: linear-gradient(to bottom, transparent, #b6b6b684);\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    }\r\n`;\r\n\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { CgOptions, CgPiano } from 'react-icons/cg';\r\nimport { VscGitPullRequestCreate } from 'react-icons/vsc';\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport CreateChannel from \"../create/createChannel\";\r\nimport DirectView from \"./directView\";\r\nimport DirectLogin from \"./directLogin\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <_Wrap>\r\n                    {/* <DraggableDialog /> */}\r\n                    {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n                    <ChannelPane\r\n                        tabElements={[\r\n                            { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <HomeChannel /> },\r\n                            { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <CreateChannel/> },\r\n                        ]}\r\n                        activeNo={0}\r\n                    // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n                    />\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/test\" exact >\r\n                <_Wrap>\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/preview\" exact >\r\n                <DirectView hashKey={str} />\r\n            </Route>\r\n            <Route path=\"/user\" exact >\r\n                <DirectLogin hashKey={str} />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <span>L</span>iCreSia\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2022 Licresia All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#868686, #ffffff);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #636363;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport LoginFrame from \"../dialog/login/loginFrame\";\r\nimport AccountFrame from \"../dialog/accountFrame\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const user = store.system.user;\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    useEffect(() => {\r\n        console.log(user);\r\n        if (user != null) {\r\n            setUserId('@' + user.id);\r\n        }\r\n    }, [user]);\r\n\r\n    // const authButtonJsx = loginProps == undefined ? (\r\n    //     <_LoginButton onClick={() => {\r\n    //         store.systemState.dialog = <LoginFrame />;\r\n    //         dispatcher.system.setState(store.systemState);\r\n    //         console.log(window.location.origin);\r\n    //     }}>\r\n    //         <div><ImUser /></div>\r\n    //         Login / Sign up\r\n    //     </_LoginButton>\r\n    // ) : (<>\r\n    //     <_UserName\r\n    //         isEntry={store.userEnv.login != null}\r\n    //         onClick={() => {\r\n    //             dispatcher.system.setDialog(<AccountFrame />);\r\n    //         }}\r\n    //     >{userId}</_UserName>\r\n    //     <_LoginButton onClick={() => {\r\n    //         store.userEnv.login = null;\r\n    //         dispatcher.system.setUserEnv(store.userEnv);\r\n\r\n    //         dispatcher.system.setDialog(<ConfirmDialog.Component\r\n    //             message={'Logout.\\nSee you next time!'}\r\n    //         />);\r\n    //     }}>\r\n    //         <div><ImUser /></div>\r\n    //         Logout\r\n    //     </_LoginButton>\r\n    // </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>Partice</_ACCENT>&nbsp;<_NORMAL>Simulator</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                {/* {authButtonJsx} */}\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    font-style: italic;\r\n    text-shadow: 1px 2px 3px #dbdbdb6a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #9fc2d1;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #ececec;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #003a86;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #96000057;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    setStore: React.Dispatch<React.SetStateAction<Store>>;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, setStore] = useState(initialStore);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, setStore }}>\r\n            <>\r\n                {!store.system.isSplash ? <></> :\r\n                    <Splash\r\n                        remove={() => {\r\n                            setStore({...store, system: {\r\n                                ...store.system, isSplash: false\r\n                            }});\r\n                        }}\r\n                    />}\r\n                <_Wrap>\r\n                    <GloballDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #364887;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst REACT_APP_AUTH0_DOMAIN = 'dev-a0p0m4lr.us.auth0.com';\nconst REACT_APP_AUTH0_CLIENT_ID = 'ABaWpYVBZwTr3tkyxhq1kWh2YwT4epew';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}