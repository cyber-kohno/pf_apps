{"version":3,"sources":["system/utils/dataUtil.tsx","system/redux/store/store.tsx","system/utils/systemConst.tsx","system/contents/dialog/globalDialog.tsx","system/base/design/styles.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/utils/form/formUtiil.tsx","system/utils/treeUtil.tsx","system/contents/dialog/confirmDialog.tsx","system/utils/form/validateUtil.tsx","system/utils/canvasUtil.tsx","system/contents/graphic/particle.tsx","system/contents/graphic/drawUtil.tsx","system/contents/graphic/vectorUtil.tsx","system/contents/create/preview/previewUtil.tsx","system/contents/create/preview/logicPreviewFrame.tsx","system/contents/create/factory/detail/factDetArgumentMng.tsx","system/contents/create/factory/detail/common/modifyOperations.tsx","system/contents/create/factory/detail/factDetArgumentItem.tsx","system/contents/create/factory/detail/factDetInheritMng.tsx","system/contents/create/factory/detail/factDetExtendMng.tsx","system/contents/create/factory/detail/factDetOriginMng.tsx","system/contents/create/factory/detail/factDetLogicItem.tsx","system/contents/create/factory/detail/factOprParam.tsx","system/contents/create/factory/detail/factDetBehiviorMng.tsx","system/contents/create/factory/detail/factDetVisualMng.tsx","system/contents/create/factory/detail/factDetInheritConnMng.tsx","system/contents/create/factory/detail/factDetEffectMng.tsx","system/contents/create/factory/detail/factDetModulateMng.tsx","system/contents/create/factory/detail/factDetInheritConnector.tsx","system/contents/create/factory/detail/factDetSendManager.tsx","system/contents/create/factory/factoryUtil.tsx","system/contents/create/factory/factoryTab.tsx","system/contents/create/manage/manageTab.tsx","system/contents/create/timeline/timelineUtil.tsx","system/contents/create/timeline/timelineTab.tsx","system/contents/create/createChannel.tsx","system/contents/entry/directView.tsx","system/contents/entry/directLogin.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DB_SERVER_DOMAIN","APP_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","seq","hash","encode","Base64","hashedSeq","hashids","Number","decode","getHashedFromScoreSeq","sendQueryRequestToAPI","scoreSeq","hashedKey","json","fetch","mode","method","headers","Accept","body","JSON","stringify","createSendMailRequestInit","queryType","sql","createQueryRequestInit","findUserInfoList","a","response","results","map","res","id","email","password","nextSeq","DataUtil","userSeq","val","content","encodeURIComponent","zlib","gzipSync","toString","buffer","Buffer","from","result","unzipSync","decodeURIComponent","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","initialStore","system","isSplash","user","dialog","SystemConst","GloballDialog","useContext","GlobalContext","store","setStore","_Blind","onClick","styled","div","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","css","Styles","_CSS_LABEL_MIDIUM","ChannelPane","props","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","index","name","icon","isActive","isEnable","selectTab","undefined","selectTabIndex","_ContList","cont","ChannelLabel","_Item","_Icon","_Label","ChannelContents","_Contents","CSS_BUTTON_DISABLE","TabbedPane","tabRecordNum","enable","TabLabel","_TabLabel","TabContents","FormUtil","checkables","forEach","checkable","errors","length","type","isPassword","validaters","validates","dependency","dep","value","getErrors","validater","checker","push","errorType","setCheckable","textAlign","isCenter","marginTop","titleLabel","_ItemnLabel","_ItemnInputBak","hasTitle","width","placeholder","onChange","e","target","readOnly","isReadOnly","jsx","labelWidth","isNumber","concat","_ItemnInput","marginLeft","headBlank","list","slice","unshift","labelText","_ItemCombobox","item","i","_Option","disabled","isDisabled","buttons","button","_Button","callback","label","_Message","message","isLink","clickAction","_BorderText","title","_BorderPanel","innerJsx","height","_InfoDiv","color","textRecords","text","_Switch","isUse","_Record","CSS_LABEL_MIDIUM","input","select","option","CSS_LABEL_SMALL","TreeUtil","data","parent","depth","isOpen","children","node","parentNode","isDisable","focusNode","buildElementNodeFromData","build","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","jsxList","useMemo","buildJsxRecords","element","spaceList","isCurrent","isRelation","tempNode","find","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","clickEvent","onDoubleClick","getLabelJsx","invalidate","_Wrap","ConfirmDialog","_Frame","_Main","_Inner","split","msg","Message","ButtonRecord","str","min","max","checkIncludesChars","ch","charAt","indexOf","conditions","ValidateUtil","createURL","draw","canvas","document","createElement","ctx","getContext","toDataURL","CanvasUtil","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillStyle","fillText","adjust","measureText","save","WIDTH","AUTH_TEXT_WIDTH","SIZE","AUTH_TEXT_HEIGHT","rotate","Math","PI","char","fontRand","random","alphaRand","Particle","owner","pos","prevPos","vec","frame","limit","isLive","drawer","extend","update","x","xy","y","this","param","radius","self","g","createRadialGradient","grads","rgba","convertRgbaFromColorCode","r","b","offset","convertColorCodeFromRgba","grad","addColorStop","disappearStartRate","start","floor","globalAlpha","beginPath","arc","fill","code","parseInt","substring","rate","DrawUtil","VectorUtil","rad","len","syncFromXY","sqrt","atan2","syncFromRad","cos","sin","SCREEN_WIDTH","SCREEN_HEIGHT","searchElement","rootData","args","createParticleRec","cur","fields","valueMapList","ConstantValueMap","visualParams","mngs","params","behaviorParams","getVisualParam","convertFormulaToValue","getBehaviorParam","Vector","extendList","extendMng","connectMng","connects","connect","connector","getCondition","condition","logicItem","connectType","wrap","inheritMng","defs","def","searchDependLogic","depend","loopCnt","iterateItem","iterateValueMap","sendValueMapList","Instance","effectMng","console","log","modulateMng","getModulateParam","decayLimit","decayRate","gravity","modulate","createGradDrawer","warpList","formula","values","v","valueMap","m","formulaStr","varCnt","formulaItems","Function","PreviewUtil","LogicPreviewFrame","ref","useRef","formList","setFormList","sceens","setSceens","frameCnt","setFrameCnt","tabIndex","setTabIndex","setCur","setBuild","isPlay","setPlay","setTimeout","argumentList","argWrap","arg","getArgumentList","formListJsx","form","FormRecord","TextField","checkRequired","buildTabJsx","_FormDiv","buildOriginProps","par","splice","previewTabJsx","_CanvasDiv","_IMG","src","_ProgressDiv","clickX","pageX","clientRect","current","getBoundingClientRect","left","window","pageXOffset","_ProgressVal","img","FactDetArgumentMng","FactoryTreeContext","setFocusNode","BorderPanel","newWrap","newNode","createNode","ModifyOperations","isModify","setModify","isComplete","isCompleteCheck","checkableFields","mappingForm","isInputOK","firstRegist","modifyRegist","FactDetArgumentItem","setName","argType","setArgType","valueType","Component","checkStringLength","FactoryUtil","checkFieldName","Combobox","ArgTypes","n","FactDetInheritMng","itemWrap","FactDetExtendMng","el","includes","hasEffectsNode","hasModulateNode","hasInheritNode","Record","Switch","paramWrap","createParamWrap","delIndex","insIndex","FactDetOriginMng","FactDetLogicItem","parentType","isConnect","isInherit","hasArgNode","hasFieldNode","hasExtendNode","getDefaultLogicMngs","mng","FactOprParam","setFormulaItems","varFormList","setVarFormList","inputType","fieldKeyList","isIterate","keys","targetWrap","getTargetWrap","num","addNum","delNum","parenthesisBalance","formJsxList","ParamInputTypes","getValueForm","isLastVar","isFormulaOK","hasFormError","varForm","_Formula","isInvalid","_Var","_Sig","getFormulaJsx","span","FactDetBehiviorMng","isVector","swapPos","FactDetVisualMng","FactDetInheritConnMng","FactDetEffectMng","FactDetModulateMng","FactDetInheritConnector","setCondition","setConnectType","setDepend","hasIterateNode","isCreate","inheritList","setSendParams","sendIndex","sendMng","sendNode","dependItem","getSendParamList","initConnectorNode","inheritNode","isChange","ConditionTypes","ConnectTypes","loopCountWrap","FactDetSendManager","sendParamList","curSize","curParamList","paramDataList","createParamWrapList","COLOR_METHOD","createVisualParams","createBehaviorParams","seedMng","COLOR_MNG","COLOR_LIST","COLOR_ITEM","isFocus","_Category","backgroundColor","_EditableValue","detailJsx","_Field","_Signature","_Detail","_ValueType","createContext","FactoryTab","getInitialData","setRootData","setInvalidate","fileHandle","setFileHandle","getChildren","wrapNode","get","listName","originNode","getOrigin","_TreeDiv","_TreeHead","_TreeHeadHalf","plainData","createWritable","writable","gZip","write","close","getFile","showSaveFilePicker","types","accept","then","handle","catch","showOpenFilePicker","file","fileContents","unZip","parse","_TreeBody","Frame","getNodeJsx","_PropsDiv","_DetailDiv","_DetailHeader","_DetailHeaderLabel","getTypeName","Provider","_DetailMainDiv","getDetailComponent","ManageTab","isVisible","TimelineUtil","TimelineTab","getChildnre","CreateChannel","SCORE_TAB_MARGIN","DirectView","getDecryptionedScoreSeq","hashKey","to","DirectLogin","getDecryptionedUserSeq","findUserInfoFromSeq","resList","ReleaseNote","setJsx","record","note","_Header","version","_ListFrame","HOME_USER_DIV_HEIGHT","HomeChannel","userCount","_Left","_MessageRecord","_Right","MainFrame","basename","process","RouterManage","URLSearchParams","useLocation","search","path","exact","MAIN_FRAME_MARGIN","Splash","isSwitch","setSwitch","timerId","setTimerId","remove","clearTimeout","_Title","_NowLoading","_Copylight","fadeIn","keyframes","TotalHeader","setUserId","_ACCENT","_NORMAL","_Menu","_Language","_MenuItem","isEntry","TOTAL_HEADER_WIDTH","SystemEntry","_MainDiv","App","oncontextmenu","onkeydown","ctrlKey","key","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.00eeecc2.chunk.js","sourcesContent":["import zlib from \"zlib\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport Hashids from 'hashids';\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5000';\r\n    export const DB_SERVER_DOMAIN = 'https://licresia-demo01-server.glitch.me';\r\n    // export const DB_SERVER_DOMAIN = 'https://licresia-server.glitch.me';\r\n\r\n    // export const APP_SERVER_DOMAIN = 'http://localhost:4000';\r\n    // export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/licresia_demo_app';\r\n    export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    // const fetchData = async () => {\r\n    //     try {\r\n    //         // sampleテーブルから全カラムのデータをid順に取得\r\n    //         // dataに入る型はそのままだとany[]となるため.from<T>で指定\r\n    //         const { data, error } = await supabase.from<Table>('test').select().order('data');\r\n\r\n    //         if (error) {\r\n    //             throw error;\r\n    //         }\r\n    //         if (data) {\r\n    //             console.log(data);\r\n    //         }\r\n    //     } catch (error: any) {\r\n    //         alert(error.message);\r\n    //     } finally {\r\n\r\n    //     }\r\n    // };\r\n\r\n    const getUserHashBuilder = () => {\r\n        return new Hashids('licresia-demo-user', 8);\r\n    }\r\n\r\n    export const getHashedFromUserSeq = (seq: number) => {\r\n        const hashids = getUserHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\r\n        const hashids = getUserHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    const getScoreHashBuilder = () => {\r\n        return new Hashids('licresia-demo', 8);\r\n    }\r\n\r\n    export const getHashedFromScoreSeq = (seq: number) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedScoreSeq = (hashedSeq: string) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    export const getPreviewURL = (scoreSeq: number) => {\r\n        const hashedKey = getHashedFromScoreSeq(scoreSeq);\r\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql })\r\n        }\r\n    }\r\n\r\n    export type SendMailParam = {\r\n        from: string,\r\n        to: string,\r\n        subject: string,\r\n        text: string\r\n    }\r\n\r\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(json)\r\n        }\r\n    }\r\n\r\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/mail',\r\n            createSendMailRequestInit(json)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserInfoList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\r\n        const results = await response.json();\r\n        return results as { id: string, email: string}[];\r\n    };\r\n\r\n    export const findUserIdList = async () => {\r\n        const results = await findUserInfoList();\r\n        return (results as { id: string}[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfoFromEmail = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserInfoFromSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoLogin = async (id: string, password: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const getNextUserSeq = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\r\n        const results = await response.json();\r\n        const nextSeq = (results[0]['seq'] as number) + 1;\r\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\r\n\r\n        return nextSeq;\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findScore = async (scoreSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT (select id from user_tbl where seq = score.user_seq) as owner, dispnam, data FROM scoretbl score WHERE seq = ${scoreSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n}\r\n\r\nexport default DataUtil;","import StoreSystem from \"./storeSystem\";\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    system: StoreSystem.Param;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    system: {\r\n        isSplash: false,\r\n        user: null,\r\n        dialog: null,\r\n    },\r\n}","\r\nnamespace SystemConst {\r\n    export const AUTH_TEXT_WIDTH = 350;\r\n    export const AUTH_TEXT_HEIGHT = 70;\r\n}\r\n\r\nexport default SystemConst;\r\n\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n\r\n// ホームチャンネル\r\nexport const HOME_USER_DIV_HEIGHT = 400;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const dialog = store.system.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            store.system.dialog = null;\r\n            setStore({...store});\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 18px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 22px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n    tabRecordNum?: number;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    enable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabRecordNum = props.tabRecordNum ?? 1;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList tabRecordNum={tabRecordNum}>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isEnable={tab.enable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList tabRecordNum={tabRecordNum}>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isEnable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: inline-block;\r\n    height: ${props => 35 * props.tabRecordNum}px;\r\n    text-align: left;\r\n    /* background-color: #ac3b3b; */\r\n    width: 100%;\r\n`;\r\nconst _ContList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    \r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                margin-top: 5px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${props.isEnable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport ValidateUtil from \"./validateUtil\";\r\nimport { useEffect } from \"react\";\r\n\r\nnamespace FormUtil {\r\n\r\n    export type CheckableValue = {\r\n        value: string;\r\n        errors: ValidateUtil.ErrorType[];\r\n    }\r\n\r\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\r\n        let result = true;\r\n        checkables.forEach(checkable => {\r\n            if (checkable.errors.length > 0) {\r\n                result = false;\r\n                return 1;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    export const InputTextFormBak = (props: {\r\n        titleLabel?: string;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        isCenter?: boolean;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        marginTop?: number;\r\n        isReadOnly?: boolean;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const type = props.isPassword ?? false ? 'password' : 'text';\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency);\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\r\n                <_ItemnInputBak\r\n                    type={type}\r\n                    value={props.checkable.value}\r\n                    hasTitle={props.titleLabel != undefined}\r\n                    width={props.width}\r\n                    isCenter={props.isCenter ?? false}\r\n                    placeholder={props.placeholder}\r\n                    onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        props.checkable.value = value;\r\n                        props.checkable.errors = getErrors(value);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }}\r\n                    errorType={errors.length === 0 ? undefined : errors[0]}\r\n                    readOnly={props.isReadOnly}\r\n                />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n\r\n    export const Record = (props: {\r\n        isEnable?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FormRecord = (props: {\r\n        titleLabel?: string;\r\n        labelWidth?: number;\r\n        isEnable?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={props.labelWidth}>{props.titleLabel}</_ItemnLabel>}\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const TextField = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        isNumber?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        let type = props.isPassword ?? false ? 'password' : 'text';\r\n        if (props.isNumber ?? false) {\r\n            type = 'number';\r\n        }\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        let value = props.checkable.value;\r\n        // if (type === 'number' && value === '') value = '0';\r\n        return (\r\n            <_ItemnInput\r\n                type={type}\r\n                value={value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    let value = e.target.value;\r\n                    // if (type === 'number' && value === '') value = '0';\r\n                    props.checkable.value = type !== 'number' ? value : Number(value).toString();\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n                }}\r\n                errorType={errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\r\n    export const Combobox = (props: {\r\n        list: ComboboxItemProps[];\r\n        headBlank?: boolean;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n        const headBlank = props.headBlank ?? false;\r\n        const list = props.list.slice();\r\n        if (headBlank) list.unshift({ value: '', labelText: '' });\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n\r\n        useEffect(() => {\r\n            // console.log('value: ' + props.checkable.value);\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        return (\r\n            <_ItemCombobox\r\n                value={props.checkable.value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    props.checkable.value = value;\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n\r\n                }}\r\n                errorType={errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            >{list.map((item, i) => {\r\n                return (\r\n                    <_Option key={i}\r\n                        value={item.value}\r\n                        disabled={item.isDisabled ?? false}\r\n                        isDisabled={item.isDisabled ?? false}\r\n                    >{item.labelText}</_Option>\r\n                );\r\n            })}</_ItemCombobox>\r\n        );\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        label: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ButtonRecord = (props: {\r\n        buttons: ButtonProps[],\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'right'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                {props.buttons.map((button, i) => {\r\n                    return (\r\n                        <_Button\r\n                            key={i}\r\n                            isCenter={props.isCenter ?? false}\r\n                            isEnable={button.isEnable ?? true}\r\n                            width={button.width}\r\n                            onClick={button.callback}\r\n                        >{button.label}</_Button>\r\n                    );\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const Message = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                <_Message\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const MessageLink = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        clickAction: () => void;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                <_Message\r\n                    isLink={true}\r\n                    onClick={props.clickAction}\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        // const title = props.title ?? 'title pl';\r\n        return (<>\r\n            <_BorderText>{props.title}</_BorderText>\r\n            <_BorderPanel isEnable={props.isEnable ?? true}>{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export const InfoFrame = (props: {\r\n        height?: number;\r\n        textRecords: string[];\r\n    }) => {\r\n        const height = props.height ?? 70;\r\n        const color = '#1a9900';\r\n        return (<>\r\n            <_InfoDiv height={height} color={color}>\r\n                {props.textRecords.map((text, i) => {\r\n                    return <span key={i}>{text}<br /></span>;\r\n                })}\r\n            </_InfoDiv>\r\n        </>);\r\n    };\r\n\r\n    export const Switch = (props: {\r\n        label: string;\r\n        isUse: boolean;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        callback: () => void;\r\n    }) => {\r\n        return (\r\n            <_Switch\r\n                isUse={props.isUse}\r\n                isEnable={props.isEnable ?? true}\r\n                width={props.width}\r\n                onClick={props.callback}\r\n            >{props.label}</_Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormUtil;\r\n\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n    textAlign: 'left' | 'center' | 'right';\r\n    marginTop: number;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    margin-top: ${props => props.marginTop}px;\r\n    /* background-color: #b3b4c4; */\r\n    /* border: 1px solid #000; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    text-align: ${props => props.textAlign};\r\n`;\r\n\r\nconst _ItemnLabel = styled.div<{\r\n    labelWidth?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.labelWidth ?? 140}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #c3c3c3fc, #d8d8d8, #c3c3c3fc);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n`;\r\n\r\nconst _ItemnInputBak = styled.input<{\r\n    readOnly?: boolean;\r\n    isCenter: boolean;\r\n    hasTitle: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${props => !props.hasTitle ? css`\r\n    ` : css`\r\n        width: calc(100% - 152px);\r\n    `}\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    margin-top: 2px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    /* ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    } */\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemCombobox = styled.select<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n        pointer-events: none;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _Option = styled.option<{\r\n    isDisabled: boolean;\r\n}>`\r\n    ${props => !props.isDisabled ? '' : css`\r\n        color: #0000004b;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n    isLink?: boolean;\r\n    isCenter: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #002c52;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => !props.isLink ? '' : css`\r\n        color: #0459a3;\r\n        user-select: none;\r\n        text-decoration: underline;\r\n        &:hover {\r\n            color: #68a4d8;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #cdcdcd, #ebebeb, #cdcdcd);\r\n    border: 1px solid #747474;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isUse: boolean;\r\n    isEnable: boolean;\r\n    width?: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\r\n    border: 1px solid #747474;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\r\n    }\r\n`;\r\n\r\nconst _BorderText = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: #990000;\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    background-color: #dcddce;\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    margin: 4px 0 0 0;\r\n    display: inline-block;\r\n    background-color: #e7e5e561;\r\n    border: solid 1px #949494;\r\n    width: 100%;\r\n    height: ${props => props.height}px;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: ${props => props.color};\r\n    overflow-y: auto;\r\n`;","import { useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        // parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        useEffect(() => {\r\n            if (focusNode != null && focusNode.parent != null) {\r\n                focusNode.parent.isOpen = true;\r\n            }\r\n        }, [focusNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            // console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    // 親判定\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    // 兄弟判定\r\n                    if (result === false && focusNode != null && focusNode.parent != null) {\r\n                        result = focusNode.parent.children.find(node => node == element) != undefined;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        isActive={isCurrent}\r\n                        isRelation={!isDisable && isRelationNode()}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #374a54;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #1f3642;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isActive: boolean;\r\n    isRelation: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: block;\r\n    /* position: relative; */\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #459cff46;\r\n    `}\r\n    opacity: 0.5;\r\n    ${props => !props.isRelation ? '' : css`\r\n        background-color: #ffffff28;\r\n        opacity: 1;\r\n    `}\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #b4d9dd83;\r\n        opacity: 1;\r\n    `}\r\n    /* width: calc(100% - 10px); */\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport { useContext } from \"react\";\r\n\r\nnamespace ConfirmDialog {\r\n\r\n    export const Component = (props: {\r\n        message: string;\r\n        width?: number;\r\n        height?: number;\r\n        buttons?: FormUtil.ButtonProps[];\r\n    }) => {\r\n\r\n        const {store,  setStore } = useContext(GlobalContext);\r\n\r\n        const width = props.width ?? 600;\r\n        const height = props.height ?? 150;\r\n        const buttons = props.buttons ?? [\r\n            {\r\n                label: 'OK',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({...store});\r\n                }\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main><_Inner>\r\n                    {props.message.split('\\n').map((msg, i) => {\r\n                        return <FormUtil.Message\r\n                            key={i}\r\n                            message={msg}\r\n                            isCenter\r\n                        />\r\n                    })}\r\n                </_Inner></_Main>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={buttons} />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 110px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* background-color: #bb6868e1; */\r\n`;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\r\n\r\n    export type Validate = {\r\n        checker: (value: string) => boolean;\r\n        errorType: ErrorType;\r\n        message?: string;\r\n    }\r\n\r\n    /**\r\n     * 必須チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkRequired = (str: string) => {\r\n        return str.length > 0;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length === 0 || (str.length >= min && str.length <= max);\r\n    }\r\n\r\n    /**\r\n     * 半角英数時チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        return checkIncludesChars(str, list);\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列で構成されているかチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkIncludesChars = (str: string, list: string) => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            const ch = str.charAt(i);\r\n            if (list.indexOf(ch) === -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default ValidateUtil;\r\n","import SystemConst from \"./systemConst\";\r\n\r\nnamespace CanvasUtil {\r\n\r\n    /**\r\n     * Canvasに任意の描画をし、画像のURLを取得する\r\n     * @param width 幅\r\n     * @param height 高さ\r\n     * @param draw 描画\r\n     * @returns 画像のURL\r\n     */\r\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        draw(ctx);\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    export const getLogoURL = () => {\r\n        return CanvasUtil.createURL(350, 80, (ctx) => {\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.fillRect(0, 0, 350, 80);\r\n\r\n            ctx.shadowColor = \"#555\";\r\n            ctx.shadowOffsetX = 2;\r\n            ctx.shadowOffsetY = 1;\r\n            ctx.shadowBlur = 5;\r\n            ctx.font = '55pt Arial';\r\n            ctx.fillStyle = '#db0000';\r\n            ctx.fillText('L', 30, 70);\r\n            const adjust = ctx.measureText('L').width;\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.fillText('iCreSia', 30 + adjust, 70);\r\n            ctx.save();\r\n        });\r\n    }\r\n\r\n    export const getAuthTextURL = (text: string) => {\r\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\r\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\r\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\r\n            ctx.rotate(1 * Math.PI / 180);\r\n            for (let i = 0; i < text.length; i++) {\r\n                const char = text.charAt(i);\r\n\r\n                const fontRand = Math.random() * 60;\r\n                const alphaRand = Math.random() * 60;\r\n                ctx.font = `${20 + fontRand}pt Arial`;\r\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\r\n                ctx.fillText(char, i * SIZE, 60);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CanvasUtil;","import VectorUtil from \"./vectorUtil\";\r\n\r\nnamespace Particle {\r\n\r\n    export type Props = {\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        limit: number;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n    }\r\n\r\n    export class Instance {\r\n\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        prevPos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        frame: number;\r\n        limit: number;\r\n        isLive: boolean;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n\r\n        constructor(props: Props) {\r\n            this.owner = props.owner;\r\n            this.pos = props.pos;\r\n            this.prevPos = props.pos;\r\n            this.vec = props.vec;\r\n\r\n            this.frame = 0;\r\n            this.limit = props.limit;\r\n            this.isLive = true;\r\n            this.drawer = props.drawer;\r\n            this.extend = props.extend;\r\n        }\r\n\r\n        update = () => {\r\n\r\n            this.pos.x += this.vec.xy.x;\r\n            this.pos.y += this.vec.xy.y;\r\n\r\n            this.extend.forEach(callback => callback(this));\r\n\r\n            if (this.frame === this.limit) {\r\n                this.isLive = false;\r\n            }\r\n            this.frame++;\r\n        }\r\n\r\n        draw = (ctx: CanvasRenderingContext2D) => {\r\n            this.drawer(this, ctx);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Particle;","import Particle from \"./particle\";\r\n\r\nnamespace DrawUtil {\r\n\r\n    export type Rgba = {\r\n        r: number;\r\n        g: number;\r\n        b: number;\r\n        a: number;\r\n    }\r\n\r\n    export type ColorStop = {\r\n        offset: number;\r\n        color: string;\r\n    }\r\n\r\n    export type DrawerParam = {\r\n        color: string;\r\n        radius?: number;\r\n        disappearStartRate?: number;\r\n    }\r\n\r\n    export const createGradDrawer = (param: DrawerParam) => {\r\n\r\n        const radius = param.radius ?? 30;\r\n        return (self: Particle.Instance, ctx: CanvasRenderingContext2D) => {\r\n            const x = self.pos.x;\r\n            const y = self.pos.y;\r\n            const g = ctx.createRadialGradient(x, y, 1, x, y, radius);\r\n\r\n            const grads: ColorStop[] = [];\r\n            const rgba = convertRgbaFromColorCode(param.color) ?? { r: 255, g: 255, b: 255, a: 255 };\r\n            grads.push({ offset: 0, color: '#ffffffe4' });\r\n            rgba.a = 40;\r\n            grads.push({ offset: 0.2, color: convertColorCodeFromRgba(rgba) })\r\n            rgba.a = 1;\r\n            grads.push({ offset: 1, color: convertColorCodeFromRgba(rgba) })\r\n\r\n            grads.forEach(grad => {\r\n                g.addColorStop(grad.offset, grad.color);\r\n            });\r\n\r\n            if (param.disappearStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.disappearStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    ctx.globalAlpha = (limit - frame) / limit;\r\n                }\r\n            }\r\n\r\n            ctx.fillStyle = g;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n        };\r\n    }\r\n\r\n    export const convertRgbaFromColorCode = (code: string): Rgba | null => {\r\n        const div = code.split('#');\r\n        if (div.length !== 2 || div[1].length < 6) return null;\r\n\r\n        const value = div[1];\r\n        const r = Number.parseInt(value.substring(0, 2), 16);\r\n        const g = Number.parseInt(value.substring(2, 4), 16);\r\n        const b = Number.parseInt(value.substring(4, 6), 16);\r\n        let a = 1;\r\n        if (value.length === 8) {\r\n            a = Number.parseInt(value.substring(6, 8), 16);\r\n        }\r\n        return { r, g, b, a };\r\n    }\r\n\r\n    export const convertColorCodeFromRgba = (rgba: Rgba): string => {\r\n        const r = ('00' + rgba.r.toString(16)).slice(-2);\r\n        const g = ('00' + rgba.g.toString(16)).slice(-2);\r\n        const b = ('00' + rgba.b.toString(16)).slice(-2);\r\n        const a = ('00' + rgba.a.toString(16)).slice(-2);\r\n        return `#${r}${g}${b}${a}`;\r\n    }\r\n\r\n    export const toWhite = (color: string, rate: number): string => {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport default DrawUtil;","namespace VectorUtil {\r\n\r\n    export type XY = {\r\n        x: number, y: number;\r\n    }\r\n\r\n    export class Vector {\r\n\r\n        xy: XY;\r\n        rad: number;\r\n        len: number;\r\n\r\n        constructor(xy: XY) {\r\n            this.xy = xy;\r\n            this.rad = 0;\r\n            this.len = 0;\r\n            this.syncFromXY();\r\n        }\r\n\r\n        syncFromXY = () => {\r\n            this.len = Math.sqrt(this.xy.x * this.xy.x + this.xy.y * this.xy.y);\r\n            this.rad = Math.atan2(this.xy.y, this.xy.x);\r\n        }\r\n\r\n        syncFromRad = () => {\r\n            this.xy.x = Math.cos(this.rad) * this.len;\r\n            this.xy.y = Math.sin(this.rad) * this.len;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default VectorUtil;","import { assert } from \"console\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport DrawUtil from \"../../graphic/drawUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport FactoryUtil from \"../factory/factoryUtil\";\r\n\r\nnamespace PreviewUtil {\r\n\r\n    export const SCREEN_WIDTH = 550;\r\n    export const SCREEN_HEIGHT = 550;\r\n\r\n    export type ValueMap = {\r\n        name: string;\r\n        value: number;\r\n    }\r\n\r\n    type ParentProps = {\r\n        pos: VectorUtil.XY;\r\n    }\r\n\r\n    export const buildOriginProps = (\r\n        owner: Particle.Instance[],\r\n        node: TreeUtil.ElementNode,\r\n        rootData: FactoryUtil.WrapNode,\r\n        args: ValueMap[]\r\n    ): Particle.Props => {\r\n\r\n        const searchDependLogic = (name: string): FactoryUtil.NodeLogicItem | null => {\r\n            const mng = (rootData.data as FactoryUtil.NodeRoot).inheritMng.data as FactoryUtil.NodeLogicManager;\r\n            const wrap = mng.defs.find(def => (def.data as FactoryUtil.NodeLogicItem).name === name);\r\n            if (wrap == undefined) return null;\r\n            return wrap.data as FactoryUtil.NodeLogicItem;\r\n        }\r\n\r\n        const createParticleRec = (cur: FactoryUtil.NodeLogicItem, fields: ValueMap[], parent: null | ParentProps): Particle.Props => {\r\n            let valueMapList: ValueMap[] = fields.concat(ConstantValueMap);\r\n\r\n            const visualParams = (searchElement('visual-mng', cur.mngs)?.data as FactoryUtil.NodeParamManager).\r\n                params.map(param => param.data as FactoryUtil.NodeParamItem);\r\n            const behaviorParams = (searchElement('behavior-mng', cur.mngs)?.data as FactoryUtil.NodeParamManager).\r\n                params.map(param => param.data as FactoryUtil.NodeParamItem);\r\n\r\n            const getVisualParam = (name: string) => {\r\n                return convertFormulaToValue(name, visualParams, valueMapList);\r\n            }\r\n            const getBehaviorParam = (name: string) => {\r\n                return convertFormulaToValue(name, behaviorParams, valueMapList);\r\n            }\r\n\r\n            const limit = Math.floor(getBehaviorParam('limit'));\r\n            const pos = parent == null ? { x: getBehaviorParam('pos_x'), y: getBehaviorParam('pos_y') } : parent.pos;\r\n            const vec = new VectorUtil.Vector({ x: 0, y: 0 });\r\n            if (behaviorParams[behaviorParams.length - 1].name === 'vec_y') {\r\n                vec.xy.x = getBehaviorParam('vec_x');\r\n                vec.xy.y = getBehaviorParam('vec_y');\r\n                vec.syncFromXY();\r\n            } else {\r\n                vec.rad = getBehaviorParam('radian');\r\n                vec.len = getBehaviorParam('length');\r\n                vec.syncFromRad();\r\n            }\r\n\r\n            const extendList: ((self: Particle.Instance) => void)[] = [];\r\n            const extendMng = searchElement('extend-mng', cur.mngs);\r\n\r\n            let disappearStartRate = undefined;\r\n            if (extendMng != null) {\r\n                const mngs = (extendMng.data as FactoryUtil.NodeExtendManager).mngs;\r\n                const connectMng = searchElement('connect-mng', mngs);\r\n                if (connectMng != null) {\r\n                    const connects = (connectMng.data as FactoryUtil.NodeInheritConnectManager).connects;\r\n\r\n                    connects.forEach(connect => {\r\n                        const connector = connect.data as FactoryUtil.NodeInheritConnector;\r\n\r\n                        // 実行条件\r\n                        const getCondition: ((self: Particle.Instance) => boolean) = (connector.condition === 'limit') ? (self: Particle.Instance) => {\r\n                            return self.frame === self.limit;\r\n                        } : (self: Particle.Instance) => {\r\n                            return true;\r\n                        };\r\n                        const logicItem = connector.connectType === 'create' ?\r\n                            searchElement('inherit-cache-item', connector.mngs)?.data as FactoryUtil.NodeLogicItem :\r\n                            searchDependLogic(connector.depend);\r\n\r\n                        if (logicItem != null) {\r\n                            let loopCnt = 1;\r\n                            const iterateItem = searchElement('iterate-mng', connector.mngs);\r\n                            if (iterateItem != null) {\r\n                                const params = (iterateItem.data as FactoryUtil.NodeParamManager).params.map(param => param.data as FactoryUtil.NodeParamItem);\r\n                                loopCnt = convertFormulaToValue('loop_count', params, valueMapList);\r\n                            }\r\n\r\n                            valueMapList.push({ name: 'limit', value: limit });\r\n                            valueMapList.push({ name: 'vec_x', value: vec.xy.x });\r\n                            valueMapList.push({ name: 'vec_y', value: vec.xy.y });\r\n                            valueMapList.push({ name: 'radian', value: vec.rad });\r\n                            valueMapList.push({ name: 'length', value: vec.len });\r\n\r\n                            // フィールド関連のパラメータを追加\r\n                            for (let i = 0; i < loopCnt; i++) {\r\n\r\n                                // イテレータ関連のパラメータを追加\r\n                                let iterateValueMap: ValueMap[] = [];\r\n                                if (iterateItem != null) {\r\n                                    iterateValueMap = [\r\n                                        { name: 'loop_count', value: loopCnt },\r\n                                        { name: 'loop_iterator', value: i }\r\n                                    ]\r\n                                }\r\n\r\n                                const sendItem = searchElement('send-mng', connector.mngs)?.data as FactoryUtil.NodeParamManager;\r\n                                const params = sendItem.params.map(param => param.data as FactoryUtil.NodeParamItem);\r\n                                const sendValueMapList: ValueMap[] = params.map(item => {\r\n                                    return { name: item.name, value: convertFormulaToValue(item.name, params, valueMapList.concat(iterateValueMap)) }\r\n                                });\r\n                                extendList.push((self: Particle.Instance) => {\r\n                                    if (getCondition(self)) {\r\n                                        const props = createParticleRec(\r\n                                            logicItem,\r\n                                            sendValueMapList,\r\n                                            {\r\n                                                pos: { ...self.pos }\r\n                                            }\r\n                                        );\r\n                                        self.owner.push(new Particle.Instance(props));\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                const effectMng = searchElement('effect-mng', mngs);\r\n                if (effectMng != null) {\r\n                    const params = (effectMng.data as FactoryUtil.NodeParamManager).params.map(param => (param.data as FactoryUtil.NodeParamItem));\r\n\r\n                    const getEffectParam = (name: string) => {\r\n                        return convertFormulaToValue(name, params, valueMapList);\r\n                    }\r\n                    disappearStartRate = getEffectParam('disappear_start_rate');\r\n                    console.log(disappearStartRate);\r\n                }\r\n                const modulateMng = searchElement('modulate-mng', mngs);\r\n                if (modulateMng != null) {\r\n                    const params = (modulateMng.data as FactoryUtil.NodeParamManager).params.map(param => (param.data as FactoryUtil.NodeParamItem));\r\n\r\n                    const getModulateParam = (name: string) => {\r\n                        return convertFormulaToValue(name, params, valueMapList);\r\n                    }\r\n                    const decayLimit = getModulateParam('decay_limit');\r\n                    const decayRate = getModulateParam('decay_rate');\r\n                    const gravity = getModulateParam('gravity');\r\n                    extendList.push((self: Particle.Instance) => {\r\n                        modulate(self, {\r\n                            decayLimit, decayRate, gravity\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n\r\n            return {\r\n                owner, pos, vec,\r\n                limit,\r\n                drawer: DrawUtil.createGradDrawer({\r\n                    radius: getVisualParam('radius'),\r\n                    color: DrawUtil.convertColorCodeFromRgba({\r\n                        r: getVisualParam('color_r'),\r\n                        g: getVisualParam('color_g'),\r\n                        b: getVisualParam('color_b'),\r\n                        a: getVisualParam('color_a'),\r\n                    }),\r\n                    disappearStartRate\r\n                }),\r\n                extend: extendList\r\n            };\r\n        }\r\n\r\n        const origin = (node.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeLogicItem;\r\n        return createParticleRec(origin, args, null);\r\n    }\r\n\r\n\r\n    const searchElement = (type: FactoryUtil.NodeType, warpList: FactoryUtil.WrapNode[]) => {\r\n        return warpList.find(wrap => wrap.type === type) ?? null;\r\n    }\r\n\r\n    const convertFormulaToValue = (name: string, params: FactoryUtil.NodeParamItem[], valueMapList: ValueMap[]): number => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return 0;\r\n\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item, i) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            formulaStr += str;\r\n        });\r\n        // console.log(formulaStr);\r\n        return Function(`return (${formulaStr})`)();\r\n    }\r\n\r\n    export const ConstantValueMap: ValueMap[] = [\r\n        { name: 'screen_width', value: SCREEN_WIDTH },\r\n        { name: 'screen_height', value: SCREEN_HEIGHT },\r\n        { name: 'pi', value: 3.14159265359 },\r\n        { name: 'radian_round', value: 3.14159265359 * 2 }\r\n    ];\r\n\r\n    type ModulateParam = {\r\n        decayRate: number;\r\n        decayLimit: number;\r\n        gravity: number;\r\n    }\r\n\r\n    const modulate = (self: Particle.Instance, param: ModulateParam) => {\r\n\r\n        if (self.vec.len > param.decayLimit) {\r\n            self.vec.len = self.vec.len * param.decayRate;\r\n            self.vec.syncFromRad();\r\n            self.vec.xy.y += param.gravity;\r\n            self.vec.syncFromXY();\r\n        }\r\n    }\r\n}\r\n\r\nexport default PreviewUtil;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport FactoryUtil from \"../factory/factoryUtil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport DrawUtil from \"../../graphic/drawUtil\";\r\nimport PreviewUtil from \"./previewUtil\";\r\n\r\nnamespace LogicPreviewFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        rootData: FactoryUtil.WrapNode;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n\r\n        const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n        const [sceens, setSceens] = useState<string[]>([]);\r\n        const [frameCnt, setFrameCnt] = useState<number>(-1);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isBuild, setBuild] = useState<boolean>(false);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        useEffect(() => {\r\n            console.log(JSON.stringify(props.rootData));\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n        const getArgumentList = (): string[] => {\r\n            const argWrap = (props.node.children[0].data as FactoryUtil.WrapNode);\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as FactoryUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as FactoryUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n            return [];\r\n        }\r\n\r\n        const argumentList = useMemo(() => {\r\n            return getArgumentList();\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n            setFormList(argumentList.map(arg => {\r\n                return { value: '', errors: [] };\r\n            }));\r\n        }, []);\r\n\r\n        const formListJsx = useMemo(() => {\r\n            return formList.map((form, i) => {\r\n                return (\r\n                    <FormUtil.FormRecord\r\n                        key={i}\r\n                        titleLabel={argumentList[i]}\r\n                        labelWidth={250}\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={332}\r\n                                isNumber\r\n                                checkable={form}\r\n                                setCheckable={(checkable) => {\r\n                                    form = { ...checkable };\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />);\r\n            });\r\n        }, [formList]);\r\n\r\n\r\n        const build = () => {\r\n\r\n            setBuild(true);\r\n            const sceens: string[] = [];\r\n\r\n            const owner: Particle.Instance[] = [];\r\n\r\n            let i = 0;\r\n            do {\r\n                if (i === 0) {\r\n                    owner.push(new Particle.Instance(\r\n                        PreviewUtil.buildOriginProps(owner, props.node, props.rootData, formList.map((form, i) => {\r\n                            return { name: argumentList[i], value: Number(form.value) }\r\n                        }))\r\n                    ));\r\n                }\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                    ctx.font = '16pt Arial';\r\n                    ctx.fillStyle = '#ffffff';\r\n                    ctx.fillText(`${i}`, 6, 24);\r\n                    ctx.fillStyle = '#ffec5c';\r\n                    ctx.fillText(`${owner.length}`, 6, 44);\r\n\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n\r\n                    ctx.save();\r\n                }));\r\n\r\n                // パーティクルの更新\r\n                for (let i = 0; i < owner.length; i++) {\r\n                    const particle = owner[i];\r\n\r\n                    particle.update();\r\n                }\r\n\r\n                // 死滅したパーティクルの削除\r\n                for (let i = owner.length - 1; i >= 0; i--) {\r\n                    const particle = owner[i];\r\n                    if (!particle.isLive) {\r\n                        owner.splice(i, 1);\r\n                    }\r\n                }\r\n\r\n                if(i > 500 || owner.length > 3000) break;\r\n                i++;\r\n            } while (owner.length > 0);\r\n            setFrameCnt(i);\r\n            setSceens(sceens);\r\n            setBuild(false);\r\n            setTabIndex(1);\r\n        }\r\n\r\n\r\n        const isInputOK = () => {\r\n            return formList.find(form => form.errors.length > 0) == undefined;\r\n        }\r\n        const buildTabJsx = (\r\n            <_Wrap>\r\n                <_FormDiv>\r\n                    {formListJsx}\r\n                </_FormDiv>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'Build',\r\n                            isEnable: isInputOK(),\r\n                            callback: () => {\r\n                                build();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / (frameCnt - 1)} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Build', enable: true, cont: buildTabJsx },\r\n                            { name: 'Play', enable: frameCnt !== -1, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogicPreviewFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _FormDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 580px;\r\n    background-color: #a2c1d5df;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #aed5d8e0;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactoryTab, { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\n\r\nconst FactDetArgumentMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const newWrap: FactoryUtil.WrapNode = {\r\n                                type: 'argument-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as FactoryUtil.NodeArgumentManager).args.push(newWrap);\r\n                            const newNode = TreeUtil.createNode(newWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            // (wrap.data as FactoryUtil.NodeArgumentManager).args.push(newWrap);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetArgumentMng;","import { useContext, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../../factoryTab\";\r\nimport FactoryUtil from \"../../factoryUtil\";\r\n\r\nnamespace ModifyOperations {\r\n\r\n    export type Props = {\r\n        mappingForm: () => void;\r\n        checkableFields: FormUtil.CheckableValue[];\r\n        isInputOK?: boolean;\r\n        firstRegist: () => void;\r\n        modifyRegist: () => void;\r\n    }\r\n\r\n    export const Component = (props: Props) => {\r\n        const { node, isModify, setModify, setFocusNode } = useContext(FactoryTreeContext);\r\n\r\n        const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n        const isComplete = FormUtil.isCompleteCheck(props.checkableFields);\r\n\r\n        return (<>\r\n            <FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: isModify,\r\n                        callback: () => {\r\n                            if (wrap.data == null) {\r\n                                const parent = (node.parent as TreeUtil.ElementNode);\r\n                                parent.children.splice(parent.children.length - 1, 1);\r\n                                setFocusNode(parent);\r\n                            } else {\r\n                                props.mappingForm();\r\n                            }\r\n                            setModify(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !isModify || (props.isInputOK ?? isComplete),\r\n                        callback: () => {\r\n                            if (!isModify) {\r\n                                setModify(true);\r\n                            } else {\r\n                                if (wrap.data == null) {\r\n                                    props.firstRegist();\r\n                                } else {\r\n                                    props.modifyRegist();\r\n                                }\r\n                                setModify(false);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default ModifyOperations;","import { type } from \"os\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetArgumentItem = () => {\r\n    const { node, setFocusNode, setModify, isModify ,invalidate} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as FactoryUtil.NodeArgumentItem;\r\n        setName({ ...name, value: param.name });\r\n        setArgType({ ...argType, value: param.valueType });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[name]}\r\n            firstRegist={() => {\r\n                const param: FactoryUtil.NodeArgumentItem = {\r\n                    name: name.value,\r\n                    valueType: argType.value as FactoryUtil.ArgumentType\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as FactoryUtil.NodeArgumentItem;\r\n                param.name = name.value;\r\n                param.valueType = argType.value as FactoryUtil.ArgumentType;\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => FactoryUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={FactoryUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type !== 'float'}\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                let index = -1;\r\n                                node.parent?.children.forEach((n, i) => {\r\n                                    if (n == node) index = i;\r\n                                });\r\n                                node.parent?.children.splice(index, 1);\r\n                                ((node.parent?.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeArgumentManager).args.splice(index, 1);\r\n                                setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                                invalidate();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetArgumentItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactoryTab, { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\n\r\nconst FactDetInheritMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Inherit',\r\n                        callback: () => {\r\n                            const itemWrap: FactoryUtil.WrapNode = {\r\n                                type: 'inherit-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as FactoryUtil.NodeLogicManager).defs.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetInheritMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetExtendMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [hasEffectsNode, hasModulateNode, hasInheritNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as FactoryUtil.WrapNode).type;\r\n        });\r\n        return [\r\n            list.includes('effect-mng'),\r\n            list.includes('modulate-mng'),\r\n            list.includes('connect-mng'),\r\n        ]\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as FactoryUtil.NodeLogicItem;\r\n        setName({ ...name, value: param.name });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Effect'}\r\n                            width={300}\r\n                            isUse={hasEffectsNode}\r\n                            callback={() => {\r\n                                const data = (wrap.data as FactoryUtil.NodeExtendManager);\r\n                                if (hasEffectsNode) {\r\n                                    data.mngs.splice(0, 1);\r\n                                    node.children.splice(0, 1);\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                } else {\r\n                                    const newWrap: FactoryUtil.WrapNode = {\r\n                                        type: 'effect-mng',\r\n                                        data: {\r\n                                            params: []\r\n                                        } as FactoryUtil.NodeParamManager\r\n                                    }\r\n                                    data.mngs.unshift(newWrap);\r\n                                    const newNode = TreeUtil.createNode(newWrap, node);\r\n                                    node.children.unshift(newNode);\r\n\r\n                                    {\r\n                                        const paramWrap = FactoryUtil.createParamWrap('effect-item',\r\n                                            { name: 'disappear_start_rate', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] });\r\n                                        (newWrap.data as FactoryUtil.NodeParamManager).params.push(paramWrap);\r\n                                        newNode.children.push(TreeUtil.createNode(paramWrap, newNode));\r\n                                    }\r\n\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                }\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Modulate'}\r\n                            width={300}\r\n                            isUse={hasModulateNode}\r\n                            callback={() => {\r\n                                const data = (wrap.data as FactoryUtil.NodeExtendManager);\r\n                                if (hasModulateNode) {\r\n                                    const delIndex = !hasEffectsNode ? 0 : 1;\r\n                                    data.mngs.splice(delIndex, 1);\r\n                                    node.children.splice(delIndex, 1);\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                } else {\r\n                                    const newWrap: FactoryUtil.WrapNode = {\r\n                                        type: 'modulate-mng',\r\n                                        data: {\r\n                                            params: []\r\n                                        } as FactoryUtil.NodeParamManager\r\n                                    }\r\n                                    const insIndex = !hasEffectsNode ? 0 : 1;\r\n                                    data.mngs.splice(insIndex, 0, newWrap);\r\n                                    const newNode = TreeUtil.createNode(newWrap, node);\r\n                                    node.children.splice(insIndex, 0, newNode);\r\n\r\n                                    {\r\n                                        const paramWrap = FactoryUtil.createParamWrap('modulate-item',\r\n                                            { name: 'decay_rate', formulaItems: ['var'], values: [{ type: 'direct', value: '0.97' }] });\r\n                                        (newWrap.data as FactoryUtil.NodeParamManager).params.push(paramWrap);\r\n                                        newNode.children.push(TreeUtil.createNode(paramWrap, newNode));\r\n                                    }\r\n                                    {\r\n                                        const paramWrap = FactoryUtil.createParamWrap('modulate-item',\r\n                                            { name: 'decay_limit', formulaItems: ['var'], values: [{ type: 'direct', value: '5' }] });\r\n                                        (newWrap.data as FactoryUtil.NodeParamManager).params.push(paramWrap);\r\n                                        newNode.children.push(TreeUtil.createNode(paramWrap, newNode));\r\n                                    }\r\n                                    {\r\n                                        const paramWrap = FactoryUtil.createParamWrap('modulate-item',\r\n                                            { name: 'gravity', formulaItems: ['var'], values: [{ type: 'direct', value: '0.1' }] });\r\n                                        (newWrap.data as FactoryUtil.NodeParamManager).params.push(paramWrap);\r\n                                        newNode.children.push(TreeUtil.createNode(paramWrap, newNode));\r\n                                    }\r\n\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                }\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Inherit'}\r\n                            width={300}\r\n                            isUse={hasInheritNode}\r\n                            callback={() => {\r\n                                const data = (wrap.data as FactoryUtil.NodeExtendManager);\r\n                                if (hasInheritNode) {\r\n                                    console.log(data.mngs[data.mngs.length - 1].type);\r\n                                    data.mngs.splice(data.mngs.length - 1, 1);\r\n                                    node.children.splice(node.children.length - 1, 1);\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                } else {\r\n                                    const newWrap: FactoryUtil.WrapNode = {\r\n                                        type: 'connect-mng',\r\n                                        data: {\r\n                                            connects: []\r\n                                        } as FactoryUtil.NodeInheritConnectManager\r\n                                    }\r\n                                    data.mngs.push(newWrap);\r\n                                    const newNode = TreeUtil.createNode(newWrap, node);\r\n                                    node.children.push(newNode);\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                }\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetExtendMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactoryTab, { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\n\r\nconst FactDetOriginMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Origin',\r\n                        callback: () => {\r\n                            const newWrap: FactoryUtil.WrapNode = {\r\n                                type: 'origin-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as FactoryUtil.NodeLogicManager).defs.push(newWrap);\r\n                            const newNode = TreeUtil.createNode(newWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetOriginMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport LogicPreviewFrame from \"../../preview/logicPreviewFrame\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetLogicItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [isConnect, isInherit, hasArgNode, hasFieldNode, hasExtendNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as FactoryUtil.WrapNode).type;\r\n        });\r\n        const parentType = (node.parent?.data as FactoryUtil.WrapNode).type;\r\n        return [\r\n            parentType === 'connector',\r\n            parentType !== 'origin-mng',\r\n            list.includes('argument-mng'),\r\n            list.includes('field-mng'),\r\n            list.includes('extend-mng'),\r\n        ]\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        if (!isConnect) {\r\n            const param = wrap.data as FactoryUtil.NodeLogicItem;\r\n            setName({ ...name, value: param.name });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node, isConnect]);\r\n\r\n    return (<>\r\n        {isConnect ? <></> : (<>\r\n            <ModifyOperations.Component\r\n                mappingForm={mappingForm}\r\n                checkableFields={[name]}\r\n                firstRegist={() => {\r\n                    const param: FactoryUtil.NodeLogicItem = {\r\n                        name: name.value,\r\n                        mngs: FactoryUtil.getDefaultLogicMngs(isInherit)\r\n                    };\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n\r\n                    param.mngs.forEach(mng => {\r\n                        const newNode = TreeUtil.createNode(mng, node);\r\n                        const data = (newNode.data as FactoryUtil.WrapNode);\r\n                        switch (data.type) {\r\n                            case 'visual-mng': {\r\n                                (data.data as FactoryUtil.NodeParamManager).params.forEach(param => {\r\n                                    newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                                });\r\n                            } break;\r\n                            case 'behavior-mng': {\r\n                                (data.data as FactoryUtil.NodeParamManager).params.forEach(param => {\r\n                                    newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                                });\r\n                            } break;\r\n                        }\r\n                        node.children.push(newNode);\r\n                    });\r\n                }}\r\n                modifyRegist={() => {\r\n                    const param = wrap.data as FactoryUtil.NodeLogicItem;\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n                }}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"param\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Name\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={200}\r\n                                isReadOnly={!isModify}\r\n                                checkable={name}\r\n                                setCheckable={setName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => FactoryUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n        </>)}\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Argument'}\r\n                        width={300}\r\n                        isUse={hasArgNode}\r\n                        callback={() => {\r\n                            const data = (wrap.data as FactoryUtil.NodeLogicItem);\r\n                            if (hasArgNode) {\r\n                                data.mngs.splice(0, 1);\r\n                                node.children.splice(0, 1);\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            } else {\r\n                                const newWrap: FactoryUtil.WrapNode = {\r\n                                    type: 'argument-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as FactoryUtil.NodeArgumentManager\r\n                                }\r\n                                data.mngs.unshift(newWrap);\r\n                                const newNode = TreeUtil.createNode(newWrap, node);\r\n                                node.children.unshift(newNode);\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={false}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        callback={() => {\r\n                            if (hasFieldNode) {\r\n                            } else {\r\n                                const newWrap: FactoryUtil.WrapNode = {\r\n                                    type: 'field-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as FactoryUtil.NodeFieldManager\r\n                                }\r\n                                const data = (wrap.data as FactoryUtil.NodeLogicItem);\r\n                                data.mngs.push(newWrap);\r\n                                const newNode = TreeUtil.createNode(newWrap, node);\r\n                                node.children.push(newNode);\r\n                                setFocusNode(newNode);\r\n                            }\r\n                            setModify(true);\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Extend'}\r\n                            width={300}\r\n                            isUse={hasExtendNode}\r\n                            callback={() => {\r\n                                const data = (wrap.data as FactoryUtil.NodeLogicItem);\r\n                                if (hasExtendNode) {\r\n                                    console.log(data.mngs[data.mngs.length - 1].type);\r\n                                    data.mngs.splice(data.mngs.length - 1, 1);\r\n                                    node.children.splice(node.children.length - 1, 1);\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                } else {\r\n                                    const newWrap: FactoryUtil.WrapNode = {\r\n                                        type: 'extend-mng',\r\n                                        data: {\r\n                                            mngs: []\r\n                                        } as FactoryUtil.NodeExtendManager\r\n                                    }\r\n                                    data.mngs.push(newWrap);\r\n                                    const newNode = TreeUtil.createNode(newWrap, node);\r\n                                    node.children.push(newNode);\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                }\r\n                            }}\r\n                        />}\r\n                />\r\n            </>}\r\n        />\r\n        {isConnect ? <></> : (\r\n            <FormUtil.BorderPanel\r\n                title=\"operation\"\r\n                isEnable={!isModify}\r\n                innerJsx={<>\r\n                    {/* {isInherit ? <></> : (\r\n                        <FormUtil.ButtonRecord\r\n                            isCenter\r\n                            buttons={[\r\n                                {\r\n                                    label: 'Preview',\r\n                                    callback: () => {\r\n                                        store.system.dialog = (\r\n                                            <LogicPreviewFrame.Component\r\n                                                node={node}\r\n                                                rootData={rootData}\r\n                                            />\r\n                                        );\r\n                                        setStore({ ...store });\r\n                                    }\r\n                                }\r\n                            ]}\r\n                        />\r\n                    )} */}\r\n                    <FormUtil.ButtonRecord\r\n                        isCenter\r\n                        buttons={[\r\n                            {\r\n                                label: 'Delete',\r\n                                callback: () => {\r\n                                    let index = -1;\r\n                                    node.parent?.children.forEach((n, i) => {\r\n                                        if (n == node) index = i;\r\n                                    });\r\n                                    node.parent?.children.splice(index, 1);\r\n                                    ((node.parent?.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeLogicManager).defs.splice(index, 1);\r\n                                    setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                                    invalidate();\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default FactDetLogicItem;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\ntype FormProps = {\r\n    inputType: FormUtil.CheckableValue;\r\n    value: FormUtil.CheckableValue;\r\n};\r\n\r\nconst FactOprParam = () => {\r\n    const { node, setFocusNode, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    /** 式 */\r\n    const [formulaItems, setFormulaItems] = useState<string[]>([]);\r\n    /** 変数の入力フォーム */\r\n    const [varFormList, setVarFormList] = useState<FormProps[]>([]);\r\n    // const [formJsxList, setFaormJsxList] = useState<JSX.Element[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as FactoryUtil.NodeParamItem;\r\n        setFormulaItems(param.formulaItems.slice());\r\n        setVarFormList(param.values.map(v => {\r\n            return {\r\n                inputType: { value: v.type, errors: [] },\r\n                value: { value: v.value, errors: [] }\r\n            }\r\n        }));\r\n    };\r\n\r\n    const fieldKeyList = useMemo(() => {\r\n        const parentType = (node.parent?.data as FactoryUtil.WrapNode).type;\r\n        switch (parentType) {\r\n            case 'send-mng': {\r\n                const isIterate = (node.parent?.parent?.children[0].data as FactoryUtil.WrapNode).type === 'iterate-mng';\r\n                const keys: string[] = [];\r\n                keys.push('vec_x');\r\n                keys.push('vec_y');\r\n                keys.push('radian');\r\n                keys.push('length');\r\n                keys.push('limit');\r\n                if (isIterate) {\r\n                    keys.push('loop_count');\r\n                    keys.push('loop_iterator');\r\n                }\r\n                return keys;\r\n            }\r\n        }\r\n        return [];\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        mappingForm();\r\n    }, [node]);\r\n\r\n    /** 引数リスト */\r\n    const argumentList = useMemo(() => {\r\n        const getTargetWrap = () => {\r\n            switch (wrap.type) {\r\n                case 'visual-item':\r\n                case 'behavior-item': {\r\n                    return node.parent?.parent?.children[0].data as FactoryUtil.WrapNode;\r\n                }\r\n                case 'iterate-item': {\r\n                    return node.parent?.parent?.parent?.parent?.parent?.children[0].data as FactoryUtil.WrapNode;\r\n                }\r\n            }\r\n        }\r\n        const targetWrap = getTargetWrap();\r\n        if (targetWrap == undefined || targetWrap.type !== 'argument-mng') return [];\r\n\r\n        console.log((targetWrap.data as FactoryUtil.NodeArgumentManager).args);\r\n        return (targetWrap.data as FactoryUtil.NodeArgumentManager).args.map(arg => {\r\n            const item = arg.data as FactoryUtil.NodeArgumentItem;\r\n            return item.name;\r\n        });\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (item === 'var') num++;\r\n        });\r\n\r\n        if (varFormList.length < num) {\r\n            const addNum = num - varFormList.length;\r\n            for (let i = 0; i < addNum; i++) varFormList.push({\r\n                inputType: { value: 'direct', errors: [] },\r\n                value: { value: '', errors: [] }\r\n            });\r\n            setVarFormList(varFormList.slice());\r\n        } else if (varFormList.length > num) {\r\n            const delNum = varFormList.length - num;\r\n            for (let i = 0; i < delNum; i++) varFormList.splice(varFormList.length - delNum, delNum);\r\n            setVarFormList(varFormList.slice());\r\n        }\r\n    }, [formulaItems]);\r\n\r\n    /** 「(」の数-「)」の数 */\r\n    const parenthesisBalance = useMemo(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (['(', 'rand('].includes(item)) num++;\r\n            else if (item === ')') num--;\r\n        });\r\n        return num;\r\n    }, [formulaItems]);\r\n\r\n    /** 値の入力フォームのJSX */\r\n    const formJsxList = useMemo(() => {\r\n        return varFormList.map((v, i) => {\r\n\r\n            const getValueForm = (): JSX.Element => {\r\n                const type = v.inputType.value as FactoryUtil.ParamInputType;\r\n                if (type === 'direct') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isNumber\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                        // validates={[\r\n                        //     {\r\n                        //         checker: (value) => value !== '0',\r\n                        //         errorType: \"value\"\r\n                        //     }\r\n                        // ]}\r\n                        />\r\n                    );\r\n                } else {\r\n                    let list: string[] = [];\r\n                    if (type === 'argument') {\r\n                        list = argumentList;\r\n                    } else if (type === 'field') {\r\n                        list = fieldKeyList;\r\n                    } else if (type === 'constant') {\r\n                        list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                    }\r\n                    return (\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            list={list.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n            return <FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={`var_${i}`}\r\n                labelWidth={90}\r\n                marginTop={i === 0 ? 4 : 0}\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        checkable={v.inputType}\r\n                        width={142}\r\n                        isReadOnly={!isModify}\r\n                        setCheckable={(checkable) => {\r\n                            varFormList[i].inputType = checkable;\r\n                            if (isModify) {\r\n                                varFormList[i].value.value = checkable.value === 'direct' ? '0' : '';\r\n                            }\r\n                            setVarFormList(varFormList.slice());\r\n                        }}\r\n                        list={FactoryUtil.ParamInputTypes.map(item => {\r\n                            return { value: item, labelText: item };\r\n                        })}\r\n                    />\r\n                    {getValueForm()}\r\n                </>}\r\n            />;\r\n        });\r\n    }, [varFormList, isModify]);\r\n\r\n    const getFormulaJsx = () => {\r\n        let num = 0;\r\n        const jsxList: JSX.Element[] = [];\r\n        formulaItems.forEach((item) => {\r\n            if (jsxList.length > 0) {\r\n                jsxList.push(<span key={jsxList.length}>&nbsp;</span>);\r\n            }\r\n            if (item === 'var') {\r\n                jsxList.push(<_Var key={jsxList.length}>{`$\\{var_${num}}`}</_Var>);\r\n                num++;\r\n            } else {\r\n                jsxList.push(<_Sig key={jsxList.length}>{item}</_Sig>);\r\n            }\r\n        });\r\n        return jsxList;\r\n    }\r\n\r\n    const isLastVar = () => formulaItems.length > 0 && ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const isFormulaOK = parenthesisBalance === 0 && varFormList.length > 0 &&\r\n        ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const hasFormError = !isFormulaOK || varFormList.find(varForm => varForm.value.errors.length > 0) != undefined;\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[]}\r\n            firstRegist={() => { }}\r\n            isInputOK={parenthesisBalance === 0 && !hasFormError}\r\n            modifyRegist={() => {\r\n                const data = wrap.data as FactoryUtil.NodeParamItem;\r\n                data.formulaItems = formulaItems.slice();\r\n                data.values = varFormList.map(varForm => {\r\n                    return {\r\n                        type: varForm.inputType.value as FactoryUtil.ParamInputType,\r\n                        value: varForm.value.value\r\n                    }\r\n                });\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"formula\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: '+',\r\n                            width: 50,\r\n                            isEnable: isModify && isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('+');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '-',\r\n                            width: 50,\r\n                            isEnable: isModify && isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('-');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '*',\r\n                            width: 50,\r\n                            isEnable: isModify && isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('*');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '/',\r\n                            width: 50,\r\n                            isEnable: isModify && isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('/');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '%',\r\n                            width: 50,\r\n                            isEnable: isModify && isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('%');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '(',\r\n                            width: 35,\r\n                            isEnable: isModify && !isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('(');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: ')',\r\n                            width: 35,\r\n                            isEnable: isModify && isLastVar() && parenthesisBalance > 0,\r\n                            callback: () => {\r\n                                formulaItems.push(')');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'del',\r\n                            width: 60,\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            callback: () => {\r\n                                formulaItems.splice(formulaItems.length - 1, 1);\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'var',\r\n                            width: 70,\r\n                            isEnable: isModify && !isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('var');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'rand',\r\n                            width: 80,\r\n                            isEnable: isModify && !isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('rand(');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'clear',\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            width: 90,\r\n                            callback: () => {\r\n                                setFormulaItems([]);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_Formula\r\n                    isInvalid={!isFormulaOK}\r\n                >{getFormulaJsx()}</_Formula>\r\n                {formJsxList}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactOprParam;\r\n\r\nconst _Formula = styled.div<{\r\n    isInvalid: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 12px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    overflow-wrap: break-word;\r\n    height: 100px;//calc(100% - 4px);\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    background-color: #ffffff8b;\r\n    ${props => !props.isInvalid ? '' : css`\r\n        background-color: #ffe8628a;\r\n    `}\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    padding: 0 0 0 4px;\r\n    vertical-align: top;\r\n    margin: 5px 0 0 6px;\r\n`;\r\nconst _Var = styled.span`\r\n    color: #e70013;\r\n`;\r\nconst _Sig = styled.span`\r\n    color: #3333339d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetBehiviorMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamManager;\r\n\r\n\r\n    /** ベクトル指定か否か */\r\n    const isVector = useMemo(() => {\r\n        const swapPos = node.children.length - 2;\r\n        return ((node.children[swapPos].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name === 'vec_x';\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Vector method'}\r\n                            width={300}\r\n                            isEnable={!isVector}\r\n                            isUse={isVector}\r\n                            callback={() => {\r\n                                const swapPos = node.children.length - 2;\r\n                                node.children.splice(swapPos, 2);\r\n                                {\r\n                                    const wrap = FactoryUtil.createParamWrap('behavior-item',\r\n                                        { name: 'vec_x', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] });\r\n                                    mng.params.push(wrap);\r\n                                    node.children.push(TreeUtil.createNode(wrap, node));\r\n                                }\r\n                                {\r\n                                    const wrap = FactoryUtil.createParamWrap('behavior-item',\r\n                                        { name: 'vec_y', formulaItems: ['var'], values: [{ type: 'direct', value: '-10' }] });\r\n                                    mng.params.push(wrap);\r\n                                    node.children.push(TreeUtil.createNode(wrap, node));\r\n                                }\r\n                                invalidate();\r\n                                setFocusNode({ ...node });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Direction method'}\r\n                            width={300}\r\n                            isEnable={isVector}\r\n                            isUse={!isVector}\r\n                            callback={() => {\r\n                                const swapPos = node.children.length - 2;\r\n                                node.children.splice(swapPos, 2);\r\n                                {\r\n                                    const wrap = FactoryUtil.createParamWrap('behavior-item',\r\n                                        { name: 'radian', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] });\r\n                                    mng.params.push(wrap);\r\n                                    node.children.push(TreeUtil.createNode(wrap, node));\r\n                                }\r\n                                {\r\n                                    const wrap = FactoryUtil.createParamWrap('behavior-item',\r\n                                        { name: 'length', formulaItems: ['var'], values: [{ type: 'direct', value: '10' }] });\r\n                                    mng.params.push(wrap);\r\n                                    node.children.push(TreeUtil.createNode(wrap, node));\r\n                                }\r\n                                invalidate();\r\n                                setFocusNode({ ...node });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetBehiviorMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetVisualMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    /** ベクトル指定か否か */\r\n    // const isVector = useMemo(() => {\r\n    //     console.log(((node.children[3].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name);\r\n    //     return ((node.children[3].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name === 'vector-x';\r\n    // }, [node]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Particle Method'}\r\n                            width={300}\r\n                            isEnable={false}\r\n                            isUse={true}\r\n                            callback={() => {\r\n                                // node.children.splice(3, 2);\r\n                                // node.children.push(TreeUtil.createNode({type: 'behavior-item', data: {name: 'radius'}}, node));\r\n                                // node.children.push(TreeUtil.createNode({type: 'behavior-item', data: {name: 'length'}}, node));\r\n                                // invalidate();\r\n                                // setFocusNode({...node});\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetVisualMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactoryTab, { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\n\r\nconst FactDetInheritConnMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeInheritConnectManager;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Connector',\r\n                        callback: () => {\r\n                            const wrap: FactoryUtil.WrapNode = {\r\n                                type: 'connector',\r\n                                data: null\r\n                            }\r\n                            mng.connects.push(wrap);\r\n                            const newNode = TreeUtil.createNode(wrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetInheritConnMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetEffectMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n\r\n    /** ベクトル指定か否か */\r\n    // const isVector = useMemo(() => {\r\n    //     console.log(((node.children[0].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name);\r\n    //     return ((node.children[3].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name === 'vector-x';\r\n    // }, [node]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Disappear Method'}\r\n                            width={300}\r\n                            isEnable={false}\r\n                            isUse={true}\r\n                            callback={() => {\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetEffectMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetModulateMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n\r\n    /** ベクトル指定か否か */\r\n    // const isVector = useMemo(() => {\r\n    //     console.log(((node.children[0].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name);\r\n    //     return ((node.children[3].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name === 'vector-x';\r\n    // }, [node]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Gravity Method'}\r\n                            width={300}\r\n                            isEnable={false}\r\n                            isUse={true}\r\n                            callback={() => {\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetModulateMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetInheritConnector = () => {\r\n    const { rootData, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    const [condition, setCondition] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [connectType, setConnectType] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [depend, setDepend] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [hasIterateNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as FactoryUtil.WrapNode).type;\r\n        });\r\n        return [\r\n            list.includes('iterate-mng'),\r\n        ]\r\n    }, [node, node.children.length]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as FactoryUtil.NodeInheritConnector;\r\n        setCondition({ ...condition, value: param.condition });\r\n        setConnectType({ ...connectType, value: param.connectType });\r\n        setDepend({ ...depend, value: param.depend });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const isCreate = connectType.value === 'create';\r\n\r\n    const inheritList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as FactoryUtil.NodeRoot;\r\n        const inheritMng = rootNode.inheritMng.data as FactoryUtil.NodeLogicManager;\r\n        return inheritMng.defs.map(wrap => {\r\n            return (wrap.data as FactoryUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    const getSendParamList = (): string[] => {\r\n        if (!isCreate) {\r\n            const rootNode = rootData.data as FactoryUtil.NodeRoot;\r\n            const inheritMng = rootNode.inheritMng.data as FactoryUtil.NodeLogicManager;\r\n            const dependItem = inheritMng.defs.find(wrap => {\r\n                return (wrap.data as FactoryUtil.NodeLogicItem).name === depend.value;\r\n            });\r\n            if (dependItem != undefined) {\r\n                const argWrap = (dependItem.data as FactoryUtil.NodeLogicItem).mngs[0];\r\n                if (argWrap.type === 'argument-mng') {\r\n                    return (argWrap.data as FactoryUtil.NodeArgumentManager).args.map(arg => {\r\n                        return (arg.data as FactoryUtil.NodeArgumentItem).name;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const setSendParams = (param: FactoryUtil.NodeInheritConnector) => {\r\n\r\n        const sendIndex = param.mngs[0].type === 'send-mng' ? 0 : 1;\r\n        const sendMng = param.mngs[sendIndex].data as FactoryUtil.NodeParamManager;\r\n        const sendNode = node.children[sendIndex];\r\n        sendMng.params = [];\r\n        sendNode.children = [];\r\n        getSendParamList().forEach(param => {\r\n            const paramWrap = FactoryUtil.createParamWrap('origin-item',\r\n                { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n            );\r\n            sendMng.params.push(paramWrap);\r\n            sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n        });\r\n    }\r\n\r\n    const initConnectorNode = (param: FactoryUtil.NodeInheritConnector) => {\r\n        param.mngs = [];\r\n        node.children = [];\r\n        param.mngs.push({\r\n            type: 'send-mng',\r\n            data: {\r\n                params: []\r\n            } as FactoryUtil.NodeParamManager\r\n        });\r\n        if (isCreate) {\r\n            param.mngs.push({\r\n                type: 'inherit-cache-item',\r\n                data: {\r\n                    mngs: FactoryUtil.getDefaultLogicMngs(true)\r\n                } as FactoryUtil.NodeConnectInheritItem\r\n            });\r\n        }\r\n        wrap.data = param;\r\n\r\n        param.mngs.forEach(mng => {\r\n            const newNode = TreeUtil.createNode(mng, node);\r\n            const data = (newNode.data as FactoryUtil.WrapNode);\r\n            switch (data.type) {\r\n                case 'inherit-cache-item': {\r\n                    (data.data as FactoryUtil.NodeConnectInheritItem).mngs.forEach(mng => {\r\n                        const inheritNode = TreeUtil.createNode(mng, newNode);\r\n                        newNode.children.push(inheritNode);\r\n\r\n                        switch (mng.type) {\r\n                            case 'visual-mng': {\r\n                                (mng.data as FactoryUtil.NodeParamManager).params.forEach(param => {\r\n                                    inheritNode.children.push(TreeUtil.createNode(param, inheritNode));\r\n                                });\r\n                            } break;\r\n                            case 'behavior-mng': {\r\n                                (mng.data as FactoryUtil.NodeParamManager).params.forEach(param => {\r\n                                    inheritNode.children.push(TreeUtil.createNode(param, inheritNode));\r\n                                });\r\n                            } break;\r\n                        }\r\n                    });\r\n                } break;\r\n            }\r\n            node.children.push(newNode);\r\n        });\r\n        setSendParams(param);\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            checkableFields={[condition, connectType, depend]}\r\n            firstRegist={() => {\r\n                const param: FactoryUtil.NodeInheritConnector = {\r\n                    condition: condition.value as FactoryUtil.ConditionType,\r\n                    connectType: connectType.value as FactoryUtil.ConnectType,\r\n                    depend: depend.value,\r\n                    mngs: []\r\n                };\r\n                initConnectorNode(param);\r\n                invalidate();\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as FactoryUtil.NodeInheritConnector;\r\n                const isChange = param.connectType !== connectType.value || param.depend !== depend.value;\r\n                param.condition = condition.value as FactoryUtil.ConditionType;\r\n                param.connectType = connectType.value as FactoryUtil.ConnectType;\r\n                param.depend = depend.value;\r\n                wrap.data = param;\r\n\r\n                if (isChange) {\r\n                    initConnectorNode(param);\r\n                }\r\n                invalidate();\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Condition\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={condition}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setCondition}\r\n                            list={FactoryUtil.ConditionTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Inherit\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={connectType}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                // createが選択されたらdependを空にする\r\n                                if (checkable.value === 'create') {\r\n                                    setDepend({ ...depend, value: '' });\r\n                                }\r\n                                setConnectType(checkable);\r\n                            }}\r\n                            list={FactoryUtil.ConnectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Depend\"\r\n                    isEnable={connectType.value === 'depend'}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={depend}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setDepend}\r\n                            list={inheritList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            dependency={[connectType]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => {\r\n                                        return connectType.value !== 'depend' || ValidateUtil.checkRequired(value);\r\n                                    },\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Iterate'}\r\n                        width={300}\r\n                        isUse={hasIterateNode}\r\n                        callback={() => {\r\n                            const data = (wrap.data as FactoryUtil.NodeLogicItem);\r\n                            if (hasIterateNode) {\r\n                                data.mngs.splice(0, 1);\r\n                                node.children.splice(0, 1);\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            } else {\r\n                                const newWrap: FactoryUtil.WrapNode = {\r\n                                    type: 'iterate-mng',\r\n                                    data: {\r\n                                        params: []\r\n                                    } as FactoryUtil.NodeParamManager\r\n                                };\r\n\r\n                                data.mngs.unshift(newWrap);\r\n                                const newNode = TreeUtil.createNode(newWrap, node);\r\n                                node.children.unshift(newNode);\r\n\r\n                                const loopCountWrap = FactoryUtil.createParamWrap('iterate-item',\r\n                                    { name: 'loop_count', formulaItems: ['var'], values: [{ type: 'direct', value: '1' }] });\r\n                                (newWrap.data as FactoryUtil.NodeParamManager).params.push(loopCountWrap);\r\n                                newNode.children.push(TreeUtil.createNode(loopCountWrap, newNode));\r\n\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                let index = -1;\r\n                                node.parent?.children.forEach((n, i) => {\r\n                                    if (n == node) index = i;\r\n                                });\r\n                                node.parent?.children.splice(index, 1);\r\n                                ((node.parent?.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeInheritConnectManager).connects.splice(index, 1);\r\n                                setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                                invalidate();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetInheritConnector;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactoryTab, { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\n\r\nconst FactDetSendManager = () => {\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    const getSendParamList = (): string[] => {\r\n        const connector = (node.parent?.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeInheritConnector;\r\n        const isCreate = connector.connectType === 'create';\r\n        let targetWrap: FactoryUtil.WrapNode | null = null;\r\n        if (!isCreate) {\r\n            const rootNode = rootData.data as FactoryUtil.NodeRoot;\r\n            const inheritMng = rootNode.inheritMng.data as FactoryUtil.NodeLogicManager;\r\n            const dependItem = inheritMng.defs.find(wrap => {\r\n                return (wrap.data as FactoryUtil.NodeLogicItem).name === connector.depend;\r\n            });\r\n            if (dependItem != undefined) targetWrap = dependItem;\r\n        } else {\r\n            targetWrap = (node.parent?.children[node.parent?.children.length - 1].data as FactoryUtil.WrapNode)\r\n        }\r\n        if (targetWrap != null) {\r\n            const argWrap = (targetWrap.data as FactoryUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as FactoryUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as FactoryUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const update = () => {\r\n        const sendParamList = getSendParamList();\r\n        const curSize = node.children.length;\r\n        const params = (wrap.data as FactoryUtil.NodeParamManager).params;\r\n        // 不要なパラメータを削除\r\n        for (let i = curSize - 1; i >= 0; i--) {\r\n            const name = (params[i].data as FactoryUtil.NodeParamItem).name;\r\n            if (!sendParamList.includes(name)) {\r\n                node.children.splice(i, 1);\r\n                params.splice(i, 1);\r\n            }\r\n        }\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as FactoryUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = FactoryUtil.createParamWrap('send-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n                node.children.push(TreeUtil.createNode(paramWrap, node));\r\n            }\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Update Params',\r\n                        callback: () => {\r\n                            update();\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetSendManager;","import { type } from \"os\";\r\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport Common from \"../common\";\r\nimport FactDetArgumentMng from \"./detail/factDetArgumentMng\";\r\nimport FactDetArgumentItem from \"./detail/factDetArgumentItem\";\r\nimport FactDetInheritMng from \"./detail/factDetInheritMng\";\r\nimport FactDetExtendMng from \"./detail/factDetExtendMng\";\r\nimport FactDetOriginMng from \"./detail/factDetOriginMng\";\r\nimport FactDetLogicItem from \"./detail/factDetLogicItem\";\r\nimport FactOprParam from \"./detail/factOprParam\";\r\nimport FactDetBehiviorMng from \"./detail/factDetBehiviorMng\";\r\nimport FactDetVisualMng from \"./detail/factDetVisualMng\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport FactDetInheritConnMng from \"./detail/factDetInheritConnMng\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport FactDetEffectMng from \"./detail/factDetEffectMng\";\r\nimport FactDetModulateMng from \"./detail/factDetModulateMng\";\r\nimport FactDetInheritConnector from \"./detail/factDetInheritConnector\";\r\nimport FactDetSendManager from \"./detail/factDetSendManager\";\r\n\r\nnamespace FactoryUtil {\r\n\r\n    export type DetailArgs = {\r\n        rootData: FactoryUtil.WrapNode;\r\n        node: TreeUtil.ElementNode;\r\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\r\n        invalidate: () => void;\r\n        isModify: boolean;\r\n        setModify: (isModify: boolean) => void;\r\n        setRootData: React.Dispatch<React.SetStateAction<WrapNode>>;\r\n        // treeDisable: boolean;\r\n        // setTreeDisable: (treeDisable: boolean) => void;\r\n    }\r\n\r\n    /**\r\n     * 変数名チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkFieldName = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyz_';\r\n        return !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].\r\n            includes(str.substring(0, 1)) && ValidateUtil.checkIncludesChars(str, list);\r\n    }\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'origin-mng' |\r\n        'inherit-mng' |\r\n        'origin-item' |\r\n        'inherit-item' |\r\n        'argument-mng' |\r\n        'argument-item' |\r\n        'visual-mng' |\r\n        'visual-item' |\r\n        'behavior-mng' |\r\n        'behavior-item' |\r\n        'extend-mng' |\r\n        'field-mng' |\r\n        'inherit-mng' |\r\n        'modulate-mng' |\r\n        'modulate-item' |\r\n        'connect-mng' |\r\n        'connector' |\r\n        'inherit-cache-item' |\r\n        'effect-mng' |\r\n        'effect-item' |\r\n        'iterate-mng' |\r\n        'iterate-item' |\r\n        'send-mng' |\r\n        'send-item'\r\n        ;\r\n\r\n    export const ArgTypes = ['int', 'float', 'color'] as const;\r\n    export type ArgumentType = typeof ArgTypes[number];\r\n\r\n\r\n    export const ParamInputTypes = ['direct', 'constant', 'argument', 'field'] as const;\r\n    export type ParamInputType = typeof ParamInputTypes[number];\r\n\r\n    export type ParamProps = {\r\n        type: ParamInputType;\r\n        value: string;\r\n    }\r\n\r\n    export type WrapNode = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        // caches: Common.Cache[];\r\n        seedMng: WrapNode;\r\n        inheritMng: WrapNode;\r\n    }\r\n    export type NodeLogicManager = {\r\n        defs: WrapNode[];\r\n    }\r\n    export type NodeLogicItem = {\r\n        name: string;\r\n        mngs: WrapNode[];\r\n    }\r\n    export type NodeConnectInheritItem = {\r\n        mngs: WrapNode[];\r\n    }\r\n    export type NodeParamManager = {\r\n        params: WrapNode[];\r\n    }\r\n    // export type NodeVisualManager = {\r\n    //     params: WrapNode[];\r\n    // }\r\n    export type NodeParamItem = {\r\n        name: string;\r\n        formulaItems: string[];\r\n        values: ParamProps[];\r\n\r\n    }\r\n\r\n    export type NodeArgumentItem = {\r\n        name: string;\r\n        valueType: ArgumentType;\r\n    }\r\n    export type NodeArgumentManager = {\r\n        args: WrapNode[];\r\n    }\r\n    export type NodeFieldManager = {\r\n        args: WrapNode[];\r\n    }\r\n\r\n    export type NodeExtendManager = {\r\n        mngs: WrapNode[];\r\n    }\r\n\r\n    // export type NodeInheritManager = {\r\n    //     defs: WrapNode[];\r\n    // }\r\n    export type NodeInheritConnectManager = {\r\n        connects: WrapNode[];\r\n    }\r\n    export type NodeInheritConnector = {\r\n        condition: ConditionType;\r\n        connectType: ConnectType;\r\n        depend: string;\r\n        mngs: WrapNode[];\r\n    }\r\n\r\n    export const createParamWrap = (type: NodeType, paramDataList: NodeParamItem): WrapNode => {\r\n        return { type: type, data: paramDataList };\r\n    }\r\n    export const createParamWrapList = (type: NodeType, paramDataList: NodeParamItem[]): WrapNode[] => {\r\n        return paramDataList.map(data => {\r\n            return { type: type, data: data };\r\n        });\r\n    }\r\n\r\n    export const createVisualParams = (): WrapNode[] => {\r\n        return createParamWrapList('visual-item', [\r\n            { name: 'radius', formulaItems: ['var'], values: [{ type: 'direct', value: '20' }] },\r\n            { name: 'color_r', formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: 'color_g', formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: 'color_b', formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: 'color_a', formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n        ]);\r\n    }\r\n\r\n    export const createBehaviorParams = (isInherit: boolean): WrapNode[] => {\r\n        const list: NodeParamItem[] = [];\r\n        list.push({ name: 'limit', formulaItems: ['var'], values: [{ type: 'direct', value: '30' }] });\r\n        if (!isInherit) {\r\n            list.push({ name: 'pos_x', formulaItems: ['var', '/', 'var'], values: [{ type: 'constant', value: 'screen_width' }, { type: 'direct', value: '2' }] });\r\n            list.push({ name: 'pos_y', formulaItems: ['var', '+', 'var'], values: [{ type: 'constant', value: 'screen_height' }, { type: 'direct', value: '20' }] });\r\n        }\r\n        list.push({ name: 'vec_x', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] });\r\n        list.push({ name: 'vec_y', formulaItems: ['var'], values: [{ type: 'direct', value: '-10' }] });\r\n        return createParamWrapList('behavior-item', list);\r\n    }\r\n\r\n    export const getDefaultLogicMngs = (isInherit: boolean): WrapNode[] => {\r\n        return [\r\n            {\r\n                type: 'visual-mng',\r\n                data: {\r\n                    params: FactoryUtil.createVisualParams()\r\n                } as FactoryUtil.NodeParamManager\r\n            },\r\n            {\r\n                type: 'behavior-mng',\r\n                data: {\r\n                    params: FactoryUtil.createBehaviorParams(isInherit)\r\n                } as FactoryUtil.NodeParamManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    // export const createExtendMngs = (): WrapNode[] => {\r\n    //     return [\r\n    //         {\r\n    //             type: 'inherit-mng',\r\n    //             data: {\r\n    //             } as NodeInheritMng\r\n    //         },\r\n    //         {\r\n    //             type: 'trace-mng',\r\n    //             data: {\r\n    //             } as NodeInheritMng\r\n    //         },\r\n    //         {\r\n    //             type: 'modulate-mng',\r\n    //             data: {\r\n    //             } as NodeInheritMng\r\n    //         },\r\n    //     ];\r\n    // }\r\n\r\n    export const getInitialData = (): WrapNode => {\r\n        return {\r\n            type: 'root',\r\n            data: {\r\n                seedMng: {\r\n                    type: 'origin-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as NodeLogicManager\r\n                } as WrapNode,\r\n                inheritMng: {\r\n                    type: 'inherit-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as NodeLogicManager\r\n                } as WrapNode\r\n            } as NodeRoot\r\n        }\r\n    }\r\n\r\n    const COLOR_ROOT = '#a1a1a1';\r\n    const COLOR_METHOD = '#cca67b';\r\n    const COLOR_MNG = '#37a2bd';\r\n    const COLOR_LIST = '#b85f5f';\r\n    const COLOR_ITEM = '#ae628c';\r\n    const COLOR_PARAM = '#8dae62';\r\n\r\n    export const getNodeJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapNode;\r\n        switch (wrap.type) {\r\n            case 'root': {\r\n                return <_Category backgroundColor={COLOR_ROOT}>Logic</_Category>;\r\n            }\r\n            case 'origin-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Origin Manager</_Category>;\r\n            }\r\n            case 'inherit-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Inherit Manager</_Category>;\r\n            }\r\n            case 'visual-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Visual</_Category>;\r\n            }\r\n            case 'extend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Extend</_Category>;\r\n            }\r\n            case 'modulate-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Modulate</_Category>;\r\n            }\r\n            case 'origin-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Origin</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Inherit</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-cache-item': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Inherit</_Category>;\r\n            }\r\n            case 'argument-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'behavior-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Behavior</_Category>;\r\n            }\r\n            case 'connect-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Connect Manager</_Category>;\r\n            }\r\n            case 'connector': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeInheritConnector;\r\n                    detailJsx = <span>{`${data.condition} ${data.connectType}`}</span>;\r\n                    if (data.connectType === 'depend') {\r\n                        detailJsx = <span>{`${data.condition} ${data.connectType}`}: <_Field>{data.depend}</_Field></span>;\r\n                    }\r\n                }\r\n                return (<>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Connector</_Category>\r\n                    {detailJsx == undefined ? <></> : <_EditableValue>{detailJsx}</_EditableValue>}\r\n                </>);\r\n            }\r\n            case 'effect-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Effect</_Category>;\r\n            }\r\n            case 'modulate-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Modulate</_Category>;\r\n            }\r\n            case 'visual-item':\r\n            case 'send-item':\r\n            case 'iterate-item':\r\n            case 'effect-item':\r\n            case 'modulate-item':\r\n            case 'behavior-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_PARAM}>Param<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'argument-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeArgumentItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.valueType})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'iterate-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Iterate</_Category>;\r\n            }\r\n            case 'send-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n        }\r\n        return <_Category backgroundColor={'#ffffff'}>XXXXX</_Category>;\r\n    }\r\n\r\n    export const getTypeName = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return '';\r\n        const type = (node.data as WrapNode).type;\r\n        switch (type) {\r\n            case 'root': return 'Root';\r\n            case 'origin-mng': return 'Origin Manager';\r\n            case 'inherit-mng': return 'Inherit Manager';\r\n            case 'origin-item': return 'Origin Item';\r\n            case 'inherit-item': return 'Inherit Item';\r\n            case 'argument-mng': return 'Argument Manager';\r\n            case 'visual-mng': return 'Visual Manager';\r\n            case 'behavior-item': return 'Behavior Item';\r\n            case 'visual-item': return 'Visual Item';\r\n            case 'argument-item': return 'Argument Item';\r\n            case 'extend-mng': return 'Extend Manager';\r\n            case 'behavior-mng': return 'Behivior Manager';\r\n            case 'connect-mng': return 'Inherit Connect Manager';\r\n            case 'connector': return 'Inherit Connector';\r\n            case 'inherit-cache-item': return 'Inherit Cache Item';\r\n            case 'effect-mng': return 'Effect Manager';\r\n            case 'modulate-mng': return 'Modulate Manager';\r\n            case 'iterate-mng': return 'Iterate Manager';\r\n            case 'send-mng': return 'Send Manager';\r\n            case 'iterate-item': return 'Iterate Item';\r\n            case 'send-item': return 'Send Item';\r\n            case 'modulate-item': return 'Modulate Item';\r\n            case 'effect-item': return 'Effect Item';\r\n        }\r\n    }\r\n\r\n    export const getDetailComponent = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return <></>;\r\n        const type = (node.data as WrapNode).type;\r\n        switch (type) {\r\n            case 'root': return <></>;\r\n            case 'origin-mng': return <FactDetOriginMng />;\r\n            case 'inherit-mng': return <FactDetInheritMng />;\r\n            case 'origin-item': return <FactDetLogicItem />;\r\n            case 'inherit-item': return <FactDetLogicItem />;\r\n            case 'argument-mng': return <FactDetArgumentMng />;\r\n            case 'argument-item': return <FactDetArgumentItem />;\r\n            case 'visual-mng': return <FactDetVisualMng />;\r\n            case 'extend-mng': return <FactDetExtendMng />;\r\n            case 'behavior-mng': return <FactDetBehiviorMng />;\r\n            case 'connect-mng': return <FactDetInheritConnMng />;\r\n            case 'effect-mng': return <FactDetEffectMng />;\r\n            case 'modulate-mng': return <FactDetModulateMng />;\r\n            case 'connector': return <FactDetInheritConnector />;\r\n            case 'inherit-cache-item': return <FactDetLogicItem />;\r\n            case 'send-mng': return <FactDetSendManager />;\r\n            case 'iterate-item':\r\n            case 'visual-item':\r\n            case 'behavior-item':\r\n            case 'effect-item':\r\n            case 'modulate-item':\r\n            case 'send-item': return <FactOprParam />;\r\n        }\r\n    }\r\n\r\n    // export type ConstantProps = {\r\n    //     name: string;\r\n    //     value: number;\r\n    // }\r\n    // export const ConstantList: ConstantProps[] = [\r\n    //     { name: 'screen_width', value: 550 },\r\n    //     { name: 'screen_height', value: 550 },\r\n    //     { name: 'pi', value: 3.14159265359 },\r\n    //     { name: 'radian_round', value: 3.14159265359 * 2 }\r\n    // ];\r\n\r\n    export const ConnectTypes = ['create', 'depend'] as const;\r\n    export type ConnectType = typeof ConnectTypes[number];\r\n\r\n    export const ConditionTypes = ['sustain', 'limit'] as const;\r\n    export type ConditionType = typeof ConditionTypes[number];\r\n\r\n}\r\n\r\nexport default FactoryUtil;\r\n\r\nconst _Category = styled.div<{\r\n    backgroundColor: string;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: ${props => props.backgroundColor};\r\n    /* width: 100%; */\r\n    border-radius: 4px 0 0 4px;\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n    border: solid 1px #000000d2;\r\n`;\r\nconst _Detail = styled.span`\r\n    color: #000b69bd;\r\n`;\r\n\r\nconst _EditableValue = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #0c0c0c;\r\n    color: #ebebeb;\r\n    border-radius: 0 4px 4px 0;\r\n    /* width: 100%; */\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n`;\r\nconst _ValueType = styled.span`\r\n    color: #fff9d6b9;\r\n`;\r\nconst _Signature = styled.span`\r\n    color: #ffffff78;\r\n`;\r\nconst _Field = styled.span`\r\n    color: #ff2d2d;\r\n`;\r\nconst _Formula = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #ffffffd1;\r\n    color: #790000;\r\n    /* border-radius: 0 4px 4px 0; */\r\n    /* width: 100%; */\r\n    margin: 5px 0 0 4px;\r\n    padding: 0 10px;\r\n`;","import { type } from \"os\";\r\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport Common from \"../common\";\r\nimport LogicPreviewFrame from \"../preview/logicPreviewFrame\";\r\nimport FactoryUtil from \"./factoryUtil\";\r\n\r\n\r\nexport const FactoryTreeContext = createContext({} as FactoryUtil.DetailArgs);\r\n\r\nconst FactoryTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [rootData, setRootData] = useState(FactoryUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    // const [treeDisable, setTreeDisable] = useState(false);\r\n    const [isModify, setModify] = useState<boolean>(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    const [fileHandle, setFileHandle] = useState<FileSystemFileHandle | null>(null);\r\n\r\n    const getChildren = (wrapNode: FactoryUtil.WrapNode): TreeUtil.DataNode[] => {\r\n        const get = (listName: string) => {\r\n\r\n            return ((wrapNode.data)[listName] as FactoryUtil.WrapNode[]).map(wrap => {\r\n                const treeNode: TreeUtil.DataNode = {\r\n                    data: wrap,\r\n                    children: getChildren(wrap)\r\n                };\r\n                return treeNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as FactoryUtil.NodeRoot;\r\n                return [\r\n                    { data: node.seedMng, children: getChildren(node.seedMng) },\r\n                    { data: node.inheritMng, children: getChildren(node.inheritMng) }\r\n                ];\r\n            }\r\n            case 'origin-mng':\r\n            case 'inherit-mng': return get('defs');\r\n            case 'extend-mng':\r\n            case 'origin-item':\r\n            case 'connector':\r\n            case 'inherit-cache-item':\r\n            case 'inherit-item': return get('mngs');\r\n            case 'effect-mng':\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'modulate-mng':\r\n            case 'effect-mng':\r\n            case 'iterate-mng':\r\n            case 'modulate-mng': return get('params');\r\n            case 'connect-mng': return get('connects');\r\n            case 'argument-mng': return get('args');\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: getChildren(rootData)\r\n        }\r\n    }, [rootData]);\r\n\r\n\r\n    const loadFile = () => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            setFileHandle(fileHandle);\r\n            const text = DataUtil.unZip(fileContents);\r\n            setRootData(JSON.parse(text));\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Successfully file loaded!\" />;\r\n            setStore({ ...store });\r\n        })();\r\n    }\r\n\r\n    const saveFile = () => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        console.log(JSON.stringify(rootData));\r\n        const plainData = JSON.stringify(rootData);\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                setFileHandle(fileHandle);\r\n                // this.score.setScoreState({ ...state });\r\n                const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    const getOrigin = () => {\r\n        let cur: TreeUtil.ElementNode | null = focusNode;\r\n        while (cur != null) {\r\n            if ((cur.data as FactoryUtil.WrapNode).type === 'origin-item') return cur;\r\n            cur = cur.parent;\r\n        };\r\n        return null;\r\n    }\r\n    const originNode = getOrigin();\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    <_TreeHeadHalf>\r\n                        <FormUtil.ButtonRecord\r\n                            isCenter\r\n                            buttons={[\r\n                                {\r\n                                    label: 'Preview',\r\n                                    isEnable: originNode != null,\r\n                                    callback: () => {\r\n                                        store.system.dialog = (\r\n                                            <LogicPreviewFrame.Component\r\n                                                node={originNode as TreeUtil.ElementNode}\r\n                                                rootData={rootData}\r\n                                            />\r\n                                        );\r\n                                        setStore({ ...store });\r\n                                    }\r\n                                }\r\n                            ]}\r\n                        />\r\n                    </_TreeHeadHalf>\r\n                    <_TreeHeadHalf>\r\n                        <FormUtil.ButtonRecord\r\n                            isCenter\r\n                            buttons={[\r\n                                {\r\n                                    label: 'Save',\r\n                                    callback: saveFile\r\n                                },\r\n                                {\r\n                                    label: 'Load',\r\n                                    callback: loadFile\r\n                                }\r\n                            ]}\r\n                        />\r\n                    </_TreeHeadHalf>\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return FactoryUtil.getNodeJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={isModify}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <_DetailDiv>\r\n                    <_DetailHeader>\r\n                        <_DetailHeaderLabel>{FactoryUtil.getTypeName(focusNode)}</_DetailHeaderLabel>\r\n                    </_DetailHeader>\r\n                    <FactoryTreeContext.Provider value={{\r\n                        rootData,\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        isModify,\r\n                        setModify,\r\n                        // treeDisable,\r\n                        setRootData,\r\n                        // setTreeDisable\r\n                    }}>\r\n                        <_DetailMainDiv>{FactoryUtil.getDetailComponent(focusNode)}</_DetailMainDiv>\r\n                    </FactoryTreeContext.Provider>\r\n                </_DetailDiv>\r\n            </_PropsDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default FactoryTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #6c8186;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d87b;\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _TreeHeadHalf = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    background-color: #7fbdb47a;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #9fa9b6;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _DetailDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\nconst _DetailHeader = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #b4b29e; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _DetailHeaderLabel = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #a10000;\r\n    /* background-color: #bbd0d3; */\r\n    border: solid 1px #a10000;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 20px);\r\n    margin: 5px 0 0 10px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DetailMainDiv = styled.div`\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 44px);\r\n    margin: 0 0 0 4px;\r\n    background-color: #cfd3cc;\r\n    border: solid 1px #0026a1;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","\r\nconst ManageTab = () => {\r\n\r\n    return (<></>);\r\n}\r\n\r\nexport default ManageTab;","import { type } from \"os\";\r\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport Common from \"../common\";\r\n\r\nnamespace TimelineUtil {\r\n\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'bv'\r\n        ;\r\n\r\n    export type WrapNode = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        // caches: Common.Cache[];\r\n    }\r\n\r\n    export const getInitialData = (): WrapNode => {\r\n        return {\r\n            type: 'root',\r\n            data: {}\r\n        }\r\n    }\r\n\r\n    export const getNodeJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapNode;\r\n        switch(wrap.type) {\r\n            case 'root': {\r\n                return <_Wrap>Timeline</_Wrap>;\r\n            }\r\n        }\r\n        return <_Wrap>XXXXX</_Wrap>;\r\n    }\r\n}\r\n\r\nexport default TimelineUtil;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #37a2bd;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n`;","import { type } from \"os\";\r\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport Common from \"../common\";\r\nimport TimelineUtil from \"./timelineUtil\";\r\n\r\nconst TimelineTab = () => {\r\n\r\n\r\n    const [rootData, setRootData] = useState(TimelineUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    const [treeDisable, setTreeDisable] = useState(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n\r\n    const getChildnre = (wrapNode: TimelineUtil.WrapNode): TreeUtil.DataNode[] => {\r\n        const list: TreeUtil.DataNode[] = [];\r\n        const add = (type: TimelineUtil.NodeType, nodeData: any) => {\r\n\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as TimelineUtil.NodeRoot;\r\n                // add()\r\n            } break;\r\n        }\r\n        return list;\r\n    }\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: getChildnre(rootData)\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    {/* <HierarchyNavi cur={focusNode}/> */}\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            // setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return TimelineUtil.getNodeJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={false}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                {/* <ThemaTreeContext.Provider value={{\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        setBackingWnd,\r\n                        dispatcher,\r\n                        treeDisable,\r\n                        setThamaData,\r\n                        setTreeDisable\r\n                    }}>\r\n                        <TabbedPane\r\n                            tabElements={[\r\n                                {\r\n                                    name: 'base', disable: true, cont: tabInner(0, <BaseFormTab\r\n                                        themaList={store.systemState.themaList}\r\n                                        addThema={(thema: ThemaUtil.LevelBase) => {\r\n                                            const themaList = store.systemState.themaList;\r\n                                            themaList.push(JSON.parse(JSON.stringify(thema)));\r\n                                            dispatcher.system.setState({ ...store.systemState, themaList });\r\n                                        }}\r\n                                    />)\r\n                                },\r\n                                { name: 'Method', disable: true, cont: tabInner(1, <MethFormTab />) },\r\n                                { name: 'Sustain', disable: true, cont: tabInner(2, <SustFormTab />) },\r\n                                { name: 'Pattern', disable: true, cont: tabInner(3, <PattFormTab />) },\r\n                                { name: 'Attribute', disable: true, cont: tabInner(4, <AttrFormTab isPattern={focusNode?.depth === 4} />) },\r\n                                { name: 'Root', disable: true, cont: tabInner(5, <RootFormTab />) },\r\n                                { name: 'voicing', disable: true, cont: tabInner(6, <VoicFormTab isPattern={focusNode?.depth === 6} />) },\r\n                            ]}\r\n                            tabRecordNum={2}\r\n                            activeNo={activeNo}\r\n                            selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n                        />\r\n                    </ThemaTreeContext.Provider> */}\r\n            </_PropsDiv>\r\n            {/* <_Blind isVisible={isBackingWnd}>\r\n                    <_Contents>{!isBackingWnd ? <></> : <BackingEditorFrame />}</_Contents>\r\n                </_Blind> */}\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default TimelineTab;\r\n\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c3d8dd;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #532fc0; */\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n    padding: 6px 6px 6px 0;\r\n`;\r\n\r\nconst _TabContWrap = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 630px;\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    /* opacity: 0.9; */\r\n    overflow: hidden;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport FactoryTab from \"./factory/factoryTab\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport PreviewTab from \"./manage/manageTab\";\r\nimport TimelineTab from \"./timeline/timelineTab\";\r\nimport Timeline from \"./timeline/timelineTab\";\r\n\r\n\r\nconst CreateChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', enable: false, cont: <ManageTab /> },\r\n                    { name: 'Launcher', enable: false, cont: <TimelineTab /> },\r\n                    { name: 'Logic', enable: true, cont: <FactoryTab /> }\r\n                ]}\r\n                activeNo={2}\r\n            // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CreateChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { Redirect } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst DirectView = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const conteseq = DataUtil.getDecryptionedScoreSeq(props.hashKey);\r\n\r\n    // const setScoreData = (owner: string, dispnam: string, data: ScoreData) => {\r\n    //     store.scoreState.focusIndex = 2;\r\n    //     store.scoreState.distIndex = store.scoreState.focusIndex;\r\n    //     dispatcher.score.setScoreState({ ...store.scoreState });\r\n    //     // dispatcher.score.setScoreTabIndex(1);\r\n    //     dispatcher.score.setScoreData(data);\r\n    //     // キャッシュの更新\r\n    //     store.scoreData = data;\r\n    //     CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    //     store.systemState.mainChannelIndex = 5;\r\n    //     store.systemState.scoreTabIndex = 0;\r\n    //     store.systemState.directScore = {\r\n    //         owner, name: dispnam\r\n    //     };\r\n    //     dispatcher.system.setState(store.systemState);\r\n    // };\r\n\r\n    useEffect(() => {\r\n        // DataUtil.findScore(conteseq).then(resList => {\r\n        //     if (resList.length > 0) {\r\n        //         const source = resList[0]['data'];\r\n        //         const owner = resList[0]['owner'];\r\n        //         const dispnam = resList[0]['dispnam'];\r\n        //         const text = DataUtil.unZip(source);\r\n        //         setScoreData(owner, dispnam, JSON.parse(text));\r\n        //     }\r\n        // });\r\n    }, []);\r\n    // if (store.systemState.directScore == null) {\r\n    //     return <></>;\r\n    // } else {\r\n    //     return <Redirect to=\"/\" />;\r\n    //     // return <MainFrame />;\r\n    // }\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nexport default DirectView;","import { Redirect } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst DirectLogin = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        const seq = DataUtil.getDecryptionedUserSeq(props.hashKey);\r\n        console.log(seq);\r\n        DataUtil.findUserInfoFromSeq(seq).then(resList => {\r\n            console.log(resList);\r\n            if (resList.length > 0) {\r\n                const loginProps = resList[0];\r\n                // store.userEnv.login = loginProps;\r\n                // dispatcher.system.setUserEnv(store.userEnv);\r\n            }\r\n        });\r\n    }, []);\r\n    // if (store.userEnv.login == null) {\r\n    //     return <></>;\r\n    // } else {\r\n    //     return <Redirect to=\"/\" />;\r\n    //     // return <MainFrame />;\r\n    // }\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nexport default DirectLogin;","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\ntype NotePorp = {\r\n    version: string;\r\n    date: string;\r\n    note: string;\r\n}\r\n\r\nconst ReleaseNote = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\r\n    useEffect(() => {\r\n        fetch('assets/release_note.json')\r\n            .then(response => response.json()) // (2) レスポンスデータを取得\r\n            .then(json => { // (3)レスポンスデータを処理\r\n                const list = json as NotePorp[];\r\n\r\n                setJsx(list.map((item, i) => {\r\n                    const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n                    return (\r\n                        <_Item key={i}>\r\n                            <_Header>v{item.version} ({item.date})</_Header>\r\n                            <_Detail>{record}</_Detail>\r\n                        </_Item>\r\n                    );\r\n                }));\r\n            });\r\n    }, []);\r\n\r\n    return (<_ListFrame>{jsx}</_ListFrame>);\r\n}\r\n\r\nexport default ReleaseNote;\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #bfcace;\r\n    border: 1px solid #9b9b9b;\r\n    border-radius: 6px;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    font-weight: 600;\r\n    /* background-color: #8bdbf8; */\r\n    color: #494975;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    /* background-color: #dafce4; */\r\n    color: #754949;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ReleaseNote from \"./releaseNote\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [userCount, setUserCount] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <ReleaseNote />\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{0} arts have been published.</_MessageRecord>\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeChannel;\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nexport const findAllScore = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT seq, (select id from user_tbl where seq = score.user_seq) as owner, dispnam, lastmod\r\n        FROM scoretbl score\r\n        WHERE share <> 'url'\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ListInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${HOME_USER_DIV_HEIGHT}px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #1c2c95;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\n\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 30px;\r\n    user-select: text;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ItemnForm = styled.input`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #1a1a1a;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #e9e9e9;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\r\n    border: 1px solid #1a2b3f;\r\n    color: #1a2b3f;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 42px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\nconst _CloudItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    /* height: 60px; */\r\n    border-bottom: 1px solid #888888;\r\n    /* background-color: white; */\r\n    background: linear-gradient(to bottom, transparent, #b6b6b684);\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    }\r\n`;\r\n\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { CgOptions, CgPiano } from 'react-icons/cg';\r\nimport { VscGitPullRequestCreate } from 'react-icons/vsc';\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport CreateChannel from \"../create/createChannel\";\r\nimport DirectView from \"./directView\";\r\nimport DirectLogin from \"./directLogin\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <_Wrap>\r\n                    {/* <DraggableDialog /> */}\r\n                    {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n                    <ChannelPane\r\n                        tabElements={[\r\n                            { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <HomeChannel /> },\r\n                            { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <CreateChannel/> },\r\n                        ]}\r\n                        activeNo={0}\r\n                    // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n                    />\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/test\" exact >\r\n                <_Wrap>\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/preview\" exact >\r\n                <DirectView hashKey={str} />\r\n            </Route>\r\n            <Route path=\"/user\" exact >\r\n                <DirectLogin hashKey={str} />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <span>L</span>iCreSia\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2022 Licresia All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#868686, #ffffff);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #636363;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport LoginFrame from \"../dialog/login/loginFrame\";\r\nimport AccountFrame from \"../dialog/accountFrame\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const user = store.system.user;\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (user != null) {\r\n            setUserId('@' + user.id);\r\n        }\r\n    }, [user]);\r\n\r\n    // const authButtonJsx = loginProps == undefined ? (\r\n    //     <_LoginButton onClick={() => {\r\n    //         store.systemState.dialog = <LoginFrame />;\r\n    //         dispatcher.system.setState(store.systemState);\r\n    //         console.log(window.location.origin);\r\n    //     }}>\r\n    //         <div><ImUser /></div>\r\n    //         Login / Sign up\r\n    //     </_LoginButton>\r\n    // ) : (<>\r\n    //     <_UserName\r\n    //         isEntry={store.userEnv.login != null}\r\n    //         onClick={() => {\r\n    //             dispatcher.system.setDialog(<AccountFrame />);\r\n    //         }}\r\n    //     >{userId}</_UserName>\r\n    //     <_LoginButton onClick={() => {\r\n    //         store.userEnv.login = null;\r\n    //         dispatcher.system.setUserEnv(store.userEnv);\r\n\r\n    //         dispatcher.system.setDialog(<ConfirmDialog.Component\r\n    //             message={'Logout.\\nSee you next time!'}\r\n    //         />);\r\n    //     }}>\r\n    //         <div><ImUser /></div>\r\n    //         Logout\r\n    //     </_LoginButton>\r\n    // </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>Partice</_ACCENT>&nbsp;<_NORMAL>Simulator</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                {/* {authButtonJsx} */}\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    font-style: italic;\r\n    text-shadow: 1px 2px 3px #dbdbdb6a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #9fc2d1;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #ececec;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #003a86;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #96000057;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    setStore: React.Dispatch<React.SetStateAction<Store>>;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, setStore] = useState(initialStore);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, setStore }}>\r\n            <>\r\n                {!store.system.isSplash ? <></> :\r\n                    <Splash\r\n                        remove={() => {\r\n                            setStore({...store, system: {\r\n                                ...store.system, isSplash: false\r\n                            }});\r\n                        }}\r\n                    />}\r\n                <_Wrap>\r\n                    <GloballDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #364887;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst REACT_APP_AUTH0_DOMAIN = 'dev-a0p0m4lr.us.auth0.com';\nconst REACT_APP_AUTH0_CLIENT_ID = 'ABaWpYVBZwTr3tkyxhq1kWh2YwT4epew';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}