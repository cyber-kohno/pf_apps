{"version":3,"sources":["system/utils/dataUtil.tsx","system/redux/store/store.tsx","system/utils/systemConst.tsx","system/contents/dialog/globalDialog.tsx","system/base/design/styles.tsx","system/base/components/tab/channelPane.tsx","system/base/components/tab/tabbedPane.tsx","system/utils/form/formUtiil.tsx","system/utils/treeUtil.tsx","system/contents/dialog/confirmDialog.tsx","system/utils/form/validateUtil.tsx","system/utils/canvasUtil.tsx","system/contents/graphic/particle.tsx","system/contents/graphic/drawUtil.tsx","system/contents/graphic/vectorUtil.tsx","system/contents/create/preview/previewUtil.tsx","system/contents/create/preview/logicPreviewFrame.tsx","system/contents/create/factory/detail/factDetArgumentMng.tsx","system/contents/create/factory/detail/common/modifyOperations.tsx","system/contents/create/factory/detail/factDetArgumentItem.tsx","system/contents/create/factory/detail/factDetInheritMng.tsx","system/contents/create/factory/detail/factDetExtendMng.tsx","system/contents/create/factory/detail/factDetOriginMng.tsx","system/contents/create/factory/detail/factDetLogicItem.tsx","system/contents/create/factory/detail/factOprParam.tsx","system/contents/create/factory/detail/factDetBehiviorMng.tsx","system/contents/create/factory/detail/factDetVisualMng.tsx","system/contents/create/factory/detail/factDetInheritConnMng.tsx","system/contents/create/factory/detail/factDetEffectMng.tsx","system/contents/create/factory/detail/factDetModulateMng.tsx","system/contents/create/factory/detail/factDetInheritConnector.tsx","system/contents/create/factory/detail/factDetSendManager.tsx","system/contents/create/factory/factoryUtil.tsx","system/contents/create/factory/factoryTab.tsx","system/contents/create/manage/manageTab.tsx","system/contents/create/timeline/timelineUtil.tsx","system/contents/create/timeline/timelineTab.tsx","system/contents/create/createChannel.tsx","system/contents/entry/directView.tsx","system/contents/entry/directLogin.tsx","system/contents/home/releaseNote.tsx","system/contents/home/homeChannel.tsx","system/contents/entry/mainFrame.tsx","system/contents/entry/splash.tsx","system/contents/entry/totalHeader.tsx","system/contents/entry/systemEntry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DB_SERVER_DOMAIN","APP_SERVER_DOMAIN","getUserHashBuilder","Hashids","getScoreHashBuilder","seq","hash","encode","Base64","hashedSeq","hashids","Number","decode","getHashedFromScoreSeq","sendQueryRequestToAPI","scoreSeq","hashedKey","json","fetch","mode","method","headers","Accept","body","JSON","stringify","createSendMailRequestInit","queryType","sql","createQueryRequestInit","findUserInfoList","a","response","results","map","res","id","email","password","nextSeq","DataUtil","userSeq","val","content","encodeURIComponent","zlib","gzipSync","toString","buffer","Buffer","from","result","unzipSync","decodeURIComponent","date","year_str","getFullYear","month_str","getMonth","day_str","getDate","hour_str","getHours","minute_str","getMinutes","second_str","getSeconds","format_str","replace","initialStore","system","isSplash","user","dialog","SystemConst","GloballDialog","useContext","GlobalContext","store","setStore","_Blind","onClick","styled","div","FONT_SMALL","FONT_MIDIUM","CSS_LABEL","css","Styles","_CSS_LABEL_MIDIUM","ChannelPane","props","useState","activeNo","setActiveNo","useEffect","_LabelList","tabElements","tab","index","name","icon","isActive","isEnable","selectTab","undefined","selectTabIndex","_ContList","cont","ChannelLabel","_Item","_Icon","_Label","ChannelContents","_Contents","CSS_BUTTON_DISABLE","TabbedPane","tabRecordNum","enable","TabLabel","_TabLabel","TabContents","FormUtil","checkables","forEach","checkable","errors","length","type","isPassword","validaters","validates","dependency","dep","value","getErrors","validater","checker","push","errorType","setCheckable","isVisible","textAlign","isCenter","marginTop","titleLabel","_ItemnLabel","_ItemnInputBak","hasTitle","width","placeholder","onChange","e","target","readOnly","isReadOnly","jsx","labelWidth","isNumber","concat","_ItemnInput","marginLeft","headBlank","list","slice","unshift","labelText","_ItemCombobox","item","i","_Option","disabled","isDisabled","buttons","button","_Button","callback","label","_Message","message","isLink","clickAction","_BorderText","title","_BorderPanel","innerJsx","height","_InfoDiv","color","textRecords","text","_Switch","isUse","_Record","CSS_LABEL_MIDIUM","input","select","option","CSS_LABEL_SMALL","TreeUtil","data","parent","depth","isOpen","children","node","parentNode","isDisable","focusNode","buildElementNodeFromData","build","dataNode","child","rootDataNode","rootElementNode","setRootElementNode","jsxList","useMemo","buildJsxRecords","element","spaceList","isCurrent","isRelation","tempNode","find","isRelationNode","space","lines","_LineFull","_LineTop","_LineRight","_Space","_Branch","_Jsx","clickEvent","onDoubleClick","getLabelJsx","invalidate","_Wrap","ConfirmDialog","_Frame","_Main","_Inner","split","msg","Message","ButtonRecord","str","min","max","checkIncludesChars","ch","charAt","indexOf","isNaN","conditions","ValidateUtil","createURL","draw","canvas","document","createElement","ctx","getContext","toDataURL","CanvasUtil","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","font","fillStyle","fillText","adjust","measureText","save","WIDTH","AUTH_TEXT_WIDTH","SIZE","AUTH_TEXT_HEIGHT","rotate","Math","PI","char","fontRand","random","alphaRand","Particle","owner","pos","prevPos","vec","frame","limit","isLive","drawer","extend","update","x","xy","y","this","param","radius","self","g","createRadialGradient","grads","rgba","convertRgbaFromColorCode","r","b","offset","convertColorCodeFromRgba","grad","addColorStop","globalAlpha","disappearStartRate","start","floor","beginPath","arc","fill","code","parseInt","substring","rate","DrawUtil","VectorUtil","rad","len","syncFromXY","sqrt","atan2","syncFromRad","cos","sin","SCREEN_WIDTH","SCREEN_HEIGHT","searchElement","rootData","args","createParticleRec","cur","fields","valueMapList","ConstantValueMap","visualParams","mngs","params","behaviorParams","getVisualParam","convertFormulaToValue","getBehaviorParam","Vector","extendList","extendMng","connectMng","connects","connect","connector","getCondition","condition","logicItem","connectType","wrap","inheritMng","defs","def","searchDependLogic","depend","loopCnt","iterateItem","iterateValueMap","sendValueMapList","Instance","effectMng","modulateMng","getModulateParam","decayLimit","decayRate","gravity","modulate","createGradDrawer","warpList","formula","values","v","valueMap","m","formulaStr","varCnt","formulaItems","console","log","ret","Function","PreviewUtil","LogicPreviewFrame","ref","useRef","formList","setFormList","sceens","setSceens","frameCnt","setFrameCnt","tabIndex","setTabIndex","setCur","isBuild","setBuild","isPlay","setPlay","setTimeout","argumentList","argWrap","arg","getArgumentList","formListJsx","form","FormRecord","TextField","checkRequired","buildOriginProps","par","splice","isInputOK","buildTabJsx","_FormDiv","previewTabJsx","_CanvasDiv","_IMG","src","_ProgressDiv","clickX","pageX","clientRect","current","getBoundingClientRect","left","window","pageXOffset","_ProgressVal","onKeyDown","key","img","FactDetArgumentMng","FactoryTreeContext","setFocusNode","BorderPanel","newWrap","newNode","createNode","ModifyOperations","isModify","setModify","removeSelf","isComplete","isCompleteCheck","checkableFields","listName","mappingForm","firstRegist","modifyRegist","ListName","FactDetArgumentItem","setName","defaultValue","setDefaultValue","argType","setArgType","isOrigin","reservedList","valueType","defVal","Component","checkStringLength","FactoryUtil","checkFieldName","includes","Combobox","ArgTypes","checkNumber","FactDetInheritMng","itemWrap","FactDetExtendMng","el","hasEffectsNode","hasModulateNode","hasInheritNode","Record","Switch","paramWrap","createParamWrap","delIndex","insIndex","FactDetOriginMng","FactDetLogicItem","parentType","isConnect","isInherit","hasArgNode","hasFieldNode","hasExtendNode","getDefaultLogicMngs","mng","FactOprParam","setFormulaItems","varFormList","setVarFormList","inputType","fieldKeyList","isIterate","keys","targetWrap","getTargetWrap","num","addNum","delNum","parenthesisBalance","formJsxList","ParamInputTypes","getValueForm","isLastVar","isFormulaOK","hasFormError","varForm","_Formula","isInvalid","_Var","_Sig","getFormulaJsx","span","FactDetBehiviorMng","isVector","swapPos","FactDetVisualMng","FactDetInheritConnMng","FactDetEffectMng","FactDetModulateMng","FactDetInheritConnector","setCondition","setConnectType","setDepend","hasIterateNode","isCreate","inheritList","setSendParams","sendIndex","sendMng","sendNode","dependItem","getSendParamList","initConnectorNode","inheritNode","isChange","ConditionTypes","ConnectTypes","loopCountWrap","dependLogic","inherit","parse","getChildrenElementNode","FactDetSendManager","sendParamList","curSize","curParamList","paramDataList","createParamWrapList","COLOR_METHOD","createVisualParams","createBehaviorParams","seedMng","COLOR_MNG","COLOR_LIST","COLOR_ITEM","isFocus","_Category","backgroundColor","_EditableValue","detailJsx","_Field","_Signature","_Detail","_ValueType","wrapNode","get","elementNode","getChildrenDataNode","createContext","FactoryTab","getInitialData","setRootData","setInvalidate","fileHandle","setFileHandle","originNode","getOrigin","openPreviewDialog","n","_TreeDiv","_TreeHead","_TreeHeadHalf","plainData","createWritable","writable","gZip","write","close","getFile","showSaveFilePicker","types","accept","then","handle","catch","showOpenFilePicker","file","fileContents","unZip","_TreeBody","Frame","getNodeDisplayJsx","_PropsDiv","_DetailDiv","_DetailHeader","_DetailHeaderLabel","getTypeName","Provider","_DetailMainDiv","getDetailComponent","ManageTab","TimelineUtil","TimelineTab","getChildnre","getNodeJsx","CreateChannel","SCORE_TAB_MARGIN","DirectView","getDecryptionedScoreSeq","hashKey","to","DirectLogin","getDecryptionedUserSeq","findUserInfoFromSeq","resList","ReleaseNote","setJsx","record","note","_Header","version","_ListFrame","HOME_USER_DIV_HEIGHT","HomeChannel","userCount","_Left","_MessageRecord","_Right","MainFrame","basename","process","RouterManage","URLSearchParams","useLocation","search","path","exact","MAIN_FRAME_MARGIN","Splash","isSwitch","setSwitch","timerId","setTimerId","remove","clearTimeout","_Title","_NowLoading","_Copylight","fadeIn","keyframes","TotalHeader","setUserId","_ACCENT","_NORMAL","_Menu","_Language","_MenuItem","isEntry","TOTAL_HEADER_WIDTH","SystemEntry","_MainDiv","App","oncontextmenu","onkeydown","ctrlKey","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9177bfa9.chunk.js","sourcesContent":["import zlib from \"zlib\";\r\n// import { createClient } from \"@supabase/supabase-js\";\r\nimport { Base64 } from \"js-base64\";\r\nimport Hashids from 'hashids';\r\n\r\n// const SUPABASE_URL = \"https://rxjdrbdnfvfdbjvaljsp.supabase.co\";\r\n// const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4amRyYmRuZnZmZGJqdmFsanNwIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTQxNTQwMTgsImV4cCI6MTk2OTczMDAxOH0.Iq-ilL7ayVatIsG--Lq4WpdL_o1h-6RpR4KjWBdr24M';\r\n\r\n// const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);\r\n\r\nnamespace DataUtil {\r\n\r\n    // export const DB_SERVER_DOMAIN = 'http://localhost:5000';\r\n    export const DB_SERVER_DOMAIN = 'https://licresia-demo01-server.glitch.me';\r\n    // export const DB_SERVER_DOMAIN = 'https://licresia-server.glitch.me';\r\n\r\n    // export const APP_SERVER_DOMAIN = 'http://localhost:4000';\r\n    // export const APP_SERVER_DOMAIN = 'https://cyber-kohno.github.io/licresia_demo_app';\r\n    export const APP_SERVER_DOMAIN = 'https://demo-app.licresia.com';\r\n\r\n    // const fetchData = async () => {\r\n    //     try {\r\n    //         // sampleテーブルから全カラムのデータをid順に取得\r\n    //         // dataに入る型はそのままだとany[]となるため.from<T>で指定\r\n    //         const { data, error } = await supabase.from<Table>('test').select().order('data');\r\n\r\n    //         if (error) {\r\n    //             throw error;\r\n    //         }\r\n    //         if (data) {\r\n    //             console.log(data);\r\n    //         }\r\n    //     } catch (error: any) {\r\n    //         alert(error.message);\r\n    //     } finally {\r\n\r\n    //     }\r\n    // };\r\n\r\n    const getUserHashBuilder = () => {\r\n        return new Hashids('licresia-demo-user', 8);\r\n    }\r\n\r\n    export const getHashedFromUserSeq = (seq: number) => {\r\n        const hashids = getUserHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedUserSeq = (hashedSeq: string) => {\r\n        const hashids = getUserHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    const getScoreHashBuilder = () => {\r\n        return new Hashids('licresia-demo', 8);\r\n    }\r\n\r\n    export const getHashedFromScoreSeq = (seq: number) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const hash = hashids.encode(seq);\r\n        const hashedKey = Base64.encode(hash, true);\r\n        return hashedKey;\r\n    }\r\n\r\n    export const getDecryptionedScoreSeq = (hashedSeq: string) => {\r\n        const hashids = getScoreHashBuilder();\r\n        const decryptioned = Number(hashids.decode(Base64.decode(hashedSeq)));\r\n        return decryptioned;\r\n    }\r\n\r\n    export const getPreviewURL = (scoreSeq: number) => {\r\n        const hashedKey = getHashedFromScoreSeq(scoreSeq);\r\n        const url = `${APP_SERVER_DOMAIN}/#/preview?v=${hashedKey}`;\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * クエリリクエストを生成する\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    const createQueryRequestInit = (sql: string): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ sql })\r\n        }\r\n    }\r\n\r\n    export type SendMailParam = {\r\n        from: string,\r\n        to: string,\r\n        subject: string,\r\n        text: string\r\n    }\r\n\r\n    const createSendMailRequestInit = (json: SendMailParam): RequestInit => {\r\n        return {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(json)\r\n        }\r\n    }\r\n\r\n    export const sendQueryRequestToMailAPI = (json: SendMailParam): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/mail',\r\n            createSendMailRequestInit(json)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * select/updateを指定してSQLを実行する。<br>\r\n     * selectの場合、結果をjsonで返す。\r\n     * @param queryType\r\n     * @param sql \r\n     * @returns \r\n     */\r\n    export const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n        return fetch(DB_SERVER_DOMAIN + '/' + queryType,\r\n            createQueryRequestInit(sql)\r\n        );\r\n    }\r\n\r\n    export const findUserInfoList = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT id, email FROM user_tbl`);\r\n        const results = await response.json();\r\n        return results as { id: string, email: string}[];\r\n    };\r\n\r\n    export const findUserIdList = async () => {\r\n        const results = await findUserInfoList();\r\n        return (results as { id: string}[]).map(res => res.id);\r\n    };\r\n\r\n    export const findUserInfoFromEmail = async (email: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id FROM user_tbl WHERE email = '${email}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string }[];\r\n    };\r\n\r\n    export const findUserInfoFromSeq = async (seq: number) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE seq = ${seq}`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const findUserInfoLogin = async (id: string, password: string) => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq, id, password, email FROM user_tbl WHERE id = '${id}' and password = '${password}'`);\r\n        const results = await response.json();\r\n        return results as { seq: number, id: string, password: string, email: string }[];\r\n    };\r\n\r\n    export const getNextUserSeq = async () => {\r\n        const response = await sendQueryRequestToAPI('select', `SELECT seq FROM sqlite_sequence WHERE name = 'user_tbl'`);\r\n        const results = await response.json();\r\n        const nextSeq = (results[0]['seq'] as number) + 1;\r\n        DataUtil.sendQueryRequestToAPI('update', `update sqlite_sequence set seq = seq + 1 where name='user_tbl'`);\r\n\r\n        return nextSeq;\r\n    };\r\n\r\n    export const findUserScoreList = async (userSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT seq, dispnam, share FROM scoretbl WHERE user_seq = ${userSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    export const findScore = async (scoreSeq: number) => {\r\n        const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT (select id from user_tbl where seq = score.user_seq) as owner, dispnam, data FROM scoretbl score WHERE seq = ${scoreSeq}`);\r\n        const results = await response.json();\r\n        return results as any[];\r\n    };\r\n\r\n    /**\r\n     * 文字列を圧縮する\r\n     * @param val 圧縮前の文字列\r\n     * @returns 圧縮後の文字列\r\n     */\r\n    export const gZip = (val: string) => {\r\n        // エンコード\r\n        const content = encodeURIComponent(val);\r\n        // 圧縮\r\n        const result = zlib.gzipSync(content);\r\n        // Buffer => base64変換\r\n        const value = result.toString('base64');\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * 圧縮された文字列を複号する\r\n     * @param val 圧縮された文字列\r\n     * @returns 複号後の文字列\r\n     */\r\n    export const unZip = (val: string) => {\r\n        // base64 => Bufferに変換\r\n        const buffer = Buffer.from(val, 'base64')\r\n        // 復号化\r\n        const result = zlib.unzipSync(buffer)\r\n        // デコード\r\n        const str = decodeURIComponent(result.toString())\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Date型の日時を文字列に変換する\r\n     * @param date Date型の日時\r\n     * @returns 文字列の日時\r\n     */\r\n    export const getStringFromDate = (date: Date) => {\r\n\r\n        const year_str = date.getFullYear().toString();\r\n        //月だけ+1すること\r\n        const month_str = (1 + date.getMonth()).toString();\r\n        const day_str = date.getDate().toString();\r\n        const hour_str = date.getHours().toString();\r\n        const minute_str = date.getMinutes().toString();\r\n        const second_str = date.getSeconds().toString();\r\n\r\n        let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n        format_str = format_str.replace(/YYYY/g, year_str);\r\n        format_str = format_str.replace(/MM/g, month_str);\r\n        format_str = format_str.replace(/DD/g, day_str);\r\n        format_str = format_str.replace(/hh/g, hour_str);\r\n        format_str = format_str.replace(/mm/g, minute_str);\r\n        format_str = format_str.replace(/ss/g, second_str);\r\n\r\n        return format_str;\r\n    };\r\n}\r\n\r\nexport default DataUtil;","import StoreSystem from \"./storeSystem\";\r\n\r\n/**\r\n * システムで使用するステート群\r\n */\r\nexport type Store = {\r\n    system: StoreSystem.Param;\r\n}\r\n\r\nexport const initialStore: Store = {\r\n    system: {\r\n        isSplash: false,\r\n        user: null,\r\n        dialog: null,\r\n    },\r\n}","\r\nnamespace SystemConst {\r\n    export const AUTH_TEXT_WIDTH = 350;\r\n    export const AUTH_TEXT_HEIGHT = 70;\r\n}\r\n\r\nexport default SystemConst;\r\n\r\nexport const APP_MIN_WIDTH = 800;\r\nexport const APP_MIN_HEIGHT = 600;\r\n\r\nexport const TOTAL_HEADER_WIDTH = 44;\r\n\r\nexport const MAIN_FRAME_MARGIN = 15;\r\nexport const SCORE_TAB_MARGIN = 8;\r\n\r\nexport const BUTTON_SMALL_HEIGHT = 18;\r\nexport const BUTTON_MIDIUM_HEIGHT = 28;\r\nexport const BUTTON_LARGE_HEIGHT = 34;\r\n\r\n\r\n// ホームチャンネル\r\nexport const HOME_USER_DIV_HEIGHT = 400;\r\n\r\n// ハーモナイズタブ\r\n\r\nexport const FIRST_CHORD_INDEX = 3;\r\n\r\nexport const HARMONIZE_RIGHT_WIDTH = 220;\r\nexport const HARMONIZE_HEAD_WIDTH = 35;\r\nexport const HARMONIZE_FOOT_WIDTH = 80;\r\nexport const HARMONIZE_STRUCT_WIDTH = 380;\r\nexport const HARMONIZE_SECTIONS_WIDTH = 110;\r\n\r\nexport const ELEMENT_HEIGHT = 134;\r\nexport const ELEMENT_HEAD_WIDTH = 15;\r\nexport const ELEMENT_FOOT_WIDTH = 60;\r\nexport const ELEMENT_SIDE_PADDING = 8;\r\nexport const ELEMENT_NOTE_PADDING_LEN = 10;\r\nexport const ELEMENT_NOTE_PADDING_SID = 30;\r\nexport const ELEMENT_POS_INFO_WIDTH = 50;\r\nexport const ELEMENT_OPERATIONS_WIDTH = 20;\r\n\r\nexport const TIMELINE_BEAT_WIDTH = 80;\r\n\r\n\r\nexport const TUNE_HEADER_WIDTH = 80;\r\nexport const TUNE_TIMELINE_WIDTH = 70;\r\nexport const TUNE_PITCH_WIDTH = 100;\r\nexport const TUNE_PITCH_HEIGHT = 30;\r\n\r\n\r\n\r\nexport const PATTERN_OPERATION_HEIGHT = 30;\r\nexport const PATTERN_HEADER_HEIGHT = 50;\r\nexport const PATTERN_BODY_HEIGHT = 240;\r\nexport const PATTERN_FOOTER_HEIGHT = 50;\r\nexport const PATTERN_FRAME_HEIGHT = PATTERN_OPERATION_HEIGHT + PATTERN_HEADER_HEIGHT + PATTERN_BODY_HEIGHT + PATTERN_FOOTER_HEIGHT;\r\n\r\n\r\nexport const NOTES_1BAR_WIDTH = 480;","import { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\nconst GloballDialog = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const dialog = store.system.dialog;\r\n\r\n    if (dialog == null) return <></>;\r\n    return (<>\r\n        <_Blind onClick={() => {\r\n            store.system.dialog = null;\r\n            setStore({...store});\r\n        }} />\r\n        {dialog}\r\n    </>);\r\n}\r\n\r\nexport default GloballDialog;\r\n\r\nconst _Blind = styled.div<{\r\n}>`\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000329a2;\r\n    z-index: 10;\r\n    text-align: center;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nnamespace Styles {\r\n\r\n    export const FONT_SMALL = 16;\r\n    export const FONT_MIDIUM = 22;\r\n    export const FONT_LARGE = 32;\r\n\r\n    export const CSS_LABEL = css`\r\n        display: inline-block;\r\n        font-weight: 600;\r\n        text-align: center;\r\n        color: black;\r\n        box-sizing: border-box;\r\n    `;\r\n\r\n    export const CSS_LABEL_SMALL = css`\r\n        ${CSS_LABEL}\r\n        height: 22px;\r\n        font-size: ${FONT_SMALL}px;\r\n        line-height: 18px;\r\n    `;\r\n\r\n    export const CSS_LABEL_MIDIUM = css`\r\n        ${CSS_LABEL}\r\n        height: 30px;\r\n        font-size: ${FONT_MIDIUM}px;\r\n        line-height: 26px;\r\n    `;\r\n\r\n    export const CSS_BUTTON_DISABLE = css`\r\n        pointer-events: none;\r\n        opacity: 0.5;\r\n    `;\r\n}\r\nexport default Styles;\r\n\r\nexport const _WrapperFrame = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const _Object = styled.div`\r\n    display: inline-block;\r\n`;\r\n\r\nexport const _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const _CSS_LABEL_SMALL = css`\r\n    display: inline-block;\r\n    height: 22px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    line-height: 18px;\r\n`;\r\n\r\n\r\nexport const _CSS_LABEL_MIDIUM = css`\r\n    display: inline-block;\r\n    height: 30px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    color: black;\r\n    line-height: 24px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const _CSS_DISABLE = css`\r\n    opacity: 0.6;\r\n    pointer-events: none;\r\n`;\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../design/styles\";\r\n\r\ntype ChannelPaneProps = {\r\n    activeNo: number;\r\n    tabElements: ChannelElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype ChannelElements = {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const ChannelPane = (props: ChannelPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelLabel\r\n                            key={index} name={tab.name} icon={tab.icon} isActive={index == activeNo} isEnable={tab.isEnable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList>\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <ChannelContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ChannelLabel = (props: {\r\n    name: string;\r\n    icon: JSX.Element;\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_Item\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}\r\n        >\r\n            <_Icon>{props.icon}</_Icon>\r\n            <_Label>{props.name}</_Label>\r\n        </_Item>\r\n    );\r\n}\r\n\r\nconst ChannelContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    margin-right: 5px;\r\n    height: 100%;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    border-radius: 10px 0 0 10px;\r\n    vertical-align: top;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\nconst _ContList = styled.div`\r\n    display: inline-block;\r\n    background-color: #b9b9b9;\r\n    border: 1px solid #707070;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 105px);\r\n    height: 100%;\r\n    border-radius: 0 6px 6px 0;\r\n    box-shadow: 1px 2px 12px #aaaaaa;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    /* margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px); */\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-color: #ece6e6; */\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _Item = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 90px;\r\n    height: 90px;\r\n    margin: 5px 0 0 5px;\r\n    border-radius: 10px;\r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                background-color: #e4e3e1;\r\n                border: 1px solid #949494\r\n            `;\r\n        } else {\r\n            return css`\r\n                background-color: #d1d1d1;\r\n                opacity: 0.8;\r\n            `;\r\n        }\r\n    }}\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    transition: background-color 500ms;\r\n    & *{\r\n        transition: color 150ms;\r\n    }\r\n    // アクティブじゃない時だけhover要素を付加\r\n    ${props => props.isActive ? '' : css`\r\n        &:hover {\r\n            & *{\r\n                transition: color 150ms;\r\n                /* background-color: #e2d6d6; */\r\n                text-shadow: 1px 2px 22px #f7f7f7ea;\r\n                color: #a7a7a7;\r\n            }\r\n        }\r\n    `}\r\n`;\r\n\r\nconst IconHover = css`\r\n    text-shadow: 1px 2px 22px #f7f7f7cf;\r\n    color: #a3a3a3;\r\n`;\r\n\r\nconst _Icon = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 60px;\r\n    /* background-color: #df828221; */\r\n    font-size: 50px;\r\n    color: #757575;\r\n    text-align: center;\r\n    padding-top: 5px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    /* background-color: #8482df20; */\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #757575;\r\n    text-align: center;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype TabbedPaneProps = {\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n    tabRecordNum?: number;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    enable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nexport const TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex != undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabRecordNum = props.tabRecordNum ?? 1;\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <>\r\n            <_LabelList tabRecordNum={tabRecordNum}>\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isEnable={tab.enable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </_LabelList>\r\n            <_ContList tabRecordNum={tabRecordNum}>\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index === activeNo} />\r\n                    })\r\n                }\r\n            </_ContList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isEnable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    return (\r\n        <_TabLabel\r\n            isEnable={props.isEnable}\r\n            isActive={props.isActive}\r\n            onClick={() => props.selectTab()}>\r\n            {props.name}\r\n        </_TabLabel>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return (\r\n        <_Contents isActive={props.isActive}>\r\n            {props.cont}\r\n        </_Contents>\r\n    );\r\n}\r\n\r\nconst _LabelList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: inline-block;\r\n    height: ${props => 35 * props.tabRecordNum}px;\r\n    text-align: left;\r\n    /* background-color: #ac3b3b; */\r\n    width: 100%;\r\n`;\r\nconst _ContList = styled.div<{\r\n    tabRecordNum: number;\r\n}>`\r\n    display: block;\r\n    background-color: #999999;\r\n    height: calc(100% - ${props => props.tabRecordNum * 35}px);\r\n    border-radius: 0 6px 6px 6px;\r\n    box-shadow: 0 2px 0 0 #000b3a48;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    margin: 3px 0 0 3px;\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px);\r\n    ${props => !props.isActive ? css`display: none;` : css`display: inline-block;`}\r\n`;\r\n\r\nconst _TabLabel = styled.div<{\r\n    isEnable: boolean;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 100px; */\r\n    padding: 0 10px;\r\n    \r\n    ${props => {\r\n        if (props.isActive) {\r\n            return css`\r\n                color: #ebebeb;\r\n                padding: 0 35px;\r\n                background-color: #999999;\r\n                height: 35px;\r\n                font-size: 24px;\r\n                border-radius: 3px 15px 0 0;\r\n                text-shadow: 1px 2px 3px #00000065;\r\n            `;\r\n        } else {\r\n            return css`\r\n                height: 100%;\r\n                color: #555;\r\n                /* background-color: #90909b; */\r\n                background: linear-gradient(to bottom, #999999, #7a7a7a);\r\n                height: 30px;\r\n                font-size: 18px;\r\n                margin-top: 5px;\r\n                border-radius: 3px 10px 0 0;\r\n                ${props.isEnable ? '' : css`\r\n                    pointer-events: none;\r\n                    opacity: 0.7;\r\n                `}\r\n            `;\r\n        }\r\n    }}\r\n    /* opacity: 0.7; */\r\n    user-select: none;\r\n    margin-right: 6px;\r\n    font-weight: 600;\r\n    box-sizing: border-box;\r\n    line-height: 30px;\r\n    vertical-align: bottom;\r\n    transition: padding 100ms;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport ValidateUtil from \"./validateUtil\";\r\nimport { useEffect } from \"react\";\r\n\r\nnamespace FormUtil {\r\n\r\n    export type CheckableValue = {\r\n        value: string;\r\n        errors: ValidateUtil.ErrorType[];\r\n    }\r\n\r\n    export const isCompleteCheck = (checkables: CheckableValue[]) => {\r\n        let result = true;\r\n        checkables.forEach(checkable => {\r\n            if (checkable.errors.length > 0) {\r\n                result = false;\r\n                return 1;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    export const InputTextFormBak = (props: {\r\n        titleLabel?: string;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        isCenter?: boolean;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        marginTop?: number;\r\n        isReadOnly?: boolean;\r\n        marginBottom?: number;\r\n    }) => {\r\n        const type = props.isPassword ?? false ? 'password' : 'text';\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency);\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel>{props.titleLabel}</_ItemnLabel>}\r\n                <_ItemnInputBak\r\n                    type={type}\r\n                    value={props.checkable.value}\r\n                    hasTitle={props.titleLabel != undefined}\r\n                    width={props.width}\r\n                    isCenter={props.isCenter ?? false}\r\n                    placeholder={props.placeholder}\r\n                    onChange={(e) => {\r\n                        const value = e.target.value;\r\n                        props.checkable.value = value;\r\n                        props.checkable.errors = getErrors(value);\r\n                        props.setCheckable({ ...props.checkable });\r\n                    }}\r\n                    errorType={errors.length === 0 ? undefined : errors[0]}\r\n                    readOnly={props.isReadOnly}\r\n                />\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n\r\n    export const Record = (props: {\r\n        isEnable?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const FormRecord = (props: {\r\n        titleLabel?: string;\r\n        labelWidth?: number;\r\n        isEnable?: boolean;\r\n        isVisible?: boolean;\r\n        textAlign?: 'left' | 'center' | 'right';\r\n        marginTop?: number;\r\n        jsx: JSX.Element;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={props.isEnable ?? true}\r\n                isVisible={props.isVisible ?? true}\r\n                textAlign={props.textAlign ?? 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                {props.titleLabel == undefined ? <></> : <_ItemnLabel labelWidth={props.labelWidth}>{props.titleLabel}</_ItemnLabel>}\r\n                {props.jsx}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const TextField = (props: {\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnable?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        isPassword?: boolean;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        isNumber?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        let type = props.isPassword ?? false ? 'password' : 'text';\r\n        if (props.isNumber ?? false) {\r\n            type = 'number';\r\n        }\r\n\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n        useEffect(() => {\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        let value = props.checkable.value;\r\n        // if (type === 'number' && value === '') value = '0';\r\n        return (\r\n            <_ItemnInput\r\n                type={type}\r\n                value={value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    let value = e.target.value;\r\n                    // if (type === 'number' && value === '') value = '0';\r\n                    props.checkable.value = type !== 'number' ? value : Number(value).toString();\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n                }}\r\n                errorType={errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            />\r\n        );\r\n    }\r\n\r\n    export type ComboboxItemProps = { value: string, labelText: string, isDisabled?: boolean };\r\n    export const Combobox = (props: {\r\n        list: ComboboxItemProps[];\r\n        headBlank?: boolean;\r\n        checkable: CheckableValue;\r\n        setCheckable: (value: CheckableValue) => void;\r\n        isEnabled?: boolean;\r\n        placeholder?: string;\r\n        width?: number;\r\n        validates?: ValidateUtil.Validate[];\r\n        dependency?: CheckableValue[];\r\n        isReadOnly?: boolean;\r\n        marginLeft?: number;\r\n    }) => {\r\n        const validaters = props.validates ?? [];\r\n        const errors = props.checkable.errors;\r\n        const dependency = (props.dependency ?? []).map(dep => dep.value);\r\n        const headBlank = props.headBlank ?? false;\r\n        const list = props.list.slice();\r\n        if (headBlank) list.unshift({ value: '', labelText: '' });\r\n\r\n        const getErrors = (value: string) => {\r\n            const errors: ValidateUtil.ErrorType[] = [];\r\n            validaters.forEach(validater => {\r\n                if (!validater.checker(value)) {\r\n                    errors.push(validater.errorType);\r\n                }\r\n            });\r\n            return errors;\r\n        }\r\n\r\n        useEffect(() => {\r\n            // console.log('value: ' + props.checkable.value);\r\n            props.checkable.errors = getErrors(props.checkable.value);\r\n            props.setCheckable({ ...props.checkable });\r\n        }, dependency.concat(props.checkable.value));\r\n\r\n        return (\r\n            <_ItemCombobox\r\n                value={props.checkable.value}\r\n                width={props.width ?? 100}\r\n                placeholder={props.placeholder}\r\n                onChange={(e) => {\r\n                    const value = e.target.value;\r\n                    props.checkable.value = value;\r\n                    // props.checkable.errors = getErrors(value);\r\n                    props.setCheckable({ ...props.checkable });\r\n\r\n                }}\r\n                errorType={errors.length === 0 ? undefined : errors[0]}\r\n                readOnly={props.isReadOnly}\r\n                marginLeft={props.marginLeft}\r\n            >{list.map((item, i) => {\r\n                return (\r\n                    <_Option key={i}\r\n                        value={item.value}\r\n                        disabled={item.isDisabled ?? false}\r\n                        isDisabled={item.isDisabled ?? false}\r\n                    >{item.labelText}</_Option>\r\n                );\r\n            })}</_ItemCombobox>\r\n        );\r\n    }\r\n\r\n    export type ButtonProps = {\r\n        label: string;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        callback: () => void;\r\n    }\r\n\r\n    export const ButtonRecord = (props: {\r\n        buttons: ButtonProps[],\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'right'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                {props.buttons.map((button, i) => {\r\n                    return (\r\n                        <_Button\r\n                            key={i}\r\n                            isCenter={props.isCenter ?? false}\r\n                            isEnable={button.isEnable ?? true}\r\n                            width={button.width}\r\n                            onClick={button.callback}\r\n                        >{button.label}</_Button>\r\n                    );\r\n                })}\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const Message = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                <_Message\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const MessageLink = (props: {\r\n        message: string,\r\n        isCenter?: boolean;\r\n        clickAction: () => void;\r\n        marginTop?: number;\r\n        marginBottom?: number;\r\n    }) => {\r\n        return (\r\n            <_Record\r\n                isEnable={true}\r\n                isVisible={true}\r\n                textAlign={(props.isCenter ?? false) ? 'center' : 'left'}\r\n                marginTop={props.marginTop ?? 0}\r\n            >\r\n                <_Message\r\n                    isLink={true}\r\n                    onClick={props.clickAction}\r\n                    isCenter={props.isCenter ?? false}\r\n                >{props.message}</_Message>\r\n            </_Record>\r\n        );\r\n    }\r\n\r\n    export const BorderPanel = (props: {\r\n        title: string;\r\n        isEnable?: boolean;\r\n        innerJsx: JSX.Element;\r\n    }) => {\r\n        // const title = props.title ?? 'title pl';\r\n        return (<>\r\n            <_BorderText>{props.title}</_BorderText>\r\n            <_BorderPanel isEnable={props.isEnable ?? true}>{props.innerJsx}</_BorderPanel>\r\n        </>);\r\n    }\r\n\r\n    export const InfoFrame = (props: {\r\n        height?: number;\r\n        textRecords: string[];\r\n    }) => {\r\n        const height = props.height ?? 70;\r\n        const color = '#1a9900';\r\n        return (<>\r\n            <_InfoDiv height={height} color={color}>\r\n                {props.textRecords.map((text, i) => {\r\n                    return <span key={i}>{text}<br /></span>;\r\n                })}\r\n            </_InfoDiv>\r\n        </>);\r\n    };\r\n\r\n    export const Switch = (props: {\r\n        label: string;\r\n        isUse: boolean;\r\n        isEnable?: boolean;\r\n        width?: number;\r\n        callback: () => void;\r\n    }) => {\r\n        return (\r\n            <_Switch\r\n                isUse={props.isUse}\r\n                isEnable={props.isEnable ?? true}\r\n                width={props.width}\r\n                onClick={props.callback}\r\n            >{props.label}</_Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormUtil;\r\n\r\n\r\nconst _Record = styled.div<{\r\n    isEnable: boolean;\r\n    isVisible: boolean;\r\n    textAlign: 'left' | 'center' | 'right';\r\n    marginTop: number;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    width: 100%;\r\n    height: 40px;\r\n    margin-top: ${props => props.marginTop}px;\r\n    /* background-color: #b3b4c4; */\r\n    /* border: 1px solid #000; */\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    text-align: ${props => props.textAlign};\r\n`;\r\n\r\nconst _ItemnLabel = styled.div<{\r\n    labelWidth?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.labelWidth ?? 140}px;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #c3c3c3fc, #d8d8d8, #c3c3c3fc);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    vertical-align: top;\r\n    margin: 5px 4px 0 4px;\r\n`;\r\n\r\nconst _ItemnInputBak = styled.input<{\r\n    readOnly?: boolean;\r\n    isCenter: boolean;\r\n    hasTitle: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    ${props => !props.hasTitle ? css`\r\n    ` : css`\r\n        width: calc(100% - 152px);\r\n    `}\r\n    ${props => props.width == undefined ? '' : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    margin-top: 2px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    /* ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    } */\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemnInput = styled.input<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _ItemCombobox = styled.select<{\r\n    readOnly?: boolean;\r\n    width?: number;\r\n    errorType?: ValidateUtil.ErrorType;\r\n    marginLeft?: number;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: ${props => props.width}px;\r\n    margin-top: 2px;\r\n    margin-left: ${props => props.marginLeft ?? 0}px;\r\n    font-size: 24px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #3d3d3d;\r\n    border: solid 1px #959595;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: ${props => {\r\n        if (props.errorType == undefined) return '#ececec';\r\n        else {\r\n            switch (props.errorType) {\r\n                case 'required': return '#dbd7b3';\r\n                case 'length': return '#dbb3b3';\r\n                case 'value': return '#b3b3db';\r\n                case 'relation': return '#b3dbb3';\r\n            }\r\n        }\r\n    }};\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.readOnly ? '' : css`\r\n        color: #020075;\r\n        /* border: none; */\r\n        outline: none;\r\n        background-color: transparent;\r\n        pointer-events: none;\r\n    `}\r\n    ::placeholder {\r\n        color: #00000050;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst _Option = styled.option<{\r\n    isDisabled: boolean;\r\n}>`\r\n    ${props => !props.isDisabled ? '' : css`\r\n        color: #0000004b;\r\n    `}\r\n`;\r\n\r\nconst _Message = styled.div<{\r\n    isLink?: boolean;\r\n    isCenter: boolean;\r\n}>`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    margin-top: 2px;\r\n    font-size: ${Styles.FONT_MIDIUM}px;\r\n    line-height: 32px;\r\n    /* font-weight: 600; */\r\n    color: #002c52;\r\n    border-radius: 4px;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    /* background-color: #d37878; */\r\n    text-align: left;\r\n    vertical-align: top;\r\n    user-select: text;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    ${props => !props.isLink ? '' : css`\r\n        color: #0459a3;\r\n        user-select: none;\r\n        text-decoration: underline;\r\n        &:hover {\r\n            color: #68a4d8;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n    isCenter: boolean;\r\n    width?: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background: linear-gradient(to bottom, #cdcdcd, #ebebeb, #cdcdcd);\r\n    border: 1px solid #747474;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    ${props => !props.isCenter ? css`\r\n        margin-left: 4px;\r\n    ` : css``\r\n    }\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n        background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\nconst _Switch = styled.div<{\r\n    isUse: boolean;\r\n    isEnable: boolean;\r\n    width?: number;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    ${props => props.width == undefined ? css`\r\n        padding: 0 40px;\r\n    ` : css`\r\n        width: ${props.width}px;\r\n    `}\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    /* background-color: #a8a8a8; */\r\n    background-color: ${props => !props.isUse ? '#e7e7e779' : '#e4f67e'};\r\n    border: 1px solid #747474;\r\n    color: #515151;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        background-color: ${props => !props.isUse ? '#edefb286' : '#b5be7f'};\r\n    }\r\n`;\r\n\r\nconst _BorderText = styled.div<{\r\n}>`\r\n    ${Styles.CSS_LABEL_SMALL}\r\n    color: #990000;\r\n    /* background-color: #0a0a0a40; */\r\n    font-style: italic;\r\n    margin: 4px 0 0 8px;\r\n`;\r\nconst _BorderPanel = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    margin: 0 0 0 6px;\r\n    padding: 4px;\r\n    width: calc(100% - 12px);\r\n    background-color: #dcddce;\r\n    border: 1px solid #000;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n`;\r\n\r\nconst _InfoDiv = styled.div<{\r\n    height: number;\r\n    color: string;\r\n}>`\r\n    margin: 4px 0 0 0;\r\n    display: inline-block;\r\n    background-color: #e7e5e561;\r\n    border: solid 1px #949494;\r\n    width: 100%;\r\n    height: ${props => props.height}px;\r\n    padding: 2px;\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    color: ${props => props.color};\r\n    overflow-y: auto;\r\n`;","import { useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nnamespace TreeUtil {\r\n\r\n    export type ElementNode = {\r\n        // jsx: JSX.Element;\r\n        isOpen: boolean;\r\n        // index: number;\r\n        depth: number;\r\n        data: any;\r\n        children: ElementNode[];\r\n        parent: null | ElementNode;\r\n    }\r\n\r\n    export type DataNode = {\r\n        data: any;\r\n        children: DataNode[];\r\n    }\r\n\r\n    export const createNode = (data: any, parent: ElementNode): ElementNode => {\r\n        // parent.isOpen = true;\r\n        return {\r\n            data, parent, depth: parent.depth + 1,\r\n            isOpen: false,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    export const getChildIndex = (node: TreeUtil.ElementNode) => {\r\n        const parentNode = node.parent;\r\n        if (parentNode != null) {\r\n            for (let i = 0; i < parentNode.children.length; i++) {\r\n                if (node == parentNode.children[i]) return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    export const Frame = (props: {\r\n        rootDataNode: DataNode;\r\n        clickEvent: (node: ElementNode) => void;\r\n        getLabelJsx: (node: ElementNode) => JSX.Element;\r\n        invalidate: any;\r\n        isDisable?: boolean;\r\n        focusNode?: ElementNode | null;\r\n    }) => {\r\n        const isDisable = props.isDisable ?? false;\r\n        const focusNode = props.focusNode ?? null;\r\n\r\n        /**\r\n         * データを元に再帰的に以下のツリーを構成する。\r\n         * @returns ツリー\r\n         */\r\n        const buildElementNodeFromData = () => {\r\n            const build = (depth: number, dataNode: DataNode, parent: null | ElementNode): ElementNode => {\r\n                const node: ElementNode = {\r\n                    data: dataNode.data,\r\n                    depth: depth,\r\n                    // index: count,\r\n                    isOpen: false,\r\n                    children: [],\r\n                    parent\r\n                };\r\n                node.children = (() => {\r\n                    return dataNode.children.map(child => {\r\n                        return build(depth + 1, child, node);\r\n                    });\r\n                })();\r\n                return node;\r\n            }\r\n            return build(0, props.rootDataNode, null);\r\n        }\r\n        const [rootElementNode, setRootElementNode] = useState<ElementNode>(buildElementNodeFromData());\r\n\r\n        useEffect(() => {\r\n            setRootElementNode(buildElementNodeFromData());\r\n        }, [props.rootDataNode]);\r\n\r\n        useEffect(() => {\r\n            if (focusNode != null && focusNode.parent != null) {\r\n                focusNode.parent.isOpen = true;\r\n            }\r\n        }, [focusNode]);\r\n\r\n        const jsxList = useMemo(() => {\r\n            // console.log(rootElementNode);\r\n            const list: JSX.Element[] = [];\r\n            const buildJsxRecords = (element: ElementNode, spaceList: boolean[]) => {\r\n\r\n                const getSpaces = () => {\r\n                    return spaceList.map((space, i) => {\r\n                        const lines: JSX.Element[] = [];\r\n                        if (spaceList.length - 1 === i || space) lines.push(space ? <_LineFull key={lines.length} /> : <_LineTop key={lines.length} />);\r\n                        if (spaceList.length - 1 === i) lines.push(<_LineRight key={lines.length} />);\r\n                        return <_Space key={i}>{lines}</_Space>;\r\n                    });\r\n                }\r\n\r\n                const isRelationNode = () => {\r\n                    let result = false;\r\n                    let tempNode = focusNode;\r\n                    // 親判定\r\n                    while (tempNode != null) {\r\n                        if (element.parent == null || element == tempNode) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                        tempNode = tempNode.parent;\r\n                    }\r\n                    // 兄弟判定\r\n                    if (result === false && focusNode != null && focusNode.parent != null) {\r\n                        result = focusNode.parent.children.find(node => node == element) != undefined;\r\n                    }\r\n                    return result;\r\n                }\r\n                const isCurrent = element.data == focusNode?.data;\r\n                list.push(\r\n                    <_Record\r\n                        key={list.length}\r\n                        isActive={isCurrent}\r\n                        isRelation={!isDisable && isRelationNode()}\r\n                        isDisable={isCurrent && isDisable}\r\n                    >\r\n                        {getSpaces()}\r\n                        {element.children.length === 0 ? <></> : <_Branch\r\n                            onClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                                // alert(element.isOpen);\r\n                            }}\r\n                        >{element.isOpen ? '-' : '+'}</_Branch>}\r\n                        <_Jsx\r\n                            onClick={() => {\r\n                                props.clickEvent(element);\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                            onDoubleClick={() => {\r\n                                element.isOpen = !element.isOpen;\r\n                                setRootElementNode({ ...rootElementNode });\r\n                            }}\r\n                        >\r\n                            {props.getLabelJsx(element)}\r\n                        </_Jsx>\r\n                    </_Record>\r\n                );\r\n                if (element.isOpen) {\r\n                    element.children.forEach((child, i) => {\r\n                        buildJsxRecords(child, spaceList.slice().concat(element.children.length - 1 !== i));\r\n                    });\r\n                }\r\n            }\r\n            buildJsxRecords(rootElementNode, []);\r\n            // rootJsxNode.forEach((el) => {\r\n            //     addElement(el, []);\r\n            // });\r\n            return list;\r\n        }, [rootElementNode, props.invalidate, isDisable]);\r\n\r\n        return (\r\n            <_Wrap isDisable={isDisable}>\r\n                {jsxList}\r\n            </_Wrap>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TreeUtil;\r\n\r\nconst _Wrap = styled.div<{\r\n    isDisable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #374a54;\r\n    width: calc(100% - 10px);\r\n    height: calc(100% - 10px);\r\n    box-sizing: border-box;\r\n    border: solid 1px #000;\r\n    margin: 5px;\r\n    overflow: auto;\r\n    ${props => !props.isDisable ? '' : css`\r\n        pointer-events: none;\r\n        background-color: #1f3642;\r\n    `}\r\n`;\r\n\r\nconst _Record = styled.div<{\r\n    isActive: boolean;\r\n    isRelation: boolean;\r\n    isDisable: boolean;\r\n}>`\r\n    display: block;\r\n    /* position: relative; */\r\n    ${props => !props.isDisable ? '' : css`\r\n        background-color: #459cff46;\r\n    `}\r\n    opacity: 0.3;\r\n    ${props => !props.isRelation ? '' : css`\r\n        background-color: #ffffff28;\r\n        opacity: 1;\r\n    `}\r\n    ${props => !props.isActive ? '' : css`\r\n        background-color: #b4d9dd83;\r\n        opacity: 1;\r\n    `}\r\n    /* width: calc(100% - 10px); */\r\n    height: 40px;\r\n    box-sizing: border-box;\r\n    white-space: nowrap;\r\n    /* border: solid 1px #000;\r\n    margin: 5px; */\r\n    & *{\r\n        vertical-align: top;\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst _Space = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #b6d5be; */\r\n    width: 40px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    /* border: solid 1px #000; */\r\n`;\r\nconst _LineTop = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 22px;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineFull = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 4px;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0 0 0 20px;\r\n`;\r\nconst _LineRight = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #b60000;\r\n    width: 16px;\r\n    height: 4px;\r\n    box-sizing: border-box;\r\n    margin: 18px 0 0 0;\r\n`;\r\n\r\nconst _Branch = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #d1d1d1;\r\n    width: 30px;\r\n    height: calc(100% - 10px);\r\n    border: solid 1px #000;\r\n    margin: 5px 0 0 3px;\r\n    box-sizing: border-box;\r\n    font-size: 30px;\r\n    /* font-weight: 600; */\r\n    color: #6d1717;\r\n    line-height: 20px;\r\n    padding-left: 3px;\r\n`;\r\nconst _Jsx = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffff3c; */\r\n    min-width: 100px;\r\n    height: 100%;\r\n    margin: 0 0  0 3px;\r\n    box-sizing: border-box;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport FormUtil from \"../../utils/form/formUtiil\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport { useContext } from \"react\";\r\n\r\nnamespace ConfirmDialog {\r\n\r\n    export const Component = (props: {\r\n        message: string;\r\n        width?: number;\r\n        height?: number;\r\n        buttons?: FormUtil.ButtonProps[];\r\n    }) => {\r\n\r\n        const {store,  setStore } = useContext(GlobalContext);\r\n\r\n        const width = props.width ?? 600;\r\n        const height = props.height ?? 150;\r\n        const buttons = props.buttons ?? [\r\n            {\r\n                label: 'OK',\r\n                callback: () => {\r\n                    store.system.dialog = null;\r\n                    setStore({...store});\r\n                }\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <_Frame width={width} height={height}>\r\n                <_Main><_Inner>\r\n                    {props.message.split('\\n').map((msg, i) => {\r\n                        return <FormUtil.Message\r\n                            key={i}\r\n                            message={msg}\r\n                            isCenter\r\n                        />\r\n                    })}\r\n                </_Inner></_Main>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={buttons} />\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDialog;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 110px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nconst _Inner = styled.div<{}>`\r\n    /* text-align: center; */\r\n    display: inline-block;\r\n    width: 100%;\r\n    /* background-color: #bb6868e1; */\r\n`;","\r\n/**\r\n * 入力チェックを行うユーティリティ。\r\n */\r\nnamespace ValidateUtil {\r\n\r\n    export type ErrorType = 'required' | 'length' | 'value' | 'relation';\r\n\r\n    export type Validate = {\r\n        checker: (value: string) => boolean;\r\n        errorType: ErrorType;\r\n        message?: string;\r\n    }\r\n\r\n    /**\r\n     * 必須チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkRequired = (str: string) => {\r\n        return str.length > 0;\r\n    }\r\n\r\n    /**\r\n     * 文字列の長さチェック\r\n     * @param str 検証する文字列\r\n     * @param min 最小値\r\n     * @param max 最大値\r\n     * @returns 判定結果\r\n     */\r\n    export const checkStringLength = (str: string, min: number, max: number) => {\r\n        return str.length === 0 || (str.length >= min && str.length <= max);\r\n    }\r\n\r\n    /**\r\n     * 半角英数時チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkAsciiChars = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        return checkIncludesChars(str, list);\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列で構成されているかチェック\r\n     * @param str 検証する文字列\r\n     * @param list 入力を許す対象文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkIncludesChars = (str: string, list: string) => {\r\n        for (let i = 0; i < str.length; i++) {\r\n            const ch = str.charAt(i);\r\n            if (list.indexOf(ch) === -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 指定の文字列が数値に変換できるかチェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkNumber = (str: string) => {\r\n        return !isNaN(Number(str));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param conditions \r\n     * @returns \r\n     */\r\n    export const checkAll = (conditions: boolean[]): boolean => {\r\n        let result = true;\r\n        for (let i = 0; i < conditions.length; i++) {\r\n            if (!conditions[i]) {\r\n                result = false;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport default ValidateUtil;\r\n","import SystemConst from \"./systemConst\";\r\n\r\nnamespace CanvasUtil {\r\n\r\n    /**\r\n     * Canvasに任意の描画をし、画像のURLを取得する\r\n     * @param width 幅\r\n     * @param height 高さ\r\n     * @param draw 描画\r\n     * @returns 画像のURL\r\n     */\r\n    export const createURL = (width: number, height: number, draw: (ctx: CanvasRenderingContext2D) => void) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        draw(ctx);\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    export const getLogoURL = () => {\r\n        return CanvasUtil.createURL(350, 80, (ctx) => {\r\n            // ctx.fillStyle = '#ffffff';\r\n            // ctx.fillRect(0, 0, 350, 80);\r\n\r\n            ctx.shadowColor = \"#555\";\r\n            ctx.shadowOffsetX = 2;\r\n            ctx.shadowOffsetY = 1;\r\n            ctx.shadowBlur = 5;\r\n            ctx.font = '55pt Arial';\r\n            ctx.fillStyle = '#db0000';\r\n            ctx.fillText('L', 30, 70);\r\n            const adjust = ctx.measureText('L').width;\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.fillText('iCreSia', 30 + adjust, 70);\r\n            ctx.save();\r\n        });\r\n    }\r\n\r\n    export const getAuthTextURL = (text: string) => {\r\n        const WIDTH = SystemConst.AUTH_TEXT_WIDTH;\r\n        const SIZE = SystemConst.AUTH_TEXT_WIDTH / 6;\r\n        return createURL(WIDTH, SystemConst.AUTH_TEXT_HEIGHT, (ctx) => {\r\n            ctx.rotate(1 * Math.PI / 180);\r\n            for (let i = 0; i < text.length; i++) {\r\n                const char = text.charAt(i);\r\n\r\n                const fontRand = Math.random() * 60;\r\n                const alphaRand = Math.random() * 60;\r\n                ctx.font = `${20 + fontRand}pt Arial`;\r\n                ctx.fillStyle = \"rgba(\" + [40, 0, 100, 0.05 + 0.01 * alphaRand] + \")\";\r\n                ctx.fillText(char, i * SIZE, 60);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default CanvasUtil;","import VectorUtil from \"./vectorUtil\";\r\n\r\nnamespace Particle {\r\n\r\n    export type Props = {\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        limit: number;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n    }\r\n\r\n    export class Instance {\r\n\r\n        owner: Instance[];\r\n        pos: VectorUtil.XY;\r\n        prevPos: VectorUtil.XY;\r\n        vec: VectorUtil.Vector;\r\n        frame: number;\r\n        limit: number;\r\n        isLive: boolean;\r\n        drawer: (self: Instance, ctx: CanvasRenderingContext2D) => void;\r\n        extend: ((self: Instance) => void)[];\r\n\r\n        constructor(props: Props) {\r\n            this.owner = props.owner;\r\n            this.pos = props.pos;\r\n            this.prevPos = props.pos;\r\n            this.vec = props.vec;\r\n\r\n            this.frame = 0;\r\n            this.limit = props.limit;\r\n            this.isLive = true;\r\n            this.drawer = props.drawer;\r\n            this.extend = props.extend;\r\n        }\r\n\r\n        update = () => {\r\n\r\n            this.pos.x += this.vec.xy.x;\r\n            this.pos.y += this.vec.xy.y;\r\n\r\n            this.extend.forEach(callback => callback(this));\r\n\r\n            if (this.frame === this.limit) {\r\n                this.isLive = false;\r\n            }\r\n            this.frame++;\r\n        }\r\n\r\n        draw = (ctx: CanvasRenderingContext2D) => {\r\n            this.drawer(this, ctx);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Particle;","import Particle from \"./particle\";\r\n\r\nnamespace DrawUtil {\r\n\r\n    export type Rgba = {\r\n        r: number;\r\n        g: number;\r\n        b: number;\r\n        a: number;\r\n    }\r\n\r\n    export type ColorStop = {\r\n        offset: number;\r\n        color: string;\r\n    }\r\n\r\n    export type DrawerParam = {\r\n        color: string;\r\n        radius?: number;\r\n        disappearStartRate?: number;\r\n    }\r\n\r\n    export const createGradDrawer = (param: DrawerParam) => {\r\n\r\n        const radius = param.radius ?? 30;\r\n        return (self: Particle.Instance, ctx: CanvasRenderingContext2D) => {\r\n            const x = self.pos.x;\r\n            const y = self.pos.y;\r\n            const g = ctx.createRadialGradient(x, y, 1, x, y, radius);\r\n\r\n            const grads: ColorStop[] = [];\r\n            const rgba = convertRgbaFromColorCode(param.color) ?? { r: 255, g: 255, b: 255, a: 255 };\r\n            grads.push({ offset: 0, color: '#ffffffe4' });\r\n            rgba.a = 40;\r\n            grads.push({ offset: 0.2, color: convertColorCodeFromRgba(rgba) })\r\n            rgba.a = 1;\r\n            grads.push({ offset: 1, color: convertColorCodeFromRgba(rgba) })\r\n\r\n            grads.forEach(grad => {\r\n                g.addColorStop(grad.offset, grad.color);\r\n            });\r\n\r\n            ctx.globalAlpha = 1;\r\n            if (param.disappearStartRate != undefined) {\r\n                const start = Math.floor(self.limit * param.disappearStartRate);\r\n                if (self.frame > start) {\r\n                    const limit = self.limit - start;\r\n                    const frame = self.frame - start;\r\n                    ctx.globalAlpha = (limit - frame) / limit;\r\n                }\r\n            }\r\n\r\n            ctx.fillStyle = g;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n        };\r\n    }\r\n\r\n    export const convertRgbaFromColorCode = (code: string): Rgba | null => {\r\n        const div = code.split('#');\r\n        if (div.length !== 2 || div[1].length < 6) return null;\r\n\r\n        const value = div[1];\r\n        const r = Number.parseInt(value.substring(0, 2), 16);\r\n        const g = Number.parseInt(value.substring(2, 4), 16);\r\n        const b = Number.parseInt(value.substring(4, 6), 16);\r\n        let a = 1;\r\n        if (value.length === 8) {\r\n            a = Number.parseInt(value.substring(6, 8), 16);\r\n        }\r\n        return { r, g, b, a };\r\n    }\r\n\r\n    export const convertColorCodeFromRgba = (rgba: Rgba): string => {\r\n        const r = ('00' + rgba.r.toString(16)).slice(-2);\r\n        const g = ('00' + rgba.g.toString(16)).slice(-2);\r\n        const b = ('00' + rgba.b.toString(16)).slice(-2);\r\n        const a = ('00' + rgba.a.toString(16)).slice(-2);\r\n        return `#${r}${g}${b}${a}`;\r\n    }\r\n\r\n    export const toWhite = (color: string, rate: number): string => {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport default DrawUtil;","namespace VectorUtil {\r\n\r\n    export type XY = {\r\n        x: number, y: number;\r\n    }\r\n\r\n    export class Vector {\r\n\r\n        xy: XY;\r\n        rad: number;\r\n        len: number;\r\n\r\n        constructor(xy: XY) {\r\n            this.xy = xy;\r\n            this.rad = 0;\r\n            this.len = 0;\r\n            this.syncFromXY();\r\n        }\r\n\r\n        syncFromXY = () => {\r\n            this.len = Math.sqrt(this.xy.x * this.xy.x + this.xy.y * this.xy.y);\r\n            this.rad = Math.atan2(this.xy.y, this.xy.x);\r\n        }\r\n\r\n        syncFromRad = () => {\r\n            this.xy.x = Math.cos(this.rad) * this.len;\r\n            this.xy.y = Math.sin(this.rad) * this.len;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default VectorUtil;","import { assert } from \"console\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport DrawUtil from \"../../graphic/drawUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport FactoryUtil from \"../factory/factoryUtil\";\r\n\r\nnamespace PreviewUtil {\r\n\r\n    export const SCREEN_WIDTH = 550;\r\n    export const SCREEN_HEIGHT = 550;\r\n\r\n    export type ValueMap = {\r\n        name: string;\r\n        value: number;\r\n    }\r\n\r\n    type ParentProps = {\r\n        pos: VectorUtil.XY;\r\n    }\r\n\r\n    export const buildOriginProps = (\r\n        owner: Particle.Instance[],\r\n        node: TreeUtil.ElementNode,\r\n        rootData: FactoryUtil.WrapNode,\r\n        args: ValueMap[]\r\n    ): Particle.Props => {\r\n\r\n        const searchDependLogic = (name: string): FactoryUtil.NodeLogicItem | null => {\r\n            const mng = (rootData.data as FactoryUtil.NodeRoot).inheritMng.data as FactoryUtil.NodeLogicManager;\r\n            const wrap = mng.defs.find(def => (def.data as FactoryUtil.NodeLogicItem).name === name);\r\n            if (wrap == undefined) return null;\r\n            return wrap.data as FactoryUtil.NodeLogicItem;\r\n        }\r\n\r\n        const createParticleRec = (cur: FactoryUtil.NodeLogicItem, fields: ValueMap[], parent: null | ParentProps): Particle.Props => {\r\n            let valueMapList: ValueMap[] = fields.concat(ConstantValueMap);\r\n\r\n            const visualParams = (searchElement('visual-mng', cur.mngs)?.data as FactoryUtil.NodeParamManager).\r\n                params.map(param => param.data as FactoryUtil.NodeParamItem);\r\n            const behaviorParams = (searchElement('behavior-mng', cur.mngs)?.data as FactoryUtil.NodeParamManager).\r\n                params.map(param => param.data as FactoryUtil.NodeParamItem);\r\n\r\n            const getVisualParam = (name: string) => {\r\n                return convertFormulaToValue(name, visualParams, valueMapList);\r\n            }\r\n            const getBehaviorParam = (name: string) => {\r\n                return convertFormulaToValue(name, behaviorParams, valueMapList);\r\n            }\r\n\r\n            const limit = Math.floor(getBehaviorParam('limit'));\r\n            const pos = parent == null ? { x: getBehaviorParam('pos_x'), y: getBehaviorParam('pos_y') } : parent.pos;\r\n            const vec = new VectorUtil.Vector({ x: 0, y: 0 });\r\n            if (behaviorParams[behaviorParams.length - 1].name === 'vec_y') {\r\n                vec.xy.x = getBehaviorParam('vec_x');\r\n                vec.xy.y = getBehaviorParam('vec_y');\r\n                vec.syncFromXY();\r\n            } else {\r\n                vec.rad = getBehaviorParam('radian');\r\n                vec.len = getBehaviorParam('length');\r\n                vec.syncFromRad();\r\n            }\r\n            const radius = getVisualParam('radius');\r\n            const r = getVisualParam('r');\r\n            const g = getVisualParam('g');\r\n            const b = getVisualParam('b');\r\n            const a = getVisualParam('a');\r\n\r\n            const extendList: ((self: Particle.Instance) => void)[] = [];\r\n            const extendMng = searchElement('extend-mng', cur.mngs);\r\n\r\n            let disappearStartRate = undefined;\r\n            if (extendMng != null) {\r\n                const mngs = (extendMng.data as FactoryUtil.NodeExtendManager).mngs;\r\n                const connectMng = searchElement('connect-mng', mngs);\r\n                if (connectMng != null) {\r\n                    const connects = (connectMng.data as FactoryUtil.NodeInheritConnectManager).connects;\r\n\r\n                    connects.forEach(connect => {\r\n                        const connector = connect.data as FactoryUtil.NodeInheritConnector;\r\n\r\n                        // 実行条件\r\n                        const getCondition: ((self: Particle.Instance) => boolean) = (connector.condition === 'limit') ? (self: Particle.Instance) => {\r\n                            return self.frame === self.limit;\r\n                        } : (self: Particle.Instance) => {\r\n                            return true;\r\n                        };\r\n                        const logicItem = connector.connectType === 'create' ?\r\n                            searchElement('inherit-cache-item', connector.mngs)?.data as FactoryUtil.NodeLogicItem :\r\n                            searchDependLogic(connector.depend);\r\n\r\n                        if (logicItem != null) {\r\n                            let loopCnt = 1;\r\n                            const iterateItem = searchElement('iterate-mng', connector.mngs);\r\n                            if (iterateItem != null) {\r\n                                const params = (iterateItem.data as FactoryUtil.NodeParamManager).params.map(param => param.data as FactoryUtil.NodeParamItem);\r\n                                loopCnt = convertFormulaToValue('loop_count', params, valueMapList);\r\n                            }\r\n\r\n                            valueMapList.push({ name: 'limit', value: limit });\r\n                            valueMapList.push({ name: 'vec_x', value: vec.xy.x });\r\n                            valueMapList.push({ name: 'vec_y', value: vec.xy.y });\r\n                            valueMapList.push({ name: 'radian', value: vec.rad });\r\n                            valueMapList.push({ name: 'length', value: vec.len });\r\n                            valueMapList.push({ name: 'radius', value: radius });\r\n                            valueMapList.push({ name: 'color_r', value: r });\r\n                            valueMapList.push({ name: 'color_g', value: g });\r\n                            valueMapList.push({ name: 'color_b', value: b });\r\n                            valueMapList.push({ name: 'color_a', value: a });\r\n\r\n                            // フィールド関連のパラメータを追加\r\n                            for (let i = 0; i < loopCnt; i++) {\r\n\r\n                                // イテレータ関連のパラメータを追加\r\n                                let iterateValueMap: ValueMap[] = [];\r\n                                if (iterateItem != null) {\r\n                                    iterateValueMap = [\r\n                                        { name: 'loop_count', value: loopCnt },\r\n                                        { name: 'loop_iterator', value: i }\r\n                                    ]\r\n                                }\r\n\r\n                                const sendItem = searchElement('send-mng', connector.mngs)?.data as FactoryUtil.NodeParamManager;\r\n                                const params = sendItem.params.map(param => param.data as FactoryUtil.NodeParamItem);\r\n                                const sendValueMapList: ValueMap[] = params.map(item => {\r\n                                    return { name: item.name, value: convertFormulaToValue(item.name, params, valueMapList.concat(iterateValueMap)) }\r\n                                });\r\n                                extendList.push((self: Particle.Instance) => {\r\n                                    if (getCondition(self)) {\r\n                                        const props = createParticleRec(\r\n                                            logicItem,\r\n                                            sendValueMapList,\r\n                                            {\r\n                                                pos: { ...self.pos }\r\n                                            }\r\n                                        );\r\n                                        self.owner.push(new Particle.Instance(props));\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                const effectMng = searchElement('effect-mng', mngs);\r\n                if (effectMng != null) {\r\n                    const params = (effectMng.data as FactoryUtil.NodeParamManager).params.map(param => (param.data as FactoryUtil.NodeParamItem));\r\n\r\n                    const getEffectParam = (name: string) => {\r\n                        return convertFormulaToValue(name, params, valueMapList);\r\n                    }\r\n                    disappearStartRate = getEffectParam('disappear_start_rate');\r\n                }\r\n                const modulateMng = searchElement('modulate-mng', mngs);\r\n                if (modulateMng != null) {\r\n                    const params = (modulateMng.data as FactoryUtil.NodeParamManager).params.map(param => (param.data as FactoryUtil.NodeParamItem));\r\n\r\n                    const getModulateParam = (name: string) => {\r\n                        return convertFormulaToValue(name, params, valueMapList);\r\n                    }\r\n                    const decayLimit = getModulateParam('decay_limit');\r\n                    const decayRate = getModulateParam('decay_rate');\r\n                    const gravity = getModulateParam('gravity');\r\n                    extendList.push((self: Particle.Instance) => {\r\n                        modulate(self, {\r\n                            decayLimit, decayRate, gravity\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n\r\n            return {\r\n                owner, pos, vec,\r\n                limit,\r\n                drawer: DrawUtil.createGradDrawer({\r\n                    radius: radius,\r\n                    color: DrawUtil.convertColorCodeFromRgba({\r\n                        r: getVisualParam('color_r'),\r\n                        g: getVisualParam('color_g'),\r\n                        b: getVisualParam('color_b'),\r\n                        a: getVisualParam('color_a'),\r\n                    }),\r\n                    disappearStartRate\r\n                }),\r\n                extend: extendList\r\n            };\r\n        }\r\n\r\n        const origin = (node.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeLogicItem;\r\n        return createParticleRec(origin, args, null);\r\n    }\r\n\r\n\r\n    const searchElement = (type: FactoryUtil.NodeType, warpList: FactoryUtil.WrapNode[]) => {\r\n        return warpList.find(wrap => wrap.type === type) ?? null;\r\n    }\r\n\r\n    const convertFormulaToValue = (name: string, params: FactoryUtil.NodeParamItem[], valueMapList: ValueMap[]): number => {\r\n        const formula = params.find(param => param.name === name);\r\n        if (formula == undefined) return 0;\r\n\r\n        const values = formula.values.map(v => {\r\n            if (v.type === 'direct') return Number(v.value);\r\n            const valueMap = valueMapList.find(m => m.name === v.value);\r\n            if (valueMap == undefined) return 0;\r\n            return valueMap.value;\r\n        });\r\n\r\n        let formulaStr = '';\r\n        let varCnt = 0;\r\n        formula.formulaItems.forEach((item, i) => {\r\n            let str = item;\r\n            if (item === 'var') {\r\n                str = values[varCnt].toString();\r\n                varCnt++;\r\n            }\r\n            else if (item === 'rand(') str = 'Math.random()*(';\r\n            else if (item === 'integer(') str = 'Math.floor(';\r\n            formulaStr += str;\r\n        });\r\n        console.log(formulaStr);\r\n        const ret = Function(`return (${formulaStr})`)();\r\n        console.log(ret);\r\n        return ret;\r\n    }\r\n\r\n    export const ConstantValueMap: ValueMap[] = [\r\n        { name: 'screen_width', value: SCREEN_WIDTH },\r\n        { name: 'screen_height', value: SCREEN_HEIGHT },\r\n        { name: 'pi', value: 3.14159265359 },\r\n        { name: 'radian_round', value: 3.14159265359 * 2 }\r\n    ];\r\n\r\n    type ModulateParam = {\r\n        decayRate: number;\r\n        decayLimit: number;\r\n        gravity: number;\r\n    }\r\n\r\n    const modulate = (self: Particle.Instance, param: ModulateParam) => {\r\n\r\n        if (self.vec.len > param.decayLimit) {\r\n            self.vec.len = self.vec.len * param.decayRate;\r\n            self.vec.syncFromRad();\r\n            self.vec.xy.y += param.gravity;\r\n            self.vec.syncFromXY();\r\n        }\r\n    }\r\n}\r\n\r\nexport default PreviewUtil;","import styled from \"styled-components\";\r\nimport { useContext, useEffect, useMemo, useState, useRef } from \"react\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport FactoryUtil from \"../factory/factoryUtil\";\r\nimport { TabbedPane } from \"../../../base/components/tab/tabbedPane\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport CanvasUtil from \"../../../utils/canvasUtil\";\r\nimport Particle from \"../../graphic/particle\";\r\nimport VectorUtil from \"../../graphic/vectorUtil\";\r\nimport DrawUtil from \"../../graphic/drawUtil\";\r\nimport PreviewUtil from \"./previewUtil\";\r\n\r\nnamespace LogicPreviewFrame {\r\n\r\n    const width = 600;\r\n    const height = 660;\r\n\r\n    export const Component = (props: {\r\n        node: TreeUtil.ElementNode;\r\n        rootData: FactoryUtil.WrapNode;\r\n    }) => {\r\n        const { store, setStore } = useContext(GlobalContext);\r\n        const ref = useRef<HTMLDivElement>({} as HTMLDivElement);\r\n\r\n        const [formList, setFormList] = useState<FormUtil.CheckableValue[]>([]);\r\n\r\n        const [sceens, setSceens] = useState<string[]>([]);\r\n        const [frameCnt, setFrameCnt] = useState<number>(-1);\r\n        const [tabIndex, setTabIndex] = useState<number>(0);\r\n        const [cur, setCur] = useState<number>(0);\r\n        const [isBuild, setBuild] = useState<boolean>(false);\r\n        const [isPlay, setPlay] = useState<boolean>(false);\r\n\r\n        useEffect(() => {\r\n            if (isPlay) {\r\n                if (cur < frameCnt) {\r\n                    setTimeout(() => {\r\n                        setCur(cur + 1);\r\n                    }, 1000 / 30);\r\n                } else {\r\n                    setPlay(false);\r\n                    setCur(0);\r\n                }\r\n            }\r\n        }, [isPlay, cur]);\r\n\r\n        const getArgumentList = (): string[] => {\r\n            const argWrap = (props.node.children[0].data as FactoryUtil.WrapNode);\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as FactoryUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as FactoryUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n            return [];\r\n        }\r\n\r\n        const argumentList = useMemo(() => {\r\n            return getArgumentList();\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n            setFormList(argumentList.map(arg => {\r\n                return { value: '', errors: [] };\r\n            }));\r\n        }, []);\r\n\r\n        const formListJsx = useMemo(() => {\r\n            return formList.map((form, i) => {\r\n                return (\r\n                    <FormUtil.FormRecord\r\n                        key={i}\r\n                        titleLabel={argumentList[i]}\r\n                        labelWidth={250}\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={332}\r\n                                isNumber\r\n                                checkable={form}\r\n                                setCheckable={(checkable) => {\r\n                                    form = { ...checkable };\r\n                                    setFormList(formList.slice());\r\n                                }}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />);\r\n            });\r\n        }, [formList]);\r\n\r\n\r\n        const build = () => {\r\n\r\n            setBuild(true);\r\n\r\n            const sceens: string[] = [];\r\n\r\n            const owner: Particle.Instance[] = [];\r\n\r\n            let frameCnt = 0;\r\n            do {\r\n                if (frameCnt === 0) {\r\n                    owner.push(new Particle.Instance(\r\n                        PreviewUtil.buildOriginProps(owner, props.node, props.rootData, formList.map((form, i) => {\r\n                            return { name: argumentList[i], value: Number(form.value) }\r\n                        }))\r\n                    ));\r\n                }\r\n\r\n                sceens.push(CanvasUtil.createURL(550, 550, (ctx) => {\r\n                    ctx.font = '16pt Arial';\r\n                    ctx.fillStyle = '#ffffff';\r\n                    ctx.fillText(`${frameCnt}`, 6, 24);\r\n                    ctx.fillStyle = '#ffec5c';\r\n                    ctx.fillText(`${owner.length}`, 6, 44);\r\n\r\n                    // パーティクルの描画\r\n                    owner.forEach(par => {\r\n                        par.draw(ctx);\r\n                    });\r\n\r\n                    ctx.save();\r\n                }));\r\n\r\n                // パーティクルの更新\r\n                for (let i = owner.length - 1; i >= 0; i--) {\r\n                    const particle = owner[i];\r\n\r\n                    particle.update();\r\n                }\r\n\r\n                // 死滅したパーティクルの削除\r\n                for (let i = owner.length - 1; i >= 0; i--) {\r\n                    const particle = owner[i];\r\n                    if (!particle.isLive) {\r\n                        owner.splice(i, 1);\r\n                    }\r\n                }\r\n\r\n                if (frameCnt > 500 || owner.length > 3000) break;\r\n                frameCnt++;\r\n            } while (owner.length > 0);\r\n            setFrameCnt(frameCnt);\r\n            setSceens(sceens);\r\n\r\n            setBuild(false);\r\n            setTabIndex(1);\r\n        }\r\n\r\n\r\n        const isInputOK = () => {\r\n            return formList.find(form => form.errors.length > 0) == undefined;\r\n        }\r\n        const buildTabJsx = (\r\n            <_Wrap>\r\n                <_FormDiv>\r\n                    {formListJsx}\r\n                </_FormDiv>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'Build',\r\n                            isEnable: isInputOK() && !isBuild,\r\n                            callback: () => {\r\n                                build();\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        const previewTabJsx = (\r\n            <_Wrap>\r\n                <_CanvasDiv>\r\n                    {sceens.length === 0 ? <></> : <_IMG src={sceens[cur]} />}\r\n                </_CanvasDiv>\r\n                <_ProgressDiv ref={ref} onClick={(e) => {\r\n                    const clickX = e.pageX;\r\n                    // 要素の位置を取得\r\n                    const clientRect = ref.current.getBoundingClientRect();\r\n                    const positionX = clientRect.left + window.pageXOffset;\r\n\r\n                    // 要素内におけるクリック位置を計算\r\n                    const x = clickX - positionX;\r\n                    const rate = x / clientRect.width;\r\n                    setCur(Math.floor(frameCnt * rate));\r\n                }}>\r\n                    <_ProgressVal rate={100 * cur / (frameCnt - 1)} />\r\n                </_ProgressDiv>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: '←',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur > 0,\r\n                            callback: () => {\r\n                                setCur(cur - 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '→',\r\n                            width: 50,\r\n                            isEnable: !isPlay && cur < sceens.length - 1,\r\n                            callback: () => {\r\n                                setCur(cur + 1);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: !isPlay ? 'start' : 'Stop',\r\n                            callback: () => {\r\n                                setPlay(!isPlay);\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'reset',\r\n                            callback: () => {\r\n                                setCur(0);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n            </_Wrap>\r\n        );\r\n\r\n        return (\r\n            <_Frame width={width} height={height}\r\n                tabIndex={0}\r\n                onKeyDown={(e) => {\r\n                    if (tabIndex === 0) {\r\n                        if (isInputOK() && e.key === ' ') build();\r\n                    } else {\r\n                        switch (e.key) {\r\n                            case 'ArrowLeft': {\r\n                                if (!isPlay && !isPlay && cur > 0) setCur(cur - 1);\r\n                            } break;\r\n                            case 'ArrowRight': {\r\n                                if (!isPlay && cur < sceens.length - 1) setCur(cur + 1);\r\n                            } break;\r\n                            case ' ': {\r\n                                setPlay(!isPlay);\r\n                            } break;\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                <_Main>\r\n                    <TabbedPane\r\n                        tabElements={[\r\n                            { name: 'Build', enable: true, cont: buildTabJsx },\r\n                            { name: 'Play', enable: frameCnt !== -1, cont: previewTabJsx }\r\n                        ]}\r\n                        activeNo={tabIndex}\r\n                        selectTabIndex={(index: number) => setTabIndex(index)}\r\n                    />\r\n                </_Main>\r\n            </_Frame>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogicPreviewFrame;\r\n\r\nconst _Frame = styled.div<{\r\n    width: number;\r\n    height: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 11;\r\n    top: calc(50% - ${props => props.height / 2}px);\r\n    left: calc(50% - ${props => props.width / 2}px);\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    background-color: #e7e7e7e2;\r\n    border: 1px solid #8f8f8f;\r\n    border-radius: 4px;\r\n    box-shadow: 10px 15px 15px #0000004b;\r\n`;\r\n\r\nconst _Main = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #4d5056df;\r\n`;\r\nconst _FormDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 580px;\r\n    background-color: #a2c1d5df;\r\n`;\r\nconst _CanvasDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: ${PreviewUtil.SCREEN_WIDTH}px;\r\n    height: ${PreviewUtil.SCREEN_HEIGHT}px;\r\n    margin: 5px 0 0 20px;\r\n    background-color: #020202df;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _Wrap = styled.div<{}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #aed5d8e0;\r\n`;\r\n\r\nconst _ProgressDiv = styled.div<{}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    margin: 5px 0 0 4px;\r\n    background-color: #000000;\r\n    border: solid 1px #fff;\r\n    box-sizing: border-box;\r\n`;\r\nconst _ProgressVal = styled.div<{\r\n    rate: number;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: ${props => props.rate}%;\r\n    height: 100%;\r\n    /* background-color: #2fccf3; */\r\n    background: linear-gradient(to bottom, #37819492, #2fccf3, #37819492);\r\n`;\r\n\r\nconst _IMG = styled.img`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactoryTab, { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\n\r\nconst FactDetArgumentMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Argument',\r\n                        callback: () => {\r\n                            const newWrap: FactoryUtil.WrapNode = {\r\n                                type: 'argument-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as FactoryUtil.NodeArgumentManager).args.push(newWrap);\r\n                            const newNode = TreeUtil.createNode(newWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            // (wrap.data as FactoryUtil.NodeArgumentManager).args.push(newWrap);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetArgumentMng;","import { useContext, useEffect } from \"react\";\r\nimport FormUtil from \"../../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../../factoryTab\";\r\nimport FactoryUtil from \"../../factoryUtil\";\r\n\r\nnamespace ModifyOperations {\r\n\r\n    export type Props = {\r\n        mappingForm: () => void;\r\n        checkableFields: FormUtil.CheckableValue[];\r\n        isInputOK?: boolean;\r\n        firstRegist: () => void;\r\n        listName: string;\r\n        modifyRegist: () => void;\r\n    }\r\n\r\n    export const Component = (props: Props) => {\r\n        const { node, isModify, setModify, removeSelf } = useContext(FactoryTreeContext);\r\n\r\n        const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n        const isComplete = FormUtil.isCompleteCheck(props.checkableFields);\r\n\r\n        return (<>\r\n            <FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Cancel',\r\n                        isEnable: isModify,\r\n                        callback: () => {\r\n                            if (wrap.data == null) {\r\n                                // const parent = (node.parent as TreeUtil.ElementNode);\r\n                                // parent.children.splice(parent.children.length - 1, 1);\r\n                                // setFocusNode(parent);\r\n                                // const list = ((parent.data as FactoryUtil.WrapNode).data[props.listName] as FactoryUtil.WrapNode[]);\r\n                                // list.splice(parent.children.length - 1, 1);\r\n                                removeSelf(props.listName);\r\n                            } else {\r\n                                props.mappingForm();\r\n                            }\r\n                            setModify(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: !isModify ? 'Modify' : 'Regist',\r\n                        isEnable: !isModify || (props.isInputOK ?? isComplete),\r\n                        callback: () => {\r\n                            if (!isModify) {\r\n                                setModify(true);\r\n                            } else {\r\n                                if (wrap.data == null) {\r\n                                    props.firstRegist();\r\n                                } else {\r\n                                    props.modifyRegist();\r\n                                }\r\n                                setModify(false);\r\n                            }\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default ModifyOperations;","import { type } from \"os\";\r\nimport { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst ListName = 'args';\r\nconst FactDetArgumentItem = () => {\r\n    const { node, removeSelf, setModify, isModify, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [defaultValue, setDefaultValue] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [argType, setArgType] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [isOrigin, reservedList] = useMemo(() => {\r\n        const type = (node.parent?.parent?.data as FactoryUtil.WrapNode).type;\r\n        const isOrigin = type === 'origin-item';\r\n\r\n        const reservedList: string[] = [];\r\n        return [isOrigin, reservedList];\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as FactoryUtil.NodeArgumentItem;\r\n        setName({ ...name, value: param.name });\r\n        setArgType({ ...argType, value: param.valueType });\r\n        if (isOrigin && param.defVal != undefined) {\r\n            setDefaultValue({ ...defaultValue, value: param.defVal.toString() });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            listName={ListName}\r\n            checkableFields={isOrigin ? [name, defaultValue] : [name]}\r\n            firstRegist={() => {\r\n                let defVal = undefined;\r\n                if (isOrigin && defaultValue.value != '') {\r\n                    defVal = Number(defaultValue.value);\r\n                }\r\n                const param: FactoryUtil.NodeArgumentItem = {\r\n                    name: name.value,\r\n                    valueType: argType.value as FactoryUtil.ArgumentType,\r\n                    defVal\r\n                };\r\n                param.name = name.value;\r\n                wrap.data = param;\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as FactoryUtil.NodeArgumentItem;\r\n                param.name = name.value;\r\n                param.valueType = argType.value as FactoryUtil.ArgumentType;\r\n                wrap.data = param;\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Name\"\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={name}\r\n                            setCheckable={setName}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                    errorType: \"length\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => FactoryUtil.checkFieldName(value),\r\n                                    errorType: \"value\"\r\n                                },\r\n                                {\r\n                                    checker: (value) => !reservedList.includes(value),\r\n                                    errorType: 'relation'\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Type\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            checkable={argType}\r\n                            setCheckable={setArgType}\r\n                            list={FactoryUtil.ArgTypes.map(type => {\r\n                                return { value: type, labelText: type, isDisabled: type !== 'float' }\r\n                            })}\r\n                            headBlank\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Default\"\r\n                    isVisible={isOrigin}\r\n                    jsx={\r\n                        <FormUtil.TextField\r\n                            width={200}\r\n                            isReadOnly={!isModify}\r\n                            checkable={defaultValue}\r\n                            setCheckable={setDefaultValue}\r\n                            validates={\r\n                                [\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkNumber(value),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            isEnable: !isModify,\r\n                            callback: () => {\r\n                                removeSelf(ListName);\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetArgumentItem;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactoryTab, { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\n\r\nconst FactDetInheritMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Inherit',\r\n                        callback: () => {\r\n                            const itemWrap: FactoryUtil.WrapNode = {\r\n                                type: 'inherit-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as FactoryUtil.NodeLogicManager).defs.push(itemWrap);\r\n                            const newNode = TreeUtil.createNode(itemWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetInheritMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetExtendMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [hasEffectsNode, hasModulateNode, hasInheritNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as FactoryUtil.WrapNode).type;\r\n        });\r\n        return [\r\n            list.includes('effect-mng'),\r\n            list.includes('modulate-mng'),\r\n            list.includes('connect-mng'),\r\n        ]\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as FactoryUtil.NodeLogicItem;\r\n        setName({ ...name, value: param.name });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Effect'}\r\n                            width={300}\r\n                            isUse={hasEffectsNode}\r\n                            callback={() => {\r\n                                const data = (wrap.data as FactoryUtil.NodeExtendManager);\r\n                                if (hasEffectsNode) {\r\n                                    data.mngs.splice(0, 1);\r\n                                    node.children.splice(0, 1);\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                } else {\r\n                                    const newWrap: FactoryUtil.WrapNode = {\r\n                                        type: 'effect-mng',\r\n                                        data: {\r\n                                            params: []\r\n                                        } as FactoryUtil.NodeParamManager\r\n                                    }\r\n                                    data.mngs.unshift(newWrap);\r\n                                    const newNode = TreeUtil.createNode(newWrap, node);\r\n                                    node.children.unshift(newNode);\r\n\r\n                                    {\r\n                                        const paramWrap = FactoryUtil.createParamWrap('effect-item',\r\n                                            { name: 'disappear_start_rate', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] });\r\n                                        (newWrap.data as FactoryUtil.NodeParamManager).params.push(paramWrap);\r\n                                        newNode.children.push(TreeUtil.createNode(paramWrap, newNode));\r\n                                    }\r\n\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                }\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Modulate'}\r\n                            width={300}\r\n                            isUse={hasModulateNode}\r\n                            callback={() => {\r\n                                const data = (wrap.data as FactoryUtil.NodeExtendManager);\r\n                                if (hasModulateNode) {\r\n                                    const delIndex = !hasEffectsNode ? 0 : 1;\r\n                                    data.mngs.splice(delIndex, 1);\r\n                                    node.children.splice(delIndex, 1);\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                } else {\r\n                                    const newWrap: FactoryUtil.WrapNode = {\r\n                                        type: 'modulate-mng',\r\n                                        data: {\r\n                                            params: []\r\n                                        } as FactoryUtil.NodeParamManager\r\n                                    }\r\n                                    const insIndex = !hasEffectsNode ? 0 : 1;\r\n                                    data.mngs.splice(insIndex, 0, newWrap);\r\n                                    const newNode = TreeUtil.createNode(newWrap, node);\r\n                                    node.children.splice(insIndex, 0, newNode);\r\n\r\n                                    {\r\n                                        const paramWrap = FactoryUtil.createParamWrap('modulate-item',\r\n                                            { name: 'decay_rate', formulaItems: ['var'], values: [{ type: 'direct', value: '0.97' }] });\r\n                                        (newWrap.data as FactoryUtil.NodeParamManager).params.push(paramWrap);\r\n                                        newNode.children.push(TreeUtil.createNode(paramWrap, newNode));\r\n                                    }\r\n                                    {\r\n                                        const paramWrap = FactoryUtil.createParamWrap('modulate-item',\r\n                                            { name: 'decay_limit', formulaItems: ['var'], values: [{ type: 'direct', value: '5' }] });\r\n                                        (newWrap.data as FactoryUtil.NodeParamManager).params.push(paramWrap);\r\n                                        newNode.children.push(TreeUtil.createNode(paramWrap, newNode));\r\n                                    }\r\n                                    {\r\n                                        const paramWrap = FactoryUtil.createParamWrap('modulate-item',\r\n                                            { name: 'gravity', formulaItems: ['var'], values: [{ type: 'direct', value: '0.1' }] });\r\n                                        (newWrap.data as FactoryUtil.NodeParamManager).params.push(paramWrap);\r\n                                        newNode.children.push(TreeUtil.createNode(paramWrap, newNode));\r\n                                    }\r\n\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                }\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Inherit'}\r\n                            width={300}\r\n                            isUse={hasInheritNode}\r\n                            callback={() => {\r\n                                const data = (wrap.data as FactoryUtil.NodeExtendManager);\r\n                                if (hasInheritNode) {\r\n                                    console.log(data.mngs[data.mngs.length - 1].type);\r\n                                    data.mngs.splice(data.mngs.length - 1, 1);\r\n                                    node.children.splice(node.children.length - 1, 1);\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                } else {\r\n                                    const newWrap: FactoryUtil.WrapNode = {\r\n                                        type: 'connect-mng',\r\n                                        data: {\r\n                                            connects: []\r\n                                        } as FactoryUtil.NodeInheritConnectManager\r\n                                    }\r\n                                    data.mngs.push(newWrap);\r\n                                    const newNode = TreeUtil.createNode(newWrap, node);\r\n                                    node.children.push(newNode);\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                }\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetExtendMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactoryTab, { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\n\r\nconst FactDetOriginMng = () => {\r\n    const {node, setFocusNode} = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Origin',\r\n                        callback: () => {\r\n                            const newWrap: FactoryUtil.WrapNode = {\r\n                                type: 'origin-item',\r\n                                data: null\r\n                            };\r\n                            (wrap.data as FactoryUtil.NodeLogicManager).defs.push(newWrap);\r\n                            const newNode = TreeUtil.createNode(newWrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetOriginMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport LogicPreviewFrame from \"../../preview/logicPreviewFrame\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst ListName = 'defs';\r\nconst FactDetLogicItem = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { removeSelf, node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    const [name, setName] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [isConnect, isInherit, hasArgNode, hasFieldNode, hasExtendNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as FactoryUtil.WrapNode).type;\r\n        });\r\n        const parentType = (node.parent?.data as FactoryUtil.WrapNode).type;\r\n        return [\r\n            parentType === 'connector',\r\n            parentType !== 'origin-mng',\r\n            list.includes('argument-mng'),\r\n            list.includes('field-mng'),\r\n            list.includes('extend-mng'),\r\n        ]\r\n    }, [node]);\r\n\r\n    const mappingForm = () => {\r\n        if (!isConnect) {\r\n            const param = wrap.data as FactoryUtil.NodeLogicItem;\r\n            setName({ ...name, value: param.name });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node, isConnect]);\r\n\r\n    return (<>\r\n        {isConnect ? <></> : (<>\r\n            <ModifyOperations.Component\r\n                mappingForm={mappingForm}\r\n                listName={ListName}\r\n                checkableFields={[name]}\r\n                firstRegist={() => {\r\n                    const param: FactoryUtil.NodeLogicItem = {\r\n                        name: name.value,\r\n                        mngs: FactoryUtil.getDefaultLogicMngs(isInherit)\r\n                    };\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n\r\n                    param.mngs.forEach(mng => {\r\n                        const newNode = TreeUtil.createNode(mng, node);\r\n                        const data = (newNode.data as FactoryUtil.WrapNode);\r\n                        switch (data.type) {\r\n                            case 'visual-mng': {\r\n                                (data.data as FactoryUtil.NodeParamManager).params.forEach(param => {\r\n                                    newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                                });\r\n                            } break;\r\n                            case 'behavior-mng': {\r\n                                (data.data as FactoryUtil.NodeParamManager).params.forEach(param => {\r\n                                    newNode.children.push(TreeUtil.createNode(param, newNode));\r\n                                });\r\n                            } break;\r\n                        }\r\n                        node.children.push(newNode);\r\n                    });\r\n                }}\r\n                modifyRegist={() => {\r\n                    const param = wrap.data as FactoryUtil.NodeLogicItem;\r\n                    param.name = name.value;\r\n                    wrap.data = param;\r\n                }}\r\n            />\r\n            <FormUtil.BorderPanel\r\n                title=\"param\"\r\n                innerJsx={<>\r\n                    <FormUtil.FormRecord\r\n                        titleLabel=\"Name\"\r\n                        jsx={\r\n                            <FormUtil.TextField\r\n                                width={200}\r\n                                isReadOnly={!isModify}\r\n                                checkable={name}\r\n                                setCheckable={setName}\r\n                                validates={[\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkRequired(value),\r\n                                        errorType: \"required\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => ValidateUtil.checkStringLength(value, 1, 16),\r\n                                        errorType: \"length\"\r\n                                    },\r\n                                    {\r\n                                        checker: (value) => FactoryUtil.checkFieldName(value),\r\n                                        errorType: \"value\"\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        }\r\n                    />\r\n                </>}\r\n            />\r\n        </>)}\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Argument'}\r\n                        width={300}\r\n                        isUse={hasArgNode}\r\n                        callback={() => {\r\n                            const data = (wrap.data as FactoryUtil.NodeLogicItem);\r\n                            if (hasArgNode) {\r\n                                data.mngs.splice(0, 1);\r\n                                node.children.splice(0, 1);\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            } else {\r\n                                const newWrap: FactoryUtil.WrapNode = {\r\n                                    type: 'argument-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as FactoryUtil.NodeArgumentManager\r\n                                }\r\n                                data.mngs.unshift(newWrap);\r\n                                const newNode = TreeUtil.createNode(newWrap, node);\r\n                                node.children.unshift(newNode);\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    isEnable={false}\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Field'}\r\n                        width={300}\r\n                        isUse={hasFieldNode}\r\n                        callback={() => {\r\n                            if (hasFieldNode) {\r\n                            } else {\r\n                                const newWrap: FactoryUtil.WrapNode = {\r\n                                    type: 'field-mng',\r\n                                    data: {\r\n                                        args: []\r\n                                    } as FactoryUtil.NodeFieldManager\r\n                                }\r\n                                const data = (wrap.data as FactoryUtil.NodeLogicItem);\r\n                                data.mngs.push(newWrap);\r\n                                const newNode = TreeUtil.createNode(newWrap, node);\r\n                                node.children.push(newNode);\r\n                                setFocusNode(newNode);\r\n                            }\r\n                            setModify(true);\r\n                        }}\r\n                    />}\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Extend'}\r\n                            width={300}\r\n                            isUse={hasExtendNode}\r\n                            callback={() => {\r\n                                const data = (wrap.data as FactoryUtil.NodeLogicItem);\r\n                                if (hasExtendNode) {\r\n                                    data.mngs.splice(data.mngs.length - 1, 1);\r\n                                    node.children.splice(node.children.length - 1, 1);\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                } else {\r\n                                    const newWrap: FactoryUtil.WrapNode = {\r\n                                        type: 'extend-mng',\r\n                                        data: {\r\n                                            mngs: []\r\n                                        } as FactoryUtil.NodeExtendManager\r\n                                    }\r\n                                    data.mngs.push(newWrap);\r\n                                    const newNode = TreeUtil.createNode(newWrap, node);\r\n                                    node.children.push(newNode);\r\n                                    setFocusNode({ ...node });\r\n                                    invalidate();\r\n                                }\r\n                            }}\r\n                        />}\r\n                />\r\n            </>}\r\n        />\r\n        {isConnect ? <></> : (\r\n            <FormUtil.BorderPanel\r\n                title=\"operation\"\r\n                isEnable={!isModify}\r\n                innerJsx={<>\r\n                    <FormUtil.ButtonRecord\r\n                        isCenter\r\n                        buttons={[\r\n                            {\r\n                                label: 'Delete',\r\n                                callback: () => {\r\n                                    removeSelf(ListName);\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </>}\r\n            />\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default FactDetLogicItem;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../../base/design/styles\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport PreviewUtil from \"../../preview/previewUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\ntype FormProps = {\r\n    inputType: FormUtil.CheckableValue;\r\n    value: FormUtil.CheckableValue;\r\n};\r\n\r\nconst FactOprParam = () => {\r\n    const { node, setFocusNode, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    /** 式 */\r\n    const [formulaItems, setFormulaItems] = useState<string[]>([]);\r\n    /** 変数の入力フォーム */\r\n    const [varFormList, setVarFormList] = useState<FormProps[]>([]);\r\n    // const [formJsxList, setFaormJsxList] = useState<JSX.Element[]>([]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as FactoryUtil.NodeParamItem;\r\n        setFormulaItems(param.formulaItems.slice());\r\n        setVarFormList(param.values.map(v => {\r\n            return {\r\n                inputType: { value: v.type, errors: [] },\r\n                value: { value: v.value, errors: [] }\r\n            }\r\n        }));\r\n    };\r\n\r\n    const fieldKeyList = useMemo(() => {\r\n        const parentType = (node.parent?.data as FactoryUtil.WrapNode).type;\r\n        switch (parentType) {\r\n            case 'send-mng': {\r\n                const isIterate = (node.parent?.parent?.children[0].data as FactoryUtil.WrapNode).type === 'iterate-mng';\r\n                const keys: string[] = [];\r\n                keys.push('vec_x');\r\n                keys.push('vec_y');\r\n                keys.push('radian');\r\n                keys.push('length');\r\n                keys.push('limit');\r\n                if (isIterate) {\r\n                    keys.push('loop_count');\r\n                    keys.push('loop_iterator');\r\n                }\r\n                return keys;\r\n            }\r\n        }\r\n        return [];\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        mappingForm();\r\n    }, [node]);\r\n\r\n    /** 引数リスト */\r\n    const argumentList = useMemo(() => {\r\n        const getTargetWrap = () => {\r\n            switch (wrap.type) {\r\n                case 'visual-item':\r\n                case 'behavior-item': {\r\n                    return node.parent?.parent?.children[0].data as FactoryUtil.WrapNode;\r\n                }\r\n                case 'iterate-item':\r\n                case 'send-item': {\r\n                    return node.parent?.parent?.parent?.parent?.parent?.children[0].data as FactoryUtil.WrapNode;\r\n                }\r\n            }\r\n        }\r\n        const targetWrap = getTargetWrap();\r\n        if (targetWrap == undefined || targetWrap.type !== 'argument-mng') return [];\r\n\r\n        // console.log((targetWrap.data as FactoryUtil.NodeArgumentManager).args);\r\n        return (targetWrap.data as FactoryUtil.NodeArgumentManager).args.map(arg => {\r\n            const item = arg.data as FactoryUtil.NodeArgumentItem;\r\n            return item.name;\r\n        });\r\n    }, [node]);\r\n\r\n    useEffect(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (item === 'var') num++;\r\n        });\r\n\r\n        if (varFormList.length < num) {\r\n            const addNum = num - varFormList.length;\r\n            for (let i = 0; i < addNum; i++) varFormList.push({\r\n                inputType: { value: 'direct', errors: [] },\r\n                value: { value: '', errors: [] }\r\n            });\r\n            setVarFormList(varFormList.slice());\r\n        } else if (varFormList.length > num) {\r\n            const delNum = varFormList.length - num;\r\n            for (let i = 0; i < delNum; i++) varFormList.splice(varFormList.length - delNum, delNum);\r\n            setVarFormList(varFormList.slice());\r\n        }\r\n    }, [formulaItems]);\r\n\r\n    /** 「(」の数-「)」の数 */\r\n    const parenthesisBalance = useMemo(() => {\r\n        let num = 0;\r\n        formulaItems.forEach((item) => {\r\n            if (['(', 'rand(', 'integer('].includes(item)) num++;\r\n            else if (item === ')') num--;\r\n        });\r\n        return num;\r\n    }, [formulaItems]);\r\n\r\n    /** 値の入力フォームのJSX */\r\n    const formJsxList = useMemo(() => {\r\n        return varFormList.map((v, i) => {\r\n\r\n            const getValueForm = (): JSX.Element => {\r\n                const type = v.inputType.value as FactoryUtil.ParamInputType;\r\n                if (type === 'direct') {\r\n                    return (\r\n                        <FormUtil.TextField\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            isNumber\r\n                            isReadOnly={!isModify}\r\n                            width={178}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                        />\r\n                    );\r\n                } else {\r\n                    let list: string[] = [];\r\n                    if (type === 'argument') {\r\n                        list = argumentList;\r\n                    } else if (type === 'field') {\r\n                        list = fieldKeyList;\r\n                    } else if (type === 'constant') {\r\n                        list = PreviewUtil.ConstantValueMap.map(item => item.name);\r\n                    }\r\n                    return (\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={v.value}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                varFormList[i].value = checkable;\r\n                                setVarFormList(varFormList.slice());\r\n                            }}\r\n                            list={list.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n            return <FormUtil.FormRecord\r\n                key={i}\r\n                titleLabel={`var_${i}`}\r\n                labelWidth={90}\r\n                marginTop={i === 0 ? 4 : 0}\r\n                jsx={<>\r\n                    <FormUtil.Combobox\r\n                        checkable={v.inputType}\r\n                        width={142}\r\n                        isReadOnly={!isModify}\r\n                        setCheckable={(checkable) => {\r\n                            varFormList[i].inputType = checkable;\r\n                            if (isModify) {\r\n                                varFormList[i].value.value = checkable.value === 'direct' ? '0' : '';\r\n                            }\r\n                            setVarFormList(varFormList.slice());\r\n                        }}\r\n                        list={FactoryUtil.ParamInputTypes.map(item => {\r\n                            return { value: item, labelText: item };\r\n                        })}\r\n                    />\r\n                    {getValueForm()}\r\n                </>}\r\n            />;\r\n        });\r\n    }, [varFormList, isModify]);\r\n\r\n    const getFormulaJsx = () => {\r\n        let num = 0;\r\n        const jsxList: JSX.Element[] = [];\r\n        formulaItems.forEach((item) => {\r\n            if (jsxList.length > 0) {\r\n                jsxList.push(<span key={jsxList.length}>&nbsp;</span>);\r\n            }\r\n            if (item === 'var') {\r\n                jsxList.push(<_Var key={jsxList.length}>{`$\\{var_${num}}`}</_Var>);\r\n                num++;\r\n            } else {\r\n                jsxList.push(<_Sig key={jsxList.length}>{item}</_Sig>);\r\n            }\r\n        });\r\n        return jsxList;\r\n    }\r\n\r\n    const isLastVar = () => formulaItems.length > 0 && ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const isFormulaOK = parenthesisBalance === 0 && varFormList.length > 0 &&\r\n        ['var', ')'].includes(formulaItems[formulaItems.length - 1]);\r\n    const hasFormError = !isFormulaOK || varFormList.find(varForm => varForm.value.errors.length > 0) != undefined;\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            listName={'params'}\r\n            checkableFields={[]}\r\n            firstRegist={() => { }}\r\n            isInputOK={parenthesisBalance === 0 && !hasFormError}\r\n            modifyRegist={() => {\r\n                const data = wrap.data as FactoryUtil.NodeParamItem;\r\n                data.formulaItems = formulaItems.slice();\r\n                data.values = varFormList.map(varForm => {\r\n                    return {\r\n                        type: varForm.inputType.value as FactoryUtil.ParamInputType,\r\n                        value: varForm.value.value\r\n                    }\r\n                });\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"formula\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: '+',\r\n                            width: 50,\r\n                            isEnable: isModify && isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('+');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '-',\r\n                            width: 50,\r\n                            isEnable: isModify && isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('-');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '*',\r\n                            width: 50,\r\n                            isEnable: isModify && isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('*');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '/',\r\n                            width: 50,\r\n                            isEnable: isModify && isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('/');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '%',\r\n                            width: 50,\r\n                            isEnable: isModify && isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('%');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: '(',\r\n                            width: 35,\r\n                            isEnable: isModify && !isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('(');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: ')',\r\n                            width: 35,\r\n                            isEnable: isModify && isLastVar() && parenthesisBalance > 0,\r\n                            callback: () => {\r\n                                formulaItems.push(')');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'del',\r\n                            width: 60,\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            callback: () => {\r\n                                formulaItems.splice(formulaItems.length - 1, 1);\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'var',\r\n                            width: 70,\r\n                            isEnable: isModify && !isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('var');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'rand',\r\n                            width: 80,\r\n                            isEnable: isModify && !isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('rand(');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'integer',\r\n                            width: 80,\r\n                            isEnable: isModify && !isLastVar(),\r\n                            callback: () => {\r\n                                formulaItems.push('integer(');\r\n                                setFormulaItems(formulaItems.slice());\r\n                            }\r\n                        },\r\n                        {\r\n                            label: 'clear',\r\n                            isEnable: isModify && formulaItems.length > 0,\r\n                            width: 90,\r\n                            callback: () => {\r\n                                setFormulaItems([]);\r\n                            }\r\n                        },\r\n                    ]}\r\n                />\r\n                <_Formula\r\n                    isInvalid={!isFormulaOK}\r\n                >{getFormulaJsx()}</_Formula>\r\n                {formJsxList}\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactOprParam;\r\n\r\nconst _Formula = styled.div<{\r\n    isInvalid: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 12px);\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    overflow-wrap: break-word;\r\n    height: 100px;//calc(100% - 4px);\r\n    color: #585858;\r\n    border: solid 1px #7a7a7abf;\r\n    box-sizing: border-box;\r\n    background-color: #ffffff8b;\r\n    ${props => !props.isInvalid ? '' : css`\r\n        background-color: #ffe8628a;\r\n    `}\r\n    border-radius: 4px;\r\n    text-align: left;\r\n    padding: 0 0 0 4px;\r\n    vertical-align: top;\r\n    margin: 5px 0 0 6px;\r\n`;\r\nconst _Var = styled.span`\r\n    color: #e70013;\r\n`;\r\nconst _Sig = styled.span`\r\n    color: #3333339d;\r\n`;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetBehiviorMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamManager;\r\n\r\n\r\n    /** ベクトル指定か否か */\r\n    const isVector = useMemo(() => {\r\n        const swapPos = node.children.length - 2;\r\n        return ((node.children[swapPos].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name === 'vec_x';\r\n    }, [node]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Vector method'}\r\n                            width={300}\r\n                            isEnable={!isVector}\r\n                            isUse={isVector}\r\n                            callback={() => {\r\n                                const swapPos = node.children.length - 2;\r\n                                node.children.splice(swapPos, 2);\r\n                                {\r\n                                    const wrap = FactoryUtil.createParamWrap('behavior-item',\r\n                                        { name: 'vec_x', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] });\r\n                                    mng.params.push(wrap);\r\n                                    node.children.push(TreeUtil.createNode(wrap, node));\r\n                                }\r\n                                {\r\n                                    const wrap = FactoryUtil.createParamWrap('behavior-item',\r\n                                        { name: 'vec_y', formulaItems: ['var'], values: [{ type: 'direct', value: '-10' }] });\r\n                                    mng.params.push(wrap);\r\n                                    node.children.push(TreeUtil.createNode(wrap, node));\r\n                                }\r\n                                invalidate();\r\n                                setFocusNode({ ...node });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Direction method'}\r\n                            width={300}\r\n                            isEnable={isVector}\r\n                            isUse={!isVector}\r\n                            callback={() => {\r\n                                const swapPos = node.children.length - 2;\r\n                                node.children.splice(swapPos, 2);\r\n                                {\r\n                                    const wrap = FactoryUtil.createParamWrap('behavior-item',\r\n                                        { name: 'radian', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] });\r\n                                    mng.params.push(wrap);\r\n                                    node.children.push(TreeUtil.createNode(wrap, node));\r\n                                }\r\n                                {\r\n                                    const wrap = FactoryUtil.createParamWrap('behavior-item',\r\n                                        { name: 'length', formulaItems: ['var'], values: [{ type: 'direct', value: '10' }] });\r\n                                    mng.params.push(wrap);\r\n                                    node.children.push(TreeUtil.createNode(wrap, node));\r\n                                }\r\n                                invalidate();\r\n                                setFocusNode({ ...node });\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetBehiviorMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetVisualMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    /** ベクトル指定か否か */\r\n    // const isVector = useMemo(() => {\r\n    //     console.log(((node.children[3].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name);\r\n    //     return ((node.children[3].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name === 'vector-x';\r\n    // }, [node]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Particle Method'}\r\n                            width={300}\r\n                            isEnable={false}\r\n                            isUse={true}\r\n                            callback={() => {\r\n                                // node.children.splice(3, 2);\r\n                                // node.children.push(TreeUtil.createNode({type: 'behavior-item', data: {name: 'radius'}}, node));\r\n                                // node.children.push(TreeUtil.createNode({type: 'behavior-item', data: {name: 'length'}}, node));\r\n                                // invalidate();\r\n                                // setFocusNode({...node});\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetVisualMng;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactoryTab, { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\n\r\nconst FactDetInheritConnMng = () => {\r\n    const { node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const mng = (node.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeInheritConnectManager;\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Add Connector',\r\n                        callback: () => {\r\n                            const wrap: FactoryUtil.WrapNode = {\r\n                                type: 'connector',\r\n                                data: null\r\n                            }\r\n                            mng.connects.push(wrap);\r\n                            const newNode = TreeUtil.createNode(wrap, node);\r\n                            node.children.push(newNode);\r\n                            setFocusNode(newNode);\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetInheritConnMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetEffectMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n\r\n    /** ベクトル指定か否か */\r\n    // const isVector = useMemo(() => {\r\n    //     console.log(((node.children[0].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name);\r\n    //     return ((node.children[3].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name === 'vector-x';\r\n    // }, [node]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Disappear Method'}\r\n                            width={300}\r\n                            isEnable={false}\r\n                            isUse={true}\r\n                            callback={() => {\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetEffectMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst FactDetModulateMng = () => {\r\n    const { node, setFocusNode, invalidate, setModify, isModify } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n\r\n    /** ベクトル指定か否か */\r\n    // const isVector = useMemo(() => {\r\n    //     console.log(((node.children[0].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name);\r\n    //     return ((node.children[3].data as FactoryUtil.WrapNode).data as FactoryUtil.NodeParamItem).name === 'vector-x';\r\n    // }, [node]);\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={\r\n                        <FormUtil.Switch\r\n                            label={'Gravity Method'}\r\n                            width={300}\r\n                            isEnable={false}\r\n                            isUse={true}\r\n                            callback={() => {\r\n                            }}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetModulateMng;","import { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport ValidateUtil from \"../../../../utils/form/validateUtil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../../entry/systemEntry\";\r\nimport { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\nimport ModifyOperations from \"./common/modifyOperations\";\r\n\r\nconst ListName = 'mngs';\r\nconst FactDetInheritConnector = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const { rootData, node, setFocusNode, invalidate, setModify, isModify, removeSelf } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    const [condition, setCondition] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [connectType, setConnectType] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n    const [depend, setDepend] = useState<FormUtil.CheckableValue>({ value: '', errors: [] });\r\n\r\n    const [hasIterateNode] = useMemo(() => {\r\n        const list = node.children.map(el => {\r\n            return (el.data as FactoryUtil.WrapNode).type;\r\n        });\r\n        return [\r\n            list.includes('iterate-mng'),\r\n        ]\r\n    }, [node, node.children.length]);\r\n\r\n    const mappingForm = () => {\r\n        const param = wrap.data as FactoryUtil.NodeInheritConnector;\r\n        setCondition({ ...condition, value: param.condition });\r\n        setConnectType({ ...connectType, value: param.connectType });\r\n        setDepend({ ...depend, value: param.depend });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (wrap.data == null) {\r\n            setModify(true);\r\n        } else {\r\n            mappingForm();\r\n        }\r\n    }, [node]);\r\n\r\n    const isCreate = connectType.value === 'create';\r\n\r\n    const inheritList = useMemo((): string[] => {\r\n        const rootNode = rootData.data as FactoryUtil.NodeRoot;\r\n        const inheritMng = rootNode.inheritMng.data as FactoryUtil.NodeLogicManager;\r\n        return inheritMng.defs.map(wrap => {\r\n            return (wrap.data as FactoryUtil.NodeLogicItem).name;\r\n        });\r\n    }, [node]);\r\n\r\n    const getSendParamList = (): string[] => {\r\n        if (!isCreate) {\r\n            const rootNode = rootData.data as FactoryUtil.NodeRoot;\r\n            const inheritMng = rootNode.inheritMng.data as FactoryUtil.NodeLogicManager;\r\n            const dependItem = inheritMng.defs.find(wrap => {\r\n                return (wrap.data as FactoryUtil.NodeLogicItem).name === depend.value;\r\n            });\r\n            if (dependItem != undefined) {\r\n                const argWrap = (dependItem.data as FactoryUtil.NodeLogicItem).mngs[0];\r\n                if (argWrap.type === 'argument-mng') {\r\n                    return (argWrap.data as FactoryUtil.NodeArgumentManager).args.map(arg => {\r\n                        return (arg.data as FactoryUtil.NodeArgumentItem).name;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const setSendParams = (param: FactoryUtil.NodeInheritConnector) => {\r\n\r\n        const sendIndex = param.mngs[0].type === 'send-mng' ? 0 : 1;\r\n        const sendMng = param.mngs[sendIndex].data as FactoryUtil.NodeParamManager;\r\n        const sendNode = node.children[sendIndex];\r\n        sendMng.params = [];\r\n        sendNode.children = [];\r\n        getSendParamList().forEach(param => {\r\n            const paramWrap = FactoryUtil.createParamWrap('send-item',\r\n                { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n            );\r\n            sendMng.params.push(paramWrap);\r\n            sendNode.children.push(TreeUtil.createNode(paramWrap, sendNode));\r\n        });\r\n    }\r\n\r\n    const initConnectorNode = (param: FactoryUtil.NodeInheritConnector) => {\r\n        param.mngs = [];\r\n        node.children = [];\r\n        param.mngs.push({\r\n            type: 'send-mng',\r\n            data: {\r\n                params: []\r\n            } as FactoryUtil.NodeParamManager\r\n        });\r\n        if (isCreate) {\r\n            param.mngs.push({\r\n                type: 'inherit-cache-item',\r\n                data: {\r\n                    mngs: FactoryUtil.getDefaultLogicMngs(true)\r\n                } as FactoryUtil.NodeConnectInheritItem\r\n            });\r\n        }\r\n        wrap.data = param;\r\n\r\n        param.mngs.forEach(mng => {\r\n            const newNode = TreeUtil.createNode(mng, node);\r\n            const data = (newNode.data as FactoryUtil.WrapNode);\r\n            switch (data.type) {\r\n                case 'inherit-cache-item': {\r\n                    (data.data as FactoryUtil.NodeConnectInheritItem).mngs.forEach(mng => {\r\n                        const inheritNode = TreeUtil.createNode(mng, newNode);\r\n                        newNode.children.push(inheritNode);\r\n\r\n                        switch (mng.type) {\r\n                            case 'visual-mng': {\r\n                                (mng.data as FactoryUtil.NodeParamManager).params.forEach(param => {\r\n                                    inheritNode.children.push(TreeUtil.createNode(param, inheritNode));\r\n                                });\r\n                            } break;\r\n                            case 'behavior-mng': {\r\n                                (mng.data as FactoryUtil.NodeParamManager).params.forEach(param => {\r\n                                    inheritNode.children.push(TreeUtil.createNode(param, inheritNode));\r\n                                });\r\n                            } break;\r\n                        }\r\n                    });\r\n                } break;\r\n            }\r\n            node.children.push(newNode);\r\n        });\r\n        setSendParams(param);\r\n    }\r\n\r\n    return (<>\r\n        <ModifyOperations.Component\r\n            mappingForm={mappingForm}\r\n            listName={ListName}\r\n            checkableFields={[condition, connectType, depend]}\r\n            firstRegist={() => {\r\n                const param: FactoryUtil.NodeInheritConnector = {\r\n                    condition: condition.value as FactoryUtil.ConditionType,\r\n                    connectType: connectType.value as FactoryUtil.ConnectType,\r\n                    depend: depend.value,\r\n                    mngs: []\r\n                };\r\n                initConnectorNode(param);\r\n                invalidate();\r\n            }}\r\n            modifyRegist={() => {\r\n                const param = wrap.data as FactoryUtil.NodeInheritConnector;\r\n                const isChange = param.connectType !== connectType.value || param.depend !== depend.value;\r\n                param.condition = condition.value as FactoryUtil.ConditionType;\r\n                param.connectType = connectType.value as FactoryUtil.ConnectType;\r\n                param.depend = depend.value;\r\n                wrap.data = param;\r\n\r\n                if (isChange) {\r\n                    initConnectorNode(param);\r\n                }\r\n                invalidate();\r\n            }}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"param\"\r\n            innerJsx={<>\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Condition\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={condition}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setCondition}\r\n                            list={FactoryUtil.ConditionTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Inherit\"\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={connectType}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={(checkable) => {\r\n                                // createが選択されたらdependを空にする\r\n                                if (checkable.value === 'create') {\r\n                                    setDepend({ ...depend, value: '' });\r\n                                }\r\n                                setConnectType(checkable);\r\n                            }}\r\n                            list={FactoryUtil.ConnectTypes.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => ValidateUtil.checkRequired(value),\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n                <FormUtil.FormRecord\r\n                    titleLabel=\"Depend\"\r\n                    isEnable={connectType.value === 'depend'}\r\n                    jsx={\r\n                        <FormUtil.Combobox\r\n                            marginLeft={2}\r\n                            checkable={depend}\r\n                            width={178}\r\n                            isReadOnly={!isModify}\r\n                            setCheckable={setDepend}\r\n                            list={inheritList.map(item => {\r\n                                return { value: item, labelText: item };\r\n                            })}\r\n                            headBlank\r\n                            dependency={[connectType]}\r\n                            validates={[\r\n                                {\r\n                                    checker: (value) => {\r\n                                        return connectType.value !== 'depend' || ValidateUtil.checkRequired(value);\r\n                                    },\r\n                                    errorType: \"required\"\r\n                                }\r\n                            ]}\r\n                        />\r\n                    }\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"element\"\r\n            isEnable={!isModify}\r\n            innerJsx={<>\r\n                <FormUtil.Record\r\n                    textAlign=\"center\"\r\n                    jsx={<FormUtil.Switch\r\n                        label={'Iterate'}\r\n                        width={300}\r\n                        isUse={hasIterateNode}\r\n                        callback={() => {\r\n                            const data = (wrap.data as FactoryUtil.NodeLogicItem);\r\n                            if (hasIterateNode) {\r\n                                data.mngs.splice(0, 1);\r\n                                node.children.splice(0, 1);\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            } else {\r\n                                const newWrap: FactoryUtil.WrapNode = {\r\n                                    type: 'iterate-mng',\r\n                                    data: {\r\n                                        params: []\r\n                                    } as FactoryUtil.NodeParamManager\r\n                                };\r\n\r\n                                data.mngs.unshift(newWrap);\r\n                                const newNode = TreeUtil.createNode(newWrap, node);\r\n                                node.children.unshift(newNode);\r\n\r\n                                const loopCountWrap = FactoryUtil.createParamWrap('iterate-item',\r\n                                    { name: 'loop_count', formulaItems: ['var'], values: [{ type: 'direct', value: '1' }] });\r\n                                (newWrap.data as FactoryUtil.NodeParamManager).params.push(loopCountWrap);\r\n                                newNode.children.push(TreeUtil.createNode(loopCountWrap, newNode));\r\n                                setFocusNode({ ...node });\r\n                                invalidate();\r\n                            }\r\n                        }}\r\n                    />}\r\n                />\r\n            </>}\r\n        />\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<>\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'Clone in',\r\n                            isEnable: !isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Create a clone from the depended inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                const inheritMng = (rootData.data as FactoryUtil.NodeRoot).inheritMng.data as FactoryUtil.NodeLogicManager;\r\n                                                const inheritList = inheritMng.defs.map(def => def.data as FactoryUtil.NodeLogicItem);\r\n                                                const dependLogic = inheritList.find(inherit => inherit.name === depend.value);\r\n                                                if (dependLogic != undefined) {\r\n                                                    const cloneLogic = JSON.parse(JSON.stringify(dependLogic)) as FactoryUtil.NodeLogicItem;\r\n                                                    const connectItem: FactoryUtil.NodeConnectInheritItem = {\r\n                                                        mngs: cloneLogic.mngs\r\n                                                    };\r\n                                                    const newWrap: FactoryUtil.WrapNode = {\r\n                                                        type: 'inherit-cache-item',\r\n                                                        data: connectItem\r\n                                                    };\r\n                                                    (wrap.data as FactoryUtil.NodeInheritConnector).mngs.push(newWrap);\r\n                                                    const newNode = TreeUtil.createNode(newWrap, node)\r\n                                                    newNode.children = FactoryUtil.getChildrenElementNode(newNode);\r\n\r\n                                                    const param = wrap.data as FactoryUtil.NodeInheritConnector;\r\n                                                    param.connectType = 'create';\r\n                                                    param.depend = '';\r\n                                                    node.children.push(newNode);\r\n                                                }\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'Clone out',\r\n                            isEnable: isCreate,\r\n                            callback: () => {\r\n                                store.system.dialog = <ConfirmDialog.Component\r\n                                    message=\"Create a clone from the depended inherit logic.\"\r\n                                    buttons={[\r\n                                        {\r\n                                            label: 'Cancel',\r\n                                            callback: () => {\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            label: 'Conversion',\r\n                                            callback: () => {\r\n                                                const inheritMng = (rootData.data as FactoryUtil.NodeRoot).inheritMng.data as FactoryUtil.NodeLogicManager;\r\n                                                const inheritList = inheritMng.defs.map(def => def.data as FactoryUtil.NodeLogicItem);\r\n                                                const dependLogic = inheritList.find(inherit => inherit.name === depend.value);\r\n                                                if (dependLogic != undefined) {\r\n                                                    const cloneLogic = JSON.parse(JSON.stringify(dependLogic)) as FactoryUtil.NodeLogicItem;\r\n                                                    const connectItem: FactoryUtil.NodeConnectInheritItem = {\r\n                                                        mngs: cloneLogic.mngs\r\n                                                    };\r\n                                                    const newWrap: FactoryUtil.WrapNode = {\r\n                                                        type: 'inherit-cache-item',\r\n                                                        data: connectItem\r\n                                                    };\r\n                                                    (wrap.data as FactoryUtil.NodeInheritConnector).mngs.push(newWrap);\r\n                                                    const newNode = TreeUtil.createNode(newWrap, node)\r\n                                                    newNode.children = FactoryUtil.getChildrenElementNode(newNode);\r\n\r\n                                                    const param = wrap.data as FactoryUtil.NodeInheritConnector;\r\n                                                    param.connectType = 'create';\r\n                                                    param.depend = '';\r\n                                                    node.children.push(newNode);\r\n                                                }\r\n                                                store.system.dialog = null;\r\n                                                setStore({ ...store });\r\n                                                invalidate();\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                />;\r\n                                setStore({ ...store });\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                <FormUtil.ButtonRecord\r\n                    isCenter\r\n                    buttons={[\r\n                        {\r\n                            label: 'Delete',\r\n                            callback: () => {\r\n                                removeSelf(ListName);\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n            </>}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetInheritConnector;","import { useContext } from \"react\";\r\nimport FormUtil from \"../../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../../utils/treeUtil\";\r\nimport FactoryTab, { FactoryTreeContext } from \"../factoryTab\";\r\nimport FactoryUtil from \"../factoryUtil\";\r\n\r\nconst FactDetSendManager = () => {\r\n    const { rootData, node, setFocusNode, invalidate } = useContext(FactoryTreeContext);\r\n    const wrap = node.data as FactoryUtil.WrapNode;\r\n\r\n    const getSendParamList = (): string[] => {\r\n        const connector = (node.parent?.data as FactoryUtil.WrapNode).data as FactoryUtil.NodeInheritConnector;\r\n        const isCreate = connector.connectType === 'create';\r\n        let targetWrap: FactoryUtil.WrapNode | null = null;\r\n        if (!isCreate) {\r\n            const rootNode = rootData.data as FactoryUtil.NodeRoot;\r\n            const inheritMng = rootNode.inheritMng.data as FactoryUtil.NodeLogicManager;\r\n            const dependItem = inheritMng.defs.find(wrap => {\r\n                return (wrap.data as FactoryUtil.NodeLogicItem).name === connector.depend;\r\n            });\r\n            if (dependItem != undefined) targetWrap = dependItem;\r\n        } else {\r\n            targetWrap = (node.parent?.children[node.parent?.children.length - 1].data as FactoryUtil.WrapNode)\r\n        }\r\n        if (targetWrap != null) {\r\n            const argWrap = (targetWrap.data as FactoryUtil.NodeLogicItem).mngs[0];\r\n            if (argWrap.type === 'argument-mng') {\r\n                return (argWrap.data as FactoryUtil.NodeArgumentManager).args.map(arg => {\r\n                    return (arg.data as FactoryUtil.NodeArgumentItem).name;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    const update = () => {\r\n        const sendParamList = getSendParamList();\r\n        const curSize = node.children.length;\r\n        const params = (wrap.data as FactoryUtil.NodeParamManager).params;\r\n        // 不要なパラメータを削除\r\n        for (let i = curSize - 1; i >= 0; i--) {\r\n            const name = (params[i].data as FactoryUtil.NodeParamItem).name;\r\n            if (!sendParamList.includes(name)) {\r\n                node.children.splice(i, 1);\r\n                params.splice(i, 1);\r\n            }\r\n        }\r\n        // 必要な存在しないパラメータを追加\r\n        const curParamList = params.map(param => {\r\n            return (param.data as FactoryUtil.NodeParamItem).name;\r\n        });\r\n        sendParamList.forEach(param => {\r\n            if (!curParamList.includes(param)) {\r\n                const paramWrap = FactoryUtil.createParamWrap('send-item',\r\n                    { name: param, formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] }\r\n                );\r\n                params.push(paramWrap);\r\n                node.children.push(TreeUtil.createNode(paramWrap, node));\r\n            }\r\n        });\r\n    }\r\n\r\n    return (<>\r\n        <FormUtil.BorderPanel\r\n            title=\"operation\"\r\n            innerJsx={<FormUtil.ButtonRecord\r\n                isCenter\r\n                buttons={[\r\n                    {\r\n                        label: 'Update Params',\r\n                        callback: () => {\r\n                            update();\r\n                            invalidate();\r\n                        }\r\n                    }\r\n                ]}\r\n            />}\r\n        />\r\n    </>);\r\n}\r\n\r\nexport default FactDetSendManager;","import { type } from \"os\";\r\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport Common from \"../common\";\r\nimport FactDetArgumentMng from \"./detail/factDetArgumentMng\";\r\nimport FactDetArgumentItem from \"./detail/factDetArgumentItem\";\r\nimport FactDetInheritMng from \"./detail/factDetInheritMng\";\r\nimport FactDetExtendMng from \"./detail/factDetExtendMng\";\r\nimport FactDetOriginMng from \"./detail/factDetOriginMng\";\r\nimport FactDetLogicItem from \"./detail/factDetLogicItem\";\r\nimport FactOprParam from \"./detail/factOprParam\";\r\nimport FactDetBehiviorMng from \"./detail/factDetBehiviorMng\";\r\nimport FactDetVisualMng from \"./detail/factDetVisualMng\";\r\nimport ValidateUtil from \"../../../utils/form/validateUtil\";\r\nimport FactDetInheritConnMng from \"./detail/factDetInheritConnMng\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport FactDetEffectMng from \"./detail/factDetEffectMng\";\r\nimport FactDetModulateMng from \"./detail/factDetModulateMng\";\r\nimport FactDetInheritConnector from \"./detail/factDetInheritConnector\";\r\nimport FactDetSendManager from \"./detail/factDetSendManager\";\r\n\r\nnamespace FactoryUtil {\r\n\r\n    export type DetailArgs = {\r\n        rootData: FactoryUtil.WrapNode;\r\n        node: TreeUtil.ElementNode;\r\n        setFocusNode: (node: TreeUtil.ElementNode) => void;\r\n        invalidate: () => void;\r\n        isModify: boolean;\r\n        setModify: (isModify: boolean) => void;\r\n        setRootData: React.Dispatch<React.SetStateAction<WrapNode>>;\r\n        removeSelf: (listName: string) => void;\r\n        // treeDisable: boolean;\r\n        // setTreeDisable: (treeDisable: boolean) => void;\r\n    }\r\n\r\n    /**\r\n     * 変数名チェック\r\n     * @param str 検証する文字列\r\n     * @returns 判定結果\r\n     */\r\n    export const checkFieldName = (str: string) => {\r\n        const list = '0123456789abcdefghijklmnopqrstuvwxyz_';\r\n        return !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].\r\n            includes(str.substring(0, 1)) && ValidateUtil.checkIncludesChars(str, list);\r\n    }\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'origin-mng' |\r\n        'inherit-mng' |\r\n        'origin-item' |\r\n        'inherit-item' |\r\n        'argument-mng' |\r\n        'argument-item' |\r\n        'visual-mng' |\r\n        'visual-item' |\r\n        'behavior-mng' |\r\n        'behavior-item' |\r\n        'extend-mng' |\r\n        'field-mng' |\r\n        'inherit-mng' |\r\n        'modulate-mng' |\r\n        'modulate-item' |\r\n        'connect-mng' |\r\n        'connector' |\r\n        'inherit-cache-item' |\r\n        'effect-mng' |\r\n        'effect-item' |\r\n        'iterate-mng' |\r\n        'iterate-item' |\r\n        'send-mng' |\r\n        'send-item'\r\n        ;\r\n\r\n    export const ArgTypes = ['int', 'float', 'color'] as const;\r\n    export type ArgumentType = typeof ArgTypes[number];\r\n\r\n\r\n    export const ParamInputTypes = ['direct', 'constant', 'argument', 'field'] as const;\r\n    export type ParamInputType = typeof ParamInputTypes[number];\r\n\r\n    export type ParamProps = {\r\n        type: ParamInputType;\r\n        value: string;\r\n    }\r\n\r\n    export type WrapNode = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        // caches: Common.Cache[];\r\n        seedMng: WrapNode;\r\n        inheritMng: WrapNode;\r\n    }\r\n    export type NodeLogicManager = {\r\n        defs: WrapNode[];\r\n    }\r\n    export type NodeLogicItem = {\r\n        name: string;\r\n        mngs: WrapNode[];\r\n    }\r\n    export type NodeConnectInheritItem = {\r\n        mngs: WrapNode[];\r\n    }\r\n    export type NodeParamManager = {\r\n        params: WrapNode[];\r\n    }\r\n    // export type NodeVisualManager = {\r\n    //     params: WrapNode[];\r\n    // }\r\n    export type NodeParamItem = {\r\n        name: string;\r\n        formulaItems: string[];\r\n        values: ParamProps[];\r\n\r\n    }\r\n\r\n    export type NodeArgumentItem = {\r\n        name: string;\r\n        valueType: ArgumentType;\r\n        defVal?: number;\r\n    }\r\n    export type NodeArgumentManager = {\r\n        args: WrapNode[];\r\n    }\r\n    export type NodeFieldManager = {\r\n        args: WrapNode[];\r\n    }\r\n\r\n    export type NodeExtendManager = {\r\n        mngs: WrapNode[];\r\n    }\r\n\r\n    // export type NodeInheritManager = {\r\n    //     defs: WrapNode[];\r\n    // }\r\n    export type NodeInheritConnectManager = {\r\n        connects: WrapNode[];\r\n    }\r\n    export type NodeInheritConnector = {\r\n        condition: ConditionType;\r\n        connectType: ConnectType;\r\n        depend: string;\r\n        mngs: WrapNode[];\r\n    }\r\n\r\n    export const createParamWrap = (type: NodeType, paramDataList: NodeParamItem): WrapNode => {\r\n        return { type: type, data: paramDataList };\r\n    }\r\n    export const createParamWrapList = (type: NodeType, paramDataList: NodeParamItem[]): WrapNode[] => {\r\n        return paramDataList.map(data => {\r\n            return { type: type, data: data };\r\n        });\r\n    }\r\n\r\n    export const createVisualParams = (): WrapNode[] => {\r\n        return createParamWrapList('visual-item', [\r\n            { name: 'radius', formulaItems: ['var'], values: [{ type: 'direct', value: '20' }] },\r\n            { name: 'color_r', formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: 'color_g', formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: 'color_b', formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n            { name: 'color_a', formulaItems: ['var'], values: [{ type: 'direct', value: '255' }] },\r\n        ]);\r\n    }\r\n\r\n    export const createBehaviorParams = (isInherit: boolean): WrapNode[] => {\r\n        const list: NodeParamItem[] = [];\r\n        list.push({ name: 'limit', formulaItems: ['var'], values: [{ type: 'direct', value: '30' }] });\r\n        if (!isInherit) {\r\n            list.push({ name: 'pos_x', formulaItems: ['var', '/', 'var'], values: [{ type: 'constant', value: 'screen_width' }, { type: 'direct', value: '2' }] });\r\n            list.push({ name: 'pos_y', formulaItems: ['var', '+', 'var'], values: [{ type: 'constant', value: 'screen_height' }, { type: 'direct', value: '20' }] });\r\n        }\r\n        list.push({ name: 'vec_x', formulaItems: ['var'], values: [{ type: 'direct', value: '0' }] });\r\n        list.push({ name: 'vec_y', formulaItems: ['var'], values: [{ type: 'direct', value: '-10' }] });\r\n        return createParamWrapList('behavior-item', list);\r\n    }\r\n\r\n    export const getDefaultLogicMngs = (isInherit: boolean): WrapNode[] => {\r\n        return [\r\n            {\r\n                type: 'visual-mng',\r\n                data: {\r\n                    params: FactoryUtil.createVisualParams()\r\n                } as FactoryUtil.NodeParamManager\r\n            },\r\n            {\r\n                type: 'behavior-mng',\r\n                data: {\r\n                    params: FactoryUtil.createBehaviorParams(isInherit)\r\n                } as FactoryUtil.NodeParamManager\r\n            }\r\n        ];\r\n    }\r\n\r\n    export const getInitialData = (): WrapNode => {\r\n        return {\r\n            type: 'root',\r\n            data: {\r\n                seedMng: {\r\n                    type: 'origin-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as NodeLogicManager\r\n                } as WrapNode,\r\n                inheritMng: {\r\n                    type: 'inherit-mng',\r\n                    data: {\r\n                        defs: []\r\n                    } as NodeLogicManager\r\n                } as WrapNode\r\n            } as NodeRoot\r\n        }\r\n    }\r\n\r\n    const COLOR_ROOT = '#a1a1a1';\r\n    const COLOR_METHOD = '#cca67b';\r\n    const COLOR_MNG = '#37a2bd';\r\n    const COLOR_LIST = '#b85f5f';\r\n    const COLOR_ITEM = '#ae628c';\r\n    const COLOR_PARAM = '#8dae62';\r\n\r\n    export const getNodeDisplayJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapNode;\r\n        switch (wrap.type) {\r\n            case 'root': {\r\n                return <_Category backgroundColor={COLOR_ROOT}>Logic</_Category>;\r\n            }\r\n            case 'origin-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Origin Manager</_Category>;\r\n            }\r\n            case 'inherit-mng': {\r\n                return <_Category backgroundColor={COLOR_METHOD}>Inherit Manager</_Category>;\r\n            }\r\n            case 'visual-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Visual</_Category>;\r\n            }\r\n            case 'extend-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Extend</_Category>;\r\n            }\r\n            case 'modulate-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Modulate</_Category>;\r\n            }\r\n            case 'origin-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Origin</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-item': {\r\n                let name = '...';\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeLogicItem;\r\n                    name = data.name;\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Inherit</_Category>\r\n                    <_EditableValue>{name}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'inherit-cache-item': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Inherit</_Category>;\r\n            }\r\n            case 'argument-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Argument Manager</_Category>;\r\n            }\r\n            case 'behavior-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Behavior</_Category>;\r\n            }\r\n            case 'connect-mng': {\r\n                return <_Category backgroundColor={COLOR_LIST}>Connect Manager</_Category>;\r\n            }\r\n            case 'connector': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeInheritConnector;\r\n                    detailJsx = <span>{`${data.condition} ${data.connectType}`}</span>;\r\n                    if (data.connectType === 'depend') {\r\n                        detailJsx = <span>{`${data.condition} ${data.connectType}`}: <_Field>{data.depend}</_Field></span>;\r\n                    }\r\n                }\r\n                return (<>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Connector</_Category>\r\n                    {detailJsx == undefined ? <></> : <_EditableValue>{detailJsx}</_EditableValue>}\r\n                </>);\r\n            }\r\n            case 'effect-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Effect</_Category>;\r\n            }\r\n            case 'modulate-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Modulate</_Category>;\r\n            }\r\n            case 'visual-item':\r\n            case 'send-item':\r\n            case 'iterate-item':\r\n            case 'effect-item':\r\n            case 'modulate-item':\r\n            case 'behavior-item': {\r\n                const data = wrap.data as NodeParamItem;\r\n                let result: JSX.Element[] = [];\r\n                let varCnt = 0;\r\n                data.formulaItems.forEach((formula, i) => {\r\n                    let str = <_Signature key={i}>{formula}</_Signature>;\r\n                    if (formula === 'var') {\r\n                        const v = data.values[varCnt];\r\n                        if (v.type !== 'direct') str = <_Field key={i}>{`$\\{${v.value}}`}</_Field>;\r\n                        else str = <span key={i}>{v.value}</span>;\r\n                        varCnt++;\r\n                    }\r\n                    result.push(str);\r\n                });\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_PARAM}>Param<_Detail>&nbsp;[{data.name}]</_Detail></_Category>\r\n                    <_EditableValue>{result}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'argument-item': {\r\n                let detailJsx = <span>...</span>;\r\n                if (wrap.data != null) {\r\n                    const data = wrap.data as NodeArgumentItem;\r\n                    detailJsx = <span>{data.name}<_ValueType>&nbsp;({data.valueType})</_ValueType></span>\r\n                }\r\n                return <>\r\n                    <_Category backgroundColor={COLOR_ITEM}>Argument<_Detail></_Detail></_Category>\r\n                    <_EditableValue>{detailJsx}</_EditableValue>\r\n                </>;\r\n            }\r\n            case 'iterate-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Iterate</_Category>;\r\n            }\r\n            case 'send-mng': {\r\n                return <_Category backgroundColor={COLOR_MNG}>Send</_Category>;\r\n            }\r\n        }\r\n        return <_Category backgroundColor={'#ffffff'}>XXXXX</_Category>;\r\n    }\r\n\r\n    export const getTypeName = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return '';\r\n        const type = (node.data as WrapNode).type;\r\n        switch (type) {\r\n            case 'root': return 'Root';\r\n            case 'origin-mng': return 'Origin Manager';\r\n            case 'inherit-mng': return 'Inherit Manager';\r\n            case 'origin-item': return 'Origin Item';\r\n            case 'inherit-item': return 'Inherit Item';\r\n            case 'argument-mng': return 'Argument Manager';\r\n            case 'visual-mng': return 'Visual Manager';\r\n            case 'behavior-item': return 'Behavior Item';\r\n            case 'visual-item': return 'Visual Item';\r\n            case 'argument-item': return 'Argument Item';\r\n            case 'extend-mng': return 'Extend Manager';\r\n            case 'behavior-mng': return 'Behivior Manager';\r\n            case 'connect-mng': return 'Inherit Connect Manager';\r\n            case 'connector': return 'Inherit Connector';\r\n            case 'inherit-cache-item': return 'Inherit Cache Item';\r\n            case 'effect-mng': return 'Effect Manager';\r\n            case 'modulate-mng': return 'Modulate Manager';\r\n            case 'iterate-mng': return 'Iterate Manager';\r\n            case 'send-mng': return 'Send Manager';\r\n            case 'iterate-item': return 'Iterate Item';\r\n            case 'send-item': return 'Send Item';\r\n            case 'modulate-item': return 'Modulate Item';\r\n            case 'effect-item': return 'Effect Item';\r\n        }\r\n    }\r\n\r\n    export const getDetailComponent = (node: TreeUtil.ElementNode | null) => {\r\n        if (node == null) return <></>;\r\n        const type = (node.data as WrapNode).type;\r\n        switch (type) {\r\n            case 'root': return <></>;\r\n            case 'origin-mng': return <FactDetOriginMng />;\r\n            case 'inherit-mng': return <FactDetInheritMng />;\r\n            case 'origin-item': return <FactDetLogicItem />;\r\n            case 'inherit-item': return <FactDetLogicItem />;\r\n            case 'argument-mng': return <FactDetArgumentMng />;\r\n            case 'argument-item': return <FactDetArgumentItem />;\r\n            case 'visual-mng': return <FactDetVisualMng />;\r\n            case 'extend-mng': return <FactDetExtendMng />;\r\n            case 'behavior-mng': return <FactDetBehiviorMng />;\r\n            case 'connect-mng': return <FactDetInheritConnMng />;\r\n            case 'effect-mng': return <FactDetEffectMng />;\r\n            case 'modulate-mng': return <FactDetModulateMng />;\r\n            case 'connector': return <FactDetInheritConnector />;\r\n            case 'inherit-cache-item': return <FactDetLogicItem />;\r\n            case 'send-mng': return <FactDetSendManager />;\r\n            case 'iterate-item':\r\n            case 'visual-item':\r\n            case 'behavior-item':\r\n            case 'effect-item':\r\n            case 'modulate-item':\r\n            case 'send-item': return <FactOprParam />;\r\n        }\r\n    }\r\n\r\n    // export type ConstantProps = {\r\n    //     name: string;\r\n    //     value: number;\r\n    // }\r\n    // export const ConstantList: ConstantProps[] = [\r\n    //     { name: 'screen_width', value: 550 },\r\n    //     { name: 'screen_height', value: 550 },\r\n    //     { name: 'pi', value: 3.14159265359 },\r\n    //     { name: 'radian_round', value: 3.14159265359 * 2 }\r\n    // ];\r\n\r\n    export const ConnectTypes = ['create', 'depend'] as const;\r\n    export type ConnectType = typeof ConnectTypes[number];\r\n\r\n    export const ConditionTypes = ['sustain', 'limit'] as const;\r\n    export type ConditionType = typeof ConditionTypes[number];\r\n\r\n    export const getChildrenElementNode = (node: TreeUtil.ElementNode): TreeUtil.ElementNode[] => {\r\n        const wrapNode = node.data as WrapNode;\r\n        console.log(wrapNode.type);\r\n        const get = (listName: string) => {\r\n            return ((wrapNode.data)[listName] as FactoryUtil.WrapNode[]).map(wrap => {\r\n                const elementNode = TreeUtil.createNode(wrap, node);\r\n                elementNode.children = getChildrenElementNode(elementNode);\r\n                return elementNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            // case 'root': {\r\n            //     const data = wrapNode.data as FactoryUtil.NodeRoot;\r\n            //     return [\r\n            //         ,\r\n            //         { data: data.seedMng, children: getChildrenElementNode(data.seedMng) },\r\n            //         { data: data.inheritMng, children: getChildrenElementNode(data.inheritMng) }\r\n            //     ];\r\n            // }\r\n            case 'origin-mng':\r\n            case 'inherit-mng': return get('defs');\r\n            case 'extend-mng':\r\n            case 'origin-item':\r\n            case 'connector':\r\n            case 'inherit-cache-item':\r\n            case 'inherit-item': return get('mngs');\r\n            case 'effect-mng':\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'modulate-mng':\r\n            case 'effect-mng':\r\n            case 'iterate-mng':\r\n            case 'modulate-mng': return get('params');\r\n            case 'connect-mng': return get('connects');\r\n            case 'argument-mng': return get('args');\r\n        }\r\n        return [];\r\n    };\r\n\r\n    export const getChildrenDataNode = (wrapNode: FactoryUtil.WrapNode): TreeUtil.DataNode[] => {\r\n        const get = (listName: string) => {\r\n\r\n            return ((wrapNode.data)[listName] as FactoryUtil.WrapNode[]).map(wrap => {\r\n                const treeNode: TreeUtil.DataNode = {\r\n                    data: wrap,\r\n                    children: getChildrenDataNode(wrap)\r\n                };\r\n                return treeNode;\r\n            });\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as FactoryUtil.NodeRoot;\r\n                return [\r\n                    { data: node.seedMng, children: getChildrenDataNode(node.seedMng) },\r\n                    { data: node.inheritMng, children: getChildrenDataNode(node.inheritMng) }\r\n                ];\r\n            }\r\n            case 'origin-mng':\r\n            case 'inherit-mng': return get('defs');\r\n            case 'extend-mng':\r\n            case 'origin-item':\r\n            case 'connector':\r\n            case 'inherit-cache-item':\r\n            case 'inherit-item': return get('mngs');\r\n            case 'effect-mng':\r\n            case 'send-mng':\r\n            case 'behavior-mng':\r\n            case 'visual-mng':\r\n            case 'modulate-mng':\r\n            case 'effect-mng':\r\n            case 'iterate-mng':\r\n            case 'modulate-mng': return get('params');\r\n            case 'connect-mng': return get('connects');\r\n            case 'argument-mng': return get('args');\r\n        }\r\n        return [];\r\n    };\r\n}\r\n\r\nexport default FactoryUtil;\r\n\r\nconst _Category = styled.div<{\r\n    backgroundColor: string;\r\n}>`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: ${props => props.backgroundColor};\r\n    /* width: 100%; */\r\n    border-radius: 4px 0 0 4px;\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n    border: solid 1px #000000d2;\r\n`;\r\nconst _Detail = styled.span`\r\n    color: #000b69bd;\r\n`;\r\n\r\nconst _EditableValue = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #0c0c0c;\r\n    color: #ebebeb;\r\n    border-radius: 0 4px 4px 0;\r\n    /* width: 100%; */\r\n    margin: 5px 0 0 0;\r\n    padding: 0 10px;\r\n`;\r\nconst _ValueType = styled.span`\r\n    color: #fff9d6b9;\r\n`;\r\nconst _Signature = styled.span`\r\n    color: #ffffff78;\r\n`;\r\nconst _Field = styled.span`\r\n    color: #ff2d2d;\r\n`;","import { type } from \"os\";\r\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport DataUtil from \"../../../utils/dataUtil\";\r\nimport FormUtil from \"../../../utils/form/formUtiil\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport ConfirmDialog from \"../../dialog/confirmDialog\";\r\nimport { GlobalContext } from \"../../entry/systemEntry\";\r\nimport Common from \"../common\";\r\nimport LogicPreviewFrame from \"../preview/logicPreviewFrame\";\r\nimport FactoryUtil from \"./factoryUtil\";\r\n\r\n\r\nexport const FactoryTreeContext = createContext({} as FactoryUtil.DetailArgs);\r\n\r\nconst FactoryTab = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [rootData, setRootData] = useState(FactoryUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    // const [treeDisable, setTreeDisable] = useState(false);\r\n    const [isModify, setModify] = useState<boolean>(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n    const [fileHandle, setFileHandle] = useState<FileSystemFileHandle | null>(null);\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: FactoryUtil.getChildrenDataNode(rootData)\r\n        }\r\n    }, [rootData]);\r\n\r\n\r\n    const loadFile = () => {\r\n        (async () => {\r\n            const [fileHandle] = await window.showOpenFilePicker();\r\n            const file = await fileHandle.getFile();\r\n            const fileContents = await file.text();\r\n            setFileHandle(fileHandle);\r\n            const text = DataUtil.unZip(fileContents);\r\n            console.log(text);\r\n            setRootData(JSON.parse(text));\r\n            store.system.dialog = <ConfirmDialog.Component message=\"Successfully file loaded!\" />;\r\n            setStore({ ...store });\r\n        })();\r\n    }\r\n\r\n    const saveFile = () => {\r\n        const options = {\r\n            types: [\r\n                {\r\n                    accept: {\r\n                        'text/plain': ['.plgc'],\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        const plainData = JSON.stringify(rootData);\r\n        if (fileHandle != null) {\r\n            (async () => {\r\n                //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                const writable = await fileHandle.createWritable();\r\n                //テキストデータの書き込み\r\n                const text = DataUtil.gZip(plainData);\r\n                await writable.write(text);\r\n                //ファイルを閉じる\r\n                await writable.close();\r\n                setFileHandle(fileHandle);\r\n                // this.score.setScoreState({ ...state });\r\n                const file = await fileHandle.getFile();\r\n                store.system.dialog = <ConfirmDialog.Component message=\"successfully overwritten!\" />;\r\n                setStore({ ...store });\r\n            })();\r\n        } else {\r\n            window.showSaveFilePicker(options).then((handle) => {\r\n                (async () => {\r\n                    //ファイルへ書き込むための FileSystemWritableFileStream を作成\r\n                    const writable = await handle.createWritable();\r\n                    //テキストデータの書き込み\r\n                    const text = DataUtil.gZip(plainData);\r\n                    await writable.write(text);\r\n                    //ファイルを閉じる\r\n                    await writable.close();\r\n                    setFileHandle(handle);\r\n                    store.system.dialog = <ConfirmDialog.Component message=\"Successfully written to file!\" />;\r\n                    setStore({ ...store });\r\n                })();\r\n            }).catch(() => {\r\n                console.log('キャンセルされました');\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 操作中のOrigin要素の取得する\r\n     * Originの下でなかった場合はnullを返す\r\n     */\r\n    const getOrigin = () => {\r\n        let cur: TreeUtil.ElementNode | null = focusNode;\r\n        while (cur != null) {\r\n            if ((cur.data as FactoryUtil.WrapNode).type === 'origin-item') return cur;\r\n            cur = cur.parent;\r\n        };\r\n        return null;\r\n    }\r\n    const originNode = getOrigin();\r\n    /**\r\n     * プレビューダイアログを表示する\r\n     */\r\n    const openPreviewDialog = () => {\r\n        store.system.dialog = (\r\n            <LogicPreviewFrame.Component\r\n                node={originNode as TreeUtil.ElementNode}\r\n                rootData={rootData}\r\n            />\r\n        );\r\n        setStore({ ...store });\r\n    }\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n            onKeyDown={(e) => {\r\n                // console.log(e.key);\r\n                if (isModify || focusNode == null) return;\r\n                switch (e.key) {\r\n                    case 'ArrowRight': {\r\n                        if (focusNode.children.length > 0) {\r\n                            if (!focusNode.isOpen) focusNode.isOpen = true;\r\n                            else setFocusNode(focusNode.children[0]);\r\n                            setInvalidate({});\r\n                        }\r\n                    } break;\r\n                    case 'ArrowLeft': {\r\n                        if (focusNode.isOpen) focusNode.isOpen = false;\r\n                        else {\r\n                            if (focusNode.parent != null) setFocusNode(focusNode.parent);\r\n                        }\r\n                        setInvalidate({});\r\n                    } break;\r\n                    case 'ArrowUp': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n) {\r\n                                    if(i === 0) {\r\n                                        setFocusNode(focusNode.parent);\r\n                                        setInvalidate({});\r\n                                    } else {\r\n                                        setFocusNode(list[i - 1]);\r\n                                        setInvalidate({});\r\n                                    }\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case 'ArrowDown': {\r\n                        if (focusNode.parent != null) {\r\n                            const list = focusNode.parent.children;\r\n                            list.forEach((n, i) => {\r\n                                if (focusNode == n && i < list.length - 1) {\r\n                                    setFocusNode(list[i + 1]);\r\n                                    setInvalidate({});\r\n                                    return 1;\r\n                                }\r\n                            });\r\n                        }\r\n                    } break;\r\n                    case ' ': {\r\n                        if (originNode != null) openPreviewDialog();\r\n                    } break;\r\n                }\r\n            }}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    <_TreeHeadHalf>\r\n                        <FormUtil.ButtonRecord\r\n                            isCenter\r\n                            buttons={[\r\n                                {\r\n                                    label: 'Preview',\r\n                                    isEnable: originNode != null,\r\n                                    callback: openPreviewDialog\r\n                                }\r\n                            ]}\r\n                        />\r\n                    </_TreeHeadHalf>\r\n                    <_TreeHeadHalf>\r\n                        <FormUtil.ButtonRecord\r\n                            isCenter\r\n                            buttons={[\r\n                                {\r\n                                    label: 'Save',\r\n                                    callback: saveFile\r\n                                },\r\n                                {\r\n                                    label: 'Load',\r\n                                    callback: loadFile\r\n                                }\r\n                            ]}\r\n                        />\r\n                    </_TreeHeadHalf>\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return FactoryUtil.getNodeDisplayJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={isModify}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                <_DetailDiv>\r\n                    <_DetailHeader>\r\n                        <_DetailHeaderLabel>{FactoryUtil.getTypeName(focusNode)}</_DetailHeaderLabel>\r\n                    </_DetailHeader>\r\n                    <FactoryTreeContext.Provider value={{\r\n                        rootData,\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        isModify,\r\n                        setModify,\r\n                        // treeDisable,\r\n                        setRootData,\r\n                        removeSelf: (listName: string) => {\r\n                            const node = focusNode as TreeUtil.ElementNode;\r\n                            let index = -1;\r\n                            node.parent?.children.forEach((n, i) => {\r\n                                if (n == node) index = i;\r\n                            });\r\n                            node.parent?.children.splice(index, 1);\r\n                            const list = ((node.parent?.data as FactoryUtil.WrapNode).data[listName] as FactoryUtil.WrapNode[]);\r\n                            list.splice(index, 1);\r\n                            setFocusNode(node.parent as TreeUtil.ElementNode);\r\n                            invalidate();\r\n                        }\r\n                        // setTreeDisable\r\n                    }}>\r\n                        <_DetailMainDiv>{FactoryUtil.getDetailComponent(focusNode)}</_DetailMainDiv>\r\n                    </FactoryTreeContext.Provider>\r\n                </_DetailDiv>\r\n            </_PropsDiv>\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default FactoryTab;\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #6c8186;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #d5d4d87b;\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _TreeHeadHalf = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    background-color: #7fbdb47a;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #9fa9b6;\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _DetailDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\nconst _DetailHeader = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #b4b29e; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _DetailHeaderLabel = styled.div`\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n    color: #a10000;\r\n    /* background-color: #bbd0d3; */\r\n    border: solid 1px #a10000;\r\n    box-sizing: border-box;\r\n    width: calc(100% - 20px);\r\n    margin: 5px 0 0 10px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _DetailMainDiv = styled.div`\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 44px);\r\n    margin: 0 0 0 4px;\r\n    background-color: #cfd3cc;\r\n    border: solid 1px #0026a1;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;","\r\nconst ManageTab = () => {\r\n\r\n    return (<></>);\r\n}\r\n\r\nexport default ManageTab;","import { type } from \"os\";\r\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles from \"../../../base/design/styles\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport Common from \"../common\";\r\n\r\nnamespace TimelineUtil {\r\n\r\n\r\n    export type NodeType =\r\n        'root' |\r\n        'bv'\r\n        ;\r\n\r\n    export type WrapNode = {\r\n        type: NodeType;\r\n        data: any;\r\n    }\r\n\r\n    export type NodeRoot = {\r\n        // caches: Common.Cache[];\r\n    }\r\n\r\n    export const getInitialData = (): WrapNode => {\r\n        return {\r\n            type: 'root',\r\n            data: {}\r\n        }\r\n    }\r\n\r\n    export const getNodeJsx = (node: TreeUtil.ElementNode, isFocus: boolean) => {\r\n        const wrap = node.data as WrapNode;\r\n        switch(wrap.type) {\r\n            case 'root': {\r\n                return <_Wrap>Timeline</_Wrap>;\r\n            }\r\n        }\r\n        return <_Wrap>XXXXX</_Wrap>;\r\n    }\r\n}\r\n\r\nexport default TimelineUtil;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #37a2bd;\r\n    width: 100%;\r\n    height: 100%;\r\n    ${Styles.CSS_LABEL_MIDIUM}\r\n`;","import { type } from \"os\";\r\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport TreeUtil from \"../../../utils/treeUtil\";\r\nimport Common from \"../common\";\r\nimport TimelineUtil from \"./timelineUtil\";\r\n\r\nconst TimelineTab = () => {\r\n\r\n\r\n    const [rootData, setRootData] = useState(TimelineUtil.getInitialData());\r\n    const [focusNode, setFocusNode] = useState<TreeUtil.ElementNode | null>(null);\r\n    const [treeDisable, setTreeDisable] = useState(false);\r\n    const [invalidate, setInvalidate] = useState<any>(null);\r\n\r\n\r\n    const getChildnre = (wrapNode: TimelineUtil.WrapNode): TreeUtil.DataNode[] => {\r\n        const list: TreeUtil.DataNode[] = [];\r\n        const add = (type: TimelineUtil.NodeType, nodeData: any) => {\r\n\r\n        }\r\n        switch (wrapNode.type) {\r\n            case 'root': {\r\n                const node = wrapNode.data as TimelineUtil.NodeRoot;\r\n                // add()\r\n            } break;\r\n        }\r\n        return list;\r\n    }\r\n\r\n    const rootDataNode: TreeUtil.DataNode = useMemo(() => {\r\n        return {\r\n            data: rootData,\r\n            children: getChildnre(rootData)\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <_Wrap\r\n            tabIndex={0}\r\n        >\r\n            <_TreeDiv>\r\n                <_TreeHead>\r\n                    {/* <HierarchyNavi cur={focusNode}/> */}\r\n                </_TreeHead>\r\n                <_TreeBody>\r\n                    <TreeUtil.Frame\r\n                        rootDataNode={rootDataNode}\r\n                        clickEvent={(node: TreeUtil.ElementNode) => {\r\n                            // setFocusNode(node);\r\n                        }}\r\n                        getLabelJsx={(node: TreeUtil.ElementNode) => {\r\n                            // console.log(focusNode);\r\n                            // console.log(node);\r\n                            // const isActive = focusNode == node || (focusNode?.depth===0 && focusNode.data == rootDataNode.data)\r\n                            return TimelineUtil.getNodeJsx(node, focusNode?.data == node.data)\r\n                        }}\r\n                        invalidate={invalidate}\r\n                        focusNode={focusNode}\r\n                        isDisable={false}\r\n                    />\r\n                </_TreeBody>\r\n            </_TreeDiv>\r\n            <_PropsDiv>\r\n                {/* <ThemaTreeContext.Provider value={{\r\n                        node: focusNode as TreeUtil.ElementNode,\r\n                        setFocusNode: setFocusNode,\r\n                        invalidate: () => { setInvalidate({}) },\r\n                        setBackingWnd,\r\n                        dispatcher,\r\n                        treeDisable,\r\n                        setThamaData,\r\n                        setTreeDisable\r\n                    }}>\r\n                        <TabbedPane\r\n                            tabElements={[\r\n                                {\r\n                                    name: 'base', disable: true, cont: tabInner(0, <BaseFormTab\r\n                                        themaList={store.systemState.themaList}\r\n                                        addThema={(thema: ThemaUtil.LevelBase) => {\r\n                                            const themaList = store.systemState.themaList;\r\n                                            themaList.push(JSON.parse(JSON.stringify(thema)));\r\n                                            dispatcher.system.setState({ ...store.systemState, themaList });\r\n                                        }}\r\n                                    />)\r\n                                },\r\n                                { name: 'Method', disable: true, cont: tabInner(1, <MethFormTab />) },\r\n                                { name: 'Sustain', disable: true, cont: tabInner(2, <SustFormTab />) },\r\n                                { name: 'Pattern', disable: true, cont: tabInner(3, <PattFormTab />) },\r\n                                { name: 'Attribute', disable: true, cont: tabInner(4, <AttrFormTab isPattern={focusNode?.depth === 4} />) },\r\n                                { name: 'Root', disable: true, cont: tabInner(5, <RootFormTab />) },\r\n                                { name: 'voicing', disable: true, cont: tabInner(6, <VoicFormTab isPattern={focusNode?.depth === 6} />) },\r\n                            ]}\r\n                            tabRecordNum={2}\r\n                            activeNo={activeNo}\r\n                            selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n                        />\r\n                    </ThemaTreeContext.Provider> */}\r\n            </_PropsDiv>\r\n            {/* <_Blind isVisible={isBackingWnd}>\r\n                    <_Contents>{!isBackingWnd ? <></> : <BackingEditorFrame />}</_Contents>\r\n                </_Blind> */}\r\n        </_Wrap >\r\n    );\r\n}\r\n\r\nexport default TimelineTab;\r\n\r\n\r\nconst PROPS_DIV_WIDTH = 460;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    background-color: #c3d8dd;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _TreeDiv = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: calc(100% - ${PROPS_DIV_WIDTH}px);\r\n    height: 100%;\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _TreeHead = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #d5d4d8; */\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\n\r\nconst _TreeBody = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n`;\r\n\r\nconst _PropsDiv = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    /* background-color: #532fc0; */\r\n    width: ${PROPS_DIV_WIDTH}px;\r\n    height: 100%;\r\n    vertical-align: top;\r\n    box-sizing: border-box;\r\n    padding: 6px 6px 6px 0;\r\n`;\r\n\r\nconst _TabContWrap = styled.div`\r\n    display: inline-block;\r\n    /* position: relative; */\r\n    background-color: #c0c9c4;\r\n    width: calc(100% - 4px);\r\n    height: calc(100% - 4px);\r\n    margin: 2px 0 0 2px;\r\n`;\r\n\r\nconst _Blind = styled.div<{\r\n    isVisible: boolean;\r\n}>`\r\n    display: inline-block;\r\n    ${props => props.isVisible ? '' : css`\r\n        display: none;\r\n    `}\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    background-color: #0012616c;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nconst _Contents = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 630px;\r\n    /* height: 400px; */\r\n    background-color: #a3a3a3;\r\n    /* opacity: 0.9; */\r\n    overflow: hidden;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport { SCORE_TAB_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport FactoryTab from \"./factory/factoryTab\";\r\nimport ManageTab from \"./manage/manageTab\";\r\nimport PreviewTab from \"./manage/manageTab\";\r\nimport TimelineTab from \"./timeline/timelineTab\";\r\nimport Timeline from \"./timeline/timelineTab\";\r\n\r\n\r\nconst CreateChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <_Wrap>\r\n            <TabbedPane\r\n                tabElements={[\r\n                    { name: 'Manage', enable: false, cont: <ManageTab /> },\r\n                    { name: 'Launcher', enable: false, cont: <TimelineTab /> },\r\n                    { name: 'Logic', enable: true, cont: <FactoryTab /> }\r\n                ]}\r\n                activeNo={2}\r\n            // selectTabIndex={(index: number) => dispatcher.score.setScoreTabIndex(index)}\r\n            />\r\n        </_Wrap>\r\n    );\r\n}\r\nexport default CreateChannel;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${SCORE_TAB_MARGIN}px 0 0 ${SCORE_TAB_MARGIN}px;\r\n    width: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    height: calc(100% - ${SCORE_TAB_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;\r\n\r\n","import { Redirect } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst DirectView = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n    const conteseq = DataUtil.getDecryptionedScoreSeq(props.hashKey);\r\n\r\n    // const setScoreData = (owner: string, dispnam: string, data: ScoreData) => {\r\n    //     store.scoreState.focusIndex = 2;\r\n    //     store.scoreState.distIndex = store.scoreState.focusIndex;\r\n    //     dispatcher.score.setScoreState({ ...store.scoreState });\r\n    //     // dispatcher.score.setScoreTabIndex(1);\r\n    //     dispatcher.score.setScoreData(data);\r\n    //     // キャッシュの更新\r\n    //     store.scoreData = data;\r\n    //     CacheUtil.updateHarmonizeCache(store, dispatcher);\r\n    //     store.systemState.mainChannelIndex = 5;\r\n    //     store.systemState.scoreTabIndex = 0;\r\n    //     store.systemState.directScore = {\r\n    //         owner, name: dispnam\r\n    //     };\r\n    //     dispatcher.system.setState(store.systemState);\r\n    // };\r\n\r\n    useEffect(() => {\r\n        // DataUtil.findScore(conteseq).then(resList => {\r\n        //     if (resList.length > 0) {\r\n        //         const source = resList[0]['data'];\r\n        //         const owner = resList[0]['owner'];\r\n        //         const dispnam = resList[0]['dispnam'];\r\n        //         const text = DataUtil.unZip(source);\r\n        //         setScoreData(owner, dispnam, JSON.parse(text));\r\n        //     }\r\n        // });\r\n    }, []);\r\n    // if (store.systemState.directScore == null) {\r\n    //     return <></>;\r\n    // } else {\r\n    //     return <Redirect to=\"/\" />;\r\n    //     // return <MainFrame />;\r\n    // }\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nexport default DirectView;","import { Redirect } from \"react-router-dom\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\n\r\nconst DirectLogin = (props: {\r\n    hashKey: string;\r\n}) => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        const seq = DataUtil.getDecryptionedUserSeq(props.hashKey);\r\n        console.log(seq);\r\n        DataUtil.findUserInfoFromSeq(seq).then(resList => {\r\n            console.log(resList);\r\n            if (resList.length > 0) {\r\n                const loginProps = resList[0];\r\n                // store.userEnv.login = loginProps;\r\n                // dispatcher.system.setUserEnv(store.userEnv);\r\n            }\r\n        });\r\n    }, []);\r\n    // if (store.userEnv.login == null) {\r\n    //     return <></>;\r\n    // } else {\r\n    //     return <Redirect to=\"/\" />;\r\n    //     // return <MainFrame />;\r\n    // }\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nexport default DirectLogin;","\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Styles from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\n\r\n\r\ntype NotePorp = {\r\n    version: string;\r\n    date: string;\r\n    note: string;\r\n}\r\n\r\nconst ReleaseNote = () => {\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [jsx, setJsx] = useState<JSX.Element[]>([]);\r\n    useEffect(() => {\r\n        fetch('assets/release_note.json')\r\n            .then(response => response.json()) // (2) レスポンスデータを取得\r\n            .then(json => { // (3)レスポンスデータを処理\r\n                const list = json as NotePorp[];\r\n\r\n                setJsx(list.map((item, i) => {\r\n                    const record = item.note.split('\\n').map((r, i) => <span key={i}>{r}<br /></span>);\r\n                    return (\r\n                        <_Item key={i}>\r\n                            <_Header>v{item.version} ({item.date})</_Header>\r\n                            <_Detail>{record}</_Detail>\r\n                        </_Item>\r\n                    );\r\n                }));\r\n            });\r\n    }, []);\r\n\r\n    return (<_ListFrame>{jsx}</_ListFrame>);\r\n}\r\n\r\nexport default ReleaseNote;\r\n\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - ${HOME_USER_DIV_HEIGHT + 90}px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #bfcace;\r\n    border: 1px solid #9b9b9b;\r\n    border-radius: 6px;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: 20px;\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    font-weight: 600;\r\n    /* background-color: #8bdbf8; */\r\n    color: #494975;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    font-size: ${Styles.FONT_SMALL}px;\r\n    margin: 2px 0 0 4px;\r\n    /* background-color: #dafce4; */\r\n    color: #754949;\r\n`;","import { useContext, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Styles, { _CSS_LABEL_MIDIUM } from \"../../base/design/styles\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport { HOME_USER_DIV_HEIGHT } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"../entry/systemEntry\";\r\nimport ReleaseNote from \"./releaseNote\";\r\n\r\ntype scoreProps = {\r\n    dispnam: string;\r\n    seq: number;\r\n    owner: string;\r\n    lastmod: string;\r\n}\r\n\r\nconst HomeChannel = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const [userCount, setUserCount] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n    }, []);\r\n\r\n\r\n    return (<_Wrap>\r\n        <_Left>\r\n            <_MessageRecord>{userCount} users have created accounts.</_MessageRecord>\r\n            <ReleaseNote />\r\n        </_Left>\r\n        <_Right>\r\n            <_MessageRecord>{0} arts have been published.</_MessageRecord>\r\n        </_Right>\r\n    </_Wrap>);\r\n}\r\n\r\nexport default HomeChannel;\r\n\r\nexport const countUsers = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `SELECT count(*) cnt FROM user_tbl`);\r\n    const results = await response.json();\r\n    return (results as any[])[0]['cnt'] as number;\r\n};\r\n\r\nexport const findAllScore = async () => {\r\n    const response = await DataUtil.sendQueryRequestToAPI('select', `\r\n        SELECT seq, (select id from user_tbl where seq = score.user_seq) as owner, dispnam, lastmod\r\n        FROM scoretbl score\r\n        WHERE share <> 'url'\r\n        ORDER BY lastmod desc\r\n    `);\r\n    const results = await response.json();\r\n    return results as any[];\r\n};\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 8px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #ccc;\r\n`;\r\n\r\nconst _Left = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbcac7;\r\n`;\r\n\r\n\r\nconst _MessageRecord = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    color: #cd0202;\r\n    background-color: #ffffff3d;\r\n    padding: 0 0 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _ListInfoDiv = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: ${HOME_USER_DIV_HEIGHT}px;\r\n    margin: 4px 0 4px 4px;\r\n    background-color: #acacac;\r\n    border: solid 1px #1b00b3;\r\n    ${props => props.isEnable ? '' : css`\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    `}\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    color: #060053;\r\n`;\r\n\r\nconst _TitleLabel = styled.div`\r\n    display: inline-block;\r\n    height: 40px;\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    color: #1c2c95;\r\n    /* background-color: #3f80cf57; */\r\n    padding: 0 10px;\r\n`;\r\nconst _Recored = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 35px;\r\n    /* background-color: #3fcf7b56; */\r\n    padding: 4px 0 0 10px;\r\n`;\r\n\r\nconst _ItemnLabel = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: 140px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    font-weight: 600;\r\n    color: #08106e;\r\n    border: solid 1px #1b00b3;\r\n    box-sizing: border-box;\r\n    /* background-color: #85a2c5; */\r\n    background: linear-gradient(to bottom, #8a98a7, #a3bbd2, #8a98a7);\r\n    border-radius: 4px;\r\n    text-align: center;\r\n`;\r\n\r\nconst _ItemnValue = styled.div`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 30px;\r\n    user-select: text;\r\n    /* font-weight: 600; */\r\n    color: #ffffff;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #808080;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ItemnForm = styled.input`\r\n    display: inline-block;\r\n    height: calc(100% - 4px);\r\n    width: calc(100% - 170px);\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    /* font-weight: 600; */\r\n    color: #1a1a1a;\r\n    padding: 0 5px;\r\n    box-sizing: border-box;\r\n    background-color: #e9e9e9;\r\n    text-align: left;\r\n`;\r\n\r\nconst _ButtonsDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    /* background-color: #888888; */\r\n    box-sizing: border-box;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n    isEnable: boolean;\r\n}>`\r\n    ${_CSS_LABEL_MIDIUM}\r\n    /* width: 160px; */\r\n    padding: 0 40px;\r\n    /* line-height: 25px; */\r\n    box-sizing: border-box;\r\n    background-color: #a8a8a8;\r\n    background: linear-gradient(to bottom, #787878, #b4b4b4, #787878);\r\n    border: 1px solid #1a2b3f;\r\n    color: #1a2b3f;\r\n    border-radius: 4px;\r\n    margin: 5px 0 0 4px;\r\n    ${props => props.isEnable ? '' : Styles.CSS_BUTTON_DISABLE}\r\n    &:hover {\r\n        /* background-color: #98bfc2; */\r\n    background: linear-gradient(to bottom, #989898, #b4b4b4, #989898);\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst _Right = styled.div`\r\n    display: inline-block;\r\n    width: 50%;\r\n    height: 100%;\r\n    background-color: #bbbfca;\r\n    vertical-align: top;\r\n`;\r\nconst _ListFrame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 8px);\r\n    height: calc(100% - 42px);\r\n    margin: 4px 0 0 4px;\r\n    background-color: #d3d3c5;\r\n    border: 1px solid #e60000;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    overflow-y: auto;\r\n`;\r\nconst _CloudItem = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    /* height: 60px; */\r\n    border-bottom: 1px solid #888888;\r\n    /* background-color: white; */\r\n    background: linear-gradient(to bottom, transparent, #b6b6b684);\r\n    margin: 2px 0 0 0;\r\n    padding: 0 0 0 4px;\r\n    box-sizing: border-box;\r\n    /* padding-left: 4px; */\r\n    &:hover {\r\n        background: linear-gradient(to bottom, transparent, #ffffff5c);\r\n    }\r\n`;\r\n\r\nconst _Owner = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 20px;\r\n    line-height: 21px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #c9494f;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CName = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: calc(100% - 250px);\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #47417c;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;\r\nconst _CDate = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 35px;\r\n    font-size: 24px;\r\n    line-height: 36px;\r\n    font-weight: 600;\r\n    color: #417c49;\r\n    /* background-color: #f8f8e8; */\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n`;","import { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ChannelPane } from \"../../base/components/tab/channelPane\";\r\nimport { TabbedPane } from \"../../base/components/tab/tabbedPane\";\r\nimport { MAIN_FRAME_MARGIN } from \"../../utils/systemConst\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport { CgOptions, CgPiano } from 'react-icons/cg';\r\nimport { VscGitPullRequestCreate } from 'react-icons/vsc';\r\nimport { HashRouter, Redirect, Route, Switch, useLocation } from \"react-router-dom\";\r\nimport CreateChannel from \"../create/createChannel\";\r\nimport DirectView from \"./directView\";\r\nimport DirectLogin from \"./directLogin\";\r\nimport HomeChannel from \"../home/homeChannel\";\r\n\r\nconst MainFrame = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <RouterManage />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n\r\nconst RouterManage = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const query = new URLSearchParams(useLocation().search);\r\n    const str = query.get('v') as string;\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <_Wrap>\r\n                    {/* <DraggableDialog /> */}\r\n                    {/* <ExecutableButton labelText={'test'} size={'midium'} /> */}\r\n                    <ChannelPane\r\n                        tabElements={[\r\n                            { name: 'Home', icon: <AiFillHome />, isEnable: true, cont: <HomeChannel /> },\r\n                            { name: 'Create', icon: <VscGitPullRequestCreate />, isEnable: true, cont: <CreateChannel/> },\r\n                        ]}\r\n                        activeNo={0}\r\n                    // selectTabIndex={(index: number) => dispatcher.system.setMainTabIndex(index)}\r\n                    />\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/test\" exact >\r\n                <_Wrap>\r\n                </_Wrap>\r\n            </Route>\r\n            <Route path=\"/preview\" exact >\r\n                <DirectView hashKey={str} />\r\n            </Route>\r\n            <Route path=\"/user\" exact >\r\n                <DirectLogin hashKey={str} />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin: ${MAIN_FRAME_MARGIN}px 0 0 ${MAIN_FRAME_MARGIN}px;\r\n    width: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    height: calc(100% - ${MAIN_FRAME_MARGIN * 2}px);\r\n    background-color: transparent;\r\n    /* background-color: #c3d8dd6f; */\r\n    /* border: solid 1px black;\r\n    border-radius: 5px; */\r\n    /* box-shadow: 0 2px 14px 4px #000b3a48; */\r\n`;","\r\nimport { useEffect, useState } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst Splash = (props: {\r\n    remove: () => void\r\n}) => {\r\n    const [isSwitch, setSwitch] = useState<boolean>(false);\r\n    const [timerId, setTimerId] = useState<NodeJS.Timeout>();\r\n\r\n    useEffect(() => {\r\n        setTimerId(setTimeout(() => {\r\n            setSwitch(true);\r\n        }, 3000));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (isSwitch) {\r\n            setTimeout(() => {\r\n                props.remove();\r\n            }, 500);\r\n        }\r\n    }, [isSwitch]);\r\n\r\n    return (\r\n\r\n        <_Blind isSwitch={isSwitch} onClick={(e) => {\r\n            clearTimeout(timerId as NodeJS.Timeout);\r\n            setSwitch(true);\r\n        }}>\r\n            <_Frame>\r\n                <_Title>\r\n                    <span>L</span>iCreSia\r\n                </_Title>\r\n                <_NowLoading>Now Loading...</_NowLoading>\r\n                <_Copylight>Copyright © 2022 Licresia All Rights Reserved.</_Copylight>\r\n            </_Frame>\r\n        </_Blind>\r\n    );\r\n}\r\n\r\nexport default Splash;\r\n\r\nconst _Blind = styled.div<{\r\n    isSwitch: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 10;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #000f3a86;\r\n    opacity: ${props => props.isSwitch ? '0' : '1'};\r\n    transition: opacity 500ms;\r\n`;\r\nconst _Frame = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    left: calc(50% - 450px);\r\n    top: calc(50% - 300px);\r\n    z-index: 11;\r\n    width: 900px;\r\n    height: 600px;\r\n    background: radial-gradient(#868686, #ffffff);\r\n    border-radius: 8px;\r\n    border: solid 2px #cfcfcf;\r\n    box-sizing: border-box;\r\n    transition: opacity 500ms;\r\n`;\r\n\r\n\r\nconst fadeIn = keyframes`\r\n  0%, 100% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-top: 10%;\r\n    width: 100%;\r\n    /* height: 400px; */\r\n    /* background-color: #0003b69e; */\r\n    background: linear-gradient(to bottom, #99999913, #ffffff13,#ffffff13,#ffffff13, #99999913);\r\n    color: white;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    text-shadow: 1px 2px 22px #0000003d;\r\n    /* line-height: 350px; */\r\n    animation: ${fadeIn} 3s linear infinite;\r\n    /* -webkit-box-reflect:below 1px; */\r\n    -webkit-box-reflect: below 1px -webkit-gradient(\r\n      linear,left top,left bottom,\r\n      from(transparent),\r\n      color-stop(0.6, transparent),\r\n      to(#f80000));\r\n    & span {\r\n        color: red;\r\n        font-size: 160px;\r\n    }\r\n`;\r\n\r\nconst _NowLoading = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 80px;\r\n    width: 100%;\r\n    left: 20px;\r\n    color: #ffffff;\r\n    font-size: 42px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Copylight = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 20px;\r\n    color: #636363;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { TOTAL_HEADER_WIDTH } from \"../../utils/systemConst\";\r\nimport { ImUser } from 'react-icons/im'\r\nimport { MdOutlineLanguage } from 'react-icons/md'\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { GlobalContext } from \"./systemEntry\";\r\nimport DataUtil from \"../../utils/dataUtil\";\r\nimport ConfirmDialog from \"../dialog/confirmDialog\";\r\nimport LoginFrame from \"../dialog/login/loginFrame\";\r\nimport AccountFrame from \"../dialog/accountFrame\";\r\n\r\nconst TotalHeader = () => {\r\n\r\n    const { store, setStore } = useContext(GlobalContext);\r\n\r\n    const user = store.system.user;\r\n\r\n    const [userId, setUserId] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (user != null) {\r\n            setUserId('@' + user.id);\r\n        }\r\n    }, [user]);\r\n\r\n    // const authButtonJsx = loginProps == undefined ? (\r\n    //     <_LoginButton onClick={() => {\r\n    //         store.systemState.dialog = <LoginFrame />;\r\n    //         dispatcher.system.setState(store.systemState);\r\n    //         console.log(window.location.origin);\r\n    //     }}>\r\n    //         <div><ImUser /></div>\r\n    //         Login / Sign up\r\n    //     </_LoginButton>\r\n    // ) : (<>\r\n    //     <_UserName\r\n    //         isEntry={store.userEnv.login != null}\r\n    //         onClick={() => {\r\n    //             dispatcher.system.setDialog(<AccountFrame />);\r\n    //         }}\r\n    //     >{userId}</_UserName>\r\n    //     <_LoginButton onClick={() => {\r\n    //         store.userEnv.login = null;\r\n    //         dispatcher.system.setUserEnv(store.userEnv);\r\n\r\n    //         dispatcher.system.setDialog(<ConfirmDialog.Component\r\n    //             message={'Logout.\\nSee you next time!'}\r\n    //         />);\r\n    //     }}>\r\n    //         <div><ImUser /></div>\r\n    //         Logout\r\n    //     </_LoginButton>\r\n    // </>);\r\n    return (\r\n        <_Wrap>\r\n            <_Label>\r\n                <_ACCENT>Partice</_ACCENT>&nbsp;<_NORMAL>Simulator</_NORMAL>\r\n            </_Label>\r\n            <_Menu>\r\n                {/* {authButtonJsx} */}\r\n                <_Language>\r\n                    <div><MdOutlineLanguage /></div>\r\n                </_Language>\r\n            </_Menu>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default TotalHeader;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${TOTAL_HEADER_WIDTH}px;\r\n    background: linear-gradient(to bottom, #192f7e, #000540, #192f7e);\r\n    /* background-color: #c2c2c2; */\r\n    box-shadow: 0 0 8px 0 #000b3a48;\r\n`;\r\n\r\nconst _Label = styled.div`\r\n    display: inline-block;\r\n    margin: 2px 0 0 10px;\r\n    width: 200px;\r\n    height: calc(100% - 4px);\r\n    /* background-color: #00000013; */\r\n    font-size: 34px;\r\n    font-weight: 600;\r\n    line-height: 36px;\r\n    font-style: italic;\r\n    text-shadow: 1px 2px 3px #dbdbdb6a;\r\n`;\r\n\r\nconst _NORMAL = styled.span`\r\n    color: #9fc2d1;\r\n`;\r\nconst _ACCENT = styled.span`\r\n    font-size: 34px;\r\n    color: #ececec;\r\n`;\r\n\r\n\r\n\r\nconst _Menu = styled.div`\r\n    display: inline-block;\r\n    /* width: 300px; */\r\n    height: 100%;\r\n    position: absolute;\r\n    right: 30px;\r\n    /* background-color: #ff00002b; */\r\n`\r\n\r\nconst _MenuItem = styled.div`\r\n    background-color: #c9c7c7;\r\n    &:hover {\r\n        background-color: #cf9bae;\r\n    }\r\n    transition: background-color 800ms;\r\n`\r\n\r\nconst _LoginButton = styled(_MenuItem)`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    padding: 0 30px;\r\n    margin: 5px 10px 0 0;\r\n    height: calc(100% - 10px);\r\n    border-radius: 20px;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #adadad; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #ffffff;\r\n    vertical-align: top;\r\n\r\n    & div {\r\n        display: inline-block;\r\n        /* background-color: #0000007d; */\r\n        margin: 2px 5px 0 0;\r\n        vertical-align: top;\r\n    }\r\n`;\r\n\r\nconst _UserName = styled.div<{\r\n    isEntry: boolean;\r\n}>`\r\n    display: inline-block;\r\n    /* width: 240px; */\r\n    margin: 5px 20px 0 0;\r\n    height: calc(100% - 10px);\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    color: #003a86;\r\n    ${props => props.isEntry ? '' : css`\r\n        color: #96000057;\r\n    `}\r\n    vertical-align: top;\r\n`;\r\n\r\nconst _Language = styled(_MenuItem)`\r\n    display: inline-block;\r\n    width: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    height: ${TOTAL_HEADER_WIDTH - 6}px;\r\n    margin: 3px 0 0 0;\r\n    border-radius: 50%;\r\n    /* background: linear-gradient(to bottom, #e9baba, #d39d9d, #e9baba); */\r\n    /* background-color: #48aa9d; */\r\n    /* border: 1px solid #7e7e7e; */\r\n    /* box-shadow: 0 0 8px 0 #000b3a48; */\r\n    /* text-shadow: 1px 2px 3px #808080ba; */\r\n    /* text-align: center; */\r\n    font-size: 28px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    & div {\r\n        display: inline-block;\r\n        margin: 2px 0 0 5px;\r\n        /* background-color: #0000007d; */\r\n        vertical-align: top;\r\n    }\r\n`;","import { createContext, useCallback, useEffect, useReducer, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { initialStore, Store } from '../../redux/store/store';\r\nimport { MAIN_FRAME_MARGIN, TOTAL_HEADER_WIDTH } from '../../utils/systemConst';\r\nimport GloballDialog from '../dialog/globalDialog';\r\nimport MainFrame from './mainFrame';\r\nimport Splash from './splash';\r\nimport TotalHeader from './totalHeader';\r\n\r\n\r\ntype GlobalContextType = {\r\n    store: Store;\r\n    setStore: React.Dispatch<React.SetStateAction<Store>>;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst SystemEntry = () => {\r\n\r\n    const [store, setStore] = useState(initialStore);\r\n    return (\r\n        <GlobalContext.Provider value={{ store, setStore }}>\r\n            <>\r\n                {!store.system.isSplash ? <></> :\r\n                    <Splash\r\n                        remove={() => {\r\n                            setStore({...store, system: {\r\n                                ...store.system, isSplash: false\r\n                            }});\r\n                        }}\r\n                    />}\r\n                <_Wrap>\r\n                    <GloballDialog />\r\n                    <TotalHeader />\r\n                    <_MainDiv>\r\n                        <MainFrame />\r\n                    </_MainDiv>\r\n                </_Wrap>\r\n            </>\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default SystemEntry;\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #364887;\r\n`;\r\n\r\nconst _MainDiv = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - ${TOTAL_HEADER_WIDTH}px);\r\n    /* background-color: #c2c2c2; */\r\n`;","import React, { useEffect } from 'react';\nimport SystemEntry from './system/contents/entry/systemEntry';\n\nfunction App() {\n\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    // window.addEventListener(\"keydown\", function (e) {\n    //   // space and arrow keys\n    //   if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n    //     e.preventDefault();\n    //   }\n    // }, false);\n\n    document.onkeydown = (e) => {\n      // if (!['F5'].includes(e.key)) {\n      //   return false;\n      // }\n      if (e.ctrlKey && ['f', 's'].includes(e.key)) {\n        return false;\n      }\n    }\n\n  }, []);\n  return (\n    <SystemEntry />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst REACT_APP_AUTH0_DOMAIN = 'dev-a0p0m4lr.us.auth0.com';\nconst REACT_APP_AUTH0_CLIENT_ID = 'ABaWpYVBZwTr3tkyxhq1kWh2YwT4epew';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}